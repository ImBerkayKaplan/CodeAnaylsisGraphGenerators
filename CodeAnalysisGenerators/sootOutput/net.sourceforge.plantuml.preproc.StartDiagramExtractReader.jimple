public class net.sourceforge.plantuml.preproc.StartDiagramExtractReader extends java.lang.Object implements net.sourceforge.plantuml.preproc.ReadLine
{
    private final net.sourceforge.plantuml.preproc.ReadLine raw;
    private boolean finished;

    public static net.sourceforge.plantuml.preproc.StartDiagramExtractReader build(net.sourceforge.plantuml.preproc.FileWithSuffix, net.sourceforge.plantuml.StringLocated, java.nio.charset.Charset)
    {
        net.sourceforge.plantuml.preproc.StartDiagramExtractReader $r0;
        net.sourceforge.plantuml.preproc.FileWithSuffix r1;
        net.sourceforge.plantuml.StringLocated r2;
        java.nio.charset.Charset r3;
        net.sourceforge.plantuml.preproc.ReadLine $r4;
        java.lang.String $r5;

        r1 := @parameter0: net.sourceforge.plantuml.preproc.FileWithSuffix;

        r2 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r3 := @parameter2: java.nio.charset.Charset;

        $r0 = new net.sourceforge.plantuml.preproc.StartDiagramExtractReader;

        $r4 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine getReadLine(net.sourceforge.plantuml.preproc.FileWithSuffix,net.sourceforge.plantuml.StringLocated,java.nio.charset.Charset)>(r1, r2, r3);

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.preproc.FileWithSuffix: java.lang.String getSuffix()>();

        specialinvoke $r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: void <init>(net.sourceforge.plantuml.preproc.ReadLine,java.lang.String)>($r4, $r5);

        return $r0;
    }

    public static net.sourceforge.plantuml.preproc.StartDiagramExtractReader build(net.sourceforge.plantuml.security.SURL, net.sourceforge.plantuml.StringLocated, java.lang.String, java.nio.charset.Charset)
    {
        net.sourceforge.plantuml.preproc.StartDiagramExtractReader $r0;
        net.sourceforge.plantuml.security.SURL r1;
        net.sourceforge.plantuml.StringLocated r2;
        java.nio.charset.Charset r3;
        net.sourceforge.plantuml.preproc.ReadLine $r4;
        java.lang.String r5;

        r1 := @parameter0: net.sourceforge.plantuml.security.SURL;

        r2 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r5 := @parameter2: java.lang.String;

        r3 := @parameter3: java.nio.charset.Charset;

        $r0 = new net.sourceforge.plantuml.preproc.StartDiagramExtractReader;

        $r4 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine getReadLine(net.sourceforge.plantuml.security.SURL,net.sourceforge.plantuml.StringLocated,java.nio.charset.Charset)>(r1, r2, r3);

        specialinvoke $r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: void <init>(net.sourceforge.plantuml.preproc.ReadLine,java.lang.String)>($r4, r5);

        return $r0;
    }

    public static net.sourceforge.plantuml.preproc.StartDiagramExtractReader build(java.io.InputStream, net.sourceforge.plantuml.StringLocated, java.lang.String)
    {
        net.sourceforge.plantuml.preproc.StartDiagramExtractReader $r0;
        java.io.InputStream r1;
        net.sourceforge.plantuml.StringLocated r2;
        java.lang.String r3;
        net.sourceforge.plantuml.preproc.ReadLine $r4;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r3 := @parameter2: java.lang.String;

        $r0 = new net.sourceforge.plantuml.preproc.StartDiagramExtractReader;

        $r4 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine getReadLine(java.io.InputStream,net.sourceforge.plantuml.StringLocated,java.lang.String)>(r1, r2, r3);

        specialinvoke $r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: void <init>(net.sourceforge.plantuml.preproc.ReadLine,java.lang.String)>($r4, null);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.preproc.ReadLine, java.lang.String)
    {
        net.sourceforge.plantuml.preproc.StartDiagramExtractReader r0;
        java.lang.String r1, $r3, $r9, r10;
        net.sourceforge.plantuml.preproc.ReadLine r2;
        boolean $z0, $z1, $z2;
        java.io.IOException $r4;
        java.lang.StringBuilder $r6, $r7, $r8;
        int i0;
        net.sourceforge.plantuml.StringLocated $r11;

        r0 := @this: net.sourceforge.plantuml.preproc.StartDiagramExtractReader;

        r2 := @parameter0: net.sourceforge.plantuml.preproc.ReadLine;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: boolean finished> = 0;

        i0 = 0;

        r10 = null;

        if r1 == null goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("\\d+");

        if $z2 == 0 goto label1;

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

        goto label2;

     label1:
        r10 = r1;

     label2:
        if i0 >= 0 goto label3;

        i0 = 0;

     label3:
        r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine raw> = r2;

     label4:
        $r11 = interfaceinvoke r2.<net.sourceforge.plantuml.preproc.ReadLine: net.sourceforge.plantuml.StringLocated readLine()>();

        if $r11 == null goto label7;

        $r3 = virtualinvoke $r11.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.utils.StartUtils: boolean isArobaseStartDiagram(java.lang.String)>($r3);

        if $z0 == 0 goto label4;

        $z1 = specialinvoke r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: boolean checkUid(java.lang.String,net.sourceforge.plantuml.StringLocated)>(r10, $r11);

        if $z1 == 0 goto label4;

        if i0 != 0 goto label6;

     label5:
        return;

     label6:
        i0 = i0 + -1;

        goto label4;

     label7:
        goto label9;

     label8:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.io.IOException: void printStackTrace()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r9);

     label9:
        r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: boolean finished> = 1;

        return;

        catch java.io.IOException from label4 to label5 with label8;
        catch java.io.IOException from label6 to label7 with label8;
    }

    private boolean checkUid(java.lang.String, net.sourceforge.plantuml.StringLocated)
    {
        java.lang.String r0, $r2, $r7;
        net.sourceforge.plantuml.StringLocated r1;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        boolean $z0;
        net.sourceforge.plantuml.preproc.StartDiagramExtractReader r8;

        r8 := @this: net.sourceforge.plantuml.preproc.StartDiagramExtractReader;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.StringLocated;

        if r0 != null goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: java.lang.String toString()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".*id=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\W.*");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>($r7);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private static net.sourceforge.plantuml.preproc.ReadLine getReadLine(net.sourceforge.plantuml.preproc.FileWithSuffix, net.sourceforge.plantuml.StringLocated, java.nio.charset.Charset)
    {
        net.sourceforge.plantuml.preproc.FileWithSuffix r0;
        java.nio.charset.Charset r1;
        net.sourceforge.plantuml.preproc.UncommentReadLine $r2;
        java.lang.String $r3, $r9, $r11, $r14;
        net.sourceforge.plantuml.preproc.ReadLine $r4;
        net.sourceforge.plantuml.preproc.ReadLineSimple $r5, $r13;
        net.sourceforge.plantuml.StringLocated r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.io.IOException $r12;
        java.io.Reader r15;

        r0 := @parameter0: net.sourceforge.plantuml.preproc.FileWithSuffix;

        r6 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r1 := @parameter2: java.nio.charset.Charset;

     label1:
        r15 = virtualinvoke r0.<net.sourceforge.plantuml.preproc.FileWithSuffix: java.io.Reader getReader(java.nio.charset.Charset)>(r1);

        if r15 != null goto label3;

        $r5 = new net.sourceforge.plantuml.preproc.ReadLineSimple;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot open ");

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.preproc.FileWithSuffix: java.lang.String getDescription()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<net.sourceforge.plantuml.preproc.ReadLineSimple: void <init>(net.sourceforge.plantuml.StringLocated,java.lang.String)>(r6, $r11);

     label2:
        return $r5;

     label3:
        $r2 = new net.sourceforge.plantuml.preproc.UncommentReadLine;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.preproc.FileWithSuffix: java.lang.String getDescription()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.preproc.ReadLine create(java.io.Reader,java.lang.String)>(r15, $r3);

        specialinvoke $r2.<net.sourceforge.plantuml.preproc.UncommentReadLine: void <init>(net.sourceforge.plantuml.preproc.ReadLine)>($r4);

     label4:
        return $r2;

     label5:
        $r12 := @caughtexception;

        $r13 = new net.sourceforge.plantuml.preproc.ReadLineSimple;

        $r14 = virtualinvoke $r12.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r13.<net.sourceforge.plantuml.preproc.ReadLineSimple: void <init>(net.sourceforge.plantuml.StringLocated,java.lang.String)>(r6, $r14);

        return $r13;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    private static net.sourceforge.plantuml.preproc.ReadLine getReadLine(java.io.InputStream, net.sourceforge.plantuml.StringLocated, java.lang.String)
    {
        net.sourceforge.plantuml.preproc.UncommentReadLine $r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;
        java.lang.String r3;
        net.sourceforge.plantuml.preproc.ReadLine $r4;
        net.sourceforge.plantuml.StringLocated r5;

        r2 := @parameter0: java.io.InputStream;

        r5 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r3 := @parameter2: java.lang.String;

        $r0 = new net.sourceforge.plantuml.preproc.UncommentReadLine;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r2);

        $r4 = staticinvoke <net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.preproc.ReadLine create(java.io.Reader,java.lang.String)>($r1, r3);

        specialinvoke $r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: void <init>(net.sourceforge.plantuml.preproc.ReadLine)>($r4);

        return $r0;
    }

    private static net.sourceforge.plantuml.preproc.ReadLine getReadLine(net.sourceforge.plantuml.security.SURL, net.sourceforge.plantuml.StringLocated, java.nio.charset.Charset)
    {
        net.sourceforge.plantuml.security.SURL r0;
        java.io.InputStream r1;
        net.sourceforge.plantuml.preproc.UncommentReadLine $r2;
        java.io.InputStreamReader $r3;
        java.nio.charset.Charset r4;
        java.lang.String $r5;
        net.sourceforge.plantuml.preproc.ReadLine $r6;
        net.sourceforge.plantuml.preproc.ReadLineSimple $r7;
        net.sourceforge.plantuml.StringLocated r8;

        r0 := @parameter0: net.sourceforge.plantuml.security.SURL;

        r8 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r4 := @parameter2: java.nio.charset.Charset;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.security.SURL: java.io.InputStream openStream()>();

        if r1 != null goto label1;

        $r7 = new net.sourceforge.plantuml.preproc.ReadLineSimple;

        specialinvoke $r7.<net.sourceforge.plantuml.preproc.ReadLineSimple: void <init>(net.sourceforge.plantuml.StringLocated,java.lang.String)>(r8, "Cannot connect");

        return $r7;

     label1:
        $r2 = new net.sourceforge.plantuml.preproc.UncommentReadLine;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(r1, r4);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.security.SURL: java.lang.String toString()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.preproc.ReadLine create(java.io.Reader,java.lang.String)>($r3, $r5);

        specialinvoke $r2.<net.sourceforge.plantuml.preproc.UncommentReadLine: void <init>(net.sourceforge.plantuml.preproc.ReadLine)>($r6);

        return $r2;
    }

    public static boolean containsStartDiagram(net.sourceforge.plantuml.preproc.FileWithSuffix, net.sourceforge.plantuml.StringLocated, java.nio.charset.Charset) throws java.io.IOException
    {
        net.sourceforge.plantuml.preproc.FileWithSuffix r0;
        net.sourceforge.plantuml.StringLocated r1;
        java.nio.charset.Charset r2;
        net.sourceforge.plantuml.preproc.ReadLine r3;
        boolean $z0;

        r0 := @parameter0: net.sourceforge.plantuml.preproc.FileWithSuffix;

        r1 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r2 := @parameter2: java.nio.charset.Charset;

        r3 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine getReadLine(net.sourceforge.plantuml.preproc.FileWithSuffix,net.sourceforge.plantuml.StringLocated,java.nio.charset.Charset)>(r0, r1, r2);

        $z0 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: boolean containsStartDiagram(net.sourceforge.plantuml.preproc.ReadLine)>(r3);

        return $z0;
    }

    public static boolean containsStartDiagram(net.sourceforge.plantuml.security.SURL, net.sourceforge.plantuml.StringLocated, java.nio.charset.Charset) throws java.io.IOException
    {
        net.sourceforge.plantuml.security.SURL r0;
        net.sourceforge.plantuml.StringLocated r1;
        java.nio.charset.Charset r2;
        net.sourceforge.plantuml.preproc.ReadLine r3;
        boolean $z0;

        r0 := @parameter0: net.sourceforge.plantuml.security.SURL;

        r1 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r2 := @parameter2: java.nio.charset.Charset;

        r3 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine getReadLine(net.sourceforge.plantuml.security.SURL,net.sourceforge.plantuml.StringLocated,java.nio.charset.Charset)>(r0, r1, r2);

        $z0 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: boolean containsStartDiagram(net.sourceforge.plantuml.preproc.ReadLine)>(r3);

        return $z0;
    }

    public static boolean containsStartDiagram(java.io.InputStream, net.sourceforge.plantuml.StringLocated, java.lang.String) throws java.io.IOException
    {
        java.io.InputStream r0;
        net.sourceforge.plantuml.StringLocated r1;
        java.lang.String r2;
        net.sourceforge.plantuml.preproc.ReadLine r3;
        boolean $z0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: net.sourceforge.plantuml.StringLocated;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine getReadLine(java.io.InputStream,net.sourceforge.plantuml.StringLocated,java.lang.String)>(r0, r1, r2);

        $z0 = staticinvoke <net.sourceforge.plantuml.preproc.StartDiagramExtractReader: boolean containsStartDiagram(net.sourceforge.plantuml.preproc.ReadLine)>(r3);

        return $z0;
    }

    private static boolean containsStartDiagram(net.sourceforge.plantuml.preproc.ReadLine) throws java.io.IOException
    {
        net.sourceforge.plantuml.preproc.ReadLine r0;
        net.sourceforge.plantuml.StringLocated $r1;
        java.lang.String $r2;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @parameter0: net.sourceforge.plantuml.preproc.ReadLine;

     label1:
        $r1 = interfaceinvoke r0.<net.sourceforge.plantuml.preproc.ReadLine: net.sourceforge.plantuml.StringLocated readLine()>();

        if $r1 == null goto label4;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.utils.StartUtils: boolean isArobaseStartDiagram(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

     label2:
        if r0 == null goto label3;

        interfaceinvoke r0.<net.sourceforge.plantuml.preproc.ReadLine: void close()>();

     label3:
        return 1;

     label4:
        if r0 == null goto label7;

        interfaceinvoke r0.<net.sourceforge.plantuml.preproc.ReadLine: void close()>();

        goto label7;

     label5:
        $r3 := @caughtexception;

        if r0 == null goto label6;

        interfaceinvoke r0.<net.sourceforge.plantuml.preproc.ReadLine: void close()>();

     label6:
        throw $r3;

     label7:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label5;
    }

    public net.sourceforge.plantuml.StringLocated readLine() throws java.io.IOException
    {
        net.sourceforge.plantuml.preproc.StartDiagramExtractReader r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.preproc.ReadLine $r1;
        net.sourceforge.plantuml.StringLocated r2;
        java.lang.String $r3;

        r0 := @this: net.sourceforge.plantuml.preproc.StartDiagramExtractReader;

        $z0 = r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: boolean finished>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine raw>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.preproc.ReadLine: net.sourceforge.plantuml.StringLocated readLine()>();

        if r2 == null goto label2;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $z1 = staticinvoke <net.sourceforge.plantuml.utils.StartUtils: boolean isArobaseEndDiagram(java.lang.String)>($r3);

        if $z1 == 0 goto label2;

        r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: boolean finished> = 1;

        return null;

     label2:
        return r2;
    }

    public void close() throws java.io.IOException
    {
        net.sourceforge.plantuml.preproc.StartDiagramExtractReader r0;
        net.sourceforge.plantuml.preproc.ReadLine $r1;

        r0 := @this: net.sourceforge.plantuml.preproc.StartDiagramExtractReader;

        $r1 = r0.<net.sourceforge.plantuml.preproc.StartDiagramExtractReader: net.sourceforge.plantuml.preproc.ReadLine raw>;

        interfaceinvoke $r1.<net.sourceforge.plantuml.preproc.ReadLine: void close()>();

        return;
    }
}
