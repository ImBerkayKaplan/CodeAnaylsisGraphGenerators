public class org.stathissideris.ascii2image.graphics.FontMeasurer extends java.lang.Object
{
    private static final java.lang.String fontFamilyName;
    private static final boolean DEBUG;
    private static final org.stathissideris.ascii2image.graphics.FontMeasurer instance;
    java.awt.font.FontRenderContext fakeRenderContext;
    java.awt.Graphics2D fakeGraphics;

    public int getWidthFor(java.lang.String, int)
    {
        org.stathissideris.ascii2image.graphics.FontMeasurer r0;
        int i0, $i1;
        java.awt.Font r1;
        java.lang.String r2;
        java.awt.font.FontRenderContext $r3;
        java.awt.geom.Rectangle2D r4;
        double $d0;

        r0 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.Font getFontFor(int)>(i0);

        $r3 = r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.font.FontRenderContext fakeRenderContext>;

        r4 = virtualinvoke r1.<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>(r2, $r3);

        $d0 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getWidth()>();

        $i1 = (int) $d0;

        return $i1;
    }

    public int getHeightFor(java.lang.String, int)
    {
        org.stathissideris.ascii2image.graphics.FontMeasurer r0;
        int i0, $i1;
        java.awt.Font r1;
        java.lang.String r2;
        java.awt.font.FontRenderContext $r3;
        java.awt.geom.Rectangle2D r4;
        double $d0;

        r0 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 = virtualinvoke r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.Font getFontFor(int)>(i0);

        $r3 = r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.font.FontRenderContext fakeRenderContext>;

        r4 = virtualinvoke r1.<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>(r2, $r3);

        $d0 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getHeight()>();

        $i1 = (int) $d0;

        return $i1;
    }

    public int getWidthFor(java.lang.String, java.awt.Font)
    {
        java.awt.Font r0;
        java.lang.String r1;
        org.stathissideris.ascii2image.graphics.FontMeasurer r2;
        java.awt.font.FontRenderContext $r3;
        java.awt.geom.Rectangle2D r4;
        double $d0;
        int $i0;

        r2 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Font;

        $r3 = r2.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.font.FontRenderContext fakeRenderContext>;

        r4 = virtualinvoke r0.<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>(r1, $r3);

        $d0 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getWidth()>();

        $i0 = (int) $d0;

        return $i0;
    }

    public int getHeightFor(java.lang.String, java.awt.Font)
    {
        java.awt.Font r0;
        java.lang.String r1;
        org.stathissideris.ascii2image.graphics.FontMeasurer r2;
        java.awt.font.FontRenderContext $r3;
        java.awt.geom.Rectangle2D r4;
        double $d0;
        int $i0;

        r2 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Font;

        $r3 = r2.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.font.FontRenderContext fakeRenderContext>;

        r4 = virtualinvoke r0.<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>(r1, $r3);

        $d0 = virtualinvoke r4.<java.awt.geom.Rectangle2D: double getHeight()>();

        $i0 = (int) $d0;

        return $i0;
    }

    public java.awt.geom.Rectangle2D getBoundsFor(java.lang.String, java.awt.Font)
    {
        java.awt.Font r0;
        java.lang.String r1;
        org.stathissideris.ascii2image.graphics.FontMeasurer r2;
        java.awt.font.FontRenderContext $r3;
        java.awt.geom.Rectangle2D $r4;

        r2 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.awt.Font;

        $r3 = r2.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.font.FontRenderContext fakeRenderContext>;

        $r4 = virtualinvoke r0.<java.awt.Font: java.awt.geom.Rectangle2D getStringBounds(java.lang.String,java.awt.font.FontRenderContext)>(r1, $r3);

        return $r4;
    }

    public java.awt.Font getFontFor(int)
    {
        java.awt.image.BufferedImage $r0;
        org.stathissideris.ascii2image.graphics.FontMeasurer r3;
        int i0;
        java.awt.font.FontRenderContext $r4;
        java.awt.Font $r5;

        r3 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        i0 := @parameter0: int;

        $r0 = new java.awt.image.BufferedImage;

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, 1, 1);

        virtualinvoke $r0.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r4 = r3.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.font.FontRenderContext fakeRenderContext>;

        $r5 = virtualinvoke r3.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.Font getFontFor(int,java.awt.font.FontRenderContext)>(i0, $r4);

        return $r5;
    }

    public int getAscent(java.awt.Font)
    {
        org.stathissideris.ascii2image.graphics.FontMeasurer r0;
        java.awt.Font r1;
        java.awt.Graphics2D $r2, $r3;
        java.awt.FontMetrics r4;
        int $i0;

        r0 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        r1 := @parameter0: java.awt.Font;

        $r2 = r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.Graphics2D fakeGraphics>;

        virtualinvoke $r2.<java.awt.Graphics2D: void setFont(java.awt.Font)>(r1);

        $r3 = r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.Graphics2D fakeGraphics>;

        r4 = virtualinvoke $r3.<java.awt.Graphics2D: java.awt.FontMetrics getFontMetrics()>();

        $i0 = virtualinvoke r4.<java.awt.FontMetrics: int getAscent()>();

        return $i0;
    }

    public int getZHeight(java.awt.Font)
    {
        java.awt.Font r0;
        org.stathissideris.ascii2image.graphics.FontMeasurer r1;
        java.awt.font.FontRenderContext $r2;
        java.awt.font.GlyphVector $r3;
        java.awt.Shape $r4;
        java.awt.Rectangle $r5;
        double $d0;
        int i0;

        r1 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        r0 := @parameter0: java.awt.Font;

        $r2 = r1.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.font.FontRenderContext fakeRenderContext>;

        $r3 = virtualinvoke r0.<java.awt.Font: java.awt.font.GlyphVector createGlyphVector(java.awt.font.FontRenderContext,java.lang.String)>($r2, "Z");

        $r4 = virtualinvoke $r3.<java.awt.font.GlyphVector: java.awt.Shape getOutline()>();

        $r5 = interfaceinvoke $r4.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        $d0 = virtualinvoke $r5.<java.awt.Rectangle: double getHeight()>();

        i0 = (int) $d0;

        return i0;
    }

    public java.awt.Font getFontFor(int, java.lang.String)
    {
        java.awt.Font $r0, $r3, r5;
        int $i0, i1, i2, i5;
        org.stathissideris.ascii2image.graphics.FontMeasurer r1;
        java.lang.String r2;
        float $f0, $f1, f3, f4;
        byte b3, $b4;

        r1 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        i1 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.awt.Font;

        $i0 = (int) 12.0F;

        specialinvoke $r0.<java.awt.Font: void <init>(java.lang.String,int,int)>("Dialog", 1, $i0);

        i2 = virtualinvoke r1.<org.stathissideris.ascii2image.graphics.FontMeasurer: int getWidthFor(java.lang.String,java.awt.Font)>(r2, $r0);

        if i2 <= i1 goto label1;

        $f1 = 12.0F - 1.0F;

        r5 = virtualinvoke $r0.<java.awt.Font: java.awt.Font deriveFont(float)>($f1);

        f3 = 12.0F - 1.0F;

        b3 = -1;

        goto label2;

     label1:
        $f0 = 12.0F + 1.0F;

        r5 = virtualinvoke $r0.<java.awt.Font: java.awt.Font deriveFont(float)>($f0);

        f3 = 12.0F + 1.0F;

        b3 = 1;

     label2:
        $b4 = f3 cmpl 0.0F;

        if $b4 <= 0 goto label6;

        r5 = virtualinvoke r5.<java.awt.Font: java.awt.Font deriveFont(float)>(f3);

        i5 = virtualinvoke r1.<org.stathissideris.ascii2image.graphics.FontMeasurer: int getWidthFor(java.lang.String,java.awt.Font)>(r2, r5);

        if b3 != 1 goto label4;

        if i5 <= i1 goto label3;

        f4 = f3 - 1.0F;

        $r3 = virtualinvoke r5.<java.awt.Font: java.awt.Font deriveFont(float)>(f4);

        return $r3;

     label3:
        f3 = f3 + 1.0F;

        goto label2;

     label4:
        if i5 >= i1 goto label5;

        return r5;

     label5:
        f3 = f3 - 1.0F;

        goto label2;

     label6:
        return null;
    }

    public java.awt.Font getFontFor(int, java.awt.font.FontRenderContext)
    {
        java.awt.Font $r0, $r2, r5;
        int $i0, i1, i2, i5;
        org.stathissideris.ascii2image.graphics.FontMeasurer r1;
        float $f0, $f1, f3, f4;
        java.awt.font.FontRenderContext r3;
        byte b3, $b4;

        r1 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        i1 := @parameter0: int;

        r3 := @parameter1: java.awt.font.FontRenderContext;

        $r0 = new java.awt.Font;

        $i0 = (int) 12.0F;

        specialinvoke $r0.<java.awt.Font: void <init>(java.lang.String,int,int)>("Dialog", 1, $i0);

        i2 = virtualinvoke r1.<org.stathissideris.ascii2image.graphics.FontMeasurer: int getAscent(java.awt.Font)>($r0);

        if i2 <= i1 goto label1;

        $f1 = 12.0F - 1.0F;

        r5 = virtualinvoke $r0.<java.awt.Font: java.awt.Font deriveFont(float)>($f1);

        f3 = 12.0F - 1.0F;

        b3 = -1;

        goto label2;

     label1:
        $f0 = 12.0F + 1.0F;

        r5 = virtualinvoke $r0.<java.awt.Font: java.awt.Font deriveFont(float)>($f0);

        f3 = 12.0F + 1.0F;

        b3 = 1;

     label2:
        $b4 = f3 cmpl 0.0F;

        if $b4 <= 0 goto label6;

        r5 = virtualinvoke r5.<java.awt.Font: java.awt.Font deriveFont(float)>(f3);

        i5 = virtualinvoke r1.<org.stathissideris.ascii2image.graphics.FontMeasurer: int getAscent(java.awt.Font)>(r5);

        if b3 != 1 goto label4;

        if i5 <= i1 goto label3;

        f4 = f3 - 0.5F;

        $r2 = virtualinvoke r5.<java.awt.Font: java.awt.Font deriveFont(float)>(f4);

        return $r2;

     label3:
        f3 = f3 + 0.5F;

        goto label2;

     label4:
        if i5 >= i1 goto label5;

        return r5;

     label5:
        f3 = f3 - 0.5F;

        goto label2;

     label6:
        return null;
    }

    public static org.stathissideris.ascii2image.graphics.FontMeasurer instance()
    {
        org.stathissideris.ascii2image.graphics.FontMeasurer $r0;

        $r0 = <org.stathissideris.ascii2image.graphics.FontMeasurer: org.stathissideris.ascii2image.graphics.FontMeasurer instance>;

        return $r0;
    }

    public void <init>()
    {
        org.stathissideris.ascii2image.graphics.FontMeasurer r0;
        java.awt.image.BufferedImage $r1;
        java.awt.Graphics2D $r3, $r4;
        java.awt.font.FontRenderContext $r5;

        r0 := @this: org.stathissideris.ascii2image.graphics.FontMeasurer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.awt.image.BufferedImage;

        specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>(1, 1, 1);

        $r3 = virtualinvoke $r1.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.Graphics2D fakeGraphics> = $r3;

        $r4 = r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.Graphics2D fakeGraphics>;

        $r5 = virtualinvoke $r4.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: java.awt.font.FontRenderContext fakeRenderContext> = $r5;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.awt.Font $r0, r9, r10, r11, r12, r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.io.PrintStream $r1, $r2, $r3, $r4, $r5, $r6;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.String[] r7;

        r7 := @parameter0: java.lang.String[];

        $r0 = new java.awt.Font;

        $i0 = (int) 12.0F;

        specialinvoke $r0.<java.awt.Font: void <init>(java.lang.String,int,int)>("Sans", 1, $i0);

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $i1 = virtualinvoke $r0.<java.awt.Font: int getSize()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(int)>($i1);

        $f0 = 12.0F - 1.0F;

        r9 = virtualinvoke $r0.<java.awt.Font: java.awt.Font deriveFont(float)>($f0);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $i2 = virtualinvoke r9.<java.awt.Font: int getSize()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(int)>($i2);

        $f1 = $f0 - 1.0F;

        r10 = virtualinvoke r9.<java.awt.Font: java.awt.Font deriveFont(float)>($f1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $i3 = virtualinvoke r10.<java.awt.Font: int getSize()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(int)>($i3);

        $f2 = $f1 - 1.0F;

        r11 = virtualinvoke r10.<java.awt.Font: java.awt.Font deriveFont(float)>($f2);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $i4 = virtualinvoke r11.<java.awt.Font: int getSize()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(int)>($i4);

        $f3 = $f2 - 1.0F;

        r12 = virtualinvoke r11.<java.awt.Font: java.awt.Font deriveFont(float)>($f3);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $i5 = virtualinvoke r12.<java.awt.Font: int getSize()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(int)>($i5);

        $f4 = $f3 - 1.0F;

        r13 = virtualinvoke r12.<java.awt.Font: java.awt.Font deriveFont(float)>($f4);

        $r6 = <java.lang.System: java.io.PrintStream out>;

        $i6 = virtualinvoke r13.<java.awt.Font: int getSize()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(int)>($i6);

        return;
    }

    static void <clinit>()
    {
        org.stathissideris.ascii2image.graphics.FontMeasurer $r0;

        <org.stathissideris.ascii2image.graphics.FontMeasurer: boolean DEBUG> = 0;

        <org.stathissideris.ascii2image.graphics.FontMeasurer: java.lang.String fontFamilyName> = "Dialog";

        $r0 = new org.stathissideris.ascii2image.graphics.FontMeasurer;

        specialinvoke $r0.<org.stathissideris.ascii2image.graphics.FontMeasurer: void <init>()>();

        <org.stathissideris.ascii2image.graphics.FontMeasurer: org.stathissideris.ascii2image.graphics.FontMeasurer instance> = $r0;

        return;
    }
}
