public class net.sourceforge.plantuml.skin.rose.ComponentRoseReference extends net.sourceforge.plantuml.skin.AbstractTextualComponent
{
    private final int cornersize;
    private final net.sourceforge.plantuml.graphic.TextBlock textHeader;
    private final double heightFooter;
    private final double xMargin;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment position;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContextHeader;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContextBody;
    private int roundCorner;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseReference r0;
        net.sourceforge.plantuml.style.Style r1, r16;
        net.sourceforge.plantuml.cucadiagram.Display r2, $r4, $r13;
        net.sourceforge.plantuml.LineBreakStrategy $r3;
        int $i0, $i1;
        net.sourceforge.plantuml.graphic.FontConfiguration r5, r28;
        net.sourceforge.plantuml.ISkinSimple r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7, r12, $r14, $r27;
        boolean $z0;
        net.sourceforge.plantuml.graphic.SymbolContext r8, $r10, $r11, $r19, $r22;
        net.sourceforge.plantuml.ugraphic.color.HColor r9;
        net.sourceforge.plantuml.graphic.TextBlock $r15;
        net.sourceforge.plantuml.api.ThemeStyle $r17, $r20, $r25;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r18, $r21, $r26;
        net.sourceforge.plantuml.style.PName $r23;
        net.sourceforge.plantuml.style.Value $r24;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseReference;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r16 := @parameter1: net.sourceforge.plantuml.style.Style;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.FontConfiguration;

        r8 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r28 := @parameter4: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter5: net.sourceforge.plantuml.cucadiagram.Display;

        r12 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r6 := @parameter7: net.sourceforge.plantuml.ISkinSimple;

        r9 := @parameter8: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r3 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display subList(int,int)>(1, $i0);

        $r7 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, $r3, $r4, r5, $r7, 4, 4, 4, r6, 0, null, null);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double xMargin> = 2.0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double heightFooter> = 5.0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int cornersize> = 10;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int cornersize> = 10;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double heightFooter> = 5.0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double xMargin> = 2.0;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r17 = interfaceinvoke r6.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r19 = virtualinvoke r16.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r17, $r18);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextHeader> = $r19;

        $r20 = interfaceinvoke r6.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r21 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r22 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r20, $r21);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextBody> = $r22;

        $r23 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r24 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r23);

        $i1 = interfaceinvoke $r24.<net.sourceforge.plantuml.style.Value: int asInt()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner> = $i1;

        $r25 = interfaceinvoke r6.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r26 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r28 = virtualinvoke r16.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r25, $r26);

        $r27 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.HorizontalAlignment position> = $r27;

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextHeader> = r8;

        $r10 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextHeader>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withBackColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r9);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextBody> = $r11;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.HorizontalAlignment position> = r12;

     label2:
        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display subList(int,int)>(0, 1);

        $r14 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r15 = virtualinvoke $r13.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r28, $r14, r6);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.TextBlock textHeader> = $r15;

        return;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1, $r24, $r26;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.skin.rose.ComponentRoseReference r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, d34, d35, d36, $d37;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        net.sourceforge.plantuml.ugraphic.URectangle $r4, r28;
        net.sourceforge.plantuml.graphic.SymbolContext $r5, $r6, $r7, $r12;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8, $r13, $r16, $r33;
        net.sourceforge.plantuml.ugraphic.UGraphic $r9, $r14, $r18, r27, r29, r30, r31, $r34;
        net.sourceforge.plantuml.ugraphic.UPath $r10;
        net.sourceforge.plantuml.ugraphic.UStroke $r15;
        net.sourceforge.plantuml.graphic.TextBlock $r17, $r23, $r25, $r32;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r19, $r20, $r21, $r22;

        r3 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseReference;

        r27 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        r2 = interfaceinvoke r27.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d0 = specialinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double getHeaderWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        i0 = (int) $d0;

        $d1 = specialinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double getHeaderHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        i1 = (int) $d1;

        $r4 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d2 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = $d2 - 4.0;

        $r5 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextBody>;

        $d4 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        $d5 = $d3 - $d4;

        $d6 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d7 = $d6 - 5.0;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d5, $d7);

        r28 = $r4;

        $i2 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner>;

        if $i2 == 0 goto label1;

        $i20 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner>;

        $d33 = (double) $i20;

        r28 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d33);

     label1:
        $r6 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextBody>;

        $d8 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke r28.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>($d8);

        $r7 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextBody>;

        r29 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r27);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(2.0);

        $r9 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r28);

        $r10 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $i3 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner>;

        if $i3 != 0 goto label2;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        $d27 = (double) i0;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d27, 0.0);

        $d29 = (double) i0;

        $i18 = i1 - 10;

        $d28 = (double) $i18;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d29, $d28);

        $i19 = i0 - 10;

        $d31 = (double) $i19;

        $d30 = (double) i1;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d31, $d30);

        $d32 = (double) i1;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d32);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 0.0);

        goto label3;

     label2:
        $i4 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner>;

        $i5 = $i4 / 2;

        $d9 = (double) $i5;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>($d9, 0.0);

        $d10 = (double) i0;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d10, 0.0);

        $d12 = (double) i0;

        $i6 = i1 - 10;

        $d11 = (double) $i6;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d12, $d11);

        $i7 = i0 - 10;

        $d14 = (double) $i7;

        $d13 = (double) i1;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d14, $d13);

        $d15 = (double) i1;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d15);

        $i8 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner>;

        $i9 = $i8 / 2;

        $d16 = (double) $i9;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d16);

        $i10 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner>;

        $i11 = $i10 / 2;

        $d19 = (double) $i11;

        $i12 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner>;

        $i13 = $i12 / 2;

        $d18 = (double) $i13;

        $i14 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int roundCorner>;

        $i15 = $i14 / 2;

        $d17 = (double) $i15;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(double,double,double,double,double,double,double)>($d19, $d18, 0.0, 0.0, 1.0, $d17, 0.0);

     label3:
        $r12 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextHeader>;

        r30 = virtualinvoke $r12.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r29);

        $r13 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(2.0);

        $r14 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        $r15 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r31 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r17 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.TextBlock textHeader>;

        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(15.0, 2.0);

        $r18 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke $r17.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r18);

        $r20 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.HorizontalAlignment position>;

        $r19 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if $r20 != $r19 goto label4;

        $r25 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        d34 = virtualinvoke $r26.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d25 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d26 = $d25 - d34;

        d35 = $d26 / 2.0;

        goto label6;

     label4:
        $r22 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.HorizontalAlignment position>;

        $r21 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if $r22 != $r21 goto label5;

        $r23 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r24 = interfaceinvoke $r23.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        d36 = virtualinvoke $r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d21 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d22 = $d21 - d36;

        $i17 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int getMarginX2()>();

        $d23 = (double) $i17;

        $d24 = $d22 - $d23;

        d35 = $d24 - 2.0;

        goto label6;

     label5:
        $i16 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int getMarginX1()>();

        $d20 = (double) $i16;

        d35 = $d20 + 2.0;

     label6:
        $r32 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r33 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i21 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: int getMarginY()>();

        $i22 = $i21 + i1;

        $d37 = (double) $i22;

        specialinvoke $r33.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d35, $d37);

        $r34 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r33);

        interfaceinvoke $r32.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r34);

        return;
    }

    private double getHeaderHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseReference r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseReference;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.TextBlock textHeader>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = $d0 + 2.0;

        return $d1;
    }

    private double getHeaderWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseReference r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseReference;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.TextBlock textHeader>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 + 30.0;

        $d2 = $d1 + 15.0;

        return $d2;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseReference r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseReference;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double getHeaderHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = $d0 + $d1;

        $d3 = $d2 + 5.0;

        return $d3;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseReference r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.graphic.SymbolContext $r2;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseReference;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: double getHeaderWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        $d3 = $d2 + 4.0;

        $r2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: net.sourceforge.plantuml.graphic.SymbolContext symbolContextBody>;

        $d4 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        $d5 = $d3 + $d4;

        return $d5;
    }
}
