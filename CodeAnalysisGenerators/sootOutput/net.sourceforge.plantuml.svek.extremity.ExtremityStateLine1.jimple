class net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1 extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private net.sourceforge.plantuml.ugraphic.UPolygon polygon;
    private final java.awt.geom.Point2D dest;
    private final double radius;
    private final double angle;

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1 r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        return $r1;
    }

    public void <init>(double, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1 r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1, $r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.awt.geom.Point2D$Double $r3;
        java.awt.geom.Point2D r4;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1;

        d0 := @parameter0: double;

        r4 := @parameter1: java.awt.geom.Point2D;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: double radius> = 7.0;

        $r1 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r1;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: double radius> = 7.0;

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: double manageround(double)>(d0);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: double angle> = $d1;

        $r2 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $r3 = new java.awt.geom.Point2D$Double;

        $d2 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d2, $d3);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest> = $r3;

        $r5 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-9.0, -4.0);

        $r6 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-5.0, 0.0);

        $r7 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-9.0, 4.0);

        $r8 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $r9 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d4 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: double angle>;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>($d4);

        $r10 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d5 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        $d6 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: net.sourceforge.plantuml.ugraphic.UPolygon translate(double,double)>($d5, $d6);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r11;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UParam $r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;
        net.sourceforge.plantuml.ugraphic.UBackground $r2, $r9;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, $r6, $r11, $r15, r29, r30;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r12;
        net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1 r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        net.sourceforge.plantuml.ugraphic.UPolygon $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r8;
        net.sourceforge.plantuml.ugraphic.UStroke $r10;
        java.awt.geom.Point2D $r13, $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        net.sourceforge.plantuml.ugraphic.UEllipse $r16;

        r5 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1;

        r29 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r1 = interfaceinvoke $r0.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r3 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: double angle>;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d3 = -7.0 * $d1;

        $d2 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: double angle>;

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d5 = -7.0 * $d4;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, $d5);

        $r6 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r7 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        $r8 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r30 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r10 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r11 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r13 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d6 = virtualinvoke $r13.<java.awt.geom.Point2D: double getX()>();

        $d7 = $d6 - 7.0;

        $r14 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d8 = virtualinvoke $r14.<java.awt.geom.Point2D: double getY()>();

        $d9 = $d8 - 7.0;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, $d9);

        $r15 = interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r16 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(14.0, 14.0);

        interfaceinvoke $r15.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r16);

        $r17 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d10 = virtualinvoke $r17.<java.awt.geom.Point2D: double getX()>();

        $r18 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d11 = virtualinvoke $r18.<java.awt.geom.Point2D: double getY()>();

        $r19 = specialinvoke r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D getPointOnCircle(double,double,double)>($d10, $d11, 0.7853981633974483);

        $r20 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d12 = virtualinvoke $r20.<java.awt.geom.Point2D: double getX()>();

        $r21 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d13 = virtualinvoke $r21.<java.awt.geom.Point2D: double getY()>();

        $r22 = specialinvoke r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D getPointOnCircle(double,double,double)>($d12, $d13, 3.9269908169872414);

        staticinvoke <net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r30, $r19, $r22);

        $r23 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d14 = virtualinvoke $r23.<java.awt.geom.Point2D: double getX()>();

        $r24 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d15 = virtualinvoke $r24.<java.awt.geom.Point2D: double getY()>();

        $r25 = specialinvoke r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D getPointOnCircle(double,double,double)>($d14, $d15, -0.7853981633974483);

        $r26 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d16 = virtualinvoke $r26.<java.awt.geom.Point2D: double getX()>();

        $r27 = r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D dest>;

        $d17 = virtualinvoke $r27.<java.awt.geom.Point2D: double getY()>();

        $r28 = specialinvoke r5.<net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: java.awt.geom.Point2D getPointOnCircle(double,double,double)>($d16, $d17, 2.356194490192345);

        staticinvoke <net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r30, $r25, $r28);

        return;
    }

    private java.awt.geom.Point2D getPointOnCircle(double, double, double)
    {
        double d0, d1, $d2, $d3, d4, d5, $d6, $d7, d8;
        java.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1 r1;

        r1 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityStateLine1;

        d0 := @parameter0: double;

        d5 := @parameter1: double;

        d1 := @parameter2: double;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>(d1);

        $d3 = 7.0 * $d2;

        d4 = d0 + $d3;

        $d6 = staticinvoke <java.lang.Math: double sin(double)>(d1);

        $d7 = 7.0 * $d6;

        d8 = d5 + $d7;

        $r0 = new java.awt.geom.Point2D$Double;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d4, d8);

        return $r0;
    }

    private static void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.ugraphic.ULine $r5;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: java.awt.geom.Point2D;

        r0 := @parameter2: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        d5 = $d3 - $d4;

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d6 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d7 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d6, $d7);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.ULine;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>(d2, d5);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        return;
    }
}
