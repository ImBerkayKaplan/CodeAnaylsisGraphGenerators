public class net.sourceforge.plantuml.BasicEnsureVisible extends java.lang.Object implements net.sourceforge.plantuml.EnsureVisible
{
    private double minX;
    private double maxX;
    private double minY;
    private double maxY;

    public void <init>()
    {
        net.sourceforge.plantuml.BasicEnsureVisible r0;

        r0 := @this: net.sourceforge.plantuml.BasicEnsureVisible;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minX> = 1.7976931348623157E308;

        r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxX> = -1.7976931348623157E308;

        r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minY> = 1.7976931348623157E308;

        r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxY> = -1.7976931348623157E308;

        return;
    }

    public void ensureVisible(double, double)
    {
        double d0, $d1, $d2, d3, $d4, $d5;
        net.sourceforge.plantuml.BasicEnsureVisible r0;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: net.sourceforge.plantuml.BasicEnsureVisible;

        d0 := @parameter0: double;

        d3 := @parameter1: double;

        $d1 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxX>;

        $b0 = d0 cmpl $d1;

        if $b0 <= 0 goto label1;

        r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxX> = d0;

     label1:
        $d2 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minX>;

        $b1 = d0 cmpg $d2;

        if $b1 >= 0 goto label2;

        r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minX> = d0;

     label2:
        $d4 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxY>;

        $b2 = d3 cmpl $d4;

        if $b2 <= 0 goto label3;

        r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxY> = d3;

     label3:
        $d5 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minY>;

        $b3 = d3 cmpg $d5;

        if $b3 >= 0 goto label4;

        r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minY> = d3;

     label4:
        return;
    }

    public boolean hasData()
    {
        net.sourceforge.plantuml.BasicEnsureVisible r0;
        double $d0;
        byte $b0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.BasicEnsureVisible;

        $d0 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minX>;

        $b0 = $d0 cmpl 1.7976931348623157E308;

        if $b0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getCoords(double)
    {
        net.sourceforge.plantuml.BasicEnsureVisible r0;
        double $d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        byte $b0;
        int i1, i2, i3, i4;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: net.sourceforge.plantuml.BasicEnsureVisible;

        d1 := @parameter0: double;

        $d0 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minX>;

        $b0 = $d0 cmpl 1.7976931348623157E308;

        if $b0 != 0 goto label1;

        return "0,0,0,0";

     label1:
        $d2 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minX>;

        $d3 = $d2 * d1;

        i1 = (int) $d3;

        $d4 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minY>;

        $d5 = $d4 * d1;

        i2 = (int) $d5;

        $d6 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxX>;

        $d7 = $d6 * d1;

        i3 = (int) $d7;

        $d8 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxY>;

        $d9 = $d8 * d1;

        i4 = (int) $d9;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public double getSurface()
    {
        net.sourceforge.plantuml.BasicEnsureVisible r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte $b0;

        r0 := @this: net.sourceforge.plantuml.BasicEnsureVisible;

        $d0 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minX>;

        $b0 = $d0 cmpl 1.7976931348623157E308;

        if $b0 != 0 goto label1;

        return 0.0;

     label1:
        $d2 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxX>;

        $d1 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minX>;

        $d6 = $d2 - $d1;

        $d4 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double maxY>;

        $d3 = r0.<net.sourceforge.plantuml.BasicEnsureVisible: double minY>;

        $d5 = $d4 - $d3;

        $d7 = $d6 * $d5;

        return $d7;
    }
}
