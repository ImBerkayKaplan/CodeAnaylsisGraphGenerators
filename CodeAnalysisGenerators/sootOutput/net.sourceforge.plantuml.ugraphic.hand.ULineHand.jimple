public class net.sourceforge.plantuml.ugraphic.hand.ULineHand extends java.lang.Object
{
    private net.sourceforge.plantuml.ugraphic.UPath path;

    public void <init>(net.sourceforge.plantuml.ugraphic.ULine, java.util.Random)
    {
        net.sourceforge.plantuml.ugraphic.hand.ULineHand r0;
        net.sourceforge.plantuml.ugraphic.ULine r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.hand.HandJiggle $r2;
        java.util.Random r3;
        net.sourceforge.plantuml.ugraphic.UPath $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.hand.ULineHand;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ULine;

        r3 := @parameter1: java.util.Random;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        d0 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.ULine: double getDX()>();

        d1 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.ULine: double getDY()>();

        $r2 = new net.sourceforge.plantuml.ugraphic.hand.HandJiggle;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void <init>(double,double,double,java.util.Random)>(0.0, 0.0, 2.0, r3);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>(d0, d1);

        $r5 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: net.sourceforge.plantuml.ugraphic.UPath toUPath()>();

        r0.<net.sourceforge.plantuml.ugraphic.hand.ULineHand: net.sourceforge.plantuml.ugraphic.UPath path> = $r5;

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UPath getHanddrawn()
    {
        net.sourceforge.plantuml.ugraphic.hand.ULineHand r0;
        net.sourceforge.plantuml.ugraphic.UPath $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.hand.ULineHand;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.hand.ULineHand: net.sourceforge.plantuml.ugraphic.UPath path>;

        return $r1;
    }
}
