class net.sourceforge.plantuml.swing.AboutWindow extends javax.swing.JFrame
{

    public void <init>()
    {
        net.sourceforge.plantuml.swing.AboutWindow r0;
        java.awt.image.BufferedImage $r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7;
        javax.swing.JPanel $r8;
        java.awt.GridLayout $r9;
        javax.swing.JComponent $r11, $r13, $r16, $r19;
        java.awt.Container $r15, $r17, $r18, $r20;

        r0 := @this: net.sourceforge.plantuml.swing.AboutWindow;

        specialinvoke r0.<javax.swing.JFrame: void <init>()>();

        $r1 = staticinvoke <net.sourceforge.plantuml.version.PSystemVersion: java.awt.image.BufferedImage getPlantumlSmallIcon2()>();

        virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: void setIconImage(java.awt.Image)>($r1);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("About PlantUML (");

        $r4 = staticinvoke <net.sourceforge.plantuml.version.Version: java.lang.String versionString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: void setTitle(java.lang.String)>($r7);

        $r8 = new javax.swing.JPanel;

        $r9 = new java.awt.GridLayout;

        specialinvoke $r9.<java.awt.GridLayout: void <init>(int,int)>(2, 1);

        specialinvoke $r8.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r9);

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: javax.swing.JComponent getInfoVersion()>();

        virtualinvoke $r8.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r11);

        $r13 = specialinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: javax.swing.JComponent getInfoAuthors()>();

        virtualinvoke $r8.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r13);

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: java.awt.Container getContentPane()>();

        $r16 = specialinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: javax.swing.JComponent getNorthLabel()>();

        virtualinvoke $r15.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r16, "North");

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: java.awt.Container getContentPane()>();

        virtualinvoke $r17.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r8, "Center");

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: java.awt.Container getContentPane()>();

        $r19 = specialinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: javax.swing.JComponent getSouthLabel()>();

        virtualinvoke $r18.<java.awt.Container: void add(java.awt.Component,java.lang.Object)>($r19, "South");

        virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: void pack()>();

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: java.awt.Container getParent()>();

        virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: void setLocationRelativeTo(java.awt.Component)>($r20);

        virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: void setVisible(boolean)>(1);

        virtualinvoke r0.<net.sourceforge.plantuml.swing.AboutWindow: void setDefaultCloseOperation(int)>(2);

        return;
    }

    private javax.swing.JComponent getNorthLabel()
    {
        javax.swing.JLabel $r0, $r13;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        java.awt.Font $r8, r9;
        javax.swing.JPanel $r10, $r17;
        javax.swing.ImageIcon $r14;
        java.awt.image.BufferedImage $r15;
        java.awt.BorderLayout $r18;
        net.sourceforge.plantuml.swing.AboutWindow r20;

        r20 := @this: net.sourceforge.plantuml.swing.AboutWindow;

        $r0 = new javax.swing.JLabel;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PlantUML (");

        $r3 = staticinvoke <net.sourceforge.plantuml.version.Version: java.lang.String versionString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<javax.swing.JLabel: void <init>(java.lang.String)>($r6);

        $r8 = virtualinvoke $r0.<javax.swing.JLabel: java.awt.Font getFont()>();

        r9 = virtualinvoke $r8.<java.awt.Font: java.awt.Font deriveFont(int,float)>(1, 20.0F);

        virtualinvoke $r0.<javax.swing.JLabel: void setFont(java.awt.Font)>(r9);

        $r10 = new javax.swing.JPanel;

        specialinvoke $r10.<javax.swing.JPanel: void <init>()>();

        virtualinvoke $r10.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r0);

        $r13 = new javax.swing.JLabel;

        $r14 = new javax.swing.ImageIcon;

        $r15 = staticinvoke <net.sourceforge.plantuml.version.PSystemVersion: java.awt.image.BufferedImage getPlantumlImage()>();

        specialinvoke $r14.<javax.swing.ImageIcon: void <init>(java.awt.Image)>($r15);

        specialinvoke $r13.<javax.swing.JLabel: void <init>(javax.swing.Icon)>($r14);

        $r17 = new javax.swing.JPanel;

        $r18 = new java.awt.BorderLayout;

        specialinvoke $r18.<java.awt.BorderLayout: void <init>()>();

        specialinvoke $r17.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>($r18);

        virtualinvoke $r17.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r10, "Center");

        virtualinvoke $r17.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r13, "East");

        return $r17;
    }

    private javax.swing.JComponent getSouthLabel()
    {
        javax.swing.JPanel $r0;
        javax.swing.JButton $r2, $r6;
        net.sourceforge.plantuml.swing.AboutWindow$1 $r4;
        net.sourceforge.plantuml.swing.AboutWindow r5;
        net.sourceforge.plantuml.swing.AboutWindow$2 $r8;

        r5 := @this: net.sourceforge.plantuml.swing.AboutWindow;

        $r0 = new javax.swing.JPanel;

        specialinvoke $r0.<javax.swing.JPanel: void <init>()>();

        $r2 = new javax.swing.JButton;

        specialinvoke $r2.<javax.swing.JButton: void <init>(java.lang.String)>("License");

        $r4 = new net.sourceforge.plantuml.swing.AboutWindow$1;

        specialinvoke $r4.<net.sourceforge.plantuml.swing.AboutWindow$1: void <init>(net.sourceforge.plantuml.swing.AboutWindow)>(r5);

        virtualinvoke $r2.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r4);

        $r6 = new javax.swing.JButton;

        specialinvoke $r6.<javax.swing.JButton: void <init>(java.lang.String)>("OK");

        $r8 = new net.sourceforge.plantuml.swing.AboutWindow$2;

        specialinvoke $r8.<net.sourceforge.plantuml.swing.AboutWindow$2: void <init>(net.sourceforge.plantuml.swing.AboutWindow)>(r5);

        virtualinvoke $r6.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r8);

        virtualinvoke $r0.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r2);

        virtualinvoke $r0.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r6);

        return $r0;
    }

    private javax.swing.JComponent getInfoVersion()
    {
        net.sourceforge.plantuml.core.UmlSource $r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.version.PSystemVersion r2;
        net.sourceforge.plantuml.swing.AboutWindow r3;
        java.util.List $r4, $r5;
        javax.swing.JComponent $r6;

        r3 := @this: net.sourceforge.plantuml.swing.AboutWindow;

        $r0 = new net.sourceforge.plantuml.core.UmlSource;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke $r0.<net.sourceforge.plantuml.core.UmlSource: void <init>(java.util.List,boolean)>($r1, 0);

        r2 = staticinvoke <net.sourceforge.plantuml.version.PSystemVersion: net.sourceforge.plantuml.version.PSystemVersion createShowVersion2(net.sourceforge.plantuml.core.UmlSource)>($r0);

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.version.PSystemVersion: java.util.List getLines()>();

        $r5 = specialinvoke r3.<net.sourceforge.plantuml.swing.AboutWindow: java.util.List skip(java.util.List)>($r4);

        $r6 = specialinvoke r3.<net.sourceforge.plantuml.swing.AboutWindow: javax.swing.JComponent getJComponent(java.util.List)>($r5);

        return $r6;
    }

    private javax.swing.JComponent getInfoAuthors()
    {
        net.sourceforge.plantuml.core.UmlSource $r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.version.PSystemVersion r2;
        net.sourceforge.plantuml.swing.AboutWindow r3;
        java.util.List $r4, $r5;
        javax.swing.JComponent $r6;

        r3 := @this: net.sourceforge.plantuml.swing.AboutWindow;

        $r0 = new net.sourceforge.plantuml.core.UmlSource;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke $r0.<net.sourceforge.plantuml.core.UmlSource: void <init>(java.util.List,boolean)>($r1, 0);

        r2 = staticinvoke <net.sourceforge.plantuml.version.PSystemVersion: net.sourceforge.plantuml.version.PSystemVersion createShowAuthors2(net.sourceforge.plantuml.core.UmlSource)>($r0);

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.version.PSystemVersion: java.util.List getLines()>();

        $r5 = specialinvoke r3.<net.sourceforge.plantuml.swing.AboutWindow: java.util.List skip(java.util.List)>($r4);

        $r6 = specialinvoke r3.<net.sourceforge.plantuml.swing.AboutWindow: javax.swing.JComponent getJComponent(java.util.List)>($r5);

        return $r6;
    }

    private java.util.List skip(java.util.List)
    {
        java.util.List r0, $r1;
        int $i0;
        net.sourceforge.plantuml.swing.AboutWindow r2;

        r2 := @this: net.sourceforge.plantuml.swing.AboutWindow;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $r1 = interfaceinvoke r0.<java.util.List: java.util.List subList(int,int)>(2, $i0);

        return $r1;
    }

    private javax.swing.JComponent getJComponent(java.util.List)
    {
        java.lang.StringBuilder $r0, $r14, $r15, $r16;
        java.util.List r2;
        boolean $z0;
        javax.swing.JEditorPane $r4;
        java.lang.String $r5, $r17, r21;
        javax.swing.border.CompoundBorder $r6, $r9;
        javax.swing.border.Border $r7, $r8;
        net.sourceforge.plantuml.swing.AboutWindow r10;
        java.awt.Color $r11;
        javax.swing.border.MatteBorder $r12;
        java.lang.Object $r13;
        java.util.Iterator r20;

        r10 := @this: net.sourceforge.plantuml.swing.AboutWindow;

        r2 := @parameter0: java.util.List;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("<html>");

        r20 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r13 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.String) $r13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r21);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</b></i></u>");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<br>");

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</html>");

        $r4 = new javax.swing.JEditorPane;

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<javax.swing.JEditorPane: void <init>(java.lang.String,java.lang.String)>("text/html", $r5);

        virtualinvoke $r4.<javax.swing.JEditorPane: void setEditable(boolean)>(0);

        $r6 = new javax.swing.border.CompoundBorder;

        $r7 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder(int)>(0);

        $r8 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        specialinvoke $r6.<javax.swing.border.CompoundBorder: void <init>(javax.swing.border.Border,javax.swing.border.Border)>($r7, $r8);

        $r9 = new javax.swing.border.CompoundBorder;

        $r11 = virtualinvoke r10.<net.sourceforge.plantuml.swing.AboutWindow: java.awt.Color getBackground()>();

        $r12 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.MatteBorder createMatteBorder(int,int,int,int,java.awt.Color)>(5, 5, 5, 5, $r11);

        specialinvoke $r9.<javax.swing.border.CompoundBorder: void <init>(javax.swing.border.Border,javax.swing.border.Border)>($r12, $r6);

        virtualinvoke $r4.<javax.swing.JEditorPane: void setBorder(javax.swing.border.Border)>($r9);

        return $r4;
    }

    public static void main(java.lang.String[])
    {
        net.sourceforge.plantuml.swing.AboutWindow $r0;
        java.lang.String[] r1;

        r1 := @parameter0: java.lang.String[];

        $r0 = new net.sourceforge.plantuml.swing.AboutWindow;

        specialinvoke $r0.<net.sourceforge.plantuml.swing.AboutWindow: void <init>()>();

        return;
    }
}
