class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.activitydiagram3.Branch branch;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.Branch)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, $r3;
        net.sourceforge.plantuml.activitydiagram3.Branch r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.activitydiagram3.Branch;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0> = r1;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r3, r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.Branch branch> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks $r3, $r6, $r15, $r17;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r5;
        net.sourceforge.plantuml.ugraphic.UTranslate r7;
        java.awt.geom.Point2D $r8, r9, $r10, r11, $r12, r13, r14;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, d7, d8, $d9, $d10, d11;
        net.sourceforge.plantuml.ISkinParam $r16;
        net.sourceforge.plantuml.graphic.Rainbow $r18;
        net.sourceforge.plantuml.ugraphic.UPolygon $r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r20, r24;
        net.sourceforge.plantuml.activitydiagram3.Branch $r21;
        net.sourceforge.plantuml.graphic.TextBlock $r22;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r23;
        byte $b0, $b1;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r4 = $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointB()>();

        r9 = virtualinvoke r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r8);

        $r10 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointC()>();

        r11 = virtualinvoke r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r10);

        $r12 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointD()>();

        r13 = virtualinvoke r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r12);

        r14 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r14.<java.awt.geom.Point2D: double getX()>();

        d1 = virtualinvoke r14.<java.awt.geom.Point2D: double getY()>();

        $r15 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r17 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r18 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.graphic.Rainbow access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks)>($r17);

        $r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r20 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r16, $r18, $r19);

        $r21 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.Branch branch>;

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlockPositive()>();

        $r23 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment CENTER>;

        r24 = virtualinvoke $r20.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.VerticalAlignment)>($r22, $r23);

        $d2 = virtualinvoke r13.<java.awt.geom.Point2D: double getX()>();

        $d3 = $d2 - 10.0;

        $b0 = d0 cmpg $d3;

        if $b0 < 0 goto label1;

        $d5 = virtualinvoke r9.<java.awt.geom.Point2D: double getX()>();

        $d6 = $d5 + 10.0;

        $b1 = d0 cmpl $d6;

        if $b1 <= 0 goto label2;

     label1:
        $d4 = virtualinvoke r13.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, $d4);

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

        goto label3;

     label2:
        d7 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        d8 = virtualinvoke r11.<java.awt.geom.Point2D: double getY()>();

        $d9 = d8 * 2.0;

        $d10 = $d9 + d1;

        d11 = $d10 / 3.0;

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d7, d8);

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d7, d11);

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d11);

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

     label3:
        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r24);

        return;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r5;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        java.awt.geom.Point2D $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks this$0>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOf(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        $r8 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }
}
