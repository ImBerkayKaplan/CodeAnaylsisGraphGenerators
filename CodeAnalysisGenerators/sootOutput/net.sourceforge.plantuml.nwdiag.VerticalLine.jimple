public class net.sourceforge.plantuml.nwdiag.VerticalLine extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final double y1;
    private final double y2;
    private final java.util.Set skip;
    static final boolean $assertionsDisabled;

    public void <init>(double, double, java.util.Set)
    {
        net.sourceforge.plantuml.nwdiag.VerticalLine r0;
        double d0, d1, $d2, $d3;
        java.util.Set r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.VerticalLine;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1);

        r0.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y1> = $d2;

        $d3 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        r0.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y2> = $d3;

        r0.<net.sourceforge.plantuml.nwdiag.VerticalLine: java.util.Set skip> = r1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r0;
        net.sourceforge.plantuml.ugraphic.UBackground $r1;
        net.sourceforge.plantuml.nwdiag.VerticalLine r2;
        net.sourceforge.plantuml.ugraphic.UPath $r3, $r8, r12;
        java.util.Set $r4;
        java.util.Iterator r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18, d19;
        java.lang.Object $r6;
        java.lang.Double r7;
        byte $b0, $b1, $b2, $b3, $b4;
        boolean $z0, z1, $z2;
        java.lang.AssertionError $r9;
        net.sourceforge.plantuml.ugraphic.UGraphic r10, r11;

        r2 := @this: net.sourceforge.plantuml.nwdiag.VerticalLine;

        r10 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r1 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r11 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        z1 = 0;

        d18 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y1>;

        $r3 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        r12 = $r3;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, d18);

        $r4 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: java.util.Set skip>;

        r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Double) $r6;

        $d1 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d2 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y1>;

        $b0 = $d1 cmpg $d2;

        if $b0 >= 0 goto label2;

        goto label1;

     label2:
        $z0 = <net.sourceforge.plantuml.nwdiag.VerticalLine: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $d16 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d17 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y1>;

        $b4 = $d16 cmpl $d17;

        if $b4 >= 0 goto label3;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label3:
        z1 = 1;

        $d3 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d4 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y2>;

        $b1 = $d3 cmpl $d4;

        if $b1 != 0 goto label4;

        $d15 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y2>;

        virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d15);

        goto label5;

     label4:
        $d5 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y2>;

        $d6 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d7 = $d6 - 3.0;

        $d8 = staticinvoke <java.lang.Math: double min(double,double)>($d5, $d7);

        virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d8);

        $d9 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y2>;

        $d10 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $b2 = $d9 cmpl $d10;

        if $b2 <= 0 goto label5;

        $d13 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        $d14 = $d13 + 9.0;

        virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(double,double,double,double,double,double,double)>(4.0, 4.0, 0.0, 0.0, 1.0, 0.0, $d14);

        goto label1;

     label5:
        interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r12);

        $r8 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        r12 = $r8;

        $d11 = virtualinvoke r7.<java.lang.Double: double doubleValue()>();

        d19 = $d11 + 9.0;

        virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, d19);

        $d12 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y2>;

        $b3 = d19 cmpl $d12;

        if $b3 < 0 goto label6;

        goto label7;

     label6:
        goto label1;

     label7:
        if z1 != 0 goto label8;

        $d0 = r2.<net.sourceforge.plantuml.nwdiag.VerticalLine: double y2>;

        virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d0);

        interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r12);

     label8:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/nwdiag/VerticalLine;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.nwdiag.VerticalLine: boolean $assertionsDisabled> = $z1;

        return;
    }
}
