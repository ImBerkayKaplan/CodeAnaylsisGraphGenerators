public class net.sourceforge.plantuml.svek.HeaderLayout extends java.lang.Object
{
    private final net.sourceforge.plantuml.graphic.TextBlock name;
    private final net.sourceforge.plantuml.graphic.TextBlock stereo;
    private final net.sourceforge.plantuml.graphic.TextBlock generic;
    private final net.sourceforge.plantuml.graphic.TextBlock circledCharacter;
    static final boolean $assertionsDisabled;

    public void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.svek.HeaderLayout r0;
        net.sourceforge.plantuml.graphic.TextBlock r1, $r2, r3, $r4, r5, $r6, r7, $r8;

        r0 := @this: net.sourceforge.plantuml.svek.HeaderLayout;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r7 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock protectAgaintNull(net.sourceforge.plantuml.graphic.TextBlock)>(r1);

        r0.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock circledCharacter> = $r2;

        $r4 = staticinvoke <net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock protectAgaintNull(net.sourceforge.plantuml.graphic.TextBlock)>(r3);

        r0.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock stereo> = $r4;

        $r6 = staticinvoke <net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock protectAgaintNull(net.sourceforge.plantuml.graphic.TextBlock)>(r5);

        r0.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock name> = $r6;

        $r8 = staticinvoke <net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock protectAgaintNull(net.sourceforge.plantuml.graphic.TextBlock)>(r7);

        r0.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock generic> = $r8;

        return;
    }

    private static net.sourceforge.plantuml.graphic.TextBlock protectAgaintNull(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0;
        net.sourceforge.plantuml.graphic.TextBlockEmpty $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        if r0 != null goto label1;

        $r1 = new net.sourceforge.plantuml.graphic.TextBlockEmpty;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.TextBlockEmpty: void <init>()>();

        return $r1;

     label1:
        return r0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.HeaderLayout r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r4, $r6, $r8;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r5, r7, r9;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        net.sourceforge.plantuml.Dimension2DDouble $r10;

        r0 := @this: net.sourceforge.plantuml.svek.HeaderLayout;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock name>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock generic>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = r0.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = r0.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock circledCharacter>;

        r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d2);

        $d4 = $d0 + $d3;

        $d5 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d6 = $d4 + $d5;

        $d7 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d8 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d9 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d10 = $d8 + $d9;

        $d11 = $d10 + 10.0;

        $d12 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d13 = staticinvoke <net.sourceforge.plantuml.utils.MathUtils: double max(double,double,double)>($d7, $d11, $d12);

        $r10 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r10.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d6, d13);

        return $r10;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r13, $r16, $r19, $r22;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.svek.HeaderLayout r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3, $r5, $r7, $r9, $r12, $r15, $r18, $r21;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4, r6, r8, r10;
        double $d0, $d1, d2, d3, $d4, $d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, d13, $d14, d15, d17, $d18, $d19, d20, $d21, $d22, $d23, d24, $d25, $d26, $d27, $d28, $d29, $d30, d31, d32, $d33, $d34, $d35, $d36, $d37, $d38, d39, $d40, $d41, d42, $d43, $d45, $d46, d47;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r11, $r14, $r17, $r20;
        byte $b0, $b1, $b2, $b3;
        java.lang.AssertionError $r23, $r24, $r25;

        r2 := @this: net.sourceforge.plantuml.svek.HeaderLayout;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d3 := @parameter1: double;

        d17 := @parameter2: double;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock name>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r2.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock generic>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = r2.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r9 = r2.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock circledCharacter>;

        r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        $d4 = virtualinvoke r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = d3 - $d4;

        $d6 = $d5 - d2;

        $d7 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d8 = $d6 - $d7;

        d9 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d8);

        $z0 = <net.sourceforge.plantuml.svek.HeaderLayout: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b3 = d9 cmpl 0.0;

        if $b3 >= 0 goto label1;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label1:
        $d10 = virtualinvoke r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d12 = $d10 / 4.0;

        $d11 = d9 * 0.1;

        d13 = staticinvoke <java.lang.Math: double min(double,double)>($d12, $d11);

        $d14 = d9 - d13;

        d15 = $d14 / 2.0;

        $z1 = <net.sourceforge.plantuml.svek.HeaderLayout: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $b2 = d15 cmpl 0.0;

        if $b2 >= 0 goto label2;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label2:
        $z2 = <net.sourceforge.plantuml.svek.HeaderLayout: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $b1 = d13 cmpl 0.0;

        if $b1 >= 0 goto label3;

        $r23 = new java.lang.AssertionError;

        specialinvoke $r23.<java.lang.AssertionError: void <init>()>();

        throw $r23;

     label3:
        $d18 = virtualinvoke r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d19 = d17 - $d18;

        d20 = $d19 / 2.0;

        $r12 = r2.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock circledCharacter>;

        $r11 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d15, d20);

        $r13 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        interfaceinvoke $r12.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r13);

        $d21 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d22 = d17 - $d21;

        $d23 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d24 = $d22 - $d23;

        $d25 = virtualinvoke r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d26 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d27 = d2 - $d26;

        $d28 = $d27 / 2.0;

        $d29 = $d25 + $d28;

        $d30 = $d29 + d15;

        d31 = $d30 + d13;

        d32 = d24 / 2.0;

        $r15 = r2.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        $r14 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d31, d32);

        $r16 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        interfaceinvoke $r15.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r16);

        $d33 = virtualinvoke r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d34 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d35 = d2 - $d34;

        $d36 = $d35 / 2.0;

        $d37 = $d33 + $d36;

        $d38 = $d37 + d15;

        d39 = $d38 + d13;

        $d40 = d24 / 2.0;

        $d41 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d42 = $d40 + $d41;

        $r18 = r2.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock name>;

        $r17 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d39, d42);

        $r19 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        interfaceinvoke $r18.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r19);

        $d43 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d43 cmpl 0.0;

        if $b0 <= 0 goto label4;

        $d45 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d46 = d3 - $d45;

        d47 = $d46 + 4.0;

        $r21 = r2.<net.sourceforge.plantuml.svek.HeaderLayout: net.sourceforge.plantuml.graphic.TextBlock generic>;

        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d47, -4.0);

        $r22 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        interfaceinvoke $r21.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r22);

     label4:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/svek/HeaderLayout;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.svek.HeaderLayout: boolean $assertionsDisabled> = $z1;

        return;
    }
}
