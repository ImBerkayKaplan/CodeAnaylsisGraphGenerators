public class net.sourceforge.plantuml.descdiagram.command.Labels extends java.lang.Object
{
    private java.lang.String firstLabel;
    private java.lang.String secondLabel;
    private final net.sourceforge.plantuml.descdiagram.command.StringWithArrow stringWithArrow;

    public void <init>(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.descdiagram.command.Labels r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, $r3, r5;
        net.sourceforge.plantuml.descdiagram.command.StringWithArrow $r4;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.Labels;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("FIRST_LABEL", 0);

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String firstLabel> = $r2;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("SECOND_LABEL", 0);

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String secondLabel> = $r3;

        r5 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL_LINK", 0);

        if r5 == null goto label1;

        r5 = specialinvoke r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String init(java.lang.String)>(r5);

     label1:
        $r4 = new net.sourceforge.plantuml.descdiagram.command.StringWithArrow;

        specialinvoke $r4.<net.sourceforge.plantuml.descdiagram.command.StringWithArrow: void <init>(java.lang.String)>(r5);

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: net.sourceforge.plantuml.descdiagram.command.StringWithArrow stringWithArrow> = $r4;

        return;
    }

    private java.lang.String init(java.lang.String)
    {
        net.sourceforge.plantuml.descdiagram.command.Labels r0;
        java.lang.String $r1, r2, $r3, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        net.sourceforge.plantuml.command.regex.Pattern2 r4, r6, r8;
        net.sourceforge.plantuml.command.regex.Matcher2 r5, r7, r9;
        boolean $z0, $z1, $z2;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.Labels;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String firstLabel>;

        if $r1 != null goto label3;

        $r3 = r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String secondLabel>;

        if $r3 != null goto label3;

        r4 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("^[%g]([^%g]+)[%g]([^%g]+)[%g]([^%g]+)[%g]$");

        r5 = virtualinvoke r4.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r2);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.Matcher2: boolean matches()>();

        if $z0 == 0 goto label1;

        $r20 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String firstLabel> = $r20;

        $r21 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(3);

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String secondLabel> = $r21;

        $r22 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        $r23 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r22);

        $r24 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r23);

        $r25 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r24);

        return $r25;

     label1:
        r6 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("^[%g]([^%g]+)[%g]([^%g]+)$");

        r7 = virtualinvoke r6.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r2);

        $z1 = virtualinvoke r7.<net.sourceforge.plantuml.command.regex.Matcher2: boolean matches()>();

        if $z1 == 0 goto label2;

        $r15 = virtualinvoke r7.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String firstLabel> = $r15;

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String secondLabel> = null;

        $r16 = virtualinvoke r7.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        $r17 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r16);

        $r18 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r17);

        $r19 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r18);

        return $r19;

     label2:
        r8 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("^([^%g]+)[%g]([^%g]+)[%g]$");

        r9 = virtualinvoke r8.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r2);

        $z2 = virtualinvoke r9.<net.sourceforge.plantuml.command.regex.Matcher2: boolean matches()>();

        if $z2 == 0 goto label3;

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String firstLabel> = null;

        $r10 = virtualinvoke r9.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String secondLabel> = $r10;

        $r11 = virtualinvoke r9.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $r12 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r11);

        $r13 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r12);

        $r14 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r13);

        return $r14;

     label3:
        $r26 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>(r2, "\"");

        return $r26;
    }

    public final java.lang.String getFirstLabel()
    {
        net.sourceforge.plantuml.descdiagram.command.Labels r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.Labels;

        $r1 = r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String firstLabel>;

        return $r1;
    }

    public final java.lang.String getSecondLabel()
    {
        net.sourceforge.plantuml.descdiagram.command.Labels r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.Labels;

        $r1 = r0.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String secondLabel>;

        return $r1;
    }

    public final java.lang.String getLabelLink()
    {
        net.sourceforge.plantuml.descdiagram.command.Labels r0;
        net.sourceforge.plantuml.descdiagram.command.StringWithArrow $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.Labels;

        $r1 = r0.<net.sourceforge.plantuml.descdiagram.command.Labels: net.sourceforge.plantuml.descdiagram.command.StringWithArrow stringWithArrow>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.descdiagram.command.StringWithArrow: java.lang.String getLabel()>();

        return $r2;
    }

    public final net.sourceforge.plantuml.cucadiagram.LinkArrow getLinkArrow()
    {
        net.sourceforge.plantuml.descdiagram.command.Labels r0;
        net.sourceforge.plantuml.descdiagram.command.StringWithArrow $r1;
        net.sourceforge.plantuml.cucadiagram.LinkArrow $r2;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.Labels;

        $r1 = r0.<net.sourceforge.plantuml.descdiagram.command.Labels: net.sourceforge.plantuml.descdiagram.command.StringWithArrow stringWithArrow>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.descdiagram.command.StringWithArrow: net.sourceforge.plantuml.cucadiagram.LinkArrow getLinkArrow()>();

        return $r2;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getDisplay()
    {
        net.sourceforge.plantuml.descdiagram.command.Labels r0;
        net.sourceforge.plantuml.descdiagram.command.StringWithArrow $r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;

        r0 := @this: net.sourceforge.plantuml.descdiagram.command.Labels;

        $r1 = r0.<net.sourceforge.plantuml.descdiagram.command.Labels: net.sourceforge.plantuml.descdiagram.command.StringWithArrow stringWithArrow>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.descdiagram.command.StringWithArrow: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        return $r2;
    }
}
