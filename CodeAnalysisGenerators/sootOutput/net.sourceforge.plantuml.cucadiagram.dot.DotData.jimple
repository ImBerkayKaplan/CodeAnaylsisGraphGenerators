public final class net.sourceforge.plantuml.cucadiagram.dot.DotData extends java.lang.Object implements net.sourceforge.plantuml.cucadiagram.PortionShower
{
    private final java.util.List links;
    private final java.util.Collection leafs;
    private final net.sourceforge.plantuml.UmlDiagramType umlDiagramType;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.cucadiagram.GroupHierarchy groupHierarchy;
    private final net.sourceforge.plantuml.cucadiagram.IGroup topParent;
    private final net.sourceforge.plantuml.cucadiagram.PortionShower portionShower;
    private final boolean isHideEmptyDescriptionForState;
    private final net.sourceforge.plantuml.svek.DotMode dotMode;
    private final java.lang.String namespaceSeparator;
    private final net.sourceforge.plantuml.Pragma pragma;
    private final net.sourceforge.plantuml.ugraphic.color.ColorMapper colorMapper;
    private final net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory;

    public net.sourceforge.plantuml.cucadiagram.entity.EntityFactory getEntityFactory()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        return $r1;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.IGroup, java.util.List, java.util.Collection, net.sourceforge.plantuml.UmlDiagramType, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.GroupHierarchy, net.sourceforge.plantuml.cucadiagram.PortionShower, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.cucadiagram.entity.EntityFactory, boolean, net.sourceforge.plantuml.svek.DotMode, java.lang.String, net.sourceforge.plantuml.Pragma)
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        java.lang.String r1;
        net.sourceforge.plantuml.Pragma r2;
        net.sourceforge.plantuml.cucadiagram.IGroup r3, $r5;
        java.lang.Object $r4;
        net.sourceforge.plantuml.svek.DotMode r6;
        boolean z0;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r7;
        java.util.List r8;
        java.util.Collection r9;
        net.sourceforge.plantuml.UmlDiagramType r10;
        net.sourceforge.plantuml.ISkinParam r11;
        net.sourceforge.plantuml.cucadiagram.GroupHierarchy r12;
        net.sourceforge.plantuml.cucadiagram.PortionShower r13;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory r14;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        r3 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        r8 := @parameter1: java.util.List;

        r9 := @parameter2: java.util.Collection;

        r10 := @parameter3: net.sourceforge.plantuml.UmlDiagramType;

        r11 := @parameter4: net.sourceforge.plantuml.ISkinParam;

        r12 := @parameter5: net.sourceforge.plantuml.cucadiagram.GroupHierarchy;

        r13 := @parameter6: net.sourceforge.plantuml.cucadiagram.PortionShower;

        r7 := @parameter7: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r14 := @parameter8: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory;

        z0 := @parameter9: boolean;

        r6 := @parameter10: net.sourceforge.plantuml.svek.DotMode;

        r1 := @parameter11: java.lang.String;

        r2 := @parameter12: net.sourceforge.plantuml.Pragma;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.lang.String namespaceSeparator> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.Pragma pragma> = r2;

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r5 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r4;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.IGroup topParent> = $r5;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.svek.DotMode dotMode> = r6;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: boolean isHideEmptyDescriptionForState> = z0;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.ugraphic.color.ColorMapper colorMapper> = r7;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.List links> = r8;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.Collection leafs> = r9;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.UmlDiagramType umlDiagramType> = r10;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.ISkinParam skinParam> = r11;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.GroupHierarchy groupHierarchy> = r12;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.PortionShower portionShower> = r13;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory> = r14;

        return;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.IGroup, java.util.List, java.util.Collection, net.sourceforge.plantuml.UmlDiagramType, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.GroupHierarchy, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.cucadiagram.entity.EntityFactory, boolean, net.sourceforge.plantuml.svek.DotMode, java.lang.String, net.sourceforge.plantuml.Pragma)
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        java.util.List r2;
        java.util.Collection r3;
        net.sourceforge.plantuml.UmlDiagramType r4;
        net.sourceforge.plantuml.ISkinParam r5;
        net.sourceforge.plantuml.cucadiagram.GroupHierarchy r6;
        net.sourceforge.plantuml.cucadiagram.dot.DotData$1 $r7;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r8;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory r9;
        boolean z0;
        net.sourceforge.plantuml.svek.DotMode r10;
        java.lang.String r11;
        net.sourceforge.plantuml.Pragma r12;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.Collection;

        r4 := @parameter3: net.sourceforge.plantuml.UmlDiagramType;

        r5 := @parameter4: net.sourceforge.plantuml.ISkinParam;

        r6 := @parameter5: net.sourceforge.plantuml.cucadiagram.GroupHierarchy;

        r8 := @parameter6: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r9 := @parameter7: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory;

        z0 := @parameter8: boolean;

        r10 := @parameter9: net.sourceforge.plantuml.svek.DotMode;

        r11 := @parameter10: java.lang.String;

        r12 := @parameter11: net.sourceforge.plantuml.Pragma;

        $r7 = new net.sourceforge.plantuml.cucadiagram.dot.DotData$1;

        specialinvoke $r7.<net.sourceforge.plantuml.cucadiagram.dot.DotData$1: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: void <init>(net.sourceforge.plantuml.cucadiagram.IGroup,java.util.List,java.util.Collection,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.GroupHierarchy,net.sourceforge.plantuml.cucadiagram.PortionShower,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.cucadiagram.entity.EntityFactory,boolean,net.sourceforge.plantuml.svek.DotMode,java.lang.String,net.sourceforge.plantuml.Pragma)>(r1, r2, r3, r4, r5, r6, $r7, r8, r9, z0, r10, r11, r12);

        return;
    }

    public net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.UmlDiagramType $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.UmlDiagramType umlDiagramType>;

        return $r1;
    }

    public net.sourceforge.plantuml.ISkinParam getSkinParam()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.ISkinParam $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.ISkinParam skinParam>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.GroupHierarchy getGroupHierarchy()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.cucadiagram.GroupHierarchy $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.GroupHierarchy groupHierarchy>;

        return $r1;
    }

    public java.util.List getLinks()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        java.util.List $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.List links>;

        return $r1;
    }

    public java.util.Collection getLeafs()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        java.util.Collection $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.Collection leafs>;

        return $r1;
    }

    public final net.sourceforge.plantuml.cucadiagram.IGroup getTopParent()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.IGroup topParent>;

        return $r1;
    }

    public boolean isEmpty(net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        net.sourceforge.plantuml.cucadiagram.GroupHierarchy $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.GroupHierarchy groupHierarchy>;

        $z0 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.GroupHierarchy: boolean isEmpty(net.sourceforge.plantuml.cucadiagram.IGroup)>(r1);

        return $z0;
    }

    public boolean showPortion(net.sourceforge.plantuml.cucadiagram.EntityPortion, net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.cucadiagram.EntityPortion r1;
        net.sourceforge.plantuml.cucadiagram.IEntity r2;
        net.sourceforge.plantuml.cucadiagram.PortionShower $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.EntityPortion;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.PortionShower portionShower>;

        $z0 = interfaceinvoke $r3.<net.sourceforge.plantuml.cucadiagram.PortionShower: boolean showPortion(net.sourceforge.plantuml.cucadiagram.EntityPortion,net.sourceforge.plantuml.cucadiagram.IEntity)>(r1, r2);

        return $z0;
    }

    public final net.sourceforge.plantuml.ugraphic.color.ColorMapper getColorMapper()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.ugraphic.color.ColorMapper colorMapper>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r1;
        net.sourceforge.plantuml.cucadiagram.IGroup $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()>();

        return $r2;
    }

    public boolean isDegeneratedWithFewEntities(int)
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r1;
        java.util.Collection $r2, $r4;
        int $i0, $i1, $i2, i3;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        i3 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Collection groups()>();

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        if $i0 != 0 goto label1;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.List getLinks()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 0 goto label1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.Collection getLeafs()>();

        $i2 = interfaceinvoke $r4.<java.util.Collection: int size()>();

        if $i2 != i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isHideEmptyDescriptionForState()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: boolean isHideEmptyDescriptionForState>;

        return $z0;
    }

    public final net.sourceforge.plantuml.svek.DotMode getDotMode()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.svek.DotMode $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.svek.DotMode dotMode>;

        return $r1;
    }

    public final java.lang.String getNamespaceSeparator()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.lang.String namespaceSeparator>;

        return $r1;
    }

    public net.sourceforge.plantuml.Pragma getPragma()
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        net.sourceforge.plantuml.Pragma $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.Pragma pragma>;

        return $r1;
    }

    public void removeIrrelevantSametail()
    {
        java.util.HashMap $r0;
        net.sourceforge.plantuml.cucadiagram.dot.DotData r2;
        java.util.List $r3, $r7, $r15, $r17;
        java.util.HashSet $r4;
        net.sourceforge.plantuml.ISkinParam $r5;
        java.util.Set $r6;
        boolean $z0, $z1, $z2, $z3, $z6, $z7, $z8;
        java.lang.Object $r8, $r9, $r10, $r11, $r18, $r20, $r23;
        java.lang.Integer $r12, $r24, r33;
        int $i0, $i1, $i2, i3;
        java.util.ArrayList $r13;
        net.sourceforge.plantuml.cucadiagram.dot.Neighborhood $r16;
        java.lang.String $r19, $r29, r32, r37, r44;
        net.sourceforge.plantuml.cucadiagram.LinkType $r21;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r22;
        net.sourceforge.plantuml.cucadiagram.IEntity $r28;
        java.util.Iterator r30, r35, r38, r42;
        net.sourceforge.plantuml.cucadiagram.Link r31, r39, r43;
        java.util.Map$Entry r36;
        net.sourceforge.plantuml.cucadiagram.ILeaf r40;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.List links>;

        r30 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z7 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label06;

        $r20 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (net.sourceforge.plantuml.cucadiagram.Link) $r20;

        $r21 = virtualinvoke r31.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecor2()>();

        $z6 = virtualinvoke $r22.<net.sourceforge.plantuml.cucadiagram.LinkDecor: boolean isExtendsLike()>();

        if $z6 == 0 goto label02;

        $r28 = virtualinvoke r31.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getUid()>();

        virtualinvoke r31.<net.sourceforge.plantuml.cucadiagram.Link: void setSametail(java.lang.String)>($r29);

     label02:
        r32 = virtualinvoke r31.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String getSametail()>();

        if r32 != null goto label03;

        goto label01;

     label03:
        $r23 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r32);

        r33 = (java.lang.Integer) $r23;

        if r33 != null goto label04;

        $i2 = 1;

        goto label05;

     label04:
        $i1 = virtualinvoke r33.<java.lang.Integer: int intValue()>();

        $i2 = $i1 + 1;

     label05:
        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r32, $r24);

        goto label01;

     label06:
        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        $r5 = r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.ISkinParam skinParam>;

        i3 = interfaceinvoke $r5.<net.sourceforge.plantuml.ISkinParam: int groupInheritance()>();

        $r6 = interfaceinvoke $r0.<java.util.Map: java.util.Set entrySet()>();

        r35 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label07:
        $z0 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label13;

        $r9 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getKey()>();

        r37 = (java.lang.String) $r10;

        $r11 = interfaceinvoke r36.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.Integer) $r11;

        $i0 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        if $i0 >= i3 goto label08;

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>(r37);

        goto label12;

     label08:
        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r15 = r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.List links>;

        r38 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r18 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (net.sourceforge.plantuml.cucadiagram.Link) $r18;

        $r19 = virtualinvoke r39.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String getSametail()>();

        $z3 = virtualinvoke r37.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z3 == 0 goto label10;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r39);

     label10:
        goto label09;

     label11:
        r40 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.ILeaf getLeaf(java.lang.String)>(r37);

        $r16 = new net.sourceforge.plantuml.cucadiagram.dot.Neighborhood;

        $r17 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.List getLinksOfThisLeaf(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r40);

        specialinvoke $r16.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf,java.util.List,java.util.List)>(r40, $r13, $r17);

        interfaceinvoke r40.<net.sourceforge.plantuml.cucadiagram.ILeaf: void setNeighborhood(net.sourceforge.plantuml.cucadiagram.dot.Neighborhood)>($r16);

     label12:
        goto label07;

     label13:
        $r7 = r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.List links>;

        r42 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z8 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label17;

        $r8 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r43 = (net.sourceforge.plantuml.cucadiagram.Link) $r8;

        r44 = virtualinvoke r43.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String getSametail()>();

        if r44 != null goto label15;

        goto label14;

     label15:
        $z1 = interfaceinvoke $r4.<java.util.Collection: boolean contains(java.lang.Object)>(r44);

        if $z1 == 0 goto label16;

        virtualinvoke r43.<net.sourceforge.plantuml.cucadiagram.Link: void setSametail(java.lang.String)>(null);

     label16:
        goto label14;

     label17:
        return;
    }

    private java.util.List getLinksOfThisLeaf(net.sourceforge.plantuml.cucadiagram.ILeaf)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.dot.DotData r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0, $z1;
        java.lang.Object $r5;
        net.sourceforge.plantuml.cucadiagram.Link r6;
        net.sourceforge.plantuml.cucadiagram.ILeaf r7;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        r7 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.List links>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.cucadiagram.Link) $r5;

        $z1 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.Link: boolean contains(net.sourceforge.plantuml.cucadiagram.IEntity)>(r7);

        if $z1 == 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    private net.sourceforge.plantuml.cucadiagram.ILeaf getLeaf(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        java.util.Collection $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.cucadiagram.ILeaf r4;
        java.lang.String $r5, r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        r6 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.Collection leafs>;

        r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        $r5 = interfaceinvoke r4.<net.sourceforge.plantuml.cucadiagram.ILeaf: java.lang.String getUid()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }
}
