public final class net.sourceforge.plantuml.svek.RoundedContainer extends java.lang.Object
{
    private final net.sourceforge.plantuml.awt.geom.Dimension2D dim;
    private final double titleHeight;
    private final double attributeHeight;
    private final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor imgBackcolor;
    private final net.sourceforge.plantuml.ugraphic.UStroke stroke;
    private final double rounded;
    private final double shadowing;

    public void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D, double, double, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.UStroke, double, double)
    {
        net.sourceforge.plantuml.svek.RoundedContainer r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        double $d0, d1, d2, d3, d4;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, r3, r4;
        net.sourceforge.plantuml.ugraphic.UStroke r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: net.sourceforge.plantuml.svek.RoundedContainer;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d2 := @parameter1: double;

        d3 := @parameter2: double;

        r3 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        r5 := @parameter6: net.sourceforge.plantuml.ugraphic.UStroke;

        d1 := @parameter7: double;

        d4 := @parameter8: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        r0.<net.sourceforge.plantuml.svek.RoundedContainer: double rounded> = d1;

        r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.awt.geom.Dimension2D dim> = r1;

        r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.color.HColor imgBackcolor> = r2;

        r0.<net.sourceforge.plantuml.svek.RoundedContainer: double titleHeight> = d2;

        r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = r3;

        r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = r4;

        r0.<net.sourceforge.plantuml.svek.RoundedContainer: double attributeHeight> = d3;

        r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.UStroke stroke> = r5;

        r0.<net.sourceforge.plantuml.svek.RoundedContainer: double shadowing> = d4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.RoundedContainer r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r4, $r11, $r18;
        net.sourceforge.plantuml.ugraphic.UBackground $r2, $r12;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, $r10, $r19, $r21, $r23, $r25, $r29, $r31, r34, r35, r36;
        net.sourceforge.plantuml.ugraphic.URectangle $r5, r8, $r14, r17;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r6, $r7, $r15, $r16, $r26, $r32;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27;
        net.sourceforge.plantuml.ugraphic.UStroke $r9, $r13, $r22, $r28;
        net.sourceforge.plantuml.ugraphic.UTranslate $r20, $r24, $r30;
        byte $b0, $b1;
        net.sourceforge.plantuml.ugraphic.ULine $r27, $r33;

        r0 := @this: net.sourceforge.plantuml.svek.RoundedContainer;

        r34 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r3 = interfaceinvoke r34.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        r35 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $r6 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r7 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $d1 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        $d2 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double rounded>;

        r8 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d2);

        $d3 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double shadowing>;

        virtualinvoke r8.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>($d3);

        $r9 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $r10 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r8);

        $d5 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double titleHeight>;

        $d4 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double attributeHeight>;

        d6 = $d5 + $d4;

        $r11 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.color.HColor imgBackcolor>;

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r36 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r13 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        d7 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r14 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $r15 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $d8 = virtualinvoke $r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d9 = 4.0 * d7;

        $d10 = $d8 - $d9;

        $r16 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $d11 = virtualinvoke $r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d12 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double titleHeight>;

        $d14 = $d11 - $d12;

        $d13 = 4.0 * d7;

        $d16 = $d14 - $d13;

        $d15 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double attributeHeight>;

        $d17 = $d16 - $d15;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d10, $d17);

        $d18 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double rounded>;

        r17 = virtualinvoke $r14.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d18);

        $r18 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.color.HColor imgBackcolor>;

        $r19 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d21 = 2.0 * d7;

        $d19 = 2.0 * d7;

        $d20 = d6 + $d19;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d21, $d20);

        $r21 = interfaceinvoke $r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r17);

        $d22 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double titleHeight>;

        $b0 = $d22 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $r28 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $r29 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r28);

        $r30 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d6);

        $r31 = interfaceinvoke $r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r30);

        $r32 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $d27 = virtualinvoke $r32.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r33 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d27);

        interfaceinvoke $r31.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r33);

     label1:
        $d23 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double attributeHeight>;

        $b1 = $d23 cmpl 0.0;

        if $b1 <= 0 goto label2;

        $r22 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $r23 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        $d24 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: double attributeHeight>;

        $d25 = d6 - $d24;

        $r24 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d25);

        $r25 = interfaceinvoke $r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        $r26 = r0.<net.sourceforge.plantuml.svek.RoundedContainer: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $d26 = virtualinvoke $r26.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r27 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d26);

        interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r27);

     label2:
        return;
    }
}
