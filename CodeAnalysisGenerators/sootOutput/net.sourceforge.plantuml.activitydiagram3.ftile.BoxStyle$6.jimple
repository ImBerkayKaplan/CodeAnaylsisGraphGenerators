final enum class net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$6 extends net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle
{

    void <init>(java.lang.String, int, char, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$6 r0;
        java.lang.String r1;
        int i0;
        char c1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$6;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        d0 := @parameter3: double;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: void <init>(java.lang.String,int,char,double,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$1)>(r1, i0, c1, d0, null);

        return;
    }

    protected net.sourceforge.plantuml.ugraphic.Shadowable getShape(double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        int $i0, $i1;
        double $d0, d1, $d2, d3, $d4, d5;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$6 r2;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$6;

        d1 := @parameter0: double;

        d3 := @parameter1: double;

        d5 := @parameter2: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        $i0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: int access$100()>();

        $d0 = (double) $i0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d1, 0.0);

        $i1 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: int access$100()>();

        $d2 = (double) $i1;

        $d4 = d1 - $d2;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d4, d3);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, d3);

        return $r0;
    }
}
