public class gen.lib.dotgen.class1__c extends java.lang.Object
{

    public void <init>()
    {
        gen.lib.dotgen.class1__c r0;

        r0 := @this: gen.lib.dotgen.class1__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean nonconstraint_edge(h.ST_Agedge_s)
    {
        smetana.core.Z $r0, $r3;
        h.ST_Agsym_s $r1, $r4;
        h.ST_Agedge_s r2;
        smetana.core.CString $r5;
        char $c0;
        boolean $z0;
        java.lang.Throwable $r7;

        r2 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2luyof8ca7ewf9r08z3os3lk7", "nonconstraint_edge");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_Agsym_s E_constr>;

        if $r1 == null goto label3;

        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = $r3.<smetana.core.Z: h.ST_Agsym_s E_constr>;

        $r5 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agxget(smetana.core.__ptr__,h.ST_Agsym_s)>(r2, $r4);

        if $r5 == null goto label3;

        $c0 = virtualinvoke $r5.<smetana.core.CString: char charAt(int)>(0);

        if $c0 == 0 goto label3;

        $z0 = staticinvoke <gen.lib.common.utils__c: boolean mapbool(smetana.core.CString)>($r5);

        if $z0 != 0 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2luyof8ca7ewf9r08z3os3lk7", "nonconstraint_edge");

        return 1;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2luyof8ca7ewf9r08z3os3lk7", "nonconstraint_edge");

        return 0;

     label4:
        $r7 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2luyof8ca7ewf9r08z3os3lk7", "nonconstraint_edge");

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label3 with label4;
    }

    public static void interclust1(h.ST_Agraph_s, h.ST_Agnode_s, h.ST_Agnode_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, r11, r12;
        h.ST_Agnode_s $r1, $r3, r6, r7, r8, r9, r10, $r13, $r14, $r16, $r17, $r18, $r20;
        h.ST_Agraph_s $r2, $r4, r5, $r15, $r19;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        double $d0, $d1;
        java.lang.Throwable $r21;

        r5 := @parameter0: h.ST_Agraph_s;

        r7 := @parameter1: h.ST_Agnode_s;

        r9 := @parameter2: h.ST_Agnode_s;

        r0 := @parameter3: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dpimuv55sylui7jx8fh3ic1qc", "interclust1");

     label01:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>($r1);

        if $r2 == null goto label02;

        $r17 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $i8 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r17);

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r19 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>($r18);

        $r20 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_leader(h.ST_Agraph_s)>($r19);

        $i9 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r20);

        i10 = $i8 - $i9;

        goto label03;

     label02:
        i10 = 0;

     label03:
        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r4 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>($r3);

        if $r4 == null goto label04;

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $i6 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r13);

        $r14 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r15 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>($r14);

        $r16 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_leader(h.ST_Agraph_s)>($r15);

        $i7 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r16);

        i11 = $i6 - $i7;

        goto label05;

     label04:
        i11 = 0;

     label05:
        $i0 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>(r0);

        $i1 = $i0 + i10;

        i2 = $i1 - i11;

        if i2 <= 0 goto label06;

        i12 = 0;

        i13 = i2;

        goto label07;

     label06:
        i12 = neg i2;

        i13 = 0;

     label07:
        r6 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s virtual_node(h.ST_Agraph_s)>(r5);

        staticinvoke <smetana.core.Macro: void ND_node_type(h.ST_Agnode_s,int)>(r6, 2);

        r8 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s UF_find(h.ST_Agnode_s)>(r7);

        r10 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s UF_find(h.ST_Agnode_s)>(r9);

        $d0 = (double) i12;

        $i3 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r0);

        $i4 = 10 * $i3;

        r11 = staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r6, r8, $d0, $i4);

        $d1 = (double) i13;

        $i5 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r0);

        r12 = staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r6, r10, $d1, $i5);

        staticinvoke <smetana.core.Macro: void ED_to_orig(h.ST_Agedge_s,h.ST_Agedge_s)>(r11, r0);

        staticinvoke <smetana.core.Macro: void ED_to_orig(h.ST_Agedge_s,h.ST_Agedge_s)>(r12, r0);

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dpimuv55sylui7jx8fh3ic1qc", "interclust1");

        goto label11;

     label09:
        $r21 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dpimuv55sylui7jx8fh3ic1qc", "interclust1");

        throw $r21;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void class1_(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r6, $r9;
        h.ST_Agedge_s $r1, $r10, r16;
        boolean $z0, $z1;
        h.ST_Agnode_s $r2, r3, $r4, r5, $r7, $r8, r15;
        java.lang.Throwable $r13;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("acy5ct6402jgf0ga5oeeskx5m", "class1_");

     label01:
        staticinvoke <gen.lib.dotgen.cluster__c: void mark_clusters(h.ST_Agraph_s)>(r0);

        r15 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agfstnode(h.ST_Agraph_s)>(r0);

     label02:
        if r15 == null goto label12;

        r16 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agedge_s agfstout(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r15);

     label03:
        if r16 == null goto label11;

        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r16);

        if $r1 == null goto label04;

        goto label10;

     label04:
        $z0 = staticinvoke <gen.lib.dotgen.class1__c: boolean nonconstraint_edge(h.ST_Agedge_s)>(r16);

        if $z0 == 0 goto label05;

        goto label10;

     label05:
        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r16);

        r3 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s UF_find(h.ST_Agnode_s)>($r2);

        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r16);

        r5 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s UF_find(h.ST_Agnode_s)>($r4);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r3, r5);

        if $z1 == 0 goto label06;

        goto label10;

     label06:
        $r6 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r3);

        if $r6 != null goto label07;

        $r9 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r5);

        if $r9 == null goto label08;

     label07:
        $r7 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r16);

        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r16);

        staticinvoke <gen.lib.dotgen.class1__c: void interclust1(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, $r7, $r8, r16);

        goto label10;

     label08:
        $r10 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s find_fast_edge(h.ST_Agnode_s,h.ST_Agnode_s)>(r3, r5);

        if $r10 == null goto label09;

        staticinvoke <gen.lib.dotgen.fastgr__c: void merge_oneway(h.ST_Agedge_s,h.ST_Agedge_s)>(r16, $r10);

        goto label10;

     label09:
        staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s virtual_edge(h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r3, r5, r16);

     label10:
        r16 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agedge_s agnxtout(h.ST_Agraph_s,h.ST_Agedge_s)>(r0, r16);

        goto label03;

     label11:
        r15 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agnxtnode(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r15);

        goto label02;

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("acy5ct6402jgf0ga5oeeskx5m", "class1_");

        goto label15;

     label13:
        $r13 := @caughtexception;

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("acy5ct6402jgf0ga5oeeskx5m", "class1_");

        throw $r13;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }
}
