public class net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility extends net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy
{
    private final int col2;

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder, int)
    {
        net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        i0 := @parameter1: int;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility: int col2> = i0;

        return;
    }

    public java.util.Map getPositions(double, double)
    {
        java.util.LinkedHashMap $r0;
        net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator r5;
        boolean $z0;
        java.lang.Object $r6, $r8, $r10, $r12, $r14, $r18;
        java.util.Map$Entry r7, r9;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r11, $r13;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, d8, d9, d10;
        java.awt.geom.Point2D$Double $r15, $r19;
        net.sourceforge.plantuml.graphic.TextBlock $r16, $r20;
        int $i0;

        r2 := @this: net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility;

        d8 := @parameter0: double;

        d9 := @parameter1: double;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        d10 = 0.0;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility: java.util.Map getDimensions()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r10;

        d0 = virtualinvoke $r11.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r12 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r12;

        d1 = virtualinvoke $r13.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        $r14 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (net.sourceforge.plantuml.graphic.TextBlock) $r14;

        $r15 = new java.awt.geom.Point2D$Double;

        $d3 = 2.0 + d10;

        specialinvoke $r15.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, $d3);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, $r15);

        $r18 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = (net.sourceforge.plantuml.graphic.TextBlock) $r18;

        $r19 = new java.awt.geom.Point2D$Double;

        $i0 = r2.<net.sourceforge.plantuml.ugraphic.PlacementStrategyVisibility: int col2>;

        $d7 = (double) $i0;

        $d4 = d2 - d1;

        $d5 = $d4 / 2.0;

        $d6 = d10 + $d5;

        specialinvoke $r19.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d7, $d6);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r19);

        d10 = d10 + d2;

        goto label1;

     label2:
        return $r0;
    }
}
