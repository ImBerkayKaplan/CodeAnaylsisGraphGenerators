public class net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg extends net.sourceforge.plantuml.ugraphic.AbstractUGraphic implements net.sourceforge.plantuml.ugraphic.ClipContainer
{
    private final boolean textAsPath2;
    private final java.lang.String target;
    private final boolean interactive;

    public double dpiFactor()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        return 1.0;
    }

    protected net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic copyUGraphic()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg $r0, r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        $r0 = new net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void <init>(net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg)>(r1);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg)
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0, r1;
        boolean $z0, $z1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.AbstractUGraphic)>(r1);

        $z0 = r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: boolean textAsPath2>;

        r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: boolean textAsPath2> = $z0;

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.String target>;

        r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.String target> = $r2;

        $z1 = r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: boolean interactive>;

        r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: boolean interactive> = $z1;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void register()>();

        return;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, boolean, net.sourceforge.plantuml.awt.geom.Dimension2D, net.sourceforge.plantuml.ugraphic.color.ColorMapper, boolean, double, java.lang.String, java.lang.String, long, java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.svg.LengthAdjust, boolean)
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r3;
        net.sourceforge.plantuml.svg.SvgGraphics $r4, r13;
        java.lang.String $r5, r6, r7, r10;
        boolean z0, z1, z2, $z3;
        double d0;
        long l0;
        net.sourceforge.plantuml.svg.LengthAdjust r8;
        net.sourceforge.plantuml.svg.DarkStrategy $r9;
        net.sourceforge.plantuml.graphic.StringBounder r11;
        java.lang.Object $r12;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient $r14;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        z0 := @parameter1: boolean;

        r2 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r3 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        z2 := @parameter4: boolean;

        d0 := @parameter5: double;

        r10 := @parameter6: java.lang.String;

        r6 := @parameter7: java.lang.String;

        l0 := @parameter8: long;

        r7 := @parameter9: java.lang.String;

        r11 := @parameter10: net.sourceforge.plantuml.graphic.StringBounder;

        r8 := @parameter11: net.sourceforge.plantuml.svg.LengthAdjust;

        z1 := @parameter12: boolean;

        $r4 = new net.sourceforge.plantuml.svg.SvgGraphics;

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r1);

        $r9 = <net.sourceforge.plantuml.svg.DarkStrategy: net.sourceforge.plantuml.svg.DarkStrategy IGNORE_DARK_COLOR>;

        specialinvoke $r4.<net.sourceforge.plantuml.svg.SvgGraphics: void <init>(java.lang.String,boolean,net.sourceforge.plantuml.awt.geom.Dimension2D,double,java.lang.String,long,java.lang.String,net.sourceforge.plantuml.svg.LengthAdjust,net.sourceforge.plantuml.svg.DarkStrategy,boolean)>($r5, z0, r2, d0, r6, l0, r7, r8, $r9, z1);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.svg.SvgGraphics,boolean,java.lang.String,net.sourceforge.plantuml.graphic.StringBounder,boolean)>(r1, r2, r3, $r4, z2, r10, r11, z1);

        $z3 = r1 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z3 == 0 goto label1;

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        r13 = (net.sourceforge.plantuml.svg.SvgGraphics) $r12;

        $r14 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r1;

        virtualinvoke r13.<net.sourceforge.plantuml.svg.SvgGraphics: void paintBackcolorGradient(net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.color.HColorGradient)>(r3, $r14);

     label1:
        return;
    }

    protected boolean manageHiddenAutomatically()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        return 0;
    }

    protected void beforeDraw()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.svg.SvgGraphics $r2;
        net.sourceforge.plantuml.ugraphic.UParam $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r2 = (net.sourceforge.plantuml.svg.SvgGraphics) $r1;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $z0 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UParam: boolean isHidden()>();

        virtualinvoke $r2.<net.sourceforge.plantuml.svg.SvgGraphics: void setHidden(boolean)>($z0);

        return;
    }

    protected void afterDraw()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.svg.SvgGraphics $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r2 = (net.sourceforge.plantuml.svg.SvgGraphics) $r1;

        virtualinvoke $r2.<net.sourceforge.plantuml.svg.SvgGraphics: void setHidden(boolean)>(0);

        return;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.awt.geom.Dimension2D, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.svg.SvgGraphics, boolean, java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, boolean)
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.svg.SvgGraphics r4;
        boolean z0, z1;
        java.lang.String r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r6 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r4 := @parameter3: net.sourceforge.plantuml.svg.SvgGraphics;

        z0 := @parameter4: boolean;

        r5 := @parameter5: java.lang.String;

        r3 := @parameter6: net.sourceforge.plantuml.graphic.StringBounder;

        z1 := @parameter7: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,java.lang.Object)>(r1, r2, r3, r4);

        r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: boolean textAsPath2> = z0;

        r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.String target> = r5;

        r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: boolean interactive> = z1;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void register()>();

        return;
    }

    private void register()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg $r1;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg $r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg $r4;
        net.sourceforge.plantuml.ugraphic.svg.DriverPixelSvg $r5;
        net.sourceforge.plantuml.ugraphic.svg.DriverPolygonSvg $r6;
        net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg $r7;
        net.sourceforge.plantuml.ugraphic.svg.DriverImagePng $r8;
        net.sourceforge.plantuml.ugraphic.svg.DriverImageSvgSvg $r9;
        net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg $r10;
        net.sourceforge.plantuml.ugraphic.svg.DriverDotPathSvg $r11;
        net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg $r12;
        net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg $r13;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        $r1 = new net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/URectangle;", $r1);

        $z0 = r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: boolean textAsPath2>;

        if $z0 == 0 goto label1;

        $r13 = new net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg;

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UText;", $r13);

        goto label2;

     label1:
        $r2 = new net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ugraphic.ClipContainer)>($r3, r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UText;", $r2);

     label2:
        $r4 = new net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/ULine;", $r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.svg.DriverPixelSvg;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.svg.DriverPixelSvg: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPixel;", $r5);

        $r6 = new net.sourceforge.plantuml.ugraphic.svg.DriverPolygonSvg;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.svg.DriverPolygonSvg: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPolygon;", $r6);

        $r7 = new net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UEllipse;", $r7);

        $r8 = new net.sourceforge.plantuml.ugraphic.svg.DriverImagePng;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.svg.DriverImagePng: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UImage;", $r8);

        $r9 = new net.sourceforge.plantuml.ugraphic.svg.DriverImageSvgSvg;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.svg.DriverImageSvgSvg: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UImageSvg;", $r9);

        $r10 = new net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPath;", $r10);

        $r11 = new net.sourceforge.plantuml.ugraphic.svg.DriverDotPathSvg;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.svg.DriverDotPathSvg: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/posimo/DotPath;", $r11);

        $r12 = new net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UCenteredCharacter;", $r12);

        return;
    }

    public net.sourceforge.plantuml.svg.SvgGraphics getSvgGraphics()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.svg.SvgGraphics $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r2 = (net.sourceforge.plantuml.svg.SvgGraphics) $r1;

        return $r2;
    }

    public void writeToStream(java.io.OutputStream, java.lang.String, int) throws java.io.IOException
    {
        java.lang.String r0, $r16;
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r1;
        boolean $z0;
        java.lang.Object $r2, $r5, $r7, $r9, $r11;
        java.io.OutputStream r3;
        net.sourceforge.plantuml.svg.SvgGraphics $r4, $r6, $r8, $r10, $r12;
        javax.xml.transform.TransformerException $r13;
        java.io.IOException $r15;
        int i0;

        r1 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        r3 := @parameter0: java.io.OutputStream;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        if r0 == null goto label2;

        $r11 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r12 = (net.sourceforge.plantuml.svg.SvgGraphics) $r11;

        virtualinvoke $r12.<net.sourceforge.plantuml.svg.SvgGraphics: void addComment(java.lang.String)>(r0);

     label2:
        $z0 = r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: boolean interactive>;

        if $z0 == 0 goto label3;

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r6 = (net.sourceforge.plantuml.svg.SvgGraphics) $r5;

        virtualinvoke $r6.<net.sourceforge.plantuml.svg.SvgGraphics: void addStyle(java.lang.String)>("onmouseinteractivefooter.css");

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r8 = (net.sourceforge.plantuml.svg.SvgGraphics) $r7;

        virtualinvoke $r8.<net.sourceforge.plantuml.svg.SvgGraphics: void addScriptTag(java.lang.String)>("https://cdn.jsdelivr.net/npm/@svgdotjs/svg.js@3.0/dist/svg.min.js");

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r10 = (net.sourceforge.plantuml.svg.SvgGraphics) $r9;

        virtualinvoke $r10.<net.sourceforge.plantuml.svg.SvgGraphics: void addScript(java.lang.String)>("onmouseinteractivefooter.js");

     label3:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r4 = (net.sourceforge.plantuml.svg.SvgGraphics) $r2;

        virtualinvoke $r4.<net.sourceforge.plantuml.svg.SvgGraphics: void createXml(java.io.OutputStream)>(r3);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r15 = new java.io.IOException;

        $r16 = virtualinvoke $r13.<javax.xml.transform.TransformerException: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r15;

     label6:
        return;

        catch javax.xml.transform.TransformerException from label1 to label4 with label5;
    }

    public void startGroup(java.util.Map)
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        java.lang.Object $r1;
        java.util.Map r2;
        net.sourceforge.plantuml.svg.SvgGraphics $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        r2 := @parameter0: java.util.Map;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r3 = (net.sourceforge.plantuml.svg.SvgGraphics) $r1;

        virtualinvoke $r3.<net.sourceforge.plantuml.svg.SvgGraphics: void startGroup(java.util.Map)>(r2);

        return;
    }

    public void closeGroup()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.svg.SvgGraphics $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r2 = (net.sourceforge.plantuml.svg.SvgGraphics) $r1;

        virtualinvoke $r2.<net.sourceforge.plantuml.svg.SvgGraphics: void closeGroup()>();

        return;
    }

    public void startUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.Url r2;
        net.sourceforge.plantuml.svg.SvgGraphics $r3;
        java.lang.String $r4, $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        r2 := @parameter0: net.sourceforge.plantuml.Url;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r3 = (net.sourceforge.plantuml.svg.SvgGraphics) $r1;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.Url: java.lang.String getUrl()>();

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.Url: java.lang.String getTooltip()>();

        $r6 = r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.String target>;

        virtualinvoke $r3.<net.sourceforge.plantuml.svg.SvgGraphics: void openLink(java.lang.String,java.lang.String,java.lang.String)>($r4, $r5, $r6);

        return;
    }

    public void closeUrl()
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.svg.SvgGraphics $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r2 = (net.sourceforge.plantuml.svg.SvgGraphics) $r1;

        virtualinvoke $r2.<net.sourceforge.plantuml.svg.SvgGraphics: void closeLink()>();

        return;
    }

    protected void drawComment(net.sourceforge.plantuml.ugraphic.UComment)
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.ugraphic.UComment r2;
        net.sourceforge.plantuml.svg.SvgGraphics $r3;
        java.lang.String $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UComment;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: java.lang.Object getGraphicObject()>();

        $r3 = (net.sourceforge.plantuml.svg.SvgGraphics) $r1;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UComment: java.lang.String getComment()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.svg.SvgGraphics: void addComment(java.lang.String)>($r4);

        return;
    }

    public boolean matchesProperty(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("SVG");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = specialinvoke r1.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: boolean matchesProperty(java.lang.String)>(r0);

        return $z1;
    }
}
