public class gen.lib.label.rectangle__c extends java.lang.Object
{

    public void <init>()
    {
        gen.lib.label.rectangle__c r0;

        r0 := @this: gen.lib.label.rectangle__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void InitRect(h.ST_Rect_t)
    {
        h.ST_Rect_t r0;
        int[] $r1;
        java.lang.Throwable $r2;
        int i0;

        r0 := @parameter0: h.ST_Rect_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1wtvfzwbzj03e6w5rw4k7qdax", "InitRect");

     label1:
        i0 = 0;

     label2:
        if i0 >= 4 goto label3;

        $r1 = r0.<h.ST_Rect_t: int[] boundary>;

        $r1[i0] = 0;

        i0 = i0 + 1;

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1wtvfzwbzj03e6w5rw4k7qdax", "InitRect");

        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1wtvfzwbzj03e6w5rw4k7qdax", "InitRect");

        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static h.ST_Rect_t NullRect()
    {
        h.ST_Rect_t $r0;
        int[] $r2, $r3, $r5, $r6;
        int $i0, i1;
        java.lang.Throwable $r7;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bvazxgli5q4yxvzl5kn1vjqpm", "NullRect");

     label1:
        $r0 = new h.ST_Rect_t;

        specialinvoke $r0.<h.ST_Rect_t: void <init>()>();

        $r2 = $r0.<h.ST_Rect_t: int[] boundary>;

        $r2[0] = 1;

        $r3 = $r0.<h.ST_Rect_t: int[] boundary>;

        $r3[2] = -1;

        i1 = 1;

     label2:
        if i1 >= 2 goto label3;

        $r5 = $r0.<h.ST_Rect_t: int[] boundary>;

        $r5[i1] = 0;

        $r6 = $r0.<h.ST_Rect_t: int[] boundary>;

        $i0 = i1 + 2;

        $r6[$i0] = 0;

        i1 = i1 + 1;

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bvazxgli5q4yxvzl5kn1vjqpm", "NullRect");

        return $r0;

     label4:
        $r7 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bvazxgli5q4yxvzl5kn1vjqpm", "NullRect");

        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static int RectArea(h.ST_Rect_t)
    {
        h.ST_Rect_t r0;
        int[] $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i8, i9, i10;
        java.lang.Throwable $r7;

        r0 := @parameter0: h.ST_Rect_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1ijarur71gcahchxz8vqf69na", "RectArea");

     label1:
        i6 = 1;

        $r1 = r0.<h.ST_Rect_t: int[] boundary>;

        $i1 = $r1[0];

        $r2 = r0.<h.ST_Rect_t: int[] boundary>;

        $i0 = $r2[2];

        if $i1 <= $i0 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1ijarur71gcahchxz8vqf69na", "RectArea");

        return 0;

     label3:
        i8 = 1;

        i9 = 0;

     label4:
        if i9 >= 2 goto label6;

        $r3 = r0.<h.ST_Rect_t: int[] boundary>;

        $i2 = i9 + 2;

        $i4 = $r3[$i2];

        $r4 = r0.<h.ST_Rect_t: int[] boundary>;

        $i3 = $r4[i9];

        i10 = $i4 - $i3;

        i6 = i6 * i10;

        $i5 = i6 / i10;

        if $i5 == i8 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6qc59bm54jy4hv9gw8a50rk0u");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("awx87c59fwl0w8r64jfd86jrd");

     label5:
        i8 = i6;

        i9 = i9 + 1;

        goto label4;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1ijarur71gcahchxz8vqf69na", "RectArea");

        return i8;

     label7:
        $r7 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1ijarur71gcahchxz8vqf69na", "RectArea");

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static h.ST_Rect_t CombineRect(h.ST_Rect_t, h.ST_Rect_t)
    {
        h.ST_Rect_t $r0, r2, r5, r18, r19;
        int[] $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, i11;
        smetana.core.__struct__ $r14, $r15;
        java.lang.Throwable $r16;

        r2 := @parameter0: h.ST_Rect_t;

        r5 := @parameter1: h.ST_Rect_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("tgmhi1wshyhqky2pappb6w6w", "CombineRect");

     label1:
        $r0 = new h.ST_Rect_t;

        specialinvoke $r0.<h.ST_Rect_t: void <init>()>();

        $r3 = r2.<h.ST_Rect_t: int[] boundary>;

        $i1 = $r3[0];

        $r4 = r2.<h.ST_Rect_t: int[] boundary>;

        $i0 = $r4[2];

        if $i1 <= $i0 goto label3;

        $r15 = virtualinvoke r5.<h.ST_Rect_t: smetana.core.__struct__ copy()>();

        r18 = (h.ST_Rect_t) $r15;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("tgmhi1wshyhqky2pappb6w6w", "CombineRect");

        return r18;

     label3:
        $r6 = r5.<h.ST_Rect_t: int[] boundary>;

        $i3 = $r6[0];

        $r7 = r5.<h.ST_Rect_t: int[] boundary>;

        $i2 = $r7[2];

        if $i3 <= $i2 goto label5;

        $r14 = virtualinvoke r2.<h.ST_Rect_t: smetana.core.__struct__ copy()>();

        r19 = (h.ST_Rect_t) $r14;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("tgmhi1wshyhqky2pappb6w6w", "CombineRect");

        return r19;

     label5:
        i11 = 0;

     label6:
        if i11 >= 2 goto label7;

        $r10 = $r0.<h.ST_Rect_t: int[] boundary>;

        $r8 = r2.<h.ST_Rect_t: int[] boundary>;

        $i5 = $r8[i11];

        $r9 = r5.<h.ST_Rect_t: int[] boundary>;

        $i4 = $r9[i11];

        $i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4);

        $r10[i11] = $i6;

        i7 = i11 + 2;

        $r13 = $r0.<h.ST_Rect_t: int[] boundary>;

        $r11 = r2.<h.ST_Rect_t: int[] boundary>;

        $i9 = $r11[i7];

        $r12 = r5.<h.ST_Rect_t: int[] boundary>;

        $i8 = $r12[i7];

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8);

        $r13[i7] = $i10;

        i11 = i11 + 1;

        goto label6;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("tgmhi1wshyhqky2pappb6w6w", "CombineRect");

        return $r0;

     label8:
        $r16 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("tgmhi1wshyhqky2pappb6w6w", "CombineRect");

        throw $r16;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static boolean Overlap(h.ST_Rect_t, h.ST_Rect_t)
    {
        int i0, $i1, $i2, $i3, $i4, i5;
        h.ST_Rect_t r0, r2;
        int[] $r1, $r3, $r4, $r5;
        java.lang.Throwable $r6;
        boolean z1;

        r0 := @parameter0: h.ST_Rect_t;

        r2 := @parameter1: h.ST_Rect_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9glce34jzknoqj98agg96k03o", "Overlap");

     label1:
        i5 = 0;

     label2:
        if i5 >= 2 goto label5;

        i0 = i5 + 2;

        $r1 = r0.<h.ST_Rect_t: int[] boundary>;

        $i2 = $r1[i5];

        $r3 = r2.<h.ST_Rect_t: int[] boundary>;

        $i1 = $r3[i0];

        if $i2 > $i1 goto label3;

        $r4 = r2.<h.ST_Rect_t: int[] boundary>;

        $i4 = $r4[i5];

        $r5 = r0.<h.ST_Rect_t: int[] boundary>;

        $i3 = $r5[i0];

        if $i4 <= $i3 goto label4;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9glce34jzknoqj98agg96k03o", "Overlap");

        return 0;

     label4:
        i5 = i5 + 1;

        goto label2;

     label5:
        z1 = staticinvoke <smetana.core.Macro: boolean N(int)>(0);

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9glce34jzknoqj98agg96k03o", "Overlap");

        return z1;

     label7:
        $r6 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9glce34jzknoqj98agg96k03o", "Overlap");

        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
