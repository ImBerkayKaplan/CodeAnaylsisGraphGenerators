public final class h.ST_Agnodeinfo_t extends h.ST_Agrec_s
{
    public h.ST_shape_desc shape;
    public h.SHAPE_INFO shape_info;
    public final h.ST_pointf coord;
    public double width;
    public double height;
    public double ht;
    public double lw;
    public double rw;
    public h.ST_textlabel_t label;
    public h.ST_textlabel_t xlabel;
    public h.ST_Agedge_s alg;
    public int id;
    public int heapindex;
    public int hops;
    public int showboxes;
    public boolean has_port;
    public int node_type;
    public int mark;
    public int onstack;
    public int ranktype;
    public int weight_class;
    public h.ST_Agnode_s next;
    public h.ST_Agnode_s prev;
    public final h.ST_elist in;
    public final h.ST_elist out;
    public final h.ST_elist flat_out;
    public final h.ST_elist flat_in;
    public final h.ST_elist other;
    public h.ST_Agraph_s clust;
    public int UF_size;
    public h.ST_Agnode_s UF_parent;
    public h.ST_Agnode_s inleaf;
    public h.ST_Agnode_s outleaf;
    public int rank;
    public int order;
    public double mval;
    public final h.ST_elist save_in;
    public final h.ST_elist save_out;
    public final h.ST_elist tree_in;
    public final h.ST_elist tree_out;
    public h.ST_Agedge_s par;
    public int low;
    public int lim;
    public int priority;

    public void <init>()
    {
        h.ST_Agnodeinfo_t r0;
        h.ST_pointf $r1;
        h.ST_elist $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: h.ST_Agnodeinfo_t;

        specialinvoke r0.<h.ST_Agrec_s: void <init>()>();

        $r1 = new h.ST_pointf;

        specialinvoke $r1.<h.ST_pointf: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_pointf coord> = $r1;

        r0.<h.ST_Agnodeinfo_t: h.ST_Agedge_s alg> = null;

        $r2 = new h.ST_elist;

        specialinvoke $r2.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist in> = $r2;

        $r3 = new h.ST_elist;

        specialinvoke $r3.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist out> = $r3;

        $r4 = new h.ST_elist;

        specialinvoke $r4.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist flat_out> = $r4;

        $r5 = new h.ST_elist;

        specialinvoke $r5.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist flat_in> = $r5;

        $r6 = new h.ST_elist;

        specialinvoke $r6.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist other> = $r6;

        $r7 = new h.ST_elist;

        specialinvoke $r7.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist save_in> = $r7;

        $r8 = new h.ST_elist;

        specialinvoke $r8.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist save_out> = $r8;

        $r9 = new h.ST_elist;

        specialinvoke $r9.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist tree_in> = $r9;

        $r10 = new h.ST_elist;

        specialinvoke $r10.<h.ST_elist: void <init>()>();

        r0.<h.ST_Agnodeinfo_t: h.ST_elist tree_out> = $r10;

        return;
    }
}
