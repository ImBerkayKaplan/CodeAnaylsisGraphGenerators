public class net.sourceforge.plantuml.style.CommandStyleMultilinesCSS extends net.sourceforge.plantuml.command.CommandMultilines2
{

    public void <init>()
    {
        net.sourceforge.plantuml.style.CommandStyleMultilinesCSS r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.command.MultilinesStrategy $r2;

        r0 := @this: net.sourceforge.plantuml.style.CommandStyleMultilinesCSS;

        $r1 = staticinvoke <net.sourceforge.plantuml.style.CommandStyleMultilinesCSS: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        $r2 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy REMOVE_STARTING_QUOTE>;

        specialinvoke r0.<net.sourceforge.plantuml.command.CommandMultilines2: void <init>(net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy)>($r1, $r2);

        return;
    }

    public java.lang.String getPatternEnd()
    {
        net.sourceforge.plantuml.style.CommandStyleMultilinesCSS r0;

        r0 := @this: net.sourceforge.plantuml.style.CommandStyleMultilinesCSS;

        return "^[%s]*\\</style\\>[%s]*$";
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5;
        net.sourceforge.plantuml.command.regex.RegexConcat $r6;

        $r0 = class "Lnet/sourceforge/plantuml/style/CommandStyleMultilinesCSS;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\<style\\>");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[2] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r6;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.TitledDiagram, net.sourceforge.plantuml.command.BlocLines)
    {
        boolean $z0, $z1;
        net.sourceforge.plantuml.TitledDiagram r0;
        net.sourceforge.plantuml.ISkinParam $r1, $r6, $r11;
        net.sourceforge.plantuml.command.BlocLines r2, $r3;
        java.util.Collection $r4;
        java.util.Iterator r5;
        net.sourceforge.plantuml.SkinParam $r7;
        net.sourceforge.plantuml.command.CommandExecutionResult $r8, $r12, $r14;
        java.lang.Object $r9;
        net.sourceforge.plantuml.style.Style r10;
        net.sourceforge.plantuml.style.NoStyleAvailableException $r13;
        net.sourceforge.plantuml.style.CommandStyleMultilinesCSS r15;
        net.sourceforge.plantuml.style.StyleBuilder r16;

        r15 := @this: net.sourceforge.plantuml.style.CommandStyleMultilinesCSS;

        r0 := @parameter0: net.sourceforge.plantuml.TitledDiagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        staticinvoke <net.sourceforge.plantuml.UseStyle: void setBetaStyle(boolean)>(1);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r12 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r12;

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.TitledDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r16 = interfaceinvoke $r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines subExtract(int,int)>(1, 1);

        $r4 = staticinvoke <net.sourceforge.plantuml.style.StyleLoader: java.util.Collection getDeclaredStyles(net.sourceforge.plantuml.command.BlocLines,net.sourceforge.plantuml.style.AutomaticCounter)>($r3, r16);

        r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.style.Style) $r9;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.TitledDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        interfaceinvoke $r11.<net.sourceforge.plantuml.ISkinParam: void muteStyle(net.sourceforge.plantuml.style.Style)>(r10);

        goto label2;

     label3:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.TitledDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = (net.sourceforge.plantuml.SkinParam) $r6;

        virtualinvoke $r7.<net.sourceforge.plantuml.SkinParam: void applyPendingStyleMigration()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

     label4:
        return $r8;

     label5:
        $r13 := @caughtexception;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("General failure: no style available.");

        return $r14;

        catch net.sourceforge.plantuml.style.NoStyleAvailableException from label1 to label4 with label5;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.style.CommandStyleMultilinesCSS r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.TitledDiagram $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.style.CommandStyleMultilinesCSS;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r3 = (net.sourceforge.plantuml.TitledDiagram) r1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.style.CommandStyleMultilinesCSS: net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.TitledDiagram,net.sourceforge.plantuml.command.BlocLines)>($r3, r2);

        return $r4;
    }
}
