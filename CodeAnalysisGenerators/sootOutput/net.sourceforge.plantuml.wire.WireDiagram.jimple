public class net.sourceforge.plantuml.wire.WireDiagram extends net.sourceforge.plantuml.UmlDiagram
{
    private final net.sourceforge.plantuml.wire.WBlock root;
    private final java.util.List spots;
    private final java.util.List hlinks;
    private final java.util.List vlinks;

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.wire.WireDiagram r1;

        r1 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("Wire Diagram");

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.UmlDiagramType $r3;
        net.sourceforge.plantuml.wire.WBlock $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        java.util.ArrayList $r6, $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        $r3 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType WIRE>;

        specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType)>(r1, r2, $r3);

        $r4 = new net.sourceforge.plantuml.wire.WBlock;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>()>();

        specialinvoke $r4.<net.sourceforge.plantuml.wire.WBlock: void <init>(java.lang.String,net.sourceforge.plantuml.ugraphic.UTranslate,double,double,net.sourceforge.plantuml.ugraphic.color.HColor)>("", $r5, 0.0, 0.0, null);

        r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root> = $r4;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List spots> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List hlinks> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List vlinks> = $r8;

        return;
    }

    protected net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r4;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r3;
        java.io.OutputStream r5;
        net.sourceforge.plantuml.core.ImageData $r6;
        int i0;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r5 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r1 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.svek.TextBlockBackcolored getTextBlock()>();

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r3);

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r5);

        return $r6;
    }

    private net.sourceforge.plantuml.svek.TextBlockBackcolored getTextBlock()
    {
        net.sourceforge.plantuml.wire.WireDiagram$1 $r0;
        net.sourceforge.plantuml.wire.WireDiagram r1;

        r1 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        $r0 = new net.sourceforge.plantuml.wire.WireDiagram$1;

        specialinvoke $r0.<net.sourceforge.plantuml.wire.WireDiagram$1: void <init>(net.sourceforge.plantuml.wire.WireDiagram)>(r1);

        return $r0;
    }

    private void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.wire.WBlock $r2;
        java.util.List $r3, $r4, $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6, $r7, $r8;
        java.util.Iterator r9, r11, r13;
        net.sourceforge.plantuml.wire.Spot r10;
        net.sourceforge.plantuml.wire.WLinkHorizontal r12;
        net.sourceforge.plantuml.wire.WLinkVertical r14;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        virtualinvoke $r2.<net.sourceforge.plantuml.wire.WBlock: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List spots>;

        r9 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.wire.Spot) $r8;

        virtualinvoke r10.<net.sourceforge.plantuml.wire.Spot: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        goto label1;

     label2:
        $r4 = r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List hlinks>;

        r11 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (net.sourceforge.plantuml.wire.WLinkHorizontal) $r7;

        virtualinvoke r12.<net.sourceforge.plantuml.wire.WLinkHorizontal: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        goto label3;

     label4:
        $r5 = r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List vlinks>;

        r13 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r6 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (net.sourceforge.plantuml.wire.WLinkVertical) $r6;

        virtualinvoke r14.<net.sourceforge.plantuml.wire.WLinkVertical: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        goto label5;

     label6:
        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addComponent(java.lang.String, java.lang.String, int, int, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        java.lang.String r1, r2;
        int i0, i1, i2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;
        double $d0, $d1;
        net.sourceforge.plantuml.wire.WBlock $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 = specialinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: int computeIndentationLevel(java.lang.String)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        $d1 = (double) i1;

        $d0 = (double) i2;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult addBlock(int,java.lang.String,double,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(i0, r2, $d1, $d0, r3);

        return $r5;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult newColumn(java.lang.String)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        java.lang.String r1;
        int i0;
        net.sourceforge.plantuml.wire.WBlock $r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: java.lang.String;

        i0 = specialinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: int computeIndentationLevel(java.lang.String)>(r1);

        $r2 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult newColumn(int)>(i0);

        return $r3;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult spot(java.lang.String, net.sourceforge.plantuml.ugraphic.color.HColor, java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        java.lang.String r1, r6, r7, $r14;
        net.sourceforge.plantuml.wire.WBlock $r2, r3;
        net.sourceforge.plantuml.wire.Spot $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r5;
        java.util.List $r9;
        net.sourceforge.plantuml.command.CommandExecutionResult $r10, $r15;
        java.lang.StringBuilder $r11, $r12, $r13;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r6 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getBlock(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such element ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r14);

        return $r15;

     label1:
        $r4 = new net.sourceforge.plantuml.wire.Spot;

        specialinvoke $r4.<net.sourceforge.plantuml.wire.Spot: void <init>(net.sourceforge.plantuml.wire.WBlock,net.sourceforge.plantuml.ugraphic.color.HColor,java.lang.String,java.lang.String)>(r3, r5, r6, r7);

        $r9 = r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List spots>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r10 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r10;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult wgoto(java.lang.String, double, double)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        java.lang.String r1;
        int i0;
        double d0, d1;
        net.sourceforge.plantuml.wire.WBlock $r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 = specialinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: int computeIndentationLevel(java.lang.String)>(r1);

        $r2 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult wgoto(int,double,double)>(i0, d0, d1);

        return $r3;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult wmove(java.lang.String, double, double)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        java.lang.String r1;
        int i0;
        double d0, d1;
        net.sourceforge.plantuml.wire.WBlock $r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        i0 = specialinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: int computeIndentationLevel(java.lang.String)>(r1);

        $r2 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult wmove(int,double,double)>(i0, d0, d1);

        return $r3;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult print(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        java.lang.String r1, r6;
        int i0;
        net.sourceforge.plantuml.FileFormat $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.wire.WBlock $r4;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.command.CommandExecutionResult $r7;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        i0 = specialinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: int computeIndentationLevel(java.lang.String)>(r1);

        $r2 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder()>();

        $r4 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = virtualinvoke $r4.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult print(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam,int,java.lang.String)>(r3, $r5, i0, r6);

        return $r7;
    }

    private int computeIndentationLevel(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;
        net.sourceforge.plantuml.wire.WireDiagram r2;

        r2 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("    ", "\t");

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return i0;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult vlink(java.lang.String, java.lang.String, java.lang.String, java.lang.String, net.sourceforge.plantuml.wire.WLinkType, net.sourceforge.plantuml.wire.WArrowDirection, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        java.lang.String r1, r4, r7, r8, $r22, $r27;
        net.sourceforge.plantuml.wire.WBlock $r2, r3, $r5, r6;
        net.sourceforge.plantuml.wire.WLinkType r9;
        net.sourceforge.plantuml.ugraphic.UTranslate r10, $r11;
        double d0;
        net.sourceforge.plantuml.wire.WLinkVertical $r12;
        java.util.List $r13;
        net.sourceforge.plantuml.ISkinParam $r14;
        net.sourceforge.plantuml.wire.WArrowDirection r15;
        net.sourceforge.plantuml.ugraphic.color.HColor r16;
        net.sourceforge.plantuml.cucadiagram.Display r17;
        net.sourceforge.plantuml.command.CommandExecutionResult $r18, $r23, $r28;
        java.lang.StringBuilder $r19, $r20, $r21, $r24, $r25, $r26;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r9 := @parameter4: net.sourceforge.plantuml.wire.WLinkType;

        r15 := @parameter5: net.sourceforge.plantuml.wire.WArrowDirection;

        r16 := @parameter6: net.sourceforge.plantuml.ugraphic.color.HColor;

        r17 := @parameter7: net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getBlock(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such element ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r27);

        return $r28;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getBlock(java.lang.String)>(r4);

        if r6 != null goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such element ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r22);

        return $r23;

     label2:
        r10 = virtualinvoke r3.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getNextOutVertical(java.lang.String,java.lang.String,net.sourceforge.plantuml.wire.WLinkType)>(r7, r8, r9);

        $r11 = virtualinvoke r6.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getAbsolutePosition(java.lang.String,java.lang.String)>("0", "0");

        d0 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $r13 = r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List vlinks>;

        $r12 = new net.sourceforge.plantuml.wire.WLinkVertical;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r12.<net.sourceforge.plantuml.wire.WLinkVertical: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.UTranslate,double,net.sourceforge.plantuml.wire.WLinkType,net.sourceforge.plantuml.wire.WArrowDirection,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.Display)>($r14, r10, d0, r9, r15, r16, r17);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r18 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r18;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult hlink(java.lang.String, java.lang.String, java.lang.String, java.lang.String, net.sourceforge.plantuml.wire.WLinkType, net.sourceforge.plantuml.wire.WArrowDirection, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        java.lang.String r1, r4, r7, r8, $r22, $r27;
        net.sourceforge.plantuml.wire.WBlock $r2, r3, $r5, r6;
        net.sourceforge.plantuml.wire.WLinkType r9;
        net.sourceforge.plantuml.ugraphic.UTranslate r10, $r11;
        double d0;
        net.sourceforge.plantuml.wire.WLinkHorizontal $r12;
        java.util.List $r13;
        net.sourceforge.plantuml.ISkinParam $r14;
        net.sourceforge.plantuml.wire.WArrowDirection r15;
        net.sourceforge.plantuml.ugraphic.color.HColor r16;
        net.sourceforge.plantuml.cucadiagram.Display r17;
        net.sourceforge.plantuml.command.CommandExecutionResult $r18, $r23, $r28;
        java.lang.StringBuilder $r19, $r20, $r21, $r24, $r25, $r26;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r9 := @parameter4: net.sourceforge.plantuml.wire.WLinkType;

        r15 := @parameter5: net.sourceforge.plantuml.wire.WArrowDirection;

        r16 := @parameter6: net.sourceforge.plantuml.ugraphic.color.HColor;

        r17 := @parameter7: net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getBlock(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such element ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r27);

        return $r28;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.wire.WBlock root>;

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getBlock(java.lang.String)>(r4);

        if r6 != null goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No such element ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r22);

        return $r23;

     label2:
        r10 = virtualinvoke r3.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getNextOutHorizontal(java.lang.String,java.lang.String,net.sourceforge.plantuml.wire.WLinkType)>(r7, r8, r9);

        $r11 = virtualinvoke r6.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getAbsolutePosition(java.lang.String,java.lang.String)>("0", "0");

        d0 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $r13 = r0.<net.sourceforge.plantuml.wire.WireDiagram: java.util.List hlinks>;

        $r12 = new net.sourceforge.plantuml.wire.WLinkHorizontal;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r12.<net.sourceforge.plantuml.wire.WLinkHorizontal: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.UTranslate,double,net.sourceforge.plantuml.wire.WLinkType,net.sourceforge.plantuml.wire.WArrowDirection,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.Display)>($r14, r10, d0, r9, r15, r16, r17);

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r18 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r18;
    }

    static void access$000(net.sourceforge.plantuml.wire.WireDiagram, net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wire.WireDiagram r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @parameter0: net.sourceforge.plantuml.wire.WireDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.wire.WireDiagram: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }
}
