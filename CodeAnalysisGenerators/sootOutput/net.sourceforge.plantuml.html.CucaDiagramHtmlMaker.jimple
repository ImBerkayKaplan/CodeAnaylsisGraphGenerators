public final class net.sourceforge.plantuml.html.CucaDiagramHtmlMaker extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram;
    private final net.sourceforge.plantuml.security.SFile dir;

    public void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram, net.sourceforge.plantuml.security.SFile)
    {
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r1;
        net.sourceforge.plantuml.security.SFile r2;

        r0 := @this: net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r2 := @parameter1: net.sourceforge.plantuml.security.SFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram> = r1;

        r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.security.SFile dir> = r2;

        return;
    }

    public java.util.List create() throws java.io.IOException
    {
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker r0;
        net.sourceforge.plantuml.security.SFile $r1, $r2, $r3, r4, $r13, $r18;
        boolean $z0;
        java.io.PrintWriter r5;
        net.sourceforge.plantuml.cucadiagram.LeafType $r6, $r7, $r8, $r9, $r10;
        net.sourceforge.plantuml.FileImageData[] $r11;
        net.sourceforge.plantuml.FileImageData $r12;
        java.util.List $r14;
        java.io.IOException $r15;
        java.lang.StringBuilder $r16, $r17, $r19;
        java.lang.String $r20;

        r0 := @this: net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        $r1 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.security.SFile dir>;

        virtualinvoke $r1.<net.sourceforge.plantuml.security.SFile: void mkdirs()>();

        $r2 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.security.SFile dir>;

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.security.SFile: boolean exists()>();

        if $z0 != 0 goto label1;

        $r15 = new java.io.IOException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create ");

        $r18 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.security.SFile dir>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.security.SFile dir>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>("index.html");

        r5 = virtualinvoke r4.<net.sourceforge.plantuml.security.SFile: java.io.PrintWriter createPrintWriter()>();

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<html>");

        $r6 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ENUM>;

        specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void printAllType(java.io.PrintWriter,net.sourceforge.plantuml.cucadiagram.LeafType)>(r5, $r6);

        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType INTERFACE>;

        specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void printAllType(java.io.PrintWriter,net.sourceforge.plantuml.cucadiagram.LeafType)>(r5, $r7);

        $r8 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ANNOTATION>;

        specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void printAllType(java.io.PrintWriter,net.sourceforge.plantuml.cucadiagram.LeafType)>(r5, $r8);

        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ABSTRACT_CLASS>;

        specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void printAllType(java.io.PrintWriter,net.sourceforge.plantuml.cucadiagram.LeafType)>(r5, $r9);

        $r10 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void printAllType(java.io.PrintWriter,net.sourceforge.plantuml.cucadiagram.LeafType)>(r5, $r10);

        specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void htmlClose(java.io.PrintWriter)>(r5);

        $r11 = newarray (net.sourceforge.plantuml.FileImageData)[1];

        $r12 = new net.sourceforge.plantuml.FileImageData;

        $r13 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.security.SFile dir>;

        specialinvoke $r12.<net.sourceforge.plantuml.FileImageData: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.core.ImageData)>($r13, null);

        $r11[0] = $r12;

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11);

        return $r14;
    }

    private void printAllType(java.io.PrintWriter, net.sourceforge.plantuml.cucadiagram.LeafType) throws java.io.IOException
    {
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker r0;
        net.sourceforge.plantuml.cucadiagram.LeafType r1, $r14;
        boolean $z0, $z1;
        java.io.PrintWriter r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7;
        java.lang.String $r5, $r8, $r15;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r9;
        java.util.Collection $r10;
        java.util.Iterator r11;
        java.lang.Object $r12;
        net.sourceforge.plantuml.cucadiagram.IEntity r13;

        r0 := @this: net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        r2 := @parameter0: java.io.PrintWriter;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.LeafType;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: boolean hasSome(net.sourceforge.plantuml.cucadiagram.LeafType)>(r1);

        if $z0 == 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>");

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.LeafType: java.lang.String toHtml()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</h2>");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r8);

        $r9 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.util.Collection getLeafsvalues()>();

        r11 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (net.sourceforge.plantuml.cucadiagram.IEntity) $r12;

        $r14 = interfaceinvoke r13.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        if $r14 == r1 goto label2;

        goto label1;

     label2:
        specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void export(net.sourceforge.plantuml.cucadiagram.IEntity)>(r13);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("<li>");

        $r15 = staticinvoke <net.sourceforge.plantuml.html.LinkHtmlPrinter: java.lang.String htmlLink(net.sourceforge.plantuml.cucadiagram.IEntity)>(r13);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r15);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("</li>");

        goto label1;

     label3:
        return;
    }

    private boolean hasSome(net.sourceforge.plantuml.cucadiagram.LeafType)
    {
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r1;
        java.util.Collection $r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r4;
        net.sourceforge.plantuml.cucadiagram.IEntity r5;
        net.sourceforge.plantuml.cucadiagram.LeafType $r6, r7;

        r0 := @this: net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        r7 := @parameter0: net.sourceforge.plantuml.cucadiagram.LeafType;

        $r1 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.util.Collection getLeafsvalues()>();

        r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.cucadiagram.IEntity) $r4;

        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        if $r6 != r7 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private void export(net.sourceforge.plantuml.cucadiagram.IEntity) throws java.io.IOException
    {
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker r0;
        net.sourceforge.plantuml.cucadiagram.IEntity r1, r30;
        net.sourceforge.plantuml.security.SFile $r2, r4;
        java.lang.String $r3, $r8, $r9, $r12, $r16, $r19, $r35, $r36, $r40, $r41, $r43, $r44, $r51, $r52, r57;
        java.io.PrintWriter r5;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r13, $r14, $r17, $r18;
        net.sourceforge.plantuml.cucadiagram.LeafType $r15;
        net.sourceforge.plantuml.cucadiagram.Display $r20, $r22, $r24, $r26, $r28, $r31;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        net.sourceforge.plantuml.cucadiagram.Bodier $r21, $r23, $r25, $r27;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r29, $r33, $r37, $r39, $r42, $r49, $r50;
        java.util.ListIterator r32, r53, r58, r60;
        java.lang.CharSequence r34, r54, r59, r61;
        net.sourceforge.plantuml.html.LinkHtmlPrinter $r38;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r45;
        net.sourceforge.plantuml.ISkinParam $r46;
        net.sourceforge.plantuml.Guillemet $r47;
        java.util.List $r48;
        net.sourceforge.plantuml.cucadiagram.Stereotype r55;
        java.util.Iterator r56, r63, r66;
        java.util.Collection r62, r65;
        net.sourceforge.plantuml.cucadiagram.Link r64;

        r0 := @this: net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r2 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.security.SFile dir>;

        $r3 = staticinvoke <net.sourceforge.plantuml.html.LinkHtmlPrinter: java.lang.String urlOf(net.sourceforge.plantuml.cucadiagram.IEntity)>(r1);

        r4 = virtualinvoke $r2.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>($r3);

        r5 = virtualinvoke r4.<net.sourceforge.plantuml.security.SFile: java.io.PrintWriter createPrintWriter()>();

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<html>");

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<title>");

        $r8 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String unicodeForHtml(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</title>");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>($r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>");

        $r15 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.cucadiagram.LeafType: java.lang.String toHtml()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</h2>");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>($r19);

        $r20 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        r53 = virtualinvoke $r20.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label01:
        $z0 = interfaceinvoke r53.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r50 = interfaceinvoke r53.<java.util.Iterator: java.lang.Object next()>();

        r54 = (java.lang.CharSequence) $r50;

        $r51 = interfaceinvoke r54.<java.lang.CharSequence: java.lang.String toString()>();

        $r52 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String unicodeForHtml(java.lang.String)>($r51);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>($r52);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<br>");

        goto label01;

     label02:
        r55 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        if r55 == null goto label04;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<hr>");

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<h3>Stereotype</h3>");

        $r45 = r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r46 = virtualinvoke $r45.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r47 = interfaceinvoke $r46.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.Guillemet guillemet()>();

        $r48 = virtualinvoke r55.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getLabels(net.sourceforge.plantuml.Guillemet)>($r47);

        r56 = interfaceinvoke $r48.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z6 = interfaceinvoke r56.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label04;

        $r49 = interfaceinvoke r56.<java.util.Iterator: java.lang.Object next()>();

        r57 = (java.lang.String) $r49;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>(r57);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<br>");

        goto label03;

     label04:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<hr>");

        $r21 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Bodier getBodier()>();

        $r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.cucadiagram.Bodier: net.sourceforge.plantuml.cucadiagram.Display getFieldsToDisplay()>();

        $i0 = virtualinvoke $r22.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        if $i0 != 0 goto label05;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<h2>No fields</h2>");

        goto label08;

     label05:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<h2>Fields:</h2>");

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<ul>");

        $r23 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Bodier getBodier()>();

        $r24 = interfaceinvoke $r23.<net.sourceforge.plantuml.cucadiagram.Bodier: net.sourceforge.plantuml.cucadiagram.Display getFieldsToDisplay()>();

        r58 = virtualinvoke $r24.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label06:
        $z1 = interfaceinvoke r58.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r42 = interfaceinvoke r58.<java.util.Iterator: java.lang.Object next()>();

        r59 = (java.lang.CharSequence) $r42;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<li>");

        $r43 = interfaceinvoke r59.<java.lang.CharSequence: java.lang.String toString()>();

        $r44 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String unicodeForHtml(java.lang.String)>($r43);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>($r44);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("</li>");

        goto label06;

     label07:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("</ul>");

     label08:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<hr>");

        $r25 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Bodier getBodier()>();

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.cucadiagram.Bodier: net.sourceforge.plantuml.cucadiagram.Display getMethodsToDisplay()>();

        $i1 = virtualinvoke $r26.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        if $i1 != 0 goto label09;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<h2>No methods</h2>");

        goto label12;

     label09:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<h2>Methods:</h2>");

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<ul>");

        $r27 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Bodier getBodier()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.cucadiagram.Bodier: net.sourceforge.plantuml.cucadiagram.Display getMethodsToDisplay()>();

        r60 = virtualinvoke $r28.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label10:
        $z2 = interfaceinvoke r60.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r39 = interfaceinvoke r60.<java.util.Iterator: java.lang.Object next()>();

        r61 = (java.lang.CharSequence) $r39;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<li>");

        $r40 = interfaceinvoke r61.<java.lang.CharSequence: java.lang.String toString()>();

        $r41 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String unicodeForHtml(java.lang.String)>($r40);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>($r41);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("</li>");

        goto label10;

     label11:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("</ul>");

     label12:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<hr>");

        r62 = specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: java.util.Collection getLinksButNotes(net.sourceforge.plantuml.cucadiagram.IEntity)>(r1);

        $i2 = interfaceinvoke r62.<java.util.Collection: int size()>();

        if $i2 != 0 goto label13;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<h2>No links</h2>");

        goto label16;

     label13:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<h2>Links:</h2>");

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<ul>");

        r63 = interfaceinvoke r62.<java.util.Collection: java.util.Iterator iterator()>();

     label14:
        $z3 = interfaceinvoke r63.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r37 = interfaceinvoke r63.<java.util.Iterator: java.lang.Object next()>();

        r64 = (net.sourceforge.plantuml.cucadiagram.Link) $r37;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<li>");

        $r38 = new net.sourceforge.plantuml.html.LinkHtmlPrinter;

        specialinvoke $r38.<net.sourceforge.plantuml.html.LinkHtmlPrinter: void <init>(net.sourceforge.plantuml.cucadiagram.Link,net.sourceforge.plantuml.cucadiagram.IEntity)>(r64, r1);

        virtualinvoke $r38.<net.sourceforge.plantuml.html.LinkHtmlPrinter: void printLink(java.io.PrintWriter)>(r5);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("</li>");

        goto label14;

     label15:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("</ul>");

     label16:
        r65 = specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: java.util.Collection getNotes(net.sourceforge.plantuml.cucadiagram.IEntity)>(r1);

        $i3 = interfaceinvoke r65.<java.util.Collection: int size()>();

        if $i3 <= 0 goto label21;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<hr>");

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<h2>Notes:</h2>");

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<ul>");

        r66 = interfaceinvoke r65.<java.util.Collection: java.util.Iterator iterator()>();

     label17:
        $z4 = interfaceinvoke r66.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label20;

        $r29 = interfaceinvoke r66.<java.util.Iterator: java.lang.Object next()>();

        r30 = (net.sourceforge.plantuml.cucadiagram.IEntity) $r29;

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<li>");

        $r31 = interfaceinvoke r30.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        r32 = virtualinvoke $r31.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label18:
        $z5 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label19;

        $r33 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r34 = (java.lang.CharSequence) $r33;

        $r35 = interfaceinvoke r34.<java.lang.CharSequence: java.lang.String toString()>();

        $r36 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String unicodeForHtml(java.lang.String)>($r35);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>($r36);

        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("<br>");

        goto label18;

     label19:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("</li>");

        goto label17;

     label20:
        virtualinvoke r5.<java.io.PrintWriter: void println(java.lang.String)>("</ul>");

     label21:
        specialinvoke r0.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void htmlClose(java.io.PrintWriter)>(r5);

        return;
    }

    private void htmlClose(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker r1;

        r1 := @this: net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        r0 := @parameter0: java.io.PrintWriter;

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("<hr>");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("<a href=index.html>Back to index</a>");

        virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>("</html>");

        virtualinvoke r0.<java.io.PrintWriter: void close()>();

        return;
    }

    private java.util.Collection getNotes(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker r2;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r3;
        java.util.List $r4, $r6;
        java.util.Iterator r5;
        java.lang.Object $r7;
        net.sourceforge.plantuml.cucadiagram.Link r8;
        net.sourceforge.plantuml.cucadiagram.IEntity r9, $r10, $r13, $r14;
        boolean $z0, $z2;
        net.sourceforge.plantuml.cucadiagram.LeafType $r11, $r12, $r15, $r16;

        r2 := @this: net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        r9 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.util.List getLinks()>();

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.cucadiagram.Link) $r7;

        $z0 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Link: boolean contains(net.sourceforge.plantuml.cucadiagram.IEntity)>(r9);

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r10 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r12 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        if $r11 == $r12 goto label3;

        $r14 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r16 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        if $r15 != $r16 goto label4;

     label3:
        $r13 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getOther(net.sourceforge.plantuml.cucadiagram.IEntity)>(r9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

     label4:
        goto label1;

     label5:
        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r6;
    }

    private java.util.Collection getLinksButNotes(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker r2;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r3;
        java.util.List $r4, $r6;
        java.util.Iterator r5;
        java.lang.Object $r7;
        net.sourceforge.plantuml.cucadiagram.Link r8;
        net.sourceforge.plantuml.cucadiagram.IEntity r9, $r10, $r13;
        boolean $z0, $z2;
        net.sourceforge.plantuml.cucadiagram.LeafType $r11, $r12, $r14, $r15;

        r2 := @this: net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        r9 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.util.List getLinks()>();

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.cucadiagram.Link) $r7;

        $z0 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Link: boolean contains(net.sourceforge.plantuml.cucadiagram.IEntity)>(r9);

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r10 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r12 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        if $r11 == $r12 goto label1;

        $r13 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r15 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        if $r14 != $r15 goto label3;

        goto label1;

     label3:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r8);

        goto label1;

     label4:
        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r6;
    }
}
