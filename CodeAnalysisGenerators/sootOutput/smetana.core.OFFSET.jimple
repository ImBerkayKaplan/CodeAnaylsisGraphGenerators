public class smetana.core.OFFSET extends java.lang.Object
{
    private final java.lang.String field;
    private final int sign;

    public int getSign()
    {
        smetana.core.OFFSET r0;
        int $i0;

        r0 := @this: smetana.core.OFFSET;

        $i0 = r0.<smetana.core.OFFSET: int sign>;

        return $i0;
    }

    public void <init>(java.lang.String)
    {
        smetana.core.OFFSET r0;
        java.lang.String r1;

        r0 := @this: smetana.core.OFFSET;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<smetana.core.OFFSET: java.lang.String field> = r1;

        r0.<smetana.core.OFFSET: int sign> = 1;

        return;
    }

    private void <init>(int)
    {
        smetana.core.OFFSET r0;
        int i0;

        r0 := @this: smetana.core.OFFSET;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<smetana.core.OFFSET: java.lang.String field> = null;

        r0.<smetana.core.OFFSET: int sign> = i0;

        return;
    }

    public java.lang.String toString()
    {
        smetana.core.OFFSET r0;
        java.lang.String $r1, $r4, $r7, $r12;
        java.lang.StringBuilder $r2, $r3, $r5, $r6, $r8, $r9, $r10, $r11;
        int $i0;

        r0 := @this: smetana.core.OFFSET;

        $r1 = r0.<smetana.core.OFFSET: java.lang.String field>;

        if $r1 != null goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r0.<smetana.core.OFFSET: int sign>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r4 = r0.<smetana.core.OFFSET: java.lang.String field>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static smetana.core.OFFSET externalHolder()
    {
        smetana.core.OFFSET $r0;

        $r0 = new smetana.core.OFFSET;

        specialinvoke $r0.<smetana.core.OFFSET: void <init>(int)>(-1);

        return $r0;
    }

    public static smetana.core.OFFSET zero()
    {
        smetana.core.OFFSET $r0;

        $r0 = new smetana.core.OFFSET;

        specialinvoke $r0.<smetana.core.OFFSET: void <init>(int)>(0);

        return $r0;
    }

    public smetana.core.OFFSET negative()
    {
        smetana.core.OFFSET r0;

        r0 := @this: smetana.core.OFFSET;

        return r0;
    }

    public java.lang.String getField()
    {
        smetana.core.OFFSET r0;
        java.lang.String $r1;

        r0 := @this: smetana.core.OFFSET;

        $r1 = r0.<smetana.core.OFFSET: java.lang.String field>;

        return $r1;
    }
}
