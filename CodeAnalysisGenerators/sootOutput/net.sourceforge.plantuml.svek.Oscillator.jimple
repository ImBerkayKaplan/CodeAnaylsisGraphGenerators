public class net.sourceforge.plantuml.svek.Oscillator extends java.lang.Object
{
    private int n;
    private int i;
    private char seg;
    private int x;
    private int y;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        net.sourceforge.plantuml.svek.Oscillator r0;

        r0 := @this: net.sourceforge.plantuml.svek.Oscillator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.Oscillator: int n> = 3;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int i> = 0;

        r0.<net.sourceforge.plantuml.svek.Oscillator: char seg> = 65;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int x> = -1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int y> = -1;

        return;
    }

    public java.awt.geom.Point2D$Double nextPosition()
    {
        boolean $z0;
        net.sourceforge.plantuml.svek.Oscillator r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        java.awt.geom.Point2D$Double $r1;
        double $d0, $d1;
        char $c7, $c8, $c9, $c10;
        java.lang.UnsupportedOperationException $r3;
        java.lang.AssertionError $r5;

        r0 := @this: net.sourceforge.plantuml.svek.Oscillator;

        $z0 = <net.sourceforge.plantuml.svek.Oscillator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i37 = r0.<net.sourceforge.plantuml.svek.Oscillator: int n>;

        $i38 = $i37 % 2;

        if $i38 == 1 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $i0 = r0.<net.sourceforge.plantuml.svek.Oscillator: int n>;

        $i1 = $i0 - 1;

        i2 = $i1 / 2;

        $r1 = new java.awt.geom.Point2D$Double;

        $i3 = r0.<net.sourceforge.plantuml.svek.Oscillator: int x>;

        $d1 = (double) $i3;

        $i4 = r0.<net.sourceforge.plantuml.svek.Oscillator: int y>;

        $d0 = (double) $i4;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        $i5 = r0.<net.sourceforge.plantuml.svek.Oscillator: int i>;

        $i6 = $i5 + 1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int i> = $i6;

        $c7 = r0.<net.sourceforge.plantuml.svek.Oscillator: char seg>;

        if $c7 != 65 goto label2;

        $i32 = r0.<net.sourceforge.plantuml.svek.Oscillator: int x>;

        $i33 = $i32 + 1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int x> = $i33;

        $i34 = r0.<net.sourceforge.plantuml.svek.Oscillator: int x>;

        if $i34 <= i2 goto label6;

        r0.<net.sourceforge.plantuml.svek.Oscillator: char seg> = 66;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int x> = i2;

        $i35 = neg i2;

        $i36 = $i35 + 1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int y> = $i36;

        goto label6;

     label2:
        $c8 = r0.<net.sourceforge.plantuml.svek.Oscillator: char seg>;

        if $c8 != 66 goto label3;

        $i28 = r0.<net.sourceforge.plantuml.svek.Oscillator: int y>;

        $i29 = $i28 + 1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int y> = $i29;

        $i30 = r0.<net.sourceforge.plantuml.svek.Oscillator: int y>;

        if $i30 <= i2 goto label6;

        r0.<net.sourceforge.plantuml.svek.Oscillator: char seg> = 67;

        $i31 = i2 - 1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int x> = $i31;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int y> = i2;

        goto label6;

     label3:
        $c9 = r0.<net.sourceforge.plantuml.svek.Oscillator: char seg>;

        if $c9 != 67 goto label4;

        $i22 = r0.<net.sourceforge.plantuml.svek.Oscillator: int x>;

        $i23 = $i22 - 1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int x> = $i23;

        $i25 = r0.<net.sourceforge.plantuml.svek.Oscillator: int x>;

        $i24 = neg i2;

        if $i25 >= $i24 goto label6;

        r0.<net.sourceforge.plantuml.svek.Oscillator: char seg> = 68;

        $i26 = neg i2;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int x> = $i26;

        $i27 = i2 - 1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int y> = $i27;

        goto label6;

     label4:
        $c10 = r0.<net.sourceforge.plantuml.svek.Oscillator: char seg>;

        if $c10 != 68 goto label5;

        $i11 = r0.<net.sourceforge.plantuml.svek.Oscillator: int y>;

        $i12 = $i11 - 1;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int y> = $i12;

        $i14 = r0.<net.sourceforge.plantuml.svek.Oscillator: int y>;

        $i13 = neg i2;

        if $i14 != $i13 goto label6;

        $i15 = r0.<net.sourceforge.plantuml.svek.Oscillator: int n>;

        $i16 = $i15 + 2;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int n> = $i16;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int i> = 0;

        $i17 = r0.<net.sourceforge.plantuml.svek.Oscillator: int n>;

        $i18 = $i17 - 1;

        $i19 = $i18 / 2;

        $i20 = neg $i19;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int x> = $i20;

        $i21 = r0.<net.sourceforge.plantuml.svek.Oscillator: int x>;

        r0.<net.sourceforge.plantuml.svek.Oscillator: int y> = $i21;

        r0.<net.sourceforge.plantuml.svek.Oscillator: char seg> = 65;

        goto label6;

     label5:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;

     label6:
        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/svek/Oscillator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.svek.Oscillator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
