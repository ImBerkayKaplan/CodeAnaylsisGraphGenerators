public class net.sourceforge.plantuml.project.core.Resource extends java.lang.Object
{
    private final java.lang.String name;
    private net.sourceforge.plantuml.project.draw.ResourceDraw draw;
    private final net.sourceforge.plantuml.project.OpenClose openClose;

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        net.sourceforge.plantuml.project.OpenClose $r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.project.OpenClose;

        specialinvoke $r1.<net.sourceforge.plantuml.project.OpenClose: void <init>()>();

        r0.<net.sourceforge.plantuml.project.core.Resource: net.sourceforge.plantuml.project.OpenClose openClose> = $r1;

        r0.<net.sourceforge.plantuml.project.core.Resource: java.lang.String name> = r2;

        return;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        $r1 = r0.<net.sourceforge.plantuml.project.core.Resource: java.lang.String name>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.project.core.Resource r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.project.core.Resource;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.project.core.Resource) r0;

        $r4 = r2.<net.sourceforge.plantuml.project.core.Resource: java.lang.String name>;

        $r3 = r1.<net.sourceforge.plantuml.project.core.Resource: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        $r1 = r0.<net.sourceforge.plantuml.project.core.Resource: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getName()
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        $r1 = r0.<net.sourceforge.plantuml.project.core.Resource: java.lang.String name>;

        return $r1;
    }

    public net.sourceforge.plantuml.project.draw.ResourceDraw getResourceDraw()
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        net.sourceforge.plantuml.project.draw.ResourceDraw $r1;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        $r1 = r0.<net.sourceforge.plantuml.project.core.Resource: net.sourceforge.plantuml.project.draw.ResourceDraw draw>;

        return $r1;
    }

    public void setTaskDraw(net.sourceforge.plantuml.project.draw.ResourceDraw)
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        net.sourceforge.plantuml.project.draw.ResourceDraw r1;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        r1 := @parameter0: net.sourceforge.plantuml.project.draw.ResourceDraw;

        r0.<net.sourceforge.plantuml.project.core.Resource: net.sourceforge.plantuml.project.draw.ResourceDraw draw> = r1;

        return;
    }

    public boolean isClosedAt(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        net.sourceforge.plantuml.project.time.Day r1;
        net.sourceforge.plantuml.project.OpenClose $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $r2 = r0.<net.sourceforge.plantuml.project.core.Resource: net.sourceforge.plantuml.project.OpenClose openClose>;

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.project.OpenClose: boolean isClosed(net.sourceforge.plantuml.project.time.Day)>(r1);

        return $z0;
    }

    public void addCloseDay(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        net.sourceforge.plantuml.project.time.Day r1;
        net.sourceforge.plantuml.project.OpenClose $r2;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $r2 = r0.<net.sourceforge.plantuml.project.core.Resource: net.sourceforge.plantuml.project.OpenClose openClose>;

        virtualinvoke $r2.<net.sourceforge.plantuml.project.OpenClose: void close(net.sourceforge.plantuml.project.time.Day)>(r1);

        return;
    }

    public void addForceOnDay(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        net.sourceforge.plantuml.project.time.Day r1;
        net.sourceforge.plantuml.project.OpenClose $r2;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $r2 = r0.<net.sourceforge.plantuml.project.core.Resource: net.sourceforge.plantuml.project.OpenClose openClose>;

        virtualinvoke $r2.<net.sourceforge.plantuml.project.OpenClose: void open(net.sourceforge.plantuml.project.time.Day)>(r1);

        return;
    }

    public void addCloseDay(net.sourceforge.plantuml.project.time.DayOfWeek)
    {
        net.sourceforge.plantuml.project.core.Resource r0;
        net.sourceforge.plantuml.project.time.DayOfWeek r1;
        net.sourceforge.plantuml.project.OpenClose $r2;

        r0 := @this: net.sourceforge.plantuml.project.core.Resource;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.DayOfWeek;

        $r2 = r0.<net.sourceforge.plantuml.project.core.Resource: net.sourceforge.plantuml.project.OpenClose openClose>;

        virtualinvoke $r2.<net.sourceforge.plantuml.project.OpenClose: void close(net.sourceforge.plantuml.project.time.DayOfWeek)>(r1);

        return;
    }
}
