class net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange extends java.lang.Object
{
    private final int start;
    private final int end;

    public void <init>(int, int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 <= i1 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange: int start> = i0;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange: int end> = i1;

        return;
    }

    public int start()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange;

        $i0 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange: int start>;

        return $i0;
    }

    public int end()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange;

        $i0 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange: int end>;

        return $i0;
    }

    public net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange merge(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange $r0, r1, r2;
        int $i0, $i1;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange;

        r2 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange;

        $r0 = new net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange;

        $i1 = r1.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange: int start>;

        $i0 = r2.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange: int end>;

        specialinvoke $r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantRange: void <init>(int,int)>($i1, $i0);

        return $r0;
    }
}
