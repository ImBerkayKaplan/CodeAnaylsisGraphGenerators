public class net.sourceforge.plantuml.zopfli.Options extends java.lang.Object
{
    public final int numIterations;
    public final net.sourceforge.plantuml.zopfli.Options$BlockSplitting blockSplitting;
    public final net.sourceforge.plantuml.zopfli.Options$OutputFormat outputType;

    public void <init>(net.sourceforge.plantuml.zopfli.Options$OutputFormat, net.sourceforge.plantuml.zopfli.Options$BlockSplitting, int)
    {
        net.sourceforge.plantuml.zopfli.Options r0;
        net.sourceforge.plantuml.zopfli.Options$OutputFormat r1;
        net.sourceforge.plantuml.zopfli.Options$BlockSplitting r2;
        int i0;

        r0 := @this: net.sourceforge.plantuml.zopfli.Options;

        r1 := @parameter0: net.sourceforge.plantuml.zopfli.Options$OutputFormat;

        r2 := @parameter1: net.sourceforge.plantuml.zopfli.Options$BlockSplitting;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.zopfli.Options: net.sourceforge.plantuml.zopfli.Options$OutputFormat outputType> = r1;

        r0.<net.sourceforge.plantuml.zopfli.Options: net.sourceforge.plantuml.zopfli.Options$BlockSplitting blockSplitting> = r2;

        r0.<net.sourceforge.plantuml.zopfli.Options: int numIterations> = i0;

        return;
    }

    public void <init>()
    {
        net.sourceforge.plantuml.zopfli.Options r0;
        net.sourceforge.plantuml.zopfli.Options$BlockSplitting $r1;
        net.sourceforge.plantuml.zopfli.Options$OutputFormat $r2;

        r0 := @this: net.sourceforge.plantuml.zopfli.Options;

        $r2 = <net.sourceforge.plantuml.zopfli.Options$OutputFormat: net.sourceforge.plantuml.zopfli.Options$OutputFormat GZIP>;

        $r1 = <net.sourceforge.plantuml.zopfli.Options$BlockSplitting: net.sourceforge.plantuml.zopfli.Options$BlockSplitting FIRST>;

        specialinvoke r0.<net.sourceforge.plantuml.zopfli.Options: void <init>(net.sourceforge.plantuml.zopfli.Options$OutputFormat,net.sourceforge.plantuml.zopfli.Options$BlockSplitting,int)>($r2, $r1, 15);

        return;
    }
}
