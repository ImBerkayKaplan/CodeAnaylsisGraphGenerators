public abstract class net.sourceforge.plantuml.project.draw.TimeHeader extends java.lang.Object
{
    private final net.sourceforge.plantuml.project.timescale.TimeScale timeScale;
    private final net.sourceforge.plantuml.style.Style closedStyle;
    private final net.sourceforge.plantuml.style.Style timelineStyle;
    private final net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet;
    private final net.sourceforge.plantuml.api.ThemeStyle themeStyle;
    protected final net.sourceforge.plantuml.project.time.Day min;
    protected final net.sourceforge.plantuml.project.time.Day max;

    protected final double Y_POS_ROW16()
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        return 16.0;
    }

    protected final double Y_POS_ROW28()
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        return 28.0;
    }

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.timescale.TimeScale, net.sourceforge.plantuml.ugraphic.color.HColorSet, net.sourceforge.plantuml.api.ThemeStyle)
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;
        net.sourceforge.plantuml.project.timescale.TimeScale r1;
        net.sourceforge.plantuml.project.time.Day r2, r3;
        net.sourceforge.plantuml.style.Style r4, $r6, r7, $r9;
        java.lang.Object $r5, $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r10;
        net.sourceforge.plantuml.api.ThemeStyle r11;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        r7 := @parameter0: net.sourceforge.plantuml.style.Style;

        r4 := @parameter1: net.sourceforge.plantuml.style.Style;

        r2 := @parameter2: net.sourceforge.plantuml.project.time.Day;

        r3 := @parameter3: net.sourceforge.plantuml.project.time.Day;

        r1 := @parameter4: net.sourceforge.plantuml.project.timescale.TimeScale;

        r10 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        r11 := @parameter6: net.sourceforge.plantuml.api.ThemeStyle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.timescale.TimeScale timeScale> = r1;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.time.Day min> = r2;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.time.Day max> = r3;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r6 = (net.sourceforge.plantuml.style.Style) $r5;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.style.Style closedStyle> = $r6;

        $r8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        $r9 = (net.sourceforge.plantuml.style.Style) $r8;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.style.Style timelineStyle> = $r9;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet> = r10;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.api.ThemeStyle themeStyle> = r11;

        return;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor closedBackgroundColor()
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;
        net.sourceforge.plantuml.style.PName $r1;
        net.sourceforge.plantuml.style.Style $r2;
        net.sourceforge.plantuml.style.Value $r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4;
        net.sourceforge.plantuml.api.ThemeStyle $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.style.Style closedStyle>;

        $r1 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r1);

        $r5 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.api.ThemeStyle themeStyle>;

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet>;

        $r6 = interfaceinvoke $r3.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r5, $r4);

        return $r6;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor closedFontColor()
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;
        net.sourceforge.plantuml.style.PName $r1;
        net.sourceforge.plantuml.style.Style $r2;
        net.sourceforge.plantuml.style.Value $r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4;
        net.sourceforge.plantuml.api.ThemeStyle $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.style.Style closedStyle>;

        $r1 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r1);

        $r5 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.api.ThemeStyle themeStyle>;

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet>;

        $r6 = interfaceinvoke $r3.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r5, $r4);

        return $r6;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;
        net.sourceforge.plantuml.style.PName $r1;
        net.sourceforge.plantuml.style.Style $r2;
        net.sourceforge.plantuml.style.Value $r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4;
        net.sourceforge.plantuml.api.ThemeStyle $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.style.Style timelineStyle>;

        $r1 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r1);

        $r5 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.api.ThemeStyle themeStyle>;

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet>;

        $r6 = interfaceinvoke $r3.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r5, $r4);

        return $r6;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getBarColor()
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;
        net.sourceforge.plantuml.style.PName $r1;
        net.sourceforge.plantuml.style.Style $r2;
        net.sourceforge.plantuml.style.Value $r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4;
        net.sourceforge.plantuml.api.ThemeStyle $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.style.Style timelineStyle>;

        $r1 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r1);

        $r5 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.api.ThemeStyle themeStyle>;

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet>;

        $r6 = interfaceinvoke $r3.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r5, $r4);

        return $r6;
    }

    public abstract double getTimeHeaderHeight();

    public abstract double getTimeFooterHeight();

    public abstract void drawTimeHeader(net.sourceforge.plantuml.ugraphic.UGraphic, double);

    public abstract void drawTimeFooter(net.sourceforge.plantuml.ugraphic.UGraphic);

    public abstract double getFullHeaderHeight();

    protected final void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r1, $r3;
        net.sourceforge.plantuml.project.time.Day $r2, $r4;
        double d0, d1, $d2, d3;
        net.sourceforge.plantuml.ugraphic.ULine r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6, $r8, $r10;
        net.sourceforge.plantuml.ugraphic.color.HColor $r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d3 := @parameter1: double;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.time.Day min>;

        d0 = interfaceinvoke $r1.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r2);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.time.Day max>;

        d1 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r4);

        $d2 = d1 - d0;

        r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d2);

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.ugraphic.color.HColor getBarColor()>();

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d3);

        $r10 = interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r5);

        return;
    }

    protected final void drawVbar(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        double d0, d1, $d2, d3;
        net.sourceforge.plantuml.ugraphic.ULine r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r4, $r6;
        net.sourceforge.plantuml.project.draw.TimeHeader r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r2 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d3 := @parameter1: double;

        d1 := @parameter2: double;

        d0 := @parameter3: double;

        $d2 = d0 - d1;

        r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d2);

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.ugraphic.color.HColor getBarColor()>();

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d1);

        $r6 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

        return;
    }

    protected final net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(int, boolean, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        int i0;
        boolean z0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.project.draw.TimeHeader r2;
        net.sourceforge.plantuml.ugraphic.UFont r3;

        r2 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont serif(int)>(i0);

        if z0 == 0 goto label1;

        r3 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont bold()>();

     label1:
        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>(r3, r1, r1, 0);

        return $r0;
    }

    public final net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r1;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.timescale.TimeScale timeScale>;

        return $r1;
    }

    protected final net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String, int, boolean, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        java.lang.String r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        net.sourceforge.plantuml.project.draw.TimeHeader r2;
        int i0;
        boolean z0;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.SpriteContainerEmpty $r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r6;
        net.sourceforge.plantuml.graphic.TextBlock $r7;

        r2 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r3 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r0);

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>(i0, z0, r3);

        $r6 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r5 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r5.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        $r7 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r4, $r6, $r5);

        return $r7;
    }

    protected final void printCentered(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.graphic.TextBlock, double, double)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r5;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double d0, d1, d2, d3, $d4, d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.project.draw.TimeHeader r6;

        r6 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        d2 := @parameter2: double;

        d1 := @parameter3: double;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d3 = d1 - d2;

        $d4 = d3 - d0;

        d5 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d4);

        $d6 = d5 / 2.0;

        $d7 = d2 + $d6;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d7);

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke r0.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r5);

        return;
    }

    protected final transient void printCentered(net.sourceforge.plantuml.ugraphic.UGraphic, boolean, double, double, net.sourceforge.plantuml.graphic.TextBlock[])
    {
        double d0, d1, d2, d3, $d4, d5, $d6, $d7;
        net.sourceforge.plantuml.graphic.TextBlock[] r0;
        int $i0, i2;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r6;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;
        byte $b1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        boolean z0;
        net.sourceforge.plantuml.project.draw.TimeHeader r7;

        r7 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        z0 := @parameter1: boolean;

        d1 := @parameter2: double;

        d0 := @parameter3: double;

        r0 := @parameter4: net.sourceforge.plantuml.graphic.TextBlock[];

        d2 = d0 - d1;

        $i0 = lengthof r0;

        i2 = $i0 - 1;

     label1:
        if i2 < 0 goto label5;

        r1 = r0[i2];

        $r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        d3 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        if i2 != 0 goto label2;

        if z0 == 0 goto label3;

     label2:
        $b1 = d3 cmpg d2;

        if $b1 > 0 goto label4;

     label3:
        $d4 = d2 - d3;

        d5 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d4);

        $d6 = d5 / 2.0;

        $d7 = d1 + $d6;

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d7);

        $r6 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke r1.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r6);

        return;

     label4:
        i2 = i2 + -1;

        goto label1;

     label5:
        return;
    }

    protected final void drawRectangle(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        double d0, d1, $d2, d3, $d4;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        net.sourceforge.plantuml.project.draw.TimeHeader r2;
        net.sourceforge.plantuml.ugraphic.URectangle $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, r5, r6;

        r2 := @this: net.sourceforge.plantuml.project.draw.TimeHeader;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d3 := @parameter3: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        return;

     label1:
        $r0 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r1 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.project.draw.TimeHeader: double getFullHeaderHeight()>();

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d1, $d2);

        r6 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r3 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d4 = d3 - d1;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d4, d0);

        interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        return;
    }
}
