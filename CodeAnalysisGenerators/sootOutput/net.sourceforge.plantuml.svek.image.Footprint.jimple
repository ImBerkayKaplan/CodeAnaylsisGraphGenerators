public class net.sourceforge.plantuml.svek.image.Footprint extends java.lang.Object
{
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.image.Footprint r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.image.Footprint: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r1;

        return;
    }

    public net.sourceforge.plantuml.svek.image.ContainingEllipse getEllipse(net.sourceforge.plantuml.graphic.UDrawable, double)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic $r0;
        net.sourceforge.plantuml.svek.image.Footprint r1;
        net.sourceforge.plantuml.graphic.UDrawable r3;
        java.util.List r4;
        net.sourceforge.plantuml.svek.image.ContainingEllipse $r5;
        double d0;
        java.util.Iterator r7;
        boolean $z0;
        java.lang.Object $r8;
        java.awt.geom.Point2D r9;

        r1 := @this: net.sourceforge.plantuml.svek.image.Footprint;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.UDrawable;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void <init>(net.sourceforge.plantuml.svek.image.Footprint)>(r1);

        interfaceinvoke r3.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r0);

        r4 = staticinvoke <net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: java.util.List access$100(net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic)>($r0);

        $r5 = new net.sourceforge.plantuml.svek.image.ContainingEllipse;

        specialinvoke $r5.<net.sourceforge.plantuml.svek.image.ContainingEllipse: void <init>(double)>(d0);

        r7 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.awt.geom.Point2D) $r8;

        virtualinvoke $r5.<net.sourceforge.plantuml.svek.image.ContainingEllipse: void append(java.awt.geom.Point2D)>(r9);

        goto label1;

     label2:
        return $r5;
    }

    static net.sourceforge.plantuml.graphic.StringBounder access$000(net.sourceforge.plantuml.svek.image.Footprint)
    {
        net.sourceforge.plantuml.svek.image.Footprint r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1;

        r0 := @parameter0: net.sourceforge.plantuml.svek.image.Footprint;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.Footprint: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        return $r1;
    }
}
