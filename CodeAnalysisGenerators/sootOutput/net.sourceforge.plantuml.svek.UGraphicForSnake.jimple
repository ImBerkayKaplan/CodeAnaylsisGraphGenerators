public class net.sourceforge.plantuml.svek.UGraphicForSnake extends net.sourceforge.plantuml.graphic.UGraphicDelegator
{
    private final double dx;
    private final double dy;
    private final java.util.List snakes;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        net.sourceforge.plantuml.svek.UGraphicForSnake r2;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3;
        java.lang.String $r5;

        r2 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UGraphicForSnake ");

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslation()
    {
        net.sourceforge.plantuml.ugraphic.UTranslate $r0;
        net.sourceforge.plantuml.svek.UGraphicForSnake r1;
        double $d0, $d1;

        r1 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake;

        $r0 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d1 = r1.<net.sourceforge.plantuml.svek.UGraphicForSnake: double dx>;

        $d0 = r1.<net.sourceforge.plantuml.svek.UGraphicForSnake: double dy>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        java.util.ArrayList $r2;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,java.util.List)>(r1, 0.0, 0.0, $r2);

        return;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, java.util.List)
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1;
        java.util.List r2;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: java.util.List;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: double dx> = d0;

        r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: double dy> = d1;

        r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes> = r2;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.ugraphic.UShape r0;
        boolean $z0;
        net.sourceforge.plantuml.svek.UGraphicForSnake r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r3;

        r1 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $z0 = r0 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.Snake;

        if $z0 == 0 goto label1;

        r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.Snake) r0;

        specialinvoke r1.<net.sourceforge.plantuml.svek.UGraphicForSnake: void addPendingSnake(net.sourceforge.plantuml.activitydiagram3.ftile.Snake)>(r3);

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.svek.UGraphicForSnake: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

     label2:
        return;
    }

    private void addPendingSnake(net.sourceforge.plantuml.activitydiagram3.ftile.Snake)
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake $r0, $r9, r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r1;
        net.sourceforge.plantuml.svek.UGraphicForSnake r2;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3;
        double $d0, $d1;
        java.util.List $r5, $r6, $r7, $r11;
        int $i0, i1;
        java.lang.Object $r8;

        r2 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Snake;

        $r0 = new net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $d1 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: double dx>;

        $d0 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: double dy>;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Snake,net.sourceforge.plantuml.ugraphic.UGraphic,double,double,net.sourceforge.plantuml.svek.UGraphicForSnake$1)>(r1, $r3, $d1, $d0, null);

        i1 = 0;

     label1:
        $r5 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r7 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i1);

        $r9 = (net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake) $r8;

        r10 = virtualinvoke $r9.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake merge(net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake)>($r0);

        if r10 == null goto label2;

        $r11 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes>;

        interfaceinvoke $r11.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, r10);

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r0);

        return;
    }

    public void flushUg()
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake r0;
        java.util.List $r1, $r3, $r6;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r4;
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake r5;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake;

        $r1 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake) $r4;

        $r6 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes>;

        virtualinvoke r5.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: void removeEndDecorationIfTouches(java.util.List)>($r6);

        virtualinvoke r5.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: void drawInternal()>();

        goto label1;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake r0, $r2;
        net.sourceforge.plantuml.ugraphic.UChange r1;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, $r4;
        java.util.List $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r7;
        double $d0, $d1, d2, d3;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        d2 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: double dx>;

        d3 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: double dy>;

        $z0 = r1 instanceof net.sourceforge.plantuml.ugraphic.UTranslate;

        if $z0 == 0 goto label1;

        $r6 = (net.sourceforge.plantuml.ugraphic.UTranslate) r1;

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        d2 = d2 + $d0;

        $r7 = (net.sourceforge.plantuml.ugraphic.UTranslate) r1;

        $d1 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        d3 = d3 + $d1;

     label1:
        $r2 = new net.sourceforge.plantuml.svek.UGraphicForSnake;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r1);

        $r5 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake: java.util.List snakes>;

        specialinvoke $r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,java.util.List)>($r4, d2, d3, $r5);

        return $r2;
    }
}
