public class net.sourceforge.plantuml.tim.EaterLog extends net.sourceforge.plantuml.tim.Eater
{

    public void <init>(net.sourceforge.plantuml.StringLocated)
    {
        net.sourceforge.plantuml.tim.EaterLog r0;
        net.sourceforge.plantuml.StringLocated r1;

        r0 := @this: net.sourceforge.plantuml.tim.EaterLog;

        r1 := @parameter0: net.sourceforge.plantuml.StringLocated;

        specialinvoke r0.<net.sourceforge.plantuml.tim.Eater: void <init>(net.sourceforge.plantuml.StringLocated)>(r1);

        return;
    }

    public void analyze(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory) throws net.sourceforge.plantuml.tim.EaterException, net.sourceforge.plantuml.tim.EaterExceptionLocated
    {
        net.sourceforge.plantuml.tim.EaterLog r0;
        net.sourceforge.plantuml.tim.TContext r1;
        net.sourceforge.plantuml.tim.TMemory r2;
        net.sourceforge.plantuml.LineLocation $r3;
        java.lang.String $r4, r5, $r9;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.tim.EaterLog;

        r1 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r2 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLog: void skipSpaces()>();

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLog: void checkAndEatChar(java.lang.String)>("!log");

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLog: void skipSpaces()>();

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLog: net.sourceforge.plantuml.LineLocation getLineLocation()>();

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLog: java.lang.String eatAllToEnd()>();

        r5 = virtualinvoke r1.<net.sourceforge.plantuml.tim.TContext: java.lang.String applyFunctionsAndVariables(net.sourceforge.plantuml.tim.TMemory,net.sourceforge.plantuml.LineLocation,java.lang.String)>(r2, $r3, $r4);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[Log] ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r9);

        return;
    }
}
