public class org.stathissideris.ascii2image.text.GridPattern extends org.stathissideris.ascii2image.text.TextGrid
{
    private java.util.ArrayList regExps;
    private boolean regExpsAreValid;
    private static final boolean DEBUG;
    private boolean usesStandardSyntax;

    public void <init>()
    {
        org.stathissideris.ascii2image.text.GridPattern r0;
        java.util.ArrayList $r1;

        r0 := @this: org.stathissideris.ascii2image.text.GridPattern;

        specialinvoke r0.<org.stathissideris.ascii2image.text.TextGrid: void <init>(int,int)>(3, 3);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.stathissideris.ascii2image.text.GridPattern: java.util.ArrayList regExps> = $r1;

        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean regExpsAreValid> = 0;

        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean usesStandardSyntax> = 0;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        org.stathissideris.ascii2image.text.GridPattern r0;
        java.lang.String r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4;
        java.util.ArrayList $r4;

        r0 := @this: org.stathissideris.ascii2image.text.GridPattern;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        $i4 = staticinvoke <java.lang.Math: int max(int,int)>($i2, $i3);

        specialinvoke r0.<org.stathissideris.ascii2image.text.TextGrid: void <init>(int,int)>($i4, 3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<org.stathissideris.ascii2image.text.GridPattern: java.util.ArrayList regExps> = $r4;

        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean regExpsAreValid> = 0;

        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean usesStandardSyntax> = 0;

        virtualinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: void setTo(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, r3);

        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean regExpsAreValid> = 0;

        return;
    }

    public boolean usesStandardSyntax()
    {
        org.stathissideris.ascii2image.text.GridPattern r0;
        boolean $z0;

        r0 := @this: org.stathissideris.ascii2image.text.GridPattern;

        $z0 = r0.<org.stathissideris.ascii2image.text.GridPattern: boolean usesStandardSyntax>;

        return $z0;
    }

    public void setUsesStandardSyntax(boolean)
    {
        org.stathissideris.ascii2image.text.GridPattern r0;
        boolean z0;

        r0 := @this: org.stathissideris.ascii2image.text.GridPattern;

        z0 := @parameter0: boolean;

        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean usesStandardSyntax> = z0;

        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean regExpsAreValid> = 0;

        return;
    }

    public boolean isMatchedBy(org.stathissideris.ascii2image.text.TextGrid)
    {
        org.stathissideris.ascii2image.text.GridPattern r0;
        boolean $z0, $z1;
        org.stathissideris.ascii2image.text.TextGrid r1;
        java.lang.StringBuffer $r2;
        java.lang.String r3;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        java.util.regex.Pattern r6;
        java.util.regex.Matcher $r7;
        int i0, $i1;

        r0 := @this: org.stathissideris.ascii2image.text.GridPattern;

        r1 := @parameter0: org.stathissideris.ascii2image.text.TextGrid;

        $z0 = r0.<org.stathissideris.ascii2image.text.GridPattern: boolean regExpsAreValid>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: void prepareRegExps()>();

     label1:
        i0 = 0;

     label2:
        $i1 = virtualinvoke r1.<org.stathissideris.ascii2image.text.TextGrid: int getHeight()>();

        if i0 >= $i1 goto label4;

        $r2 = virtualinvoke r1.<org.stathissideris.ascii2image.text.TextGrid: java.lang.StringBuffer getRow(int)>(i0);

        r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = r0.<org.stathissideris.ascii2image.text.GridPattern: java.util.ArrayList regExps>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r6 = (java.util.regex.Pattern) $r5;

        $r7 = virtualinvoke r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);

        $z1 = virtualinvoke $r7.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label3;

        return 0;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return 1;
    }

    private void prepareRegExps()
    {
        org.stathissideris.ascii2image.text.GridPattern r0;
        java.util.ArrayList $r1, $r2, $r5, $r7, $r10;
        boolean $z0, $z1, $z3;
        java.lang.Object $r3, $r8;
        java.lang.StringBuffer $r4, $r9;
        java.util.regex.Pattern $r6, $r12;
        java.lang.String $r11, r14, r16;
        java.util.Iterator r13, r15;

        r0 := @this: org.stathissideris.ascii2image.text.GridPattern;

        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean regExpsAreValid> = 1;

        $r1 = r0.<org.stathissideris.ascii2image.text.GridPattern: java.util.ArrayList regExps>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        $z0 = r0.<org.stathissideris.ascii2image.text.GridPattern: boolean usesStandardSyntax>;

        if $z0 != 0 goto label3;

        $r7 = virtualinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: java.util.ArrayList getRows()>();

        r13 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r8 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.StringBuffer) $r8;

        r14 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = r0.<org.stathissideris.ascii2image.text.GridPattern: java.util.ArrayList regExps>;

        $r11 = specialinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: java.lang.String makeRegExp(java.lang.String)>(r14);

        $r12 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r11);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        goto label1;

     label2:
        goto label5;

     label3:
        $r2 = virtualinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: java.util.ArrayList getRows()>();

        r15 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r3 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.lang.StringBuffer) $r3;

        r16 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = r0.<org.stathissideris.ascii2image.text.GridPattern: java.util.ArrayList regExps>;

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r16);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        goto label4;

     label5:
        return;
    }

    private java.lang.String makeRegExp(java.lang.String)
    {
        java.lang.StringBuilder $r0;
        java.lang.String r2, $r3, $r4;
        int $i0, $i1, $i2, i3, i4;
        java.lang.RuntimeException $r14;
        org.stathissideris.ascii2image.text.GridPattern r36;
        char c5, c6;

        r36 := @this: org.stathissideris.ascii2image.text.GridPattern;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i3 = 0;

        i4 = 0;

     label01:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if i4 >= $i0 goto label33;

        if i3 >= 3 goto label33;

        c5 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        if c5 != 91 goto label02;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^|:]");

        goto label32;

     label02:
        if c5 != 124 goto label03;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[|:]");

        goto label32;

     label03:
        if c5 != 45 goto label04;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        goto label32;

     label04:
        if c5 != 33 goto label05;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^-=\\/\\\\+|:]");

        goto label32;

     label05:
        if c5 != 98 goto label06;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[-=\\/\\\\+|:]");

        goto label32;

     label06:
        if c5 != 94 goto label07;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\\/\\\\+|:]");

        goto label32;

     label07:
        if c5 != 40 goto label08;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[-=\\/\\\\+]");

        goto label32;

     label08:
        if c5 != 126 goto label09;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        goto label32;

     label09:
        if c5 != 43 goto label10;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\+");

        goto label32;

     label10:
        if c5 != 92 goto label11;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\\\");

        goto label32;

     label11:
        if c5 != 115 goto label12;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[-=+|:]");

        goto label32;

     label12:
        if c5 != 83 goto label13;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\\/\\\\]");

        goto label32;

     label13:
        if c5 != 42 goto label14;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\*");

        goto label32;

     label14:
        if c5 != 49 goto label15;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\\\\]");

        goto label32;

     label15:
        if c5 != 50 goto label16;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[|:+\\/\\\\]");

        goto label32;

     label16:
        if c5 != 51 goto label17;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\\/]");

        goto label32;

     label17:
        if c5 != 52 goto label18;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[-=+\\/\\\\]");

        goto label32;

     label18:
        if c5 != 53 goto label19;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\\\\]");

        goto label32;

     label19:
        if c5 != 54 goto label20;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[|:+\\/\\\\]");

        goto label32;

     label20:
        if c5 != 55 goto label21;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[\\/]");

        goto label32;

     label21:
        if c5 != 56 goto label22;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[-=+\\/\\\\]");

        goto label32;

     label22:
        if c5 != 37 goto label31;

        $i1 = i4 + 1;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 <= $i2 goto label23;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid pattern, found % at the end");

        throw $r14;

     label23:
        i4 = i4 + 1;

        c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i4);

        if c6 != 49 goto label24;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^\\\\]");

        goto label32;

     label24:
        if c6 != 50 goto label25;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^|:+\\/\\\\]");

        goto label32;

     label25:
        if c6 != 51 goto label26;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^\\/]");

        goto label32;

     label26:
        if c6 != 52 goto label27;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^-=+\\/\\\\]");

        goto label32;

     label27:
        if c6 != 53 goto label28;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^\\\\]");

        goto label32;

     label28:
        if c6 != 54 goto label29;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^|:+\\/\\\\]");

        goto label32;

     label29:
        if c6 != 55 goto label30;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^\\/]");

        goto label32;

     label30:
        if c6 != 56 goto label32;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^-=+\\/\\\\]");

        goto label32;

     label31:
        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

     label32:
        i3 = i3 + 1;

        i4 = i4 + 1;

        goto label01;

     label33:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public void setTo(java.lang.String, java.lang.String, java.lang.String)
    {
        org.stathissideris.ascii2image.text.GridPattern r0;
        int $i0;
        java.lang.String r1, r2, r3;
        java.lang.RuntimeException $r4;

        r0 := @this: org.stathissideris.ascii2image.text.GridPattern;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $i0 = virtualinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: int getHeight()>();

        if $i0 == 3 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("This method can only be called for GridPatternS with height 3");

        throw $r4;

     label1:
        r0.<org.stathissideris.ascii2image.text.GridPattern: boolean regExpsAreValid> = 0;

        virtualinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: void writeStringTo(int,int,java.lang.String)>(0, 0, r1);

        virtualinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: void writeStringTo(int,int,java.lang.String)>(0, 1, r2);

        virtualinvoke r0.<org.stathissideris.ascii2image.text.GridPattern: void writeStringTo(int,int,java.lang.String)>(0, 2, r3);

        return;
    }

    public static void main(java.lang.String[])
    {
        org.stathissideris.ascii2image.text.TextGrid $r0;
        org.stathissideris.ascii2image.text.GridPatternGroup $r2, $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.PrintStream $r3, $r5, $r7, $r9, $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.String[] r17;

        r17 := @parameter0: java.lang.String[];

        $r0 = new org.stathissideris.ascii2image.text.TextGrid;

        specialinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void <init>(int,int)>(3, 3);

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(0, "---");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(1, " / ");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(2, "---");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void printDebug()>();

        $r2 = <org.stathissideris.ascii2image.text.GridPatternGroup: org.stathissideris.ascii2image.text.GridPatternGroup loneDiagonalCriteria>;

        $z0 = virtualinvoke $r2.<org.stathissideris.ascii2image.text.GridPatternGroup: boolean isAnyMatchedBy(org.stathissideris.ascii2image.text.TextGrid)>($r0);

        if $z0 == 0 goto label01;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>("Grid is lone diagonal");

        goto label02;

     label01:
        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Grid is not lone diagonal");

     label02:
        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(0, "--/");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(1, " / ");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(2, "---");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void printDebug()>();

        $r4 = <org.stathissideris.ascii2image.text.GridPatternGroup: org.stathissideris.ascii2image.text.GridPatternGroup loneDiagonalCriteria>;

        $z1 = virtualinvoke $r4.<org.stathissideris.ascii2image.text.GridPatternGroup: boolean isAnyMatchedBy(org.stathissideris.ascii2image.text.TextGrid)>($r0);

        if $z1 == 0 goto label03;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("Grid is lone diagonal");

        goto label04;

     label03:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Grid is not lone diagonal");

     label04:
        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(0, "-- ");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(1, " \\ ");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(2, "---");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void printDebug()>();

        $r6 = <org.stathissideris.ascii2image.text.GridPatternGroup: org.stathissideris.ascii2image.text.GridPatternGroup loneDiagonalCriteria>;

        $z2 = virtualinvoke $r6.<org.stathissideris.ascii2image.text.GridPatternGroup: boolean isAnyMatchedBy(org.stathissideris.ascii2image.text.TextGrid)>($r0);

        if $z2 == 0 goto label05;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>("Grid is lone diagonal");

        goto label06;

     label05:
        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Grid is not lone diagonal");

     label06:
        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(0, "-- ");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(1, " \\ ");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(2, "--\\");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void printDebug()>();

        $r8 = <org.stathissideris.ascii2image.text.GridPatternGroup: org.stathissideris.ascii2image.text.GridPatternGroup loneDiagonalCriteria>;

        $z3 = virtualinvoke $r8.<org.stathissideris.ascii2image.text.GridPatternGroup: boolean isAnyMatchedBy(org.stathissideris.ascii2image.text.TextGrid)>($r0);

        if $z3 == 0 goto label07;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>("Grid is lone diagonal");

        goto label08;

     label07:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("Grid is not lone diagonal");

     label08:
        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(0, "   ");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(1, "-\\/");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void setRow(int,java.lang.String)>(2, " ||");

        virtualinvoke $r0.<org.stathissideris.ascii2image.text.TextGrid: void printDebug()>();

        $r10 = <org.stathissideris.ascii2image.text.GridPatternGroup: org.stathissideris.ascii2image.text.GridPatternGroup loneDiagonalCriteria>;

        $z4 = virtualinvoke $r10.<org.stathissideris.ascii2image.text.GridPatternGroup: boolean isAnyMatchedBy(org.stathissideris.ascii2image.text.TextGrid)>($r0);

        if $z4 == 0 goto label09;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("Grid is lone diagonal");

        goto label10;

     label09:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Grid is not lone diagonal");

     label10:
        return;
    }

    public static void <clinit>()
    {
        <org.stathissideris.ascii2image.text.GridPattern: boolean DEBUG> = 0;

        return;
    }
}
