class net.sourceforge.plantuml.wbs.ITFLeaf extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.wbs.ITF
{
    private final net.sourceforge.plantuml.graphic.TextBlock box;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.mindmap.IdeaShape)
    {
        net.sourceforge.plantuml.wbs.ITFLeaf r0;
        net.sourceforge.plantuml.mindmap.IdeaShape r1, $r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.style.Style r4;
        net.sourceforge.plantuml.ISkinParam r5;
        net.sourceforge.plantuml.api.ThemeStyle $r6;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r7;
        net.sourceforge.plantuml.graphic.FontConfiguration $r8;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r9;
        net.sourceforge.plantuml.LineBreakStrategy $r10;
        net.sourceforge.plantuml.creole.CreoleMode $r11;
        net.sourceforge.plantuml.graphic.TextBlock r12, $r13, $r14;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFLeaf;

        r4 := @parameter0: net.sourceforge.plantuml.style.Style;

        r5 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter3: net.sourceforge.plantuml.mindmap.IdeaShape;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r2 = <net.sourceforge.plantuml.mindmap.IdeaShape: net.sourceforge.plantuml.mindmap.IdeaShape BOX>;

        if r1 != $r2 goto label1;

        $r14 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBoxOld: net.sourceforge.plantuml.graphic.TextBlock createWbs(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>(r4, r5, r3);

        r0.<net.sourceforge.plantuml.wbs.ITFLeaf: net.sourceforge.plantuml.graphic.TextBlock box> = $r14;

        goto label2;

     label1:
        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r7 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r8 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r6, $r7);

        $r9 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r10 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        $r11 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        r12 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r8, $r9, r5, $r10, $r11, null, null);

        $r13 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double,double,double)>(r12, 0.0, 3.0, 1.0, 1.0);

        r0.<net.sourceforge.plantuml.wbs.ITFLeaf: net.sourceforge.plantuml.graphic.TextBlock box> = $r13;

     label2:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFLeaf r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFLeaf;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.wbs.ITFLeaf: net.sourceforge.plantuml.graphic.TextBlock box>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wbs.ITFLeaf r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFLeaf;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.wbs.ITFLeaf: net.sourceforge.plantuml.graphic.TextBlock box>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    public java.awt.geom.Point2D getT1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFLeaf r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        java.awt.geom.Point2D$Double $r3;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFLeaf;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFLeaf: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, 0.0);

        return $r3;
    }

    public java.awt.geom.Point2D getT2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFLeaf r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        java.awt.geom.Point2D$Double $r3;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFLeaf;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFLeaf: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 / 2.0;

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d2);

        return $r3;
    }

    public java.awt.geom.Point2D getF1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFLeaf r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        java.awt.geom.Point2D$Double $r3;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFLeaf;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFLeaf: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, $d1);

        return $r3;
    }

    public java.awt.geom.Point2D getF2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFLeaf r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        java.awt.geom.Point2D$Double $r3;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFLeaf;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFLeaf: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = $d1 / 2.0;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d2);

        return $r3;
    }
}
