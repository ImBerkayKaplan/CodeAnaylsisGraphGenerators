public class ext.plantuml.com.ctreber.aclib.gui.MODouble extends ext.plantuml.com.ctreber.aclib.gui.MonitoredObject
{
    private double fDouble;
    private boolean fCheckRange;
    private double fMin;
    private double fMax;

    public void <init>()
    {
        ext.plantuml.com.ctreber.aclib.gui.MODouble r0;

        r0 := @this: ext.plantuml.com.ctreber.aclib.gui.MODouble;

        specialinvoke r0.<ext.plantuml.com.ctreber.aclib.gui.MonitoredObject: void <init>()>();

        r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: boolean fCheckRange> = 0;

        return;
    }

    public void <init>(double)
    {
        ext.plantuml.com.ctreber.aclib.gui.MODouble r0;
        double d0;

        r0 := @this: ext.plantuml.com.ctreber.aclib.gui.MODouble;

        d0 := @parameter0: double;

        specialinvoke r0.<ext.plantuml.com.ctreber.aclib.gui.MonitoredObject: void <init>()>();

        r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: boolean fCheckRange> = 0;

        r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fDouble> = d0;

        return;
    }

    public void <init>(double, double, double)
    {
        ext.plantuml.com.ctreber.aclib.gui.MODouble r0;
        double d0, d1, d2;

        r0 := @this: ext.plantuml.com.ctreber.aclib.gui.MODouble;

        d2 := @parameter0: double;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<ext.plantuml.com.ctreber.aclib.gui.MonitoredObject: void <init>()>();

        r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: boolean fCheckRange> = 0;

        r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fMin> = d0;

        r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fMax> = d1;

        r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: boolean fCheckRange> = 1;

        virtualinvoke r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: void set(double)>(d2);

        return;
    }

    public void set(double)
    {
        ext.plantuml.com.ctreber.aclib.gui.MODouble r0;
        double d0, $d1, $d2;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r10, $r11;
        java.lang.String $r6, $r9, $r12;

        r0 := @this: ext.plantuml.com.ctreber.aclib.gui.MODouble;

        d0 := @parameter0: double;

        $z0 = specialinvoke r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: boolean checkRange(double)>(d0);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument \'");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' out of range [");

        $d1 = r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fMin>;

        $r6 = staticinvoke <ext.plantuml.com.ctreber.aclib.gui.MODouble: java.lang.String niceFormat(double)>($d1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $d2 = r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fMax>;

        $r9 = staticinvoke <ext.plantuml.com.ctreber.aclib.gui.MODouble: java.lang.String niceFormat(double)>($d2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r1;

     label1:
        r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fDouble> = d0;

        virtualinvoke r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: void fireValueChanged()>();

        return;
    }

    private static java.lang.String niceFormat(double)
    {
        double d0;
        byte $b0, $b1;
        java.lang.String $r0;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 1.7976931348623157E308;

        if $b0 != 0 goto label1;

        return "Infinity";

     label1:
        $b1 = d0 cmpl 4.9E-324;

        if $b1 != 0 goto label2;

        return "-Infinity";

     label2:
        $r0 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        return $r0;
    }

    public double get()
    {
        ext.plantuml.com.ctreber.aclib.gui.MODouble r0;
        double $d0;

        r0 := @this: ext.plantuml.com.ctreber.aclib.gui.MODouble;

        $d0 = r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fDouble>;

        return $d0;
    }

    private boolean checkRange(double)
    {
        ext.plantuml.com.ctreber.aclib.gui.MODouble r0;
        boolean $z0, $z1;
        double d0, $d1, $d2;
        byte $b0, $b1;

        r0 := @this: ext.plantuml.com.ctreber.aclib.gui.MODouble;

        d0 := @parameter0: double;

        $z0 = r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: boolean fCheckRange>;

        if $z0 == 0 goto label1;

        $d1 = r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fMin>;

        $b0 = $d1 cmpg d0;

        if $b0 > 0 goto label2;

        $d2 = r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fMax>;

        $b1 = d0 cmpg $d2;

        if $b1 > 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean checkRange()
    {
        ext.plantuml.com.ctreber.aclib.gui.MODouble r0;
        double $d0;
        boolean $z0;

        r0 := @this: ext.plantuml.com.ctreber.aclib.gui.MODouble;

        $d0 = r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: double fDouble>;

        $z0 = specialinvoke r0.<ext.plantuml.com.ctreber.aclib.gui.MODouble: boolean checkRange(double)>($d0);

        return $z0;
    }
}
