public class net.sourceforge.plantuml.TikzFontDistortion extends java.lang.Object
{
    private final double magnify;
    private final double distortion;

    private void <init>(double, double)
    {
        net.sourceforge.plantuml.TikzFontDistortion r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.TikzFontDistortion;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.TikzFontDistortion: double magnify> = d0;

        r0.<net.sourceforge.plantuml.TikzFontDistortion: double distortion> = d1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5;
        net.sourceforge.plantuml.TikzFontDistortion r2;
        double $d0, $d1;
        java.lang.String $r6;

        r2 := @this: net.sourceforge.plantuml.TikzFontDistortion;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $d0 = r2.<net.sourceforge.plantuml.TikzFontDistortion: double magnify>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $d1 = r2.<net.sourceforge.plantuml.TikzFontDistortion: double distortion>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static net.sourceforge.plantuml.TikzFontDistortion fromValue(java.lang.String)
    {
        java.lang.String r0, r3, r4;
        java.util.StringTokenizer $r1;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.TikzFontDistortion $r5, $r6, $r7, $r8, $r9;
        double $d0, $d1;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r9 = staticinvoke <net.sourceforge.plantuml.TikzFontDistortion: net.sourceforge.plantuml.TikzFontDistortion getDefault()>();

        return $r9;

     label1:
        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ";");

        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z0 != 0 goto label2;

        $r8 = staticinvoke <net.sourceforge.plantuml.TikzFontDistortion: net.sourceforge.plantuml.TikzFontDistortion getDefault()>();

        return $r8;

     label2:
        r3 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreElements()>();

        if $z1 != 0 goto label3;

        $r7 = staticinvoke <net.sourceforge.plantuml.TikzFontDistortion: net.sourceforge.plantuml.TikzFontDistortion getDefault()>();

        return $r7;

     label3:
        r4 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke r3.<java.lang.String: boolean matches(java.lang.String)>("[\\d.]+");

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke r4.<java.lang.String: boolean matches(java.lang.String)>("[-\\d.]+");

        if $z3 == 0 goto label4;

        $r6 = new net.sourceforge.plantuml.TikzFontDistortion;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r4);

        specialinvoke $r6.<net.sourceforge.plantuml.TikzFontDistortion: void <init>(double,double)>($d0, $d1);

        return $r6;

     label4:
        $r5 = staticinvoke <net.sourceforge.plantuml.TikzFontDistortion: net.sourceforge.plantuml.TikzFontDistortion getDefault()>();

        return $r5;
    }

    public static net.sourceforge.plantuml.TikzFontDistortion getDefault()
    {
        net.sourceforge.plantuml.TikzFontDistortion $r0;

        $r0 = new net.sourceforge.plantuml.TikzFontDistortion;

        specialinvoke $r0.<net.sourceforge.plantuml.TikzFontDistortion: void <init>(double,double)>(1.2, 4.0);

        return $r0;
    }

    public final double getMagnify()
    {
        net.sourceforge.plantuml.TikzFontDistortion r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.TikzFontDistortion;

        $d0 = r0.<net.sourceforge.plantuml.TikzFontDistortion: double magnify>;

        return $d0;
    }

    public final double getDistortion()
    {
        net.sourceforge.plantuml.TikzFontDistortion r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.TikzFontDistortion;

        $d0 = r0.<net.sourceforge.plantuml.TikzFontDistortion: double distortion>;

        return $d0;
    }
}
