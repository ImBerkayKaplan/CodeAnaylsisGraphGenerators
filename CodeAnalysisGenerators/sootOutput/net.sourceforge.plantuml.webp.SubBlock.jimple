public class net.sourceforge.plantuml.webp.SubBlock extends java.lang.Object
{
    public static final int UV;
    public static final int Y;
    public static final int Y_AFTER_Y2;
    public static final int Y2;
    private net.sourceforge.plantuml.webp.SubBlock above;
    private int[][] dest;
    private int[][] diff;
    private boolean hasNoZeroToken;
    private net.sourceforge.plantuml.webp.SubBlock left;
    private net.sourceforge.plantuml.webp.MacroBlock macroBlock;
    private int mode;
    private net.sourceforge.plantuml.webp.SubBlock$PLANE plane;
    private int[][] predict;
    private int[] tokens;

    public static int planeToType(net.sourceforge.plantuml.webp.SubBlock$PLANE, java.lang.Boolean)
    {
        net.sourceforge.plantuml.webp.SubBlock$PLANE r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.Boolean r2;
        boolean $z0;

        r0 := @parameter0: net.sourceforge.plantuml.webp.SubBlock$PLANE;

        r2 := @parameter1: java.lang.Boolean;

        $r1 = <net.sourceforge.plantuml.webp.SubBlock$1: int[] $SwitchMap$net$sourceforge$plantuml$webp$SubBlock$PLANE>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock$PLANE: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label1:
        return 1;

     label2:
        $z0 = virtualinvoke r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label3;

        return 0;

     label3:
        return 3;

     label4:
        return 2;

     label5:
        return 2;

     label6:
        return -1;
    }

    public void <init>(net.sourceforge.plantuml.webp.MacroBlock, net.sourceforge.plantuml.webp.SubBlock, net.sourceforge.plantuml.webp.SubBlock, net.sourceforge.plantuml.webp.SubBlock$PLANE)
    {
        net.sourceforge.plantuml.webp.SubBlock r0, r3, r4;
        net.sourceforge.plantuml.webp.MacroBlock r1;
        net.sourceforge.plantuml.webp.SubBlock$PLANE r2;
        int[] $r5, $r6;
        int i0;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r1 := @parameter0: net.sourceforge.plantuml.webp.MacroBlock;

        r3 := @parameter1: net.sourceforge.plantuml.webp.SubBlock;

        r4 := @parameter2: net.sourceforge.plantuml.webp.SubBlock;

        r2 := @parameter3: net.sourceforge.plantuml.webp.SubBlock$PLANE;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.MacroBlock macroBlock> = r1;

        r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE plane> = r2;

        r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock above> = r3;

        r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock left> = r4;

        r0.<net.sourceforge.plantuml.webp.SubBlock: int mode> = 0;

        $r5 = newarray (int)[16];

        r0.<net.sourceforge.plantuml.webp.SubBlock: int[] tokens> = $r5;

        i0 = 0;

     label1:
        if i0 >= 16 goto label2;

        $r6 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[] tokens>;

        $r6[i0] = 0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private int DCTextra(net.sourceforge.plantuml.webp.BoolDecoder, int[]) throws java.io.IOException
    {
        net.sourceforge.plantuml.webp.BoolDecoder r0;
        int[] r1;
        int $i0, $i1, $i2, $i3, i4, i5;
        net.sourceforge.plantuml.webp.SubBlock r2;

        r2 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r0 := @parameter0: net.sourceforge.plantuml.webp.BoolDecoder;

        r1 := @parameter1: int[];

        i4 = 0;

        i5 = 0;

     label1:
        $i0 = r1[i5];

        $i1 = virtualinvoke r0.<net.sourceforge.plantuml.webp.BoolDecoder: int readBool(int)>($i0);

        $i2 = i4 + $i1;

        i4 = i4 + $i2;

        i5 = i5 + 1;

        $i3 = r1[i5];

        if $i3 > 0 goto label1;

        return i4;
    }

    public void decodeSubBlock(net.sourceforge.plantuml.webp.BoolDecoder, int[][][][], int, int, boolean) throws java.io.IOException
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        boolean z0, z1;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i11, i12, i13, i14, i15;
        int[] $r2, $r5, $r8, $r9, r10, $r11, $r12, $r15, $r16;
        net.sourceforge.plantuml.webp.BoolDecoder r3;
        int[][][][] r4;
        int[][][] $r6, $r13;
        int[][] $r7, $r14;
        byte b10;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r3 := @parameter0: net.sourceforge.plantuml.webp.BoolDecoder;

        r4 := @parameter1: int[][][][];

        i0 := @parameter2: int;

        i3 := @parameter3: int;

        z0 := @parameter4: boolean;

        b10 = 0;

        if z0 == 0 goto label01;

        b10 = 1;

     label01:
        i11 = i0;

        i12 = 0;

        i13 = 1;

        z1 = 0;

     label02:
        if i13 == 11 goto label11;

        $i2 = i12 + b10;

        if $i2 >= 16 goto label11;

        if z1 != 0 goto label03;

        $r16 = <net.sourceforge.plantuml.webp.Globals: int[] vp8CoefTree>;

        $r13 = r4[i3];

        $r12 = <net.sourceforge.plantuml.webp.Globals: int[] vp8CoefBands>;

        $i8 = i12 + b10;

        $i9 = $r12[$i8];

        $r14 = $r13[$i9];

        $r15 = $r14[i11];

        i13 = virtualinvoke r3.<net.sourceforge.plantuml.webp.BoolDecoder: int readTree(int[],int[])>($r16, $r15);

        goto label04;

     label03:
        $r9 = <net.sourceforge.plantuml.webp.Globals: int[] vp8CoefTree>;

        $r6 = r4[i3];

        $r5 = <net.sourceforge.plantuml.webp.Globals: int[] vp8CoefBands>;

        $i4 = i12 + b10;

        $i5 = $r5[$i4];

        $r7 = $r6[$i5];

        $r8 = $r7[i11];

        i13 = virtualinvoke r3.<net.sourceforge.plantuml.webp.BoolDecoder: int readTreeSkip(int[],int[],int)>($r9, $r8, 1);

     label04:
        i14 = specialinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int decodeToken(net.sourceforge.plantuml.webp.BoolDecoder,int)>(r3, i13);

        i11 = 0;

        z1 = 0;

        if i14 == 1 goto label05;

        if i14 != -1 goto label06;

     label05:
        i11 = 1;

        goto label09;

     label06:
        if i14 > 1 goto label07;

        if i14 >= -1 goto label08;

     label07:
        i11 = 2;

        goto label09;

     label08:
        if i14 != 0 goto label09;

        z1 = 1;

     label09:
        r10 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int[] getTokens()>();

        if i13 == 11 goto label10;

        $r11 = <net.sourceforge.plantuml.webp.Globals: int[] vp8defaultZigZag1d>;

        $i6 = i12 + b10;

        $i7 = $r11[$i6];

        r10[$i7] = i14;

     label10:
        i12 = i12 + 1;

        goto label02;

     label11:
        r0.<net.sourceforge.plantuml.webp.SubBlock: boolean hasNoZeroToken> = 0;

        i15 = 0;

     label12:
        if i15 >= 16 goto label14;

        $r2 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[] tokens>;

        $i1 = $r2[i15];

        if $i1 == 0 goto label13;

        r0.<net.sourceforge.plantuml.webp.SubBlock: boolean hasNoZeroToken> = 1;

     label13:
        i15 = i15 + 1;

        goto label12;

     label14:
        return;
    }

    private int decodeToken(net.sourceforge.plantuml.webp.BoolDecoder, int) throws java.io.IOException
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        net.sourceforge.plantuml.webp.BoolDecoder r0;
        net.sourceforge.plantuml.webp.SubBlock r1;
        int[] $r2, $r3, $r4, $r5, $r6, $r7;

        r1 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r0 := @parameter0: net.sourceforge.plantuml.webp.BoolDecoder;

        i0 := @parameter1: int;

        i8 = i0;

        if i0 != 5 goto label1;

        $r7 = <net.sourceforge.plantuml.webp.Globals: int[] Pcat1>;

        $i7 = specialinvoke r1.<net.sourceforge.plantuml.webp.SubBlock: int DCTextra(net.sourceforge.plantuml.webp.BoolDecoder,int[])>(r0, $r7);

        i8 = 5 + $i7;

     label1:
        if i0 != 6 goto label2;

        $r6 = <net.sourceforge.plantuml.webp.Globals: int[] Pcat2>;

        $i6 = specialinvoke r1.<net.sourceforge.plantuml.webp.SubBlock: int DCTextra(net.sourceforge.plantuml.webp.BoolDecoder,int[])>(r0, $r6);

        i8 = 7 + $i6;

     label2:
        if i0 != 7 goto label3;

        $r5 = <net.sourceforge.plantuml.webp.Globals: int[] Pcat3>;

        $i5 = specialinvoke r1.<net.sourceforge.plantuml.webp.SubBlock: int DCTextra(net.sourceforge.plantuml.webp.BoolDecoder,int[])>(r0, $r5);

        i8 = 11 + $i5;

     label3:
        if i0 != 8 goto label4;

        $r4 = <net.sourceforge.plantuml.webp.Globals: int[] Pcat4>;

        $i4 = specialinvoke r1.<net.sourceforge.plantuml.webp.SubBlock: int DCTextra(net.sourceforge.plantuml.webp.BoolDecoder,int[])>(r0, $r4);

        i8 = 19 + $i4;

     label4:
        if i0 != 9 goto label5;

        $r3 = <net.sourceforge.plantuml.webp.Globals: int[] Pcat5>;

        $i3 = specialinvoke r1.<net.sourceforge.plantuml.webp.SubBlock: int DCTextra(net.sourceforge.plantuml.webp.BoolDecoder,int[])>(r0, $r3);

        i8 = 35 + $i3;

     label5:
        if i0 != 10 goto label6;

        $r2 = <net.sourceforge.plantuml.webp.Globals: int[] Pcat6>;

        $i2 = specialinvoke r1.<net.sourceforge.plantuml.webp.SubBlock: int DCTextra(net.sourceforge.plantuml.webp.BoolDecoder,int[])>(r0, $r2);

        i8 = 67 + $i2;

     label6:
        if i0 == 0 goto label7;

        if i0 == 11 goto label7;

        $i1 = virtualinvoke r0.<net.sourceforge.plantuml.webp.BoolDecoder: int readBit()>();

        if $i1 <= 0 goto label7;

        i8 = neg i8;

     label7:
        return i8;
    }

    public void dequantSubBlock(net.sourceforge.plantuml.webp.VP8Frame, java.lang.Integer)
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[] r2, $r25;
        java.lang.Integer r3;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, i7, $i8;
        net.sourceforge.plantuml.webp.SubBlock$PLANE $r4, $r5, $r15, $r16;
        net.sourceforge.plantuml.webp.VP8Frame r6;
        net.sourceforge.plantuml.webp.SegmentQuants $r7, $r11, $r17, $r21;
        net.sourceforge.plantuml.webp.SegmentQuant[] $r8, $r12, $r18, $r22;
        net.sourceforge.plantuml.webp.MacroBlock $r9, $r13, $r19, $r23;
        net.sourceforge.plantuml.webp.SegmentQuant $r10, $r14, $r20, $r24;
        int[][] r26;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r6 := @parameter0: net.sourceforge.plantuml.webp.VP8Frame;

        r3 := @parameter1: java.lang.Integer;

        r2 = newarray (int)[16];

        i6 = 0;

     label1:
        if i6 >= 16 goto label5;

        $r5 = r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE plane>;

        $r4 = <net.sourceforge.plantuml.webp.SubBlock$PLANE: net.sourceforge.plantuml.webp.SubBlock$PLANE U>;

        if $r5 == $r4 goto label2;

        $r16 = r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE plane>;

        $r15 = <net.sourceforge.plantuml.webp.SubBlock$PLANE: net.sourceforge.plantuml.webp.SubBlock$PLANE V>;

        if $r16 != $r15 goto label3;

     label2:
        $r7 = virtualinvoke r6.<net.sourceforge.plantuml.webp.VP8Frame: net.sourceforge.plantuml.webp.SegmentQuants getSegmentQuants()>();

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.webp.SegmentQuants: net.sourceforge.plantuml.webp.SegmentQuant[] getSegQuants()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.MacroBlock getMacroBlock()>();

        $i1 = virtualinvoke $r9.<net.sourceforge.plantuml.webp.MacroBlock: int getSegmentId()>();

        $r10 = $r8[$i1];

        i7 = virtualinvoke $r10.<net.sourceforge.plantuml.webp.SegmentQuant: int getUvac_delta_q()>();

        if i6 != 0 goto label4;

        $r11 = virtualinvoke r6.<net.sourceforge.plantuml.webp.VP8Frame: net.sourceforge.plantuml.webp.SegmentQuants getSegmentQuants()>();

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.webp.SegmentQuants: net.sourceforge.plantuml.webp.SegmentQuant[] getSegQuants()>();

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.MacroBlock getMacroBlock()>();

        $i3 = virtualinvoke $r13.<net.sourceforge.plantuml.webp.MacroBlock: int getSegmentId()>();

        $r14 = $r12[$i3];

        i7 = virtualinvoke $r14.<net.sourceforge.plantuml.webp.SegmentQuant: int getUvdc_delta_q()>();

        goto label4;

     label3:
        $r17 = virtualinvoke r6.<net.sourceforge.plantuml.webp.VP8Frame: net.sourceforge.plantuml.webp.SegmentQuants getSegmentQuants()>();

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.webp.SegmentQuants: net.sourceforge.plantuml.webp.SegmentQuant[] getSegQuants()>();

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.MacroBlock getMacroBlock()>();

        $i4 = virtualinvoke $r19.<net.sourceforge.plantuml.webp.MacroBlock: int getSegmentId()>();

        $r20 = $r18[$i4];

        i7 = virtualinvoke $r20.<net.sourceforge.plantuml.webp.SegmentQuant: int getY1ac()>();

        if i6 != 0 goto label4;

        $r21 = virtualinvoke r6.<net.sourceforge.plantuml.webp.VP8Frame: net.sourceforge.plantuml.webp.SegmentQuants getSegmentQuants()>();

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.webp.SegmentQuants: net.sourceforge.plantuml.webp.SegmentQuant[] getSegQuants()>();

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.MacroBlock getMacroBlock()>();

        $i5 = virtualinvoke $r23.<net.sourceforge.plantuml.webp.MacroBlock: int getSegmentId()>();

        $r24 = $r22[$i5];

        i7 = virtualinvoke $r24.<net.sourceforge.plantuml.webp.SegmentQuant: int getY1dc()>();

     label4:
        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int[] getTokens()>();

        i2 = $r25[i6];

        $i8 = i2 * i7;

        r2[i6] = $i8;

        i6 = i6 + 1;

        goto label1;

     label5:
        if r3 == null goto label6;

        $i0 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        r2[0] = $i0;

     label6:
        r26 = staticinvoke <net.sourceforge.plantuml.webp.IDCT: int[][] idct4x4llm(int[])>(r2);

        virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: void setDiff(int[][])>(r26);

        return;
    }

    public void drawDebug()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        int[] $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r3 = $r2[0];

        $r3[0] = 128;

        $r4 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r5 = $r4[1];

        $r5[0] = 128;

        $r6 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r7 = $r6[2];

        $r7[0] = 128;

        $r8 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r9 = $r8[3];

        $r9[0] = 128;

        $r10 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r11 = $r10[0];

        $r11[0] = 128;

        $r12 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r13 = $r12[0];

        $r13[1] = 128;

        $r14 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r15 = $r14[0];

        $r15[2] = 128;

        $r16 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r17 = $r16[0];

        $r17[3] = 128;

     label1:
        return;
    }

    public void drawDebugH()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1, $r2, $r4, $r6, $r8;
        int[] $r3, $r5, $r7, $r9;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r3 = $r2[0];

        $r3[0] = 0;

        $r4 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r5 = $r4[1];

        $r5[0] = 0;

        $r6 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r7 = $r6[2];

        $r7[0] = 0;

        $r8 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r9 = $r8[3];

        $r9[0] = 0;

     label1:
        return;
    }

    public void drawDebugV()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1, $r2, $r4, $r6, $r8;
        int[] $r3, $r5, $r7, $r9;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r3 = $r2[0];

        $r3[0] = 0;

        $r4 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r5 = $r4[0];

        $r5[1] = 0;

        $r6 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r7 = $r6[0];

        $r7[2] = 0;

        $r8 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r9 = $r8[0];

        $r9[3] = 0;

     label1:
        return;
    }

    public net.sourceforge.plantuml.webp.SubBlock getAbove()
    {
        net.sourceforge.plantuml.webp.SubBlock r0, $r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock above>;

        return $r1;
    }

    public java.lang.String getDebugString()
    {
        java.lang.String $r0, $r13, r16;
        java.lang.StringBuilder $r1, $r2, $r3, $r6, $r10, $r11, $r12, $r14;
        net.sourceforge.plantuml.webp.SubBlock r4;
        net.sourceforge.plantuml.webp.SubBlock$PLANE $r5, $r8, $r9;
        net.sourceforge.plantuml.webp.MacroBlock $r7;
        int $i0, $i1;

        r4 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r5 = r4.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE plane>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        r16 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.MacroBlock getMacroBlock()>();

        $i0 = virtualinvoke $r7.<net.sourceforge.plantuml.webp.MacroBlock: int getYMode()>();

        if $i0 != 4 goto label1;

        $r9 = r4.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE plane>;

        $r8 = <net.sourceforge.plantuml.webp.SubBlock$PLANE: net.sourceforge.plantuml.webp.SubBlock$PLANE Y1>;

        if $r9 != $r8 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n  ");

        $i1 = r4.<net.sourceforge.plantuml.webp.SubBlock: int mode>;

        $r13 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String getSubBlockModeAsString(int)>($i1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r16;
    }

    public int[][] getDest()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        if $r1 == null goto label1;

        $r3 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        return $r3;

     label1:
        $r2 = newmultiarray (int)[4][4];

        return $r2;
    }

    public int[][] getDiff()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] diff>;

        return $r1;
    }

    public net.sourceforge.plantuml.webp.SubBlock getLeft()
    {
        net.sourceforge.plantuml.webp.SubBlock r0, $r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock left>;

        return $r1;
    }

    public net.sourceforge.plantuml.webp.MacroBlock getMacroBlock()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        net.sourceforge.plantuml.webp.MacroBlock $r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.MacroBlock macroBlock>;

        return $r1;
    }

    public int[][] getMacroBlockPredict(int)
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1, r2, $r4;
        int i0, i2, i3;
        int[] $r3;
        short s1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        if $r1 == null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        return $r4;

     label1:
        s1 = 127;

        if i0 != 2 goto label2;

        s1 = 129;

     label2:
        r2 = newmultiarray (int)[4][4];

        i2 = 0;

     label3:
        if i2 >= 4 goto label6;

        i3 = 0;

     label4:
        if i3 >= 4 goto label5;

        $r3 = r2[i3];

        $r3[i2] = s1;

        i3 = i3 + 1;

        goto label4;

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return r2;
    }

    public int getMode()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $i0 = r0.<net.sourceforge.plantuml.webp.SubBlock: int mode>;

        return $i0;
    }

    public net.sourceforge.plantuml.webp.SubBlock$PLANE getPlane()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        net.sourceforge.plantuml.webp.SubBlock$PLANE $r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE plane>;

        return $r1;
    }

    public int[][] getPredict()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] predict>;

        if $r1 == null goto label1;

        $r3 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] predict>;

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>(0, 0);

        return $r2;
    }

    public int[][] getPredict(int, boolean)
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1, $r2, r3, $r5, $r6;
        int i0, i2, i3;
        boolean z0;
        int[] $r4;
        short s1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        if $r1 == null goto label1;

        $r6 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        return $r6;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] predict>;

        if $r2 == null goto label2;

        $r5 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] predict>;

        return $r5;

     label2:
        s1 = 127;

        if i0 == 1 goto label3;

        if i0 == 0 goto label3;

        if i0 == 2 goto label3;

        if i0 == 3 goto label3;

        if i0 == 6 goto label3;

        if i0 == 5 goto label3;

        if i0 != 8 goto label4;

     label3:
        if z0 == 0 goto label4;

        s1 = 129;

     label4:
        r3 = newmultiarray (int)[4][4];

        i2 = 0;

     label5:
        if i2 >= 4 goto label8;

        i3 = 0;

     label6:
        if i3 >= 4 goto label7;

        $r4 = r3[i3];

        $r4[i2] = s1;

        i3 = i3 + 1;

        goto label6;

     label7:
        i2 = i2 + 1;

        goto label5;

     label8:
        return r3;
    }

    int[] getTokens()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[] $r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[] tokens>;

        return $r1;
    }

    public boolean hasNoZeroToken()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $z0 = r0.<net.sourceforge.plantuml.webp.SubBlock: boolean hasNoZeroToken>;

        return $z0;
    }

    public boolean isDest()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        if $r1 != null goto label1;

        return 0;

     label1:
        return 1;
    }

    public void predict(net.sourceforge.plantuml.webp.VP8Frame)
    {
        net.sourceforge.plantuml.webp.SubBlock r0, r4, r6, r26, r29;
        net.sourceforge.plantuml.webp.VP8Frame r2;
        net.sourceforge.plantuml.webp.SubBlock$PLANE $r3, $r5, $r25, $r141;
        int[] r7, r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r28, r30, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r138, $r140, $r143, $r145, $r147, $r149, r150, r151, r152, r153, r154;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, $i240, $i241, $i242, $i243, $i244, $i245, $i246, $i247, $i248, $i249, $i250, $i251, $i252, $i253, $i254, $i255, $i256, $i257, $i258, $i259, $i260, $i261, $i262, $i263, $i264, $i265, $i266, $i267, $i268, $i269, $i270, $i271, $i272, $i273, $i274, $i275, $i276, $i277, $i278, $i279, $i280, $i281, $i282, $i283, $i284, $i285, $i286, $i287, $i288, $i289, $i290, $i291, $i292, $i293, $i294, $i295, $i296, $i297, $i298, $i299, $i300, $i301, $i302, $i303, $i304, $i305, $i306, $i307, $i308, $i309, $i310, $i311, $i312, $i313, $i314, $i315, $i316, $i317, $i318, $i319, $i320, $i321, $i322, $i323, $i324, $i325, $i326, $i327, $i328, $i329, $i330, $i331, $i332, $i333, $i334, $i335, $i336, $i337, $i338, $i339, $i340, $i341, $i342, $i343, $i344, $i345, $i346, $i347, $i348, $i349, $i350, $i351, $i352, $i353, $i354, $i355, $i356, $i357, $i358, $i359, $i360, $i361, $i362, $i363, $i364, $i365, $i366, $i367, $i368, $i369, $i370, $i371, $i372, $i373, $i374, $i375, $i376, $i377, $i378, $i379, $i380, $i381, $i382, $i383, $i384, $i385, $i386, $i387, $i388, $i389, $i390, $i391, $i392, $i393, $i394, $i395, $i396, $i397, $i398, $i399, $i400, $i401, $i402, $i403, $i404, $i405, $i406, $i407, $i408, $i409, $i410, $i411, $i412, $i413, $i414, $i415, $i416, $i417, $i418, $i419, $i420, $i421, $i422, $i423, $i424, $i425, $i426, $i427, $i428, $i429, $i430, $i431, $i432, $i433, $i434, $i435, $i436, $i437, $i438, $i439, $i440, $i441, $i442, $i443, $i444, $i445, $i446, $i447, $i448, $i449, $i450, $i451, $i452, $i453, $i454, $i455, $i456, $i457, $i458, $i459, $i460, $i461, $i462, $i463, $i464, $i465, $i466, $i467, $i468, $i469, i470, $i471, $i472, $i473, $i474, $i475, $i476, $i477, $i478, $i479, i480, i481, i482, i483, i484, i485, i486, i487, i488, i489, i490, i491, i492;
        int[][] $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r27, r31, $r137, $r139, $r142, $r144, $r146, $r148;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r132, $r134, $r135;
        java.io.PrintStream $r133;
        java.lang.String $r136;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r2 := @parameter0: net.sourceforge.plantuml.webp.VP8Frame;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE getPlane()>();

        r4 = virtualinvoke r2.<net.sourceforge.plantuml.webp.VP8Frame: net.sourceforge.plantuml.webp.SubBlock getAboveSubBlock(net.sourceforge.plantuml.webp.SubBlock,net.sourceforge.plantuml.webp.SubBlock$PLANE)>(r0, $r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE getPlane()>();

        r6 = virtualinvoke r2.<net.sourceforge.plantuml.webp.VP8Frame: net.sourceforge.plantuml.webp.SubBlock getLeftSubBlock(net.sourceforge.plantuml.webp.SubBlock,net.sourceforge.plantuml.webp.SubBlock$PLANE)>(r0, $r5);

        r7 = newarray (int)[4];

        r8 = newarray (int)[4];

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r9 = virtualinvoke r4.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i0, 0);

        $r10 = $r9[0];

        $i1 = $r10[3];

        r7[0] = $i1;

        $i2 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r11 = virtualinvoke r4.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i2, 0);

        $r12 = $r11[1];

        $i3 = $r12[3];

        r7[1] = $i3;

        $i4 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r13 = virtualinvoke r4.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i4, 0);

        $r14 = $r13[2];

        $i5 = $r14[3];

        r7[2] = $i5;

        $i6 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r15 = virtualinvoke r4.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i6, 0);

        $r16 = $r15[3];

        $i7 = $r16[3];

        r7[3] = $i7;

        $i8 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r17 = virtualinvoke r6.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i8, 1);

        $r18 = $r17[3];

        $i9 = $r18[0];

        r8[0] = $i9;

        $i10 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r19 = virtualinvoke r6.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i10, 1);

        $r20 = $r19[3];

        $i11 = $r20[1];

        r8[1] = $i11;

        $i12 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r21 = virtualinvoke r6.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i12, 1);

        $r22 = $r21[3];

        $i13 = $r22[2];

        r8[2] = $i13;

        $i14 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r23 = virtualinvoke r6.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i14, 1);

        $r24 = $r23[3];

        $i15 = $r24[3];

        r8[3] = $i15;

        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE getPlane()>();

        r26 = virtualinvoke r2.<net.sourceforge.plantuml.webp.VP8Frame: net.sourceforge.plantuml.webp.SubBlock getLeftSubBlock(net.sourceforge.plantuml.webp.SubBlock,net.sourceforge.plantuml.webp.SubBlock$PLANE)>(r4, $r25);

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.webp.SubBlock: boolean isDest()>();

        if $z0 != 0 goto label01;

        $z2 = virtualinvoke r4.<net.sourceforge.plantuml.webp.SubBlock: boolean isDest()>();

        if $z2 != 0 goto label01;

        $i469 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r139 = virtualinvoke r26.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i469, 0);

        $r140 = $r139[3];

        i470 = $r140[3];

        goto label03;

     label01:
        $z1 = virtualinvoke r4.<net.sourceforge.plantuml.webp.SubBlock: boolean isDest()>();

        if $z1 != 0 goto label02;

        $i468 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r137 = virtualinvoke r26.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i468, 0);

        $r138 = $r137[3];

        i470 = $r138[3];

        goto label03;

     label02:
        $i16 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r27 = virtualinvoke r26.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i16, 1);

        $r28 = $r27[3];

        i470 = $r28[3];

     label03:
        $r141 = r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.SubBlock$PLANE plane>;

        r29 = virtualinvoke r2.<net.sourceforge.plantuml.webp.VP8Frame: net.sourceforge.plantuml.webp.SubBlock getAboveRightSubBlock(net.sourceforge.plantuml.webp.SubBlock,net.sourceforge.plantuml.webp.SubBlock$PLANE)>(r0, $r141);

        r30 = newarray (int)[4];

        $i471 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r142 = virtualinvoke r29.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i471, 0);

        $r143 = $r142[0];

        $i472 = $r143[3];

        r30[0] = $i472;

        $i473 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r144 = virtualinvoke r29.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i473, 0);

        $r145 = $r144[1];

        $i474 = $r145[3];

        r30[1] = $i474;

        $i475 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r146 = virtualinvoke r29.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i475, 0);

        $r147 = $r146[2];

        $i476 = $r147[3];

        r30[2] = $i476;

        $i477 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r148 = virtualinvoke r29.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>($i477, 0);

        $r149 = $r148[3];

        $i478 = $r149[3];

        r30[3] = $i478;

        r31 = newmultiarray (int)[4][4];

        $i479 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        tableswitch($i479)
        {
            case 0: goto label04;
            case 1: goto label11;
            case 2: goto label18;
            case 3: goto label23;
            case 4: goto label28;
            case 5: goto label29;
            case 6: goto label30;
            case 7: goto label31;
            case 8: goto label32;
            case 9: goto label33;
            default: goto label34;
        };

     label04:
        i480 = 0;

        i481 = 0;

     label05:
        if i481 >= 4 goto label06;

        $i465 = r7[i481];

        i482 = i480 + $i465;

        $i466 = r8[i481];

        i480 = i482 + $i466;

        i481 = i481 + 1;

        goto label05;

     label06:
        $i464 = i480 + 4;

        i483 = $i464 >> 3;

        i484 = 0;

     label07:
        if i484 >= 4 goto label10;

        i485 = 0;

     label08:
        if i485 >= 4 goto label09;

        $r131 = r31[i485];

        $r131[i484] = i483;

        i485 = i485 + 1;

        goto label08;

     label09:
        i484 = i484 + 1;

        goto label07;

     label10:
        goto label35;

     label11:
        i486 = 0;

     label12:
        if i486 >= 4 goto label17;

        i487 = 0;

     label13:
        if i487 >= 4 goto label16;

        $i461 = r7[i487];

        $i463 = $i461 - i470;

        $i462 = r8[i486];

        i488 = $i463 + $i462;

        if i488 >= 0 goto label14;

        i488 = 0;

     label14:
        if i488 <= 255 goto label15;

        i488 = 255;

     label15:
        $r130 = r31[i487];

        $r130[i486] = i488;

        i487 = i487 + 1;

        goto label13;

     label16:
        i486 = i486 + 1;

        goto label12;

     label17:
        goto label35;

     label18:
        r150 = newarray (int)[4];

        $i429 = r7[0];

        $i430 = 2 * $i429;

        $i432 = i470 + $i430;

        $i431 = r7[1];

        $i433 = $i432 + $i431;

        $i434 = $i433 + 2;

        $i435 = $i434 >> 2;

        r150[0] = $i435;

        $i438 = r7[0];

        $i436 = r7[1];

        $i437 = 2 * $i436;

        $i440 = $i438 + $i437;

        $i439 = r7[2];

        $i441 = $i440 + $i439;

        $i442 = $i441 + 2;

        $i443 = $i442 >> 2;

        r150[1] = $i443;

        $i446 = r7[1];

        $i444 = r7[2];

        $i445 = 2 * $i444;

        $i448 = $i446 + $i445;

        $i447 = r7[3];

        $i449 = $i448 + $i447;

        $i450 = $i449 + 2;

        $i451 = $i450 >> 2;

        r150[2] = $i451;

        $i454 = r7[2];

        $i452 = r7[3];

        $i453 = 2 * $i452;

        $i456 = $i454 + $i453;

        $i455 = r30[0];

        $i457 = $i456 + $i455;

        $i458 = $i457 + 2;

        $i459 = $i458 >> 2;

        r150[3] = $i459;

        i489 = 0;

     label19:
        if i489 >= 4 goto label22;

        i490 = 0;

     label20:
        if i490 >= 4 goto label21;

        $r129 = r31[i490];

        $i460 = r150[i490];

        $r129[i489] = $i460;

        i490 = i490 + 1;

        goto label20;

     label21:
        i489 = i489 + 1;

        goto label19;

     label22:
        goto label35;

     label23:
        r151 = newarray (int)[4];

        $i397 = r8[0];

        $i398 = 2 * $i397;

        $i400 = i470 + $i398;

        $i399 = r8[1];

        $i401 = $i400 + $i399;

        $i402 = $i401 + 2;

        $i403 = $i402 >> 2;

        r151[0] = $i403;

        $i406 = r8[0];

        $i404 = r8[1];

        $i405 = 2 * $i404;

        $i408 = $i406 + $i405;

        $i407 = r8[2];

        $i409 = $i408 + $i407;

        $i410 = $i409 + 2;

        $i411 = $i410 >> 2;

        r151[1] = $i411;

        $i414 = r8[1];

        $i412 = r8[2];

        $i413 = 2 * $i412;

        $i416 = $i414 + $i413;

        $i415 = r8[3];

        $i417 = $i416 + $i415;

        $i418 = $i417 + 2;

        $i419 = $i418 >> 2;

        r151[2] = $i419;

        $i422 = r8[2];

        $i420 = r8[3];

        $i421 = 2 * $i420;

        $i424 = $i422 + $i421;

        $i423 = r8[3];

        $i425 = $i424 + $i423;

        $i426 = $i425 + 2;

        $i427 = $i426 >> 2;

        r151[3] = $i427;

        i491 = 0;

     label24:
        if i491 >= 4 goto label27;

        i492 = 0;

     label25:
        if i492 >= 4 goto label26;

        $r128 = r31[i492];

        $i428 = r151[i491];

        $r128[i491] = $i428;

        i492 = i492 + 1;

        goto label25;

     label26:
        i491 = i491 + 1;

        goto label24;

     label27:
        goto label35;

     label28:
        $r112 = r31[0];

        $i343 = r7[0];

        $i341 = r7[1];

        $i342 = $i341 * 2;

        $i345 = $i343 + $i342;

        $i344 = r7[2];

        $i346 = $i345 + $i344;

        $i347 = $i346 + 2;

        $i348 = $i347 >> 2;

        $r112[0] = $i348;

        $r114 = r31[1];

        $r113 = r31[0];

        $i351 = r7[1];

        $i349 = r7[2];

        $i350 = $i349 * 2;

        $i353 = $i351 + $i350;

        $i352 = r7[3];

        $i354 = $i353 + $i352;

        $i355 = $i354 + 2;

        $i356 = $i355 >> 2;

        $r113[1] = $i356;

        $r114[0] = $i356;

        $r117 = r31[2];

        $r116 = r31[1];

        $r115 = r31[0];

        $i359 = r7[2];

        $i357 = r7[3];

        $i358 = $i357 * 2;

        $i361 = $i359 + $i358;

        $i360 = r30[0];

        $i362 = $i361 + $i360;

        $i363 = $i362 + 2;

        $i364 = $i363 >> 2;

        $r115[2] = $i364;

        $r116[1] = $i364;

        $r117[0] = $i364;

        $r121 = r31[3];

        $r120 = r31[2];

        $r119 = r31[1];

        $r118 = r31[0];

        $i367 = r7[3];

        $i365 = r30[0];

        $i366 = $i365 * 2;

        $i369 = $i367 + $i366;

        $i368 = r30[1];

        $i370 = $i369 + $i368;

        $i371 = $i370 + 2;

        $i372 = $i371 >> 2;

        $r118[3] = $i372;

        $r119[2] = $i372;

        $r120[1] = $i372;

        $r121[0] = $i372;

        $r124 = r31[3];

        $r123 = r31[2];

        $r122 = r31[1];

        $i375 = r30[0];

        $i373 = r30[1];

        $i374 = $i373 * 2;

        $i377 = $i375 + $i374;

        $i376 = r30[2];

        $i378 = $i377 + $i376;

        $i379 = $i378 + 2;

        $i380 = $i379 >> 2;

        $r122[3] = $i380;

        $r123[2] = $i380;

        $r124[1] = $i380;

        $r126 = r31[3];

        $r125 = r31[2];

        $i383 = r30[1];

        $i381 = r30[2];

        $i382 = $i381 * 2;

        $i385 = $i383 + $i382;

        $i384 = r30[3];

        $i386 = $i385 + $i384;

        $i387 = $i386 + 2;

        $i388 = $i387 >> 2;

        $r125[3] = $i388;

        $r126[2] = $i388;

        $r127 = r31[3];

        $i391 = r30[2];

        $i389 = r30[3];

        $i390 = $i389 * 2;

        $i393 = $i391 + $i390;

        $i392 = r30[3];

        $i394 = $i393 + $i392;

        $i395 = $i394 + 2;

        $i396 = $i395 >> 2;

        $r127[3] = $i396;

        goto label35;

     label29:
        r152 = newarray (int)[9];

        $i277 = r8[3];

        r152[0] = $i277;

        $i278 = r8[2];

        r152[1] = $i278;

        $i279 = r8[1];

        r152[2] = $i279;

        $i280 = r8[0];

        r152[3] = $i280;

        r152[4] = i470;

        $i281 = r7[0];

        r152[5] = $i281;

        $i282 = r7[1];

        r152[6] = $i282;

        $i283 = r7[2];

        r152[7] = $i283;

        $i284 = r7[3];

        r152[8] = $i284;

        $r96 = r31[0];

        $i287 = r152[0];

        $i285 = r152[1];

        $i286 = $i285 * 2;

        $i289 = $i287 + $i286;

        $i288 = r152[2];

        $i290 = $i289 + $i288;

        $i291 = $i290 + 2;

        $i292 = $i291 >> 2;

        $r96[3] = $i292;

        $r98 = r31[1];

        $r97 = r31[0];

        $i295 = r152[1];

        $i293 = r152[2];

        $i294 = $i293 * 2;

        $i297 = $i295 + $i294;

        $i296 = r152[3];

        $i298 = $i297 + $i296;

        $i299 = $i298 + 2;

        $i300 = $i299 >> 2;

        $r97[2] = $i300;

        $r98[3] = $i300;

        $r101 = r31[2];

        $r100 = r31[1];

        $r99 = r31[0];

        $i303 = r152[2];

        $i301 = r152[3];

        $i302 = $i301 * 2;

        $i305 = $i303 + $i302;

        $i304 = r152[4];

        $i306 = $i305 + $i304;

        $i307 = $i306 + 2;

        $i308 = $i307 >> 2;

        $r99[1] = $i308;

        $r100[2] = $i308;

        $r101[3] = $i308;

        $r105 = r31[3];

        $r104 = r31[2];

        $r103 = r31[1];

        $r102 = r31[0];

        $i311 = r152[3];

        $i309 = r152[4];

        $i310 = $i309 * 2;

        $i313 = $i311 + $i310;

        $i312 = r152[5];

        $i314 = $i313 + $i312;

        $i315 = $i314 + 2;

        $i316 = $i315 >> 2;

        $r102[0] = $i316;

        $r103[1] = $i316;

        $r104[2] = $i316;

        $r105[3] = $i316;

        $r108 = r31[3];

        $r107 = r31[2];

        $r106 = r31[1];

        $i319 = r152[4];

        $i317 = r152[5];

        $i318 = $i317 * 2;

        $i321 = $i319 + $i318;

        $i320 = r152[6];

        $i322 = $i321 + $i320;

        $i323 = $i322 + 2;

        $i324 = $i323 >> 2;

        $r106[0] = $i324;

        $r107[1] = $i324;

        $r108[2] = $i324;

        $r110 = r31[3];

        $r109 = r31[2];

        $i327 = r152[5];

        $i325 = r152[6];

        $i326 = $i325 * 2;

        $i329 = $i327 + $i326;

        $i328 = r152[7];

        $i330 = $i329 + $i328;

        $i331 = $i330 + 2;

        $i332 = $i331 >> 2;

        $r109[0] = $i332;

        $r110[1] = $i332;

        $r111 = r31[3];

        $i335 = r152[6];

        $i333 = r152[7];

        $i334 = $i333 * 2;

        $i337 = $i335 + $i334;

        $i336 = r152[8];

        $i338 = $i337 + $i336;

        $i339 = $i338 + 2;

        $i340 = $i339 >> 2;

        $r111[0] = $i340;

        goto label35;

     label30:
        r153 = newarray (int)[9];

        $i201 = r8[3];

        r153[0] = $i201;

        $i202 = r8[2];

        r153[1] = $i202;

        $i203 = r8[1];

        r153[2] = $i203;

        $i204 = r8[0];

        r153[3] = $i204;

        r153[4] = i470;

        $i205 = r7[0];

        r153[5] = $i205;

        $i206 = r7[1];

        r153[6] = $i206;

        $i207 = r7[2];

        r153[7] = $i207;

        $i208 = r7[3];

        r153[8] = $i208;

        $r80 = r31[0];

        $i211 = r153[1];

        $i209 = r153[2];

        $i210 = $i209 * 2;

        $i213 = $i211 + $i210;

        $i212 = r153[3];

        $i214 = $i213 + $i212;

        $i215 = $i214 + 2;

        $i216 = $i215 >> 2;

        $r80[3] = $i216;

        $r81 = r31[0];

        $i219 = r153[2];

        $i217 = r153[3];

        $i218 = $i217 * 2;

        $i221 = $i219 + $i218;

        $i220 = r153[4];

        $i222 = $i221 + $i220;

        $i223 = $i222 + 2;

        $i224 = $i223 >> 2;

        $r81[2] = $i224;

        $r83 = r31[1];

        $r82 = r31[0];

        $i227 = r153[3];

        $i225 = r153[4];

        $i226 = $i225 * 2;

        $i229 = $i227 + $i226;

        $i228 = r153[5];

        $i230 = $i229 + $i228;

        $i231 = $i230 + 2;

        $i232 = $i231 >> 2;

        $r82[1] = $i232;

        $r83[3] = $i232;

        $r85 = r31[1];

        $r84 = r31[0];

        $i234 = r153[4];

        $i233 = r153[5];

        $i235 = $i234 + $i233;

        $i236 = $i235 + 1;

        $i237 = $i236 >> 1;

        $r84[0] = $i237;

        $r85[2] = $i237;

        $r87 = r31[2];

        $r86 = r31[1];

        $i240 = r153[4];

        $i238 = r153[5];

        $i239 = $i238 * 2;

        $i242 = $i240 + $i239;

        $i241 = r153[6];

        $i243 = $i242 + $i241;

        $i244 = $i243 + 2;

        $i245 = $i244 >> 2;

        $r86[1] = $i245;

        $r87[3] = $i245;

        $r89 = r31[2];

        $r88 = r31[1];

        $i247 = r153[5];

        $i246 = r153[6];

        $i248 = $i247 + $i246;

        $i249 = $i248 + 1;

        $i250 = $i249 >> 1;

        $r88[0] = $i250;

        $r89[2] = $i250;

        $r91 = r31[3];

        $r90 = r31[2];

        $i253 = r153[5];

        $i251 = r153[6];

        $i252 = $i251 * 2;

        $i255 = $i253 + $i252;

        $i254 = r153[7];

        $i256 = $i255 + $i254;

        $i257 = $i256 + 2;

        $i258 = $i257 >> 2;

        $r90[1] = $i258;

        $r91[3] = $i258;

        $r93 = r31[3];

        $r92 = r31[2];

        $i260 = r153[6];

        $i259 = r153[7];

        $i261 = $i260 + $i259;

        $i262 = $i261 + 1;

        $i263 = $i262 >> 1;

        $r92[0] = $i263;

        $r93[2] = $i263;

        $r94 = r31[3];

        $i266 = r153[6];

        $i264 = r153[7];

        $i265 = $i264 * 2;

        $i268 = $i266 + $i265;

        $i267 = r153[8];

        $i269 = $i268 + $i267;

        $i270 = $i269 + 2;

        $i271 = $i270 >> 2;

        $r94[1] = $i271;

        $r95 = r31[3];

        $i273 = r153[7];

        $i272 = r153[8];

        $i274 = $i273 + $i272;

        $i275 = $i274 + 1;

        $i276 = $i275 >> 1;

        $r95[0] = $i276;

        goto label35;

     label31:
        $r64 = r31[0];

        $i134 = r7[0];

        $i133 = r7[1];

        $i135 = $i134 + $i133;

        $i136 = $i135 + 1;

        $i137 = $i136 >> 1;

        $r64[0] = $i137;

        $r65 = r31[0];

        $i140 = r7[0];

        $i138 = r7[1];

        $i139 = $i138 * 2;

        $i142 = $i140 + $i139;

        $i141 = r7[2];

        $i143 = $i142 + $i141;

        $i144 = $i143 + 2;

        $i145 = $i144 >> 2;

        $r65[1] = $i145;

        $r67 = r31[0];

        $r66 = r31[1];

        $i147 = r7[1];

        $i146 = r7[2];

        $i148 = $i147 + $i146;

        $i149 = $i148 + 1;

        $i150 = $i149 >> 1;

        $r66[0] = $i150;

        $r67[2] = $i150;

        $r69 = r31[1];

        $r68 = r31[0];

        $i153 = r7[1];

        $i151 = r7[2];

        $i152 = $i151 * 2;

        $i155 = $i153 + $i152;

        $i154 = r7[3];

        $i156 = $i155 + $i154;

        $i157 = $i156 + 2;

        $i158 = $i157 >> 2;

        $r68[3] = $i158;

        $r69[1] = $i158;

        $r71 = r31[1];

        $r70 = r31[2];

        $i160 = r7[2];

        $i159 = r7[3];

        $i161 = $i160 + $i159;

        $i162 = $i161 + 1;

        $i163 = $i162 >> 1;

        $r70[0] = $i163;

        $r71[2] = $i163;

        $r73 = r31[1];

        $r72 = r31[2];

        $i166 = r7[2];

        $i164 = r7[3];

        $i165 = $i164 * 2;

        $i168 = $i166 + $i165;

        $i167 = r30[0];

        $i169 = $i168 + $i167;

        $i170 = $i169 + 2;

        $i171 = $i170 >> 2;

        $r72[1] = $i171;

        $r73[3] = $i171;

        $r75 = r31[3];

        $r74 = r31[2];

        $i173 = r7[3];

        $i172 = r30[0];

        $i174 = $i173 + $i172;

        $i175 = $i174 + 1;

        $i176 = $i175 >> 1;

        $r74[2] = $i176;

        $r75[0] = $i176;

        $r77 = r31[3];

        $r76 = r31[2];

        $i179 = r7[3];

        $i177 = r30[0];

        $i178 = $i177 * 2;

        $i181 = $i179 + $i178;

        $i180 = r30[1];

        $i182 = $i181 + $i180;

        $i183 = $i182 + 2;

        $i184 = $i183 >> 2;

        $r76[3] = $i184;

        $r77[1] = $i184;

        $r78 = r31[3];

        $i187 = r30[0];

        $i185 = r30[1];

        $i186 = $i185 * 2;

        $i189 = $i187 + $i186;

        $i188 = r30[2];

        $i190 = $i189 + $i188;

        $i191 = $i190 + 2;

        $i192 = $i191 >> 2;

        $r78[2] = $i192;

        $r79 = r31[3];

        $i195 = r30[1];

        $i193 = r30[2];

        $i194 = $i193 * 2;

        $i197 = $i195 + $i194;

        $i196 = r30[3];

        $i198 = $i197 + $i196;

        $i199 = $i198 + 2;

        $i200 = $i199 >> 2;

        $r79[3] = $i200;

        goto label35;

     label32:
        r154 = newarray (int)[9];

        $i57 = r8[3];

        r154[0] = $i57;

        $i58 = r8[2];

        r154[1] = $i58;

        $i59 = r8[1];

        r154[2] = $i59;

        $i60 = r8[0];

        r154[3] = $i60;

        r154[4] = i470;

        $i61 = r7[0];

        r154[5] = $i61;

        $i62 = r7[1];

        r154[6] = $i62;

        $i63 = r7[2];

        r154[7] = $i63;

        $i64 = r7[3];

        r154[8] = $i64;

        $r48 = r31[0];

        $i66 = r154[0];

        $i65 = r154[1];

        $i67 = $i66 + $i65;

        $i68 = $i67 + 1;

        $i69 = $i68 >> 1;

        $r48[3] = $i69;

        $r49 = r31[1];

        $i72 = r154[0];

        $i70 = r154[1];

        $i71 = $i70 * 2;

        $i74 = $i72 + $i71;

        $i73 = r154[2];

        $i75 = $i74 + $i73;

        $i76 = $i75 + 2;

        $i77 = $i76 >> 2;

        $r49[3] = $i77;

        $r51 = r31[0];

        $r50 = r31[2];

        $i79 = r154[1];

        $i78 = r154[2];

        $i80 = $i79 + $i78;

        $i81 = $i80 + 1;

        $i82 = $i81 >> 1;

        $r50[3] = $i82;

        $r51[2] = $i82;

        $r53 = r31[1];

        $r52 = r31[3];

        $i85 = r154[1];

        $i83 = r154[2];

        $i84 = $i83 * 2;

        $i87 = $i85 + $i84;

        $i86 = r154[3];

        $i88 = $i87 + $i86;

        $i89 = $i88 + 2;

        $i90 = $i89 >> 2;

        $r52[3] = $i90;

        $r53[2] = $i90;

        $r55 = r31[2];

        $r54 = r31[0];

        $i92 = r154[2];

        $i91 = r154[3];

        $i93 = $i92 + $i91;

        $i94 = $i93 + 1;

        $i95 = $i94 >> 1;

        $r54[1] = $i95;

        $r55[2] = $i95;

        $r57 = r31[3];

        $r56 = r31[1];

        $i98 = r154[2];

        $i96 = r154[3];

        $i97 = $i96 * 2;

        $i100 = $i98 + $i97;

        $i99 = r154[4];

        $i101 = $i100 + $i99;

        $i102 = $i101 + 2;

        $i103 = $i102 >> 2;

        $r56[1] = $i103;

        $r57[2] = $i103;

        $r59 = r31[2];

        $r58 = r31[0];

        $i105 = r154[3];

        $i104 = r154[4];

        $i106 = $i105 + $i104;

        $i107 = $i106 + 1;

        $i108 = $i107 >> 1;

        $r58[0] = $i108;

        $r59[1] = $i108;

        $r61 = r31[3];

        $r60 = r31[1];

        $i111 = r154[3];

        $i109 = r154[4];

        $i110 = $i109 * 2;

        $i113 = $i111 + $i110;

        $i112 = r154[5];

        $i114 = $i113 + $i112;

        $i115 = $i114 + 2;

        $i116 = $i115 >> 2;

        $r60[0] = $i116;

        $r61[1] = $i116;

        $r62 = r31[2];

        $i119 = r154[4];

        $i117 = r154[5];

        $i118 = $i117 * 2;

        $i121 = $i119 + $i118;

        $i120 = r154[6];

        $i122 = $i121 + $i120;

        $i123 = $i122 + 2;

        $i124 = $i123 >> 2;

        $r62[0] = $i124;

        $r63 = r31[3];

        $i127 = r154[5];

        $i125 = r154[6];

        $i126 = $i125 * 2;

        $i129 = $i127 + $i126;

        $i128 = r154[7];

        $i130 = $i129 + $i128;

        $i131 = $i130 + 2;

        $i132 = $i131 >> 2;

        $r63[0] = $i132;

        goto label35;

     label33:
        $r32 = r31[0];

        $i18 = r8[0];

        $i17 = r8[1];

        $i19 = $i18 + $i17;

        $i20 = $i19 + 1;

        $i21 = $i20 >> 1;

        $r32[0] = $i21;

        $r33 = r31[1];

        $i24 = r8[0];

        $i22 = r8[1];

        $i23 = $i22 * 2;

        $i26 = $i24 + $i23;

        $i25 = r8[2];

        $i27 = $i26 + $i25;

        $i28 = $i27 + 2;

        $i29 = $i28 >> 2;

        $r33[0] = $i29;

        $r35 = r31[2];

        $r34 = r31[0];

        $i31 = r8[1];

        $i30 = r8[2];

        $i32 = $i31 + $i30;

        $i33 = $i32 + 1;

        $i34 = $i33 >> 1;

        $r34[1] = $i34;

        $r35[0] = $i34;

        $r37 = r31[3];

        $r36 = r31[1];

        $i37 = r8[1];

        $i35 = r8[2];

        $i36 = $i35 * 2;

        $i39 = $i37 + $i36;

        $i38 = r8[3];

        $i40 = $i39 + $i38;

        $i41 = $i40 + 2;

        $i42 = $i41 >> 2;

        $r36[1] = $i42;

        $r37[0] = $i42;

        $r39 = r31[2];

        $r38 = r31[0];

        $i44 = r8[2];

        $i43 = r8[3];

        $i45 = $i44 + $i43;

        $i46 = $i45 + 1;

        $i47 = $i46 >> 1;

        $r38[2] = $i47;

        $r39[1] = $i47;

        $r41 = r31[3];

        $r40 = r31[1];

        $i50 = r8[2];

        $i48 = r8[3];

        $i49 = $i48 * 2;

        $i52 = $i50 + $i49;

        $i51 = r8[3];

        $i53 = $i52 + $i51;

        $i54 = $i53 + 2;

        $i55 = $i54 >> 2;

        $r40[2] = $i55;

        $r41[1] = $i55;

        $r47 = r31[2];

        $r46 = r31[3];

        $r45 = r31[0];

        $r44 = r31[1];

        $r43 = r31[2];

        $r42 = r31[3];

        $i56 = r8[3];

        $r42[3] = $i56;

        $r43[3] = $i56;

        $r44[3] = $i56;

        $r45[3] = $i56;

        $r46[2] = $i56;

        $r47[2] = $i56;

        goto label35;

     label34:
        $r133 = <java.lang.System: java.io.PrintStream out>;

        $r132 = new java.lang.StringBuilder;

        specialinvoke $r132.<java.lang.StringBuilder: void <init>()>();

        $r134 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TODO: ");

        $i467 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int getMode()>();

        $r135 = virtualinvoke $r134.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i467);

        $r136 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r133.<java.io.PrintStream: void println(java.lang.String)>($r136);

        staticinvoke <java.lang.System: void exit(int)>(0);

     label35:
        virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: void setPredict(int[][])>(r31);

        return;
    }

    public void reconstruct()
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] r2, r3, r4;
        net.sourceforge.plantuml.webp.MacroBlock $r5;
        boolean $z0;
        int[] $r6, $r7, $r8;
        int $i0, $i1, i2, i3, i4;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] getPredict(int,boolean)>(1, 0);

        r3 = newmultiarray (int)[4][4];

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] getDiff()>();

        i2 = 0;

     label1:
        if i2 >= 4 goto label6;

        i3 = 0;

     label2:
        if i3 >= 4 goto label5;

        $r6 = r4[i2];

        $i1 = $r6[i3];

        $r7 = r2[i2];

        $i0 = $r7[i3];

        i4 = $i1 + $i0;

        if i4 >= 0 goto label3;

        i4 = 0;

     label3:
        if i4 <= 255 goto label4;

        i4 = 255;

     label4:
        $r8 = r3[i2];

        $r8[i3] = i4;

        i3 = i3 + 1;

        goto label2;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: void setDest(int[][])>(r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.webp.SubBlock: net.sourceforge.plantuml.webp.MacroBlock getMacroBlock()>();

        $z0 = virtualinvoke $r5.<net.sourceforge.plantuml.webp.MacroBlock: boolean isKeepDebugInfo()>();

        if $z0 != 0 goto label7;

        r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] diff> = null;

        r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] predict> = null;

        r0.<net.sourceforge.plantuml.webp.SubBlock: int[] tokens> = null;

     label7:
        return;
    }

    public void setDest(int[][])
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r1 := @parameter0: int[][];

        r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest> = r1;

        return;
    }

    public void setDiff(int[][])
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r1 := @parameter0: int[][];

        r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] diff> = r1;

        return;
    }

    public void setMode(int)
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int i0;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        i0 := @parameter0: int;

        r0.<net.sourceforge.plantuml.webp.SubBlock: int mode> = i0;

        return;
    }

    public void setPixel(int, int, int)
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] $r1, $r2, $r4;
        int i0, i1, i2;
        int[] $r3;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        if $r1 != null goto label1;

        $r4 = newmultiarray (int)[4][4];

        r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest> = $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] dest>;

        $r3 = $r2[i0];

        $r3[i1] = i2;

        return;
    }

    public void setPredict(int[][])
    {
        net.sourceforge.plantuml.webp.SubBlock r0;
        int[][] r1;

        r0 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r1 := @parameter0: int[][];

        r0.<net.sourceforge.plantuml.webp.SubBlock: int[][] predict> = r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4, $r7, $r8;
        net.sourceforge.plantuml.webp.SubBlock r5;
        int[] $r6;
        int $i0, i1;
        java.lang.String r9, r10;

        r5 := @this: net.sourceforge.plantuml.webp.SubBlock;

        r9 = "[";

        i1 = 0;

     label1:
        if i1 >= 16 goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r6 = r5.<net.sourceforge.plantuml.webp.SubBlock: int[] tokens>;

        $i0 = $r6[i1];

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return r10;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.webp.SubBlock: int Y2> = 1;

        <net.sourceforge.plantuml.webp.SubBlock: int Y_AFTER_Y2> = 0;

        <net.sourceforge.plantuml.webp.SubBlock: int Y> = 3;

        <net.sourceforge.plantuml.webp.SubBlock: int UV> = 2;

        return;
    }
}
