public class net.sourceforge.plantuml.golem.Tile extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private static double SIZE;
    private final int num;
    private final net.sourceforge.plantuml.ugraphic.UFont numberFont;
    private final net.sourceforge.plantuml.graphic.FontConfiguration fc;
    private final java.util.Map geometries;

    void <init>(int)
    {
        net.sourceforge.plantuml.golem.Tile r0;
        net.sourceforge.plantuml.ugraphic.UFont $r1, $r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        int i0, i1, i2;
        java.util.EnumMap $r4;
        net.sourceforge.plantuml.golem.TileGeometry[] r6;
        java.util.Map $r7;
        net.sourceforge.plantuml.golem.TileGeometry r8;
        net.sourceforge.plantuml.golem.TileArea $r9;

        r0 := @this: net.sourceforge.plantuml.golem.Tile;

        i0 := @parameter0: int;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont monospaced(int)>(11);

        r0.<net.sourceforge.plantuml.golem.Tile: net.sourceforge.plantuml.ugraphic.UFont numberFont> = $r1;

        $r2 = r0.<net.sourceforge.plantuml.golem.Tile: net.sourceforge.plantuml.ugraphic.UFont numberFont>;

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>($r2);

        r0.<net.sourceforge.plantuml.golem.Tile: net.sourceforge.plantuml.graphic.FontConfiguration fc> = $r3;

        r0.<net.sourceforge.plantuml.golem.Tile: int num> = i0;

        $r4 = new java.util.EnumMap;

        specialinvoke $r4.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lnet/sourceforge/plantuml/golem/TileGeometry;");

        r6 = staticinvoke <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry[] values()>();

        i1 = lengthof r6;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        r8 = r6[i2];

        $r9 = new net.sourceforge.plantuml.golem.TileArea;

        specialinvoke $r9.<net.sourceforge.plantuml.golem.TileArea: void <init>(net.sourceforge.plantuml.golem.Tile,net.sourceforge.plantuml.golem.TileGeometry)>(r0, r8);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, $r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r4);

        r0.<net.sourceforge.plantuml.golem.Tile: java.util.Map geometries> = $r7;

        return;
    }

    public net.sourceforge.plantuml.golem.TileArea getArea(net.sourceforge.plantuml.golem.TileGeometry)
    {
        net.sourceforge.plantuml.golem.Tile r0;
        net.sourceforge.plantuml.golem.TileGeometry r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.golem.TileArea $r4;

        r0 := @this: net.sourceforge.plantuml.golem.Tile;

        r1 := @parameter0: net.sourceforge.plantuml.golem.TileGeometry;

        $r2 = r0.<net.sourceforge.plantuml.golem.Tile: java.util.Map geometries>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (net.sourceforge.plantuml.golem.TileArea) $r3;

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0;
        java.lang.CharSequence[] $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        net.sourceforge.plantuml.golem.Tile r4;
        int $i0;
        java.lang.String $r6;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.SpriteContainerEmpty $r8;
        net.sourceforge.plantuml.graphic.FontConfiguration $r9;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r10;
        net.sourceforge.plantuml.graphic.TextBlock r11;
        net.sourceforge.plantuml.graphic.StringBounder $r12, $r14;
        net.sourceforge.plantuml.awt.geom.Dimension2D r13, r15;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, d8, $d9, d10, $d11, d12, $d13, $d14, $d15, $d16, $d17, $d18;
        net.sourceforge.plantuml.ugraphic.UTranslate $r16, $r19;
        net.sourceforge.plantuml.ugraphic.UGraphic $r17, $r20, r22, r23;
        net.sourceforge.plantuml.ugraphic.URectangle $r18;
        net.sourceforge.plantuml.ugraphic.UEllipse $r21;

        r4 := @this: net.sourceforge.plantuml.golem.Tile;

        r22 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        r23 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r1 = newarray (java.lang.CharSequence)[1];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = r4.<net.sourceforge.plantuml.golem.Tile: int num>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r1[0] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r1);

        $r9 = r4.<net.sourceforge.plantuml.golem.Tile: net.sourceforge.plantuml.graphic.FontConfiguration fc>;

        $r10 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r8 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r8.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        r11 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r9, $r10, $r8);

        $r12 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r13 = interfaceinvoke r11.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r12);

        $r14 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r15 = virtualinvoke r4.<net.sourceforge.plantuml.golem.Tile: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r14);

        $d0 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r13.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = virtualinvoke r13.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d5 = $d3 - $d4;

        $d6 = virtualinvoke r13.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d7 = virtualinvoke r13.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d8 = staticinvoke <java.lang.Math: double max(double,double)>($d6, $d7);

        $d9 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d10 = $d9 - d8;

        $d11 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d12 = $d11 - d8;

        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d14 = d2 / 2.0;

        $d13 = d5 / 2.0;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d14, $d13);

        $r17 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke r11.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r17);

        $r18 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d16 = <net.sourceforge.plantuml.golem.Tile: double SIZE>;

        $d15 = <net.sourceforge.plantuml.golem.Tile: double SIZE>;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d16, $d15);

        interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r18);

        $r19 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d18 = d10 / 2.0;

        $d17 = d12 / 2.0;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d18, $d17);

        $r20 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        $r21 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r21.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(d8, d8);

        interfaceinvoke $r20.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r21);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        double $d0, $d1;
        net.sourceforge.plantuml.golem.Tile r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.golem.Tile;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = <net.sourceforge.plantuml.golem.Tile: double SIZE>;

        $d0 = <net.sourceforge.plantuml.golem.Tile: double SIZE>;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    static void <clinit>()
    {
        <net.sourceforge.plantuml.golem.Tile: double SIZE> = 40.0;

        return;
    }
}
