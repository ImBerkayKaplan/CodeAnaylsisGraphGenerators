class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow color;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: net.sourceforge.plantuml.graphic.Rainbow color> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal r2;
        java.awt.geom.Point2D r3, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.graphic.Rainbow $r7;
        net.sourceforge.plantuml.ugraphic.UPolygon $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r9;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: net.sourceforge.plantuml.graphic.Rainbow color>;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToRight()>();

        r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r6, $r7, $r8);

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r3);

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r4);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r9);

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        java.awt.geom.Point2D$Double $r4;
        double $d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        java.awt.geom.Point2D $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r4 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d3 = $d1 + $d2;

        $d4 = $d3 / 2.0;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d4);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.StringBounder)>($r6, r2);

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r4);

        return $r8;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        java.awt.geom.Point2D$Double $r4;
        double $d0, $d1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        java.awt.geom.Point2D $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r4 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, $d1);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.StringBounder)>($r6, r2);

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r4);

        return $r8;
    }
}
