class net.sourceforge.plantuml.graphic.USymbolFile extends net.sourceforge.plantuml.graphic.USymbol
{
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment stereotypeAlignement;

    void <init>()
    {
        net.sourceforge.plantuml.graphic.USymbolFile r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFile;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        $r1 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        r0.<net.sourceforge.plantuml.graphic.USymbolFile: net.sourceforge.plantuml.graphic.HorizontalAlignment stereotypeAlignement> = $r1;

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolFile r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFile;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter FILE>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolFile r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFile;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName file>;

        return $r0;
    }

    private void drawFile(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        double d0, $d1, d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27;
        byte $b1, $b2;
        net.sourceforge.plantuml.ugraphic.UPath $r0, $r5;
        java.awt.geom.Point2D$Double $r1, $r2, $r3, $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic r4;
        net.sourceforge.plantuml.ugraphic.UPolygon $r7;
        net.sourceforge.plantuml.graphic.USymbolFile r8;
        net.sourceforge.plantuml.ugraphic.AbstractShadowable r10;

        r8 := @this: net.sourceforge.plantuml.graphic.USymbolFile;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d7 := @parameter1: double;

        d2 := @parameter2: double;

        d17 := @parameter3: double;

        d0 := @parameter4: double;

        $b1 = d0 cmpl 0.0;

        if $b1 != 0 goto label1;

        $r7 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, d2);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d7, d2);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d7, 10.0);

        $d27 = d7 - 10.0;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d27, 0.0);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        r10 = $r7;

        goto label2;

     label1:
        $r0 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $d1 = d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, $d1);

        $d3 = d0 / 2.0;

        $d4 = d2 - $d3;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d4);

        $r1 = new java.awt.geom.Point2D$Double;

        $d5 = d0 / 2.0;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d5, d2);

        $d6 = d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r1, $d6, 0.0, 0.0);

        $d8 = d0 / 2.0;

        $d9 = d7 - $d8;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d9, d2);

        $r2 = new java.awt.geom.Point2D$Double;

        $d10 = d0 / 2.0;

        $d11 = d2 - $d10;

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d7, $d11);

        $d12 = d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r2, $d12, 0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d7, 10.0);

        $d13 = d7 - 10.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d13, 0.0);

        $d14 = d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d14, 0.0);

        $r3 = new java.awt.geom.Point2D$Double;

        $d15 = d0 / 2.0;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, $d15);

        $d16 = d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r3, $d16, 0.0, 0.0);

        r10 = $r0;

     label2:
        interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.Shadowable: void setDeltaShadow(double)>(d17);

        interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r10);

        $r5 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $d18 = d7 - 10.0;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>($d18, 0.0);

        $b2 = d0 cmpl 0.0;

        if $b2 != 0 goto label3;

        $d26 = d7 - 10.0;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d26, 10.0);

        goto label4;

     label3:
        $d21 = d7 - 10.0;

        $d19 = d0 / 2.0;

        $d20 = 10.0 - $d19;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d21, $d20);

        $r6 = new java.awt.geom.Point2D$Double;

        $d23 = d7 - 10.0;

        $d22 = d0 / 2.0;

        $d24 = $d23 + $d22;

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d24, 10.0);

        $d25 = d0 / 2.0;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r6, $d25, 0.0, 0.0);

     label4:
        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d7, 10.0);

        interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        return;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolFile r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFile;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(10.0, 10.0, 10.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolFile$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolFile r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFile;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolFile$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolFile$1: void <init>(net.sourceforge.plantuml.graphic.USymbolFile,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r2, r3, r4);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolFile$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolFile r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4;
        double d0, d1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5, r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFile;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolFile$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolFile$2: void <init>(net.sourceforge.plantuml.graphic.USymbolFile,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,double,net.sourceforge.plantuml.graphic.TextBlock,double)>(r1, r2, r3, d0, r4, d1);

        return $r0;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolFile, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolFile r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2, d3;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFile;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFile: void drawFile(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double)>(r1, d0, d1, d2, d3);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolFile)
    {
        net.sourceforge.plantuml.graphic.USymbolFile r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFile;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFile: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }

    static net.sourceforge.plantuml.graphic.HorizontalAlignment access$200(net.sourceforge.plantuml.graphic.USymbolFile)
    {
        net.sourceforge.plantuml.graphic.USymbolFile r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFile;

        $r1 = r0.<net.sourceforge.plantuml.graphic.USymbolFile: net.sourceforge.plantuml.graphic.HorizontalAlignment stereotypeAlignement>;

        return $r1;
    }
}
