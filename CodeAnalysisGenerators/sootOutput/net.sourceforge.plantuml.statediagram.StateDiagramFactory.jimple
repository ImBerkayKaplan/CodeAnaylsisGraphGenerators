public class net.sourceforge.plantuml.statediagram.StateDiagramFactory extends net.sourceforge.plantuml.command.PSystemCommandFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.statediagram.StateDiagramFactory r0;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagramFactory;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.statediagram.StateDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.statediagram.StateDiagramFactory r4;

        r4 := @this: net.sourceforge.plantuml.statediagram.StateDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.statediagram.StateDiagram;

        specialinvoke $r0.<net.sourceforge.plantuml.statediagram.StateDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r0;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.command.CommandFootboxIgnored $r2;
        net.sourceforge.plantuml.command.CommandRankDir $r3;
        net.sourceforge.plantuml.classdiagram.command.CommandRemoveRestore $r4;
        net.sourceforge.plantuml.statediagram.command.CommandCreateState $r5;
        net.sourceforge.plantuml.statediagram.command.CommandLinkState $r6;
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateReverse $r7;
        net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState $r8;
        net.sourceforge.plantuml.statediagram.command.CommandCreatePackage2 $r9;
        net.sourceforge.plantuml.statediagram.command.CommandEndState $r10;
        net.sourceforge.plantuml.statediagram.command.CommandAddField $r11;
        net.sourceforge.plantuml.statediagram.command.CommandConcurrentState $r12;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity $r13;
        net.sourceforge.plantuml.command.regex.RegexOr $r14;
        net.sourceforge.plantuml.command.regex.IRegex[] $r15;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r16, $r17;
        net.sourceforge.plantuml.command.Command $r19, $r20, $r21, $r24, $r25, $r29, $r30;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink $r22;
        net.sourceforge.plantuml.classdiagram.command.CommandUrl $r26;
        net.sourceforge.plantuml.command.note.CommandFactoryNote $r27;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShow2 $r31;
        net.sourceforge.plantuml.classdiagram.command.CommandNamespaceSeparator $r32;
        net.sourceforge.plantuml.statediagram.StateDiagramFactory r33;

        r33 := @this: net.sourceforge.plantuml.statediagram.StateDiagramFactory;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new net.sourceforge.plantuml.command.CommandFootboxIgnored;

        specialinvoke $r2.<net.sourceforge.plantuml.command.CommandFootboxIgnored: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.command.CommandRankDir;

        specialinvoke $r3.<net.sourceforge.plantuml.command.CommandRankDir: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.classdiagram.command.CommandRemoveRestore;

        specialinvoke $r4.<net.sourceforge.plantuml.classdiagram.command.CommandRemoveRestore: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new net.sourceforge.plantuml.statediagram.command.CommandCreateState;

        specialinvoke $r5.<net.sourceforge.plantuml.statediagram.command.CommandCreateState: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.statediagram.command.CommandLinkState;

        specialinvoke $r6.<net.sourceforge.plantuml.statediagram.command.CommandLinkState: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new net.sourceforge.plantuml.statediagram.command.CommandLinkStateReverse;

        specialinvoke $r7.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateReverse: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState;

        specialinvoke $r8.<net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new net.sourceforge.plantuml.statediagram.command.CommandCreatePackage2;

        specialinvoke $r9.<net.sourceforge.plantuml.statediagram.command.CommandCreatePackage2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new net.sourceforge.plantuml.statediagram.command.CommandEndState;

        specialinvoke $r10.<net.sourceforge.plantuml.statediagram.command.CommandEndState: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new net.sourceforge.plantuml.statediagram.command.CommandAddField;

        specialinvoke $r11.<net.sourceforge.plantuml.statediagram.command.CommandAddField: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new net.sourceforge.plantuml.statediagram.command.CommandConcurrentState;

        specialinvoke $r12.<net.sourceforge.plantuml.statediagram.command.CommandConcurrentState: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = new net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r15 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("[%pLN_.]+");

        $r15[0] = $r16;

        $r17 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("[%g][^%g]+[%g]");

        $r15[1] = $r17;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>("ENTITY", $r15);

        specialinvoke $r13.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: void <init>(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex)>("state", $r14);

        $r19 = virtualinvoke $r13.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = virtualinvoke $r13.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = virtualinvoke $r13.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r22 = new net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        specialinvoke $r22.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: void <init>()>();

        $r24 = virtualinvoke $r22.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r25 = virtualinvoke $r22.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r26 = new net.sourceforge.plantuml.classdiagram.command.CommandUrl;

        specialinvoke $r26.<net.sourceforge.plantuml.classdiagram.command.CommandUrl: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r27 = new net.sourceforge.plantuml.command.note.CommandFactoryNote;

        specialinvoke $r27.<net.sourceforge.plantuml.command.note.CommandFactoryNote: void <init>()>();

        $r29 = virtualinvoke $r27.<net.sourceforge.plantuml.command.note.CommandFactoryNote: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r29);

        $r30 = virtualinvoke $r27.<net.sourceforge.plantuml.command.note.CommandFactoryNote: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r30);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands1(java.util.List)>($r0);

        $r31 = new net.sourceforge.plantuml.classdiagram.command.CommandHideShow2;

        specialinvoke $r31.<net.sourceforge.plantuml.classdiagram.command.CommandHideShow2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r32 = new net.sourceforge.plantuml.classdiagram.command.CommandNamespaceSeparator;

        specialinvoke $r32.<net.sourceforge.plantuml.classdiagram.command.CommandNamespaceSeparator: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r32);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.statediagram.StateDiagramFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.statediagram.StateDiagram $r4;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagramFactory: net.sourceforge.plantuml.statediagram.StateDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }
}
