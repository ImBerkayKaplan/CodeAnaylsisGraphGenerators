public class net.sourceforge.plantuml.syntax.LanguageDescriptor extends java.lang.Object
{
    private final java.util.Set type;
    private final java.util.Set keyword;
    private final java.util.Set preproc;

    public void <init>()
    {
        net.sourceforge.plantuml.syntax.LanguageDescriptor r0;
        java.util.TreeSet $r1, $r2, $r3;
        java.util.Set $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r198, $r199;

        r0 := @this: net.sourceforge.plantuml.syntax.LanguageDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeSet;

        specialinvoke $r1.<java.util.TreeSet: void <init>()>();

        r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type> = $r1;

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

        r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword> = $r2;

        $r3 = new java.util.TreeSet;

        specialinvoke $r3.<java.util.TreeSet: void <init>()>();

        r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc> = $r3;

        $r4 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>("actor");

        $r5 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>("participant");

        $r6 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>("usecase");

        $r7 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r7.<java.util.Set: boolean add(java.lang.Object)>("class");

        $r8 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>("interface");

        $r9 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r9.<java.util.Set: boolean add(java.lang.Object)>("abstract");

        $r10 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>("enum");

        $r11 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>("component");

        $r12 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r12.<java.util.Set: boolean add(java.lang.Object)>("state");

        $r13 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r13.<java.util.Set: boolean add(java.lang.Object)>("object");

        $r14 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r14.<java.util.Set: boolean add(java.lang.Object)>("artifact");

        $r15 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>("folder");

        $r16 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>("rectangle");

        $r17 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>("node");

        $r18 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>("frame");

        $r19 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r19.<java.util.Set: boolean add(java.lang.Object)>("cloud");

        $r20 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r20.<java.util.Set: boolean add(java.lang.Object)>("database");

        $r21 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r21.<java.util.Set: boolean add(java.lang.Object)>("storage");

        $r22 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>("agent");

        $r23 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r23.<java.util.Set: boolean add(java.lang.Object)>("stack");

        $r24 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r24.<java.util.Set: boolean add(java.lang.Object)>("boundary");

        $r25 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r25.<java.util.Set: boolean add(java.lang.Object)>("control");

        $r26 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r26.<java.util.Set: boolean add(java.lang.Object)>("entity");

        $r27 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r27.<java.util.Set: boolean add(java.lang.Object)>("card");

        $r28 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r28.<java.util.Set: boolean add(java.lang.Object)>("file");

        $r29 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r29.<java.util.Set: boolean add(java.lang.Object)>("package");

        $r30 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r30.<java.util.Set: boolean add(java.lang.Object)>("queue");

        $r31 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r31.<java.util.Set: boolean add(java.lang.Object)>("archimate");

        $r32 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r32.<java.util.Set: boolean add(java.lang.Object)>("diamond");

        $r33 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r33.<java.util.Set: boolean add(java.lang.Object)>("collections");

        $r34 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r34.<java.util.Set: boolean add(java.lang.Object)>("hexagon");

        $r35 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r35.<java.util.Set: boolean add(java.lang.Object)>("label");

        $r36 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r36.<java.util.Set: boolean add(java.lang.Object)>("person");

        $r37 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        interfaceinvoke $r37.<java.util.Set: boolean add(java.lang.Object)>("annotation");

        $r38 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r38.<java.util.Set: boolean add(java.lang.Object)>("@startwire");

        $r39 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r39.<java.util.Set: boolean add(java.lang.Object)>("@startbpm");

        $r40 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r40.<java.util.Set: boolean add(java.lang.Object)>("@startuml");

        $r41 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r41.<java.util.Set: boolean add(java.lang.Object)>("@startdot");

        $r42 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r42.<java.util.Set: boolean add(java.lang.Object)>("@startjcckit");

        $r43 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r43.<java.util.Set: boolean add(java.lang.Object)>("@startditaa");

        $r44 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r44.<java.util.Set: boolean add(java.lang.Object)>("@startproject");

        $r45 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r45.<java.util.Set: boolean add(java.lang.Object)>("@startsalt");

        $r46 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r46.<java.util.Set: boolean add(java.lang.Object)>("@startflow");

        $r47 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r47.<java.util.Set: boolean add(java.lang.Object)>("@startcreole");

        $r48 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r48.<java.util.Set: boolean add(java.lang.Object)>("@starttree");

        $r49 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r49.<java.util.Set: boolean add(java.lang.Object)>("@startcute");

        $r50 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r50.<java.util.Set: boolean add(java.lang.Object)>("@startmath");

        $r51 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r51.<java.util.Set: boolean add(java.lang.Object)>("@startlatex");

        $r52 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r52.<java.util.Set: boolean add(java.lang.Object)>("@startdef");

        $r53 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r53.<java.util.Set: boolean add(java.lang.Object)>("@startgantt");

        $r54 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r54.<java.util.Set: boolean add(java.lang.Object)>("@startnwdiag");

        $r55 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r55.<java.util.Set: boolean add(java.lang.Object)>("@startmindmap");

        $r56 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r56.<java.util.Set: boolean add(java.lang.Object)>("@startwbs");

        $r57 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r57.<java.util.Set: boolean add(java.lang.Object)>("@startjson");

        $r58 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r58.<java.util.Set: boolean add(java.lang.Object)>("@startgit");

        $r59 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r59.<java.util.Set: boolean add(java.lang.Object)>("@startboard");

        $r60 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r60.<java.util.Set: boolean add(java.lang.Object)>("@startyaml");

        $r61 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r61.<java.util.Set: boolean add(java.lang.Object)>("@endwire");

        $r62 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r62.<java.util.Set: boolean add(java.lang.Object)>("@endbpm");

        $r63 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r63.<java.util.Set: boolean add(java.lang.Object)>("@enduml");

        $r64 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r64.<java.util.Set: boolean add(java.lang.Object)>("@enddot");

        $r65 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r65.<java.util.Set: boolean add(java.lang.Object)>("@endjcckit");

        $r66 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r66.<java.util.Set: boolean add(java.lang.Object)>("@endditaa");

        $r67 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r67.<java.util.Set: boolean add(java.lang.Object)>("@endproject");

        $r68 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r68.<java.util.Set: boolean add(java.lang.Object)>("@endsalt");

        $r69 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r69.<java.util.Set: boolean add(java.lang.Object)>("@endflow");

        $r70 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r70.<java.util.Set: boolean add(java.lang.Object)>("@endcreole");

        $r71 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r71.<java.util.Set: boolean add(java.lang.Object)>("@endtree");

        $r72 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r72.<java.util.Set: boolean add(java.lang.Object)>("@endcute");

        $r73 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r73.<java.util.Set: boolean add(java.lang.Object)>("@endmath");

        $r74 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r74.<java.util.Set: boolean add(java.lang.Object)>("@endlatex");

        $r75 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r75.<java.util.Set: boolean add(java.lang.Object)>("@enddef");

        $r76 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r76.<java.util.Set: boolean add(java.lang.Object)>("@endgantt");

        $r77 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r77.<java.util.Set: boolean add(java.lang.Object)>("@endnwdiag");

        $r78 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r78.<java.util.Set: boolean add(java.lang.Object)>("@endmindmap");

        $r79 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r79.<java.util.Set: boolean add(java.lang.Object)>("@endwbs");

        $r80 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r80.<java.util.Set: boolean add(java.lang.Object)>("@endjson");

        $r81 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r81.<java.util.Set: boolean add(java.lang.Object)>("@endgit");

        $r82 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r82.<java.util.Set: boolean add(java.lang.Object)>("@endboard");

        $r83 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r83.<java.util.Set: boolean add(java.lang.Object)>("@endyaml");

        $r84 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r84.<java.util.Set: boolean add(java.lang.Object)>("as");

        $r85 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r85.<java.util.Set: boolean add(java.lang.Object)>("also");

        $r86 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r86.<java.util.Set: boolean add(java.lang.Object)>("autonumber");

        $r87 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r87.<java.util.Set: boolean add(java.lang.Object)>("caption");

        $r88 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r88.<java.util.Set: boolean add(java.lang.Object)>("title");

        $r89 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r89.<java.util.Set: boolean add(java.lang.Object)>("newpage");

        $r90 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r90.<java.util.Set: boolean add(java.lang.Object)>("box");

        $r91 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r91.<java.util.Set: boolean add(java.lang.Object)>("alt");

        $r92 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r92.<java.util.Set: boolean add(java.lang.Object)>("else");

        $r93 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r93.<java.util.Set: boolean add(java.lang.Object)>("opt");

        $r94 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r94.<java.util.Set: boolean add(java.lang.Object)>("loop");

        $r95 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r95.<java.util.Set: boolean add(java.lang.Object)>("par");

        $r96 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r96.<java.util.Set: boolean add(java.lang.Object)>("break");

        $r97 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r97.<java.util.Set: boolean add(java.lang.Object)>("critical");

        $r98 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r98.<java.util.Set: boolean add(java.lang.Object)>("note");

        $r99 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r99.<java.util.Set: boolean add(java.lang.Object)>("rnote");

        $r100 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r100.<java.util.Set: boolean add(java.lang.Object)>("hnote");

        $r101 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r101.<java.util.Set: boolean add(java.lang.Object)>("legend");

        $r102 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r102.<java.util.Set: boolean add(java.lang.Object)>("group");

        $r103 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r103.<java.util.Set: boolean add(java.lang.Object)>("left");

        $r104 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r104.<java.util.Set: boolean add(java.lang.Object)>("right");

        $r105 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r105.<java.util.Set: boolean add(java.lang.Object)>("of");

        $r106 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r106.<java.util.Set: boolean add(java.lang.Object)>("on");

        $r107 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r107.<java.util.Set: boolean add(java.lang.Object)>("link");

        $r108 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r108.<java.util.Set: boolean add(java.lang.Object)>("over");

        $r109 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r109.<java.util.Set: boolean add(java.lang.Object)>("end");

        $r110 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r110.<java.util.Set: boolean add(java.lang.Object)>("activate");

        $r111 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r111.<java.util.Set: boolean add(java.lang.Object)>("deactivate");

        $r112 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r112.<java.util.Set: boolean add(java.lang.Object)>("destroy");

        $r113 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r113.<java.util.Set: boolean add(java.lang.Object)>("create");

        $r114 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r114.<java.util.Set: boolean add(java.lang.Object)>("footbox");

        $r115 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r115.<java.util.Set: boolean add(java.lang.Object)>("hide");

        $r116 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r116.<java.util.Set: boolean add(java.lang.Object)>("show");

        $r117 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r117.<java.util.Set: boolean add(java.lang.Object)>("skinparam");

        $r118 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r118.<java.util.Set: boolean add(java.lang.Object)>("skin");

        $r119 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r119.<java.util.Set: boolean add(java.lang.Object)>("top");

        $r120 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r120.<java.util.Set: boolean add(java.lang.Object)>("bottom");

        $r121 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r121.<java.util.Set: boolean add(java.lang.Object)>("top to bottom direction");

        $r122 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r122.<java.util.Set: boolean add(java.lang.Object)>("left to right direction");

        $r123 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r123.<java.util.Set: boolean add(java.lang.Object)>("package");

        $r124 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r124.<java.util.Set: boolean add(java.lang.Object)>("namespace");

        $r125 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r125.<java.util.Set: boolean add(java.lang.Object)>("page");

        $r126 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r126.<java.util.Set: boolean add(java.lang.Object)>("up");

        $r127 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r127.<java.util.Set: boolean add(java.lang.Object)>("down");

        $r128 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r128.<java.util.Set: boolean add(java.lang.Object)>("if");

        $r129 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r129.<java.util.Set: boolean add(java.lang.Object)>("then");

        $r130 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r130.<java.util.Set: boolean add(java.lang.Object)>("else");

        $r131 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r131.<java.util.Set: boolean add(java.lang.Object)>("elseif");

        $r132 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r132.<java.util.Set: boolean add(java.lang.Object)>("endif");

        $r133 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r133.<java.util.Set: boolean add(java.lang.Object)>("partition");

        $r134 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r134.<java.util.Set: boolean add(java.lang.Object)>("footer");

        $r135 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r135.<java.util.Set: boolean add(java.lang.Object)>("header");

        $r136 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r136.<java.util.Set: boolean add(java.lang.Object)>("center");

        $r137 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r137.<java.util.Set: boolean add(java.lang.Object)>("rotate");

        $r138 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r138.<java.util.Set: boolean add(java.lang.Object)>("ref");

        $r139 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r139.<java.util.Set: boolean add(java.lang.Object)>("return");

        $r140 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r140.<java.util.Set: boolean add(java.lang.Object)>("is");

        $r141 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r141.<java.util.Set: boolean add(java.lang.Object)>("repeat");

        $r142 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r142.<java.util.Set: boolean add(java.lang.Object)>("start");

        $r143 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r143.<java.util.Set: boolean add(java.lang.Object)>("stop");

        $r144 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r144.<java.util.Set: boolean add(java.lang.Object)>("while");

        $r145 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r145.<java.util.Set: boolean add(java.lang.Object)>("endwhile");

        $r146 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r146.<java.util.Set: boolean add(java.lang.Object)>("fork");

        $r147 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r147.<java.util.Set: boolean add(java.lang.Object)>("again");

        $r148 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r148.<java.util.Set: boolean add(java.lang.Object)>("kill");

        $r149 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r149.<java.util.Set: boolean add(java.lang.Object)>("detach");

        $r150 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r150.<java.util.Set: boolean add(java.lang.Object)>("order");

        $r151 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r151.<java.util.Set: boolean add(java.lang.Object)>("allow_mixing");

        $r152 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r152.<java.util.Set: boolean add(java.lang.Object)>("allowmixing");

        $r153 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r153.<java.util.Set: boolean add(java.lang.Object)>("mainframe");

        $r154 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r154.<java.util.Set: boolean add(java.lang.Object)>("across");

        $r155 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r155.<java.util.Set: boolean add(java.lang.Object)>("stereotype");

        $r156 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r156.<java.util.Set: boolean add(java.lang.Object)>("split");

        $r157 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r157.<java.util.Set: boolean add(java.lang.Object)>("style");

        $r158 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r158.<java.util.Set: boolean add(java.lang.Object)>("sprite");

        $r159 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r159.<java.util.Set: boolean add(java.lang.Object)>("circle");

        $r160 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r160.<java.util.Set: boolean add(java.lang.Object)>("empty");

        $r161 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r161.<java.util.Set: boolean add(java.lang.Object)>("members");

        $r162 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r162.<java.util.Set: boolean add(java.lang.Object)>("description");

        $r163 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r163.<java.util.Set: boolean add(java.lang.Object)>("true");

        $r164 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r164.<java.util.Set: boolean add(java.lang.Object)>("false");

        $r165 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r165.<java.util.Set: boolean add(java.lang.Object)>("normal");

        $r166 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r166.<java.util.Set: boolean add(java.lang.Object)>("italic");

        $r167 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r167.<java.util.Set: boolean add(java.lang.Object)>("bold");

        $r168 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r168.<java.util.Set: boolean add(java.lang.Object)>("plain");

        $r169 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r169.<java.util.Set: boolean add(java.lang.Object)>("color");

        $r170 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r170.<java.util.Set: boolean add(java.lang.Object)>("dotted");

        $r171 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r171.<java.util.Set: boolean add(java.lang.Object)>("dashed");

        $r172 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r172.<java.util.Set: boolean add(java.lang.Object)>("bold");

        $r173 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        interfaceinvoke $r173.<java.util.Set: boolean add(java.lang.Object)>("map");

        $r174 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r174.<java.util.Set: boolean add(java.lang.Object)>("!exit");

        $r175 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r175.<java.util.Set: boolean add(java.lang.Object)>("!include");

        $r176 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r176.<java.util.Set: boolean add(java.lang.Object)>("!theme");

        $r177 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r177.<java.util.Set: boolean add(java.lang.Object)>("!pragma");

        $r178 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r178.<java.util.Set: boolean add(java.lang.Object)>("!define");

        $r179 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r179.<java.util.Set: boolean add(java.lang.Object)>("!undef");

        $r180 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r180.<java.util.Set: boolean add(java.lang.Object)>("!if");

        $r181 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r181.<java.util.Set: boolean add(java.lang.Object)>("!ifdef");

        $r182 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r182.<java.util.Set: boolean add(java.lang.Object)>("!endif");

        $r183 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r183.<java.util.Set: boolean add(java.lang.Object)>("!ifndef");

        $r184 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r184.<java.util.Set: boolean add(java.lang.Object)>("!else");

        $r185 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r185.<java.util.Set: boolean add(java.lang.Object)>("!definelong");

        $r186 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r186.<java.util.Set: boolean add(java.lang.Object)>("!enddefinelong");

        $r187 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r187.<java.util.Set: boolean add(java.lang.Object)>("!function");

        $r188 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r188.<java.util.Set: boolean add(java.lang.Object)>("!procedure");

        $r189 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r189.<java.util.Set: boolean add(java.lang.Object)>("!endfunction");

        $r190 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r190.<java.util.Set: boolean add(java.lang.Object)>("!endprocedure");

        $r191 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r191.<java.util.Set: boolean add(java.lang.Object)>("!unquoted");

        $r192 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r192.<java.util.Set: boolean add(java.lang.Object)>("!return");

        $r193 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r193.<java.util.Set: boolean add(java.lang.Object)>("!startsub");

        $r194 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r194.<java.util.Set: boolean add(java.lang.Object)>("!endsub");

        $r195 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r195.<java.util.Set: boolean add(java.lang.Object)>("!assert");

        $r196 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r196.<java.util.Set: boolean add(java.lang.Object)>("!log");

        $r197 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r197.<java.util.Set: boolean add(java.lang.Object)>("!local");

        $r198 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r198.<java.util.Set: boolean add(java.lang.Object)>("!dump_memory");

        $r199 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        interfaceinvoke $r199.<java.util.Set: boolean add(java.lang.Object)>("!import");

        return;
    }

    public net.sourceforge.plantuml.utils.Cypher getCypher()
    {
        net.sourceforge.plantuml.utils.Cypher $r0;
        net.sourceforge.plantuml.syntax.LanguageDescriptor r2;
        java.util.Set $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Collection $r6, $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r7;
        java.lang.Object $r9, $r10, $r11, $r13, $r15;
        java.lang.String $r12, $r14, r17, r19, r21, r23, r25;
        java.util.Iterator r16, r18, r20, r22, r24;

        r2 := @this: net.sourceforge.plantuml.syntax.LanguageDescriptor;

        $r0 = new net.sourceforge.plantuml.utils.Cypher;

        specialinvoke $r0.<net.sourceforge.plantuml.utils.Cypher: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        r16 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r15 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (java.lang.String) $r15;

        virtualinvoke $r0.<net.sourceforge.plantuml.utils.Cypher: void addException(java.lang.String)>(r17);

        goto label01;

     label02:
        $r4 = r2.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        r18 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r13 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r13;

        $r14 = virtualinvoke r19.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("@", "");

        virtualinvoke $r0.<net.sourceforge.plantuml.utils.Cypher: void addException(java.lang.String)>($r14);

        goto label03;

     label04:
        $r5 = r2.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        r20 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label06;

        $r11 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.String) $r11;

        $r12 = virtualinvoke r21.<java.lang.String: java.lang.String substring(int)>(1);

        virtualinvoke $r0.<net.sourceforge.plantuml.utils.Cypher: void addException(java.lang.String)>($r12);

        goto label05;

     label06:
        $r6 = staticinvoke <net.sourceforge.plantuml.SkinParam: java.util.Collection getPossibleValues()>();

        r22 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label07:
        $z3 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label08;

        $r10 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.lang.String) $r10;

        virtualinvoke $r0.<net.sourceforge.plantuml.utils.Cypher: void addException(java.lang.String)>(r23);

        goto label07;

     label08:
        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.color.HColorSet: java.util.Collection names()>();

        r24 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label10;

        $r9 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.lang.String) $r9;

        virtualinvoke $r0.<net.sourceforge.plantuml.utils.Cypher: void addException(java.lang.String)>(r25);

        goto label09;

     label10:
        virtualinvoke $r0.<net.sourceforge.plantuml.utils.Cypher: void addException(java.lang.String)>("o");

        return $r0;
    }

    public void print(java.io.PrintStream)
    {
        java.io.PrintStream r0;
        net.sourceforge.plantuml.syntax.LanguageDescriptor r1;
        java.util.Set $r2, $r3, $r4;
        java.util.Collection $r5, $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r6;

        r1 := @this: net.sourceforge.plantuml.syntax.LanguageDescriptor;

        r0 := @parameter0: java.io.PrintStream;

        $r2 = r1.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        staticinvoke <net.sourceforge.plantuml.syntax.LanguageDescriptor: void print(java.io.PrintStream,java.lang.String,java.util.Collection)>(r0, "type", $r2);

        $r3 = r1.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        staticinvoke <net.sourceforge.plantuml.syntax.LanguageDescriptor: void print(java.io.PrintStream,java.lang.String,java.util.Collection)>(r0, "keyword", $r3);

        $r4 = r1.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        staticinvoke <net.sourceforge.plantuml.syntax.LanguageDescriptor: void print(java.io.PrintStream,java.lang.String,java.util.Collection)>(r0, "preprocessor", $r4);

        $r5 = staticinvoke <net.sourceforge.plantuml.SkinParam: java.util.Collection getPossibleValues()>();

        staticinvoke <net.sourceforge.plantuml.syntax.LanguageDescriptor: void print(java.io.PrintStream,java.lang.String,java.util.Collection)>(r0, "skinparameter", $r5);

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColorSet: java.util.Collection names()>();

        staticinvoke <net.sourceforge.plantuml.syntax.LanguageDescriptor: void print(java.io.PrintStream,java.lang.String,java.util.Collection)>(r0, "color", $r7);

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>(";EOF");

        return;
    }

    private static void print(java.io.PrintStream, java.lang.String, java.util.Collection)
    {
        java.io.PrintStream r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r6, $r7, $r9;
        java.lang.String r3, $r5, $r10, r13;
        java.util.Collection r8;
        int $i0;
        java.util.Iterator r11;
        boolean $z0;
        java.lang.Object $r12;

        r0 := @parameter0: java.io.PrintStream;

        r3 := @parameter1: java.lang.String;

        r8 := @parameter2: java.util.Collection;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $i0 = interfaceinvoke r8.<java.util.Collection: int size()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>($r10);

        r11 = interfaceinvoke r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        virtualinvoke r0.<java.io.PrintStream: void println(java.lang.String)>(r13);

        goto label1;

     label2:
        virtualinvoke r0.<java.io.PrintStream: void println()>();

        return;
    }

    public final java.util.Set getType()
    {
        net.sourceforge.plantuml.syntax.LanguageDescriptor r0;
        java.util.Set $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.syntax.LanguageDescriptor;

        $r1 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set type>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public final java.util.Set getKeyword()
    {
        net.sourceforge.plantuml.syntax.LanguageDescriptor r0;
        java.util.Set $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.syntax.LanguageDescriptor;

        $r1 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set keyword>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public final java.util.Set getPreproc()
    {
        net.sourceforge.plantuml.syntax.LanguageDescriptor r0;
        java.util.Set $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.syntax.LanguageDescriptor;

        $r1 = r0.<net.sourceforge.plantuml.syntax.LanguageDescriptor: java.util.Set preproc>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }
}
