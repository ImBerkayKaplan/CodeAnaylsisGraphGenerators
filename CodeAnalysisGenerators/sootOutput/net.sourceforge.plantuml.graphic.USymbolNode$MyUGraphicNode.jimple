class net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode extends net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine
{
    private final double endingX;
    final net.sourceforge.plantuml.graphic.USymbolNode this$0;

    protected net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine copy(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode $r0, r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double $d0;
        net.sourceforge.plantuml.graphic.USymbolNode $r3;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode;

        $r3 = r1.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: net.sourceforge.plantuml.graphic.USymbolNode this$0>;

        $d0 = r1.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: double endingX>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: void <init>(net.sourceforge.plantuml.graphic.USymbolNode,net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r3, r2, $d0);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.graphic.USymbolNode, net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode r0;
        net.sourceforge.plantuml.graphic.USymbolNode r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.USymbolNode;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: net.sourceforge.plantuml.graphic.USymbolNode this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: double endingX> = d0;

        return;
    }

    protected void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UHorizontalLine, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.UTranslate r0, $r3;
        net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode r1;
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r2;
        boolean $z0;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r4, r5, r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r0 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        r6 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r0);

        specialinvoke r1.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: void drawHlineInternal(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.UHorizontalLine)>(r6, r2);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: boolean isDouble()>();

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(2.0);

        $r4 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        specialinvoke r1.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: void drawHlineInternal(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.UHorizontalLine)>($r4, r2);

     label1:
        $d0 = r1.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: double endingX>;

        $d1 = $d0 - 10.0;

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawTitleInternal(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,boolean)>(r6, 0.0, $d1, 0.0, 1);

        return;
    }

    private void drawHlineInternal(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UHorizontalLine)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        net.sourceforge.plantuml.ugraphic.UStroke $r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2, $r8, r10, r11;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r3;
        net.sourceforge.plantuml.ugraphic.UBackground $r4;
        net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode r5;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.ULine $r6, $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r5 := @this: net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode;

        r10 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r2 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r3 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r11 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $d0 = r5.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: double endingX>;

        $d1 = $d0 - 10.0;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d1);

        interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        $d2 = r5.<net.sourceforge.plantuml.graphic.USymbolNode$MyUGraphicNode: double endingX>;

        $d3 = $d2 - 10.0;

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d3);

        $r8 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = new net.sourceforge.plantuml.ugraphic.ULine;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>(10.0, -10.0);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

        return;
    }
}
