class net.sourceforge.plantuml.picoweb.PicoWebServerTest$1 extends java.lang.Thread
{
    final java.net.ServerSocket val$serverSocket;

    void <init>(java.lang.String, java.net.ServerSocket)
    {
        net.sourceforge.plantuml.picoweb.PicoWebServerTest$1 r0;
        java.net.ServerSocket r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.picoweb.PicoWebServerTest$1;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.net.ServerSocket;

        r0.<net.sourceforge.plantuml.picoweb.PicoWebServerTest$1: java.net.ServerSocket val$serverSocket> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    public void run()
    {
        net.sourceforge.plantuml.picoweb.PicoWebServerTest$1 r0;
        java.net.ServerSocket $r1;
        java.io.IOException $r2;

        r0 := @this: net.sourceforge.plantuml.picoweb.PicoWebServerTest$1;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.picoweb.PicoWebServerTest$1: java.net.ServerSocket val$serverSocket>;

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServer: void serverLoop(java.net.ServerSocket)>($r1);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
