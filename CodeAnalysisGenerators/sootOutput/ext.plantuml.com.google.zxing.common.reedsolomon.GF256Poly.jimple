final class ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly extends java.lang.Object
{
    private final ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field;
    private final int[] coefficients;

    void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256, int[])
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0, $r7;
        int[] r1, $r4, $r5, $r6, $r8;
        java.lang.IllegalArgumentException $r2;
        int $i0, i1, $i2, $i3, $i4, $i5, i6;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r3;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        r3 := @parameter0: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        r1 := @parameter1: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        $i0 = lengthof r1;

        if $i0 != 0 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field> = r3;

        i1 = lengthof r1;

        if i1 <= 1 goto label7;

        $i2 = r1[0];

        if $i2 != 0 goto label7;

        i6 = 1;

     label3:
        if i6 >= i1 goto label4;

        $i5 = r1[i6];

        if $i5 != 0 goto label4;

        i6 = i6 + 1;

        goto label3;

     label4:
        if i6 != i1 goto label5;

        $r7 = virtualinvoke r3.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly getZero()>();

        $r8 = $r7.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients> = $r8;

        goto label6;

     label5:
        $i3 = i1 - i6;

        $r4 = newarray (int)[$i3];

        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients> = $r4;

        $r6 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $r5 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i4 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i6, $r6, 0, $i4);

     label6:
        goto label8;

     label7:
        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients> = r1;

     label8:
        return;
    }

    int[] getCoefficients()
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0;
        int[] $r1;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        return $r1;
    }

    int getDegree()
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        return $i1;
    }

    boolean isZero()
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0;
        int[] $r1;
        int $i0;
        boolean $z0;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i0 = $r1[0];

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int getCoefficient(int)
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0;
        int[] $r1, $r2;
        int $i0, i1, $i2, $i3, $i4;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        i1 := @parameter0: int;

        $r2 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i0 = lengthof $r1;

        $i2 = $i0 - 1;

        $i3 = $i2 - i1;

        $i4 = $r2[$i3];

        return $i4;
    }

    int evaluateAt(int)
    {
        int i0, i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0;
        int[] $r1, $r2, $r4, $r5;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r3;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $i5 = virtualinvoke r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getCoefficient(int)>(0);

        return $i5;

     label1:
        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        i1 = lengthof $r1;

        if i0 != 1 goto label4;

        i6 = 0;

        i7 = 0;

     label2:
        if i7 >= i1 goto label3;

        $r5 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i4 = $r5[i7];

        i6 = staticinvoke <ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int addOrSubtract(int,int)>(i6, $i4);

        i7 = i7 + 1;

        goto label2;

     label3:
        return i6;

     label4:
        $r2 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        i8 = $r2[0];

        i9 = 1;

     label5:
        if i9 >= i1 goto label6;

        $r3 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $i2 = virtualinvoke $r3.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>(i0, i8);

        $r4 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i3 = $r4[i9];

        i8 = staticinvoke <ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int addOrSubtract(int,int)>($i2, $i3);

        i9 = i9 + 1;

        goto label5;

     label6:
        return i8;
    }

    ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly)
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0, r1, $r4;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r2, $r3, $r5;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, i10, $i11;
        java.lang.IllegalArgumentException $r6;
        int[] r7, r8, r9, r10;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        r1 := @parameter0: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r3 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r2 = r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("GF256Polys do not have same GF256 field");

        throw $r6;

     label1:
        $z1 = virtualinvoke r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: boolean isZero()>();

        if $z1 == 0 goto label2;

        return r1;

     label2:
        $z2 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: boolean isZero()>();

        if $z2 == 0 goto label3;

        return r0;

     label3:
        r7 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        r8 = r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i1 = lengthof r7;

        $i0 = lengthof r8;

        if $i1 <= $i0 goto label4;

        r9 = r7;

        r7 = r8;

        r8 = r9;

     label4:
        $i2 = lengthof r8;

        r10 = newarray (int)[$i2];

        $i4 = lengthof r8;

        $i3 = lengthof r7;

        i5 = $i4 - $i3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r10, 0, i5);

        i10 = i5;

     label5:
        $i11 = lengthof r8;

        if i10 >= $i11 goto label6;

        $i6 = i10 - i5;

        $i8 = r7[$i6];

        $i7 = r8[i10];

        $i9 = staticinvoke <ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int addOrSubtract(int,int)>($i8, $i7);

        r10[i10] = $i9;

        i10 = i10 + 1;

        goto label5;

     label6:
        $r4 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r5 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        specialinvoke $r4.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>($r5, r10);

        return $r4;
    }

    ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly multiply(ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly)
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0, r1, $r5, $r9;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r2, $r3, $r4, $r10, $r11;
        boolean $z0, $z1, $z2;
        int[] r6, r7, r8;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        r1 := @parameter0: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r3 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r2 = r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("GF256Polys do not have same GF256 field");

        throw $r12;

     label1:
        $z1 = virtualinvoke r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: boolean isZero()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: boolean isZero()>();

        if $z2 == 0 goto label3;

     label2:
        $r4 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r5 = virtualinvoke $r4.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly getZero()>();

        return $r5;

     label3:
        r6 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        i0 = lengthof r6;

        r7 = r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        i1 = lengthof r7;

        $i2 = i0 + i1;

        $i3 = $i2 - 1;

        r8 = newarray (int)[$i3];

        i11 = 0;

     label4:
        if i11 >= i0 goto label7;

        i4 = r6[i11];

        i12 = 0;

     label5:
        if i12 >= i1 goto label6;

        $i7 = i11 + i12;

        $i5 = i11 + i12;

        $i8 = r8[$i5];

        $r11 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $i6 = r7[i12];

        $i9 = virtualinvoke $r11.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>(i4, $i6);

        $i10 = staticinvoke <ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int addOrSubtract(int,int)>($i8, $i9);

        r8[$i7] = $i10;

        i12 = i12 + 1;

        goto label5;

     label6:
        i11 = i11 + 1;

        goto label4;

     label7:
        $r9 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r10 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        specialinvoke $r9.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>($r10, r8);

        return $r9;
    }

    ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly multiply(int)
    {
        int i0, i1, $i2, $i3, i4;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0, $r3, $r8;
        int[] $r1, r2, $r5;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r4, $r6, $r7;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r7 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r8 = virtualinvoke $r7.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly getZero()>();

        return $r8;

     label1:
        if i0 != 1 goto label2;

        return r0;

     label2:
        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        i1 = lengthof $r1;

        r2 = newarray (int)[i1];

        i4 = 0;

     label3:
        if i4 >= i1 goto label4;

        $r6 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r5 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i2 = $r5[i4];

        $i3 = virtualinvoke $r6.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>($i2, i0);

        r2[i4] = $i3;

        i4 = i4 + 1;

        goto label3;

     label4:
        $r3 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r4 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        specialinvoke $r3.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>($r4, r2);

        return $r3;
    }

    ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly multiplyByMonomial(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, i6;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0, $r3, $r8;
        int[] $r1, r2, $r5;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r4, $r6, $r7;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label1:
        if i1 != 0 goto label2;

        $r7 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r8 = virtualinvoke $r7.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly getZero()>();

        return $r8;

     label2:
        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        i2 = lengthof $r1;

        $i3 = i2 + i0;

        r2 = newarray (int)[$i3];

        i6 = 0;

     label3:
        if i6 >= i2 goto label4;

        $r6 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r5 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] coefficients>;

        $i4 = $r5[i6];

        $i5 = virtualinvoke $r6.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>($i4, i1);

        r2[i6] = $i5;

        i6 = i6 + 1;

        goto label3;

     label4:
        $r3 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r4 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        specialinvoke $r3.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>($r4, r2);

        return $r3;
    }

    ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly[] divide(ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly)
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r0, r1, r8, r10, r13, r14;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r2, $r3, $r4, $r5, $r7, $r9;
        boolean $z0, $z1, $z2;
        int $i0, i1, i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, i10;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly[] $r6;
        java.lang.IllegalArgumentException $r11, $r12;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        r1 := @parameter0: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r3 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r2 = r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("GF256Polys do not have same GF256 field");

        throw $r12;

     label1:
        $z1 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: boolean isZero()>();

        if $z1 == 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Divide by 0");

        throw $r11;

     label2:
        $r4 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        r13 = virtualinvoke $r4.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly getZero()>();

        r14 = r0;

        $i0 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        i1 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getCoefficient(int)>($i0);

        $r5 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        i2 = virtualinvoke $r5.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int inverse(int)>(i1);

     label3:
        $i3 = virtualinvoke r14.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i4 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        if $i3 < $i4 goto label4;

        $z2 = virtualinvoke r14.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: boolean isZero()>();

        if $z2 != 0 goto label4;

        $i5 = virtualinvoke r14.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i6 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        i7 = $i5 - $i6;

        $r7 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $i8 = virtualinvoke r14.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i9 = virtualinvoke r14.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getCoefficient(int)>($i8);

        i10 = virtualinvoke $r7.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int multiply(int,int)>($i9, i2);

        r8 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly multiplyByMonomial(int,int)>(i7, i10);

        $r9 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        r10 = virtualinvoke $r9.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly buildMonomial(int,int)>(i7, i10);

        r13 = virtualinvoke r13.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly)>(r10);

        r14 = virtualinvoke r14.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly addOrSubtract(ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly)>(r8);

        goto label3;

     label4:
        $r6 = newarray (ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly)[2];

        $r6[0] = r13;

        $r6[1] = r14;

        return $r6;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r1;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.String $r3;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r4;

        r1 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r0 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

        $i1 = 8 * $i0;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        i4 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getDegree()>();

     label01:
        if i4 < 0 goto label10;

        i5 = virtualinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int getCoefficient(int)>(i4);

        if i5 == 0 goto label09;

        if i5 >= 0 goto label02;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        i5 = neg i5;

        goto label03;

     label02:
        $i2 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i2 <= 0 goto label03;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" + ");

     label03:
        if i4 == 0 goto label04;

        if i5 == 1 goto label07;

     label04:
        $r4 = r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        i3 = virtualinvoke $r4.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int log(int)>(i5);

        if i3 != 0 goto label05;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(49);

        goto label07;

     label05:
        if i3 != 1 goto label06;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(97);

        goto label07;

     label06:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("a^");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

     label07:
        if i4 == 0 goto label09;

        if i4 != 1 goto label08;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(120);

        goto label09;

     label08:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x^");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

     label09:
        i4 = i4 + -1;

        goto label01;

     label10:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
