public class net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation extends java.lang.Object
{
    private final java.util.List translations;

    private void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations> = $r1;

        return;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation create(net.sourceforge.plantuml.activitydiagram3.ftile.Worm, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm r0;
        java.lang.String r1, r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation $r3, $r4;
        double d0;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Worm;

        d0 := @parameter1: double;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: java.lang.String getDirectionsCode()>();

        r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.lang.String getDefinition(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation createFromLongSignature(java.lang.String,double)>(r1, d0);

        return $r4;

     label1:
        $r3 = new net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        specialinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: void <init>(java.lang.String,double)>(r2, d0);

        return $r3;
    }

    private static net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation createFromLongSignature(java.lang.String, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation $r0, $r3, r18;
        java.lang.String r2, $r4, $r5;
        int $i0, $i1, $i2, i3, $i4, $i5;
        double d0;
        net.sourceforge.plantuml.ugraphic.UTranslate r6, $r9, $r13, $r17, $r22;
        java.util.List $r7, $r10, $r11, $r14, $r15, $r19, $r20;
        java.lang.Object $r8, $r12, $r16, $r21;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: void <init>()>();

        i3 = 0;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        if i3 >= $i1 goto label5;

        $r3 = new net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        $i2 = i3 + 2;

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i3, $i2);

        $r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.lang.String getDefinition(java.lang.String)>($r4);

        specialinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: void <init>(java.lang.String,double)>($r5, d0);

        r18 = $r3;

        if i3 != 0 goto label2;

        $r15 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r14 = $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r16 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        $r17 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r16;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label3;

     label2:
        r6 = virtualinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: net.sourceforge.plantuml.ugraphic.UTranslate getLast()>();

        $r7 = $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r8;

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UTranslate: boolean isAlmostSame(net.sourceforge.plantuml.ugraphic.UTranslate)>($r9);

        if $z0 != 0 goto label3;

        r18 = specialinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation reverse()>();

     label3:
        $r19 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r20 = r18.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(1);

        $r22 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r21;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r22);

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        $i5 = $i4 - 2;

        if i3 != $i5 goto label4;

        $r11 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r10 = r18.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r12 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(2);

        $r13 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r12;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r13);

     label4:
        i3 = i3 + 1;

        goto label1;

     label5:
        return $r0;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation reverse()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation $r0, r2;
        java.util.List $r3, $r7;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate r6, $r8;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r5;

        $r7 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r8 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate reverse()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getLast()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r3;

        return $r4;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getFirst()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r2;

        return $r3;
    }

    public int size()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    private static java.lang.String getDefinition(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("D");

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("U");

        if $z1 == 0 goto label02;

     label01:
        return "33";

     label02:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("L");

        if $z2 != 0 goto label03;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("R");

        if $z3 == 0 goto label04;

     label03:
        return "55";

     label04:
        $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("RD");

        if $z4 == 0 goto label05;

        return "123";

     label05:
        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("RU");

        if $z5 == 0 goto label06;

        return "543";

     label06:
        $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("LD");

        if $z6 == 0 goto label07;

        return "187";

     label07:
        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("DL");

        if $z7 == 0 goto label08;

        return "345";

     label08:
        $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("DR");

        if $z8 == 0 goto label09;

        return "765";

     label09:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("UL");

        if $z9 == 0 goto label10;

        return "321";

     label10:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("UR");

        if $z10 == 0 goto label11;

        return "781";

     label11:
        return null;
    }

    private void <init>(java.lang.String, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation r0;
        java.util.ArrayList $r1;
        java.lang.String r2, $r4, $r6;
        java.lang.Object $r3;
        int $i0, $i1, $i2, i3;
        java.util.List $r5;
        double d0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        r2 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations> = $r1;

        i3 = 0;

     label1:
        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i3 >= $i0 goto label2;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $i1 = i3 + 1;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i3, $i1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: net.sourceforge.plantuml.ugraphic.UTranslate translation(int,double)>($i2, d0);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        i3 = i3 + 1;

        goto label1;

     label2:
        return;
    }

    private static net.sourceforge.plantuml.ugraphic.UTranslate translation(int, double)
    {
        int i0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        java.lang.IllegalArgumentException $r8;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            case 7: goto label7;
            case 8: goto label8;
            default: goto label9;
        };

     label1:
        $d6 = neg d0;

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d6);

        return $r7;

     label2:
        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = neg d0;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, $d5);

        return $r6;

     label3:
        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d0);

        return $r5;

     label4:
        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d0);

        return $r4;

     label5:
        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d0);

        return $r3;

     label6:
        $r2 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = neg d0;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, d0);

        return $r2;

     label7:
        $d3 = neg d0;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d3);

        return $r1;

     label8:
        $r0 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d2 = neg d0;

        $d1 = neg d0;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d2, $d1);

        return $r0;

     label9:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTextTranslate(int)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation$MinMax $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        double $d0, $d1, $d2, $d3;
        int i0, $i1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, r7;
        java.lang.Object $r6;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        i0 := @parameter0: int;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation$MinMax;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation$MinMax: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation$1)>(null);

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r6;

        $d3 = virtualinvoke r7.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation$MinMax: void access$100(net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation$MinMax,double)>($r0, $d3);

        goto label1;

     label2:
        $d0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation$MinMax: double access$200(net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation$MinMax)>($r0);

        $i1 = i0 - 1;

        $d1 = (double) $i1;

        $d2 = $d0 * $d1;

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d2);

        return $r5;
    }

    public boolean isDxNegative()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        double $d0;
        byte $b0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r2;

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $b0 = $d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Worm mute(net.sourceforge.plantuml.activitydiagram3.ftile.Worm)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r0, r1;
        net.sourceforge.plantuml.style.Style $r2;
        int $i0, i1;
        net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation r4;
        java.util.List $r5;
        java.lang.Object $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        java.awt.geom.Point2D$Double $r8;
        java.awt.geom.Point2D $r9;

        r4 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Worm;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.Worm;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: net.sourceforge.plantuml.style.Style getStyle()>();

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: void <init>(net.sourceforge.plantuml.style.Style)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = r4.<net.sourceforge.plantuml.activitydiagram3.ftile.WormMutation: java.util.List translations>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r6;

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: java.awt.geom.Point2D$Double get(int)>(i1);

        $r9 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r8);

        virtualinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: void addPoint(java.awt.geom.Point2D)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }
}
