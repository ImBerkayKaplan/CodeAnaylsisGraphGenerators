public class net.sourceforge.plantuml.command.CommandNamespace extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.command.CommandNamespace r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.command.CommandNamespace;

        $r1 = staticinvoke <net.sourceforge.plantuml.command.CommandNamespace: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r13, $r16;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r17, $r18, $r19, $r20, $r21;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;
        net.sourceforge.plantuml.command.regex.RegexConcat $r22;

        $r0 = class "Lnet/sourceforge/plantuml/command/CommandNamespace;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[13];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("namespace");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NAME", "([%pLN_][-%pLN_.:\\\\]*)");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREOTYPE", "(\\<\\<.*\\>\\>)?");

        $r2[5] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r13 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r16);

        $r2[7] = $r10;

        $r17 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf exp1()>();

        $r2[9] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[10] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\{");

        $r2[11] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[12] = $r21;

        $r22 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r22;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.classdiagram.ClassDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r7, r8, $r18, $r22, r29;
        net.sourceforge.plantuml.classdiagram.ClassDiagram r2;
        net.sourceforge.plantuml.cucadiagram.Ident r3;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r4;
        net.sourceforge.plantuml.cucadiagram.GroupType $r5;
        net.sourceforge.plantuml.cucadiagram.IGroup r6, r26;
        net.sourceforge.plantuml.command.CommandExecutionResult $r9;
        net.sourceforge.plantuml.graphic.color.ColorType $r10;
        net.sourceforge.plantuml.ISkinParam $r11, $r13, $r17;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r12;
        net.sourceforge.plantuml.api.ThemeStyle $r14;
        net.sourceforge.plantuml.ugraphic.color.HColor $r15;
        net.sourceforge.plantuml.UrlBuilder $r16;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r19;
        net.sourceforge.plantuml.Url r20;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r21;
        net.sourceforge.plantuml.command.CommandNamespace r23;
        net.sourceforge.plantuml.LineLocation r24;
        net.sourceforge.plantuml.cucadiagram.Code r25;
        net.sourceforge.plantuml.cucadiagram.Display r27;

        r23 := @this: net.sourceforge.plantuml.command.CommandNamespace;

        r2 := @parameter0: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r24 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("NAME", 0);

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        r25 = null;

        r26 = null;

        $r22 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        r27 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r22);

        goto label2;

     label1:
        r25 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r1);

        r26 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        r27 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>(r25);

     label2:
        $r5 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType PACKAGE>;

        $r4 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy MULTIPLE>;

        virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r3, r25, r27, $r5, r26, $r4);

        r6 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        r7 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE", 0);

        if r7 == null goto label3;

        $r21 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>(r7);

        interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r21);

     label3:
        r8 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        if r8 == null goto label4;

        $r16 = new net.sourceforge.plantuml.UrlBuilder;

        $r17 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r19 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r16.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r18, $r19);

        r20 = virtualinvoke $r16.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>(r8);

        interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IEntity: void addUrl(net.sourceforge.plantuml.Url)>(r20);

     label4:
        r29 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COLOR", 0);

        if r29 == null goto label5;

        $r10 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r15 = virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r14, r29);

        interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IEntity: void setSpecificColorTOBEREMOVED(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r10, $r15);

     label5:
        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r9;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.CommandNamespace r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.classdiagram.ClassDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.command.CommandNamespace;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.classdiagram.ClassDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.command.CommandNamespace: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.classdiagram.ClassDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
