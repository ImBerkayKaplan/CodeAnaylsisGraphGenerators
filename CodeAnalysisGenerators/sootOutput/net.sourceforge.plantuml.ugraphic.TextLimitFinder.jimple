public class net.sourceforge.plantuml.ugraphic.TextLimitFinder extends net.sourceforge.plantuml.ugraphic.UGraphicNo
{
    private final net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax;

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder $r0, r1;
        net.sourceforge.plantuml.ugraphic.UChange r2;

        r1 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $r0 = new net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: void <init>(net.sourceforge.plantuml.ugraphic.TextLimitFinder,net.sourceforge.plantuml.ugraphic.UChange)>(r1, r2);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder, boolean)
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        boolean z0;
        net.sourceforge.plantuml.ugraphic.MinMaxMutable $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        z0 := @parameter1: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphicNo: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.MinMaxMutable: net.sourceforge.plantuml.ugraphic.MinMaxMutable getEmpty(boolean)>(z0);

        r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax> = $r2;

        return;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.TextLimitFinder, net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder r0, r1;
        net.sourceforge.plantuml.ugraphic.UChange r2;
        java.lang.Class[] $r3;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.MinMaxMutable $r4;
        java.lang.UnsupportedOperationException $r5;
        java.lang.Class $r6;
        java.lang.String $r7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UChange;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphicNo: void <init>(net.sourceforge.plantuml.ugraphic.UGraphicNo,net.sourceforge.plantuml.ugraphic.UChange)>(r1, r2);

        $r3 = newarray (java.lang.Class)[4];

        $r3[0] = class "Lnet/sourceforge/plantuml/ugraphic/UBackground;";

        $r3[1] = class "Lnet/sourceforge/plantuml/ugraphic/color/HColor;";

        $r3[2] = class "Lnet/sourceforge/plantuml/ugraphic/UStroke;";

        $r3[3] = class "Lnet/sourceforge/plantuml/ugraphic/UTranslate;";

        $z0 = staticinvoke <net.sourceforge.plantuml.utils.ObjectUtils: boolean instanceOfAny(java.lang.Object,java.lang.Class[])>(r2, $r3);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $r4 = r1.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax> = $r4;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.ugraphic.UShape r0;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.TextLimitFinder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r3;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.UText $r4;

        r1 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $z0 = r0 instanceof net.sourceforge.plantuml.ugraphic.UText;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        d1 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $r4 = (net.sourceforge.plantuml.ugraphic.UText) r0;

        specialinvoke r1.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: void drawText(double,double,net.sourceforge.plantuml.ugraphic.UText)>(d0, d1, $r4);

     label1:
        return;
    }

    private void drawText(double, double, net.sourceforge.plantuml.ugraphic.UText)
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1;
        net.sourceforge.plantuml.ugraphic.UText r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.ugraphic.UFont $r4;
        java.lang.String $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12;
        net.sourceforge.plantuml.ugraphic.MinMaxMutable $r7, $r8, $r9, $r10;

        r0 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        d2 := @parameter0: double;

        d11 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.UText;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UText: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UText: java.lang.String getText()>();

        r6 = interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r4, $r5);

        $d0 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = $d0 - 1.5;

        d12 = d11 - $d1;

        $r7 = r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.MinMaxMutable: void addPoint(double,double)>(d2, d12);

        $r8 = r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        $d3 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = d12 + $d3;

        virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.MinMaxMutable: void addPoint(double,double)>(d2, $d4);

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        $d5 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = d2 + $d5;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.MinMaxMutable: void addPoint(double,double)>($d6, d12);

        $r10 = r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        $d7 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d8 = d2 + $d7;

        $d9 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d10 = d12 + $d9;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.MinMaxMutable: void addPoint(double,double)>($d8, $d10);

        return;
    }

    public double getMaxX()
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder r0;
        net.sourceforge.plantuml.ugraphic.MinMaxMutable $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        $d0 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.MinMaxMutable: double getMaxX()>();

        return $d0;
    }

    public double getMaxY()
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder r0;
        net.sourceforge.plantuml.ugraphic.MinMaxMutable $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        $d0 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.MinMaxMutable: double getMaxY()>();

        return $d0;
    }

    public double getMinX()
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder r0;
        net.sourceforge.plantuml.ugraphic.MinMaxMutable $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        $d0 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.MinMaxMutable: double getMinX()>();

        return $d0;
    }

    public double getMinY()
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder r0;
        net.sourceforge.plantuml.ugraphic.MinMaxMutable $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.MinMaxMutable minmax>;

        $d0 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.MinMaxMutable: double getMinY()>();

        return $d0;
    }
}
