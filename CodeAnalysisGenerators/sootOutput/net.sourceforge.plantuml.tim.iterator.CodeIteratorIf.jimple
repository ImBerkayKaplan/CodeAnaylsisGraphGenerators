public class net.sourceforge.plantuml.tim.iterator.CodeIteratorIf extends net.sourceforge.plantuml.tim.iterator.AbstractCodeIterator
{
    private final net.sourceforge.plantuml.tim.TContext context;
    private final net.sourceforge.plantuml.tim.TMemory memory;
    private final java.util.List logs;

    public void <init>(net.sourceforge.plantuml.tim.iterator.CodeIterator, net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, java.util.List)
    {
        net.sourceforge.plantuml.tim.iterator.CodeIteratorIf r0;
        net.sourceforge.plantuml.tim.iterator.CodeIterator r1;
        net.sourceforge.plantuml.tim.TContext r2;
        net.sourceforge.plantuml.tim.TMemory r3;
        java.util.List r4;

        r0 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorIf;

        r1 := @parameter0: net.sourceforge.plantuml.tim.iterator.CodeIterator;

        r2 := @parameter1: net.sourceforge.plantuml.tim.TContext;

        r3 := @parameter2: net.sourceforge.plantuml.tim.TMemory;

        r4 := @parameter3: java.util.List;

        specialinvoke r0.<net.sourceforge.plantuml.tim.iterator.AbstractCodeIterator: void <init>(net.sourceforge.plantuml.tim.iterator.CodeIterator)>(r1);

        r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TContext context> = r2;

        r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory> = r3;

        r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: java.util.List logs> = r4;

        return;
    }

    public net.sourceforge.plantuml.StringLocated peek() throws net.sourceforge.plantuml.tim.EaterException, net.sourceforge.plantuml.tim.EaterExceptionLocated
    {
        net.sourceforge.plantuml.tim.iterator.CodeIteratorIf r0;
        net.sourceforge.plantuml.StringLocated r1, $r23, $r27, $r31, $r35, $r39, $r43;
        net.sourceforge.plantuml.tim.TLineType $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        net.sourceforge.plantuml.tim.TMemory $r14, $r16, $r18, $r22, $r26, $r30, $r34, $r38, $r42;
        net.sourceforge.plantuml.tim.ExecutionContextIf $r15;
        net.sourceforge.plantuml.tim.TContext $r17, $r21, $r25, $r29, $r33, $r37, $r41;
        boolean $z0;
        java.util.List $r19, $r20, $r24, $r28, $r32, $r36, $r40;
        net.sourceforge.plantuml.tim.iterator.CodeIterator $r44;

        r0 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorIf;

     label1:
        $r44 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.iterator.CodeIterator source>;

        r1 = interfaceinvoke $r44.<net.sourceforge.plantuml.tim.iterator.CodeIterator: net.sourceforge.plantuml.StringLocated peek()>();

        if r1 != null goto label2;

        return null;

     label2:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType getType()>();

        $r3 = <net.sourceforge.plantuml.tim.TLineType: net.sourceforge.plantuml.tim.TLineType IF>;

        if $r2 != $r3 goto label3;

        $r40 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: java.util.List logs>;

        interfaceinvoke $r40.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r41 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TContext context>;

        $r42 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $r43 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        specialinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void executeIf(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory,net.sourceforge.plantuml.StringLocated)>($r41, $r42, $r43);

        virtualinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void next()>();

        goto label1;

     label3:
        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType getType()>();

        $r5 = <net.sourceforge.plantuml.tim.TLineType: net.sourceforge.plantuml.tim.TLineType IFDEF>;

        if $r4 != $r5 goto label4;

        $r36 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: java.util.List logs>;

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r37 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TContext context>;

        $r38 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $r39 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        specialinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void executeIfdef(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory,net.sourceforge.plantuml.StringLocated)>($r37, $r38, $r39);

        virtualinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void next()>();

        goto label1;

     label4:
        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType getType()>();

        $r7 = <net.sourceforge.plantuml.tim.TLineType: net.sourceforge.plantuml.tim.TLineType IFNDEF>;

        if $r6 != $r7 goto label5;

        $r32 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: java.util.List logs>;

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r33 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TContext context>;

        $r34 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $r35 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        specialinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void executeIfndef(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory,net.sourceforge.plantuml.StringLocated)>($r33, $r34, $r35);

        virtualinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void next()>();

        goto label1;

     label5:
        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType getType()>();

        $r9 = <net.sourceforge.plantuml.tim.TLineType: net.sourceforge.plantuml.tim.TLineType ELSE>;

        if $r8 != $r9 goto label6;

        $r28 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: java.util.List logs>;

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r29 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TContext context>;

        $r30 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $r31 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        specialinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void executeElse(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory,net.sourceforge.plantuml.StringLocated)>($r29, $r30, $r31);

        virtualinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void next()>();

        goto label1;

     label6:
        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType getType()>();

        $r11 = <net.sourceforge.plantuml.tim.TLineType: net.sourceforge.plantuml.tim.TLineType ELSEIF>;

        if $r10 != $r11 goto label7;

        $r24 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: java.util.List logs>;

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r25 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TContext context>;

        $r26 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $r27 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        specialinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void executeElseIf(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory,net.sourceforge.plantuml.StringLocated)>($r25, $r26, $r27);

        virtualinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void next()>();

        goto label1;

     label7:
        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType getType()>();

        $r13 = <net.sourceforge.plantuml.tim.TLineType: net.sourceforge.plantuml.tim.TLineType ENDIF>;

        if $r12 != $r13 goto label8;

        $r20 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: java.util.List logs>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r21 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TContext context>;

        $r22 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $r23 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        specialinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void executeEndif(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory,net.sourceforge.plantuml.StringLocated)>($r21, $r22, $r23);

        virtualinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void next()>();

        goto label1;

     label8:
        $r14 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.tim.TMemory: net.sourceforge.plantuml.tim.ExecutionContextIf peekIf()>();

        if $r15 == null goto label9;

        $r18 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $r17 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TContext context>;

        $r16 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: net.sourceforge.plantuml.tim.TMemory memory>;

        $z0 = interfaceinvoke $r18.<net.sourceforge.plantuml.tim.TMemory: boolean areAllIfOk(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory)>($r17, $r16);

        if $z0 != 0 goto label9;

        $r19 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: java.util.List logs>;

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorIf: void next()>();

        goto label1;

     label9:
        return r1;
    }

    private void executeIf(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, net.sourceforge.plantuml.StringLocated) throws net.sourceforge.plantuml.tim.EaterException, net.sourceforge.plantuml.tim.EaterExceptionLocated
    {
        net.sourceforge.plantuml.tim.EaterIf $r0;
        net.sourceforge.plantuml.StringLocated r1;
        net.sourceforge.plantuml.tim.TContext r3;
        net.sourceforge.plantuml.tim.TMemory r4;
        boolean z0;
        net.sourceforge.plantuml.tim.ExecutionContextIf $r5;
        net.sourceforge.plantuml.tim.iterator.CodeIteratorIf r6;

        r6 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorIf;

        r3 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r4 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        r1 := @parameter2: net.sourceforge.plantuml.StringLocated;

        $r0 = new net.sourceforge.plantuml.tim.EaterIf;

        specialinvoke $r0.<net.sourceforge.plantuml.tim.EaterIf: void <init>(net.sourceforge.plantuml.StringLocated)>(r1);

        virtualinvoke $r0.<net.sourceforge.plantuml.tim.EaterIf: void analyze(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory)>(r3, r4);

        z0 = virtualinvoke $r0.<net.sourceforge.plantuml.tim.EaterIf: boolean isTrue()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.tim.ExecutionContextIf: net.sourceforge.plantuml.tim.ExecutionContextIf fromValue(boolean)>(z0);

        interfaceinvoke r4.<net.sourceforge.plantuml.tim.TMemory: void addIf(net.sourceforge.plantuml.tim.ExecutionContextIf)>($r5);

        return;
    }

    private void executeElseIf(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, net.sourceforge.plantuml.StringLocated) throws net.sourceforge.plantuml.tim.EaterException, net.sourceforge.plantuml.tim.EaterExceptionLocated
    {
        net.sourceforge.plantuml.tim.TMemory r0;
        net.sourceforge.plantuml.tim.ExecutionContextIf r1;
        boolean $z0, z1;
        net.sourceforge.plantuml.tim.EaterElseIf $r2;
        net.sourceforge.plantuml.StringLocated r3;
        net.sourceforge.plantuml.tim.TContext r5;
        net.sourceforge.plantuml.tim.EaterException $r6;
        net.sourceforge.plantuml.tim.iterator.CodeIteratorIf r7;

        r7 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorIf;

        r5 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r0 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        r3 := @parameter2: net.sourceforge.plantuml.StringLocated;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.tim.TMemory: net.sourceforge.plantuml.tim.ExecutionContextIf peekIf()>();

        if r1 != null goto label1;

        $r6 = staticinvoke <net.sourceforge.plantuml.tim.EaterException: net.sourceforge.plantuml.tim.EaterException located(java.lang.String)>("No if related to this else");

        throw $r6;

     label1:
        virtualinvoke r1.<net.sourceforge.plantuml.tim.ExecutionContextIf: void enteringElseIf()>();

        $z0 = virtualinvoke r1.<net.sourceforge.plantuml.tim.ExecutionContextIf: boolean hasBeenBurn()>();

        if $z0 != 0 goto label2;

        $r2 = new net.sourceforge.plantuml.tim.EaterElseIf;

        specialinvoke $r2.<net.sourceforge.plantuml.tim.EaterElseIf: void <init>(net.sourceforge.plantuml.StringLocated)>(r3);

        virtualinvoke $r2.<net.sourceforge.plantuml.tim.EaterElseIf: void analyze(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory)>(r5, r0);

        z1 = virtualinvoke $r2.<net.sourceforge.plantuml.tim.EaterElseIf: boolean isTrue()>();

        if z1 == 0 goto label2;

        virtualinvoke r1.<net.sourceforge.plantuml.tim.ExecutionContextIf: void nowInSomeElseIf()>();

     label2:
        return;
    }

    private void executeIfdef(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, net.sourceforge.plantuml.StringLocated) throws net.sourceforge.plantuml.tim.EaterException
    {
        net.sourceforge.plantuml.tim.EaterIfdef $r0;
        net.sourceforge.plantuml.StringLocated r1;
        net.sourceforge.plantuml.tim.TContext r3;
        net.sourceforge.plantuml.tim.TMemory r4;
        boolean z0;
        net.sourceforge.plantuml.tim.ExecutionContextIf $r5;
        net.sourceforge.plantuml.tim.iterator.CodeIteratorIf r6;

        r6 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorIf;

        r3 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r4 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        r1 := @parameter2: net.sourceforge.plantuml.StringLocated;

        $r0 = new net.sourceforge.plantuml.tim.EaterIfdef;

        specialinvoke $r0.<net.sourceforge.plantuml.tim.EaterIfdef: void <init>(net.sourceforge.plantuml.StringLocated)>(r1);

        virtualinvoke $r0.<net.sourceforge.plantuml.tim.EaterIfdef: void analyze(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory)>(r3, r4);

        z0 = virtualinvoke $r0.<net.sourceforge.plantuml.tim.EaterIfdef: boolean isTrue(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory)>(r3, r4);

        $r5 = staticinvoke <net.sourceforge.plantuml.tim.ExecutionContextIf: net.sourceforge.plantuml.tim.ExecutionContextIf fromValue(boolean)>(z0);

        interfaceinvoke r4.<net.sourceforge.plantuml.tim.TMemory: void addIf(net.sourceforge.plantuml.tim.ExecutionContextIf)>($r5);

        return;
    }

    private void executeIfndef(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, net.sourceforge.plantuml.StringLocated) throws net.sourceforge.plantuml.tim.EaterException
    {
        net.sourceforge.plantuml.tim.EaterIfndef $r0;
        net.sourceforge.plantuml.StringLocated r1;
        net.sourceforge.plantuml.tim.TContext r3;
        net.sourceforge.plantuml.tim.TMemory r4;
        boolean z0;
        net.sourceforge.plantuml.tim.ExecutionContextIf $r5;
        net.sourceforge.plantuml.tim.iterator.CodeIteratorIf r6;

        r6 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorIf;

        r3 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r4 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        r1 := @parameter2: net.sourceforge.plantuml.StringLocated;

        $r0 = new net.sourceforge.plantuml.tim.EaterIfndef;

        specialinvoke $r0.<net.sourceforge.plantuml.tim.EaterIfndef: void <init>(net.sourceforge.plantuml.StringLocated)>(r1);

        virtualinvoke $r0.<net.sourceforge.plantuml.tim.EaterIfndef: void analyze(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory)>(r3, r4);

        z0 = virtualinvoke $r0.<net.sourceforge.plantuml.tim.EaterIfndef: boolean isTrue(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory)>(r3, r4);

        $r5 = staticinvoke <net.sourceforge.plantuml.tim.ExecutionContextIf: net.sourceforge.plantuml.tim.ExecutionContextIf fromValue(boolean)>(z0);

        interfaceinvoke r4.<net.sourceforge.plantuml.tim.TMemory: void addIf(net.sourceforge.plantuml.tim.ExecutionContextIf)>($r5);

        return;
    }

    private void executeElse(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, net.sourceforge.plantuml.StringLocated) throws net.sourceforge.plantuml.tim.EaterException
    {
        net.sourceforge.plantuml.tim.TMemory r0;
        net.sourceforge.plantuml.tim.ExecutionContextIf r1;
        net.sourceforge.plantuml.tim.EaterException $r2;
        net.sourceforge.plantuml.tim.iterator.CodeIteratorIf r3;
        net.sourceforge.plantuml.tim.TContext r4;
        net.sourceforge.plantuml.StringLocated r5;

        r3 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorIf;

        r4 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r0 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        r5 := @parameter2: net.sourceforge.plantuml.StringLocated;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.tim.TMemory: net.sourceforge.plantuml.tim.ExecutionContextIf peekIf()>();

        if r1 != null goto label1;

        $r2 = staticinvoke <net.sourceforge.plantuml.tim.EaterException: net.sourceforge.plantuml.tim.EaterException located(java.lang.String)>("No if related to this else");

        throw $r2;

     label1:
        virtualinvoke r1.<net.sourceforge.plantuml.tim.ExecutionContextIf: void nowInElse()>();

        return;
    }

    private void executeEndif(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, net.sourceforge.plantuml.StringLocated) throws net.sourceforge.plantuml.tim.EaterException
    {
        net.sourceforge.plantuml.tim.TMemory r0;
        net.sourceforge.plantuml.tim.ExecutionContextIf r1;
        net.sourceforge.plantuml.tim.EaterException $r2;
        net.sourceforge.plantuml.tim.iterator.CodeIteratorIf r3;
        net.sourceforge.plantuml.tim.TContext r4;
        net.sourceforge.plantuml.StringLocated r5;

        r3 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorIf;

        r4 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r0 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        r5 := @parameter2: net.sourceforge.plantuml.StringLocated;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.tim.TMemory: net.sourceforge.plantuml.tim.ExecutionContextIf pollIf()>();

        if r1 != null goto label1;

        $r2 = staticinvoke <net.sourceforge.plantuml.tim.EaterException: net.sourceforge.plantuml.tim.EaterException located(java.lang.String)>("No if related to this endif");

        throw $r2;

     label1:
        return;
    }
}
