public abstract class net.sourceforge.plantuml.svek.AbstractExtremityFactory extends java.lang.Object implements net.sourceforge.plantuml.svek.extremity.ExtremityFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.svek.AbstractExtremityFactory r0;

        r0 := @this: net.sourceforge.plantuml.svek.AbstractExtremityFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.graphic.UDrawable createUDrawable(java.awt.geom.Point2D, double, net.sourceforge.plantuml.svek.Side)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.svek.AbstractExtremityFactory r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        java.awt.geom.Point2D r4;
        double d0;
        net.sourceforge.plantuml.svek.Side r5;

        r1 := @this: net.sourceforge.plantuml.svek.AbstractExtremityFactory;

        r4 := @parameter0: java.awt.geom.Point2D;

        d0 := @parameter1: double;

        r5 := @parameter2: net.sourceforge.plantuml.svek.Side;

        $r0 = new java.lang.UnsupportedOperationException;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r3);

        throw $r0;
    }

    protected double atan2(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        byte $b0;
        net.sourceforge.plantuml.svek.AbstractExtremityFactory r2;

        r2 := @this: net.sourceforge.plantuml.svek.AbstractExtremityFactory;

        r0 := @parameter0: java.awt.geom.Point2D;

        r1 := @parameter1: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d2 = $d0 - $d1;

        $d3 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d5 = $d3 - $d4;

        d6 = staticinvoke <java.lang.Math: double atan2(double,double)>($d2, $d5);

        $b0 = d6 cmpg 0.0;

        if $b0 >= 0 goto label1;

        d6 = d6 + 6.283185307179586;

     label1:
        return d6;
    }
}
