public class net.sourceforge.plantuml.ugraphic.comp.CompressionXorYBuilder extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.comp.CompressionXorYBuilder r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.CompressionXorYBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock build(net.sourceforge.plantuml.ugraphic.comp.CompressionMode, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode r0;
        net.sourceforge.plantuml.graphic.TextBlock r1, $r4;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform r3;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.comp.CompressionMode;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.comp.CompressionXorYBuilder: net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform getPiecewiseAffineTransform(net.sourceforge.plantuml.ugraphic.comp.CompressionMode,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r1, r2);

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineOnXorYBuilder: net.sourceforge.plantuml.graphic.TextBlock build(net.sourceforge.plantuml.ugraphic.comp.CompressionMode,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform)>(r0, r1, r3);

        return $r4;
    }

    private static net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform getPiecewiseAffineTransform(net.sourceforge.plantuml.ugraphic.comp.CompressionMode, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder $r0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.TextBlock r4;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r5, $r6, r7;
        net.sourceforge.plantuml.ugraphic.comp.CompressionTransform $r8;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.comp.CompressionMode;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: void <init>(net.sourceforge.plantuml.ugraphic.comp.CompressionMode,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r0);

        $r5 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet getSlotSet()>();

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: net.sourceforge.plantuml.ugraphic.comp.SlotSet reverse()>();

        r7 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: net.sourceforge.plantuml.ugraphic.comp.SlotSet smaller(double)>(5.0);

        $r8 = new net.sourceforge.plantuml.ugraphic.comp.CompressionTransform;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.comp.CompressionTransform: void <init>(net.sourceforge.plantuml.ugraphic.comp.SlotSet)>(r7);

        return $r8;
    }
}
