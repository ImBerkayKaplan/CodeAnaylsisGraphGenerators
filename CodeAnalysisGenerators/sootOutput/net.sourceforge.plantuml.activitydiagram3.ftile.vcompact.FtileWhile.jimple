class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile backward;
    static final boolean $assertionsDisabled;

    public java.util.Collection getMyChildren()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r3, $r4, $r5, $r8, $r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile[] $r2, $r7;
        java.util.List $r6, $r10;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut>;

        if $r1 != null goto label1;

        $r7 = newarray (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)[2];

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock>;

        $r7[0] = $r8;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r7[1] = $r9;

        $r10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r7);

        return $r10;

     label1:
        $r2 = newarray (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)[3];

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock>;

        $r2[0] = $r3;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r2[1] = $r4;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut>;

        $r2[2] = $r5;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        return $r6;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        java.util.Set $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r5;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        $r0 = new java.util.HashSet;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r5);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r1;
    }

    private void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, r3, r4, r5;
        net.sourceforge.plantuml.ISkinParam $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile backward> = r5;

        return;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory, net.sourceforge.plantuml.svek.ConditionStyle, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.activitydiagram3.Instruction, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0, r6, $r15, $r39, $r61;
        net.sourceforge.plantuml.graphic.FontConfiguration r1, r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3, $r10, $r11, $r16, $r40, $r62;
        net.sourceforge.plantuml.ISkinParam $r4, $r9, $r12, $r17, $r25, $r41, $r63, $r76, $r79;
        net.sourceforge.plantuml.graphic.TextBlock r5, r18, r42, r64, $r81;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r8, r34, $r51, $r83;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r14, r38, $r57, r60;
        net.sourceforge.plantuml.svek.ConditionStyle r19, $r20, $r21, $r22;
        java.lang.IllegalStateException $r23;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond $r24, $r29, $r30;
        net.sourceforge.plantuml.ugraphic.color.HColor r26, r27;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r28;
        net.sourceforge.plantuml.activitydiagram3.Instruction r31;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r33;
        net.sourceforge.plantuml.graphic.StringBounder $r36;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r37;
        java.util.ArrayList $r43;
        double $d0, $d1;
        byte $b0, $b1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackEmpty $r45;
        net.sourceforge.plantuml.graphic.Rainbow $r47, $r50, $r54, r58, $r59, $r67, $r70, $r73;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial $r48;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut $r52;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionIn $r55;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1 $r65;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward2 $r68;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple $r71;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare $r75, $r77;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r78, $r80;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondWIP r82;

        r14 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r28 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r8 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r6 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r27 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        r26 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        r58 := @parameter6: net.sourceforge.plantuml.graphic.Rainbow;

        r0 := @parameter7: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter8: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter9: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r19 := @parameter10: net.sourceforge.plantuml.svek.ConditionStyle;

        r7 := @parameter11: net.sourceforge.plantuml.graphic.FontConfiguration;

        r31 := @parameter12: net.sourceforge.plantuml.activitydiagram3.Instruction;

        r34 := @parameter13: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r38 := @parameter14: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r60 := @parameter15: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        $r3 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r1, $r3, $r4);

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.Display: boolean isWhite()>();

        if $z0 == 0 goto label01;

        $r81 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        goto label02;

     label01:
        $r9 = interfaceinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r11 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r10);

        $r12 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r81 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r7, $r11, $r12);

     label02:
        $r15 = virtualinvoke r14.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r16 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r17 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r18 = virtualinvoke $r15.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r1, $r16, $r17);

        $r20 = <net.sourceforge.plantuml.svek.ConditionStyle: net.sourceforge.plantuml.svek.ConditionStyle INSIDE_HEXAGON>;

        if r19 != $r20 goto label03;

        $r78 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r79 = interfaceinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r78.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r81, $r79, r26, r27, r28);

        $r80 = virtualinvoke $r78.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withNorth(net.sourceforge.plantuml.graphic.TextBlock)>(r5);

        r82 = virtualinvoke $r80.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withWest(net.sourceforge.plantuml.graphic.TextBlock)>(r18);

        goto label06;

     label03:
        $r21 = <net.sourceforge.plantuml.svek.ConditionStyle: net.sourceforge.plantuml.svek.ConditionStyle INSIDE_DIAMOND>;

        if r19 != $r21 goto label04;

        $r75 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare;

        $r76 = interfaceinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r75.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r81, $r76, r26, r27, r28);

        $r77 = virtualinvoke $r75.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare withNorth(net.sourceforge.plantuml.graphic.TextBlock)>(r5);

        r82 = virtualinvoke $r77.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare withWest(net.sourceforge.plantuml.graphic.TextBlock)>(r18);

        goto label06;

     label04:
        $r22 = <net.sourceforge.plantuml.svek.ConditionStyle: net.sourceforge.plantuml.svek.ConditionStyle EMPTY_DIAMOND>;

        if r19 != $r22 goto label05;

        $r24 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        $r25 = interfaceinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r24.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r25, r26, r27, r28);

        $r29 = virtualinvoke $r24.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withNorth(net.sourceforge.plantuml.graphic.TextBlock)>($r81);

        $r30 = virtualinvoke $r29.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withSouth(net.sourceforge.plantuml.graphic.TextBlock)>(r5);

        r82 = virtualinvoke $r30.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withWest(net.sourceforge.plantuml.graphic.TextBlock)>(r18);

        goto label06;

     label05:
        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>()>();

        throw $r23;

     label06:
        if r31 != null goto label07;

        $r83 = null;

        goto label08;

     label07:
        $r83 = interfaceinvoke r31.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)>(r2);

     label08:
        $r33 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        specialinvoke $r33.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r8, r82, $r83, r34);

        $r36 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r37 = interfaceinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r36);

        $r39 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r40 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r41 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r42 = virtualinvoke $r39.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r1, $r40, $r41);

        $r43 = new java.util.ArrayList;

        specialinvoke $r43.<java.util.ArrayList: void <init>()>();

        $d0 = virtualinvoke r37.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label09;

        $d1 = virtualinvoke r37.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b1 = $d1 cmpl 0.0;

        if $b1 != 0 goto label10;

     label09:
        $r45 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackEmpty;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r33);

        $r47 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        specialinvoke $r45.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackEmpty: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.Rainbow)>($r33, $r47);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r45);

        goto label12;

     label10:
        $r55 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionIn;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r33);

        $r57 = interfaceinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        $r59 = virtualinvoke $r57.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r58);

        specialinvoke $r55.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionIn: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.Rainbow)>($r33, $r59);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r55);

        if r34 != null goto label11;

        $r71 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r33);

        $r73 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        specialinvoke $r71.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.graphic.TextBlock)>($r33, $r73, r42);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r71);

        goto label12;

     label11:
        $r61 = virtualinvoke r60.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r62 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r63 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r64 = virtualinvoke $r61.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r1, $r62, $r63);

        $r65 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r33);

        $r67 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        specialinvoke $r65.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.graphic.TextBlock)>($r33, $r67, r42);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r65);

        $r68 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward2;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r33);

        $r70 = virtualinvoke r60.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        specialinvoke $r68.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward2: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.graphic.TextBlock)>($r33, $r70, r64);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r68);

     label12:
        if r31 != null goto label13;

        $r52 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r33);

        $r54 = virtualinvoke r14.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        specialinvoke $r52.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.Rainbow)>($r33, $r54);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r52);

        goto label14;

     label13:
        $r48 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r33);

        $r50 = virtualinvoke r14.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        specialinvoke $r48.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.Rainbow)>($r33, $r50);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r48);

     label14:
        $r51 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>($r33, $r43);

        return $r51;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r4, $r7, $r12, $r15;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r6, $r11, $r14;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5, $r8, $r9, $r10, $r13, $r16;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForWhile(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock>;

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        $r6 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        $r9 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut>;

        if $r9 == null goto label1;

        $r14 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForSpecial(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r15 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        $r16 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut>;

        interfaceinvoke $r15.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r16);

     label1:
        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile backward>;

        if $r10 == null goto label2;

        $r11 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateBackward(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r12 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        $r13 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile backward>;

        interfaceinvoke $r12.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r13);

     label2:
        return;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateBackward(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        double $d0, $d1, d2, $d3, $d4, $d5, d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile backward>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = $d3 - $d4;

        d6 = $d5 / 2.0;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, d6);

        return $r5;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r4, $r6, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, r5, $r7, $r9, r11;
        double $d0, d1, $d2, d3, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18;
        byte $b0;
        boolean $z0;
        java.lang.AssertionError $r10;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock>;

        r11 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d1 = neg $d0;

        $b0 = d1 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $d17 = d1 / 2.0;

        r11 = virtualinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry addMarginX(double)>($d17);

        $z0 = <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        r5 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry appendBottom(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry)>(r11);

        $d2 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        d3 = $d2 + 48.0;

        d18 = 0.0;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile backward>;

        if $r6 == null goto label2;

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile backward>;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d16 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d18 = 0.0 + $d16;

     label2:
        $r7 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: double xDeltaBecauseSpecial(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d6 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d7 = $d5 + $d6;

        $d8 = $d7 + 24.0;

        $d9 = $d8 + 12.0;

        $d10 = $d9 + d18;

        $d11 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: double xDeltaBecauseSpecial(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d12 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d13 = $d11 + $d12;

        $d14 = $d13 + 24.0;

        $d15 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        specialinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double,double)>($d10, d3, $d14, $d15, d3);

        return $r7;
    }

    private double xDeltaBecauseSpecial(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r3;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut>;

        if $r1 != null goto label1;

        return 0.0;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        return $d0;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r2, $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r1;
        java.lang.UnsupportedOperationException $r4;
        net.sourceforge.plantuml.graphic.StringBounder r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r7;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock>;

        if r0 != $r2 goto label1;

        $r7 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForWhile(net.sourceforge.plantuml.graphic.StringBounder)>(r5);

        return $r7;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        if r0 != $r3 goto label2;

        $r6 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r5);

        return $r6;

     label2:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForWhile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, r4, r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, d10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d3 = $d1 - $d2;

        $d4 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d5 = $d3 - $d4;

        $d6 = $d5 / 2.0;

        d7 = $d0 + $d6;

        $d8 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d9 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        d10 = $d8 - $d9;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d10, d7);

        return $r7;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        double $d1, $d2, d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        d3 = $d1 - $d2;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, 0.0);

        return $r5;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForSpecial(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        double $d0, $d1, $d2, d3, $d4, d5, $d6, d7, d8, $d9, $d10, d11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d2 = $d0 - $d1;

        d3 = $d2 / 2.0;

        $d4 = 3.0 * d3;

        d5 = staticinvoke <java.lang.Math: double max(double,double)>($d4, 48.0);

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForWhile(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        d7 = $d6 - 12.0;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d8 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d9 = staticinvoke <java.lang.Math: double min(double,double)>(d7, d8);

        $d10 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: double xDeltaBecauseSpecial(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d11 = $d9 - $d10;

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d11, d5);

        return $r6;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        return $r1;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile whileBlock>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForWhile(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile backward>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateBackward(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile specialOut>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForSpecial(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram3/ftile/vcompact/FtileWhile;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: boolean $assertionsDisabled> = $z1;

        return;
    }
}
