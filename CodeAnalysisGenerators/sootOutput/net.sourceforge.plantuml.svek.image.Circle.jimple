public class net.sourceforge.plantuml.svek.image.Circle extends java.lang.Object
{
    private java.awt.geom.Point2D center;
    private double radius;

    public void <init>()
    {
        net.sourceforge.plantuml.svek.image.Circle r0;
        java.awt.geom.Point2D$Double $r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.Circle;

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Circle: void <init>(java.awt.geom.Point2D)>($r1);

        return;
    }

    public void <init>(java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.image.Circle r0;
        java.awt.geom.Point2D r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.Circle;

        r1 := @parameter0: java.awt.geom.Point2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.image.Circle: java.awt.geom.Point2D center> = r1;

        r0.<net.sourceforge.plantuml.svek.image.Circle: double radius> = 0.0;

        return;
    }

    public void <init>(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.image.Circle r0;
        java.awt.geom.Point2D$Double $r1;
        java.awt.geom.Point2D r2, r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        r0 := @this: net.sourceforge.plantuml.svek.image.Circle;

        r2 := @parameter0: java.awt.geom.Point2D;

        r3 := @parameter1: java.awt.geom.Point2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d2 = $d0 + $d1;

        $d3 = $d2 / 2.0;

        $d4 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d5 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $d6 = $d4 + $d5;

        $d7 = $d6 / 2.0;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, $d7);

        r0.<net.sourceforge.plantuml.svek.image.Circle: java.awt.geom.Point2D center> = $r1;

        $r4 = r0.<net.sourceforge.plantuml.svek.image.Circle: java.awt.geom.Point2D center>;

        $d8 = virtualinvoke r2.<java.awt.geom.Point2D: double distance(java.awt.geom.Point2D)>($r4);

        r0.<net.sourceforge.plantuml.svek.image.Circle: double radius> = $d8;

        return;
    }

    public static net.sourceforge.plantuml.svek.image.Circle getCircle(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1, r3;
        double $d0, $d1;
        byte $b0;
        net.sourceforge.plantuml.svek.image.Circle $r2, $r4;

        r3 := @parameter0: java.awt.geom.Point2D;

        r1 := @parameter1: java.awt.geom.Point2D;

        r0 := @parameter2: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $b0 = $d0 cmpl $d1;

        if $b0 == 0 goto label1;

        $r4 = new net.sourceforge.plantuml.svek.image.Circle;

        specialinvoke $r4.<net.sourceforge.plantuml.svek.image.Circle: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r1, r0);

        return $r4;

     label1:
        $r2 = new net.sourceforge.plantuml.svek.image.Circle;

        specialinvoke $r2.<net.sourceforge.plantuml.svek.image.Circle: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, r3, r0);

        return $r2;
    }

    private void <init>(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.image.Circle r0;
        java.awt.geom.Point2D r1, r2, r3, $r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, d50, d51, $d52, $d53, d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, d69, $d70;
        java.awt.geom.Point2D$Double $r4;

        r0 := @this: net.sourceforge.plantuml.svek.image.Circle;

        r2 := @parameter0: java.awt.geom.Point2D;

        r3 := @parameter1: java.awt.geom.Point2D;

        r1 := @parameter2: java.awt.geom.Point2D;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d2 = $d0 * $d1;

        $d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $d5 = $d3 - $d4;

        $d6 = $d2 * $d5;

        $d7 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d8 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d9 = $d7 * $d8;

        $d10 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d11 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $d12 = $d10 - $d11;

        $d13 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d14 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d15 = $d13 - $d14;

        $d16 = $d12 * $d15;

        $d17 = $d9 + $d16;

        $d18 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $d19 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d20 = $d18 - $d19;

        $d21 = $d17 * $d20;

        $d22 = $d6 + $d21;

        $d23 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d24 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d25 = $d23 * $d24;

        $d26 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d27 = neg $d26;

        $d28 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d29 = $d27 + $d28;

        $d30 = $d25 * $d29;

        d31 = $d22 + $d30;

        $d32 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d33 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d34 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $d35 = $d33 - $d34;

        $d36 = $d32 * $d35;

        $d37 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d38 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $d39 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d40 = $d38 - $d39;

        $d41 = $d37 * $d40;

        $d42 = $d36 + $d41;

        $d43 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d44 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d45 = neg $d44;

        $d46 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d47 = $d45 + $d46;

        $d48 = $d43 * $d47;

        $d49 = $d42 + $d48;

        d50 = 2.0 * $d49;

        d51 = d31 / d50;

        $d52 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d53 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        d54 = $d52 - $d53;

        $d55 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $d56 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d57 = $d55 + $d56;

        $d58 = $d57 / 2.0;

        $d59 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d60 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d61 = $d59 - $d60;

        $d62 = $d61 / d54;

        $d63 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d64 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d65 = $d63 + $d64;

        $d66 = $d65 / 2.0;

        $d67 = d51 - $d66;

        $d68 = $d62 * $d67;

        d69 = $d58 - $d68;

        $r4 = new java.awt.geom.Point2D$Double;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d51, d69);

        r0.<net.sourceforge.plantuml.svek.image.Circle: java.awt.geom.Point2D center> = $r4;

        $r5 = r0.<net.sourceforge.plantuml.svek.image.Circle: java.awt.geom.Point2D center>;

        $d70 = virtualinvoke $r5.<java.awt.geom.Point2D: double distance(java.awt.geom.Point2D)>(r2);

        r0.<net.sourceforge.plantuml.svek.image.Circle: double radius> = $d70;

        return;
    }

    public java.awt.geom.Point2D getCenter()
    {
        net.sourceforge.plantuml.svek.image.Circle r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.Circle;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.Circle: java.awt.geom.Point2D center>;

        return $r1;
    }

    public double getRadius()
    {
        net.sourceforge.plantuml.svek.image.Circle r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.svek.image.Circle;

        $d0 = r0.<net.sourceforge.plantuml.svek.image.Circle: double radius>;

        return $d0;
    }

    public boolean isOutside(java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.image.Circle r0;
        java.awt.geom.Point2D r1, $r2;
        double d0, $d1;
        byte $b0;

        r0 := @this: net.sourceforge.plantuml.svek.image.Circle;

        r1 := @parameter0: java.awt.geom.Point2D;

        $r2 = r0.<net.sourceforge.plantuml.svek.image.Circle: java.awt.geom.Point2D center>;

        d0 = virtualinvoke $r2.<java.awt.geom.Point2D: double distance(java.awt.geom.Point2D)>(r1);

        $d1 = r0.<net.sourceforge.plantuml.svek.image.Circle: double radius>;

        $b0 = d0 cmpl $d1;

        if $b0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
