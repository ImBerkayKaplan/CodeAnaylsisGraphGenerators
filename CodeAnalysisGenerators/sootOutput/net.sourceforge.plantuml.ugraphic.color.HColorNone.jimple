public class net.sourceforge.plantuml.ugraphic.color.HColorNone extends net.sourceforge.plantuml.ugraphic.color.HColorAbstract implements net.sourceforge.plantuml.ugraphic.color.HColor
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UBackground bg()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone$1 $r0;
        net.sourceforge.plantuml.ugraphic.color.HColorNone r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        $r0 = new net.sourceforge.plantuml.ugraphic.color.HColorNone$1;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.HColorNone$1: void <init>(net.sourceforge.plantuml.ugraphic.color.HColorNone)>(r1);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

        return $r1;
    }

    public volatile java.lang.String asString()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: java.lang.String asString()>();

        return $r1;
    }

    public volatile boolean isDark()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: boolean isDark()>();

        return $z0;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor reverse()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor reverse()>();

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor reverseHsluv()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor reverseHsluv()>();

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor darken(int)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone r0;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor darken(int)>(i0);

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor lighten(int)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone r0;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorNone;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor lighten(int)>(i0);

        return $r1;
    }
}
