class net.sourceforge.plantuml.timingdiagram.PlayerBinary$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0;

    void <init>(net.sourceforge.plantuml.timingdiagram.PlayerBinary)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary$1 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary$1;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$1: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r8;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary$1 r2;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary $r3, $r6;
        net.sourceforge.plantuml.graphic.TextBlock r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        double $d0, $d1, $d2, d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary$1;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$1: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: net.sourceforge.plantuml.graphic.TextBlock getTitle()>();

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = r2.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$1: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getFullHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = $d0 - $d1;

        d3 = $d2 / 2.0;

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d3);

        $r8 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r8);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary$1 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary $r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4, $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary$1;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$1: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: net.sourceforge.plantuml.graphic.TextBlock getTitle()>();

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r5 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r4, 5.0, 0.0);

        return $r5;
    }
}
