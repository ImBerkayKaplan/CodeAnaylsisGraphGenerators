public class net.sourceforge.plantuml.vizjs.VizJsEngine extends java.lang.Object
{
    private final java.lang.Object viz;
    private final java.lang.reflect.Method mExecute;

    public static boolean isOk()
    {
        java.lang.Exception $r0;

     label1:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("ch.braincell.viz.VizJS");

     label2:
        return 1;

     label3:
        $r0 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void <init>() throws java.lang.ClassNotFoundException, java.lang.NoSuchMethodException, java.lang.SecurityException, java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException
    {
        net.sourceforge.plantuml.vizjs.VizJsEngine r0;
        java.lang.Class r1;
        java.lang.Class[] $r2, $r4;
        java.lang.reflect.Method r3, $r5;
        java.lang.Object[] $r6;
        java.lang.Object $r7;

        r0 := @this: net.sourceforge.plantuml.vizjs.VizJsEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("ch.braincell.viz.VizJS");

        $r2 = newarray (java.lang.Class)[0];

        r3 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("create", $r2);

        $r4 = newarray (java.lang.Class)[1];

        $r4[0] = class "Ljava/lang/String;";

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("execute", $r4);

        r0.<net.sourceforge.plantuml.vizjs.VizJsEngine: java.lang.reflect.Method mExecute> = $r5;

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);

        r0.<net.sourceforge.plantuml.vizjs.VizJsEngine: java.lang.Object viz> = $r7;

        return;
    }

    public java.lang.String execute(java.lang.String) throws java.lang.IllegalAccessException, java.lang.IllegalArgumentException, java.lang.reflect.InvocationTargetException
    {
        net.sourceforge.plantuml.vizjs.VizJsEngine r0;
        java.lang.Object[] $r1;
        java.lang.String r2, $r6;
        java.lang.Object $r3, $r5;
        java.lang.reflect.Method $r4;

        r0 := @this: net.sourceforge.plantuml.vizjs.VizJsEngine;

        r2 := @parameter0: java.lang.String;

        $r4 = r0.<net.sourceforge.plantuml.vizjs.VizJsEngine: java.lang.reflect.Method mExecute>;

        $r3 = r0.<net.sourceforge.plantuml.vizjs.VizJsEngine: java.lang.Object viz>;

        $r1 = newarray (java.lang.Object)[1];

        $r1[0] = r2;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r1);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }
}
