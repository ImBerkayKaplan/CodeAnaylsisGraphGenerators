class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection implements net.sourceforge.plantuml.activitydiagram3.ftile.ConnectionTranslatable
{
    private final net.sourceforge.plantuml.graphic.Rainbow endInlinkColor;
    private final net.sourceforge.plantuml.graphic.TextBlock back;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;
        net.sourceforge.plantuml.graphic.TextBlock r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.graphic.TextBlock back> = r5;

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r1, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        java.awt.geom.Point2D $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r1);

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r3);

        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }

    private double getBottom(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r1, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r1);

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r3);

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d2 = $d0 + $d1;

        return $d2;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        java.awt.geom.Point2D$Double $r4;
        java.awt.geom.Point2D $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        $r4 = new java.awt.geom.Point2D$Double;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r4);

        return $r5;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r21;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r3, $r7, $r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4, r9;
        java.awt.geom.Point2D r5, r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r8;
        double d0, d1, $d2, $d3, d4, $d5, $d6, $d7, d8, $d9, $d10, $d11, d12, $d13, $d14, d15, d16;
        net.sourceforge.plantuml.ISkinParam $r11;
        net.sourceforge.plantuml.graphic.Rainbow $r12;
        net.sourceforge.plantuml.ugraphic.UPolygon $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r14, $r16, r19;
        net.sourceforge.plantuml.Direction $r15;
        net.sourceforge.plantuml.graphic.TextBlock $r17;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r18;
        net.sourceforge.plantuml.ugraphic.UTranslate $r20;
        net.sourceforge.plantuml.ugraphic.UEmpty $r22;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r5 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        if r5 != null goto label1;

        return;

     label1:
        r6 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r7);

        r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        d1 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>();

        $d2 = virtualinvoke r6.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d4 = $d2 + $d3;

        $d5 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d6 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d7 = $d5 - $d6;

        d8 = $d7 / 2.0;

        $d9 = virtualinvoke r6.<java.awt.geom.Point2D: double getY()>();

        $d10 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d11 = $d9 + $d10;

        d12 = $d11 + d8;

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r12 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor>;

        $r13 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()>();

        $r14 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r11, $r12, $r13);

        $r15 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction UP>;

        $r16 = virtualinvoke $r14.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake emphasizeDirection(net.sourceforge.plantuml.Direction)>($r15);

        $r17 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.graphic.TextBlock back>;

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r19 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r17, $r18);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

        $d13 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: double getBottom(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d14 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d13);

        d15 = $d14 + 12.0;

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d15);

        d16 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d16, d15);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d16, d12);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d4, d12);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r19);

        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d15);

        $r21 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        $r22 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        specialinvoke $r22.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>(5.0, 12.0);

        interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r22);

        return;
    }

    public void drawTranslate(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r2, $r9, $r17;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.graphic.Rainbow $r4, $r23, $r26;
        net.sourceforge.plantuml.ugraphic.UPolygon $r5, $r31;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r6, r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r10, r19;
        java.awt.geom.Point2D r11, r12, r14, r16;
        net.sourceforge.plantuml.ugraphic.UTranslate r13, r15, $r20, $r29;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r18;
        double d0, d1, $d2, $d3, d4, $d5, $d6, $d7, d8, $d9, $d10, $d11, d12, $d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, $d21, $d22;
        net.sourceforge.plantuml.ugraphic.UGraphic $r21, $r25, $r30, r32, r33;
        net.sourceforge.plantuml.ugraphic.UEmpty $r22;
        net.sourceforge.plantuml.ugraphic.color.HColor $r24, $r27;
        net.sourceforge.plantuml.ugraphic.UBackground $r28;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple;

        r32 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r13 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r15 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        r0 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor>;

        $r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r3, $r4, $r5);

        $r7 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy LIMITED>;

        r8 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r7);

        $r9 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        r10 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        r11 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        r12 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        r14 = virtualinvoke r13.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r11);

        r16 = virtualinvoke r15.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r12);

        $r17 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r18 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r17);

        r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        d0 = virtualinvoke r14.<java.awt.geom.Point2D: double getX()>();

        d1 = virtualinvoke r14.<java.awt.geom.Point2D: double getY()>();

        $d2 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d4 = $d2 + $d3;

        $d5 = virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d6 = virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d7 = $d5 - $d6;

        d8 = $d7 / 2.0;

        $d9 = virtualinvoke r16.<java.awt.geom.Point2D: double getY()>();

        $d10 = virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d11 = $d9 + $d10;

        d12 = $d11 + d8;

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

        $d13 = d1 + 12.0;

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, $d13);

        $d14 = virtualinvoke r13.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d15 = virtualinvoke r15.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d16 = staticinvoke <java.lang.Math: double max(double,double)>($d14, $d15);

        $d17 = virtualinvoke r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d18 = $d16 + $d17;

        $d19 = d1 + 12.0;

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d18, $d19);

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d18, d12);

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d4, d12);

        interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r8);

        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d20 = d1 + 12.0;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, $d20);

        $r21 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        $r22 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        specialinvoke $r22.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>(5.0, 12.0);

        interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r22);

        $r23 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor>;

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r25 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        $r26 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackSimple: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor>;

        $r27 = virtualinvoke $r26.<net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r33 = interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r28);

        $r29 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d21 = d1 + d12;

        $d22 = $d21 / 2.0;

        specialinvoke $r29.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d18, $d22);

        $r30 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r29);

        $r31 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToUp()>();

        interfaceinvoke $r30.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r31);

        return;
    }
}
