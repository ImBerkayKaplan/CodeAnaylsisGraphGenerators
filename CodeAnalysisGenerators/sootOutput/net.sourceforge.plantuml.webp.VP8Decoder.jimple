public class net.sourceforge.plantuml.webp.VP8Decoder extends java.lang.Object
{
    private int[][][][] coefProbs;
    net.sourceforge.plantuml.webp.VP8Frame f;
    private int frameCount;

    public void <init>()
    {
        net.sourceforge.plantuml.webp.VP8Decoder r0;
        int[][][][] $r1;

        r0 := @this: net.sourceforge.plantuml.webp.VP8Decoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.webp.VP8Decoder: int frameCount> = 0;

        $r1 = staticinvoke <net.sourceforge.plantuml.webp.Globals: int[][][][] getDefaultCoefProbs()>();

        r0.<net.sourceforge.plantuml.webp.VP8Decoder: int[][][][] coefProbs> = $r1;

        return;
    }

    public void decodeFrame(javax.imageio.stream.ImageInputStream) throws java.io.IOException
    {
        net.sourceforge.plantuml.webp.VP8Decoder r0;
        int[][][][] $r1, $r4;
        net.sourceforge.plantuml.webp.VP8Frame $r2, $r5;
        javax.imageio.stream.ImageInputStream r3;
        boolean $z1;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.webp.VP8Decoder;

        r3 := @parameter0: javax.imageio.stream.ImageInputStream;

        $r1 = staticinvoke <net.sourceforge.plantuml.webp.Globals: int[][][][] getDefaultCoefProbs()>();

        r0.<net.sourceforge.plantuml.webp.VP8Decoder: int[][][][] coefProbs> = $r1;

        $r2 = new net.sourceforge.plantuml.webp.VP8Frame;

        $r4 = r0.<net.sourceforge.plantuml.webp.VP8Decoder: int[][][][] coefProbs>;

        specialinvoke $r2.<net.sourceforge.plantuml.webp.VP8Frame: void <init>(javax.imageio.stream.ImageInputStream,int[][][][])>(r3, $r4);

        r0.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f> = $r2;

        $r5 = r0.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $z1 = virtualinvoke $r5.<net.sourceforge.plantuml.webp.VP8Frame: boolean decodeFrame(boolean)>(0);

        if $z1 == 0 goto label1;

     label1:
        $i0 = r0.<net.sourceforge.plantuml.webp.VP8Decoder: int frameCount>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.webp.VP8Decoder: int frameCount> = $i1;

        return;
    }

    public net.sourceforge.plantuml.webp.VP8Frame getFrame()
    {
        net.sourceforge.plantuml.webp.VP8Decoder r0;
        net.sourceforge.plantuml.webp.VP8Frame $r1;

        r0 := @this: net.sourceforge.plantuml.webp.VP8Decoder;

        $r1 = r0.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        return $r1;
    }

    public int getHeight()
    {
        net.sourceforge.plantuml.webp.VP8Decoder r0;
        net.sourceforge.plantuml.webp.VP8Frame $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.webp.VP8Decoder;

        $r1 = r0.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        return $i0;
    }

    public int getWidth()
    {
        net.sourceforge.plantuml.webp.VP8Decoder r0;
        net.sourceforge.plantuml.webp.VP8Frame $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.webp.VP8Decoder;

        $r1 = r0.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        return $i0;
    }

    public void writePGMFile(java.lang.String, net.sourceforge.plantuml.webp.VP8Frame)
    {
        net.sourceforge.plantuml.webp.VP8Frame r0, $r4, $r5, $r16, $r22, $r23, $r24, $r25, $r28, $r29;
        int[][] r1, r2, r33;
        net.sourceforge.plantuml.webp.VP8Decoder r3;
        int $i0, $i1, i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28;
        java.io.FileOutputStream $r6;
        java.lang.String r7, $r12, $r18, $r20;
        java.lang.StringBuilder $r9, $r10, $r11, $r14, $r15, $r17;
        byte[] $r13, $r19, $r21;
        int[] $r26, $r27, $r30;
        java.io.IOException $r31;
        java.io.FileNotFoundException $r32;

        r3 := @this: net.sourceforge.plantuml.webp.VP8Decoder;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: net.sourceforge.plantuml.webp.VP8Frame;

     label01:
        r33 = virtualinvoke r0.<net.sourceforge.plantuml.webp.VP8Frame: int[][] getYBuffer()>();

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.webp.VP8Frame: int[][] getUBuffer()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.webp.VP8Frame: int[][] getVBuffer()>();

        $r4 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i0 = virtualinvoke $r4.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        $i1 = $i0 + 1;

        i2 = $i1 & -2;

        $r5 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i3 = virtualinvoke $r5.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        $i4 = $i3 + 1;

        i5 = $i4 / 2;

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.lang.String)>(r7);

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>(80);

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>(53);

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>(10);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r12.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r6.<java.io.FileOutputStream: void write(byte[])>($r13);

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>(32);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r16 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i6 = virtualinvoke $r16.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        $i7 = $i6 + i5;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = virtualinvoke $r18.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r6.<java.io.FileOutputStream: void write(byte[])>($r19);

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>(10);

        $r20 = "255";

        $r21 = virtualinvoke $r20.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r6.<java.io.FileOutputStream: void write(byte[])>($r21);

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>(10);

        i24 = 0;

     label02:
        $r22 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i8 = virtualinvoke $r22.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        if i24 >= $i8 goto label06;

        i25 = 0;

     label03:
        $r28 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i20 = virtualinvoke $r28.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        if i25 >= $i20 goto label04;

        $r30 = r33[i25];

        $i23 = $r30[i24];

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>($i23);

        i25 = i25 + 1;

        goto label03;

     label04:
        $r29 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i21 = virtualinvoke $r29.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        $i22 = $i21 & 1;

        if $i22 != 1 goto label05;

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>(0);

     label05:
        i24 = i24 + 1;

        goto label02;

     label06:
        i26 = 0;

     label07:
        $r23 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i9 = virtualinvoke $r23.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        $i10 = $i9 + 1;

        $i11 = $i10 / 2;

        if i26 >= $i11 goto label12;

        i27 = 0;

     label08:
        $r24 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i12 = virtualinvoke $r24.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        $i13 = $i12 + 1;

        $i14 = $i13 / 2;

        if i27 >= $i14 goto label09;

        $r27 = r1[i27];

        $i19 = $r27[i26];

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>($i19);

        i27 = i27 + 1;

        goto label08;

     label09:
        i28 = 0;

     label10:
        $r25 = r3.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i15 = virtualinvoke $r25.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        $i16 = $i15 + 1;

        $i17 = $i16 / 2;

        if i28 >= $i17 goto label11;

        $r26 = r2[i28];

        $i18 = $r26[i26];

        virtualinvoke $r6.<java.io.FileOutputStream: void write(int)>($i18);

        i28 = i28 + 1;

        goto label10;

     label11:
        i26 = i26 + 1;

        goto label07;

     label12:
        goto label15;

     label13:
        $r32 := @caughtexception;

        virtualinvoke $r32.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label15;

     label14:
        $r31 := @caughtexception;

        virtualinvoke $r31.<java.io.IOException: void printStackTrace()>();

     label15:
        return;

        catch java.io.FileNotFoundException from label01 to label12 with label13;
        catch java.io.IOException from label01 to label12 with label14;
    }

    public void writeYV12File(java.lang.String, net.sourceforge.plantuml.webp.VP8Frame)
    {
        net.sourceforge.plantuml.webp.VP8Frame r0, $r9, $r15, $r21, $r22, $r23, $r24, $r26, $r28;
        int[][] r1, r2, r32;
        java.io.FileOutputStream $r3;
        java.lang.String r4, $r11, $r17, $r19;
        java.lang.StringBuilder $r6, $r7, $r10, $r13, $r14, $r16;
        net.sourceforge.plantuml.webp.VP8Decoder r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23, i24, i25, i26;
        byte[] $r12, $r18, $r20;
        int[] $r25, $r27, $r29;
        java.io.IOException $r30;
        java.io.FileNotFoundException $r31;

        r8 := @this: net.sourceforge.plantuml.webp.VP8Decoder;

        r4 := @parameter0: java.lang.String;

        r0 := @parameter1: net.sourceforge.plantuml.webp.VP8Frame;

     label01:
        r32 = virtualinvoke r0.<net.sourceforge.plantuml.webp.VP8Frame: int[][] getYBuffer()>();

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.webp.VP8Frame: int[][] getUBuffer()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.webp.VP8Frame: int[][] getVBuffer()>();

        $r3 = new java.io.FileOutputStream;

        specialinvoke $r3.<java.io.FileOutputStream: void <init>(java.lang.String)>(r4);

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>(80);

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>(53);

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>(10);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r9 = r8.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i0 = virtualinvoke $r9.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r11.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r12);

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>(32);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r15 = r8.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i1 = virtualinvoke $r15.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        $i2 = $i1 * 3;

        $i3 = $i2 / 2;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r18);

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>(10);

        $r19 = "255";

        $r20 = virtualinvoke $r19.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<java.io.FileOutputStream: void write(byte[])>($r20);

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>(10);

        i21 = 0;

     label02:
        $r21 = r8.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i4 = virtualinvoke $r21.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        if i21 >= $i4 goto label05;

        i22 = 0;

     label03:
        $r28 = r8.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i19 = virtualinvoke $r28.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        if i22 >= $i19 goto label04;

        $r29 = r32[i22];

        $i20 = $r29[i21];

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>($i20);

        i22 = i22 + 1;

        goto label03;

     label04:
        i21 = i21 + 1;

        goto label02;

     label05:
        i23 = 0;

     label06:
        $r22 = r8.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i5 = virtualinvoke $r22.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        $i6 = $i5 + 1;

        $i7 = $i6 / 2;

        if i23 >= $i7 goto label09;

        i24 = 0;

     label07:
        $r26 = r8.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i15 = virtualinvoke $r26.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        $i16 = $i15 + 1;

        $i17 = $i16 / 2;

        if i24 >= $i17 goto label08;

        $r27 = r1[i24];

        $i18 = $r27[i23];

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>($i18);

        i24 = i24 + 1;

        goto label07;

     label08:
        i23 = i23 + 1;

        goto label06;

     label09:
        i25 = 0;

     label10:
        $r23 = r8.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i8 = virtualinvoke $r23.<net.sourceforge.plantuml.webp.VP8Frame: int getHeight()>();

        $i9 = $i8 + 1;

        $i10 = $i9 / 2;

        if i25 >= $i10 goto label13;

        i26 = 0;

     label11:
        $r24 = r8.<net.sourceforge.plantuml.webp.VP8Decoder: net.sourceforge.plantuml.webp.VP8Frame f>;

        $i11 = virtualinvoke $r24.<net.sourceforge.plantuml.webp.VP8Frame: int getWidth()>();

        $i12 = $i11 + 1;

        $i13 = $i12 / 2;

        if i26 >= $i13 goto label12;

        $r25 = r2[i26];

        $i14 = $r25[i25];

        virtualinvoke $r3.<java.io.FileOutputStream: void write(int)>($i14);

        i26 = i26 + 1;

        goto label11;

     label12:
        i25 = i25 + 1;

        goto label10;

     label13:
        goto label16;

     label14:
        $r31 := @caughtexception;

        virtualinvoke $r31.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label16;

     label15:
        $r30 := @caughtexception;

        virtualinvoke $r30.<java.io.IOException: void printStackTrace()>();

     label16:
        return;

        catch java.io.FileNotFoundException from label01 to label13 with label14;
        catch java.io.IOException from label01 to label13 with label15;
    }
}
