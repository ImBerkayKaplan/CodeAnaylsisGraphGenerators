public class gen.lib.pathplan.shortest__c extends java.lang.Object
{
    private static smetana.core.jmp_buf jbuf;

    public void <init>()
    {
        gen.lib.pathplan.shortest__c r0;

        r0 := @this: gen.lib.pathplan.shortest__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int Pshortestpath(h.ST_Ppoly_t, smetana.core.CArray, h.ST_Ppoly_t)
    {
        h.ST_pointf $r0, $r2, $r4, $r40, $r44, $r57, $r58, $r73, $r74, $r80, $r129, $r136, $r143, $r170, $r176, $r183, $r185, $r189, $r192, $r195, $r198, $r201, $r204, $r207, $r210, $r215, $r218, $r229, $r252;
        h.ST_pointnlink_t[] $r6, $r32, $r91, $r120, $r132, $r139, $r146, $r151, $r224, $r231, $r235, $r239, $r242, $r247, $r254, $r258, $r262, $r265;
        h.ST_pointnlink_t $r7, $r8, $r38, $r41, $r42, $r45, $r46, $r72, $r79, $r94, $r123, $r135, $r142, r221, r222, $r226, $r233, $r237, $r244, $r249, $r256, $r260, $r267, r271, r272, r273;
        smetana.core.jmp_buf $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i37, $i39, $i40, $i41, $i42, $i44, $i48, i50, i51, $i52, $i53, $i54, i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, i75, $i76, i77, i78, i79, $i80, i81, i82, i83, i84, i85, i86, i87;
        h.ST_Ppoly_t r11, r51;
        smetana.core.Z $r12, $r13, $r14, $r16, $r18, $r20, $r31, $r33, $r34, $r35, $r36, $r47, $r49, $r52, $r54, $r59, $r89, $r92, $r95, $r114, $r116, $r118, $r121, $r124, $r126, $r130, $r133, $r137, $r140, $r144, $r147, $r149, $r152, $r167, $r173, $r179, $r186, $r223, $r225, $r230, $r232, $r234, $r236, $r238, $r240, $r241, $r243, $r245, $r246, $r248, $r253, $r255, $r257, $r259, $r261, $r263, $r264, $r266, $r268, $r269, $r270;
        h.ST_deque_t $r15, $r17, $r19, $r21, $r48, $r50, $r90, $r93, $r96, $r117, $r119, $r122, $r125, $r127, $r131, $r134, $r138, $r141, $r145, $r148, $r150, $r153;
        smetana.core.CArray $r22, $r25, $r28, r37, $r53, $r55, $r60, r61, $r101, $r106, $r113, $r115, $r158, $r163, $r168, $r174, $r180, $r187, $r190, $r193, $r196, $r199, $r202, $r205, $r208, $r213, $r216, $r227, $r250;
        java.lang.Object $r23, $r26, $r29, $r39, $r43, $r56, $r62, $r64, $r68, $r75, $r81, $r85, $r97, $r102, $r107, $r109, $r128, $r154, $r159, $r164, $r169, $r171, $r175, $r177, $r182, $r184, $r188, $r191, $r194, $r197, $r200, $r203, $r206, $r209, $r214, $r217, $r228, $r251;
        smetana.core.__struct__ $r24, $r27, $r30, $r172, $r178;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15;
        byte $b11, $b36, $b38, $b43, $b45, $b46, $b47, $b49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        h.ST_triangle_t $r63, $r65, $r69, $r76, $r82, $r86, $r98, $r103, $r108, $r110, $r155, $r160, $r165;
        h.ST_tedge_t[] $r66, $r70, $r77, $r83, $r87, $r99, $r104, $r111, $r156, $r161;
        h.ST_tedge_t $r67, $r71, $r78, $r84, $r88, $r100, $r105, $r112, $r157, $r162;
        java.io.PrintStream $r166, $r181;
        java.lang.Throwable $r219;

        r11 := @parameter0: h.ST_Ppoly_t;

        r37 := @parameter1: smetana.core.CArray;

        r51 := @parameter2: h.ST_Ppoly_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2gub5b19vo2qexn56nw23wage", "Pshortestpath");

     label01:
        $r0 = new h.ST_pointf;

        specialinvoke $r0.<h.ST_pointf: void <init>()>();

        $r2 = new h.ST_pointf;

        specialinvoke $r2.<h.ST_pointf: void <init>()>();

        $r4 = new h.ST_pointf;

        specialinvoke $r4.<h.ST_pointf: void <init>()>();

        $r6 = newarray (h.ST_pointnlink_t)[2];

        $r7 = new h.ST_pointnlink_t;

        specialinvoke $r7.<h.ST_pointnlink_t: void <init>()>();

        $r6[0] = $r7;

        $r8 = new h.ST_pointnlink_t;

        specialinvoke $r8.<h.ST_pointnlink_t: void <init>()>();

        $r6[1] = $r8;

        r221 = null;

        r222 = null;

        $r10 = <gen.lib.pathplan.shortest__c: smetana.core.jmp_buf jbuf>;

        $i0 = staticinvoke <smetana.core.JUtils: int setjmp(smetana.core.jmp_buf)>($r10);

        if $i0 == 0 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2gub5b19vo2qexn56nw23wage", "Pshortestpath");

        return -2;

     label03:
        $i1 = r11.<h.ST_Ppoly_t: int pn>;

        staticinvoke <gen.lib.pathplan.shortest__c: void growpnls(int)>($i1);

        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r12.<smetana.core.Z: int pnll> = 0;

        $r13 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r13.<smetana.core.Z: int tril> = 0;

        $i2 = r11.<h.ST_Ppoly_t: int pn>;

        $i3 = $i2 * 2;

        staticinvoke <gen.lib.pathplan.shortest__c: void growdq(int)>($i3);

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r15 = $r14.<smetana.core.Z: h.ST_deque_t dq>;

        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r17 = $r16.<smetana.core.Z: h.ST_deque_t dq>;

        $i4 = $r17.<h.ST_deque_t: int pnlpn>;

        $i5 = $i4 / 2;

        $r15.<h.ST_deque_t: int fpnlpi> = $i5;

        $r18 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r19 = $r18.<smetana.core.Z: h.ST_deque_t dq>;

        $r20 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r21 = $r20.<smetana.core.Z: h.ST_deque_t dq>;

        $i6 = $r21.<h.ST_deque_t: int fpnlpi>;

        $i7 = $i6 - 1;

        $r19.<h.ST_deque_t: int lpnlpi> = $i7;

        i50 = 0;

        d15 = #Infinity;

        i51 = -1;

     label04:
        $i8 = r11.<h.ST_Ppoly_t: int pn>;

        if i50 >= $i8 goto label06;

        $r213 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r214 = virtualinvoke $r213.<smetana.core.CArray: java.lang.Object get__(int)>(i50);

        $r215 = (h.ST_pointf) $r214;

        $d14 = $r215.<h.ST_pointf: double x>;

        $b49 = d15 cmpl $d14;

        if $b49 <= 0 goto label05;

        $r216 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r217 = virtualinvoke $r216.<smetana.core.CArray: java.lang.Object get__(int)>(i50);

        $r218 = (h.ST_pointf) $r217;

        d15 = $r218.<h.ST_pointf: double x>;

        i51 = i50;

     label05:
        i50 = i50 + 1;

        goto label04;

     label06:
        $r22 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r23 = virtualinvoke $r22.<smetana.core.CArray: java.lang.Object get__(int)>(i51);

        $r24 = (smetana.core.__struct__) $r23;

        virtualinvoke $r2.<h.ST_pointf: void ___(smetana.core.__struct__)>($r24);

        $r25 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        if i51 != 0 goto label07;

        $i48 = r11.<h.ST_Ppoly_t: int pn>;

        $i52 = $i48 - 1;

        goto label08;

     label07:
        $i52 = i51 - 1;

     label08:
        $r26 = virtualinvoke $r25.<smetana.core.CArray: java.lang.Object get__(int)>($i52);

        $r27 = (smetana.core.__struct__) $r26;

        virtualinvoke $r0.<h.ST_pointf: void ___(smetana.core.__struct__)>($r27);

        $r28 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $i9 = r11.<h.ST_Ppoly_t: int pn>;

        $i10 = $i9 - 1;

        if i51 != $i10 goto label09;

        $i53 = 0;

        goto label10;

     label09:
        $i53 = i51 + 1;

     label10:
        $r29 = virtualinvoke $r28.<smetana.core.CArray: java.lang.Object get__(int)>($i53);

        $r30 = (smetana.core.__struct__) $r29;

        virtualinvoke $r4.<h.ST_pointf: void ___(smetana.core.__struct__)>($r30);

        $d1 = $r0.<h.ST_pointf: double x>;

        $d0 = $r2.<h.ST_pointf: double x>;

        $b11 = $d1 cmpl $d0;

        if $b11 != 0 goto label11;

        $d11 = $r2.<h.ST_pointf: double x>;

        $d10 = $r4.<h.ST_pointf: double x>;

        $b46 = $d11 cmpl $d10;

        if $b46 != 0 goto label11;

        $d13 = $r4.<h.ST_pointf: double y>;

        $d12 = $r2.<h.ST_pointf: double y>;

        $b47 = $d13 cmpl $d12;

        if $b47 > 0 goto label12;

     label11:
        $i54 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r0, $r2, $r4);

        if $i54 == 1 goto label16;

     label12:
        $i39 = r11.<h.ST_Ppoly_t: int pn>;

        i55 = $i39 - 1;

     label13:
        if i55 < 0 goto label20;

        $i40 = r11.<h.ST_Ppoly_t: int pn>;

        $i41 = $i40 - 1;

        if i55 >= $i41 goto label14;

        $r199 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r200 = virtualinvoke $r199.<smetana.core.CArray: java.lang.Object get__(int)>(i55);

        $r201 = (h.ST_pointf) $r200;

        $d6 = $r201.<h.ST_pointf: double x>;

        $r202 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $i42 = i55 + 1;

        $r203 = virtualinvoke $r202.<smetana.core.CArray: java.lang.Object get__(int)>($i42);

        $r204 = (h.ST_pointf) $r203;

        $d7 = $r204.<h.ST_pointf: double x>;

        $b43 = $d6 cmpl $d7;

        if $b43 != 0 goto label14;

        $r205 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r206 = virtualinvoke $r205.<smetana.core.CArray: java.lang.Object get__(int)>(i55);

        $r207 = (h.ST_pointf) $r206;

        $d8 = $r207.<h.ST_pointf: double y>;

        $r208 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $i44 = i55 + 1;

        $r209 = virtualinvoke $r208.<smetana.core.CArray: java.lang.Object get__(int)>($i44);

        $r210 = (h.ST_pointf) $r209;

        $d9 = $r210.<h.ST_pointf: double y>;

        $b45 = $d8 cmpl $d9;

        if $b45 != 0 goto label14;

        goto label15;

     label14:
        $r223 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r224 = $r223.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r225 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i56 = $r225.<smetana.core.Z: int pnll>;

        $r226 = $r224[$i56];

        $r227 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r228 = virtualinvoke $r227.<smetana.core.CArray: java.lang.Object get__(int)>(i55);

        $r229 = (h.ST_pointf) $r228;

        $r226.<h.ST_pointnlink_t: h.ST_pointf pp> = $r229;

        $r230 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r231 = $r230.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r232 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i57 = $r232.<smetana.core.Z: int pnll>;

        $r233 = $r231[$i57];

        $r234 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r235 = $r234.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r236 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i58 = $r236.<smetana.core.Z: int pnll>;

        $i59 = r11.<h.ST_Ppoly_t: int pn>;

        $i60 = $i58 % $i59;

        $r237 = $r235[$i60];

        $r233.<h.ST_pointnlink_t: h.ST_pointnlink_t link> = $r237;

        $r238 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r239 = $r238.<smetana.core.Z: h.ST_pointnlink_t[] pnlps>;

        $r240 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i61 = $r240.<smetana.core.Z: int pnll>;

        $r241 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r242 = $r241.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r243 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i62 = $r243.<smetana.core.Z: int pnll>;

        $r244 = $r242[$i62];

        $r239[$i61] = $r244;

        $r245 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i63 = $r245.<smetana.core.Z: int pnll>;

        $i64 = $i63 + 1;

        $r245.<smetana.core.Z: int pnll> = $i64;

     label15:
        i55 = i55 + -1;

        goto label13;

     label16:
        i65 = 0;

     label17:
        $i12 = r11.<h.ST_Ppoly_t: int pn>;

        if i65 >= $i12 goto label20;

        if i65 <= 0 goto label18;

        $r187 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r188 = virtualinvoke $r187.<smetana.core.CArray: java.lang.Object get__(int)>(i65);

        $r189 = (h.ST_pointf) $r188;

        $d2 = $r189.<h.ST_pointf: double x>;

        $r190 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $i35 = i65 - 1;

        $r191 = virtualinvoke $r190.<smetana.core.CArray: java.lang.Object get__(int)>($i35);

        $r192 = (h.ST_pointf) $r191;

        $d3 = $r192.<h.ST_pointf: double x>;

        $b36 = $d2 cmpl $d3;

        if $b36 != 0 goto label18;

        $r193 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r194 = virtualinvoke $r193.<smetana.core.CArray: java.lang.Object get__(int)>(i65);

        $r195 = (h.ST_pointf) $r194;

        $d4 = $r195.<h.ST_pointf: double y>;

        $r196 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $i37 = i65 - 1;

        $r197 = virtualinvoke $r196.<smetana.core.CArray: java.lang.Object get__(int)>($i37);

        $r198 = (h.ST_pointf) $r197;

        $d5 = $r198.<h.ST_pointf: double y>;

        $b38 = $d4 cmpl $d5;

        if $b38 != 0 goto label18;

        goto label19;

     label18:
        $r246 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r247 = $r246.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r248 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i66 = $r248.<smetana.core.Z: int pnll>;

        $r249 = $r247[$i66];

        $r250 = r11.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        $r251 = virtualinvoke $r250.<smetana.core.CArray: java.lang.Object get__(int)>(i65);

        $r252 = (h.ST_pointf) $r251;

        $r249.<h.ST_pointnlink_t: h.ST_pointf pp> = $r252;

        $r253 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r254 = $r253.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r255 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i67 = $r255.<smetana.core.Z: int pnll>;

        $r256 = $r254[$i67];

        $r257 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r258 = $r257.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r259 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i68 = $r259.<smetana.core.Z: int pnll>;

        $i69 = r11.<h.ST_Ppoly_t: int pn>;

        $i70 = $i68 % $i69;

        $r260 = $r258[$i70];

        $r256.<h.ST_pointnlink_t: h.ST_pointnlink_t link> = $r260;

        $r261 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r262 = $r261.<smetana.core.Z: h.ST_pointnlink_t[] pnlps>;

        $r263 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i71 = $r263.<smetana.core.Z: int pnll>;

        $r264 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r265 = $r264.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r266 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i72 = $r266.<smetana.core.Z: int pnll>;

        $r267 = $r265[$i72];

        $r262[$i71] = $r267;

        $r268 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i73 = $r268.<smetana.core.Z: int pnll>;

        $i74 = $i73 + 1;

        $r268.<smetana.core.Z: int pnll> = $i74;

     label19:
        i65 = i65 + 1;

        goto label17;

     label20:
        $r31 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r32 = $r31.<smetana.core.Z: h.ST_pointnlink_t[] pnlps>;

        $r33 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i13 = $r33.<smetana.core.Z: int pnll>;

        staticinvoke <gen.lib.pathplan.shortest__c: void triangulate(h.ST_pointnlink_t[],int)>($r32, $i13);

        i75 = 0;

     label21:
        $r269 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i76 = $r269.<smetana.core.Z: int tril>;

        if i75 >= $i76 goto label24;

        i77 = i75 + 1;

     label22:
        $r186 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i34 = $r186.<smetana.core.Z: int tril>;

        if i77 >= $i34 goto label23;

        staticinvoke <gen.lib.pathplan.shortest__c: void connecttris(int,int)>(i75, i77);

        i77 = i77 + 1;

        goto label22;

     label23:
        i75 = i75 + 1;

        goto label21;

     label24:
        i78 = 0;

     label25:
        $r34 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i14 = $r34.<smetana.core.Z: int tril>;

        if i78 >= $i14 goto label27;

        $r184 = virtualinvoke r37.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r185 = (h.ST_pointf) $r184;

        $z5 = staticinvoke <gen.lib.pathplan.shortest__c: boolean pointintri(int,h.ST_pointf)>(i78, $r185);

        if $z5 == 0 goto label26;

        goto label27;

     label26:
        i78 = i78 + 1;

        goto label25;

     label27:
        $r35 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i15 = $r35.<smetana.core.Z: int tril>;

        if i78 != $i15 goto label28;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4ma3y8l4lmjcsw49kmsgknig6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8d9xfgejx5vgd6shva5wk5k06");

     label28:
        i16 = i78;

        i79 = 0;

     label29:
        $r270 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i80 = $r270.<smetana.core.Z: int tril>;

        if i79 >= $i80 goto label31;

        $r182 = virtualinvoke r37.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r183 = (h.ST_pointf) $r182;

        $z4 = staticinvoke <gen.lib.pathplan.shortest__c: boolean pointintri(int,h.ST_pointf)>(i79, $r183);

        if $z4 == 0 goto label30;

        goto label31;

     label30:
        i79 = i79 + 1;

        goto label29;

     label31:
        $r36 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i17 = $r36.<smetana.core.Z: int tril>;

        if i79 != $i17 goto label33;

        $r181 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r181.<java.io.PrintStream: void println(java.lang.String)>("libpath/%s:%d: %s\ngraphviz-2.38.0\\lib\\pathplan\\shortest.c26destination point not in any triangle");

     label32:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2gub5b19vo2qexn56nw23wage", "Pshortestpath");

        return -1;

     label33:
        $z0 = staticinvoke <gen.lib.pathplan.shortest__c: boolean marktripath(int,int)>(i16, i79);

        $z1 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z0);

        if $z1 == 0 goto label35;

        $r166 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r166.<java.io.PrintStream: void println(java.lang.String)>("libpath/%s:%d: %sgraphviz-2.38.0\\lib\\pathplan\\shortest.c26cannot find triangle path");

        staticinvoke <gen.lib.pathplan.shortest__c: void growops(int)>(2);

        r51.<h.ST_Ppoly_t: int pn> = 2;

        $r167 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r168 = $r167.<smetana.core.Z: smetana.core.CArray ops_shortest>;

        $r169 = virtualinvoke $r168.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r170 = (h.ST_pointf) $r169;

        $r171 = virtualinvoke r37.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r172 = (smetana.core.__struct__) $r171;

        virtualinvoke $r170.<h.ST_pointf: void ___(smetana.core.__struct__)>($r172);

        $r173 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r174 = $r173.<smetana.core.Z: smetana.core.CArray ops_shortest>;

        $r175 = virtualinvoke $r174.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r176 = (h.ST_pointf) $r175;

        $r177 = virtualinvoke r37.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r178 = (smetana.core.__struct__) $r177;

        virtualinvoke $r176.<h.ST_pointf: void ___(smetana.core.__struct__)>($r178);

        $r179 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r180 = $r179.<smetana.core.Z: smetana.core.CArray ops_shortest>;

        r51.<h.ST_Ppoly_t: smetana.core.CArray ps> = $r180;

     label34:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2gub5b19vo2qexn56nw23wage", "Pshortestpath");

        return 0;

     label35:
        if i16 != i79 goto label36;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2nnkwrdxg0ma2m482dqarlbz6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5penbn9ky80i7jw02belk2zoj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8i925e1tnbqn909027lqcg3fi");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3rcg6c9s9nmostq9c3r5n6x4h");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c9ckhc8veujmwcw0ar3u3zld4");

     label36:
        $r38 = $r6[0];

        $r39 = virtualinvoke r37.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r40 = (h.ST_pointf) $r39;

        $r38.<h.ST_pointnlink_t: h.ST_pointf pp> = $r40;

        $r41 = $r6[0];

        $r41.<h.ST_pointnlink_t: h.ST_pointnlink_t link> = null;

        $r42 = $r6[1];

        $r43 = virtualinvoke r37.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r44 = (h.ST_pointf) $r43;

        $r42.<h.ST_pointnlink_t: h.ST_pointf pp> = $r44;

        $r45 = $r6[1];

        $r45.<h.ST_pointnlink_t: h.ST_pointnlink_t link> = null;

        $r46 = $r6[0];

        staticinvoke <gen.lib.pathplan.shortest__c: void add2dq(int,h.ST_pointnlink_t)>(1, $r46);

        $r47 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r48 = $r47.<smetana.core.Z: h.ST_deque_t dq>;

        $r49 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r50 = $r49.<smetana.core.Z: h.ST_deque_t dq>;

        $i19 = $r50.<h.ST_deque_t: int fpnlpi>;

        $r48.<h.ST_deque_t: int apex> = $i19;

        i81 = i16;

     label37:
        if i81 == -1 goto label50;

        $r59 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r60 = $r59.<smetana.core.Z: smetana.core.CArray tris>;

        r61 = virtualinvoke $r60.<smetana.core.CArray: smetana.core.CArray plus_(int)>(i81);

        $r62 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r63 = (h.ST_triangle_t) $r62;

        $r63.<h.ST_triangle_t: int mark> = 2;

        i82 = 0;

     label38:
        if i82 >= 3 goto label40;

        $r154 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r155 = (h.ST_triangle_t) $r154;

        $r156 = $r155.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r157 = $r156[i82];

        $r158 = $r157.<h.ST_tedge_t: smetana.core.CArray rtp>;

        if $r158 == null goto label39;

        $r159 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r160 = (h.ST_triangle_t) $r159;

        $r161 = $r160.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r162 = $r161[i82];

        $r163 = $r162.<h.ST_tedge_t: smetana.core.CArray rtp>;

        $r164 = virtualinvoke $r163.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r165 = (h.ST_triangle_t) $r164;

        $i33 = $r165.<h.ST_triangle_t: int mark>;

        if $i33 != 1 goto label39;

        goto label40;

     label39:
        i82 = i82 + 1;

        goto label38;

     label40:
        if i82 != 3 goto label42;

        $r128 = virtualinvoke r37.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r129 = (h.ST_pointf) $r128;

        $r130 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r131 = $r130.<smetana.core.Z: h.ST_deque_t dq>;

        $r132 = $r131.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r133 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r134 = $r133.<smetana.core.Z: h.ST_deque_t dq>;

        $i28 = $r134.<h.ST_deque_t: int fpnlpi>;

        $r135 = $r132[$i28];

        $r136 = $r135.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r137 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r138 = $r137.<smetana.core.Z: h.ST_deque_t dq>;

        $r139 = $r138.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r140 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r141 = $r140.<smetana.core.Z: h.ST_deque_t dq>;

        $i29 = $r141.<h.ST_deque_t: int lpnlpi>;

        $r142 = $r139[$i29];

        $r143 = $r142.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i30 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r129, $r136, $r143);

        if $i30 != 1 goto label41;

        $r149 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r150 = $r149.<smetana.core.Z: h.ST_deque_t dq>;

        $r151 = $r150.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r152 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r153 = $r152.<smetana.core.Z: h.ST_deque_t dq>;

        $i32 = $r153.<h.ST_deque_t: int lpnlpi>;

        r221 = $r151[$i32];

        r222 = $r6[1];

        goto label44;

     label41:
        r221 = $r6[1];

        $r144 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r145 = $r144.<smetana.core.Z: h.ST_deque_t dq>;

        $r146 = $r145.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r147 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r148 = $r147.<smetana.core.Z: h.ST_deque_t dq>;

        $i31 = $r148.<h.ST_deque_t: int lpnlpi>;

        r222 = $r146[$i31];

        goto label44;

     label42:
        $r64 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r65 = (h.ST_triangle_t) $r64;

        $r66 = $r65.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $i20 = i82 + 1;

        $i21 = $i20 % 3;

        $r67 = $r66[$i21];

        r271 = $r67.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p>;

        $r68 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r69 = (h.ST_triangle_t) $r68;

        $r70 = $r69.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r71 = $r70[i82];

        $r72 = $r71.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p>;

        $r73 = $r72.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r74 = r271.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r75 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r76 = (h.ST_triangle_t) $r75;

        $r77 = $r76.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r78 = $r77[i82];

        $r79 = $r78.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p>;

        $r80 = $r79.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i22 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r73, $r74, $r80);

        if $i22 != 1 goto label43;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2cii65lhw4wb8nyvjv702v7md");

        goto label44;

     label43:
        $r81 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r82 = (h.ST_triangle_t) $r81;

        $r83 = $r82.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r84 = $r83[i82];

        r221 = $r84.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p>;

        $r85 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r86 = (h.ST_triangle_t) $r85;

        $r87 = $r86.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r88 = $r87[i82];

        r222 = $r88.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p>;

     label44:
        if i81 != i16 goto label45;

        staticinvoke <gen.lib.pathplan.shortest__c: void add2dq(int,h.ST_pointnlink_t)>(2, r221);

        staticinvoke <gen.lib.pathplan.shortest__c: void add2dq(int,h.ST_pointnlink_t)>(1, r222);

        goto label47;

     label45:
        $r89 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r90 = $r89.<smetana.core.Z: h.ST_deque_t dq>;

        $r91 = $r90.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r92 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r93 = $r92.<smetana.core.Z: h.ST_deque_t dq>;

        $i23 = $r93.<h.ST_deque_t: int fpnlpi>;

        $r94 = $r91[$i23];

        $z2 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r94, r222);

        if $z2 == 0 goto label46;

        $r118 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r119 = $r118.<smetana.core.Z: h.ST_deque_t dq>;

        $r120 = $r119.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r121 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r122 = $r121.<smetana.core.Z: h.ST_deque_t dq>;

        $i26 = $r122.<h.ST_deque_t: int lpnlpi>;

        $r123 = $r120[$i26];

        $z3 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r123, r222);

        if $z3 == 0 goto label46;

        i83 = staticinvoke <gen.lib.pathplan.shortest__c: int finddqsplit(h.ST_pointnlink_t)>(r222);

        staticinvoke <gen.lib.pathplan.shortest__c: void splitdq(int,int)>(2, i83);

        staticinvoke <gen.lib.pathplan.shortest__c: void add2dq(int,h.ST_pointnlink_t)>(1, r222);

        $r124 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r125 = $r124.<smetana.core.Z: h.ST_deque_t dq>;

        $i27 = $r125.<h.ST_deque_t: int apex>;

        if i83 <= $i27 goto label47;

        $r126 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r127 = $r126.<smetana.core.Z: h.ST_deque_t dq>;

        $r127.<h.ST_deque_t: int apex> = i83;

        goto label47;

     label46:
        i84 = staticinvoke <gen.lib.pathplan.shortest__c: int finddqsplit(h.ST_pointnlink_t)>(r221);

        staticinvoke <gen.lib.pathplan.shortest__c: void splitdq(int,int)>(1, i84);

        staticinvoke <gen.lib.pathplan.shortest__c: void add2dq(int,h.ST_pointnlink_t)>(2, r221);

        $r95 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r96 = $r95.<smetana.core.Z: h.ST_deque_t dq>;

        $i24 = $r96.<h.ST_deque_t: int apex>;

        if i84 >= $i24 goto label47;

        $r116 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r117 = $r116.<smetana.core.Z: h.ST_deque_t dq>;

        $r117.<h.ST_deque_t: int apex> = i84;

     label47:
        i81 = -1;

        i85 = 0;

     label48:
        if i85 >= 3 goto label37;

        $r97 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r98 = (h.ST_triangle_t) $r97;

        $r99 = $r98.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r100 = $r99[i85];

        $r101 = $r100.<h.ST_tedge_t: smetana.core.CArray rtp>;

        if $r101 == null goto label49;

        $r102 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r103 = (h.ST_triangle_t) $r102;

        $r104 = $r103.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r105 = $r104[i85];

        $r106 = $r105.<h.ST_tedge_t: smetana.core.CArray rtp>;

        $r107 = virtualinvoke $r106.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r108 = (h.ST_triangle_t) $r107;

        $i25 = $r108.<h.ST_triangle_t: int mark>;

        if $i25 != 1 goto label49;

        $r109 = virtualinvoke r61.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r110 = (h.ST_triangle_t) $r109;

        $r111 = $r110.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r112 = $r111[i85];

        $r113 = $r112.<h.ST_tedge_t: smetana.core.CArray rtp>;

        $r114 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r115 = $r114.<smetana.core.Z: smetana.core.CArray tris>;

        i81 = virtualinvoke $r113.<smetana.core.CArray: int minus_(smetana.core.CArray)>($r115);

        goto label37;

     label49:
        i85 = i85 + 1;

        goto label48;

     label50:
        i86 = 0;

        r272 = $r6[1];

     label51:
        if r272 == null goto label52;

        i86 = i86 + 1;

        r272 = r272.<h.ST_pointnlink_t: h.ST_pointnlink_t link>;

        goto label51;

     label52:
        staticinvoke <gen.lib.pathplan.shortest__c: void growops(int)>(i86);

        r51.<h.ST_Ppoly_t: int pn> = i86;

        i87 = i86 - 1;

        r273 = $r6[1];

     label53:
        if r273 == null goto label54;

        $r54 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r55 = $r54.<smetana.core.Z: smetana.core.CArray ops_shortest>;

        $r56 = virtualinvoke $r55.<smetana.core.CArray: java.lang.Object get__(int)>(i87);

        $r58 = (h.ST_pointf) $r56;

        $r57 = r273.<h.ST_pointnlink_t: h.ST_pointf pp>;

        virtualinvoke $r58.<h.ST_pointf: void ___(smetana.core.__struct__)>($r57);

        i87 = i87 + -1;

        r273 = r273.<h.ST_pointnlink_t: h.ST_pointnlink_t link>;

        goto label53;

     label54:
        $r52 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r53 = $r52.<smetana.core.Z: smetana.core.CArray ops_shortest>;

        r51.<h.ST_Ppoly_t: smetana.core.CArray ps> = $r53;

     label55:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2gub5b19vo2qexn56nw23wage", "Pshortestpath");

        return 0;

     label56:
        $r219 := @caughtexception;

     label57:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2gub5b19vo2qexn56nw23wage", "Pshortestpath");

        throw $r219;

        catch java.lang.Throwable from label01 to label02 with label56;
        catch java.lang.Throwable from label03 to label32 with label56;
        catch java.lang.Throwable from label33 to label34 with label56;
        catch java.lang.Throwable from label35 to label55 with label56;
        catch java.lang.Throwable from label56 to label57 with label56;
    }

    public static void triangulate(h.ST_pointnlink_t[], int)
    {
        java.lang.StringBuilder $r0, $r1, $r2;
        int i0, $i1, i2, $i3, i4, $i5, $i6, $i7, i8, i9;
        java.lang.String $r3;
        h.ST_pointnlink_t[] r4;
        h.ST_pointnlink_t $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        java.lang.IllegalStateException $r8;
        boolean $z0;
        java.lang.Throwable $r13;

        r4 := @parameter0: h.ST_pointnlink_t[];

        i0 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("73cr7m3mqvtuotpzrmaw2y8zm", "triangulate");

     label01:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("triangulate ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.JUtils: void LOG2(java.lang.String)>($r3);

        if i0 <= 3 goto label08;

        i8 = 0;

     label02:
        if i8 >= i0 goto label07;

        $i1 = i8 + 1;

        i2 = $i1 % i0;

        $i3 = i8 + 2;

        i4 = $i3 % i0;

        $z0 = staticinvoke <gen.lib.pathplan.shortest__c: boolean isdiagonal(int,int,h.ST_pointnlink_t[],int)>(i8, i4, r4, i0);

        if $z0 == 0 goto label06;

        $r11 = r4[i8];

        $r10 = r4[i2];

        $r9 = r4[i4];

        staticinvoke <gen.lib.pathplan.shortest__c: void loadtriangle(smetana.core.__ptr__,smetana.core.__ptr__,smetana.core.__ptr__)>($r11, $r10, $r9);

        i9 = i2;

     label03:
        $i5 = i0 - 1;

        if i9 >= $i5 goto label04;

        $i7 = i9 + 1;

        $r12 = r4[$i7];

        r4[i9] = $r12;

        i9 = i9 + 1;

        goto label03;

     label04:
        $i6 = i0 - 1;

        staticinvoke <gen.lib.pathplan.shortest__c: void triangulate(h.ST_pointnlink_t[],int)>(r4, $i6);

     label05:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73cr7m3mqvtuotpzrmaw2y8zm", "triangulate");

        return;

     label06:
        i8 = i8 + 1;

        goto label02;

     label07:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("libpath/%s:%d: %s\ngraphviz-2.38.0\\lib\\pathplan\\shortest.c26triangulation failed");

        throw $r8;

     label08:
        $r7 = r4[0];

        $r6 = r4[1];

        $r5 = r4[2];

        staticinvoke <gen.lib.pathplan.shortest__c: void loadtriangle(smetana.core.__ptr__,smetana.core.__ptr__,smetana.core.__ptr__)>($r7, $r6, $r5);

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73cr7m3mqvtuotpzrmaw2y8zm", "triangulate");

        goto label12;

     label10:
        $r13 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73cr7m3mqvtuotpzrmaw2y8zm", "triangulate");

        throw $r13;

     label12:
        return;

        catch java.lang.Throwable from label01 to label05 with label10;
        catch java.lang.Throwable from label06 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static boolean isdiagonal(int, int, h.ST_pointnlink_t[], int)
    {
        int i0, i1, $i2, i3, $i4, $i5, i6, $i7, i8, $i9, $i10, i11, $i12, $i13, i14;
        h.ST_pointnlink_t[] r0;
        h.ST_pointnlink_t $r1, $r2, $r3, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r21, $r22, $r23, $r27, $r28, $r29;
        h.ST_pointf $r4, $r5, $r6, $r10, $r11, $r12, $r17, $r18, $r19, $r20, $r24, $r25, $r26, $r30, $r31, $r32;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z7;
        java.lang.Throwable $r33;

        i0 := @parameter0: int;

        i8 := @parameter1: int;

        r0 := @parameter2: h.ST_pointnlink_t[];

        i1 := @parameter3: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("72of3cd7shtwokglxapw04oe9", "isdiagonal");

     label01:
        $i2 = i0 + 1;

        i3 = $i2 % i1;

        $i4 = i0 + i1;

        $i5 = $i4 - 1;

        i6 = $i5 % i1;

        $r1 = r0[i6];

        $r6 = $r1.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r2 = r0[i0];

        $r5 = $r2.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r3 = r0[i3];

        $r4 = $r3.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i7 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r6, $r5, $r4);

        if $i7 != 1 goto label04;

        $r21 = r0[i0];

        $r26 = $r21.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r22 = r0[i8];

        $r25 = $r22.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r23 = r0[i6];

        $r24 = $r23.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i12 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r26, $r25, $r24);

        if $i12 != 1 goto label02;

        $r27 = r0[i8];

        $r32 = $r27.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r28 = r0[i0];

        $r31 = $r28.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r29 = r0[i3];

        $r30 = $r29.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i13 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r32, $r31, $r30);

        if $i13 != 1 goto label02;

        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z3 = $z2;

        goto label07;

     label04:
        $r7 = r0[i0];

        $r12 = $r7.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r8 = r0[i8];

        $r11 = $r8.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r9 = r0[i3];

        $r10 = $r9.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i9 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r12, $r11, $r10);

        if $i9 != 2 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        z3 = $z4;

     label07:
        $z5 = staticinvoke <smetana.core.Macro: boolean N(boolean)>(z3);

        if $z5 == 0 goto label09;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("72of3cd7shtwokglxapw04oe9", "isdiagonal");

        return 0;

     label09:
        i14 = 0;

     label10:
        if i14 >= i1 goto label16;

        $i10 = i14 + 1;

        i11 = $i10 % i1;

        if i14 == i0 goto label11;

        if i11 == i0 goto label11;

        if i14 == i8 goto label11;

        if i11 != i8 goto label12;

     label11:
        $z7 = 1;

        goto label13;

     label12:
        $z7 = 0;

     label13:
        $z0 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z7);

        if $z0 == 0 goto label15;

        $r13 = r0[i0];

        $r20 = $r13.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r14 = r0[i8];

        $r19 = $r14.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r15 = r0[i14];

        $r18 = $r15.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r16 = r0[i11];

        $r17 = $r16.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $z1 = staticinvoke <gen.lib.pathplan.shortest__c: boolean intersects(h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r20, $r19, $r18, $r17);

        if $z1 == 0 goto label15;

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("72of3cd7shtwokglxapw04oe9", "isdiagonal");

        return 0;

     label15:
        i14 = i14 + 1;

        goto label10;

     label16:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("72of3cd7shtwokglxapw04oe9", "isdiagonal");

        return 1;

     label17:
        $r33 := @caughtexception;

     label18:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("72of3cd7shtwokglxapw04oe9", "isdiagonal");

        throw $r33;

        catch java.lang.Throwable from label01 to label08 with label17;
        catch java.lang.Throwable from label09 to label14 with label17;
        catch java.lang.Throwable from label15 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public static void loadtriangle(smetana.core.__ptr__, smetana.core.__ptr__, smetana.core.__ptr__)
    {
        smetana.core.Z $r0, $r1, $r2, $r4, $r57;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        smetana.core.CArray $r3, r5;
        java.lang.Object $r6, $r8, $r14, $r20, $r24, $r29, $r35, $r39, $r44, $r49, $r53;
        h.ST_triangle_t $r7, $r9, $r15, $r21, $r25, $r30, $r36, $r40, $r45, $r50, $r54;
        h.ST_tedge_t[] $r10, $r16, $r22, $r26, $r31, $r37, $r41, $r46, $r51, $r55;
        smetana.core.__ptr__ r11, r17, r32;
        h.ST_pointnlink_t $r12, $r18, $r27, $r33, $r42, $r47;
        h.ST_tedge_t $r13, $r19, $r23, $r28, $r34, $r38, $r43, $r48, $r52, $r56;
        java.lang.Throwable $r58;

        r11 := @parameter0: smetana.core.__ptr__;

        r17 := @parameter1: smetana.core.__ptr__;

        r32 := @parameter2: smetana.core.__ptr__;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7vf9jtj9i8rg0cxrstbqswuck", "loadtriangle");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r0.<smetana.core.Z: int tril>;

        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r1.<smetana.core.Z: int trin>;

        if $i0 < $i1 goto label2;

        $r57 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i4 = $r57.<smetana.core.Z: int trin>;

        $i5 = $i4 + 20;

        staticinvoke <gen.lib.pathplan.shortest__c: void growtris(int)>($i5);

     label2:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: smetana.core.CArray tris>;

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i2 = $r4.<smetana.core.Z: int tril>;

        $i3 = $i2 + 1;

        $r4.<smetana.core.Z: int tril> = $i3;

        r5 = virtualinvoke $r3.<smetana.core.CArray: smetana.core.CArray plus_(int)>($i2);

        $r6 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r7 = (h.ST_triangle_t) $r6;

        $r7.<h.ST_triangle_t: int mark> = 0;

        $r8 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r9 = (h.ST_triangle_t) $r8;

        $r10 = $r9.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r13 = $r10[0];

        $r12 = (h.ST_pointnlink_t) r11;

        $r13.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p> = $r12;

        $r14 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r15 = (h.ST_triangle_t) $r14;

        $r16 = $r15.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r19 = $r16[0];

        $r18 = (h.ST_pointnlink_t) r17;

        $r19.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p> = $r18;

        $r20 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r21 = (h.ST_triangle_t) $r20;

        $r22 = $r21.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r23 = $r22[0];

        $r23.<h.ST_tedge_t: smetana.core.CArray rtp> = null;

        $r24 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r25 = (h.ST_triangle_t) $r24;

        $r26 = $r25.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r28 = $r26[1];

        $r27 = (h.ST_pointnlink_t) r17;

        $r28.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p> = $r27;

        $r29 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r30 = (h.ST_triangle_t) $r29;

        $r31 = $r30.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r34 = $r31[1];

        $r33 = (h.ST_pointnlink_t) r32;

        $r34.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p> = $r33;

        $r35 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r36 = (h.ST_triangle_t) $r35;

        $r37 = $r36.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r38 = $r37[1];

        $r38.<h.ST_tedge_t: smetana.core.CArray rtp> = null;

        $r39 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r40 = (h.ST_triangle_t) $r39;

        $r41 = $r40.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r43 = $r41[2];

        $r42 = (h.ST_pointnlink_t) r32;

        $r43.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p> = $r42;

        $r44 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r45 = (h.ST_triangle_t) $r44;

        $r46 = $r45.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r48 = $r46[2];

        $r47 = (h.ST_pointnlink_t) r11;

        $r48.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p> = $r47;

        $r49 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r50 = (h.ST_triangle_t) $r49;

        $r51 = $r50.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r52 = $r51[2];

        $r52.<h.ST_tedge_t: smetana.core.CArray rtp> = null;

        i6 = 0;

     label3:
        if i6 >= 3 goto label4;

        $r53 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r54 = (h.ST_triangle_t) $r53;

        $r55 = $r54.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r56 = $r55[i6];

        $r56.<h.ST_tedge_t: smetana.core.CArray lrp> = r5;

        i6 = i6 + 1;

        goto label3;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7vf9jtj9i8rg0cxrstbqswuck", "loadtriangle");

        goto label7;

     label5:
        $r58 := @caughtexception;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7vf9jtj9i8rg0cxrstbqswuck", "loadtriangle");

        throw $r58;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void connecttris(int, int)
    {
        smetana.core.Z $r0, $r3;
        int i0, i1, i2, i3;
        smetana.core.CArray $r1, r2, $r4, r5;
        java.lang.Object $r6, $r12, $r18, $r24, $r30, $r36, $r42, $r46, $r50, $r56;
        h.ST_triangle_t $r7, $r13, $r19, $r25, $r31, $r37, $r43, $r47, $r51, $r57;
        h.ST_tedge_t[] $r8, $r14, $r20, $r26, $r32, $r38, $r44, $r48, $r52, $r58;
        h.ST_tedge_t $r9, $r15, $r21, $r27, $r33, $r39, $r45, $r49, $r53, $r59;
        h.ST_pointnlink_t $r10, $r16, $r22, $r28, $r34, $r40, $r54, $r60;
        h.ST_pointf $r11, $r17, $r23, $r29, $r35, $r41, $r55, $r61;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r62;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6coujw0qksrgu5sxj0r39qm1u", "connecttris");

     label01:
        i2 = 0;

     label02:
        if i2 >= 3 goto label08;

        i3 = 0;

     label03:
        if i3 >= 3 goto label07;

        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: smetana.core.CArray tris>;

        r2 = virtualinvoke $r1.<smetana.core.CArray: smetana.core.CArray plus_(int)>(i0);

        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = $r3.<smetana.core.Z: smetana.core.CArray tris>;

        r5 = virtualinvoke $r4.<smetana.core.CArray: smetana.core.CArray plus_(int)>(i1);

        $r6 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r7 = (h.ST_triangle_t) $r6;

        $r8 = $r7.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r9 = $r8[i2];

        $r10 = $r9.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p>;

        $r11 = $r10.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r12 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r13 = (h.ST_triangle_t) $r12;

        $r14 = $r13.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r15 = $r14[i3];

        $r16 = $r15.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p>;

        $r17 = $r16.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r11, $r17);

        if $z0 == 0 goto label04;

        $r50 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r51 = (h.ST_triangle_t) $r50;

        $r52 = $r51.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r53 = $r52[i2];

        $r54 = $r53.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p>;

        $r55 = $r54.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r56 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r57 = (h.ST_triangle_t) $r56;

        $r58 = $r57.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r59 = $r58[i3];

        $r60 = $r59.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p>;

        $r61 = $r60.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $z3 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r55, $r61);

        if $z3 != 0 goto label05;

     label04:
        $r18 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r19 = (h.ST_triangle_t) $r18;

        $r20 = $r19.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r21 = $r20[i2];

        $r22 = $r21.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p>;

        $r23 = $r22.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r24 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r25 = (h.ST_triangle_t) $r24;

        $r26 = $r25.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r27 = $r26[i3];

        $r28 = $r27.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p>;

        $r29 = $r28.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r23, $r29);

        if $z1 == 0 goto label06;

        $r30 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r31 = (h.ST_triangle_t) $r30;

        $r32 = $r31.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r33 = $r32[i2];

        $r34 = $r33.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p>;

        $r35 = $r34.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r36 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r37 = (h.ST_triangle_t) $r36;

        $r38 = $r37.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r39 = $r38[i3];

        $r40 = $r39.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p>;

        $r41 = $r40.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $z2 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r35, $r41);

        if $z2 == 0 goto label06;

     label05:
        $r42 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r43 = (h.ST_triangle_t) $r42;

        $r44 = $r43.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r45 = $r44[i2];

        $r45.<h.ST_tedge_t: smetana.core.CArray rtp> = r5;

        $r46 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r47 = (h.ST_triangle_t) $r46;

        $r48 = $r47.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r49 = $r48[i3];

        $r49.<h.ST_tedge_t: smetana.core.CArray rtp> = r2;

     label06:
        i3 = i3 + 1;

        goto label03;

     label07:
        i2 = i2 + 1;

        goto label02;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6coujw0qksrgu5sxj0r39qm1u", "connecttris");

        goto label11;

     label09:
        $r62 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6coujw0qksrgu5sxj0r39qm1u", "connecttris");

        throw $r62;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static boolean marktripath(int, int)
    {
        smetana.core.Z $r0, $r4, $r8, $r12, $r19, $r26;
        int i0, $i1, i2, $i3, i4;
        smetana.core.CArray $r1, $r5, $r9, $r13, $r18, $r20, $r25, $r27;
        java.lang.Object $r2, $r6, $r10, $r14, $r21;
        h.ST_triangle_t $r3, $r7, $r11, $r15, $r22;
        h.ST_tedge_t[] $r16, $r23;
        h.ST_tedge_t $r17, $r24;
        boolean $z0;
        java.lang.Throwable $r28;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3waxf5wy3mwt12wpg5hxg3o9c", "marktripath");

     label01:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: smetana.core.CArray tris>;

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r3 = (h.ST_triangle_t) $r2;

        $i1 = $r3.<h.ST_triangle_t: int mark>;

        if $i1 == 0 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3waxf5wy3mwt12wpg5hxg3o9c", "marktripath");

        return 0;

     label03:
        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: smetana.core.CArray tris>;

        $r6 = virtualinvoke $r5.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r7 = (h.ST_triangle_t) $r6;

        $r7.<h.ST_triangle_t: int mark> = 1;

        if i0 != i2 goto label05;

     label04:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3waxf5wy3mwt12wpg5hxg3o9c", "marktripath");

        return 1;

     label05:
        i4 = 0;

     label06:
        if i4 >= 3 goto label09;

        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r13 = $r12.<smetana.core.Z: smetana.core.CArray tris>;

        $r14 = virtualinvoke $r13.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r15 = (h.ST_triangle_t) $r14;

        $r16 = $r15.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r17 = $r16[i4];

        $r18 = $r17.<h.ST_tedge_t: smetana.core.CArray rtp>;

        if $r18 == null goto label08;

        $r19 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r20 = $r19.<smetana.core.Z: smetana.core.CArray tris>;

        $r21 = virtualinvoke $r20.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r22 = (h.ST_triangle_t) $r21;

        $r23 = $r22.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r24 = $r23[i4];

        $r25 = $r24.<h.ST_tedge_t: smetana.core.CArray rtp>;

        $r26 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r27 = $r26.<smetana.core.Z: smetana.core.CArray tris>;

        $i3 = virtualinvoke $r25.<smetana.core.CArray: int minus_(smetana.core.CArray)>($r27);

        $z0 = staticinvoke <gen.lib.pathplan.shortest__c: boolean marktripath(int,int)>($i3, i2);

        if $z0 == 0 goto label08;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3waxf5wy3mwt12wpg5hxg3o9c", "marktripath");

        return 1;

     label08:
        i4 = i4 + 1;

        goto label06;

     label09:
        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: smetana.core.CArray tris>;

        $r10 = virtualinvoke $r9.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r11 = (h.ST_triangle_t) $r10;

        $r11.<h.ST_triangle_t: int mark> = 0;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3waxf5wy3mwt12wpg5hxg3o9c", "marktripath");

        return 0;

     label11:
        $r28 := @caughtexception;

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3waxf5wy3mwt12wpg5hxg3o9c", "marktripath");

        throw $r28;

        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label04 with label11;
        catch java.lang.Throwable from label05 to label07 with label11;
        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static void add2dq(int, h.ST_pointnlink_t)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        smetana.core.Z $r0, $r2, $r4, $r6, $r8, $r11, $r14, $r17, $r20, $r22, $r24, $r26, $r28, $r31, $r33, $r36;
        h.ST_deque_t $r1, $r3, $r5, $r7, $r9, $r12, $r15, $r18, $r21, $r23, $r25, $r27, $r29, $r32, $r34, $r37;
        h.ST_pointnlink_t[] $r10, $r16, $r30, $r35;
        h.ST_pointnlink_t r13, $r19, $r38;
        java.lang.Throwable $r39;

        i0 := @parameter0: int;

        r13 := @parameter1: h.ST_pointnlink_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("44szdl31mg8mt5qrfj70kb2sn", "add2dq");

     label1:
        if i0 != 1 goto label3;

        $r20 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r21 = $r20.<smetana.core.Z: h.ST_deque_t dq>;

        $i8 = $r21.<h.ST_deque_t: int lpnlpi>;

        $r22 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r23 = $r22.<smetana.core.Z: h.ST_deque_t dq>;

        $i9 = $r23.<h.ST_deque_t: int fpnlpi>;

        $i10 = $i8 - $i9;

        if $i10 < 0 goto label2;

        $r33 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r34 = $r33.<smetana.core.Z: h.ST_deque_t dq>;

        $r35 = $r34.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r36 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r37 = $r36.<smetana.core.Z: h.ST_deque_t dq>;

        $i14 = $r37.<h.ST_deque_t: int fpnlpi>;

        $r38 = $r35[$i14];

        r13.<h.ST_pointnlink_t: h.ST_pointnlink_t link> = $r38;

     label2:
        $r24 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r25 = $r24.<smetana.core.Z: h.ST_deque_t dq>;

        $r26 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r27 = $r26.<smetana.core.Z: h.ST_deque_t dq>;

        $i11 = $r27.<h.ST_deque_t: int fpnlpi>;

        $i12 = $i11 - 1;

        $r25.<h.ST_deque_t: int fpnlpi> = $i12;

        $r28 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r29 = $r28.<smetana.core.Z: h.ST_deque_t dq>;

        $r30 = $r29.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r31 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r32 = $r31.<smetana.core.Z: h.ST_deque_t dq>;

        $i13 = $r32.<h.ST_deque_t: int fpnlpi>;

        $r30[$i13] = r13;

        goto label5;

     label3:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_deque_t dq>;

        $i1 = $r1.<h.ST_deque_t: int lpnlpi>;

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_deque_t dq>;

        $i2 = $r3.<h.ST_deque_t: int fpnlpi>;

        $i3 = $i1 - $i2;

        if $i3 < 0 goto label4;

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r15 = $r14.<smetana.core.Z: h.ST_deque_t dq>;

        $r16 = $r15.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r17 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r18 = $r17.<smetana.core.Z: h.ST_deque_t dq>;

        $i7 = $r18.<h.ST_deque_t: int lpnlpi>;

        $r19 = $r16[$i7];

        r13.<h.ST_pointnlink_t: h.ST_pointnlink_t link> = $r19;

     label4:
        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: h.ST_deque_t dq>;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r7 = $r6.<smetana.core.Z: h.ST_deque_t dq>;

        $i4 = $r7.<h.ST_deque_t: int lpnlpi>;

        $i5 = $i4 + 1;

        $r5.<h.ST_deque_t: int lpnlpi> = $i5;

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: h.ST_deque_t dq>;

        $r10 = $r9.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r11 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r12 = $r11.<smetana.core.Z: h.ST_deque_t dq>;

        $i6 = $r12.<h.ST_deque_t: int lpnlpi>;

        $r10[$i6] = r13;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("44szdl31mg8mt5qrfj70kb2sn", "add2dq");

        goto label7;

     label6:
        $r39 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("44szdl31mg8mt5qrfj70kb2sn", "add2dq");

        throw $r39;

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    public static void splitdq(int, int)
    {
        int i0, i1;
        smetana.core.Z $r0, $r2;
        h.ST_deque_t $r1, $r3;
        java.lang.Throwable $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("572sssdz1se16w790xceiy5vr", "splitdq");

     label1:
        if i0 != 1 goto label2;

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_deque_t dq>;

        $r3.<h.ST_deque_t: int lpnlpi> = i1;

        goto label3;

     label2:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_deque_t dq>;

        $r1.<h.ST_deque_t: int fpnlpi> = i1;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("572sssdz1se16w790xceiy5vr", "splitdq");

        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("572sssdz1se16w790xceiy5vr", "splitdq");

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static int finddqsplit(h.ST_pointnlink_t)
    {
        smetana.core.Z $r0, $r2, $r4, $r6, $r8, $r10, $r15, $r22, $r27;
        h.ST_deque_t $r1, $r3, $r5, $r7, $r9, $r11, $r16, $r23, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i8, i10;
        h.ST_pointnlink_t[] $r12, $r17, $r24, $r29;
        h.ST_pointnlink_t $r13, $r18, r19, $r25, $r30;
        h.ST_pointf $r14, $r20, $r21, $r26, $r31, $r32;
        java.lang.Throwable $r33;

        r19 := @parameter0: h.ST_pointnlink_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9dnrc8vqpffp5t3bmsackgqtl", "finddqsplit");

     label01:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_deque_t dq>;

        i6 = $r1.<h.ST_deque_t: int fpnlpi>;

     label02:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_deque_t dq>;

        $i0 = $r3.<h.ST_deque_t: int apex>;

        if i6 >= $i0 goto label05;

        $r22 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r23 = $r22.<smetana.core.Z: h.ST_deque_t dq>;

        $r24 = $r23.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $i4 = i6 + 1;

        $r25 = $r24[$i4];

        $r26 = $r25.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r27 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r28 = $r27.<smetana.core.Z: h.ST_deque_t dq>;

        $r29 = $r28.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r30 = $r29[i6];

        $r32 = $r30.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r31 = r19.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i5 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r26, $r32, $r31);

        if $i5 != 1 goto label04;

     label03:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9dnrc8vqpffp5t3bmsackgqtl", "finddqsplit");

        return i6;

     label04:
        i6 = i6 + 1;

        goto label02;

     label05:
        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: h.ST_deque_t dq>;

        i8 = $r5.<h.ST_deque_t: int lpnlpi>;

     label06:
        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r7 = $r6.<smetana.core.Z: h.ST_deque_t dq>;

        $i1 = $r7.<h.ST_deque_t: int apex>;

        if i8 <= $i1 goto label09;

        $r10 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r11 = $r10.<smetana.core.Z: h.ST_deque_t dq>;

        $r12 = $r11.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $i2 = i8 - 1;

        $r13 = $r12[$i2];

        $r14 = $r13.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r16 = $r15.<smetana.core.Z: h.ST_deque_t dq>;

        $r17 = $r16.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $r18 = $r17[i8];

        $r21 = $r18.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r20 = r19.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i3 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r14, $r21, $r20);

        if $i3 != 2 goto label08;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9dnrc8vqpffp5t3bmsackgqtl", "finddqsplit");

        return i8;

     label08:
        i8 = i8 + -1;

        goto label06;

     label09:
        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: h.ST_deque_t dq>;

        i10 = $r9.<h.ST_deque_t: int apex>;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9dnrc8vqpffp5t3bmsackgqtl", "finddqsplit");

        return i10;

     label11:
        $r33 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9dnrc8vqpffp5t3bmsackgqtl", "finddqsplit");

        throw $r33;

        catch java.lang.Throwable from label01 to label03 with label11;
        catch java.lang.Throwable from label04 to label07 with label11;
        catch java.lang.Throwable from label08 to label10 with label11;
    }

    public static int ccw(h.ST_pointf, h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, r1, r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14;
        byte $b0, $b1, $b3;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_pointf;

        r1 := @parameter1: h.ST_pointf;

        r2 := @parameter2: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("72h03s8inxtto2ekvmuqjtj3d", "ccw");

     label1:
        $d1 = r0.<h.ST_pointf: double y>;

        $d0 = r1.<h.ST_pointf: double y>;

        $d5 = $d1 - $d0;

        $d3 = r2.<h.ST_pointf: double x>;

        $d2 = r1.<h.ST_pointf: double x>;

        $d4 = $d3 - $d2;

        $d13 = $d5 * $d4;

        $d7 = r2.<h.ST_pointf: double y>;

        $d6 = r1.<h.ST_pointf: double y>;

        $d11 = $d7 - $d6;

        $d9 = r0.<h.ST_pointf: double x>;

        $d8 = r1.<h.ST_pointf: double x>;

        $d10 = $d9 - $d8;

        $d12 = $d11 * $d10;

        d14 = $d13 - $d12;

        $b0 = d14 cmpl 0.0;

        if $b0 <= 0 goto label2;

        $b3 = 1;

        goto label4;

     label2:
        $b1 = d14 cmpg 0.0;

        if $b1 >= 0 goto label3;

        $b3 = 2;

        goto label4;

     label3:
        $b3 = 3;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("72h03s8inxtto2ekvmuqjtj3d", "ccw");

        return $b3;

     label5:
        $r3 := @caughtexception;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("72h03s8inxtto2ekvmuqjtj3d", "ccw");

        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean intersects(h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i8, $i10, $i12, $i13;
        boolean $z0, $z1, $z2, $z3, $z5;
        byte b5, b7, b9, $b14, $b15, $b16, $b17;
        java.lang.Throwable $r4;

        r0 := @parameter0: h.ST_pointf;

        r1 := @parameter1: h.ST_pointf;

        r2 := @parameter2: h.ST_pointf;

        r3 := @parameter3: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("22a9ajg9t8ovqsigk3tyu3rkd", "intersects");

     label01:
        $i0 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r0, r1, r2);

        if $i0 == 3 goto label02;

        $i1 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r0, r1, r3);

        if $i1 == 3 goto label02;

        $i2 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r2, r3, r0);

        if $i2 == 3 goto label02;

        $i3 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r2, r3, r1);

        if $i3 != 3 goto label04;

     label02:
        $z3 = staticinvoke <gen.lib.pathplan.shortest__c: boolean between(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r0, r1, r2);

        if $z3 != 0 goto label03;

        $z0 = staticinvoke <gen.lib.pathplan.shortest__c: boolean between(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r0, r1, r3);

        if $z0 != 0 goto label03;

        $z1 = staticinvoke <gen.lib.pathplan.shortest__c: boolean between(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r2, r3, r0);

        if $z1 != 0 goto label03;

        $z2 = staticinvoke <gen.lib.pathplan.shortest__c: boolean between(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r2, r3, r1);

        if $z2 == 0 goto label15;

     label03:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("22a9ajg9t8ovqsigk3tyu3rkd", "intersects");

        return 1;

     label04:
        $i4 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r0, r1, r2);

        if $i4 != 1 goto label05;

        $b14 = 1;

        goto label06;

     label05:
        $b14 = 0;

     label06:
        b5 = $b14;

        $i6 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r0, r1, r3);

        if $i6 != 1 goto label07;

        $b15 = 1;

        goto label08;

     label07:
        $b15 = 0;

     label08:
        b7 = $b15;

        $i8 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r2, r3, r0);

        if $i8 != 1 goto label09;

        $b16 = 1;

        goto label10;

     label09:
        $b16 = 0;

     label10:
        b9 = $b16;

        $i10 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r2, r3, r1);

        if $i10 != 1 goto label11;

        $b17 = 1;

        goto label12;

     label11:
        $b17 = 0;

     label12:
        $i12 = b5 ^ b7;

        if $i12 == 0 goto label13;

        $i13 = b9 ^ $b17;

        if $i13 == 0 goto label13;

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("22a9ajg9t8ovqsigk3tyu3rkd", "intersects");

        return $z5;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("22a9ajg9t8ovqsigk3tyu3rkd", "intersects");

        return 0;

     label16:
        $r4 := @caughtexception;

     label17:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("22a9ajg9t8ovqsigk3tyu3rkd", "intersects");

        throw $r4;

        catch java.lang.Throwable from label01 to label03 with label16;
        catch java.lang.Throwable from label04 to label14 with label16;
        catch java.lang.Throwable from label15 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static boolean between(h.ST_pointf, h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf $r0, $r2, r4, r5, r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32;
        int $i0;
        byte $b1, $b2;
        java.lang.Throwable $r7;
        boolean $z1;

        r5 := @parameter0: h.ST_pointf;

        r4 := @parameter1: h.ST_pointf;

        r6 := @parameter2: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("uh5n18rzyevtb4cwpni70qpc", "between");

     label1:
        $r0 = new h.ST_pointf;

        specialinvoke $r0.<h.ST_pointf: void <init>()>();

        $r2 = new h.ST_pointf;

        specialinvoke $r2.<h.ST_pointf: void <init>()>();

        $d1 = r4.<h.ST_pointf: double x>;

        $d0 = r5.<h.ST_pointf: double x>;

        $d2 = $d1 - $d0;

        $r0.<h.ST_pointf: double x> = $d2;

        $d4 = r4.<h.ST_pointf: double y>;

        $d3 = r5.<h.ST_pointf: double y>;

        $d5 = $d4 - $d3;

        $r0.<h.ST_pointf: double y> = $d5;

        $d7 = r6.<h.ST_pointf: double x>;

        $d6 = r5.<h.ST_pointf: double x>;

        $d8 = $d7 - $d6;

        $r2.<h.ST_pointf: double x> = $d8;

        $d10 = r6.<h.ST_pointf: double y>;

        $d9 = r5.<h.ST_pointf: double y>;

        $d11 = $d10 - $d9;

        $r2.<h.ST_pointf: double y> = $d11;

        $i0 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r5, r4, r6);

        if $i0 == 3 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("uh5n18rzyevtb4cwpni70qpc", "between");

        return 0;

     label3:
        $d13 = $r2.<h.ST_pointf: double x>;

        $d12 = $r0.<h.ST_pointf: double x>;

        $d17 = $d13 * $d12;

        $d15 = $r2.<h.ST_pointf: double y>;

        $d14 = $r0.<h.ST_pointf: double y>;

        $d16 = $d15 * $d14;

        $d18 = $d17 + $d16;

        $b1 = $d18 cmpl 0.0;

        if $b1 < 0 goto label4;

        $d20 = $r2.<h.ST_pointf: double x>;

        $d19 = $r2.<h.ST_pointf: double x>;

        $d24 = $d20 * $d19;

        $d22 = $r2.<h.ST_pointf: double y>;

        $d21 = $r2.<h.ST_pointf: double y>;

        $d23 = $d22 * $d21;

        $d32 = $d24 + $d23;

        $d26 = $r0.<h.ST_pointf: double x>;

        $d25 = $r0.<h.ST_pointf: double x>;

        $d30 = $d26 * $d25;

        $d28 = $r0.<h.ST_pointf: double y>;

        $d27 = $r0.<h.ST_pointf: double y>;

        $d29 = $d28 * $d27;

        $d31 = $d30 + $d29;

        $b2 = $d32 cmpg $d31;

        if $b2 > 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("uh5n18rzyevtb4cwpni70qpc", "between");

        return $z1;

     label6:
        $r7 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("uh5n18rzyevtb4cwpni70qpc", "between");

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static boolean pointintri(int, h.ST_pointf)
    {
        smetana.core.Z $r0, $r8;
        int i0, $i1, i2, i3;
        smetana.core.CArray $r1, $r9;
        java.lang.Object $r2, $r10;
        h.ST_triangle_t $r3, $r11;
        h.ST_tedge_t[] $r4, $r12;
        h.ST_tedge_t $r5, $r13;
        h.ST_pointnlink_t $r6, $r14;
        h.ST_pointf $r7, r15, $r16;
        java.lang.Throwable $r17;
        boolean $z1;

        i0 := @parameter0: int;

        r15 := @parameter1: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("zti1mzm2m7tr2xwnbf7e8u3d", "pointintri");

     label1:
        i2 = 0;

        i3 = 0;

     label2:
        if i2 >= 3 goto label4;

        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: smetana.core.CArray tris>;

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r3 = (h.ST_triangle_t) $r2;

        $r4 = $r3.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r5 = $r4[i2];

        $r6 = $r5.<h.ST_tedge_t: h.ST_pointnlink_t pnl0p>;

        $r7 = $r6.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: smetana.core.CArray tris>;

        $r10 = virtualinvoke $r9.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r11 = (h.ST_triangle_t) $r10;

        $r12 = $r11.<h.ST_triangle_t: h.ST_tedge_t[] e>;

        $r13 = $r12[i2];

        $r14 = $r13.<h.ST_tedge_t: h.ST_pointnlink_t pnl1p>;

        $r16 = $r14.<h.ST_pointnlink_t: h.ST_pointf pp>;

        $i1 = staticinvoke <gen.lib.pathplan.shortest__c: int ccw(h.ST_pointf,h.ST_pointf,h.ST_pointf)>($r7, $r16, r15);

        if $i1 == 2 goto label3;

        i3 = i3 + 1;

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        if i3 == 3 goto label5;

        if i3 != 0 goto label6;

     label5:
        $z1 = 1;

        goto label7;

     label6:
        $z1 = 0;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("zti1mzm2m7tr2xwnbf7e8u3d", "pointintri");

        return $z1;

     label8:
        $r17 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("zti1mzm2m7tr2xwnbf7e8u3d", "pointintri");

        throw $r17;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static void growpnls(int)
    {
        int i0, $i1;
        smetana.core.Z $r0, $r1, $r3, $r4, $r7, $r8, $r15, $r17, $r25;
        h.ST_pointnlink_t[] $r2, $r5, $r6, $r9, $r10, $r16, $r18;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable $r23;

        i0 := @parameter0: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("85wstb60jkjd0kbh9tyninm4h", "growpnls");

     label01:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r0.<smetana.core.Z: int pnln>;

        if i0 > $i1 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("85wstb60jkjd0kbh9tyninm4h", "growpnls");

        return;

     label03:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r2);

        if $z0 == 0 goto label05;

        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r16 = staticinvoke <gen.lib.pathplan.shortest__c: h.ST_pointnlink_t[] malloc(int)>(i0);

        $r15.<smetana.core.Z: h.ST_pointnlink_t[] pnls> = $r16;

        $z3 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r16);

        if $z3 == 0 goto label04;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9zyfc4bjg3i6rrna9vqf8doys");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

     label04:
        $r17 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r18 = staticinvoke <gen.lib.pathplan.shortest__c: h.ST_pointnlink_t[] malloc(int)>(i0);

        $r17.<smetana.core.Z: h.ST_pointnlink_t[] pnlps> = $r18;

        $z4 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r18);

        if $z4 == 0 goto label07;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1etar0wd2cbbvqo4jnmbvjiz4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

        goto label07;

     label05:
        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: h.ST_pointnlink_t[] pnls>;

        $r6 = staticinvoke <gen.lib.pathplan.shortest__c: h.ST_pointnlink_t[] realloc(h.ST_pointnlink_t[],int)>($r5, i0);

        $r3.<smetana.core.Z: h.ST_pointnlink_t[] pnls> = $r6;

        $z1 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r6);

        if $z1 == 0 goto label06;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("105nogpkt0qqut0yu4alvkk1u");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

     label06:
        $r7 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: h.ST_pointnlink_t[] pnlps>;

        $r10 = staticinvoke <gen.lib.pathplan.shortest__c: h.ST_pointnlink_t[] realloc(h.ST_pointnlink_t[],int)>($r9, i0);

        $r7.<smetana.core.Z: h.ST_pointnlink_t[] pnlps> = $r10;

        $z2 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r10);

        if $z2 == 0 goto label07;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("be84alh84ub40x4um989aj20d");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

     label07:
        $r25 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r25.<smetana.core.Z: int pnln> = i0;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("85wstb60jkjd0kbh9tyninm4h", "growpnls");

        goto label10;

     label09:
        $r23 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("85wstb60jkjd0kbh9tyninm4h", "growpnls");

        throw $r23;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label08 with label09;
    }

    private static h.ST_pointnlink_t[] malloc(int)
    {
        int i0, $i1, i2;
        h.ST_pointnlink_t[] r0;
        h.ST_pointnlink_t $r1;

        i0 := @parameter0: int;

        r0 = newarray (h.ST_pointnlink_t)[i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r1 = new h.ST_pointnlink_t;

        specialinvoke $r1.<h.ST_pointnlink_t: void <init>()>();

        r0[i2] = $r1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static h.ST_pointnlink_t[] realloc(h.ST_pointnlink_t[], int)
    {
        h.ST_pointnlink_t[] r0, r1;
        int i0, $i1, $i2, i3;
        h.ST_pointnlink_t $r2;

        r0 := @parameter0: h.ST_pointnlink_t[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if $i1 < i0 goto label1;

        return r0;

     label1:
        r1 = staticinvoke <gen.lib.pathplan.shortest__c: h.ST_pointnlink_t[] malloc(int)>(i0);

        i3 = 0;

     label2:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label3;

        $r2 = r0[i3];

        r1[i3] = $r2;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static void growtris(int)
    {
        int i0, $i1;
        smetana.core.Z $r0, $r1, $r3, $r4, $r9, $r15;
        smetana.core.CArray $r2, $r5, $r6, $r10;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r13;

        i0 := @parameter0: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("c5q8ult6w26jppe5ifzgcoq82", "growtris");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r0.<smetana.core.Z: int trin>;

        if i0 > $i1 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c5q8ult6w26jppe5ifzgcoq82", "growtris");

        return;

     label3:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: smetana.core.CArray tris>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r10 = staticinvoke <smetana.core.CArray: smetana.core.CArray ALLOC__(int,java.lang.Class)>(i0, class "Lh/ST_triangle_t;");

        $r9.<smetana.core.Z: smetana.core.CArray tris> = $r10;

        $z2 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r10);

        if $z2 == 0 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5782e28cjpaa3dpf8up4zmtq7");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

        goto label5;

     label4:
        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: smetana.core.CArray tris>;

        $r6 = staticinvoke <smetana.core.CArray: smetana.core.CArray REALLOC__(int,smetana.core.CArray,java.lang.Class)>(i0, $r5, class "Lh/ST_triangle_t;");

        $r3.<smetana.core.Z: smetana.core.CArray tris> = $r6;

        $z1 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r6);

        if $z1 == 0 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d3fgu54pn5tydfhn7z73v73ra");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

     label5:
        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r15.<smetana.core.Z: int trin> = i0;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c5q8ult6w26jppe5ifzgcoq82", "growtris");

        goto label8;

     label7:
        $r13 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c5q8ult6w26jppe5ifzgcoq82", "growtris");

        throw $r13;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
    }

    private static h.ST_triangle_t[] malloc2(int)
    {
        int i0, $i1, i2;
        h.ST_triangle_t[] r0;
        h.ST_triangle_t $r1;

        i0 := @parameter0: int;

        r0 = newarray (h.ST_triangle_t)[i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r1 = new h.ST_triangle_t;

        specialinvoke $r1.<h.ST_triangle_t: void <init>()>();

        r0[i2] = $r1;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static h.ST_triangle_t[] realloc2(h.ST_triangle_t[], int)
    {
        h.ST_triangle_t[] r0, r1;
        int i0, $i1, $i2, i3;
        h.ST_triangle_t $r2;

        r0 := @parameter0: h.ST_triangle_t[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if $i1 < i0 goto label1;

        return r0;

     label1:
        r1 = staticinvoke <gen.lib.pathplan.shortest__c: h.ST_triangle_t[] malloc2(int)>(i0);

        i3 = 0;

     label2:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label3;

        $r2 = r0[i3];

        r1[i3] = $r2;

        i3 = i3 + 1;

        goto label2;

     label3:
        return r1;
    }

    public static void growdq(int)
    {
        int i0, $i1;
        smetana.core.Z $r0, $r2, $r5, $r9, $r15;
        h.ST_deque_t $r1, $r3, $r6, $r10, $r16;
        h.ST_pointnlink_t[] $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable $r13;

        i0 := @parameter0: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bzym9u6dtatii1vp4hcmofc80", "growdq");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_deque_t dq>;

        $i1 = $r1.<h.ST_deque_t: int pnlpn>;

        if i0 > $i1 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bzym9u6dtatii1vp4hcmofc80", "growdq");

        return;

     label3:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_deque_t dq>;

        $r4 = $r3.<h.ST_deque_t: h.ST_pointnlink_t[] pnlps>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r4);

        if $z0 == 0 goto label4;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r10 = $r9.<smetana.core.Z: h.ST_deque_t dq>;

        $z3 = virtualinvoke $r10.<h.ST_deque_t: boolean malloc(int)>(i0);

        $z4 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z3);

        if $z4 == 0 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("88fwpb40wz9jc8jiz7u032s4t");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

        goto label5;

     label4:
        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r6 = $r5.<smetana.core.Z: h.ST_deque_t dq>;

        $z1 = virtualinvoke $r6.<h.ST_deque_t: boolean realloc(int)>(i0);

        $z2 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z1);

        if $z2 == 0 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("exqx4ck7h15m8whgip6xpnhoo");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

     label5:
        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r16 = $r15.<smetana.core.Z: h.ST_deque_t dq>;

        $r16.<h.ST_deque_t: int pnlpn> = i0;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bzym9u6dtatii1vp4hcmofc80", "growdq");

        goto label8;

     label7:
        $r13 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bzym9u6dtatii1vp4hcmofc80", "growdq");

        throw $r13;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
    }

    public static void growops(int)
    {
        int i0, $i1;
        smetana.core.Z $r0, $r1, $r3, $r4, $r9, $r15;
        smetana.core.CArray $r2, $r5, $r6, $r10;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r13;

        i0 := @parameter0: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("d7vtt8xqxbdnx9kwtt1zzof75", "growops");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r0.<smetana.core.Z: int opn_shortest>;

        if i0 > $i1 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d7vtt8xqxbdnx9kwtt1zzof75", "growops");

        return;

     label3:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: smetana.core.CArray ops_shortest>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r10 = staticinvoke <smetana.core.CArray: smetana.core.CArray ALLOC__(int,java.lang.Class)>(i0, class "Lh/ST_pointf;");

        $r9.<smetana.core.Z: smetana.core.CArray ops_shortest> = $r10;

        $z2 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r10);

        if $z2 == 0 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7wxgcgah7iy6vetj5yszoq4k4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

        goto label5;

     label4:
        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: smetana.core.CArray ops_shortest>;

        $r6 = staticinvoke <smetana.core.CArray: smetana.core.CArray REALLOC__(int,smetana.core.CArray,java.lang.Class)>(i0, $r5, class "Lh/ST_pointf;");

        $r3.<smetana.core.Z: smetana.core.CArray ops_shortest> = $r6;

        $z1 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r6);

        if $z1 == 0 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7azrdo5s3kc44taqmtmeu1s33");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

     label5:
        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r15.<smetana.core.Z: int opn_shortest> = i0;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d7vtt8xqxbdnx9kwtt1zzof75", "growops");

        goto label8;

     label7:
        $r13 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d7vtt8xqxbdnx9kwtt1zzof75", "growops");

        throw $r13;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
    }

    static void <clinit>()
    {
        smetana.core.jmp_buf $r0;

        $r0 = new smetana.core.jmp_buf;

        specialinvoke $r0.<smetana.core.jmp_buf: void <init>()>();

        <gen.lib.pathplan.shortest__c: smetana.core.jmp_buf jbuf> = $r0;

        return;
    }
}
