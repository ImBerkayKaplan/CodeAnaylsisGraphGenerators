public class net.sourceforge.plantuml.statediagram.StateDiagram extends net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram
{
    private static final java.lang.String CONCURRENT_PREFIX;
    private boolean hideEmptyDescription;
    static final boolean $assertionsDisabled;

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.UmlDiagramType $r4;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType STATE>;

        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean hideEmptyDescription> = 0;

        return;
    }

    public boolean checkConcurrentStateOk(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        boolean $z0, z1, $z2;
        net.sourceforge.plantuml.cucadiagram.Code r1;
        net.sourceforge.plantuml.cucadiagram.Ident r2;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $z2 = specialinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean checkConcurrentStateOkInternal1972(net.sourceforge.plantuml.cucadiagram.Ident)>(r2);

        return $z2;

     label1:
        z1 = specialinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean checkConcurrentStateOkInternal(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

        return z1;
    }

    private boolean checkConcurrentStateOkInternal(net.sourceforge.plantuml.cucadiagram.Code)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Code r1;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r2;
        net.sourceforge.plantuml.cucadiagram.IGroup $r3, $r6, $r9, $r10, $r11, $r12;
        net.sourceforge.plantuml.cucadiagram.GroupType $r4, $r5, $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Code;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeaf(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r5 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r4 != $r5 goto label2;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r12 = interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if $r11 == $r12 goto label2;

        return 0;

     label2:
        $r6 = interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r8 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r7 != $r8 goto label3;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r10 = interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if $r9 == $r10 goto label3;

        return 0;

     label3:
        return 1;
    }

    private boolean checkConcurrentStateOkInternal1972(net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r2;
        net.sourceforge.plantuml.cucadiagram.IGroup $r3, $r6, $r9, $r10, $r11, $r12;
        net.sourceforge.plantuml.cucadiagram.GroupType $r4, $r5, $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        r2 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r5 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r4 != $r5 goto label2;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r12 = interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if $r11 == $r12 goto label2;

        return 0;

     label2:
        $r6 = interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r8 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r7 != $r8 goto label3;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r10 = interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if $r9 == $r10 goto label3;

        return 0;

     label3:
        return 1;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r4;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.Code r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        net.sourceforge.plantuml.cucadiagram.LeafType r5, $r10, $r16;
        net.sourceforge.plantuml.graphic.USymbol r6;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r7, $r11, r12, $r17;
        java.lang.String $r8, $r9, $r15, $r24;
        net.sourceforge.plantuml.cucadiagram.IGroup $r13, $r18;
        java.lang.IllegalArgumentException $r14, $r19;
        java.lang.IllegalStateException $r20;
        java.lang.StringBuilder $r21, $r22, $r23;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r5 := @parameter2: net.sourceforge.plantuml.cucadiagram.LeafType;

        r6 := @parameter3: net.sourceforge.plantuml.graphic.USymbol;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (net.sourceforge.plantuml.cucadiagram.Ident) $r2;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean checkConcurrentStateOk(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code)>($r4, r3);

        if $z0 != 0 goto label1;

        $r20 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Concurrent State ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label1:
        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z1 != 0 goto label4;

        if r5 != null goto label4;

        $r15 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $z5 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("[*]");

        if $z5 == 0 goto label2;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r19;

     label2:
        $z6 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean isGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r3);

        if $z6 == 0 goto label3;

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r3);

        return $r18;

     label3:
        $r16 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STATE>;

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r3, $r16, null);

        return $r17;

     label4:
        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z2 == 0 goto label8;

        if r5 != null goto label8;

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("[*]");

        if $z3 == 0 goto label5;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r14;

     label5:
        $z4 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean isGroupVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        if $z4 == 0 goto label6;

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        return $r13;

     label6:
        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: java.lang.String getNamespaceSeparator()>();

        if $r9 != null goto label7;

        r12 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        if r12 == null goto label7;

        return r12;

     label7:
        $r10 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STATE>;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r3, $r10, null);

        return $r11;

     label8:
        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r3, r5, r6);

        return $r7;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getStart()
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, r14;
        net.sourceforge.plantuml.cucadiagram.LeafType $r7, $r9;
        net.sourceforge.plantuml.cucadiagram.IEntity $r8, $r10;
        net.sourceforge.plantuml.cucadiagram.Ident r11, r15;
        net.sourceforge.plantuml.cucadiagram.Code $r12, $r16;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>(r1);

        if $z0 == 0 goto label3;

        r11 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>("*start");

        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z2 == 0 goto label1;

        $r12 = r11;

        goto label2;

     label1:
        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>("*start");

     label2:
        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CIRCLE_START>;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r11, $r12, $r9, null);

        return $r10;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*start*");

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: java.lang.String getCodeGetName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r15 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r14);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z1 == 0 goto label4;

        $r16 = r15;

        goto label5;

     label4:
        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r14);

     label5:
        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CIRCLE_START>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r15, $r16, $r7, null);

        return $r8;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getEnd()
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, r14;
        net.sourceforge.plantuml.cucadiagram.LeafType $r7, $r9;
        net.sourceforge.plantuml.cucadiagram.IEntity $r8, $r10;
        net.sourceforge.plantuml.cucadiagram.Ident r11, r15;
        net.sourceforge.plantuml.cucadiagram.Code $r12, $r16;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>(r1);

        if $z0 == 0 goto label3;

        r11 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>("*end");

        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z2 == 0 goto label1;

        $r12 = r11;

        goto label2;

     label1:
        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>("*end");

     label2:
        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CIRCLE_END>;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r11, $r12, $r9, null);

        return $r10;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*end*");

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: java.lang.String getCodeGetName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r14 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r15 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r14);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z1 == 0 goto label4;

        $r16 = r15;

        goto label5;

     label4:
        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r14);

     label5:
        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CIRCLE_END>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r15, $r16, $r7, null);

        return $r8;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getHistorical()
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, r13;
        net.sourceforge.plantuml.cucadiagram.LeafType $r7, $r9;
        net.sourceforge.plantuml.cucadiagram.IEntity $r8, $r10;
        net.sourceforge.plantuml.cucadiagram.Ident r11, r14;
        net.sourceforge.plantuml.cucadiagram.Code r12, $r15;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>(r1);

        if $z0 == 0 goto label1;

        r11 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>("*historical");

        r12 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>("*historical");

        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType PSEUDO_STATE>;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r11, r12, $r9, null);

        return $r10;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*historical*");

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: java.lang.String getCodeGetName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r13);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z1 == 0 goto label2;

        $r15 = r14;

        goto label3;

     label2:
        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r13);

     label3:
        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType PSEUDO_STATE>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r14, $r15, $r7, null);

        return $r8;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getHistorical(java.lang.String)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        java.lang.String r1, $r11, r13;
        net.sourceforge.plantuml.cucadiagram.Ident r2, r14;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Display $r4;
        net.sourceforge.plantuml.cucadiagram.GroupType $r5;
        net.sourceforge.plantuml.cucadiagram.IGroup $r6, r8;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r7;
        java.lang.StringBuilder $r9, $r10, $r12;
        net.sourceforge.plantuml.cucadiagram.LeafType $r16;
        net.sourceforge.plantuml.cucadiagram.IEntity r17;
        net.sourceforge.plantuml.cucadiagram.Code $r18, $r19;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r18 = r2;

        goto label2;

     label1:
        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r1);

     label2:
        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>($r18);

        $r5 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType STATE>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()>();

        $r7 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r2, $r18, $r4, $r5, $r6, $r7);

        r8 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*historical*");

        $r11 = interfaceinvoke r8.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r13);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z1 == 0 goto label3;

        $r19 = r14;

        goto label4;

     label3:
        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r13);

     label4:
        $r16 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType PSEUDO_STATE>;

        r17 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r14, $r19, $r16, null);

        virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: void endGroup()>();

        return r17;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getDeepHistory()
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        boolean $z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, r13;
        net.sourceforge.plantuml.cucadiagram.LeafType $r7, $r9;
        net.sourceforge.plantuml.cucadiagram.IEntity $r8, $r10;
        net.sourceforge.plantuml.cucadiagram.Ident r11, r14;
        net.sourceforge.plantuml.cucadiagram.Code r12, $r15;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>(r1);

        if $z0 == 0 goto label1;

        r11 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>("*deephistory");

        r12 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>("*deephistory");

        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DEEP_HISTORY>;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r11, r12, $r9, null);

        return $r10;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*deephistory*");

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: java.lang.String getCodeGetName()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r13 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r13);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z1 == 0 goto label2;

        $r15 = r14;

        goto label3;

     label2:
        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r13);

     label3:
        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DEEP_HISTORY>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r14, $r15, $r7, null);

        return $r8;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getDeepHistory(java.lang.String)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        java.lang.String r1, $r11, r13;
        net.sourceforge.plantuml.cucadiagram.Ident r2, r14;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Display $r4;
        net.sourceforge.plantuml.cucadiagram.GroupType $r5;
        net.sourceforge.plantuml.cucadiagram.IGroup $r6, r8;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r7;
        java.lang.StringBuilder $r9, $r10, $r12;
        net.sourceforge.plantuml.cucadiagram.LeafType $r16;
        net.sourceforge.plantuml.cucadiagram.IEntity r17;
        net.sourceforge.plantuml.cucadiagram.Code $r18, $r19;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r18 = r2;

        goto label2;

     label1:
        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r1);

     label2:
        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>($r18);

        $r5 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType STATE>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()>();

        $r7 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r2, $r18, $r4, $r5, $r6, $r7);

        r8 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*deephistory*");

        $r11 = interfaceinvoke r8.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r13);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z1 == 0 goto label3;

        $r19 = r14;

        goto label4;

     label3:
        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r13);

     label4:
        $r16 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType DEEP_HISTORY>;

        r17 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r14, $r19, $r16, null);

        virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: void endGroup()>();

        return r17;
    }

    public boolean concurrentState(char)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1, $r8, r10, $r19, $r23;
        boolean $z0, $z1, $z2, $z3;
        char c0;
        java.lang.String r2, r13;
        net.sourceforge.plantuml.cucadiagram.Ident r3, r14;
        java.lang.CharSequence[] $r5, $r16;
        net.sourceforge.plantuml.cucadiagram.Display $r6, $r17;
        net.sourceforge.plantuml.cucadiagram.GroupType $r7, $r11, $r12, $r18, $r21, $r22;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r9, $r20;
        net.sourceforge.plantuml.cucadiagram.Code $r24, $r25;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        c0 := @parameter0: char;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>(r1);

        if $z0 != 0 goto label1;

        $r21 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r22 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r21 != $r22 goto label1;

        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void endGroup()>();

     label1:
        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        interfaceinvoke $r23.<net.sourceforge.plantuml.cucadiagram.IGroup: void setConcurrentSeparator(char)>(c0);

        r2 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: java.lang.String getString(java.lang.String)>("CONC");

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        $z3 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z3 == 0 goto label2;

        $r24 = r3;

        goto label3;

     label2:
        $r24 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

     label3:
        $r5 = newarray (java.lang.CharSequence)[1];

        $r5[0] = "";

        $r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r5);

        $r7 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r9 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r3, $r24, $r6, $r7, $r8, $r9);

        r10 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $z1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>(r1);

        if $z1 != 0 goto label6;

        $r11 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r12 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType STATE>;

        if $r11 != $r12 goto label6;

        interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: void moveEntitiesTo(net.sourceforge.plantuml.cucadiagram.IGroup)>(r10);

        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void endGroup()>();

        r13 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: java.lang.String getString(java.lang.String)>("CONC");

        r14 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r13);

        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z2 == 0 goto label4;

        $r25 = r14;

        goto label5;

     label4:
        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r13);

     label5:
        $r16 = newarray (java.lang.CharSequence)[1];

        $r16[0] = "";

        $r17 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r16);

        $r18 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r20 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r14, $r25, $r17, $r18, $r19, $r20);

     label6:
        return 1;
    }

    public void endGroup()
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.GroupType $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>(r1);

        if $z0 != 0 goto label1;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r3 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r2 != $r3 goto label1;

        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void endGroup()>();

     label1:
        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void endGroup()>();

        return;
    }

    public final void setHideEmptyDescription(boolean)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean hideEmptyDescription> = z0;

        return;
    }

    public final boolean isHideEmptyDescriptionForState()
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        $z0 = r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean hideEmptyDescription>;

        return $z0;
    }

    public java.lang.String checkFinalError()
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.String $r3, $r13, $r17, $r20;
        java.lang.Object $r4;
        net.sourceforge.plantuml.cucadiagram.Link r5;
        net.sourceforge.plantuml.cucadiagram.IEntity $r6, $r8, $r12, $r16;
        net.sourceforge.plantuml.cucadiagram.IGroup r7, r9;
        java.lang.StringBuilder $r10, $r11, $r14, $r15, $r18, $r19;

        r0 := @this: net.sourceforge.plantuml.statediagram.StateDiagram;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: java.util.List getLinks()>();

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.cucadiagram.Link) $r4;

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        r7 = staticinvoke <net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupParentIfItIsConcurrentState(net.sourceforge.plantuml.cucadiagram.IEntity)>($r6);

        $r8 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        r9 = staticinvoke <net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupParentIfItIsConcurrentState(net.sourceforge.plantuml.cucadiagram.IEntity)>($r8);

        $z1 = staticinvoke <net.sourceforge.plantuml.statediagram.StateDiagram: boolean isCompatible(net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.IGroup)>(r7, r9);

        if $z1 != 0 goto label2;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("State within concurrent state cannot be linked out of this concurrent state (between ");

        $r12 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" and ");

        $r16 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;

     label2:
        goto label1;

     label3:
        $r3 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: java.lang.String checkFinalError()>();

        return $r3;
    }

    private static boolean isCompatible(net.sourceforge.plantuml.cucadiagram.IGroup, net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.IGroup r0, r1;
        boolean $z0, $z1;
        java.lang.AssertionError $r2;
        byte $b0, $b1;
        int $i2;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.IGroup;

        if r0 != null goto label01;

        if r1 != null goto label01;

        return 1;

     label01:
        if r0 == null goto label02;

        $b0 = 1;

        goto label03;

     label02:
        $b0 = 0;

     label03:
        if r1 == null goto label04;

        $b1 = 1;

        goto label05;

     label04:
        $b1 = 0;

     label05:
        $i2 = $b0 ^ $b1;

        if $i2 == 0 goto label06;

        return 0;

     label06:
        $z0 = <net.sourceforge.plantuml.statediagram.StateDiagram: boolean $assertionsDisabled>;

        if $z0 != 0 goto label08;

        if r0 == null goto label07;

        if r1 != null goto label08;

     label07:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label08:
        if r0 != r1 goto label09;

        $z1 = 1;

        goto label10;

     label09:
        $z1 = 0;

     label10:
        return $z1;
    }

    private static net.sourceforge.plantuml.cucadiagram.IGroup getGroupParentIfItIsConcurrentState(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.IEntity r0;
        net.sourceforge.plantuml.cucadiagram.GroupType $r1, $r2;
        net.sourceforge.plantuml.cucadiagram.IGroup r3;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        r3 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

     label1:
        if r3 == null goto label3;

        $r1 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r2 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r1 != $r2 goto label2;

        return r3;

     label2:
        r3 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <net.sourceforge.plantuml.statediagram.StateDiagram: java.lang.String CONCURRENT_PREFIX> = "CONC";

        $r0 = class "Lnet/sourceforge/plantuml/statediagram/StateDiagram;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.statediagram.StateDiagram: boolean $assertionsDisabled> = $z1;

        return;
    }
}
