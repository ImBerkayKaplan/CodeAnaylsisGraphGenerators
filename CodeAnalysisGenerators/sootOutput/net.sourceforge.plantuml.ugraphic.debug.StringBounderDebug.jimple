public class net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug extends net.sourceforge.plantuml.graphic.StringBounderRaw
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.StringBounderRaw: void <init>()>();

        return;
    }

    protected net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.ugraphic.UFont, java.lang.String)
    {
        java.util.Random $r0;
        java.lang.String r1;
        long $l0;
        double $d0, $d1, d2, d3, $d5, $d6, d7;
        net.sourceforge.plantuml.ugraphic.UFont r3;
        int $i1;
        net.sourceforge.plantuml.Dimension2DDouble $r4;
        net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug r5;

        r5 := @this: net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.util.Random;

        $l0 = staticinvoke <net.sourceforge.plantuml.StringUtils: long seed(java.lang.String)>(r1);

        specialinvoke $r0.<java.util.Random: void <init>(long)>($l0);

        $d0 = virtualinvoke $r0.<java.util.Random: double nextDouble()>();

        $d1 = 0.5 * $d0;

        d2 = 0.8 + $d1;

        d3 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UFont: double getSize2D()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        $d5 = (double) $i1;

        $d6 = d3 * $d5;

        d7 = $d6 * d2;

        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d7, d3);

        return $r4;
    }

    public double getDescent(net.sourceforge.plantuml.ugraphic.UFont, java.lang.String)
    {
        net.sourceforge.plantuml.ugraphic.UFont r0;
        double $d0, d1;
        net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug r1;
        java.lang.String r2;

        r1 := @this: net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        r2 := @parameter1: java.lang.String;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UFont: double getSize2D()>();

        d1 = $d0 / 4.5;

        return d1;
    }
}
