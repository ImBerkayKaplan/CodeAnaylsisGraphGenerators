class net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2 extends net.sourceforge.plantuml.command.CommandMultilines2
{
    final net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand this$0;

    void <init>(net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand, net.sourceforge.plantuml.command.regex.IRegex, net.sourceforge.plantuml.command.MultilinesStrategy)
    {
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2 r0;
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand r1;
        net.sourceforge.plantuml.command.regex.IRegex r2;
        net.sourceforge.plantuml.command.MultilinesStrategy r3;

        r0 := @this: net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2;

        r1 := @parameter0: net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand;

        r2 := @parameter1: net.sourceforge.plantuml.command.regex.IRegex;

        r3 := @parameter2: net.sourceforge.plantuml.command.MultilinesStrategy;

        r0.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2: net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.command.CommandMultilines2: void <init>(net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy)>(r2, r3);

        return;
    }

    public java.lang.String getPatternEnd()
    {
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2 r0;

        r0 := @this: net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2;

        return "^[%s]*end[%s]?note$";
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2 r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.StringLocated $r2, $r3;
        java.lang.String $r4;
        net.sourceforge.plantuml.command.regex.RegexResult r5;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r6;
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand $r7;
        net.sourceforge.plantuml.command.CommandExecutionResult $r8;
        net.sourceforge.plantuml.command.BlocLines r9, r10, r11;

        r0 := @this: net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2;

        r6 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r9 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2: net.sourceforge.plantuml.command.regex.IRegex getStartingPattern()>();

        $r2 = virtualinvoke r9.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.StringLocated getFirst()>();

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r5 = interfaceinvoke $r1.<net.sourceforge.plantuml.command.regex.IRegex: net.sourceforge.plantuml.command.regex.RegexResult matcher(java.lang.String)>($r4);

        r10 = virtualinvoke r9.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines subExtract(int,int)>(1, 1);

        r11 = virtualinvoke r10.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines removeEmptyColumns()>();

        $r7 = r0.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2: net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand this$0>;

        $r8 = staticinvoke <net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand: net.sourceforge.plantuml.command.CommandExecutionResult access$000(net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand,net.sourceforge.plantuml.sequencediagram.SequenceDiagram,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.command.BlocLines)>($r7, r6, r5, r11);

        return $r8;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2 r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r3 = (net.sourceforge.plantuml.sequencediagram.SequenceDiagram) r1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand$2: net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.sequencediagram.SequenceDiagram,net.sourceforge.plantuml.command.BlocLines)>($r3, r2);

        return $r4;
    }
}
