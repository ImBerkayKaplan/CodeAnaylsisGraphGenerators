public abstract class net.sourceforge.plantuml.timingdiagram.Player extends java.lang.Object implements net.sourceforge.plantuml.timingdiagram.TimeProjected
{
    protected final net.sourceforge.plantuml.ISkinParam skinParam;
    protected final net.sourceforge.plantuml.timingdiagram.TimingRuler ruler;
    private final boolean compact;
    private final net.sourceforge.plantuml.cucadiagram.Display title;
    protected int suggestedHeight;

    public void <init>(java.lang.String, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.timingdiagram.TimingRuler, boolean)
    {
        net.sourceforge.plantuml.timingdiagram.Player r0;
        net.sourceforge.plantuml.ISkinParam r1;
        boolean z0;
        net.sourceforge.plantuml.timingdiagram.TimingRuler r2;
        java.lang.String r3;
        net.sourceforge.plantuml.cucadiagram.Display $r4;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Player;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter2: net.sourceforge.plantuml.timingdiagram.TimingRuler;

        z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.Player: boolean compact> = z0;

        r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler> = r2;

        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r3);

        r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.cucadiagram.Display title> = $r4;

        return;
    }

    public boolean isCompact()
    {
        net.sourceforge.plantuml.timingdiagram.Player r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Player;

        $z0 = r0.<net.sourceforge.plantuml.timingdiagram.Player: boolean compact>;

        return $z0;
    }

    protected abstract net.sourceforge.plantuml.style.StyleSignature getStyleSignature();

    protected abstract net.sourceforge.plantuml.graphic.SymbolContext getContextLegacy();

    protected final net.sourceforge.plantuml.style.Style getStyle()
    {
        net.sourceforge.plantuml.timingdiagram.Player r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style $r4;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Player;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        return $r4;
    }

    protected final net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()
    {
        boolean $z0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r0, $r11;
        net.sourceforge.plantuml.timingdiagram.Player r1;
        net.sourceforge.plantuml.style.SName[] $r2;
        net.sourceforge.plantuml.style.SName $r3, $r4, $r5;
        net.sourceforge.plantuml.ISkinParam $r6, $r8, $r13;
        net.sourceforge.plantuml.style.StyleSignature $r7;
        net.sourceforge.plantuml.style.StyleBuilder $r9;
        net.sourceforge.plantuml.style.Style $r10;
        net.sourceforge.plantuml.FontParam $r12;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.Player;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r11 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r13 = r1.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r12 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam TIMING>;

        specialinvoke $r11.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r13, $r12, null);

        return $r11;

     label1:
        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r6 = r1.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r2 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r2[0] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r2[1] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timingDiagram>;

        $r2[2] = $r5;

        $r7 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r2);

        $r8 = r1.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r10 = virtualinvoke $r7.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r9);

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r6, $r10);

        return $r0;
    }

    protected final net.sourceforge.plantuml.ugraphic.UStroke getStroke()
    {
        net.sourceforge.plantuml.timingdiagram.Player r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style r4;
        net.sourceforge.plantuml.ugraphic.UStroke $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Player;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        return $r5;
    }

    protected final net.sourceforge.plantuml.graphic.SymbolContext getContext()
    {
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.Player r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r7, $r9, $r14, $r16;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style r4;
        net.sourceforge.plantuml.style.PName $r5, $r12;
        net.sourceforge.plantuml.style.Value $r6, $r13;
        net.sourceforge.plantuml.api.ThemeStyle $r8, $r15;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r10, $r17;
        net.sourceforge.plantuml.ugraphic.color.HColor r11, r18;
        net.sourceforge.plantuml.graphic.SymbolContext $r19, $r21, $r22;
        net.sourceforge.plantuml.ugraphic.UStroke $r20;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Player;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.graphic.SymbolContext getContextLegacy()>();

        return $r22;

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        $r5 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r5);

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r11 = interfaceinvoke $r6.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r8, $r10);

        $r12 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r13 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r12);

        $r14 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r16 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r18 = interfaceinvoke $r13.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r15, $r17);

        $r19 = new net.sourceforge.plantuml.graphic.SymbolContext;

        specialinvoke $r19.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>(r18, r11);

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r21 = virtualinvoke $r19.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r20);

        return $r21;
    }

    protected final net.sourceforge.plantuml.graphic.TextBlock getTitle()
    {
        net.sourceforge.plantuml.timingdiagram.Player r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r4;
        net.sourceforge.plantuml.graphic.TextBlock $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Player;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.cucadiagram.Display title>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r4 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r5 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r2, $r4, $r3);

        return $r5;
    }

    public abstract void addNote(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.command.Position);

    public abstract void defineState(java.lang.String, java.lang.String);

    public abstract transient void setState(net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String, net.sourceforge.plantuml.graphic.color.Colors, java.lang.String[]);

    public abstract void createConstraint(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String);

    public abstract net.sourceforge.plantuml.graphic.TextBlock getPart1(double, double);

    public abstract net.sourceforge.plantuml.graphic.UDrawable getPart2();

    public abstract double getFullHeight(net.sourceforge.plantuml.graphic.StringBounder);

    public final void setHeight(int)
    {
        net.sourceforge.plantuml.timingdiagram.Player r0;
        int i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Player;

        i0 := @parameter0: int;

        r0.<net.sourceforge.plantuml.timingdiagram.Player: int suggestedHeight> = i0;

        return;
    }
}
