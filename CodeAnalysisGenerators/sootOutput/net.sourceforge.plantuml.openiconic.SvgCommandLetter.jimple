public class net.sourceforge.plantuml.openiconic.SvgCommandLetter extends java.lang.Object implements net.sourceforge.plantuml.openiconic.SvgCommand
{
    private final char letter;

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.openiconic.SvgCommandLetter r0;
        java.lang.String r1;
        boolean $z0;
        char $c0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>("[mlhvzsacMLHVZSAC]");

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label1:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        r0.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter> = $c0;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        net.sourceforge.plantuml.openiconic.SvgCommandLetter r2;
        char $c0;
        java.lang.String $r4;

        r2 := @this: net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $c0 = r2.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String toSvg()
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        net.sourceforge.plantuml.openiconic.SvgCommandLetter r2;
        char $c0;
        java.lang.String $r4;

        r2 := @this: net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c0 = r2.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public int argumentNumber()
    {
        net.sourceforge.plantuml.openiconic.SvgCommandLetter r0;
        char $c0, $c1, $c2;
        java.lang.UnsupportedOperationException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        $c0 = r0.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        $c1 = staticinvoke <net.sourceforge.plantuml.StringUtils: char goLowerCase(char)>($c0);

        tableswitch($c1)
        {
            case 97: goto label6;
            case 98: goto label7;
            case 99: goto label4;
            case 100: goto label7;
            case 101: goto label7;
            case 102: goto label7;
            case 103: goto label7;
            case 104: goto label2;
            case 105: goto label7;
            case 106: goto label7;
            case 107: goto label7;
            case 108: goto label1;
            case 109: goto label1;
            case 110: goto label7;
            case 111: goto label7;
            case 112: goto label7;
            case 113: goto label7;
            case 114: goto label7;
            case 115: goto label5;
            case 116: goto label7;
            case 117: goto label7;
            case 118: goto label2;
            case 119: goto label7;
            case 120: goto label7;
            case 121: goto label7;
            case 122: goto label3;
            default: goto label7;
        };

     label1:
        return 2;

     label2:
        return 1;

     label3:
        return 0;

     label4:
        return 6;

     label5:
        return 4;

     label6:
        return 7;

     label7:
        $r1 = new java.lang.UnsupportedOperationException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c2 = r0.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    public boolean isUpperCase()
    {
        net.sourceforge.plantuml.openiconic.SvgCommandLetter r0;
        char $c0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        $c0 = r0.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c0);

        return $z0;
    }

    public boolean is(char)
    {
        net.sourceforge.plantuml.openiconic.SvgCommandLetter r0;
        char c0, $c1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        c0 := @parameter0: char;

        $c1 = r0.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        if $c1 != c0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public char getLetter()
    {
        net.sourceforge.plantuml.openiconic.SvgCommandLetter r0;
        char $c0;

        r0 := @this: net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        $c0 = r0.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        return $c0;
    }

    public net.sourceforge.plantuml.openiconic.SvgCommandLetter implicit()
    {
        net.sourceforge.plantuml.openiconic.SvgCommandLetter r0, $r1, $r2;
        char $c0, $c1;

        r0 := @this: net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        $c0 = r0.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        if $c0 != 109 goto label1;

        $r2 = new net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        specialinvoke $r2.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: void <init>(java.lang.String)>("l");

        return $r2;

     label1:
        $c1 = r0.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: char letter>;

        if $c1 != 77 goto label2;

        $r1 = new net.sourceforge.plantuml.openiconic.SvgCommandLetter;

        specialinvoke $r1.<net.sourceforge.plantuml.openiconic.SvgCommandLetter: void <init>(java.lang.String)>("L");

        return $r1;

     label2:
        return r0;
    }
}
