abstract class net.sourceforge.plantuml.real.RealLine$AbstractAbsolute extends java.lang.Object implements net.sourceforge.plantuml.real.Real
{
    final net.sourceforge.plantuml.real.RealLine this$0;

    void <init>(net.sourceforge.plantuml.real.RealLine)
    {
        net.sourceforge.plantuml.real.RealLine$AbstractAbsolute r0;
        net.sourceforge.plantuml.real.RealLine r1;

        r0 := @this: net.sourceforge.plantuml.real.RealLine$AbstractAbsolute;

        r1 := @parameter0: net.sourceforge.plantuml.real.RealLine;

        r0.<net.sourceforge.plantuml.real.RealLine$AbstractAbsolute: net.sourceforge.plantuml.real.RealLine this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void printCreationStackTrace()
    {
        net.sourceforge.plantuml.real.RealLine$AbstractAbsolute r0;

        r0 := @this: net.sourceforge.plantuml.real.RealLine$AbstractAbsolute;

        return;
    }

    public java.lang.String getName()
    {
        net.sourceforge.plantuml.real.RealLine$AbstractAbsolute r0;
        java.lang.Class $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.real.RealLine$AbstractAbsolute;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        return $r2;
    }

    public net.sourceforge.plantuml.real.Real addFixed(double)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.real.RealLine$AbstractAbsolute r1;
        double d0;

        r1 := @this: net.sourceforge.plantuml.real.RealLine$AbstractAbsolute;

        d0 := @parameter0: double;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public net.sourceforge.plantuml.real.Real addAtLeast(double)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.real.RealLine$AbstractAbsolute r1;
        double d0;

        r1 := @this: net.sourceforge.plantuml.real.RealLine$AbstractAbsolute;

        d0 := @parameter0: double;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void ensureBiggerThan(net.sourceforge.plantuml.real.Real)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.real.RealLine$AbstractAbsolute r1;
        net.sourceforge.plantuml.real.Real r2;

        r1 := @this: net.sourceforge.plantuml.real.RealLine$AbstractAbsolute;

        r2 := @parameter0: net.sourceforge.plantuml.real.Real;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public net.sourceforge.plantuml.real.Real getMaxAbsolute()
    {
        net.sourceforge.plantuml.real.RealLine$AbstractAbsolute r0;
        net.sourceforge.plantuml.real.RealLine $r1;
        net.sourceforge.plantuml.real.Real $r2;

        r0 := @this: net.sourceforge.plantuml.real.RealLine$AbstractAbsolute;

        $r1 = r0.<net.sourceforge.plantuml.real.RealLine$AbstractAbsolute: net.sourceforge.plantuml.real.RealLine this$0>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.real.RealLine: net.sourceforge.plantuml.real.Real asMaxAbsolute()>();

        return $r2;
    }

    public net.sourceforge.plantuml.real.Real getMinAbsolute()
    {
        net.sourceforge.plantuml.real.RealLine$AbstractAbsolute r0;
        net.sourceforge.plantuml.real.RealLine $r1;
        net.sourceforge.plantuml.real.Real $r2;

        r0 := @this: net.sourceforge.plantuml.real.RealLine$AbstractAbsolute;

        $r1 = r0.<net.sourceforge.plantuml.real.RealLine$AbstractAbsolute: net.sourceforge.plantuml.real.RealLine this$0>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.real.RealLine: net.sourceforge.plantuml.real.Real asMinAbsolute()>();

        return $r2;
    }
}
