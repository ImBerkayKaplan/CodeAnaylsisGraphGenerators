class net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream extends java.lang.Thread
{
    private volatile java.io.InputStream streamToRead;
    private volatile java.io.OutputStream redirection;
    private volatile java.lang.StringBuffer sb;
    static final boolean $assertionsDisabled;
    final net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0;

    void <init>(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner, java.io.InputStream, java.io.OutputStream)
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream r0;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner r1;
        java.lang.StringBuffer $r2;
        java.io.InputStream r3;
        java.io.OutputStream r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner;

        r3 := @parameter1: java.io.InputStream;

        r4 := @parameter2: java.io.OutputStream;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.StringBuffer sb> = $r2;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.io.InputStream streamToRead> = r3;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.io.OutputStream redirection> = r4;

        return;
    }

    public java.lang.String getString()
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream r0;
        java.lang.StringBuffer $r1, $r2;
        java.lang.String $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.StringBuffer sb>;

        if $r1 != null goto label1;

        return "";

     label1:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.StringBuffer sb>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public void cancel()
    {
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream r0;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner $r1, $r4, $r8;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessState $r2, $r3, $r5, $r6, $r9;
        java.lang.AssertionError $r7;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream;

        $z0 = <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$000(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState TIMEOUT()>();

        $z1 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.dot.ProcessState: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$000(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r4);

        $r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState RUNNING()>();

        $z2 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.dot.ProcessState: boolean equals(java.lang.Object)>($r6);

        if $z2 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r9 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$000(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r8);

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>($r9);

        throw $r7;

     label1:
        virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void interrupt()>();

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.StringBuffer sb> = null;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.io.InputStream streamToRead> = null;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.io.OutputStream redirection> = null;

        return;
    }

    public void run()
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream r0;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner $r1;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessState $r2, $r3;
        boolean $z0;
        java.io.OutputStream $r4, $r5;
        char $c0;
        java.lang.StringBuffer $r6, $r15, $r17;
        java.lang.Throwable $r8;
        java.lang.StringBuilder $r10, $r12, $r13;
        java.io.PrintStream $r11;
        java.lang.String $r14, $r18;
        java.io.InputStream $r20;
        int $i1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream;

     label1:
        $r20 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.io.InputStream streamToRead>;

        $i1 = virtualinvoke $r20.<java.io.InputStream: int read()>();

        if $i1 == -1 goto label5;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$000(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState TIMEOUT()>();

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.dot.ProcessState: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

     label2:
        return;

     label3:
        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.io.OutputStream redirection>;

        if $r4 != null goto label4;

        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.StringBuffer sb>;

        $c0 = (char) $i1;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        goto label1;

     label4:
        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.io.OutputStream redirection>;

        virtualinvoke $r5.<java.io.OutputStream: void write(int)>($i1);

        goto label1;

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        $r11 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ProcessRunnerA ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

        virtualinvoke $r8.<java.lang.Throwable: void printStackTrace()>();

        $r15 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.StringBuffer sb>;

        virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r17 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.StringBuffer sb>;

        $r18 = virtualinvoke $r8.<java.lang.Throwable: java.lang.String toString()>();

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/cucadiagram/dot/ProcessRunner;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: boolean $assertionsDisabled> = $z1;

        return;
    }
}
