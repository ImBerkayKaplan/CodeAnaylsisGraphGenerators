public class net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.ClipContainer r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r1;

        r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r2;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UText, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.svg.SvgGraphics)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r1;
        net.sourceforge.plantuml.ugraphic.UClip r2;
        net.sourceforge.plantuml.ugraphic.UText r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r20, $r22, r42, r44, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        net.sourceforge.plantuml.ugraphic.UFont r6;
        net.sourceforge.plantuml.graphic.FontStyle $r7, $r8, $r9, $r11, $r35, $r37;
        net.sourceforge.plantuml.graphic.StringBounder $r10, $r30;
        double d0, d1, d2, $d4, $d5, d6, d7;
        net.sourceforge.plantuml.svg.SvgGraphics r12;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r13;
        java.lang.String $r14, $r15, $r17, $r19, $r21, $r23, r24, $r29, r33, r34, r36, r38, r39, r41;
        net.sourceforge.plantuml.ugraphic.UFontContext $r16;
        int $i0;
        java.util.Map $r18;
        char $c1;
        java.lang.StringBuilder $r25, $r26, $r27, $r28;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r31, r40;
        net.sourceforge.plantuml.ugraphic.UParam r32;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r43;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UText;

        d6 := @parameter1: double;

        d2 := @parameter2: double;

        r13 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r32 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r12 := @parameter5: net.sourceforge.plantuml.svg.SvgGraphics;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r2 == null goto label01;

        $z9 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(double,double)>(d6, d2);

        if $z9 != 0 goto label01;

        return;

     label01:
        r4 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UText: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: boolean isTransparent(net.sourceforge.plantuml.ugraphic.color.HColor)>($r5);

        if $z0 == 0 goto label02;

        return;

     label02:
        r6 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        r33 = null;

        $r7 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle BOLD>;

        $z1 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: boolean containsStyle(net.sourceforge.plantuml.graphic.FontStyle)>($r7);

        if $z1 != 0 goto label03;

        $z8 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UFont: boolean isBold()>();

        if $z8 == 0 goto label04;

     label03:
        r33 = "bold";

     label04:
        r34 = null;

        $r35 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle ITALIC>;

        $z10 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: boolean containsStyle(net.sourceforge.plantuml.graphic.FontStyle)>($r35);

        if $z10 != 0 goto label05;

        $z7 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UFont: boolean isItalic()>();

        if $z7 == 0 goto label06;

     label05:
        r34 = "italic";

     label06:
        r36 = null;

        $r37 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle UNDERLINE>;

        $z11 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: boolean containsStyle(net.sourceforge.plantuml.graphic.FontStyle)>($r37);

        if $z11 == 0 goto label07;

        r36 = "underline";

        goto label09;

     label07:
        $r8 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle STRIKE>;

        $z2 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: boolean containsStyle(net.sourceforge.plantuml.graphic.FontStyle)>($r8);

        if $z2 == 0 goto label08;

        r36 = "line-through";

        goto label09;

     label08:
        $r9 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle WAVE>;

        $z3 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: boolean containsStyle(net.sourceforge.plantuml.graphic.FontStyle)>($r9);

        if $z3 == 0 goto label09;

        r36 = "wavy underline";

     label09:
        r38 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UText: java.lang.String getText()>();

        $z12 = virtualinvoke r38.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z12 == 0 goto label11;

        $r30 = r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r31 = interfaceinvoke $r30.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>(r6, " ");

        d7 = virtualinvoke $r31.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

     label10:
        $z6 = virtualinvoke r38.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z6 == 0 goto label11;

        d6 = d6 + d7;

        r38 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int)>(1);

        goto label10;

     label11:
        r39 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>(r38);

        $r10 = r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r40 = interfaceinvoke $r10.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>(r6, r39);

        r41 = null;

        d0 = virtualinvoke r40.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = virtualinvoke r40.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r11 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle BACKCOLOR>;

        $z4 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: boolean containsStyle(net.sourceforge.plantuml.graphic.FontStyle)>($r11);

        if $z4 == 0 goto label13;

        r42 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getExtendedColor()>();

        $z5 = r42 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z5 == 0 goto label12;

        r43 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r42;

        $r20 = virtualinvoke r43.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor1()>();

        $r21 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>($r20);

        $r22 = virtualinvoke r43.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor2()>();

        $r23 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>($r22);

        $c1 = virtualinvoke r43.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: char getPolicy()>();

        r24 = virtualinvoke r12.<net.sourceforge.plantuml.svg.SvgGraphics: java.lang.String createSvgGradient(java.lang.String,java.lang.String,char)>($r21, $r23, $c1);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url(#");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r24);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r12.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String)>($r29);

        virtualinvoke r12.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeColor(java.lang.String)>(null);

        $d4 = d2 - d1;

        $d5 = $d4 + 2.0;

        virtualinvoke r12.<net.sourceforge.plantuml.svg.SvgGraphics: void svgRectangle(double,double,double,double,double,double,double,java.lang.String,java.lang.String)>(d6, $d5, d0, d1, 0.0, 0.0, 0.0, null, null);

        goto label13;

     label12:
        r41 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>(r42);

     label13:
        r44 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if r44 != null goto label14;

        $r45 = null;

        goto label15;

     label14:
        $r45 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

     label15:
        if $r45 != r44 goto label16;

        $r19 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r44);

        virtualinvoke r12.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String)>($r19);

        goto label17;

     label16:
        $r14 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r44);

        $r15 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>($r45);

        virtualinvoke r12.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String,java.lang.String)>($r14, $r15);

     label17:
        $r16 = <net.sourceforge.plantuml.ugraphic.UFontContext: net.sourceforge.plantuml.ugraphic.UFontContext SVG>;

        $r17 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UFont: java.lang.String getFamily(net.sourceforge.plantuml.ugraphic.UFontContext)>($r16);

        $i0 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UFont: int getSize()>();

        $r18 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: java.util.Map getAttributes()>();

        virtualinvoke r12.<net.sourceforge.plantuml.svg.SvgGraphics: void text(java.lang.String,double,double,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,double,java.util.Map,java.lang.String)>(r39, d6, d2, $r17, $i0, r33, r34, r36, d0, $r18, r41);

        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.svg.SvgGraphics $r5;
        net.sourceforge.plantuml.ugraphic.UText $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UText) r1;

        $r5 = (net.sourceforge.plantuml.svg.SvgGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextSvg: void draw(net.sourceforge.plantuml.ugraphic.UText,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.svg.SvgGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
