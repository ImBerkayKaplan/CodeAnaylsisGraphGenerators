public class net.sourceforge.plantuml.creole.command.CommandCreoleEmoji extends java.lang.Object implements net.sourceforge.plantuml.creole.command.Command
{
    private static final net.sourceforge.plantuml.command.regex.Pattern2 pattern;

    public java.lang.String startingChars()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleEmoji r0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleEmoji;

        return "<";
    }

    private void <init>()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleEmoji r0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleEmoji;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.creole.command.Command create()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleEmoji $r0;

        $r0 = new net.sourceforge.plantuml.creole.command.CommandCreoleEmoji;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.command.CommandCreoleEmoji: void <init>()>();

        return $r0;
    }

    public int matchingSize(java.lang.String)
    {
        java.lang.String r0, $r3;
        net.sourceforge.plantuml.command.regex.Pattern2 $r1;
        net.sourceforge.plantuml.command.regex.Matcher2 r2;
        boolean $z0;
        int $i0;
        net.sourceforge.plantuml.creole.command.CommandCreoleEmoji r4;

        r4 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleEmoji;

        r0 := @parameter0: java.lang.String;

        $r1 = <net.sourceforge.plantuml.creole.command.CommandCreoleEmoji: net.sourceforge.plantuml.command.regex.Pattern2 pattern>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        return $i0;
    }

    public java.lang.String executeAndGetRemaining(java.lang.String, net.sourceforge.plantuml.creole.legacy.StripeSimple)
    {
        java.lang.String r0, r3, r4, $r6, $r7;
        net.sourceforge.plantuml.command.regex.Pattern2 $r1;
        net.sourceforge.plantuml.command.regex.Matcher2 r2;
        boolean $z0;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r5;
        int $i0;
        java.lang.IllegalStateException $r8;
        net.sourceforge.plantuml.creole.command.CommandCreoleEmoji r9;

        r9 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleEmoji;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r1 = <net.sourceforge.plantuml.creole.command.CommandCreoleEmoji: net.sourceforge.plantuml.command.regex.Pattern2 pattern>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label1:
        r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        r4 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(3);

        virtualinvoke r5.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addEmoji(java.lang.String,java.lang.String)>(r4, r3);

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r7;
    }

    static void <clinit>()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        net.sourceforge.plantuml.command.regex.Pattern2 $r6;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^(");

        $r2 = <net.sourceforge.plantuml.graphic.Splitter: java.lang.String emojiPattern>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>($r5);

        <net.sourceforge.plantuml.creole.command.CommandCreoleEmoji: net.sourceforge.plantuml.command.regex.Pattern2 pattern> = $r6;

        return;
    }
}
