public class net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader extends net.sourceforge.plantuml.skin.AbstractTextualComponent
{
    private final int cornersize;
    private final int commentMargin;
    private final net.sourceforge.plantuml.graphic.TextBlock commentTextBlock;
    private final net.sourceforge.plantuml.ugraphic.color.HColor background;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContext;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContextCorner;
    private final double roundCorner;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ISkinSimple, double)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader r0;
        net.sourceforge.plantuml.style.Style r1, r21;
        net.sourceforge.plantuml.cucadiagram.Display r2, r18;
        net.sourceforge.plantuml.LineBreakStrategy $r3;
        java.lang.CharSequence $r4, $r11, $r14;
        net.sourceforge.plantuml.ISkinSimple r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r6, $r19;
        boolean $z0;
        double d0, $d1;
        net.sourceforge.plantuml.ugraphic.color.HColor r7, $r9, $r28;
        net.sourceforge.plantuml.graphic.SymbolContext r8, $r31, $r34;
        int $i0, $i1;
        java.lang.StringBuilder $r12, $r13, $r15, $r16;
        java.lang.String $r17;
        net.sourceforge.plantuml.graphic.TextBlock $r20;
        net.sourceforge.plantuml.style.PName $r22, $r24;
        net.sourceforge.plantuml.style.Value $r23, $r25;
        net.sourceforge.plantuml.api.ThemeStyle $r26, $r29, $r32, $r35, $r37;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r27, $r30, $r33, $r36, $r38;
        net.sourceforge.plantuml.graphic.FontConfiguration r39, r40;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader;

        r21 := @parameter0: net.sourceforge.plantuml.style.Style;

        r1 := @parameter1: net.sourceforge.plantuml.style.Style;

        r7 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r8 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r39 := @parameter4: net.sourceforge.plantuml.graphic.FontConfiguration;

        r40 := @parameter5: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter6: net.sourceforge.plantuml.cucadiagram.Display;

        r5 := @parameter7: net.sourceforge.plantuml.ISkinSimple;

        d0 := @parameter8: double;

        $r3 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $r6 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,java.lang.CharSequence,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, $r3, $r4, r39, $r6, 15, 30, 1, r5, null, null);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int commentMargin> = 0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int cornersize> = 10;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int cornersize> = 10;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int commentMargin> = 0;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r22 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r23 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r22);

        $i1 = interfaceinvoke $r23.<net.sourceforge.plantuml.style.Value: int asInt()>();

        $d1 = (double) $i1;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner> = $d1;

        $r24 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r25 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r24);

        $r26 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r28 = interfaceinvoke $r25.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r26, $r27);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColor background> = $r28;

        $r29 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r30 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r31 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r29, $r30);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = $r31;

        $r32 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r33 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r34 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r32, $r33);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContextCorner> = $r34;

        $r35 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r36 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r35, $r36);

        $r37 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r38 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r40 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r37, $r38);

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner> = d0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColor background> = r7;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = r8;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContextCorner> = r8;

     label2:
        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        if $i0 == 1 goto label3;

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(1);

        if $r11 != null goto label4;

     label3:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock commentTextBlock> = null;

        goto label5;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r14 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r18 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r17);

        $r19 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r20 = virtualinvoke r18.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r40, $r19, r5);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock commentTextBlock> = $r20;

     label5:
        $r9 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r9);

        return;
    }

    private double getSuppHeightForComment(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r3;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;
        double d0, $d1;
        byte $b0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock commentTextBlock>;

        if $r1 != null goto label1;

        return 0.0;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock commentTextBlock>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        d0 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b0 = d0 cmpl 15.0;

        if $b0 <= 0 goto label2;

        $d1 = d0 - 15.0;

        return $d1;

     label2:
        return 0.0;
    }

    public final double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r3;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3, d4;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock commentTextBlock>;

        if $r1 != null goto label1;

        d4 = 0.0;

        goto label2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock commentTextBlock>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int getMarginX1()>();

        $i1 = $i0 + 0;

        $d0 = (double) $i1;

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d4 = $d0 + $d1;

     label2:
        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d3 = $d2 + d4;

        return $d3;
    }

    public final double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double getPaddingY()>();

        $d2 = 2.0 * $d1;

        $d3 = $d0 + $d2;

        $d4 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double getSuppHeightForComment(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d5 = $d3 + $d4;

        return $d5;
    }

    protected void drawBackgroundInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r7, $r11;
        boolean $z0;
        net.sourceforge.plantuml.skin.Area r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        net.sourceforge.plantuml.graphic.SymbolContext $r4, $r6, $r10;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, $r13, r14, r15;
        net.sourceforge.plantuml.ugraphic.URectangle $r8, r9;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UBackground $r12;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: net.sourceforge.plantuml.skin.Area;

        $r1 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.ugraphic.color.HColorBackground;

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = virtualinvoke r2.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r4 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic applyStroke(net.sourceforge.plantuml.ugraphic.UGraphic)>(r14);

        $r6 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getForeColor()>();

        r15 = interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r8 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        $d2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner>;

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d2);

        $r10 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d3 = virtualinvoke $r10.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke r9.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>($d3);

        $r11 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r13 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r9);

        return;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader r3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9, $d10;
        boolean $z0;
        net.sourceforge.plantuml.graphic.SymbolContext $r4, $r7, $r9, $r21;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, $r8, $r16, $r20, $r22, r24, r25, r26;
        net.sourceforge.plantuml.ugraphic.UPath $r6, $r23;
        net.sourceforge.plantuml.ugraphic.color.HColor $r10;
        net.sourceforge.plantuml.ugraphic.URectangle $r11, r12;
        net.sourceforge.plantuml.ugraphic.UStroke $r13;
        net.sourceforge.plantuml.graphic.TextBlock $r14, $r17, $r19;
        net.sourceforge.plantuml.ugraphic.UTranslate $r15, $r18;
        int $i0, $i1, $i2, $i3, $i4;

        r3 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader;

        r24 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        r2 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        d1 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r21 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContextCorner>;

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r24);

        $r23 = specialinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.UPath getCorner(double,double)>(d0, d1);

        interfaceinvoke $r22.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r23);

        goto label2;

     label1:
        $r4 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContextCorner>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic applyColors(net.sourceforge.plantuml.ugraphic.UGraphic)>(r24);

        $r6 = specialinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.ugraphic.UPath getCorner(double,double)>(d0, d1);

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

     label2:
        $r7 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic applyStroke(net.sourceforge.plantuml.ugraphic.UGraphic)>(r24);

        $r9 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getForeColor()>();

        r25 = interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r11 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d2 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d2, $d3);

        $d4 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner>;

        r12 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d4);

        interfaceinvoke r25.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r12);

        $r13 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r26 = interfaceinvoke r25.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        $r14 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i0 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int getMarginX1()>();

        $d5 = (double) $i0;

        $i1 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int getMarginY()>();

        $d6 = (double) $i1;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, $d6);

        $r16 = interfaceinvoke r26.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        interfaceinvoke $r14.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r16);

        $r17 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock commentTextBlock>;

        if $r17 == null goto label3;

        $i2 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int getMarginX1()>();

        $d7 = (double) $i2;

        d8 = $d7 + d0;

        $i3 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: int getMarginY()>();

        $i4 = $i3 + 1;

        d9 = (double) $i4;

        $r19 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: net.sourceforge.plantuml.graphic.TextBlock commentTextBlock>;

        $r18 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d10 = d8 + 0.0;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d10, d9);

        $r20 = interfaceinvoke r26.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        interfaceinvoke $r19.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r20);

     label3:
        return;
    }

    private net.sourceforge.plantuml.ugraphic.UPath getCorner(double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPath $r0;
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader r2;
        double $d0, $d1, $d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        byte $b0;

        r2 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader;

        d3 := @parameter0: double;

        d4 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $d0 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, 0.0);

        $d15 = d4 - 10.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, $d15);

        $d16 = d3 - 10.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d16, d4);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, d4);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 0.0);

        goto label2;

     label1:
        $d1 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner>;

        $d2 = $d1 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>($d2, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, 0.0);

        $d5 = d4 - 10.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, $d5);

        $d6 = d3 - 10.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d6, d4);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, d4);

        $d7 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner>;

        $d8 = $d7 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d8);

        $d9 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner>;

        $d14 = $d9 / 2.0;

        $d10 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner>;

        $d13 = $d10 / 2.0;

        $d11 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: double roundCorner>;

        $d12 = $d11 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(double,double,double,double,double,double,double)>($d14, $d13, 0.0, 0.0, 1.0, $d12, 0.0);

     label2:
        return $r0;
    }
}
