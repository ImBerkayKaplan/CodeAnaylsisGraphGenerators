class net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter extends net.sourceforge.plantuml.json.JsonWriter
{
    private final char[] indentChars;
    private int indent;

    private void <init>(java.io.Writer, char[])
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        java.io.Writer r1;
        char[] r2;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: char[];

        specialinvoke r0.<net.sourceforge.plantuml.json.JsonWriter: void <init>(java.io.Writer)>(r1);

        r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: char[] indentChars> = r2;

        return;
    }

    protected void writeArrayOpen() throws java.io.IOException
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        int $i0, $i1;
        java.io.Writer $r1;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        $i0 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent> = $i1;

        $r1 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(91);

        specialinvoke r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: boolean writeNewLine()>();

        return;
    }

    protected void writeArrayClose() throws java.io.IOException
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        int $i0, $i1;
        java.io.Writer $r1;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        $i0 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent>;

        $i1 = $i0 - 1;

        r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent> = $i1;

        specialinvoke r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: boolean writeNewLine()>();

        $r1 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(93);

        return;
    }

    protected void writeArraySeparator() throws java.io.IOException
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        java.io.Writer $r1, $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        $r1 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(44);

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: boolean writeNewLine()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(32);

     label1:
        return;
    }

    protected void writeObjectOpen() throws java.io.IOException
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        int $i0, $i1;
        java.io.Writer $r1;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        $i0 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent> = $i1;

        $r1 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(123);

        specialinvoke r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: boolean writeNewLine()>();

        return;
    }

    protected void writeObjectClose() throws java.io.IOException
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        int $i0, $i1;
        java.io.Writer $r1;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        $i0 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent>;

        $i1 = $i0 - 1;

        r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent> = $i1;

        specialinvoke r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: boolean writeNewLine()>();

        $r1 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(125);

        return;
    }

    protected void writeMemberSeparator() throws java.io.IOException
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        java.io.Writer $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        $r1 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(58);

        $r2 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(32);

        return;
    }

    protected void writeObjectSeparator() throws java.io.IOException
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        java.io.Writer $r1, $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        $r1 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r1.<java.io.Writer: void write(int)>(44);

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: boolean writeNewLine()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(32);

     label1:
        return;
    }

    private boolean writeNewLine() throws java.io.IOException
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        char[] $r1, $r3;
        java.io.Writer $r2, $r4;
        int $i0, i1;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        $r1 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: char[] indentChars>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        virtualinvoke $r2.<java.io.Writer: void write(int)>(10);

        i1 = 0;

     label2:
        $i0 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: int indent>;

        if i1 >= $i0 goto label3;

        $r4 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: java.io.Writer writer>;

        $r3 = r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: char[] indentChars>;

        virtualinvoke $r4.<java.io.Writer: void write(char[])>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return 1;
    }

    void <init>(java.io.Writer, char[], net.sourceforge.plantuml.json.PrettyPrint$1)
    {
        net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter r0;
        java.io.Writer r1;
        char[] r2;
        net.sourceforge.plantuml.json.PrettyPrint$1 r3;

        r0 := @this: net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: char[];

        r3 := @parameter2: net.sourceforge.plantuml.json.PrettyPrint$1;

        specialinvoke r0.<net.sourceforge.plantuml.json.PrettyPrint$PrettyPrintWriter: void <init>(java.io.Writer,char[])>(r1, r2);

        return;
    }
}
