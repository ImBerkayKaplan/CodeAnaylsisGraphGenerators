public class net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2 extends net.sourceforge.plantuml.graphic.UGraphicDelegator
{
    private final java.util.Map positions;

    public void <init>(net.sourceforge.plantuml.ugraphic.UGraphic, java.util.Map)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        java.util.Map r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: java.util.Map positions> = r2;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.ugraphic.UShape r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2 r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileLabel $r4;
        java.util.Map $r5;
        java.lang.String $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r10;
        net.sourceforge.plantuml.graphic.UDrawable r11;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $z0 = r0 instanceof net.sourceforge.plantuml.activitydiagram3.gtile.Gtile;

        if $z0 == 0 goto label1;

        r9 = (net.sourceforge.plantuml.activitydiagram3.gtile.Gtile) r0;

        interfaceinvoke r9.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        goto label6;

     label1:
        $z1 = r0 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        if $z1 == 0 goto label4;

        r10 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) r0;

        interfaceinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        $z3 = r10 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.FtileLabel;

        if $z3 == 0 goto label2;

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: java.util.Map positions>;

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.FtileLabel) r10;

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileLabel: java.lang.String getName()>();

        $r7 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: net.sourceforge.plantuml.ugraphic.UTranslate getPosition()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

     label2:
        $z4 = r10 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto;

        if $z4 == 0 goto label3;

        $r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto) r10;

        specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: void drawGoto(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto)>($r3);

     label3:
        goto label6;

     label4:
        $z2 = r0 instanceof net.sourceforge.plantuml.graphic.UDrawable;

        if $z2 == 0 goto label5;

        r11 = (net.sourceforge.plantuml.graphic.UDrawable) r0;

        interfaceinvoke r11.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        goto label6;

     label5:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

     label6:
        return;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getPosition()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;
        net.sourceforge.plantuml.svek.UGraphicForSnake $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r2 = (net.sourceforge.plantuml.svek.UGraphicForSnake) $r1;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.UGraphicForSnake: net.sourceforge.plantuml.ugraphic.UTranslate getTranslation()>();

        return $r3;
    }

    private void drawGoto(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2 r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        java.awt.geom.Point2D r5;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, $r7, $r17, $r21, r23, r24;
        net.sourceforge.plantuml.ugraphic.UBackground $r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9, r10, r14, $r16, $r20;
        java.util.Map $r11;
        java.lang.String $r12;
        java.lang.Object $r13;
        double $d0, $d1, d2, $d3, $d4, d5;
        net.sourceforge.plantuml.ugraphic.UEllipse $r15, $r18;
        net.sourceforge.plantuml.ugraphic.ULine $r19, $r22;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto;

        r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor MY_RED>;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        r5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r0);

        $r8 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r23 = interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r5);

        r24 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        r10 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: net.sourceforge.plantuml.ugraphic.UTranslate getPosition()>();

        $r11 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: java.util.Map positions>;

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGoto: java.lang.String getName()>();

        $r13 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        r14 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r13;

        $d0 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d1 = virtualinvoke r10.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $d4 = virtualinvoke r10.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        d5 = $d3 - $d4;

        $r15 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(3.0, 3.0);

        interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r15);

        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, d5);

        $r17 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        $r18 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(3.0, 3.0);

        interfaceinvoke $r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r18);

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(d2);

        interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r19);

        $r20 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d2);

        $r21 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        $r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(d5);

        interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r22);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2 $r0, r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2, $r4;
        net.sourceforge.plantuml.ugraphic.UChange r3;
        java.util.Map $r5;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: java.util.Map positions>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.UGraphicInterceptorUDrawable2: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,java.util.Map)>($r4, $r5);

        return $r0;
    }
}
