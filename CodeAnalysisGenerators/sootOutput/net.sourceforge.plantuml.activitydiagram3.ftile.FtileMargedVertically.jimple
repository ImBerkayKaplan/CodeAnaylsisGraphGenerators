public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically extends net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate
{
    private final double margin1;
    private final double margin2;
    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cached;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: double margin1> = d0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: double margin2> = d1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically r0;
        double $d0, $d1;
        byte $b0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.ugraphic.UGraphic r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: double margin1>;

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: double margin1>;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d1);

        r3 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtileDelegated()>();

        interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r1);

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r1, $r2, $r4;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cached>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionSlow(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cached> = $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cached>;

        return $r2;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionSlow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2, $r3;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: double margin1>;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: double margin2>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry incVertically(double,double)>($d1, $d0);

        return $r3;
    }

    public volatile net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }
}
