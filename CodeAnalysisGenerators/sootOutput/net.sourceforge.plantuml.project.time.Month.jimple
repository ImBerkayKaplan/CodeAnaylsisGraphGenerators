public final enum class net.sourceforge.plantuml.project.time.Month extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.project.time.Month JANUARY;
    public static final enum net.sourceforge.plantuml.project.time.Month FEBRUARY;
    public static final enum net.sourceforge.plantuml.project.time.Month MARCH;
    public static final enum net.sourceforge.plantuml.project.time.Month APRIL;
    public static final enum net.sourceforge.plantuml.project.time.Month MAY;
    public static final enum net.sourceforge.plantuml.project.time.Month JUNE;
    public static final enum net.sourceforge.plantuml.project.time.Month JULY;
    public static final enum net.sourceforge.plantuml.project.time.Month AUGUST;
    public static final enum net.sourceforge.plantuml.project.time.Month SEPTEMBER;
    public static final enum net.sourceforge.plantuml.project.time.Month OCTOBER;
    public static final enum net.sourceforge.plantuml.project.time.Month NOVEMBER;
    public static final enum net.sourceforge.plantuml.project.time.Month DECEMBER;
    private final int daysPerMonth;
    private static final net.sourceforge.plantuml.project.time.Month[] $VALUES;

    public static net.sourceforge.plantuml.project.time.Month[] values()
    {
        net.sourceforge.plantuml.project.time.Month[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.project.time.Month[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.project.time.Month valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.project.time.Month $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/project/time/Month;", r0);

        $r2 = (net.sourceforge.plantuml.project.time.Month) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        net.sourceforge.plantuml.project.time.Month r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.project.time.Month;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<net.sourceforge.plantuml.project.time.Month: int daysPerMonth> = i1;

        return;
    }

    public java.lang.String shortName(java.util.Locale)
    {
        java.util.Locale r0, $r1;
        net.sourceforge.plantuml.project.time.Month r2;
        java.time.Month $r3;
        java.time.format.TextStyle $r4;
        java.lang.String $r5, $r6, $r7, $r8;

        r2 := @this: net.sourceforge.plantuml.project.time.Month;

        r0 := @parameter0: java.util.Locale;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        if r0 != $r1 goto label1;

        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.project.time.Month: java.lang.String longName(java.util.Locale)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        return $r8;

     label1:
        $r3 = specialinvoke r2.<net.sourceforge.plantuml.project.time.Month: java.time.Month getJavaTimeMonth()>();

        $r4 = <java.time.format.TextStyle: java.time.format.TextStyle SHORT_STANDALONE>;

        $r5 = virtualinvoke $r3.<java.time.Month: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>($r4, r0);

        $r6 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String capitalize(java.lang.String)>($r5);

        return $r6;
    }

    private java.time.Month getJavaTimeMonth()
    {
        net.sourceforge.plantuml.project.time.Month r0;
        java.lang.String $r1;
        java.time.Month $r2;

        r0 := @this: net.sourceforge.plantuml.project.time.Month;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.time.Month: java.lang.String toString()>();

        $r2 = staticinvoke <java.time.Month: java.time.Month valueOf(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String longName(java.util.Locale)
    {
        java.util.Locale r0, $r1;
        net.sourceforge.plantuml.project.time.Month r2;
        java.time.Month r3;
        java.time.format.TextStyle $r4, $r6;
        java.lang.String r5, r7, $r8, $r9, $r10, $r11;

        r2 := @this: net.sourceforge.plantuml.project.time.Month;

        r0 := @parameter0: java.util.Locale;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        if r0 != $r1 goto label1;

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.project.time.Month: java.lang.String name()>();

        $r11 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String capitalize(java.lang.String)>($r10);

        return $r11;

     label1:
        r3 = specialinvoke r2.<net.sourceforge.plantuml.project.time.Month: java.time.Month getJavaTimeMonth()>();

        $r4 = <java.time.format.TextStyle: java.time.format.TextStyle FULL_STANDALONE>;

        r5 = virtualinvoke r3.<java.time.Month: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>($r4, r0);

        $r6 = <java.time.format.TextStyle: java.time.format.TextStyle FULL>;

        r7 = virtualinvoke r3.<java.time.Month: java.lang.String getDisplayName(java.time.format.TextStyle,java.util.Locale)>($r6, r0);

        $r8 = specialinvoke r2.<net.sourceforge.plantuml.project.time.Month: java.lang.String longest(java.lang.String,java.lang.String)>(r5, r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String capitalize(java.lang.String)>($r8);

        return $r9;
    }

    private java.lang.String longest(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0, $i1;
        net.sourceforge.plantuml.project.time.Month r2;

        r2 := @this: net.sourceforge.plantuml.project.time.Month;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= $i1 goto label1;

        return r0;

     label1:
        return r1;
    }

    public static java.lang.String getRegexString()
    {
        java.lang.StringBuilder $r0, $r5, $r8, $r9;
        net.sourceforge.plantuml.project.time.Month[] r2;
        int i0, $i1, i2;
        java.lang.String $r3, $r6, $r7, $r10;
        net.sourceforge.plantuml.project.time.Month r4;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        r2 = staticinvoke <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month[] values()>();

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label3;

        r4 = r2[i2];

        $i1 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

     label2:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.project.time.Month: java.lang.String name()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[a-z]*");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        i2 = i2 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static net.sourceforge.plantuml.project.time.Month fromString(java.lang.String)
    {
        java.lang.String $r0, $r4, r5, r6;
        net.sourceforge.plantuml.project.time.Month[] r1;
        int i0, i1;
        java.lang.IllegalArgumentException $r2;
        net.sourceforge.plantuml.project.time.Month r3;
        boolean $z0;

        r5 := @parameter0: java.lang.String;

        $r0 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goUpperCase(java.lang.String)>(r5);

        r6 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r1 = staticinvoke <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month[] values()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r1[i1];

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.project.time.Month: java.lang.String name()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>(r6);

        if $z0 == 0 goto label2;

        return r3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }

    public final int getDaysPerMonth(int)
    {
        net.sourceforge.plantuml.project.time.Month r0, $r1;
        int $i0, i1, $i2;

        r0 := @this: net.sourceforge.plantuml.project.time.Month;

        i1 := @parameter0: int;

        $r1 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month FEBRUARY>;

        if r0 != $r1 goto label1;

        $i2 = i1 % 4;

        if $i2 != 0 goto label1;

        return 29;

     label1:
        $i0 = r0.<net.sourceforge.plantuml.project.time.Month: int daysPerMonth>;

        return $i0;
    }

    public net.sourceforge.plantuml.project.time.Month next()
    {
        net.sourceforge.plantuml.project.time.Month[] $r0;
        net.sourceforge.plantuml.project.time.Month r1, $r2;
        int $i0, $i1, $i2;

        r1 := @this: net.sourceforge.plantuml.project.time.Month;

        $r0 = staticinvoke <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month[] values()>();

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.project.time.Month: int ordinal()>();

        $i1 = $i0 + 1;

        $i2 = $i1 % 12;

        $r2 = $r0[$i2];

        return $r2;
    }

    public int m()
    {
        net.sourceforge.plantuml.project.time.Month r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.sourceforge.plantuml.project.time.Month;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.project.time.Month: int ordinal()>();

        $i1 = $i0 + 10;

        $i2 = $i1 % 12;

        $i3 = 3 + $i2;

        return $i3;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.project.time.Month $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        net.sourceforge.plantuml.project.time.Month[] $r12;

        $r0 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r0.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("JANUARY", 0, 31);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month JANUARY> = $r0;

        $r1 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r1.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("FEBRUARY", 1, 28);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month FEBRUARY> = $r1;

        $r2 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r2.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("MARCH", 2, 31);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month MARCH> = $r2;

        $r3 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r3.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("APRIL", 3, 30);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month APRIL> = $r3;

        $r4 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r4.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("MAY", 4, 31);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month MAY> = $r4;

        $r5 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r5.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("JUNE", 5, 30);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month JUNE> = $r5;

        $r6 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r6.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("JULY", 6, 31);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month JULY> = $r6;

        $r7 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r7.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("AUGUST", 7, 31);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month AUGUST> = $r7;

        $r8 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r8.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("SEPTEMBER", 8, 30);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month SEPTEMBER> = $r8;

        $r9 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r9.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("OCTOBER", 9, 31);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month OCTOBER> = $r9;

        $r10 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r10.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("NOVEMBER", 10, 30);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month NOVEMBER> = $r10;

        $r11 = new net.sourceforge.plantuml.project.time.Month;

        specialinvoke $r11.<net.sourceforge.plantuml.project.time.Month: void <init>(java.lang.String,int,int)>("DECEMBER", 11, 31);

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month DECEMBER> = $r11;

        $r12 = newarray (net.sourceforge.plantuml.project.time.Month)[12];

        $r13 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month JANUARY>;

        $r12[0] = $r13;

        $r14 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month FEBRUARY>;

        $r12[1] = $r14;

        $r15 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month MARCH>;

        $r12[2] = $r15;

        $r16 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month APRIL>;

        $r12[3] = $r16;

        $r17 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month MAY>;

        $r12[4] = $r17;

        $r18 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month JUNE>;

        $r12[5] = $r18;

        $r19 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month JULY>;

        $r12[6] = $r19;

        $r20 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month AUGUST>;

        $r12[7] = $r20;

        $r21 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month SEPTEMBER>;

        $r12[8] = $r21;

        $r22 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month OCTOBER>;

        $r12[9] = $r22;

        $r23 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month NOVEMBER>;

        $r12[10] = $r23;

        $r24 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month DECEMBER>;

        $r12[11] = $r24;

        <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month[] $VALUES> = $r12;

        return;
    }
}
