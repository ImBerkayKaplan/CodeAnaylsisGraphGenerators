public class net.sourceforge.plantuml.webp.Segment extends java.lang.Object
{
    int P0;
    int P1;
    int P2;
    int P3;
    int Q0;
    int Q1;
    int Q2;
    int Q3;

    public void <init>()
    {
        net.sourceforge.plantuml.webp.Segment r0;

        r0 := @this: net.sourceforge.plantuml.webp.Segment;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25;
        net.sourceforge.plantuml.webp.Segment r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r26;

        r2 := @this: net.sourceforge.plantuml.webp.Segment;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = r2.<net.sourceforge.plantuml.webp.Segment: int P3>;

        $r3 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String toHex(int)>($i0);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i1 = r2.<net.sourceforge.plantuml.webp.Segment: int P2>;

        $r6 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String toHex(int)>($i1);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i2 = r2.<net.sourceforge.plantuml.webp.Segment: int P1>;

        $r9 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String toHex(int)>($i2);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i3 = r2.<net.sourceforge.plantuml.webp.Segment: int P0>;

        $r12 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String toHex(int)>($i3);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i4 = r2.<net.sourceforge.plantuml.webp.Segment: int Q0>;

        $r15 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String toHex(int)>($i4);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i5 = r2.<net.sourceforge.plantuml.webp.Segment: int Q1>;

        $r18 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String toHex(int)>($i5);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i6 = r2.<net.sourceforge.plantuml.webp.Segment: int Q2>;

        $r21 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String toHex(int)>($i6);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i7 = r2.<net.sourceforge.plantuml.webp.Segment: int Q3>;

        $r24 = staticinvoke <net.sourceforge.plantuml.webp.Globals: java.lang.String toHex(int)>($i7);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;
    }
}
