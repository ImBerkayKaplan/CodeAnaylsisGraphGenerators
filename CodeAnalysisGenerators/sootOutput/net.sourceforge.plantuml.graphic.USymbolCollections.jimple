class net.sourceforge.plantuml.graphic.USymbolCollections extends net.sourceforge.plantuml.graphic.USymbol
{
    private final net.sourceforge.plantuml.graphic.SkinParameter skinParameter;

    public void <init>(net.sourceforge.plantuml.graphic.SkinParameter)
    {
        net.sourceforge.plantuml.graphic.USymbolCollections r0;
        net.sourceforge.plantuml.graphic.SkinParameter r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolCollections;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.SkinParameter;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.USymbolCollections: net.sourceforge.plantuml.graphic.SkinParameter skinParameter> = r1;

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.USymbolCollections r0;
        net.sourceforge.plantuml.graphic.SkinParameter $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolCollections;

        $r1 = r0.<net.sourceforge.plantuml.graphic.USymbolCollections: net.sourceforge.plantuml.graphic.SkinParameter skinParameter>;

        return $r1;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolCollections r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolCollections;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName collections>;

        return $r0;
    }

    private void drawCollections(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r2;
        double d0, $d1, d2, $d3, $d4, $d5, d6, d7, $d8, $d9;
        net.sourceforge.plantuml.graphic.USymbolCollections r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r3, $r5, $r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolCollections;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        d7 := @parameter3: double;

        d6 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d1 = specialinvoke r1.<net.sourceforge.plantuml.graphic.USymbolCollections: double getDeltaCollection()>();

        $d3 = d0 - $d1;

        $d4 = specialinvoke r1.<net.sourceforge.plantuml.graphic.USymbolCollections: double getDeltaCollection()>();

        $d5 = d2 - $d4;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d3, $d5);

        r2 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>(d6);

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(d7);

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d8 = specialinvoke r1.<net.sourceforge.plantuml.graphic.USymbolCollections: double getDeltaCollection()>();

        $d9 = specialinvoke r1.<net.sourceforge.plantuml.graphic.USymbolCollections: double getDeltaCollection()>();

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d8, $d9);

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r2);

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(0.0);

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(0.0);

        $r7 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r2);

        return;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolCollections r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolCollections;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(10.0, 10.0, 10.0, 10.0);

        return $r0;
    }

    private double getDeltaCollection()
    {
        net.sourceforge.plantuml.graphic.USymbolCollections r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolCollections;

        return 4.0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolCollections$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolCollections r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolCollections;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r5 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolCollections$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolCollections$1: void <init>(net.sourceforge.plantuml.graphic.USymbolCollections,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r1, r2, r3, r4, r5);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolCollections$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolCollections r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4, r6;
        double d0, d1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolCollections;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r4 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolCollections$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolCollections$2: void <init>(net.sourceforge.plantuml.graphic.USymbolCollections,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,double,net.sourceforge.plantuml.graphic.TextBlock,double)>(r1, r2, r3, r4, d0, r5, d1);

        return $r0;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolCollections, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolCollections r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2, d3;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolCollections;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolCollections: void drawCollections(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double)>(r1, d0, d1, d2, d3);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolCollections)
    {
        net.sourceforge.plantuml.graphic.USymbolCollections r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolCollections;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolCollections: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }

    static double access$200(net.sourceforge.plantuml.graphic.USymbolCollections)
    {
        net.sourceforge.plantuml.graphic.USymbolCollections r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolCollections;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolCollections: double getDeltaCollection()>();

        return $d0;
    }
}
