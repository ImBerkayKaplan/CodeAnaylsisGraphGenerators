final class ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation extends java.lang.Object
{
    private static final int FORMAT_INFO_MASK_QR;
    private static final int[][] FORMAT_INFO_DECODE_LOOKUP;
    private static final int[] BITS_SET_IN_HALF_BYTE;
    private final ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel;
    private final byte dataMask;

    private void <init>(int)
    {
        ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation r0;
        int i0, $i1, $i2, $i3;
        ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel $r1;
        byte $b4;

        r0 := @this: ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = i0 >> 3;

        $i2 = $i1 & 3;

        $r1 = staticinvoke <ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel forBits(int)>($i2);

        r0.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel> = $r1;

        $i3 = i0 & 7;

        $b4 = (byte) $i3;

        r0.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: byte dataMask> = $b4;

        return;
    }

    static int numBitsDiffering(int, int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32;
        int[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        i31 := @parameter0: int;

        i0 := @parameter1: int;

        i32 = i31 ^ i0;

        $r0 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE>;

        $i1 = i32 & 15;

        $i5 = $r0[$i1];

        $r1 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE>;

        $i2 = i32 >>> 4;

        $i3 = $i2 & 15;

        $i4 = $r1[$i3];

        $i9 = $i5 + $i4;

        $r2 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE>;

        $i6 = i32 >>> 8;

        $i7 = $i6 & 15;

        $i8 = $r2[$i7];

        $i13 = $i9 + $i8;

        $r3 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE>;

        $i10 = i32 >>> 12;

        $i11 = $i10 & 15;

        $i12 = $r3[$i11];

        $i17 = $i13 + $i12;

        $r4 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE>;

        $i14 = i32 >>> 16;

        $i15 = $i14 & 15;

        $i16 = $r4[$i15];

        $i21 = $i17 + $i16;

        $r5 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE>;

        $i18 = i32 >>> 20;

        $i19 = $i18 & 15;

        $i20 = $r5[$i19];

        $i25 = $i21 + $i20;

        $r6 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE>;

        $i22 = i32 >>> 24;

        $i23 = $i22 & 15;

        $i24 = $r6[$i23];

        $i29 = $i25 + $i24;

        $r7 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE>;

        $i26 = i32 >>> 28;

        $i27 = $i26 & 15;

        $i28 = $r7[$i27];

        $i30 = $i29 + $i28;

        return $i30;
    }

    static ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation decodeFormatInformation(int, int)
    {
        int i0, i1, $i2, $i3;
        ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation r0, $r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0 = staticinvoke <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int)>(i0, i1);

        if r0 == null goto label1;

        return r0;

     label1:
        $i3 = i0 ^ 21522;

        $i2 = i1 ^ 21522;

        $r1 = staticinvoke <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int,int)>($i3, $i2);

        return $r1;
    }

    private static ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation doDecodeFormatInformation(int, int)
    {
        int[][] $r0, $r2;
        int $i0, i1, i2, $i3, i4, i5, i6, i7, i8, i9;
        ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation $r1, $r4;
        int[] r3;

        i2 := @parameter0: int;

        i4 := @parameter1: int;

        i5 = 2147483647;

        i6 = 0;

        i7 = 0;

     label1:
        $r0 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[][] FORMAT_INFO_DECODE_LOOKUP>;

        $i0 = lengthof $r0;

        if i7 >= $i0 goto label6;

        $r2 = <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[][] FORMAT_INFO_DECODE_LOOKUP>;

        r3 = $r2[i7];

        i1 = r3[0];

        if i1 == i2 goto label2;

        if i1 != i4 goto label3;

     label2:
        $r4 = new ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation;

        $i3 = r3[1];

        specialinvoke $r4.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: void <init>(int)>($i3);

        return $r4;

     label3:
        i8 = staticinvoke <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int numBitsDiffering(int,int)>(i2, i1);

        if i8 >= i5 goto label4;

        i6 = r3[1];

        i5 = i8;

     label4:
        if i2 == i4 goto label5;

        i9 = staticinvoke <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int numBitsDiffering(int,int)>(i4, i1);

        if i9 >= i5 goto label5;

        i6 = r3[1];

        i5 = i9;

     label5:
        i7 = i7 + 1;

        goto label1;

     label6:
        if i5 > 3 goto label7;

        $r1 = new ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation;

        specialinvoke $r1.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: void <init>(int)>(i6);

        return $r1;

     label7:
        return null;
    }

    ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel getErrorCorrectionLevel()
    {
        ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation r0;
        ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel $r1;

        r0 := @this: ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation;

        $r1 = r0.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel>;

        return $r1;
    }

    byte getDataMask()
    {
        ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation r0;
        byte $b0;

        r0 := @this: ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation;

        $b0 = r0.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: byte dataMask>;

        return $b0;
    }

    public int hashCode()
    {
        ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation r0;
        ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel $r1;
        int $i0, $i2, $i3;
        byte $b1;

        r0 := @this: ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation;

        $r1 = r0.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel>;

        $i0 = virtualinvoke $r1.<ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel: int ordinal()>();

        $i2 = $i0 << 3;

        $b1 = r0.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: byte dataMask>;

        $i3 = $i2 | $b1;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1;
        ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation r1, r2;
        ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel $r3, $r4;
        byte $b0, $b1;

        r2 := @this: ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation) r0;

        $r4 = r2.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel>;

        $r3 = r1.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: ext.plantuml.com.google.zxing.qrcode.decoder.ErrorCorrectionLevel errorCorrectionLevel>;

        if $r4 != $r3 goto label2;

        $b1 = r2.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: byte dataMask>;

        $b0 = r1.<ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: byte dataMask>;

        if $b1 != $b0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    static void <clinit>()
    {
        int[][] $r0;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;

        <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int FORMAT_INFO_MASK_QR> = 21522;

        $r0 = newarray (int[])[32];

        $r1 = newarray (int)[2];

        $r1[0] = 21522;

        $r1[1] = 0;

        $r0[0] = $r1;

        $r2 = newarray (int)[2];

        $r2[0] = 20773;

        $r2[1] = 1;

        $r0[1] = $r2;

        $r3 = newarray (int)[2];

        $r3[0] = 24188;

        $r3[1] = 2;

        $r0[2] = $r3;

        $r4 = newarray (int)[2];

        $r4[0] = 23371;

        $r4[1] = 3;

        $r0[3] = $r4;

        $r5 = newarray (int)[2];

        $r5[0] = 17913;

        $r5[1] = 4;

        $r0[4] = $r5;

        $r6 = newarray (int)[2];

        $r6[0] = 16590;

        $r6[1] = 5;

        $r0[5] = $r6;

        $r7 = newarray (int)[2];

        $r7[0] = 20375;

        $r7[1] = 6;

        $r0[6] = $r7;

        $r8 = newarray (int)[2];

        $r8[0] = 19104;

        $r8[1] = 7;

        $r0[7] = $r8;

        $r9 = newarray (int)[2];

        $r9[0] = 30660;

        $r9[1] = 8;

        $r0[8] = $r9;

        $r10 = newarray (int)[2];

        $r10[0] = 29427;

        $r10[1] = 9;

        $r0[9] = $r10;

        $r11 = newarray (int)[2];

        $r11[0] = 32170;

        $r11[1] = 10;

        $r0[10] = $r11;

        $r12 = newarray (int)[2];

        $r12[0] = 30877;

        $r12[1] = 11;

        $r0[11] = $r12;

        $r13 = newarray (int)[2];

        $r13[0] = 26159;

        $r13[1] = 12;

        $r0[12] = $r13;

        $r14 = newarray (int)[2];

        $r14[0] = 25368;

        $r14[1] = 13;

        $r0[13] = $r14;

        $r15 = newarray (int)[2];

        $r15[0] = 27713;

        $r15[1] = 14;

        $r0[14] = $r15;

        $r16 = newarray (int)[2];

        $r16[0] = 26998;

        $r16[1] = 15;

        $r0[15] = $r16;

        $r17 = newarray (int)[2];

        $r17[0] = 5769;

        $r17[1] = 16;

        $r0[16] = $r17;

        $r18 = newarray (int)[2];

        $r18[0] = 5054;

        $r18[1] = 17;

        $r0[17] = $r18;

        $r19 = newarray (int)[2];

        $r19[0] = 7399;

        $r19[1] = 18;

        $r0[18] = $r19;

        $r20 = newarray (int)[2];

        $r20[0] = 6608;

        $r20[1] = 19;

        $r0[19] = $r20;

        $r21 = newarray (int)[2];

        $r21[0] = 1890;

        $r21[1] = 20;

        $r0[20] = $r21;

        $r22 = newarray (int)[2];

        $r22[0] = 597;

        $r22[1] = 21;

        $r0[21] = $r22;

        $r23 = newarray (int)[2];

        $r23[0] = 3340;

        $r23[1] = 22;

        $r0[22] = $r23;

        $r24 = newarray (int)[2];

        $r24[0] = 2107;

        $r24[1] = 23;

        $r0[23] = $r24;

        $r25 = newarray (int)[2];

        $r25[0] = 13663;

        $r25[1] = 24;

        $r0[24] = $r25;

        $r26 = newarray (int)[2];

        $r26[0] = 12392;

        $r26[1] = 25;

        $r0[25] = $r26;

        $r27 = newarray (int)[2];

        $r27[0] = 16177;

        $r27[1] = 26;

        $r0[26] = $r27;

        $r28 = newarray (int)[2];

        $r28[0] = 14854;

        $r28[1] = 27;

        $r0[27] = $r28;

        $r29 = newarray (int)[2];

        $r29[0] = 9396;

        $r29[1] = 28;

        $r0[28] = $r29;

        $r30 = newarray (int)[2];

        $r30[0] = 8579;

        $r30[1] = 29;

        $r0[29] = $r30;

        $r31 = newarray (int)[2];

        $r31[0] = 11994;

        $r31[1] = 30;

        $r0[30] = $r31;

        $r32 = newarray (int)[2];

        $r32[0] = 11245;

        $r32[1] = 31;

        $r0[31] = $r32;

        <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[][] FORMAT_INFO_DECODE_LOOKUP> = $r0;

        $r33 = newarray (int)[16];

        $r33[0] = 0;

        $r33[1] = 1;

        $r33[2] = 1;

        $r33[3] = 2;

        $r33[4] = 1;

        $r33[5] = 2;

        $r33[6] = 2;

        $r33[7] = 3;

        $r33[8] = 1;

        $r33[9] = 2;

        $r33[10] = 2;

        $r33[11] = 3;

        $r33[12] = 2;

        $r33[13] = 3;

        $r33[14] = 3;

        $r33[15] = 4;

        <ext.plantuml.com.google.zxing.qrcode.decoder.FormatInformation: int[] BITS_SET_IN_HALF_BYTE> = $r33;

        return;
    }
}
