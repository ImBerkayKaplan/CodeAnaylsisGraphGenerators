public class net.sourceforge.plantuml.classdiagram.ClassDiagramFactory extends net.sourceforge.plantuml.command.PSystemCommandFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagramFactory r0;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagramFactory;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.classdiagram.ClassDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.classdiagram.ClassDiagramFactory r4;

        r4 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.classdiagram.ClassDiagram;

        specialinvoke $r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r0;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.command.CommandFootboxIgnored $r2;
        net.sourceforge.plantuml.command.CommandRankDir $r3;
        net.sourceforge.plantuml.descdiagram.command.CommandNewpage $r4;
        net.sourceforge.plantuml.classdiagram.ClassDiagramFactory r5;
        net.sourceforge.plantuml.classdiagram.command.CommandAddMethod $r6;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShow2 $r7;
        net.sourceforge.plantuml.classdiagram.command.CommandRemoveRestore $r8;
        net.sourceforge.plantuml.classdiagram.command.CommandCreateClassMultilines $r9;
        net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObjectMultilines $r10;
        net.sourceforge.plantuml.objectdiagram.command.CommandCreateMap $r11;
        net.sourceforge.plantuml.classdiagram.command.CommandCreateClass $r12;
        net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject $r13;
        net.sourceforge.plantuml.classdiagram.command.CommandAllowMixing $r14;
        net.sourceforge.plantuml.descdiagram.command.CommandCreateElementParenthesis $r15;
        net.sourceforge.plantuml.classdiagram.command.CommandLayoutNewLine $r16;
        net.sourceforge.plantuml.command.CommandPackage $r17;
        net.sourceforge.plantuml.command.CommandEndPackage $r18;
        net.sourceforge.plantuml.command.CommandPackageEmpty $r19;
        net.sourceforge.plantuml.descdiagram.command.CommandPackageWithUSymbol $r20;
        net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2 $r21, $r23;
        net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2$Mode $r22, $r24;
        net.sourceforge.plantuml.command.note.CommandFactoryNote $r25;
        net.sourceforge.plantuml.command.Command $r27, $r39, $r40, $r44, $r46, $r47, $r48, $r51, $r52;
        net.sourceforge.plantuml.command.CommandNamespace $r28;
        net.sourceforge.plantuml.command.CommandNamespace2 $r29;
        net.sourceforge.plantuml.command.CommandNamespaceEmpty $r30;
        net.sourceforge.plantuml.classdiagram.command.CommandStereotype $r31;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass $r32;
        net.sourceforge.plantuml.UmlDiagramType $r33, $r35;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkLollipop $r34;
        net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity $r36;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r37, $r42;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity $r41;
        net.sourceforge.plantuml.classdiagram.command.CommandUrl $r45;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink $r49;
        net.sourceforge.plantuml.command.note.CommandConstraintOnLinks $r53;
        net.sourceforge.plantuml.classdiagram.command.CommandDiamondAssociation $r54;
        net.sourceforge.plantuml.classdiagram.command.CommandNamespaceSeparator $r55;
        net.sourceforge.plantuml.descdiagram.command.CommandCreateElementMultilines $r56, $r57;

        r5 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagramFactory;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new net.sourceforge.plantuml.command.CommandFootboxIgnored;

        specialinvoke $r2.<net.sourceforge.plantuml.command.CommandFootboxIgnored: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.command.CommandRankDir;

        specialinvoke $r3.<net.sourceforge.plantuml.command.CommandRankDir: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.descdiagram.command.CommandNewpage;

        specialinvoke $r4.<net.sourceforge.plantuml.descdiagram.command.CommandNewpage: void <init>(net.sourceforge.plantuml.command.PSystemCommandFactory)>(r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r6 = new net.sourceforge.plantuml.classdiagram.command.CommandAddMethod;

        specialinvoke $r6.<net.sourceforge.plantuml.classdiagram.command.CommandAddMethod: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonHides(java.util.List)>($r0);

        $r7 = new net.sourceforge.plantuml.classdiagram.command.CommandHideShow2;

        specialinvoke $r7.<net.sourceforge.plantuml.classdiagram.command.CommandHideShow2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new net.sourceforge.plantuml.classdiagram.command.CommandRemoveRestore;

        specialinvoke $r8.<net.sourceforge.plantuml.classdiagram.command.CommandRemoveRestore: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new net.sourceforge.plantuml.classdiagram.command.CommandCreateClassMultilines;

        specialinvoke $r9.<net.sourceforge.plantuml.classdiagram.command.CommandCreateClassMultilines: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObjectMultilines;

        specialinvoke $r10.<net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObjectMultilines: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new net.sourceforge.plantuml.objectdiagram.command.CommandCreateMap;

        specialinvoke $r11.<net.sourceforge.plantuml.objectdiagram.command.CommandCreateMap: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new net.sourceforge.plantuml.classdiagram.command.CommandCreateClass;

        specialinvoke $r12.<net.sourceforge.plantuml.classdiagram.command.CommandCreateClass: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = new net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject;

        specialinvoke $r13.<net.sourceforge.plantuml.objectdiagram.command.CommandCreateEntityObject: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new net.sourceforge.plantuml.classdiagram.command.CommandAllowMixing;

        specialinvoke $r14.<net.sourceforge.plantuml.classdiagram.command.CommandAllowMixing: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = new net.sourceforge.plantuml.descdiagram.command.CommandCreateElementParenthesis;

        specialinvoke $r15.<net.sourceforge.plantuml.descdiagram.command.CommandCreateElementParenthesis: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = new net.sourceforge.plantuml.classdiagram.command.CommandLayoutNewLine;

        specialinvoke $r16.<net.sourceforge.plantuml.classdiagram.command.CommandLayoutNewLine: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = new net.sourceforge.plantuml.command.CommandPackage;

        specialinvoke $r17.<net.sourceforge.plantuml.command.CommandPackage: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = new net.sourceforge.plantuml.command.CommandEndPackage;

        specialinvoke $r18.<net.sourceforge.plantuml.command.CommandEndPackage: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = new net.sourceforge.plantuml.command.CommandPackageEmpty;

        specialinvoke $r19.<net.sourceforge.plantuml.command.CommandPackageEmpty: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = new net.sourceforge.plantuml.descdiagram.command.CommandPackageWithUSymbol;

        specialinvoke $r20.<net.sourceforge.plantuml.descdiagram.command.CommandPackageWithUSymbol: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = new net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2;

        $r22 = <net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2$Mode: net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2$Mode NORMAL_KEYWORD>;

        specialinvoke $r21.<net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2: void <init>(net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2$Mode)>($r22);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r23 = new net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2;

        $r24 = <net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2$Mode: net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2$Mode WITH_MIX_PREFIX>;

        specialinvoke $r23.<net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2: void <init>(net.sourceforge.plantuml.classdiagram.command.CommandCreateElementFull2$Mode)>($r24);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r23);

        $r25 = new net.sourceforge.plantuml.command.note.CommandFactoryNote;

        specialinvoke $r25.<net.sourceforge.plantuml.command.note.CommandFactoryNote: void <init>()>();

        $r27 = virtualinvoke $r25.<net.sourceforge.plantuml.command.note.CommandFactoryNote: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r27);

        $r28 = new net.sourceforge.plantuml.command.CommandNamespace;

        specialinvoke $r28.<net.sourceforge.plantuml.command.CommandNamespace: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = new net.sourceforge.plantuml.command.CommandNamespace2;

        specialinvoke $r29.<net.sourceforge.plantuml.command.CommandNamespace2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r29);

        $r30 = new net.sourceforge.plantuml.command.CommandNamespaceEmpty;

        specialinvoke $r30.<net.sourceforge.plantuml.command.CommandNamespaceEmpty: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r30);

        $r31 = new net.sourceforge.plantuml.classdiagram.command.CommandStereotype;

        specialinvoke $r31.<net.sourceforge.plantuml.classdiagram.command.CommandStereotype: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r32 = new net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        $r33 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType CLASS>;

        specialinvoke $r32.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: void <init>(net.sourceforge.plantuml.UmlDiagramType)>($r33);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r32);

        $r34 = new net.sourceforge.plantuml.classdiagram.command.CommandLinkLollipop;

        $r35 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType CLASS>;

        specialinvoke $r34.<net.sourceforge.plantuml.classdiagram.command.CommandLinkLollipop: void <init>(net.sourceforge.plantuml.UmlDiagramType)>($r35);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r36 = new net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity;

        $r37 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r37.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ENTITY", "([^%s{}%g<>:]+|[%g][^%g]+[%g])::([%g][^%g]+[%g]|[^%s]+)");

        specialinvoke $r36.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: void <init>(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex)>("a", $r37);

        $r39 = virtualinvoke $r36.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r39);

        $r40 = virtualinvoke $r36.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r40);

        $r41 = new net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        $r42 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r42.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ENTITY", "([^%s{}%g<>]+|[%g][^%g]+[%g])");

        specialinvoke $r41.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: void <init>(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex)>("class", $r42);

        $r44 = virtualinvoke $r41.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r44);

        $r45 = new net.sourceforge.plantuml.classdiagram.command.CommandUrl;

        specialinvoke $r45.<net.sourceforge.plantuml.classdiagram.command.CommandUrl: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r45);

        $r46 = virtualinvoke $r41.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r46);

        $r47 = virtualinvoke $r41.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r47);

        $r48 = virtualinvoke $r25.<net.sourceforge.plantuml.command.note.CommandFactoryNote: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r48);

        $r49 = new net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        specialinvoke $r49.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: void <init>()>();

        $r51 = virtualinvoke $r49.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r51);

        $r52 = virtualinvoke $r49.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r52);

        $r53 = new net.sourceforge.plantuml.command.note.CommandConstraintOnLinks;

        specialinvoke $r53.<net.sourceforge.plantuml.command.note.CommandConstraintOnLinks: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r53);

        $r54 = new net.sourceforge.plantuml.classdiagram.command.CommandDiamondAssociation;

        specialinvoke $r54.<net.sourceforge.plantuml.classdiagram.command.CommandDiamondAssociation: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r54);

        $r55 = new net.sourceforge.plantuml.classdiagram.command.CommandNamespaceSeparator;

        specialinvoke $r55.<net.sourceforge.plantuml.classdiagram.command.CommandNamespaceSeparator: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r55);

        $r56 = new net.sourceforge.plantuml.descdiagram.command.CommandCreateElementMultilines;

        specialinvoke $r56.<net.sourceforge.plantuml.descdiagram.command.CommandCreateElementMultilines: void <init>(int)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r56);

        $r57 = new net.sourceforge.plantuml.descdiagram.command.CommandCreateElementMultilines;

        specialinvoke $r57.<net.sourceforge.plantuml.descdiagram.command.CommandCreateElementMultilines: void <init>(int)>(1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r57);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addTitleCommands(java.util.List)>($r0);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands2(java.util.List)>($r0);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagramFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.classdiagram.ClassDiagram $r4;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagramFactory: net.sourceforge.plantuml.classdiagram.ClassDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }
}
