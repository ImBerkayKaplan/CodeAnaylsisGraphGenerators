public class net.sourceforge.plantuml.style.FromSkinparamToStyle extends java.lang.Object
{
    private static final java.util.Map knowlegde;
    private final java.util.List styles;
    private final java.lang.String stereo;
    private final java.lang.String key;

    private static void addMagic(net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.style.SName r0;
        java.lang.String $r1, r2, $r6, $r12, $r18;
        java.lang.StringBuilder $r3, $r4, $r5, $r9, $r10, $r11, $r15, $r16, $r17;
        net.sourceforge.plantuml.style.SName[] $r7, $r13, $r19, $r21;
        net.sourceforge.plantuml.style.PName $r8, $r14, $r20;

        r0 := @parameter0: net.sourceforge.plantuml.style.SName;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.style.SName: java.lang.String name()>();

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "");

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BackgroundColor");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r7 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r7[0] = r0;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>($r6, $r8, $r7);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BorderColor");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r13 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r13[0] = r0;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>($r12, $r14, $r13);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BorderThickness");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r19 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r19[0] = r0;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>($r18, $r20, $r19);

        $r21 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r21[0] = r0;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>(r2, $r21);

        return;
    }

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.style.FromSkinparamToStyle r0;
        java.util.ArrayList $r1;
        java.lang.String r2, $r5, $r6;
        boolean $z0;
        java.util.StringTokenizer $r3;

        r0 := @this: net.sourceforge.plantuml.style.FromSkinparamToStyle;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.util.List styles> = $r1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("<<");

        if $z0 == 0 goto label1;

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, "<>");

        $r5 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String key> = $r5;

        $r6 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String stereo> = $r6;

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String key> = r2;

        r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String stereo> = null;

     label2:
        return;
    }

    public void convertNow(java.lang.String, net.sourceforge.plantuml.style.AutomaticCounter)
    {
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        net.sourceforge.plantuml.style.FromSkinparamToStyle r0;
        java.lang.String $r1, $r3, $r6, $r30, $r31, r41, r43, r44;
        java.util.Map $r2;
        java.lang.Object $r4, $r7, $r13, $r17, $r22;
        java.util.List r5;
        net.sourceforge.plantuml.style.PName $r8, $r14, $r18, $r24, $r32, $r37;
        net.sourceforge.plantuml.style.AutomaticCounter r9;
        net.sourceforge.plantuml.style.ValueImpl $r10, $r15, $r19, $r25, $r33, $r38;
        net.sourceforge.plantuml.style.SName[] $r11, $r16, $r20, $r26, $r34, $r39;
        java.util.StringTokenizer $r12;
        java.lang.String[] $r21;
        net.sourceforge.plantuml.style.FromSkinparamToStyle$Data r23, r47, r49, r51;
        java.lang.StringBuilder $r27, $r28, $r29;
        net.sourceforge.plantuml.style.SName $r35, $r36, $r40;
        java.util.Iterator r45, r46, r48, r50;

        r0 := @this: net.sourceforge.plantuml.style.FromSkinparamToStyle;

        r41 := @parameter0: java.lang.String;

        r9 := @parameter1: net.sourceforge.plantuml.style.AutomaticCounter;

        $z0 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("right:right");

        if $z0 == 0 goto label01;

        r41 = "right";

     label01:
        $r2 = <net.sourceforge.plantuml.style.FromSkinparamToStyle: java.util.Map knowlegde>;

        $r1 = r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String key>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.util.List) $r4;

        if r5 != null goto label04;

        $r30 = r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String key>;

        $z11 = virtualinvoke $r30.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("shadowing");

        if $z11 == 0 goto label02;

        $r37 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r38 = specialinvoke r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: net.sourceforge.plantuml.style.ValueImpl getShadowingValue(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>(r41, r9);

        $r39 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r40 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r39[0] = $r40;

        specialinvoke r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: void addStyle(net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.Value,net.sourceforge.plantuml.style.SName[])>($r37, $r38, $r39);

        goto label03;

     label02:
        $r31 = r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String key>;

        $z12 = virtualinvoke $r31.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("noteshadowing");

        if $z12 == 0 goto label03;

        $r32 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r33 = specialinvoke r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: net.sourceforge.plantuml.style.ValueImpl getShadowingValue(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>(r41, r9);

        $r34 = newarray (net.sourceforge.plantuml.style.SName)[2];

        $r35 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r34[0] = $r35;

        $r36 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r34[1] = $r36;

        specialinvoke r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: void addStyle(net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.Value,net.sourceforge.plantuml.style.SName[])>($r32, $r33, $r34);

     label03:
        return;

     label04:
        z1 = virtualinvoke r41.<java.lang.String: boolean contains(java.lang.CharSequence)>(";");

        if z1 == 0 goto label15;

        $z4 = virtualinvoke r41.<java.lang.String: boolean startsWith(java.lang.String)>(";");

        if $z4 == 0 goto label05;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        r41 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r12 = new java.util.StringTokenizer;

        specialinvoke $r12.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r41, ";");

        r41 = virtualinvoke $r12.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label06:
        $z13 = virtualinvoke $r12.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z13 == 0 goto label15;

        r43 = virtualinvoke $r12.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z5 = virtualinvoke r43.<java.lang.String: boolean startsWith(java.lang.String)>("text:");

        if $z5 == 0 goto label09;

        $r21 = virtualinvoke r43.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r44 = $r21[1];

        r45 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z10 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label08;

        $r22 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r23 = (net.sourceforge.plantuml.style.FromSkinparamToStyle$Data) $r22;

        $r24 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        $r25 = staticinvoke <net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>(r44, r9);

        $r26 = staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle$Data: net.sourceforge.plantuml.style.SName[] access$000(net.sourceforge.plantuml.style.FromSkinparamToStyle$Data)>(r23);

        specialinvoke r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: void addStyle(net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.Value,net.sourceforge.plantuml.style.SName[])>($r24, $r25, $r26);

        goto label07;

     label08:
        goto label14;

     label09:
        $z6 = virtualinvoke r43.<java.lang.String: boolean startsWith(java.lang.String)>("line.dotted");

        if $z6 == 0 goto label12;

        r46 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z9 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label11;

        $r17 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (net.sourceforge.plantuml.style.FromSkinparamToStyle$Data) $r17;

        $r18 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineStyle>;

        $r19 = staticinvoke <net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>("1;3", r9);

        $r20 = staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle$Data: net.sourceforge.plantuml.style.SName[] access$000(net.sourceforge.plantuml.style.FromSkinparamToStyle$Data)>(r47);

        specialinvoke r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: void addStyle(net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.Value,net.sourceforge.plantuml.style.SName[])>($r18, $r19, $r20);

        goto label10;

     label11:
        goto label14;

     label12:
        $z7 = virtualinvoke r43.<java.lang.String: boolean startsWith(java.lang.String)>("line.dashed");

        if $z7 == 0 goto label14;

        r48 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z8 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label14;

        $r13 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();

        r49 = (net.sourceforge.plantuml.style.FromSkinparamToStyle$Data) $r13;

        $r14 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineStyle>;

        $r15 = staticinvoke <net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>("7;7", r9);

        $r16 = staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle$Data: net.sourceforge.plantuml.style.SName[] access$000(net.sourceforge.plantuml.style.FromSkinparamToStyle$Data)>(r49);

        specialinvoke r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: void addStyle(net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.Value,net.sourceforge.plantuml.style.SName[])>($r14, $r15, $r16);

        goto label13;

     label14:
        goto label06;

     label15:
        $r6 = " ";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r41);

        if $z2 != 0 goto label17;

        r50 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label16:
        $z3 = interfaceinvoke r50.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label17;

        $r7 = interfaceinvoke r50.<java.util.Iterator: java.lang.Object next()>();

        r51 = (net.sourceforge.plantuml.style.FromSkinparamToStyle$Data) $r7;

        $r8 = staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle$Data: net.sourceforge.plantuml.style.PName access$100(net.sourceforge.plantuml.style.FromSkinparamToStyle$Data)>(r51);

        $r10 = staticinvoke <net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>(r41, r9);

        $r11 = staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle$Data: net.sourceforge.plantuml.style.SName[] access$000(net.sourceforge.plantuml.style.FromSkinparamToStyle$Data)>(r51);

        specialinvoke r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: void addStyle(net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.Value,net.sourceforge.plantuml.style.SName[])>($r8, $r10, $r11);

        goto label16;

     label17:
        return;
    }

    private net.sourceforge.plantuml.style.ValueImpl getShadowingValue(java.lang.String, net.sourceforge.plantuml.style.AutomaticCounter)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.style.AutomaticCounter r1;
        net.sourceforge.plantuml.style.ValueImpl $r2, $r3, $r4;
        net.sourceforge.plantuml.style.FromSkinparamToStyle r5;

        r5 := @this: net.sourceforge.plantuml.style.FromSkinparamToStyle;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.style.AutomaticCounter;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("false");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("no");

        if $z1 == 0 goto label2;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>("0", r1);

        return $r2;

     label2:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("yes");

        if $z3 == 0 goto label4;

     label3:
        $r3 = staticinvoke <net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>("3", r1);

        return $r3;

     label4:
        $r4 = staticinvoke <net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String,net.sourceforge.plantuml.style.AutomaticCounter)>(r0, r1);

        return $r4;
    }

    private transient void addStyle(net.sourceforge.plantuml.style.PName, net.sourceforge.plantuml.style.Value, net.sourceforge.plantuml.style.SName[])
    {
        java.util.EnumMap $r0;
        net.sourceforge.plantuml.style.PName r2;
        net.sourceforge.plantuml.style.Value r3;
        net.sourceforge.plantuml.style.SName[] r5;
        net.sourceforge.plantuml.style.FromSkinparamToStyle r6;
        java.lang.String $r7, $r10, r12;
        net.sourceforge.plantuml.style.Style $r8;
        java.util.List $r9;
        java.lang.String[] r11;
        int i0, i1;
        net.sourceforge.plantuml.style.StyleSignature r13;

        r6 := @this: net.sourceforge.plantuml.style.FromSkinparamToStyle;

        r2 := @parameter0: net.sourceforge.plantuml.style.PName;

        r3 := @parameter1: net.sourceforge.plantuml.style.Value;

        r5 := @parameter2: net.sourceforge.plantuml.style.SName[];

        $r0 = new java.util.EnumMap;

        specialinvoke $r0.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lnet/sourceforge/plantuml/style/PName;");

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        r13 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>(r5);

        $r7 = r6.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String stereo>;

        if $r7 == null goto label2;

        $r10 = r6.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.lang.String stereo>;

        r11 = virtualinvoke $r10.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\&");

        i0 = lengthof r11;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r12 = r11[i1];

        r13 = virtualinvoke r13.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>(r12);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r9 = r6.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.util.List styles>;

        $r8 = new net.sourceforge.plantuml.style.Style;

        specialinvoke $r8.<net.sourceforge.plantuml.style.Style: void <init>(net.sourceforge.plantuml.style.StyleSignature,java.util.Map)>(r13, $r0);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r8);

        return;
    }

    public java.util.List getStyles()
    {
        net.sourceforge.plantuml.style.FromSkinparamToStyle r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.style.FromSkinparamToStyle;

        $r1 = r0.<net.sourceforge.plantuml.style.FromSkinparamToStyle: java.util.List styles>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    private static transient void addConvert(java.lang.String, net.sourceforge.plantuml.style.PName, net.sourceforge.plantuml.style.SName[])
    {
        java.util.Map $r0, $r6;
        java.lang.Object $r1;
        net.sourceforge.plantuml.style.FromSkinparamToStyle$Data $r2;
        net.sourceforge.plantuml.style.SName[] r3;
        net.sourceforge.plantuml.style.PName r4;
        java.util.ArrayList $r5;
        java.lang.String r8, r9;
        java.util.List r10;

        r8 := @parameter0: java.lang.String;

        r4 := @parameter1: net.sourceforge.plantuml.style.PName;

        r3 := @parameter2: net.sourceforge.plantuml.style.SName[];

        r9 = virtualinvoke r8.<java.lang.String: java.lang.String toLowerCase()>();

        $r0 = <net.sourceforge.plantuml.style.FromSkinparamToStyle: java.util.Map knowlegde>;

        $r1 = interfaceinvoke $r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r9);

        r10 = (java.util.List) $r1;

        if r10 != null goto label1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r10 = $r5;

        $r6 = <net.sourceforge.plantuml.style.FromSkinparamToStyle: java.util.Map knowlegde>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r9, $r5);

     label1:
        $r2 = new net.sourceforge.plantuml.style.FromSkinparamToStyle$Data;

        specialinvoke $r2.<net.sourceforge.plantuml.style.FromSkinparamToStyle$Data: void <init>(net.sourceforge.plantuml.style.SName[],net.sourceforge.plantuml.style.PName)>(r3, r4);

        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    private static transient void addConFont(java.lang.String, net.sourceforge.plantuml.style.SName[])
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r7, $r8, $r9, $r12, $r13, $r14, $r17, $r18, $r19;
        java.lang.String r1, $r4, $r10, $r15, $r20;
        net.sourceforge.plantuml.style.SName[] r5;
        net.sourceforge.plantuml.style.PName $r6, $r11, $r16, $r21;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: net.sourceforge.plantuml.style.SName[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FontSize");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontSize>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>($r4, $r6, r5);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FontStyle");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontStyle>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>($r10, $r11, r5);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FontColor");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>($r15, $r16, r5);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FontName");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontName>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>($r20, $r21, r5);

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;
        net.sourceforge.plantuml.style.SName[] $r1, $r5, $r16, $r18, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r49, $r51, $r54, $r57, $r60, $r63, $r65, $r67, $r70, $r73, $r76, $r79, $r82, $r85, $r87, $r90, $r93, $r95, $r98, $r101, $r104, $r108, $r111, $r114, $r116, $r119, $r123, $r127, $r131, $r134, $r137, $r140, $r143, $r145, $r148, $r151, $r153, $r155, $r158, $r161, $r164, $r167, $r170, $r173, $r175, $r178, $r181, $r184, $r187, $r190, $r193, $r196, $r199, $r201, $r204, $r207, $r210, $r213, $r215, $r218, $r221, $r224, $r227, $r229, $r231, $r234, $r237, $r240, $r242, $r244, $r247, $r250, $r253, $r255, $r257;
        net.sourceforge.plantuml.style.SName $r2, $r3, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r19, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r50, $r52, $r55, $r58, $r61, $r64, $r66, $r68, $r71, $r74, $r77, $r80, $r83, $r86, $r88, $r91, $r94, $r96, $r99, $r102, $r105, $r107, $r109, $r112, $r115, $r117, $r120, $r121, $r124, $r125, $r128, $r129, $r132, $r135, $r138, $r141, $r144, $r146, $r149, $r152, $r154, $r156, $r159, $r162, $r165, $r168, $r171, $r174, $r176, $r179, $r182, $r185, $r188, $r191, $r194, $r197, $r200, $r202, $r205, $r208, $r211, $r214, $r216, $r219, $r222, $r225, $r228, $r230, $r232, $r235, $r238, $r241, $r243, $r245, $r248, $r251, $r254, $r256, $r258, $r260, $r261, $r262, $r263, $r264, $r265, $r266, $r267, $r268, $r269, $r270, $r271, $r272, $r273, $r274, $r275, $r276, $r277;
        net.sourceforge.plantuml.style.PName $r4, $r8, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r53, $r56, $r59, $r62, $r69, $r72, $r75, $r78, $r81, $r84, $r89, $r92, $r97, $r100, $r103, $r106, $r110, $r113, $r118, $r122, $r126, $r130, $r133, $r136, $r139, $r142, $r147, $r150, $r157, $r160, $r163, $r166, $r169, $r172, $r177, $r180, $r183, $r186, $r189, $r192, $r195, $r198, $r203, $r206, $r209, $r212, $r217, $r220, $r223, $r226, $r233, $r236, $r239, $r246, $r249, $r252, $r259;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <net.sourceforge.plantuml.style.FromSkinparamToStyle: java.util.Map knowlegde> = $r0;

        $r4 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r1 = newarray (net.sourceforge.plantuml.style.SName)[2];

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName participant>;

        $r1[0] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName clickable>;

        $r1[1] = $r3;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("participantClickableBackgroundColor", $r4, $r1);

        $r8 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r5 = newarray (net.sourceforge.plantuml.style.SName)[2];

        $r6 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName participant>;

        $r5[0] = $r6;

        $r7 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName clickable>;

        $r5[1] = $r7;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("participantClickableBorderColor", $r8, $r5);

        $r9 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName participant>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r9);

        $r10 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName boundary>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r10);

        $r11 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName control>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r11);

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName collections>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r12);

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName actor>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r13);

        $r14 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName database>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r14);

        $r15 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName entity>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r15);

        $r16 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r17 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName header>;

        $r16[0] = $r17;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("header", $r16);

        $r18 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r19 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName footer>;

        $r18[0] = $r19;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("footer", $r18);

        $r22 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontSize>;

        $r20 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r21 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r20[0] = $r21;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("defaultFontSize", $r22, $r20);

        $r25 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontSize>;

        $r23 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r24 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stereotype>;

        $r23[0] = $r24;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceStereotypeFontSize", $r25, $r23);

        $r28 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontStyle>;

        $r26 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r27 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stereotype>;

        $r26[0] = $r27;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceStereotypeFontStyle", $r28, $r26);

        $r31 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        $r29 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r30 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stereotype>;

        $r29[0] = $r30;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceStereotypeFontColor", $r31, $r29);

        $r34 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontName>;

        $r32 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r33 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stereotype>;

        $r32[0] = $r33;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceStereotypeFontName", $r34, $r32);

        $r37 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r35 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r36 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName reference>;

        $r35[0] = $r36;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceReferenceBorderColor", $r37, $r35);

        $r40 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r38 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r39 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName referenceHeader>;

        $r38[0] = $r39;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceReferenceBorderColor", $r40, $r38);

        $r43 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r41 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r42 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName reference>;

        $r41[0] = $r42;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceReferenceBackgroundColor", $r43, $r41);

        $r46 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r44 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r45 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName referenceHeader>;

        $r44[0] = $r45;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceReferenceHeaderBackgroundColor", $r46, $r44);

        $r47 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r48 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName reference>;

        $r47[0] = $r48;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("sequenceReference", $r47);

        $r49 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r50 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName referenceHeader>;

        $r49[0] = $r50;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("sequenceReference", $r49);

        $r53 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r51 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r52 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName group>;

        $r51[0] = $r52;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceGroupBorderThickness", $r53, $r51);

        $r56 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r54 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r55 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName group>;

        $r54[0] = $r55;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceGroupBorderColor", $r56, $r54);

        $r59 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r57 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r58 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName groupHeader>;

        $r57[0] = $r58;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceGroupBorderColor", $r59, $r57);

        $r62 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r60 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r61 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName groupHeader>;

        $r60[0] = $r61;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceGroupBackgroundColor", $r62, $r60);

        $r63 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r64 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName group>;

        $r63[0] = $r64;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("SequenceGroup", $r63);

        $r65 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r66 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName groupHeader>;

        $r65[0] = $r66;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("SequenceGroupHeader", $r65);

        $r69 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r67 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r68 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName box>;

        $r67[0] = $r68;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceBoxBorderColor", $r69, $r67);

        $r72 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r70 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r71 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName box>;

        $r70[0] = $r71;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceBoxBackgroundColor", $r72, $r70);

        $r75 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r73 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r74 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName lifeLine>;

        $r73[0] = $r74;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceLifeLineBorderColor", $r75, $r73);

        $r78 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r76 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r77 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName lifeLine>;

        $r76[0] = $r77;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceLifeLineBackgroundColor", $r78, $r76);

        $r81 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r79 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r80 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName separator>;

        $r79[0] = $r80;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceDividerBackgroundColor", $r81, $r79);

        $r84 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r82 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r83 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName separator>;

        $r82[0] = $r83;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceDividerBorderColor", $r84, $r82);

        $r85 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r86 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName separator>;

        $r85[0] = $r86;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("sequenceDivider", $r85);

        $r89 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r87 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r88 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName separator>;

        $r87[0] = $r88;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("sequenceDividerBorderThickness", $r89, $r87);

        $r92 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName HorizontalAlignment>;

        $r90 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r91 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r90[0] = $r91;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SequenceMessageAlignment", $r92, $r90);

        $r93 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r94 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r93[0] = $r94;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("note", $r93);

        $r97 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r95 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r96 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r95[0] = $r96;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("noteBorderThickness", $r97, $r95);

        $r100 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r98 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r99 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r98[0] = $r99;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("noteBackgroundColor", $r100, $r98);

        $r103 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r101 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r102 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName group>;

        $r101[0] = $r102;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("packageBackgroundColor", $r103, $r101);

        $r106 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r104 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r105 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName group>;

        $r104[0] = $r105;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("packageBorderColor", $r106, $r104);

        $r107 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName package_>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r107);

        $r110 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r108 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r109 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName partition>;

        $r108[0] = $r109;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("PartitionBorderColor", $r110, $r108);

        $r113 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r111 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r112 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName partition>;

        $r111[0] = $r112;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("PartitionBackgroundColor", $r113, $r111);

        $r114 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r115 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName partition>;

        $r114[0] = $r115;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("Partition", $r114);

        $r118 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName HyperLinkColor>;

        $r116 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r117 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r116[0] = $r117;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("hyperlinkColor", $r118, $r116);

        $r122 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r119 = newarray (net.sourceforge.plantuml.style.SName)[2];

        $r120 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName circle>;

        $r119[0] = $r120;

        $r121 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName start>;

        $r119[1] = $r121;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityStartColor", $r122, $r119);

        $r126 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r123 = newarray (net.sourceforge.plantuml.style.SName)[2];

        $r124 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName circle>;

        $r123[0] = $r124;

        $r125 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName end>;

        $r123[1] = $r125;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityEndColor", $r126, $r123);

        $r130 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r127 = newarray (net.sourceforge.plantuml.style.SName)[2];

        $r128 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName circle>;

        $r127[0] = $r128;

        $r129 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stop>;

        $r127[1] = $r129;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityStopColor", $r130, $r127);

        $r133 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r131 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r132 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityBar>;

        $r131[0] = $r132;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityBarColor", $r133, $r131);

        $r136 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r134 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r135 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r134[0] = $r135;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityBorderColor", $r136, $r134);

        $r139 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r137 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r138 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r137[0] = $r138;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityBorderThickness", $r139, $r137);

        $r142 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r140 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r141 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r140[0] = $r141;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityBackgroundColor", $r142, $r140);

        $r143 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r144 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r143[0] = $r144;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("activity", $r143);

        $r147 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r145 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r146 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName diamond>;

        $r145[0] = $r146;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityDiamondBackgroundColor", $r147, $r145);

        $r150 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r148 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r149 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName diamond>;

        $r148[0] = $r149;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("activityDiamondBorderColor", $r150, $r148);

        $r151 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r152 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName diamond>;

        $r151[0] = $r152;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("activityDiamond", $r151);

        $r153 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r154 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r153[0] = $r154;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("arrow", $r153);

        $r157 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r155 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r156 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r155[0] = $r156;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("arrowThickness", $r157, $r155);

        $r160 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r158 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r159 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r158[0] = $r159;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("arrowColor", $r160, $r158);

        $r163 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineStyle>;

        $r161 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r162 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r161[0] = $r162;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("arrowStyle", $r163, $r161);

        $r166 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName HorizontalAlignment>;

        $r164 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r165 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r164[0] = $r165;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("defaulttextalignment", $r166, $r164);

        $r169 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontName>;

        $r167 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r168 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r167[0] = $r168;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("defaultFontName", $r169, $r167);

        $r172 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        $r170 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r171 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r170[0] = $r171;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("defaultFontColor", $r172, $r170);

        $r173 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r174 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName swimlane>;

        $r173[0] = $r174;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("SwimlaneTitle", $r173);

        $r177 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r175 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r176 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName swimlane>;

        $r175[0] = $r176;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SwimlaneTitleBackgroundColor", $r177, $r175);

        $r180 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r178 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r179 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName swimlane>;

        $r178[0] = $r179;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SwimlaneBorderColor", $r180, $r178);

        $r183 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r181 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r182 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName swimlane>;

        $r181[0] = $r182;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("SwimlaneBorderThickness", $r183, $r181);

        $r186 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r184 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r185 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r184[0] = $r185;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("roundCorner", $r186, $r184);

        $r189 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r187 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r188 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName title>;

        $r187[0] = $r188;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("titleBorderThickness", $r189, $r187);

        $r192 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r190 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r191 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName title>;

        $r190[0] = $r191;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("titleBorderColor", $r192, $r190);

        $r195 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r193 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r194 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName title>;

        $r193[0] = $r194;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("titleBackgroundColor", $r195, $r193);

        $r198 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r196 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r197 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName title>;

        $r196[0] = $r197;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("titleBorderRoundCorner", $r198, $r196);

        $r199 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r200 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName title>;

        $r199[0] = $r200;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("title", $r199);

        $r203 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r201 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r202 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName legend>;

        $r201[0] = $r202;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("legendBorderThickness", $r203, $r201);

        $r206 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r204 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r205 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName legend>;

        $r204[0] = $r205;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("legendBorderColor", $r206, $r204);

        $r209 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r207 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r208 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName legend>;

        $r207[0] = $r208;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("legendBackgroundColor", $r209, $r207);

        $r212 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r210 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r211 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName legend>;

        $r210[0] = $r211;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("legendBorderRoundCorner", $r212, $r210);

        $r213 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r214 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName legend>;

        $r213[0] = $r214;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("legend", $r213);

        $r217 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName HorizontalAlignment>;

        $r215 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r216 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r215[0] = $r216;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("noteTextAlignment", $r217, $r215);

        $r220 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r218 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r219 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r218[0] = $r219;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("BackgroundColor", $r220, $r218);

        $r223 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r221 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r222 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName class_>;

        $r221[0] = $r222;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("classBackgroundColor", $r223, $r221);

        $r226 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r224 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r225 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName class_>;

        $r224[0] = $r225;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("classBorderColor", $r226, $r224);

        $r227 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r228 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName class_>;

        $r227[0] = $r228;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("class", $r227);

        $r229 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r230 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName class_>;

        $r229[0] = $r230;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("classAttribute", $r229);

        $r233 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r231 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r232 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName class_>;

        $r231[0] = $r232;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("classBorderThickness", $r233, $r231);

        $r236 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r234 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r235 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName object>;

        $r234[0] = $r235;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("objectBackgroundColor", $r236, $r234);

        $r239 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r237 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r238 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName object>;

        $r237[0] = $r238;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("objectBorderColor", $r239, $r237);

        $r240 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r241 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName object>;

        $r240[0] = $r241;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("object", $r240);

        $r242 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r243 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName object>;

        $r242[0] = $r243;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("objectAttribute", $r242);

        $r246 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r244 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r245 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName object>;

        $r244[0] = $r245;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("objectBorderThickness", $r246, $r244);

        $r249 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r247 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r248 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName state>;

        $r247[0] = $r248;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("stateBackgroundColor", $r249, $r247);

        $r252 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r250 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r251 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName state>;

        $r250[0] = $r251;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("stateBorderColor", $r252, $r250);

        $r253 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r254 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName state>;

        $r253[0] = $r254;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("state", $r253);

        $r255 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r256 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName state>;

        $r255[0] = $r256;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConFont(java.lang.String,net.sourceforge.plantuml.style.SName[])>("stateAttribute", $r255);

        $r259 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineThickness>;

        $r257 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r258 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName state>;

        $r257[0] = $r258;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addConvert(java.lang.String,net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.style.SName[])>("stateBorderThickness", $r259, $r257);

        $r260 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName agent>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r260);

        $r261 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName artifact>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r261);

        $r262 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName card>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r262);

        $r263 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName interface_>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r263);

        $r264 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName cloud>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r264);

        $r265 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName component>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r265);

        $r266 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName file>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r266);

        $r267 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName folder>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r267);

        $r268 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName frame>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r268);

        $r269 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName hexagon>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r269);

        $r270 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName node>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r270);

        $r271 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName person>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r271);

        $r272 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName queue>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r272);

        $r273 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName rectangle>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r273);

        $r274 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stack>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r274);

        $r275 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName storage>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r275);

        $r276 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName usecase>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r276);

        $r277 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName map>;

        staticinvoke <net.sourceforge.plantuml.style.FromSkinparamToStyle: void addMagic(net.sourceforge.plantuml.style.SName)>($r277);

        return;
    }
}
