class net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private final java.awt.geom.Point2D dest;
    private final double radius2;
    private final double ortho;
    private final double ang;

    public void <init>(java.awt.geom.Point2D, double)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis r0;
        java.awt.geom.Point2D$Double $r1;
        java.awt.geom.Point2D r2;
        double $d0, $d1, d2;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis;

        r2 := @parameter0: java.awt.geom.Point2D;

        d2 := @parameter1: double;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: double ang> = 70.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: double radius2> = 9.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: double radius2> = 9.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: double ang> = 70.0;

        $r1 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: java.awt.geom.Point2D dest> = $r1;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: double ortho> = d2;

        return;
    }

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: java.awt.geom.Point2D dest>;

        return $r1;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis r0;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UEllipse $r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r3, $r5, $r9;
        net.sourceforge.plantuml.ugraphic.UStroke $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        java.awt.geom.Point2D $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $d0 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: double ortho>;

        $d1 = neg $d0;

        $d2 = $d1 * 180.0;

        $d3 = $d2 / 3.141592653589793;

        $d4 = $d3 + 90.0;

        d5 = $d4 - 70.0;

        $r1 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double,double,double)>(18.0, 18.0, d5, 140.0);

        $r4 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r7 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: java.awt.geom.Point2D dest>;

        $d6 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>();

        $d7 = $d6 - 9.0;

        $r8 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityParenthesis: java.awt.geom.Point2D dest>;

        $d8 = virtualinvoke $r8.<java.awt.geom.Point2D: double getY()>();

        $d9 = $d8 - 9.0;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, $d9);

        $r9 = interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r1);

        return;
    }
}
