public final class net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram;
    private final net.sourceforge.plantuml.FileFormat fileFormat;

    public void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram, net.sourceforge.plantuml.FileFormat) throws java.io.IOException
    {
        net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r1;
        net.sourceforge.plantuml.FileFormat r2;

        r0 := @this: net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r2 := @parameter1: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram> = r1;

        r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.FileFormat fileFormat> = r2;

        return;
    }

    public static java.lang.String getModel(net.sourceforge.plantuml.UmlDiagram)
    {
        net.sourceforge.plantuml.UmlDiagram r0;

        r0 := @parameter0: net.sourceforge.plantuml.UmlDiagram;

        return "model1";
    }

    public void createFiles(java.io.OutputStream) throws java.io.IOException
    {
        net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r1, $r2, $r11, $r15, $r18, $r21, $r24;
        boolean $z0, $z1;
        net.sourceforge.plantuml.FileFormat $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.UnsupportedOperationException $r9;
        net.sourceforge.plantuml.xmi.XmiClassDiagramStar $r10;
        net.sourceforge.plantuml.classdiagram.ClassDiagram $r12, $r16, $r19;
        java.io.OutputStream r13;
        net.sourceforge.plantuml.xmi.XmiClassDiagramArgo $r14;
        net.sourceforge.plantuml.xmi.XmiClassDiagramStandard $r17;
        net.sourceforge.plantuml.xmi.XmiDescriptionDiagram $r20;
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram $r22;
        net.sourceforge.plantuml.xmi.XmiStateDiagram $r23;
        net.sourceforge.plantuml.statediagram.StateDiagram $r25;
        javax.xml.transform.TransformerException $r26;
        java.lang.String $r27, $r29, $r31, $r33;
        java.io.IOException $r28, $r32;
        javax.xml.parsers.ParserConfigurationException $r30;
        net.sourceforge.plantuml.xmi.IXmiClassDiagram r34;

        r0 := @this: net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker;

        r13 := @parameter0: java.io.OutputStream;

     label01:
        $r1 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.statediagram.StateDiagram;

        if $z0 == 0 goto label02;

        $r23 = new net.sourceforge.plantuml.xmi.XmiStateDiagram;

        $r24 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r25 = (net.sourceforge.plantuml.statediagram.StateDiagram) $r24;

        specialinvoke $r23.<net.sourceforge.plantuml.xmi.XmiStateDiagram: void <init>(net.sourceforge.plantuml.statediagram.StateDiagram)>($r25);

        r34 = $r23;

        goto label07;

     label02:
        $r2 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $z1 = $r2 instanceof net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        if $z1 == 0 goto label03;

        $r20 = new net.sourceforge.plantuml.xmi.XmiDescriptionDiagram;

        $r21 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r22 = (net.sourceforge.plantuml.descdiagram.DescriptionDiagram) $r21;

        specialinvoke $r20.<net.sourceforge.plantuml.xmi.XmiDescriptionDiagram: void <init>(net.sourceforge.plantuml.descdiagram.DescriptionDiagram)>($r22);

        r34 = $r20;

        goto label07;

     label03:
        $r4 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r3 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat XMI_STANDARD>;

        if $r4 != $r3 goto label04;

        $r17 = new net.sourceforge.plantuml.xmi.XmiClassDiagramStandard;

        $r18 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r19 = (net.sourceforge.plantuml.classdiagram.ClassDiagram) $r18;

        specialinvoke $r17.<net.sourceforge.plantuml.xmi.XmiClassDiagramStandard: void <init>(net.sourceforge.plantuml.classdiagram.ClassDiagram)>($r19);

        r34 = $r17;

        goto label07;

     label04:
        $r6 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r5 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat XMI_ARGO>;

        if $r6 != $r5 goto label05;

        $r14 = new net.sourceforge.plantuml.xmi.XmiClassDiagramArgo;

        $r15 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r16 = (net.sourceforge.plantuml.classdiagram.ClassDiagram) $r15;

        specialinvoke $r14.<net.sourceforge.plantuml.xmi.XmiClassDiagramArgo: void <init>(net.sourceforge.plantuml.classdiagram.ClassDiagram)>($r16);

        r34 = $r14;

        goto label07;

     label05:
        $r8 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r7 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat XMI_STAR>;

        if $r8 != $r7 goto label06;

        $r10 = new net.sourceforge.plantuml.xmi.XmiClassDiagramStar;

        $r11 = r0.<net.sourceforge.plantuml.xmi.CucaDiagramXmiMaker: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r12 = (net.sourceforge.plantuml.classdiagram.ClassDiagram) $r11;

        specialinvoke $r10.<net.sourceforge.plantuml.xmi.XmiClassDiagramStar: void <init>(net.sourceforge.plantuml.classdiagram.ClassDiagram)>($r12);

        r34 = $r10;

        goto label07;

     label06:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r9;

     label07:
        interfaceinvoke r34.<net.sourceforge.plantuml.xmi.IXmiClassDiagram: void transformerXml(java.io.OutputStream)>(r13);

     label08:
        goto label11;

     label09:
        $r30 := @caughtexception;

        $r31 = virtualinvoke $r30.<javax.xml.parsers.ParserConfigurationException: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r31);

        virtualinvoke $r30.<javax.xml.parsers.ParserConfigurationException: void printStackTrace()>();

        $r32 = new java.io.IOException;

        $r33 = virtualinvoke $r30.<javax.xml.parsers.ParserConfigurationException: java.lang.String toString()>();

        specialinvoke $r32.<java.io.IOException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label10:
        $r26 := @caughtexception;

        $r27 = virtualinvoke $r26.<javax.xml.transform.TransformerException: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r27);

        virtualinvoke $r26.<javax.xml.transform.TransformerException: void printStackTrace()>();

        $r28 = new java.io.IOException;

        $r29 = virtualinvoke $r26.<javax.xml.transform.TransformerException: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r28;

     label11:
        return;

        catch javax.xml.parsers.ParserConfigurationException from label01 to label08 with label09;
        catch javax.xml.transform.TransformerException from label01 to label08 with label10;
    }
}
