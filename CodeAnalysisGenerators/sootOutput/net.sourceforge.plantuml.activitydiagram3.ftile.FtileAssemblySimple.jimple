public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.activitydiagram3.ftile.Ftile
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2;
    private final java.util.Map cachedTranslation;
    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r6;
        java.lang.String $r8;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FtileAssemblySimple ");

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" && ");

        $r6 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        java.util.HashMap $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: java.util.Map cachedTranslation> = $r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1> = r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2> = r3;

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        java.util.Map $r2, $r5;
        java.lang.Object $r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.ugraphic.UTranslate r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: java.util.Map cachedTranslation>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (net.sourceforge.plantuml.ugraphic.UTranslate) $r3;

        if r7 != null goto label1;

        r7 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForSlow(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r4);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: java.util.Map cachedTranslation>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r7);

     label1:
        return r7;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForSlow(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r2, $r3, $r5, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r1;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        java.lang.UnsupportedOperationException $r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8, $r9, $r10, $r11, $r12, $r13, r14, r15;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        if r0 != $r2 goto label1;

        $r13 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.ugraphic.UTranslate getTranslated1(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        return $r13;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        if r0 != $r3 goto label2;

        $r12 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.ugraphic.UTranslate getTranslated2(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        return $r12;

     label2:
        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        r14 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r4);

        if r14 == null goto label3;

        $r10 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.ugraphic.UTranslate getTranslated1(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $r11 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r10);

        return $r11;

     label3:
        $r6 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        r15 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r4);

        if r15 == null goto label4;

        $r8 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.ugraphic.UTranslate getTranslated2(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $r9 = virtualinvoke r15.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r8);

        return $r9;

     label4:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r7;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r5, $r9;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r6, $r7, $r10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r8;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r3, r1);

        $r5 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r6 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r8 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r7, r1);

        $r9 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r1, $r2, $r5, $r7, $r8;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension>;

        if $r1 != null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r8 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry appendBottom(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry)>($r7);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension> = $r8;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension>;

        return $r2;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslated1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2, $r4;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = d0 - $d1;

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d2);

        return $r5;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslated2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, $r4, $r7;
        double d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = d0 - $d1;

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d2, $d3);

        return $r5;
    }

    public java.util.Collection getInnerConnections()
    {
        java.util.List $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r5;
        java.util.Set $r4, $r6, $r7;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r4);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r6);

        $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r7;
    }

    public net.sourceforge.plantuml.ISkinParam skinParam()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.ISkinParam $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        return $r2;
    }

    public net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.style.Style)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.style.Style)>(r1);

        return $r3;
    }

    public java.util.List getWeldingPoints()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r5;
        java.util.List $r3, $r6, $r7;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.List getWeldingPoints()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.List getWeldingPoints()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r7;
    }

    public java.util.Collection getMyChildren()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile[] $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        java.util.List $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r0 = newarray (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)[2];

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r0[0] = $r2;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r0[1] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r4;
    }

    public net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        return $r2;
    }

    public volatile net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }
}
