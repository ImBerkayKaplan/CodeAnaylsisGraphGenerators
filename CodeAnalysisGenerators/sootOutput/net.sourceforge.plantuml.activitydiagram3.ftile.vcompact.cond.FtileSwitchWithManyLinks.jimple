public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks extends net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    private final double margin;

    public void <init>(java.util.List, java.util.List, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r0;
        java.util.List r1, r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r4, r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.graphic.Rainbow r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r4 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r6 := @parameter5: net.sourceforge.plantuml.graphic.StringBounder;

        r7 := @parameter6: net.sourceforge.plantuml.graphic.Rainbow;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: void <init>(java.util.List,java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2, r3, r4, r5, r6);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: double margin> = 10.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: double margin> = 10.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r7;

        return;
    }

    protected double getYdelta1a(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r0;
        java.util.List $r1;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode $r2, $r3;
        double $d0, $d1, $d2, d3, d4;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        java.lang.Object $r7;
        net.sourceforge.plantuml.activitydiagram3.Branch r8;
        net.sourceforge.plantuml.graphic.TextBlock $r9;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r10;
        java.util.Iterator r11;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d3 = 10.0;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List branches>;

        r11 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r7;

        $r9 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlockPositive()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d2 = virtualinvoke $r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d3 = staticinvoke <java.lang.Math: double max(double,double)>(d3, $d2);

        goto label1;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode mode>;

        $r2 = <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode BIG_DIAMOND>;

        if $r3 != $r2 goto label3;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        d4 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d1 = d4 / 2.0;

        d3 = d3 + $d1;

     label3:
        $d0 = d3 + 10.0;

        return $d0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addLinks(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: void addIngoingArrows(java.util.List)>($r0);

        specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: void addOutgoingArrows(net.sourceforge.plantuml.graphic.StringBounder,java.util.List)>(r3, $r0);

        $r4 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>(r2, $r0);

        return $r4;
    }

    private void addIngoingArrows(java.util.List)
    {
        java.util.List r0, $r3, $r5, $r10, $r11, $r13, $r15, $r18, $r19, $r23;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionHorizontalThenVertical $r1, $r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r2;
        java.lang.Object $r4, $r7, $r12, $r16, $r20, $r24;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r6, $r14, r21;
        net.sourceforge.plantuml.activitydiagram3.Branch $r8, $r17, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop $r22;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r0 := @parameter0: java.util.List;

        $r1 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionHorizontalThenVertical;

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r4;

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List branches>;

        $r7 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r7;

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionHorizontalThenVertical: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.Branch)>(r2, $r6, $r8);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r9 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionHorizontalThenVertical;

        $r11 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $i0 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i1);

        $r14 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r12;

        $r15 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List branches>;

        $r13 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $i2 = interfaceinvoke $r13.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>($i3);

        $r17 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r16;

        specialinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionHorizontalThenVertical: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.Branch)>(r2, $r14, $r17);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        i6 = 1;

     label1:
        $r18 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $i4 = interfaceinvoke $r18.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        if i6 >= $i5 goto label2;

        $r19 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i6);

        r21 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r20;

        $r22 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop;

        $r23 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List branches>;

        $r24 = interfaceinvoke $r23.<java.util.List: java.lang.Object get(int)>(i6);

        $r25 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r24;

        specialinvoke $r22.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalTop: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.Branch)>(r2, r21, $r25);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r22);

        i6 = i6 + 1;

        goto label1;

     label2:
        return;
    }

    private void addOutgoingArrows(net.sourceforge.plantuml.graphic.StringBounder, java.util.List)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        int i0, i1, $i2, i3;
        java.util.List $r2, $r3, r7, $r9, $r14, $r16, $r22, $r24;
        java.lang.Object $r4, $r10, $r15, $r18, $r23, $r26;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r5, $r17, $r25;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom $r8;
        net.sourceforge.plantuml.activitydiagram3.Branch $r11, $r19, $r27;
        net.sourceforge.plantuml.graphic.TextBlock $r12, $r20, $r28;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal $r13, $r21;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r7 := @parameter1: java.util.List;

        i0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: int getFirstOutgoingArrow(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        i1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: int getLastOutgoingArrow(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 >= $i2 goto label1;

        $r21 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal;

        $r22 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i0);

        $r25 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r23;

        $r24 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List branches>;

        $r26 = interfaceinvoke $r24.<java.util.List: java.lang.Object get(int)>(i0);

        $r27 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r26;

        $r28 = virtualinvoke $r27.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlockSpecial()>();

        specialinvoke $r21.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.TextBlock)>(r0, $r25, $r28);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r21);

     label1:
        if i1 <= 0 goto label2;

        $r13 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal;

        $r14 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i1);

        $r17 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r15;

        $r16 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List branches>;

        $r18 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>(i1);

        $r19 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r18;

        $r20 = virtualinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlockSpecial()>();

        specialinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalThenHorizontal: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.TextBlock)>(r0, $r17, $r20);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r13);

     label2:
        i3 = i0 + 1;

     label3:
        if i3 >= i1 goto label5;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r4;

        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 == 0 goto label4;

        $r8 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List branches>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i3);

        $r11 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r10;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlockSpecial()>();

        specialinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks$ConnectionVerticalBottom: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.TextBlock)>(r0, r5, $r12);

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        return;
    }

    private int getFirstOutgoingArrow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r0;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r7;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        i3 = 0;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        if i3 >= $i1 goto label3;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i3);

        r5 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r4;

        $r7 = interfaceinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $z0 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 == 0 goto label2;

        return i3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i2;
    }

    private int getLastOutgoingArrow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r0;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r4;
        net.sourceforge.plantuml.graphic.StringBounder r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = $i0 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: java.util.List tiles>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r3;

        $r6 = interfaceinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r5);

        $z0 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 == 0 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    static net.sourceforge.plantuml.graphic.Rainbow access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks r0;
        net.sourceforge.plantuml.graphic.Rainbow $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        return $r1;
    }
}
