class net.sourceforge.plantuml.cucadiagram.MagmaList extends java.lang.Object
{
    private final java.util.List all;

    void <init>()
    {
        net.sourceforge.plantuml.cucadiagram.MagmaList r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MagmaList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.MagmaList: java.util.List all> = $r1;

        return;
    }

    public void add(net.sourceforge.plantuml.cucadiagram.Magma)
    {
        net.sourceforge.plantuml.cucadiagram.MagmaList r0;
        net.sourceforge.plantuml.cucadiagram.Magma r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MagmaList;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Magma;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.MagmaList: java.util.List all>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.MagmaList getMagmas(net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.MagmaList $r0, r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.cucadiagram.Magma r6;
        net.sourceforge.plantuml.cucadiagram.IGroup $r7, r8;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.MagmaList;

        r8 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        $r0 = new net.sourceforge.plantuml.cucadiagram.MagmaList;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.MagmaList: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.MagmaList: java.util.List all>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.cucadiagram.Magma) $r5;

        $r7 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.IGroup getContainer()>();

        if $r7 != r8 goto label2;

        virtualinvoke $r0.<net.sourceforge.plantuml.cucadiagram.MagmaList: void add(net.sourceforge.plantuml.cucadiagram.Magma)>(r6);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public int size()
    {
        net.sourceforge.plantuml.cucadiagram.MagmaList r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.MagmaList;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.MagmaList: java.util.List all>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public void putInSquare()
    {
        net.sourceforge.plantuml.cucadiagram.MagmaList$1 $r0;
        net.sourceforge.plantuml.cucadiagram.MagmaList r1;
        net.sourceforge.plantuml.cucadiagram.SquareMaker $r3;
        java.util.List $r4;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.MagmaList;

        $r0 = new net.sourceforge.plantuml.cucadiagram.MagmaList$1;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.MagmaList$1: void <init>(net.sourceforge.plantuml.cucadiagram.MagmaList)>(r1);

        $r3 = new net.sourceforge.plantuml.cucadiagram.SquareMaker;

        specialinvoke $r3.<net.sourceforge.plantuml.cucadiagram.SquareMaker: void <init>()>();

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.MagmaList: java.util.List all>;

        virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.SquareMaker: void putInSquare(java.util.List,net.sourceforge.plantuml.cucadiagram.SquareLinker)>($r4, $r0);

        return;
    }
}
