public class net.sourceforge.plantuml.project.time.Instant extends java.lang.Object implements java.lang.Comparable, net.sourceforge.plantuml.project.Value
{
    private final long ms;

    public static net.sourceforge.plantuml.project.time.Instant create(long)
    {
        net.sourceforge.plantuml.project.time.Instant $r0;
        long l0;

        l0 := @parameter0: long;

        $r0 = new net.sourceforge.plantuml.project.time.Instant;

        specialinvoke $r0.<net.sourceforge.plantuml.project.time.Instant: void <init>(long)>(l0);

        return $r0;
    }

    public static net.sourceforge.plantuml.project.time.Instant today()
    {
        long $l0;
        net.sourceforge.plantuml.project.time.Instant $r0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = staticinvoke <net.sourceforge.plantuml.project.time.Instant: net.sourceforge.plantuml.project.time.Instant create(long)>($l0);

        return $r0;
    }

    private void <init>(long)
    {
        net.sourceforge.plantuml.project.time.Instant r0;
        long l0;

        r0 := @this: net.sourceforge.plantuml.project.time.Instant;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.time.Instant: long ms> = l0;

        return;
    }

    public final long getMillis()
    {
        net.sourceforge.plantuml.project.time.Instant r0;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.project.time.Instant;

        $l0 = r0.<net.sourceforge.plantuml.project.time.Instant: long ms>;

        return $l0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        net.sourceforge.plantuml.project.time.Instant r2;
        long $l0;
        java.lang.String $r4;

        r2 := @this: net.sourceforge.plantuml.project.time.Instant;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $l0 = r2.<net.sourceforge.plantuml.project.time.Instant: long ms>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.project.time.Instant r0;
        java.lang.Long $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.project.time.Instant;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.project.time.Instant: java.lang.Long toLong()>();

        $i0 = virtualinvoke $r1.<java.lang.Long: int hashCode()>();

        return $i0;
    }

    private java.lang.Long toLong()
    {
        net.sourceforge.plantuml.project.time.Instant r0;
        long $l0;
        java.lang.Long $r1;

        r0 := @this: net.sourceforge.plantuml.project.time.Instant;

        $l0 = r0.<net.sourceforge.plantuml.project.time.Instant: long ms>;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.project.time.Instant r1, r2;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.project.time.Instant;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.project.time.Instant) r0;

        $l1 = r2.<net.sourceforge.plantuml.project.time.Instant: long ms>;

        $l0 = r1.<net.sourceforge.plantuml.project.time.Instant: long ms>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int compareTo(net.sourceforge.plantuml.project.time.Instant)
    {
        net.sourceforge.plantuml.project.time.Instant r0, r2;
        java.lang.Long $r1, $r3;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.project.time.Instant;

        r2 := @parameter0: net.sourceforge.plantuml.project.time.Instant;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.project.time.Instant: java.lang.Long toLong()>();

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.project.time.Instant: java.lang.Long toLong()>();

        $i0 = virtualinvoke $r1.<java.lang.Long: int compareTo(java.lang.Long)>($r3);

        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        net.sourceforge.plantuml.project.time.Instant r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.project.time.Instant;

        r1 := @parameter0: java.lang.Object;

        $r2 = (net.sourceforge.plantuml.project.time.Instant) r1;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.project.time.Instant: int compareTo(net.sourceforge.plantuml.project.time.Instant)>($r2);

        return $i0;
    }
}
