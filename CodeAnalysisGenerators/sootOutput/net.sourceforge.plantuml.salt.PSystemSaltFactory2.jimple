public class net.sourceforge.plantuml.salt.PSystemSaltFactory2 extends net.sourceforge.plantuml.command.PSystemCommandFactory
{

    public void <init>(net.sourceforge.plantuml.core.DiagramType)
    {
        net.sourceforge.plantuml.salt.PSystemSaltFactory2 r0;
        net.sourceforge.plantuml.core.DiagramType r1;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory2;

        r1 := @parameter0: net.sourceforge.plantuml.core.DiagramType;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>(net.sourceforge.plantuml.core.DiagramType)>(r1);

        return;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.salt.PSystemSaltFactory2 r2;
        net.sourceforge.plantuml.core.DiagramType $r3, $r4;
        net.sourceforge.plantuml.salt.CommandAnything $r5;
        net.sourceforge.plantuml.salt.CommandSalt $r6;

        r2 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory2;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.salt.PSystemSaltFactory2: net.sourceforge.plantuml.core.DiagramType getDiagramType()>();

        $r4 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType UML>;

        if $r3 != $r4 goto label1;

        $r6 = new net.sourceforge.plantuml.salt.CommandSalt;

        specialinvoke $r6.<net.sourceforge.plantuml.salt.CommandSalt: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

     label1:
        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands2(java.util.List)>($r0);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addTitleCommands(java.util.List)>($r0);

        $r5 = new net.sourceforge.plantuml.salt.CommandAnything;

        specialinvoke $r5.<net.sourceforge.plantuml.salt.CommandAnything: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        return $r0;
    }

    public net.sourceforge.plantuml.salt.PSystemSalt createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.PSystemSalt $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.salt.PSystemSaltFactory2 r4;
        net.sourceforge.plantuml.core.DiagramType $r5, $r6;
        net.sourceforge.plantuml.ISkinSimple r7;

        r4 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory2;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r7 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.salt.PSystemSalt;

        specialinvoke $r0.<net.sourceforge.plantuml.salt.PSystemSalt: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource)>(r1, r2);

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.salt.PSystemSaltFactory2: net.sourceforge.plantuml.core.DiagramType getDiagramType()>();

        $r6 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType SALT>;

        if $r5 != $r6 goto label1;

        virtualinvoke $r0.<net.sourceforge.plantuml.salt.PSystemSalt: void setIamSalt(boolean)>(1);

     label1:
        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.PSystemSaltFactory2 r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.salt.PSystemSalt $r4;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory2;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.salt.PSystemSaltFactory2: net.sourceforge.plantuml.salt.PSystemSalt createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }
}
