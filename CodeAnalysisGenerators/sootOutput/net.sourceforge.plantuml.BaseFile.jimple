public class net.sourceforge.plantuml.BaseFile extends java.lang.Object
{
    private final java.lang.String basename;
    private final net.sourceforge.plantuml.security.SFile basedir;

    public void <init>()
    {
        net.sourceforge.plantuml.BaseFile r0;

        r0 := @this: net.sourceforge.plantuml.BaseFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.BaseFile: net.sourceforge.plantuml.security.SFile basedir> = null;

        r0.<net.sourceforge.plantuml.BaseFile: java.lang.String basename> = null;

        return;
    }

    public void <init>(net.sourceforge.plantuml.security.SFile)
    {
        net.sourceforge.plantuml.BaseFile r0;
        net.sourceforge.plantuml.security.SFile r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.BaseFile;

        r1 := @parameter0: net.sourceforge.plantuml.security.SFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getParentFile()>();

        r0.<net.sourceforge.plantuml.BaseFile: net.sourceforge.plantuml.security.SFile basedir> = $r2;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.security.SFile: java.lang.String getName()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.BaseFile: java.lang.String extractBasename(java.lang.String)>($r3);

        r0.<net.sourceforge.plantuml.BaseFile: java.lang.String basename> = $r4;

        return;
    }

    private static java.lang.String extractBasename(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 != -1 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.BaseFile r0;
        net.sourceforge.plantuml.security.SFile $r1, $r4;
        java.lang.String $r2, $r7, $r9;
        java.lang.StringBuilder $r3, $r5, $r6, $r8;

        r0 := @this: net.sourceforge.plantuml.BaseFile;

        $r1 = r0.<net.sourceforge.plantuml.BaseFile: net.sourceforge.plantuml.security.SFile basedir>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.BaseFile: java.lang.String basename>;

        if $r2 != null goto label2;

     label1:
        return "(DEFAULT)";

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<net.sourceforge.plantuml.BaseFile: net.sourceforge.plantuml.security.SFile basedir>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r0.<net.sourceforge.plantuml.BaseFile: java.lang.String basename>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String getBasename()
    {
        net.sourceforge.plantuml.BaseFile r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.BaseFile;

        $r1 = r0.<net.sourceforge.plantuml.BaseFile: java.lang.String basename>;

        return $r1;
    }

    public net.sourceforge.plantuml.security.SFile getBasedir()
    {
        net.sourceforge.plantuml.BaseFile r0;
        net.sourceforge.plantuml.security.SFile $r1;

        r0 := @this: net.sourceforge.plantuml.BaseFile;

        $r1 = r0.<net.sourceforge.plantuml.BaseFile: net.sourceforge.plantuml.security.SFile basedir>;

        return $r1;
    }

    public net.sourceforge.plantuml.security.SFile getTraceFile(java.lang.String)
    {
        net.sourceforge.plantuml.BaseFile r0;
        net.sourceforge.plantuml.security.SFile $r1, $r2, $r6, $r12;
        java.lang.String r3, $r4, $r7, $r11;
        java.lang.StringBuilder $r5, $r8, $r9, $r10;

        r0 := @this: net.sourceforge.plantuml.BaseFile;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.BaseFile: net.sourceforge.plantuml.security.SFile basedir>;

        if $r1 == null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.BaseFile: java.lang.String basename>;

        if $r4 != null goto label2;

     label1:
        $r2 = new net.sourceforge.plantuml.security.SFile;

        specialinvoke $r2.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>(r3);

        return $r2;

     label2:
        $r6 = r0.<net.sourceforge.plantuml.BaseFile: net.sourceforge.plantuml.security.SFile basedir>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<net.sourceforge.plantuml.BaseFile: java.lang.String basename>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = virtualinvoke $r6.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>($r11);

        return $r12;
    }
}
