public abstract class net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.PlacementStrategy
{
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;
    private final java.util.Map dimensions;

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r0;
        java.util.LinkedHashMap $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: java.util.Map dimensions> = $r1;

        r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r2;

        return;
    }

    public void add(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        java.util.Map $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: java.util.Map dimensions>;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return;
    }

    protected java.util.Map getDimensions()
    {
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r0;
        java.util.Map $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: java.util.Map dimensions>;

        return $r1;
    }

    protected double getSumWidth()
    {
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: java.util.Map dimensions>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: double getSumWidth(java.util.Iterator)>($r3);

        return $d0;
    }

    protected double getSumHeight()
    {
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: java.util.Map dimensions>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: double getSumHeight(java.util.Iterator)>($r3);

        return $d0;
    }

    protected double getMaxHeight()
    {
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: java.util.Map dimensions>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: double getMaxHeight(java.util.Iterator)>($r3);

        return $d0;
    }

    protected double getMaxWidth()
    {
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: java.util.Map dimensions>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: double getMaxWidth(java.util.Iterator)>($r3);

        return $d0;
    }

    protected double getSumWidth(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;
        double $d0, d1;
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r3;

        r3 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        r0 := @parameter0: java.util.Iterator;

        d1 = 0.0;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r1;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = d1 + $d0;

        goto label1;

     label2:
        return d1;
    }

    protected double getSumHeight(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;
        double $d0, d1;
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r3;

        r3 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        r0 := @parameter0: java.util.Iterator;

        d1 = 0.0;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r1;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d1 = d1 + $d0;

        goto label1;

     label2:
        return d1;
    }

    protected double getMaxWidth(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;
        double $d0, d1;
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r3;

        r3 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        r0 := @parameter0: java.util.Iterator;

        d1 = 0.0;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r1;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    protected double getMaxHeight(java.util.Iterator)
    {
        java.util.Iterator r0;
        boolean $z0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;
        double $d0, d1;
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r3;

        r3 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        r0 := @parameter0: java.util.Iterator;

        d1 = 0.0;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r1 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r2 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r1;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    protected final net.sourceforge.plantuml.graphic.StringBounder getStringBounder()
    {
        net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        return $r1;
    }
}
