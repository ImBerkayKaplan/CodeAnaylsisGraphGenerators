public class net.sourceforge.plantuml.salt.PSystemSaltFactory extends net.sourceforge.plantuml.command.PSystemBasicFactory
{

    public void <init>(net.sourceforge.plantuml.core.DiagramType)
    {
        net.sourceforge.plantuml.salt.PSystemSaltFactory r0;
        net.sourceforge.plantuml.core.DiagramType r1;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory;

        r1 := @parameter0: net.sourceforge.plantuml.core.DiagramType;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemBasicFactory: void <init>(net.sourceforge.plantuml.core.DiagramType)>(r1);

        return;
    }

    public net.sourceforge.plantuml.salt.PSystemSalt initDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.salt.PSystemSaltFactory r0;
        net.sourceforge.plantuml.core.DiagramType $r1, $r2, $r3, $r4, $r6;
        java.lang.IllegalStateException $r5;
        java.lang.String $r7, r11;
        net.sourceforge.plantuml.salt.PSystemSalt $r8;
        net.sourceforge.plantuml.api.ThemeStyle r9;
        net.sourceforge.plantuml.core.UmlSource r10;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory;

        r9 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r10 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r11 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.PSystemSaltFactory: net.sourceforge.plantuml.core.DiagramType getDiagramType()>();

        $r2 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType UML>;

        if $r1 != $r2 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.salt.PSystemSaltFactory: net.sourceforge.plantuml.core.DiagramType getDiagramType()>();

        $r4 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType SALT>;

        if $r3 != $r4 goto label2;

        $r8 = new net.sourceforge.plantuml.salt.PSystemSalt;

        specialinvoke $r8.<net.sourceforge.plantuml.salt.PSystemSalt: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource)>(r9, r10);

        return $r8;

     label2:
        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.salt.PSystemSaltFactory: net.sourceforge.plantuml.core.DiagramType getDiagramType()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.core.DiagramType: java.lang.String name()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }

    public net.sourceforge.plantuml.salt.PSystemSalt executeLine(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.salt.PSystemSalt, java.lang.String)
    {
        net.sourceforge.plantuml.salt.PSystemSalt r0, $r5;
        java.lang.String r1, $r2, $r3, $r4;
        boolean $z0;
        net.sourceforge.plantuml.api.ThemeStyle r6;
        net.sourceforge.plantuml.core.UmlSource r7;
        net.sourceforge.plantuml.salt.PSystemSaltFactory r8;

        r8 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory;

        r6 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r7 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r0 := @parameter2: net.sourceforge.plantuml.salt.PSystemSalt;

        r1 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(9, 32);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("salt");

        if $z0 == 0 goto label1;

        $r5 = new net.sourceforge.plantuml.salt.PSystemSalt;

        specialinvoke $r5.<net.sourceforge.plantuml.salt.PSystemSalt: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource)>(r6, r7);

        return $r5;

     label1:
        if r0 != null goto label2;

        return null;

     label2:
        $r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>(r1);

        virtualinvoke r0.<net.sourceforge.plantuml.salt.PSystemSalt: void add(java.lang.String)>($r2);

        return r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem initDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.salt.PSystemSaltFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        java.lang.String r3;
        net.sourceforge.plantuml.salt.PSystemSalt $r4;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.salt.PSystemSaltFactory: net.sourceforge.plantuml.salt.PSystemSalt initDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem executeLine(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.AbstractPSystem, java.lang.String)
    {
        net.sourceforge.plantuml.salt.PSystemSaltFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.AbstractPSystem r3;
        java.lang.String r4;
        net.sourceforge.plantuml.salt.PSystemSalt $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSaltFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.AbstractPSystem;

        r4 := @parameter3: java.lang.String;

        $r5 = (net.sourceforge.plantuml.salt.PSystemSalt) r3;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.salt.PSystemSaltFactory: net.sourceforge.plantuml.salt.PSystemSalt executeLine(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.salt.PSystemSalt,java.lang.String)>(r1, r2, $r5, r4);

        return $r6;
    }
}
