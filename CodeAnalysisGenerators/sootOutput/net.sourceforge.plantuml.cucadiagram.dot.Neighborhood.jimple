public class net.sourceforge.plantuml.cucadiagram.dot.Neighborhood extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.ILeaf leaf;
    private final java.util.List sametailLinks;
    private final java.util.List allButSametails;
    private static final double epsilon;
    static final boolean $assertionsDisabled;

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, java.util.List, java.util.List)
    {
        net.sourceforge.plantuml.cucadiagram.dot.Neighborhood r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        java.util.List r2, r4, $r5;
        java.util.ArrayList $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.Neighborhood;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: java.util.List;

        r4 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: net.sourceforge.plantuml.cucadiagram.ILeaf leaf> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.util.List sametailLinks> = r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>(r4);

        r0.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.util.List allButSametails> = $r3;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.util.List allButSametails>;

        interfaceinvoke $r5.<java.util.List: boolean removeAll(java.util.Collection)>(r2);

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, net.sourceforge.plantuml.svek.Bibliotekon, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.cucadiagram.dot.Neighborhood r2;
        java.util.List $r3, $r7;
        boolean $z0, $z1, $z3, $z4;
        java.awt.geom.Rectangle2D$Double $r4;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        java.awt.geom.Point2D$Double $r6;
        java.lang.Object $r8, $r14, $r17;
        net.sourceforge.plantuml.svek.Bibliotekon r9;
        net.sourceforge.plantuml.cucadiagram.IEntity $r10;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r11;
        java.awt.geom.Point2D r12, r15, r21, r25, r26, $r30;
        net.sourceforge.plantuml.ugraphic.UGraphic r13;
        java.lang.AssertionError $r16;
        java.util.Iterator r18, r24, r27;
        net.sourceforge.plantuml.cucadiagram.Link r19, r28;
        net.sourceforge.plantuml.svek.SvekLine r20, r29;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.dot.Neighborhood;

        r13 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r9 := @parameter3: net.sourceforge.plantuml.svek.Bibliotekon;

        r5 := @parameter4: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.util.List sametailLinks>;

        r18 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r17 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (net.sourceforge.plantuml.cucadiagram.Link) $r17;

        r20 = virtualinvoke r9.<net.sourceforge.plantuml.svek.Bibliotekon: net.sourceforge.plantuml.svek.SvekLine getLine(net.sourceforge.plantuml.cucadiagram.Link)>(r19);

        r21 = virtualinvoke r20.<net.sourceforge.plantuml.svek.SvekLine: java.awt.geom.Point2D getStartContactPoint()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r21);

        goto label01;

     label02:
        $r4 = new java.awt.geom.Rectangle2D$Double;

        $d2 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r4.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d0, d1, $d2, $d3);

        $r6 = new java.awt.geom.Point2D$Double;

        $d4 = virtualinvoke $r4.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $d5 = virtualinvoke $r4.<java.awt.geom.Rectangle2D: double getCenterY()>();

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, $d5);

        r24 = interfaceinvoke $r0.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label05;

        $r14 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.awt.geom.Point2D) $r14;

        r26 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.awt.geom.Point2D intersection(java.awt.geom.Rectangle2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, $r6, r25);

        if r26 != null goto label04;

        $z1 = <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label04:
        $d6 = virtualinvoke $r6.<java.awt.geom.Point2D: double getX()>();

        $d7 = virtualinvoke r25.<java.awt.geom.Point2D: double getX()>();

        $d8 = $d6 - $d7;

        $d9 = virtualinvoke $r6.<java.awt.geom.Point2D: double getY()>();

        $d10 = virtualinvoke r25.<java.awt.geom.Point2D: double getY()>();

        $d11 = $d9 - $d10;

        $d12 = neg $d11;

        d13 = staticinvoke <java.lang.Math: double atan2(double,double)>($d8, $d12);

        r15 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.awt.geom.Point2D drawExtends(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.Point2D,double)>(r13, r26, d13);

        specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r13, r15, r25);

        goto label03;

     label05:
        $r7 = r2.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.util.List allButSametails>;

        r27 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z4 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r8 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (net.sourceforge.plantuml.cucadiagram.Link) $r8;

        r29 = virtualinvoke r9.<net.sourceforge.plantuml.svek.Bibliotekon: net.sourceforge.plantuml.svek.SvekLine getLine(net.sourceforge.plantuml.cucadiagram.Link)>(r28);

        $r10 = virtualinvoke r28.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r11 = r2.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: net.sourceforge.plantuml.cucadiagram.ILeaf leaf>;

        if $r10 != $r11 goto label07;

        $r30 = virtualinvoke r29.<net.sourceforge.plantuml.svek.SvekLine: java.awt.geom.Point2D getStartContactPoint()>();

        goto label08;

     label07:
        $r30 = virtualinvoke r29.<net.sourceforge.plantuml.svek.SvekLine: java.awt.geom.Point2D getEndContactPoint()>();

     label08:
        if $r30 != null goto label09;

        goto label06;

     label09:
        r12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.awt.geom.Point2D intersection(java.awt.geom.Rectangle2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, $r6, $r30);

        if r12 != null goto label10;

        goto label06;

     label10:
        specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r13, r12, $r30);

        goto label06;

     label11:
        return;
    }

    private java.awt.geom.Point2D drawExtends(net.sourceforge.plantuml.ugraphic.UGraphic, java.awt.geom.Point2D, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        java.awt.geom.Point2D r3, $r9, r10, $r13, r14;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, $r6;
        java.util.List $r7, $r11;
        java.lang.Object $r8, $r12;
        java.awt.geom.Point2D$Double $r15;
        net.sourceforge.plantuml.cucadiagram.dot.Neighborhood r16;

        r16 := @this: net.sourceforge.plantuml.cucadiagram.dot.Neighborhood;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r3 := @parameter1: java.awt.geom.Point2D;

        d0 := @parameter2: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(7.0, 20.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-7.0, 20.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>(d0);

        $r2 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r3);

        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r7 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(1);

        $r9 = (java.awt.geom.Point2D) $r8;

        r10 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r9);

        $r11 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(2);

        $r13 = (java.awt.geom.Point2D) $r12;

        r14 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r13);

        $r15 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r10.<java.awt.geom.Point2D: double getX()>();

        $d2 = virtualinvoke r14.<java.awt.geom.Point2D: double getX()>();

        $d3 = $d1 + $d2;

        $d4 = $d3 / 2.0;

        $d5 = virtualinvoke r10.<java.awt.geom.Point2D: double getY()>();

        $d6 = virtualinvoke r14.<java.awt.geom.Point2D: double getY()>();

        $d7 = $d5 + $d6;

        $d8 = $d7 / 2.0;

        specialinvoke $r15.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, $d8);

        return $r15;
    }

    static java.awt.geom.Point2D intersection(java.awt.geom.Rectangle2D, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D$Double $r0, $r2, $r5, $r6, $r7, $r8, $r9, $r10;
        java.awt.geom.Rectangle2D r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        java.awt.geom.Point2D r3, r4, r11, r12, r13, r14;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        r3 := @parameter1: java.awt.geom.Point2D;

        r4 := @parameter2: java.awt.geom.Point2D;

        $r0 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>();

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        $r2 = new java.awt.geom.Point2D$Double;

        $d2 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $d3 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>();

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d2, $d3);

        r11 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.awt.geom.Point2D intersection(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r0, $r2, r3, r4);

        if r11 == null goto label1;

        return r11;

     label1:
        $r5 = new java.awt.geom.Point2D$Double;

        $d4 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>();

        $d5 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();

        specialinvoke $r5.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, $d5);

        $r6 = new java.awt.geom.Point2D$Double;

        $d6 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $d7 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d6, $d7);

        r12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.awt.geom.Point2D intersection(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r5, $r6, r3, r4);

        if r12 == null goto label2;

        return r12;

     label2:
        $r7 = new java.awt.geom.Point2D$Double;

        $d8 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>();

        $d9 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>();

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d8, $d9);

        $r8 = new java.awt.geom.Point2D$Double;

        $d10 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinX()>();

        $d11 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();

        specialinvoke $r8.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d10, $d11);

        r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.awt.geom.Point2D intersection(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r7, $r8, r3, r4);

        if r13 == null goto label3;

        return r13;

     label3:
        $r9 = new java.awt.geom.Point2D$Double;

        $d12 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $d13 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMinY()>();

        specialinvoke $r9.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d12, $d13);

        $r10 = new java.awt.geom.Point2D$Double;

        $d14 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxX()>();

        $d15 = virtualinvoke r1.<java.awt.geom.Rectangle2D: double getMaxY()>();

        specialinvoke $r10.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d14, $d15);

        r14 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.awt.geom.Point2D intersection(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r9, $r10, r3, r4);

        if r14 == null goto label4;

        return r14;

     label4:
        return null;
    }

    private static java.awt.geom.Point2D intersection(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1, r2, r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @parameter0: java.awt.geom.Point2D;

        r1 := @parameter1: java.awt.geom.Point2D;

        r2 := @parameter2: java.awt.geom.Point2D;

        r3 := @parameter3: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d5 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d6 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d7 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: java.awt.geom.Point2D intersection(double,double,double,double,double,double,double,double)>($d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7);

        return $r4;
    }

    private static java.awt.geom.Point2D intersection(double, double, double, double, double, double, double, double)
    {
        double d0, d1, d2, d3, $d4, $d5, d6, d7, d8, d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8;
        java.awt.geom.Point2D$Double $r0;

        d0 := @parameter0: double;

        d6 := @parameter1: double;

        d1 := @parameter2: double;

        d7 := @parameter3: double;

        d8 := @parameter4: double;

        d2 := @parameter5: double;

        d9 := @parameter6: double;

        d3 := @parameter7: double;

        $d5 = d0 - d1;

        $d4 = d2 - d3;

        $d13 = $d5 * $d4;

        $d11 = d6 - d7;

        $d10 = d8 - d9;

        $d12 = $d11 * $d10;

        d14 = $d13 - $d12;

        $b0 = d14 cmpl 0.0;

        if $b0 != 0 goto label1;

        return null;

     label1:
        $d18 = d8 - d9;

        $d16 = d0 * d7;

        $d15 = d6 * d1;

        $d17 = $d16 - $d15;

        $d24 = $d18 * $d17;

        $d22 = d0 - d1;

        $d20 = d8 * d3;

        $d19 = d2 * d9;

        $d21 = $d20 - $d19;

        $d23 = $d22 * $d21;

        $d25 = $d24 - $d23;

        d26 = $d25 / d14;

        $d30 = d2 - d3;

        $d28 = d0 * d7;

        $d27 = d6 * d1;

        $d29 = $d28 - $d27;

        $d36 = $d30 * $d29;

        $d34 = d6 - d7;

        $d32 = d8 * d3;

        $d31 = d2 * d9;

        $d33 = $d32 - $d31;

        $d35 = $d34 * $d33;

        $d37 = $d36 - $d35;

        d38 = $d37 / d14;

        $r0 = new java.awt.geom.Point2D$Double;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d26, d38);

        $d39 = d26 + 0.001;

        $d40 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1);

        $b1 = $d39 cmpg $d40;

        if $b1 < 0 goto label2;

        $d41 = d26 - 0.001;

        $d42 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        $b2 = $d41 cmpl $d42;

        if $b2 <= 0 goto label3;

     label2:
        return null;

     label3:
        $d43 = d26 + 0.001;

        $d44 = staticinvoke <java.lang.Math: double min(double,double)>(d8, d9);

        $b3 = $d43 cmpg $d44;

        if $b3 < 0 goto label4;

        $d45 = d26 - 0.001;

        $d46 = staticinvoke <java.lang.Math: double max(double,double)>(d8, d9);

        $b4 = $d45 cmpl $d46;

        if $b4 <= 0 goto label5;

     label4:
        return null;

     label5:
        $d47 = d38 + 0.001;

        $d48 = staticinvoke <java.lang.Math: double min(double,double)>(d6, d7);

        $b5 = $d47 cmpg $d48;

        if $b5 < 0 goto label6;

        $d49 = d38 - 0.001;

        $d50 = staticinvoke <java.lang.Math: double max(double,double)>(d6, d7);

        $b6 = $d49 cmpl $d50;

        if $b6 <= 0 goto label7;

     label6:
        return null;

     label7:
        $d51 = d38 + 0.001;

        $d52 = staticinvoke <java.lang.Math: double min(double,double)>(d2, d3);

        $b7 = $d51 cmpg $d52;

        if $b7 < 0 goto label8;

        $d53 = d38 - 0.001;

        $d54 = staticinvoke <java.lang.Math: double max(double,double)>(d2, d3);

        $b8 = $d53 cmpl $d54;

        if $b8 <= 0 goto label9;

     label8:
        return null;

     label9:
        return $r0;
    }

    private void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.cucadiagram.dot.Neighborhood r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        java.awt.geom.Point2D r2, r3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.Neighborhood;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: java.awt.geom.Point2D;

        r3 := @parameter2: java.awt.geom.Point2D;

        $d0 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d2 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double)>(r1, $d0, $d1, $d2, $d3);

        return;
    }

    private void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.ULine $r0;
        double d0, d1, d2, d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.cucadiagram.dot.Neighborhood r5;

        r5 := @this: net.sourceforge.plantuml.cucadiagram.dot.Neighborhood;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d1 := @parameter1: double;

        d3 := @parameter2: double;

        d0 := @parameter3: double;

        d2 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d5 = d0 - d1;

        $d4 = d2 - d3;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d5, $d4);

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d1, d3);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: double epsilon> = 0.001;

        $r0 = class "Lnet/sourceforge/plantuml/cucadiagram/dot/Neighborhood;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.cucadiagram.dot.Neighborhood: boolean $assertionsDisabled> = $z1;

        return;
    }
}
