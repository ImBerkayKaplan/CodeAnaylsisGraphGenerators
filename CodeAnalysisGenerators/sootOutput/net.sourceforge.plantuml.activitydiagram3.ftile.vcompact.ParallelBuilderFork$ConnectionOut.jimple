class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection implements net.sourceforge.plantuml.activitydiagram3.ftile.ConnectionTranslatable
{
    private final double x;
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private final double justBeforeBar2;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double, net.sourceforge.plantuml.graphic.Rainbow, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, r3;
        double d0, d1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r4;
        net.sourceforge.plantuml.cucadiagram.Display $r5;
        net.sourceforge.plantuml.graphic.Rainbow r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d1 := @parameter3: double;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.Rainbow;

        d0 := @parameter5: double;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: double justBeforeBar2> = d0;

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label> = $r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: double x> = d1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r6;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut r0;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork $r3, $r6, $r16;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ISkinParam $r7;
        net.sourceforge.plantuml.graphic.Rainbow $r8;
        net.sourceforge.plantuml.ugraphic.UPolygon $r9;
        net.sourceforge.plantuml.cucadiagram.Display $r10, $r15;
        java.awt.geom.Point2D$Double $r11, $r13;
        net.sourceforge.plantuml.graphic.TextBlock $r17;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r18;
        net.sourceforge.plantuml.ugraphic.UGraphic r19, r20;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r21;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut;

        r19 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: double x>;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        r20 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork this$0>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r21 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r7, $r8, $r9);

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label>;

        $z1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r10);

        if $z1 != 0 goto label2;

        $r16 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork this$0>;

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>($r15);

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r21 = virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r17, $r18);

     label2:
        $r11 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d3 = 6.0 + $d2;

        specialinvoke $r11.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d3);

        $r13 = new java.awt.geom.Point2D$Double;

        $d4 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: double justBeforeBar2>;

        specialinvoke $r13.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, $d5);

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r11);

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r13);

        interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r21);

        return;
    }

    public void drawTranslate(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, r16, r18;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork $r3, $r10, $r21;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r5;
        boolean $z0, $z1;
        java.awt.geom.Point2D$Double $r6, $r8;
        net.sourceforge.plantuml.ISkinParam $r11;
        net.sourceforge.plantuml.graphic.Rainbow $r12;
        net.sourceforge.plantuml.ugraphic.UPolygon $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r14, r26;
        net.sourceforge.plantuml.cucadiagram.Display $r15, $r20;
        java.awt.geom.Point2D r17, r19;
        net.sourceforge.plantuml.graphic.TextBlock $r22;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r23;
        net.sourceforge.plantuml.ugraphic.UGraphic r24, r25;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut;

        r24 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r16 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r18 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: double x>;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        r25 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d3 = 6.0 + $d2;

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d3);

        $r8 = new java.awt.geom.Point2D$Double;

        $d4 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: double justBeforeBar2>;

        specialinvoke $r8.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, $d5);

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork this$0>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r13 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r14 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r11, $r12, $r13);

        r26 = virtualinvoke $r14.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake ignoreForCompression()>();

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label>;

        $z1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r15);

        if $z1 != 0 goto label2;

        $r21 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork this$0>;

        $r20 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>($r20);

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderFork$ConnectionOut: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r26 = virtualinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r22, $r23);

     label2:
        r17 = virtualinvoke r16.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r6);

        r19 = virtualinvoke r18.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r8);

        $d6 = virtualinvoke r19.<java.awt.geom.Point2D: double getY()>();

        d7 = $d6 - 14.0;

        virtualinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r17);

        $d8 = virtualinvoke r17.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d8, d7);

        $d9 = virtualinvoke r19.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d9, d7);

        virtualinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r19);

        interfaceinvoke r25.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r26);

        return;
    }
}
