public class net.sourceforge.plantuml.hcl.HclSource extends java.lang.Object implements java.lang.Iterable
{
    private final java.util.List all;

    public void <init>()
    {
        net.sourceforge.plantuml.hcl.HclSource r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.hcl.HclSource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.hcl.HclSource: java.util.List all> = $r1;

        return;
    }

    public void add(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;
        char[] r2;
        int i0, i2;
        char c1;
        net.sourceforge.plantuml.hcl.HclSource r3;
        java.util.List $r4;
        java.lang.Character $r5;

        r3 := @this: net.sourceforge.plantuml.hcl.HclSource;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label1;

        return;

     label1:
        r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r2;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        c1 = r2[i2];

        $r4 = r3.<net.sourceforge.plantuml.hcl.HclSource: java.util.List all>;

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        i2 = i2 + 1;

        goto label2;

     label3:
        return;
    }

    public java.util.Iterator iterator()
    {
        net.sourceforge.plantuml.hcl.HclSource r0;
        java.util.List $r1, $r2;
        java.util.Iterator $r3;

        r0 := @this: net.sourceforge.plantuml.hcl.HclSource;

        $r1 = r0.<net.sourceforge.plantuml.hcl.HclSource: java.util.List all>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r3;
    }
}
