public class net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3 extends net.sourceforge.plantuml.command.CommandMultilines2
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3 r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.command.MultilinesStrategy $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3;

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        $r2 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy REMOVE_STARTING_QUOTE>;

        specialinvoke r0.<net.sourceforge.plantuml.command.CommandMultilines2: void <init>(net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy)>($r1, $r2);

        return;
    }

    public java.lang.String getPatternEnd()
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3 r0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3;

        return "^(.*);$";
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r5;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r6, $r7, $r8, $r9, $r10;
        net.sourceforge.plantuml.command.regex.RegexOr $r4;
        net.sourceforge.plantuml.command.regex.RegexConcat $r11;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram3/command/CommandArrowLong3;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r5 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("->");

        $r5[0] = $r6;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("COLOR", "-\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*(?:(?:;(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)*)*)\\]->");

        $r5[1] = $r7;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r5);

        $r2[1] = $r4;

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL", "(.*)");

        $r2[3] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[4] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r11;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3 r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.StringLocated $r2, $r3;
        java.lang.String $r4, r6, $r7;
        net.sourceforge.plantuml.command.regex.RegexResult r5;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r8;
        net.sourceforge.plantuml.cucadiagram.Display $r9;
        net.sourceforge.plantuml.command.CommandExecutionResult $r10;
        net.sourceforge.plantuml.ISkinParam $r11, $r12;
        int $i0;
        net.sourceforge.plantuml.graphic.Rainbow r13;
        net.sourceforge.plantuml.command.BlocLines r14, r15, r16;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3;

        r8 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r14 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        r15 = virtualinvoke r14.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines removeEmptyColumns()>();

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3: net.sourceforge.plantuml.command.regex.IRegex getStartingPattern()>();

        $r2 = virtualinvoke r15.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.StringLocated getFirst()>();

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r5 = interfaceinvoke $r1.<net.sourceforge.plantuml.command.regex.IRegex: net.sourceforge.plantuml.command.regex.RegexResult matcher(java.lang.String)>($r4);

        r6 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COLOR", 0);

        if r6 == null goto label1;

        $r11 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r12 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $i0 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: int colorArrowSeparationSpace()>();

        r13 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.ISkinParam,java.lang.String,int)>($r11, r6, $i0);

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setColorNextArrow(net.sourceforge.plantuml.graphic.Rainbow)>(r13);

     label1:
        $r7 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL", 0);

        r16 = virtualinvoke r15.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines removeStartingAndEnding(java.lang.String,int)>($r7, 1);

        $r9 = virtualinvoke r16.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setLabelNextArrow(net.sourceforge.plantuml.cucadiagram.Display)>($r9);

        $r10 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r10;
    }

    private void removeStarting(java.util.List, java.lang.String)
    {
        java.util.List r0;
        int $i0;
        java.lang.String r1;
        net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3 r3;

        r3 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, r1);

        return;
    }

    private void removeEnding(java.util.List)
    {
        java.util.List r0;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.Object $r1;
        java.lang.CharSequence r2, $r3;
        net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3 r5;

        r5 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3;

        r0 := @parameter0: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        i2 = $i1 - 1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i2);

        r2 = (java.lang.CharSequence) $r1;

        $i3 = interfaceinvoke r2.<java.lang.CharSequence: int length()>();

        $i4 = $i3 - 1;

        $r3 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i4);

        interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r3);

        return;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3 r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r3 = (net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3) r1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3: net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3,net.sourceforge.plantuml.command.BlocLines)>($r3, r2);

        return $r4;
    }
}
