class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection implements net.sourceforge.plantuml.activitydiagram3.ftile.ConnectionTranslatable
{
    private final net.sourceforge.plantuml.graphic.Rainbow myArrowColor;
    private final boolean branchEmpty;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow, boolean)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4, $r6;
        boolean z0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.Rainbow;

        z0 := @parameter3: boolean;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0> = r1;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, $r3);

        if r4 == null goto label1;

        $i0 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i0 != 0 goto label2;

     label1:
        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.graphic.Rainbow access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks)>(r1);

        goto label3;

     label2:
        $r6 = r4;

     label3:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.graphic.Rainbow myArrowColor> = $r6;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: boolean branchEmpty> = z0;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r3, $r12;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4, r6, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        java.awt.geom.Point2D r9;
        java.awt.geom.Point2D$Double $r10;
        double $d0, $d1, d2, d3, d4, d5, $d6;
        net.sourceforge.plantuml.ISkinParam $r13;
        net.sourceforge.plantuml.graphic.Rainbow $r14;
        net.sourceforge.plantuml.Direction $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r16;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.ugraphic.UTranslate translate(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry translate(net.sourceforge.plantuml.ugraphic.UTranslate)>($r7);

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r10 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        specialinvoke $r10.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        d2 = virtualinvoke r9.<java.awt.geom.Point2D: double getX()>();

        d3 = virtualinvoke r9.<java.awt.geom.Point2D: double getY()>();

        d4 = virtualinvoke $r10.<java.awt.geom.Point2D: double getX()>();

        d5 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>();

        $r12 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r14 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.graphic.Rainbow myArrowColor>;

        r16 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r13, $r14);

        $z1 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: boolean branchEmpty>;

        if $z1 == 0 goto label2;

        $r15 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

        r16 = virtualinvoke r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake emphasizeDirection(net.sourceforge.plantuml.Direction)>($r15);

     label2:
        virtualinvoke r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d3);

        virtualinvoke r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d5);

        virtualinvoke r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d4, d5);

        $d6 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        virtualinvoke r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d4, $d6);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r16);

        return;
    }

    public void drawTranslate(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r3, $r16;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4, r6, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, r12, r14;
        java.awt.geom.Point2D r9, r13, r15;
        java.awt.geom.Point2D$Double $r10;
        double $d0, $d1, $d2, d3, d4, d5, $d6;
        net.sourceforge.plantuml.ISkinParam $r17;
        net.sourceforge.plantuml.graphic.Rainbow $r18;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r19, r21;
        net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy $r20;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r12 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r14 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.ugraphic.UTranslate translate(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry translate(net.sourceforge.plantuml.ugraphic.UTranslate)>($r7);

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r10 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d2 = $d1 - 12.0;

        specialinvoke $r10.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d2);

        r13 = virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r9);

        r15 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r10);

        $r16 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r18 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.graphic.Rainbow myArrowColor>;

        $r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r17, $r18);

        $r20 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy LIMITED>;

        r21 = virtualinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r20);

        d3 = virtualinvoke r13.<java.awt.geom.Point2D: double getX()>();

        d4 = virtualinvoke r15.<java.awt.geom.Point2D: double getX()>();

        d5 = virtualinvoke r15.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r13);

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d3, d5);

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r15);

        $d6 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d4, $d6);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r21);

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate translate(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r3, $r4, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r2, $r5, $r9, $r11;
        java.lang.IllegalStateException $r7;
        net.sourceforge.plantuml.graphic.StringBounder r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10, $r12;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r3 = $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        if $r1 != $r3 goto label1;

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        return $r12;

     label1:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r6 = $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        if $r4 != $r6 goto label2;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalThenHorizontalDirect: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        return $r10;

     label2:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;
    }
}
