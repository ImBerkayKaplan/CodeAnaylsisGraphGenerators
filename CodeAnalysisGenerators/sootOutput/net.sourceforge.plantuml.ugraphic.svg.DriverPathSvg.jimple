public class net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg extends net.sourceforge.plantuml.ugraphic.g2d.DriverShadowedG2d implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverShadowedG2d: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UPath, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.svg.SvgGraphics)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r1;
        net.sourceforge.plantuml.ugraphic.UClip r2;
        net.sourceforge.plantuml.ugraphic.UPath r3;
        boolean $z0, $z1;
        net.sourceforge.plantuml.svg.SvgGraphics r4;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r5;
        net.sourceforge.plantuml.ugraphic.UParam r6;
        net.sourceforge.plantuml.ugraphic.UStroke $r7, $r8;
        double $d0, d1, d2, $d3;
        java.lang.String $r9, $r12, $r13, $r14;
        net.sourceforge.plantuml.ugraphic.color.HColor r10, $r15;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UPath;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r5 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r6 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: net.sourceforge.plantuml.svg.SvgGraphics;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r2 == null goto label1;

        $z1 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(double,double,net.sourceforge.plantuml.ugraphic.UPath)>(d1, d2, r3);

        if $z1 != 0 goto label1;

        return;

     label1:
        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UPath: boolean isOpenIconic()>();

        if $z0 == 0 goto label6;

        r10 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if r10 != null goto label2;

        $r15 = null;

        goto label3;

     label2:
        $r15 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

     label3:
        if $r15 != r10 goto label4;

        $r14 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r10);

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String)>($r14);

        goto label5;

     label4:
        $r12 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r10);

        $r13 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>($r15);

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String,java.lang.String)>($r12, $r13);

     label5:
        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeColor(java.lang.String)>("");

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeWidth(double,java.lang.String)>(0.0, "");

        goto label7;

     label6:
        staticinvoke <net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: void applyFillColor(net.sourceforge.plantuml.svg.SvgGraphics,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam)>(r4, r5, r6);

        staticinvoke <net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: void applyStrokeColor(net.sourceforge.plantuml.svg.SvgGraphics,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam)>(r4, r5, r6);

        $r7 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d0 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UStroke: java.lang.String getDasharraySvg()>();

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeWidth(double,java.lang.String)>($d0, $r9);

     label7:
        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UPath: double getDeltaShadow()>();

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void svgPath(double,double,net.sourceforge.plantuml.ugraphic.UPath,double)>(d1, d2, r3, $d3);

        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.svg.SvgGraphics $r5;
        net.sourceforge.plantuml.ugraphic.UPath $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UPath) r1;

        $r5 = (net.sourceforge.plantuml.svg.SvgGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.DriverPathSvg: void draw(net.sourceforge.plantuml.ugraphic.UPath,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.svg.SvgGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
