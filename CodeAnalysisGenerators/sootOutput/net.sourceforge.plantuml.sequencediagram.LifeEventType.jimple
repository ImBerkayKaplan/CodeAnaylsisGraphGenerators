public final enum class net.sourceforge.plantuml.sequencediagram.LifeEventType extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.sequencediagram.LifeEventType ACTIVATE;
    public static final enum net.sourceforge.plantuml.sequencediagram.LifeEventType DEACTIVATE;
    public static final enum net.sourceforge.plantuml.sequencediagram.LifeEventType DESTROY;
    public static final enum net.sourceforge.plantuml.sequencediagram.LifeEventType CREATE;
    private static final net.sourceforge.plantuml.sequencediagram.LifeEventType[] $VALUES;

    public static net.sourceforge.plantuml.sequencediagram.LifeEventType[] values()
    {
        net.sourceforge.plantuml.sequencediagram.LifeEventType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.sequencediagram.LifeEventType[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.sequencediagram.LifeEventType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.sequencediagram.LifeEventType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/sequencediagram/LifeEventType;", r0);

        $r2 = (net.sourceforge.plantuml.sequencediagram.LifeEventType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.sequencediagram.LifeEventType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.LifeEventType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.sequencediagram.LifeEventType $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        net.sourceforge.plantuml.sequencediagram.LifeEventType[] $r4;

        $r0 = new net.sourceforge.plantuml.sequencediagram.LifeEventType;

        specialinvoke $r0.<net.sourceforge.plantuml.sequencediagram.LifeEventType: void <init>(java.lang.String,int)>("ACTIVATE", 0);

        <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType ACTIVATE> = $r0;

        $r1 = new net.sourceforge.plantuml.sequencediagram.LifeEventType;

        specialinvoke $r1.<net.sourceforge.plantuml.sequencediagram.LifeEventType: void <init>(java.lang.String,int)>("DEACTIVATE", 1);

        <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType DEACTIVATE> = $r1;

        $r2 = new net.sourceforge.plantuml.sequencediagram.LifeEventType;

        specialinvoke $r2.<net.sourceforge.plantuml.sequencediagram.LifeEventType: void <init>(java.lang.String,int)>("DESTROY", 2);

        <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType DESTROY> = $r2;

        $r3 = new net.sourceforge.plantuml.sequencediagram.LifeEventType;

        specialinvoke $r3.<net.sourceforge.plantuml.sequencediagram.LifeEventType: void <init>(java.lang.String,int)>("CREATE", 3);

        <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType CREATE> = $r3;

        $r4 = newarray (net.sourceforge.plantuml.sequencediagram.LifeEventType)[4];

        $r5 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType ACTIVATE>;

        $r4[0] = $r5;

        $r6 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType DEACTIVATE>;

        $r4[1] = $r6;

        $r7 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType DESTROY>;

        $r4[2] = $r7;

        $r8 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType CREATE>;

        $r4[3] = $r8;

        <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType[] $VALUES> = $r4;

        return;
    }
}
