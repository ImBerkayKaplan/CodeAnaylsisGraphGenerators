class gen.lib.cgraph.id__c$2 extends smetana.core.CFunctionAbstract
{

    void <init>(java.lang.String)
    {
        gen.lib.cgraph.id__c$2 r0;
        java.lang.String r1;

        r0 := @this: gen.lib.cgraph.id__c$2;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<smetana.core.CFunctionAbstract: void <init>(java.lang.String)>(r1);

        return;
    }

    public transient java.lang.Object exe(java.lang.Object[])
    {
        java.lang.Object[] r0;
        java.lang.Object $r1, $r3, $r4, $r5, $r6;
        java.lang.Integer $r2, $r10;
        int $i0, $i1;
        java.lang.Boolean $r7;
        smetana.core.CString $r8;
        int[] $r9;
        boolean $z0;
        gen.lib.cgraph.id__c$2 r11;

        r11 := @this: gen.lib.cgraph.id__c$2;

        r0 := @parameter0: java.lang.Object[];

        $r3 = r0[0];

        $r1 = r0[1];

        $r2 = (java.lang.Integer) $r1;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $r4 = r0[2];

        $r8 = (smetana.core.CString) $r4;

        $r5 = r0[3];

        $r9 = (int[]) $r5;

        $r6 = r0[4];

        $r7 = (java.lang.Boolean) $r6;

        $z0 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        $i1 = staticinvoke <gen.lib.cgraph.id__c: int idmap(java.lang.Object,int,smetana.core.CString,int[],boolean)>($r3, $i0, $r8, $r9, $z0);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        return $r10;
    }
}
