public class net.sourceforge.plantuml.eggs.PSystemColors extends net.sourceforge.plantuml.PlainDiagram implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final double rectangleHeight;
    private final double rectangleWidth;
    private final net.sourceforge.plantuml.ugraphic.color.HColorSet colors;
    private final java.lang.String paletteCentralColor;
    private final double size;

    public void <init>(net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.eggs.PSystemColors r0;
        net.sourceforge.plantuml.core.UmlSource r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r2;
        java.lang.String r3, $r4;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.PlainDiagram: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: double size> = 60.0;

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: double rectangleWidth> = 175.0;

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: double rectangleHeight> = 28.0;

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: double rectangleHeight> = 28.0;

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: double rectangleWidth> = 175.0;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.color.HColorSet colors> = $r2;

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: double size> = 60.0;

        if r3 != null goto label1;

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.lang.String paletteCentralColor> = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\#", "");

        r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.lang.String paletteCentralColor> = $r4;

     label2:
        return;
    }

    protected net.sourceforge.plantuml.graphic.UDrawable getRootDrawable(net.sourceforge.plantuml.FileFormatOption)
    {
        net.sourceforge.plantuml.eggs.PSystemColors r0;
        net.sourceforge.plantuml.FileFormatOption r1;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        return r0;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.eggs.PSystemColors r1;

        r1 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Colors)");

        return $r0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.eggs.PSystemColors r0;
        java.lang.String $r1, $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.lang.String paletteCentralColor>;

        if $r1 == null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.color.HColorSet colors>;

        $r3 = r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.lang.String paletteCentralColor>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(java.lang.String)>($r3);

        $z0 = $r5 instanceof net.sourceforge.plantuml.ugraphic.color.HColorSimple;

        if $z0 == 0 goto label1;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawPalette(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

        goto label2;

     label1:
        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawFull(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

     label2:
        return;
    }

    private void drawPalette(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.eggs.PSystemColors r0;
        java.awt.geom.Point2D $r1, $r2, $r3, $r4;
        double $d0, $d1, $d2, d3, $d4, $d5, d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon r6;
        java.lang.String $r7, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46;
        java.util.List r8;
        java.lang.Object $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45;
        net.sourceforge.plantuml.ugraphic.UGraphic r47, r48;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r47 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.awt.geom.Point2D centerHexa(int,int)>(2, 0);

        $d0 = virtualinvoke $r1.<java.awt.geom.Point2D: double getX()>();

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.awt.geom.Point2D centerHexa(int,int)>(3, 0);

        $d1 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $d2 = $d0 + $d1;

        d3 = $d2 / 2.0;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.awt.geom.Point2D centerHexa(int,int)>(0, 2);

        $d4 = virtualinvoke $r3.<java.awt.geom.Point2D: double getY()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.awt.geom.Point2D corner(int)>(1);

        $d5 = virtualinvoke $r4.<java.awt.geom.Point2D: double getY()>();

        d6 = $d4 + $d5;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d6);

        r48 = interfaceinvoke r47.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        r6 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.UPolygon getHexa()>();

        $r7 = r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.lang.String paletteCentralColor>;

        r8 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.util.List getColorsCloseTo(java.lang.String)>($r7);

        i1 = 0 + 1;

        $r9 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.lang.String) $r9;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r10, 0, 0, r6);

        i2 = i1 + 1;

        $r11 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i1);

        $r12 = (java.lang.String) $r11;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r12, 1, 0, r6);

        i3 = i2 + 1;

        $r13 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i2);

        $r14 = (java.lang.String) $r13;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r14, 0, 1, r6);

        i4 = i3 + 1;

        $r15 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i3);

        $r16 = (java.lang.String) $r15;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r16, -1, 1, r6);

        i5 = i4 + 1;

        $r17 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i4);

        $r18 = (java.lang.String) $r17;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r18, -1, 0, r6);

        i6 = i5 + 1;

        $r19 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i5);

        $r20 = (java.lang.String) $r19;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r20, -1, -1, r6);

        i7 = i6 + 1;

        $r21 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i6);

        $r22 = (java.lang.String) $r21;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r22, 0, -1, r6);

        i8 = i7 + 1;

        $r23 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i7);

        $r24 = (java.lang.String) $r23;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r24, 2, 0, r6);

        i9 = i8 + 1;

        $r25 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i8);

        $r26 = (java.lang.String) $r25;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r26, 1, 1, r6);

        i10 = i9 + 1;

        $r27 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i9);

        $r28 = (java.lang.String) $r27;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r28, 1, 2, r6);

        i11 = i10 + 1;

        $r29 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i10);

        $r30 = (java.lang.String) $r29;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r30, 0, 2, r6);

        i12 = i11 + 1;

        $r31 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i11);

        $r32 = (java.lang.String) $r31;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r32, -1, 2, r6);

        i13 = i12 + 1;

        $r33 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i12);

        $r34 = (java.lang.String) $r33;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r34, -2, 1, r6);

        i14 = i13 + 1;

        $r35 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i13);

        $r36 = (java.lang.String) $r35;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r36, -2, 0, r6);

        i15 = i14 + 1;

        $r37 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i14);

        $r38 = (java.lang.String) $r37;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r38, -2, -1, r6);

        i16 = i15 + 1;

        $r39 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i15);

        $r40 = (java.lang.String) $r39;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r40, -1, -2, r6);

        i17 = i16 + 1;

        $r41 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i16);

        $r42 = (java.lang.String) $r41;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r42, 0, -2, r6);

        i18 = i17 + 1;

        $r43 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i17);

        $r44 = (java.lang.String) $r43;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r44, 1, -2, r6);

        $r45 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(i18);

        $r46 = (java.lang.String) $r45;

        specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.UPolygon)>(r48, $r46, 1, -1, r6);

        return;
    }

    private java.awt.geom.Point2D centerHexa(int, int)
    {
        net.sourceforge.plantuml.eggs.PSystemColors r0;
        double d0, $d1, $d2, d3, $d4, $d5, d6, $d7;
        int i0, i1, $i2;
        java.awt.geom.Point2D$Double $r1;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: double getWidth()>();

        $d1 = (double) i0;

        $d2 = d0 * $d1;

        $i2 = i1 % 2;

        if $i2 != 0 goto label1;

        $d7 = 0.0;

        goto label2;

     label1:
        $d7 = d0 / 2.0;

     label2:
        d3 = $d2 + $d7;

        $d4 = (double) i1;

        $d5 = 60.0 * $d4;

        d6 = $d5 * 1.5;

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d3, d6);

        return $r1;
    }

    private double getWidth()
    {
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.eggs.PSystemColors r0;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(3.0);

        $d1 = $d0 / 2.0;

        $d2 = $d1 * 2.0;

        $d3 = $d2 * 60.0;

        return $d3;
    }

    private void drawOneHexa(net.sourceforge.plantuml.ugraphic.UGraphic, java.lang.String, int, int, net.sourceforge.plantuml.ugraphic.UPolygon)
    {
        net.sourceforge.plantuml.eggs.PSystemColors r0;
        java.lang.String r1, $r14;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r11;
        int i0, i1;
        java.awt.geom.Point2D $r6;
        net.sourceforge.plantuml.ugraphic.UPolygon r7;
        net.sourceforge.plantuml.ugraphic.UFont $r8, r9;
        net.sourceforge.plantuml.graphic.StringBounder $r10, $r13, $r15;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte $b2;
        net.sourceforge.plantuml.ugraphic.UGraphic $r12, r16, r17, r18;
        net.sourceforge.plantuml.graphic.TextBlock r19;
        net.sourceforge.plantuml.awt.geom.Dimension2D r20;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r16 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r7 := @parameter4: net.sourceforge.plantuml.ugraphic.UPolygon;

        $r2 = r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.color.HColorSet colors>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(java.lang.String)>(r1);

        r4 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r3;

        r17 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.UGraphic applyColor(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.color.HColor)>(r16, r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.awt.geom.Point2D centerHexa(int,int)>(i0, i1);

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>($r6);

        r18 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r7);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(14);

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont bold()>();

        r19 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.graphic.TextBlock getTextName(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColorSimple)>(r9, r1, r4);

        $r10 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r20 = interfaceinvoke r19.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r10);

        $d0 = virtualinvoke r20.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: double getWidth()>();

        $b2 = $d0 cmpl $d1;

        if $b2 <= 0 goto label1;

        $r13 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r14 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: java.lang.String findShortest(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r13, r9, r1);

        r19 = specialinvoke r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.graphic.TextBlock getTextName(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColorSimple)>(r9, $r14, r4);

        $r15 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r20 = interfaceinvoke r19.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r15);

     label1:
        $r11 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d2 = virtualinvoke r20.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = neg $d2;

        $d4 = $d3 / 2.0;

        $d5 = virtualinvoke r20.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d6 = neg $d5;

        $d7 = $d6 / 2.0;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, $d7);

        $r12 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        interfaceinvoke r19.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r12);

        return;
    }

    private java.lang.String findShortest(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ugraphic.UFont, java.lang.String)
    {
        java.lang.String r0, $r2, $r5, r7, r14;
        int $i0, $i1, i4;
        char $c2;
        boolean $z0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        net.sourceforge.plantuml.eggs.PSystemColors r8;
        net.sourceforge.plantuml.ugraphic.UFont r9;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r10;
        net.sourceforge.plantuml.graphic.TextBlock r11;
        net.sourceforge.plantuml.graphic.StringBounder r12;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r13;
        double d0, d1;
        byte $b3;

        r8 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r12 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r9 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        r0 := @parameter2: java.lang.String;

        r14 = null;

        d1 = 1.7976931348623157E308;

        i4 = 1;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        if i4 >= $i1 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>($c2);

        if $z0 == 0 goto label2;

        goto label3;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i4);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\n");

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i4);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        r11 = specialinvoke r8.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.graphic.TextBlock getTextName(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColorSimple)>(r9, r7, $r10);

        $r13 = interfaceinvoke r11.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r12);

        d0 = virtualinvoke $r13.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b3 = d0 cmpg d1;

        if $b3 >= 0 goto label3;

        r14 = r7;

        d1 = d0;

     label3:
        i4 = i4 + 1;

        goto label1;

     label4:
        return r14;
    }

    private net.sourceforge.plantuml.ugraphic.UGraphic applyColor(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r2, $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.UBackground $r3;
        net.sourceforge.plantuml.eggs.PSystemColors r5;

        r5 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r2 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r1);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        return $r4;
    }

    private java.awt.geom.Point2D corner(int)
    {
        int i0, $i1, $i2;
        double d0, d1, $d2, $d3, $d4, $d5;
        java.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.eggs.PSystemColors r1;

        r1 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        i0 := @parameter0: int;

        $i1 = 60 * i0;

        $i2 = $i1 + 30;

        d0 = (double) $i2;

        d1 = 0.017453292519943295 * d0;

        $r0 = new java.awt.geom.Point2D$Double;

        $d2 = staticinvoke <java.lang.Math: double cos(double)>(d1);

        $d3 = 60.0 * $d2;

        $d4 = staticinvoke <java.lang.Math: double sin(double)>(d1);

        $d5 = 60.0 * $d4;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, $d5);

        return $r0;
    }

    private net.sourceforge.plantuml.ugraphic.UPolygon getHexa()
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        net.sourceforge.plantuml.eggs.PSystemColors r2;
        java.awt.geom.Point2D $r3;
        int i0;

        r2 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.eggs.PSystemColors: java.awt.geom.Point2D corner(int)>(i0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(java.awt.geom.Point2D)>($r3);

        i0 = i0 + 1;

        goto label1;

     label2:
        return $r0;
    }

    private java.util.List getColorsCloseTo(java.lang.String)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.eggs.PSystemColors r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r2;
        java.util.Collection $r3;
        java.util.Iterator r5;
        java.lang.String r6, $r7, r10, r11;
        boolean $z0, $z2, $z3, $z4;
        java.util.Comparator $r8;
        java.lang.Object $r9;

        r1 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.color.HColorSet colors>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColorSet: java.util.Collection names()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        r5 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z4 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label4;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        r11 = virtualinvoke r10.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("Gray", "Grey");

        $z2 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z2 == 0 goto label2;

        goto label1;

     label2:
        $z3 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>(r11);

        if $z3 == 0 goto label3;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label3:
        goto label1;

     label4:
        $z0 = specialinvoke r1.<net.sourceforge.plantuml.eggs.PSystemColors: boolean containsCaseInsensitive(java.util.Collection,java.lang.String)>($r0, r6);

        if $z0 != 0 goto label5;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r6);

     label5:
        $r7 = r1.<net.sourceforge.plantuml.eggs.PSystemColors: java.lang.String paletteCentralColor>;

        $r8 = specialinvoke r1.<net.sourceforge.plantuml.eggs.PSystemColors: java.util.Comparator closeComparator(java.lang.String)>($r7);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r0, $r8);

        return $r0;
    }

    private boolean containsCaseInsensitive(java.util.Collection, java.lang.String)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        java.lang.String r3, r4;
        net.sourceforge.plantuml.eggs.PSystemColors r5;

        r5 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r0 := @parameter0: java.util.Collection;

        r4 := @parameter1: java.lang.String;

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r2;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private java.util.Comparator closeComparator(java.lang.String)
    {
        net.sourceforge.plantuml.eggs.PSystemColors r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple r4;
        net.sourceforge.plantuml.eggs.PSystemColors$1 $r5;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.color.HColorSet colors>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(java.lang.String)>(r1);

        r4 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r3;

        $r5 = new net.sourceforge.plantuml.eggs.PSystemColors$1;

        specialinvoke $r5.<net.sourceforge.plantuml.eggs.PSystemColors$1: void <init>(net.sourceforge.plantuml.eggs.PSystemColors,net.sourceforge.plantuml.ugraphic.color.HColorSimple)>(r0, r4);

        return $r5;
    }

    private void drawFull(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UFont $r0, r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2, r12;
        net.sourceforge.plantuml.eggs.PSystemColors r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4, $r10;
        java.util.Collection $r5;
        java.util.Iterator r6;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.String r8;
        net.sourceforge.plantuml.ugraphic.UGraphic r9, $r13, $r19, r20, r21;
        net.sourceforge.plantuml.ugraphic.color.HColor $r11;
        net.sourceforge.plantuml.ugraphic.URectangle $r14;
        net.sourceforge.plantuml.graphic.TextBlock r15;
        net.sourceforge.plantuml.graphic.StringBounder $r16;
        net.sourceforge.plantuml.awt.geom.Dimension2D r17;
        double $d0, $d1, d2, $d3, $d4, d5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r18;
        int $i0, i1, i2;

        r3 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r20 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(14);

        r1 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont bold()>();

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        r21 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        i1 = 0;

        i2 = 0;

        $r4 = r3.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.color.HColorSet colors>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorSet: java.util.Collection names()>();

        r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        r9 = specialinvoke r3.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.UGraphic getPositioned(net.sourceforge.plantuml.ugraphic.UGraphic,int,int)>(r21, i1, i2);

        $r10 = r3.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.color.HColorSet colors>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(java.lang.String)>(r8);

        r12 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r11;

        $r13 = specialinvoke r3.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.UGraphic applyColor(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.color.HColor)>(r9, r12);

        $r14 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(175.0, 28.0);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r14);

        r15 = specialinvoke r3.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.graphic.TextBlock getTextName(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColorSimple)>(r1, r8, r12);

        $r16 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r17 = interfaceinvoke r15.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r16);

        $d0 = virtualinvoke r17.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = 28.0 - $d0;

        d2 = $d1 / 2.0;

        $d3 = virtualinvoke r17.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = 175.0 - $d3;

        d5 = $d4 / 2.0;

        $r18 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d5, d2);

        $r19 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        interfaceinvoke r15.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r19);

        $i0 = i2;

        i2 = i2 + 1;

        if $i0 != 20 goto label2;

        i2 = 0;

        i1 = i1 + 1;

     label2:
        goto label1;

     label3:
        return;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTextName(net.sourceforge.plantuml.ugraphic.UFont, java.lang.String, net.sourceforge.plantuml.ugraphic.color.HColorSimple)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple r0, r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2;
        net.sourceforge.plantuml.ugraphic.UFont r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;
        java.lang.String r6;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.SpriteContainerEmpty $r8;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r9;
        net.sourceforge.plantuml.graphic.TextBlock r10;
        net.sourceforge.plantuml.eggs.PSystemColors r11;

        r11 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        r6 := @parameter1: java.lang.String;

        r0 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColorSimple;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColorSimple opposite()>();

        $r2 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r4 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor BLUE>;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>(r3, r1, $r4, 1);

        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r6);

        $r9 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r8 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r8.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        r10 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r2, $r9, $r8);

        return r10;
    }

    private net.sourceforge.plantuml.ugraphic.UGraphic getPositioned(net.sourceforge.plantuml.ugraphic.UGraphic, int, int)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        int i0, i1;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.eggs.PSystemColors r3;

        r3 := @this: net.sourceforge.plantuml.eggs.PSystemColors;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = (double) i0;

        $d3 = 175.0 * $d0;

        $d1 = (double) i1;

        $d2 = 28.0 * $d1;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, $d2);

        $r2 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        return $r2;
    }

    static net.sourceforge.plantuml.ugraphic.color.HColorSet access$000(net.sourceforge.plantuml.eggs.PSystemColors)
    {
        net.sourceforge.plantuml.eggs.PSystemColors r0;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r1;

        r0 := @parameter0: net.sourceforge.plantuml.eggs.PSystemColors;

        $r1 = r0.<net.sourceforge.plantuml.eggs.PSystemColors: net.sourceforge.plantuml.ugraphic.color.HColorSet colors>;

        return $r1;
    }
}
