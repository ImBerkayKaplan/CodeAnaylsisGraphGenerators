public class net.sourceforge.plantuml.awt.geom.Point2D extends java.lang.Object
{
    public double x;
    public double y;

    public void <init>(double, double)
    {
        net.sourceforge.plantuml.awt.geom.Point2D r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.awt.geom.Point2D;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.awt.geom.Point2D: double x> = d0;

        r0.<net.sourceforge.plantuml.awt.geom.Point2D: double y> = d1;

        return;
    }

    public final double getX()
    {
        net.sourceforge.plantuml.awt.geom.Point2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.Point2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.Point2D: double x>;

        return $d0;
    }

    public final double getY()
    {
        net.sourceforge.plantuml.awt.geom.Point2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.Point2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.Point2D: double y>;

        return $d0;
    }

    public double distance(net.sourceforge.plantuml.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.awt.geom.Point2D r0, r1;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9;

        r1 := @this: net.sourceforge.plantuml.awt.geom.Point2D;

        r0 := @parameter0: net.sourceforge.plantuml.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Point2D: double getX()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Point2D: double getY()>();

        d5 = $d3 - $d4;

        $d7 = d2 * d2;

        $d6 = d5 * d5;

        $d8 = $d7 + $d6;

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>($d8);

        return $d9;
    }

    public double distanceSq(net.sourceforge.plantuml.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.awt.geom.Point2D r0, r1;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8;

        r1 := @this: net.sourceforge.plantuml.awt.geom.Point2D;

        r0 := @parameter0: net.sourceforge.plantuml.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Point2D: double getX()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Point2D: double getY()>();

        d5 = $d3 - $d4;

        $d7 = d2 * d2;

        $d6 = d5 * d5;

        $d8 = $d7 + $d6;

        return $d8;
    }

    public static double distance(double, double, double, double)
    {
        double d0, d1, $d2, $d3, $d4, $d5, d6, d7, d8, d9;

        d6 := @parameter0: double;

        d7 := @parameter1: double;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d8 = d6 - d0;

        d9 = d7 - d1;

        $d3 = d8 * d8;

        $d2 = d9 * d9;

        $d4 = $d3 + $d2;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        return $d5;
    }

    public double distance(double, double)
    {
        net.sourceforge.plantuml.awt.geom.Point2D r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8, d9;

        r0 := @this: net.sourceforge.plantuml.awt.geom.Point2D;

        d6 := @parameter0: double;

        d7 := @parameter1: double;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Point2D: double getX()>();

        d8 = d6 - $d0;

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Point2D: double getY()>();

        d9 = d7 - $d1;

        $d3 = d8 * d8;

        $d2 = d9 * d9;

        $d4 = $d3 + $d2;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        return $d5;
    }

    public void setLocation(double, double)
    {
        net.sourceforge.plantuml.awt.geom.Point2D r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.awt.geom.Point2D;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0.<net.sourceforge.plantuml.awt.geom.Point2D: double x> = d0;

        r0.<net.sourceforge.plantuml.awt.geom.Point2D: double y> = d1;

        return;
    }
}
