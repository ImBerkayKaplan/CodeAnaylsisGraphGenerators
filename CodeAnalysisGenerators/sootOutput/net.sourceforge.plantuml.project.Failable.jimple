public class net.sourceforge.plantuml.project.Failable extends java.lang.Object
{
    private final java.lang.Object data;
    private final java.lang.String error;

    public static net.sourceforge.plantuml.project.Failable ok(java.lang.Object)
    {
        net.sourceforge.plantuml.project.Failable $r0;
        java.lang.Object r1;

        r1 := @parameter0: java.lang.Object;

        $r0 = new net.sourceforge.plantuml.project.Failable;

        specialinvoke $r0.<net.sourceforge.plantuml.project.Failable: void <init>(java.lang.Object,java.lang.String)>(r1, null);

        return $r0;
    }

    public static net.sourceforge.plantuml.project.Failable error(java.lang.String)
    {
        net.sourceforge.plantuml.project.Failable $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.project.Failable;

        specialinvoke $r0.<net.sourceforge.plantuml.project.Failable: void <init>(java.lang.Object,java.lang.String)>(null, r1);

        return $r0;
    }

    private void <init>(java.lang.Object, java.lang.String)
    {
        net.sourceforge.plantuml.project.Failable r0;
        java.lang.Object r1;
        java.lang.String r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.project.Failable;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        if r1 == null goto label2;

        if r2 == null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        r0.<net.sourceforge.plantuml.project.Failable: java.lang.Object data> = r1;

        r0.<net.sourceforge.plantuml.project.Failable: java.lang.String error> = r2;

        return;
    }

    public java.lang.Object get()
    {
        net.sourceforge.plantuml.project.Failable r0;
        java.lang.Object $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.sourceforge.plantuml.project.Failable;

        $r1 = r0.<net.sourceforge.plantuml.project.Failable: java.lang.Object data>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.project.Failable: java.lang.Object data>;

        return $r2;
    }

    public boolean isFail()
    {
        net.sourceforge.plantuml.project.Failable r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.project.Failable;

        $r1 = r0.<net.sourceforge.plantuml.project.Failable: java.lang.Object data>;

        if $r1 != null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getError()
    {
        net.sourceforge.plantuml.project.Failable r0;
        java.lang.String $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.sourceforge.plantuml.project.Failable;

        $r1 = r0.<net.sourceforge.plantuml.project.Failable: java.lang.String error>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.project.Failable: java.lang.String error>;

        return $r2;
    }
}
