public class net.sourceforge.plantuml.stats.ParsedGenerated extends java.lang.Object
{
    private final net.sourceforge.plantuml.api.NumberAnalyzed parsed;
    private final net.sourceforge.plantuml.api.NumberAnalyzed generated;

    private void <init>(net.sourceforge.plantuml.api.NumberAnalyzed, net.sourceforge.plantuml.api.NumberAnalyzed)
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0;
        net.sourceforge.plantuml.api.NumberAnalyzed r1, $r3, r4, $r6;
        java.lang.Object $r2, $r5;

        r0 := @this: net.sourceforge.plantuml.stats.ParsedGenerated;

        r1 := @parameter0: net.sourceforge.plantuml.api.NumberAnalyzed;

        r4 := @parameter1: net.sourceforge.plantuml.api.NumberAnalyzed;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.api.NumberAnalyzed) $r2;

        r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed parsed> = $r3;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r6 = (net.sourceforge.plantuml.api.NumberAnalyzed) $r5;

        r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed generated> = $r6;

        return;
    }

    public void reset()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0;
        net.sourceforge.plantuml.api.NumberAnalyzed $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed parsed>;

        virtualinvoke $r1.<net.sourceforge.plantuml.api.NumberAnalyzed: void reset()>();

        $r2 = r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed generated>;

        virtualinvoke $r2.<net.sourceforge.plantuml.api.NumberAnalyzed: void reset()>();

        return;
    }

    public static net.sourceforge.plantuml.stats.ParsedGenerated createVolatile()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated $r0;
        net.sourceforge.plantuml.api.NumberAnalyzed $r1, $r2;

        $r0 = new net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = new net.sourceforge.plantuml.api.NumberAnalyzed;

        specialinvoke $r1.<net.sourceforge.plantuml.api.NumberAnalyzed: void <init>()>();

        $r2 = new net.sourceforge.plantuml.api.NumberAnalyzed;

        specialinvoke $r2.<net.sourceforge.plantuml.api.NumberAnalyzed: void <init>()>();

        specialinvoke $r0.<net.sourceforge.plantuml.stats.ParsedGenerated: void <init>(net.sourceforge.plantuml.api.NumberAnalyzed,net.sourceforge.plantuml.api.NumberAnalyzed)>($r1, $r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.stats.ParsedGenerated createVolatileDated()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated $r0;
        net.sourceforge.plantuml.api.NumberAnalyzedDated $r1, $r2;

        $r0 = new net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = new net.sourceforge.plantuml.api.NumberAnalyzedDated;

        specialinvoke $r1.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void <init>()>();

        $r2 = new net.sourceforge.plantuml.api.NumberAnalyzedDated;

        specialinvoke $r2.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void <init>()>();

        specialinvoke $r0.<net.sourceforge.plantuml.stats.ParsedGenerated: void <init>(net.sourceforge.plantuml.api.NumberAnalyzed,net.sourceforge.plantuml.api.NumberAnalyzed)>($r1, $r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.stats.ParsedGenerated loadDated(java.util.prefs.Preferences, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r6, $r7, $r8, $r12, $r13, $r14, $r17, $r18, $r19;
        java.lang.String r1, $r4, $r9, $r15, $r20;
        java.util.prefs.Preferences r5;
        net.sourceforge.plantuml.stats.ParsedGenerated $r10;
        net.sourceforge.plantuml.api.NumberAnalyzedDated $r11, $r16, r21, r22;

        r5 := @parameter0: java.util.prefs.Preferences;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".p");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = staticinvoke <net.sourceforge.plantuml.api.NumberAnalyzedDated: net.sourceforge.plantuml.api.NumberAnalyzedDated load(java.lang.String,java.util.prefs.Preferences)>($r4, r5);

        if r21 != null goto label1;

        $r16 = new net.sourceforge.plantuml.api.NumberAnalyzedDated;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".p");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void <init>(java.lang.String)>($r20);

        r21 = $r16;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".g");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = staticinvoke <net.sourceforge.plantuml.api.NumberAnalyzedDated: net.sourceforge.plantuml.api.NumberAnalyzedDated load(java.lang.String,java.util.prefs.Preferences)>($r9, r5);

        if r22 != null goto label2;

        $r11 = new net.sourceforge.plantuml.api.NumberAnalyzedDated;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".g");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void <init>(java.lang.String)>($r15);

        r22 = $r11;

     label2:
        $r10 = new net.sourceforge.plantuml.stats.ParsedGenerated;

        specialinvoke $r10.<net.sourceforge.plantuml.stats.ParsedGenerated: void <init>(net.sourceforge.plantuml.api.NumberAnalyzed,net.sourceforge.plantuml.api.NumberAnalyzed)>(r21, r22);

        return $r10;
    }

    public net.sourceforge.plantuml.api.NumberAnalyzed parsed()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0;
        net.sourceforge.plantuml.api.NumberAnalyzed $r1;

        r0 := @this: net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed parsed>;

        return $r1;
    }

    public net.sourceforge.plantuml.api.NumberAnalyzed generated()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0;
        net.sourceforge.plantuml.api.NumberAnalyzed $r1;

        r0 := @this: net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed generated>;

        return $r1;
    }

    public net.sourceforge.plantuml.api.NumberAnalyzedDated parsedDated()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0;
        net.sourceforge.plantuml.api.NumberAnalyzed $r1;
        net.sourceforge.plantuml.api.NumberAnalyzedDated $r2;

        r0 := @this: net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed parsed>;

        $r2 = (net.sourceforge.plantuml.api.NumberAnalyzedDated) $r1;

        return $r2;
    }

    public net.sourceforge.plantuml.api.NumberAnalyzedDated generatedDated()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0;
        net.sourceforge.plantuml.api.NumberAnalyzed $r1;
        net.sourceforge.plantuml.api.NumberAnalyzedDated $r2;

        r0 := @this: net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed generated>;

        $r2 = (net.sourceforge.plantuml.api.NumberAnalyzedDated) $r1;

        return $r2;
    }

    public long getId()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0;
        net.sourceforge.plantuml.api.NumberAnalyzedDated $r1;
        java.lang.String r2, $r3;
        int i0;
        long $l1;

        r0 := @this: net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzedDated parsedDated()>();

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String getComment()>();

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(47);

        if i0 != -1 goto label1;

        return -1L;

     label1:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r3, 36);

        return $l1;
    }

    public java.lang.String getVersion()
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0;
        net.sourceforge.plantuml.api.NumberAnalyzedDated $r1;
        java.lang.String r2, $r3;
        int i0, $i1;

        r0 := @this: net.sourceforge.plantuml.stats.ParsedGenerated;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzedDated parsedDated()>();

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.api.NumberAnalyzedDated: java.lang.String getComment()>();

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(47);

        if i0 != -1 goto label1;

        return " ";

     label1:
        $i1 = i0 + 1;

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r3;
    }
}
