public class net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UEllipse, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.svg.SvgGraphics)
    {
        net.sourceforge.plantuml.ugraphic.UEllipse r0;
        double d0, d1, $d2, d3, d4, $d5, d6, d7, $d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, d63, d64, d65, d66, d67, d68, d69, d70, d71, d72;
        net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg r1;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r2;
        net.sourceforge.plantuml.ugraphic.UClip r3;
        net.sourceforge.plantuml.svg.SvgGraphics r4;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r5;
        net.sourceforge.plantuml.ugraphic.UParam r6;
        net.sourceforge.plantuml.ugraphic.UStroke $r7, $r8;
        java.lang.String $r9;
        byte $b0, $b1, $b2;
        boolean $z0, $z1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UEllipse;

        d4 := @parameter1: double;

        d7 := @parameter2: double;

        r5 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r6 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: net.sourceforge.plantuml.svg.SvgGraphics;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(double,double)>(d4, d7);

        if $z0 != 0 goto label1;

        return;

     label1:
        $d62 = d4 + d0;

        $d61 = d7 + d1;

        $z1 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(double,double)>($d62, $d61);

        if $z1 != 0 goto label2;

        return;

     label2:
        staticinvoke <net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: void applyStrokeColor(net.sourceforge.plantuml.svg.SvgGraphics,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam)>(r4, r5, r6);

        staticinvoke <net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: void applyFillColor(net.sourceforge.plantuml.svg.SvgGraphics,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam)>(r4, r5, r6);

        $r7 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d2 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UStroke: java.lang.String getDasharraySvg()>();

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeWidth(double,java.lang.String)>($d2, $r9);

        d63 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getStart()>();

        d3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getExtend()>();

        $d5 = d0 / 2.0;

        d6 = d4 + $d5;

        $d8 = d1 / 2.0;

        d9 = d7 + $d8;

        $b0 = d63 cmpl 0.0;

        if $b0 != 0 goto label3;

        $b2 = d3 cmpl 0.0;

        if $b2 != 0 goto label3;

        $d58 = d0 / 2.0;

        $d59 = d1 / 2.0;

        $d60 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getDeltaShadow()>();

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void svgEllipse(double,double,double,double,double)>(d6, d9, $d58, $d59, $d60);

        goto label5;

     label3:
        d64 = d63 + 90.0;

        $b1 = d3 cmpl 0.0;

        if $b1 <= 0 goto label4;

        $d34 = d64 * 3.141592653589793;

        $d35 = $d34 / 180.0;

        $d36 = staticinvoke <java.lang.Math: double sin(double)>($d35);

        $d37 = $d36 * d0;

        $d38 = $d37 / 2.0;

        d65 = d6 + $d38;

        $d39 = d64 * 3.141592653589793;

        $d40 = $d39 / 180.0;

        $d41 = staticinvoke <java.lang.Math: double cos(double)>($d40);

        $d42 = $d41 * d1;

        $d43 = $d42 / 2.0;

        d66 = d9 + $d43;

        $d44 = d64 + d3;

        $d45 = $d44 * 3.141592653589793;

        $d46 = $d45 / 180.0;

        $d47 = staticinvoke <java.lang.Math: double sin(double)>($d46);

        $d48 = $d47 * d0;

        $d49 = $d48 / 2.0;

        d67 = d6 + $d49;

        $d50 = d64 + d3;

        $d51 = $d50 * 3.141592653589793;

        $d52 = $d51 / 180.0;

        $d53 = staticinvoke <java.lang.Math: double cos(double)>($d52);

        $d54 = $d53 * d1;

        $d55 = $d54 / 2.0;

        d68 = d9 + $d55;

        $d57 = d0 / 2.0;

        $d56 = d1 / 2.0;

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void svgArcEllipse(double,double,double,double,double,double)>($d57, $d56, d65, d66, d67, d68);

        goto label5;

     label4:
        $d10 = d64 + d3;

        $d11 = $d10 * 3.141592653589793;

        $d12 = $d11 / 180.0;

        $d13 = staticinvoke <java.lang.Math: double sin(double)>($d12);

        $d14 = $d13 * d0;

        $d15 = $d14 / 2.0;

        d69 = d6 + $d15;

        $d16 = d64 + d3;

        $d17 = $d16 * 3.141592653589793;

        $d18 = $d17 / 180.0;

        $d19 = staticinvoke <java.lang.Math: double cos(double)>($d18);

        $d20 = $d19 * d1;

        $d21 = $d20 / 2.0;

        d70 = d9 + $d21;

        $d22 = d64 * 3.141592653589793;

        $d23 = $d22 / 180.0;

        $d24 = staticinvoke <java.lang.Math: double sin(double)>($d23);

        $d25 = $d24 * d0;

        $d26 = $d25 / 2.0;

        d71 = d6 + $d26;

        $d27 = d64 * 3.141592653589793;

        $d28 = $d27 / 180.0;

        $d29 = staticinvoke <java.lang.Math: double cos(double)>($d28);

        $d30 = $d29 * d1;

        $d31 = $d30 / 2.0;

        d72 = d9 + $d31;

        $d33 = d0 / 2.0;

        $d32 = d1 / 2.0;

        virtualinvoke r4.<net.sourceforge.plantuml.svg.SvgGraphics: void svgArcEllipse(double,double,double,double,double,double)>($d33, $d32, d69, d70, d71, d72);

     label5:
        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.svg.SvgGraphics $r5;
        net.sourceforge.plantuml.ugraphic.UEllipse $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UEllipse) r1;

        $r5 = (net.sourceforge.plantuml.svg.SvgGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.DriverEllipseSvg: void draw(net.sourceforge.plantuml.ugraphic.UEllipse,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.svg.SvgGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
