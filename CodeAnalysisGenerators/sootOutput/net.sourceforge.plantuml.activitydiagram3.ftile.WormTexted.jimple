public class net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted extends java.lang.Object implements java.lang.Iterable
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm;
    private net.sourceforge.plantuml.graphic.TextBlock textBlock;

    private void <init>(net.sourceforge.plantuml.style.Style)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r1;
        net.sourceforge.plantuml.style.Style r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r2 := @parameter0: net.sourceforge.plantuml.style.Style;

        $r1 = new net.sourceforge.plantuml.activitydiagram3.ftile.Worm;

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: void <init>(net.sourceforge.plantuml.style.Style)>(r2);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Worm)>($r1);

        return;
    }

    private void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Worm)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Worm;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm> = r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r1;
        java.util.Iterator $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: java.util.Iterator iterator()>();

        return $r2;
    }

    public void addPoint(double, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        double d0, d1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: void addPoint(double,double)>(d0, d1);

        return;
    }

    public void drawInternalOneColor(net.sourceforge.plantuml.ugraphic.UPolygon, net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.graphic.HtmlColorAndStyle, double, net.sourceforge.plantuml.Direction, net.sourceforge.plantuml.ugraphic.UPolygon)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.ugraphic.UPolygon r1, r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.graphic.HtmlColorAndStyle r3;
        double d0;
        net.sourceforge.plantuml.Direction r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UPolygon;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.HtmlColorAndStyle;

        d0 := @parameter3: double;

        r4 := @parameter4: net.sourceforge.plantuml.Direction;

        r5 := @parameter5: net.sourceforge.plantuml.ugraphic.UPolygon;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: void drawInternalOneColor(net.sourceforge.plantuml.ugraphic.UPolygon,net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.HtmlColorAndStyle,double,net.sourceforge.plantuml.Direction,net.sourceforge.plantuml.ugraphic.UPolygon)>(r1, r2, r3, d0, r4, r5);

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Worm getWorm()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        return $r1;
    }

    public java.awt.geom.Point2D get(int)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        int i0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r1;
        java.awt.geom.Point2D$Double $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: java.awt.geom.Point2D$Double get(int)>(i0);

        return $r2;
    }

    public int size()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: int size()>();

        return $i0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted merge(net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted, net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0, r1, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r3, $r4, r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: net.sourceforge.plantuml.activitydiagram3.ftile.Worm merge(net.sourceforge.plantuml.activitydiagram3.ftile.Worm,net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r3, r2);

        $r6 = new net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        specialinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Worm)>(r5);

        return $r6;
    }

    public void addAll(net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0, r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Worm $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.activitydiagram3.ftile.Worm worm>;

        virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Worm: void addAll(net.sourceforge.plantuml.activitydiagram3.ftile.Worm)>($r2);

        return;
    }

    public void setLabel(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock> = r2;

        return;
    }

    public boolean isEmptyText(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $z0 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: boolean isEmpty(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        return $z0;
    }

    private java.awt.geom.Point2D getTextBlockPosition(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        java.awt.geom.Point2D r1, r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10;
        java.awt.geom.Point2D$Double $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: java.awt.geom.Point2D get(int)>(0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: java.awt.geom.Point2D get(int)>(1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d1 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d2 = $d0 + $d1;

        $d3 = $d2 / 2.0;

        $d4 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = $d4 / 2.0;

        d6 = $d3 - $d5;

        $r6 = new java.awt.geom.Point2D$Double;

        $d7 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d8 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d9 = staticinvoke <java.lang.Math: double max(double,double)>($d7, $d8);

        $d10 = $d9 + 4.0;

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d10, d6);

        return $r6;
    }

    public double getMaxX(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        boolean $z0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r3;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double $d0, $d1, $d2, $d3, d4;
        java.lang.Object $r4;
        java.util.Iterator r5;
        java.awt.geom.Point2D r6, r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d4 = -1.7976931348623157E308;

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.awt.geom.Point2D) $r4;

        $d3 = virtualinvoke r6.<java.awt.geom.Point2D: double getX()>();

        d4 = staticinvoke <java.lang.Math: double max(double,double)>(d4, $d3);

        goto label1;

     label2:
        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        if $r1 == null goto label3;

        r7 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: java.awt.geom.Point2D getTextBlockPosition(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        r8 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 + $d1;

        d4 = staticinvoke <java.lang.Math: double max(double,double)>(d4, $d2);

     label3:
        return d4;
    }

    void drawInternalLabel(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r7;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        java.awt.geom.Point2D r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        if $r1 == null goto label1;

        $r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: java.awt.geom.Point2D getTextBlockPosition(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r4);

        $r7 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

     label1:
        return;
    }

    public void copyLabels(net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted r0, r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.WormTexted: net.sourceforge.plantuml.graphic.TextBlock textBlock> = $r2;

        return;
    }
}
