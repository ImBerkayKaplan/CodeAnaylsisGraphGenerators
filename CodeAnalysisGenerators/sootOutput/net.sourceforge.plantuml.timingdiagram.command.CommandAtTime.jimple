public class net.sourceforge.plantuml.timingdiagram.command.CommandAtTime extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.timingdiagram.command.CommandAtTime r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandAtTime;

        $r1 = staticinvoke <net.sourceforge.plantuml.timingdiagram.command.CommandAtTime: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r7;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        net.sourceforge.plantuml.command.regex.IRegex $r4;
        net.sourceforge.plantuml.command.regex.RegexOptional $r5;
        net.sourceforge.plantuml.command.regex.RegexConcat $r6, $r15;

        $r0 = class "Lnet/sourceforge/plantuml/timingdiagram/command/CommandAtTime;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.timingdiagram.command.TimeTickBuilder: net.sourceforge.plantuml.command.regex.IRegex expressionAtWithArobase(java.lang.String)>("TIME");

        $r2[1] = $r4;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r7 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r7[0] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("as");

        $r7[1] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r7[2] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(":");

        $r7[3] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE", "([%pLN_.]+)");

        $r7[4] = $r12;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r7);

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r6);

        $r2[2] = $r5;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[3] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[4] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r15;
    }

    protected final net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.timingdiagram.TimingDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r1;
        net.sourceforge.plantuml.timingdiagram.TimeTick r2;
        java.lang.String r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4, $r5;
        net.sourceforge.plantuml.timingdiagram.command.CommandAtTime r6;
        net.sourceforge.plantuml.LineLocation r7;

        r6 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandAtTime;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r7 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r2 = staticinvoke <net.sourceforge.plantuml.timingdiagram.command.TimeTickBuilder: net.sourceforge.plantuml.timingdiagram.TimeTick parseTimeTick(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.timingdiagram.Clocks)>("TIME", r0, r1);

        if r2 != null goto label1;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("What time?");

        return $r5;

     label1:
        r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("CODE", 0);

        virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: void addTime(net.sourceforge.plantuml.timingdiagram.TimeTick,java.lang.String)>(r2, r3);

        $r4 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r4;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.timingdiagram.command.CommandAtTime r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandAtTime;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.timingdiagram.TimingDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.command.CommandAtTime: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.timingdiagram.TimingDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
