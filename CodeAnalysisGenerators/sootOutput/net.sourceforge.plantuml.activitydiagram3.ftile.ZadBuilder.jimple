public class net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder extends net.sourceforge.plantuml.ugraphic.UGraphicNo
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context context;

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder $r0, r1;
        net.sourceforge.plantuml.ugraphic.UChange r2;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder,net.sourceforge.plantuml.ugraphic.UChange)>(r1, r2);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphicNo: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = new net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context;

        specialinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context context> = $r2;

        return;
    }

    private void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder, net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder r0, r1;
        net.sourceforge.plantuml.ugraphic.UChange r2;
        java.lang.Class[] $r3;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context $r4;
        java.lang.UnsupportedOperationException $r5;
        java.lang.Class $r6;
        java.lang.String $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UChange;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphicNo: void <init>(net.sourceforge.plantuml.ugraphic.UGraphicNo,net.sourceforge.plantuml.ugraphic.UChange)>(r1, r2);

        $r3 = newarray (java.lang.Class)[4];

        $r3[0] = class "Lnet/sourceforge/plantuml/ugraphic/UBackground;";

        $r3[1] = class "Lnet/sourceforge/plantuml/ugraphic/color/HColor;";

        $r3[2] = class "Lnet/sourceforge/plantuml/ugraphic/UStroke;";

        $r3[3] = class "Lnet/sourceforge/plantuml/ugraphic/UTranslate;";

        $z0 = staticinvoke <net.sourceforge.plantuml.utils.ObjectUtils: boolean instanceOfAny(java.lang.Object,java.lang.Class[])>(r2, $r3);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context context>;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context context> = $r4;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.ugraphic.UShape r0;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder r1;
        net.sourceforge.plantuml.ugraphic.URectangle $r2;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $z0 = r0 instanceof net.sourceforge.plantuml.ugraphic.URectangle;

        if $z0 == 0 goto label1;

        $r2 = (net.sourceforge.plantuml.ugraphic.URectangle) r0;

        specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder: void drawRectangle(net.sourceforge.plantuml.ugraphic.URectangle)>($r2);

     label1:
        return;
    }

    private void drawRectangle(net.sourceforge.plantuml.ugraphic.URectangle)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        net.sourceforge.plantuml.ugraphic.MinMax $r1, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Zad $r6;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.URectangle;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.MinMax getMinMax()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax translate(net.sourceforge.plantuml.ugraphic.UTranslate)>($r3);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context context>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context: net.sourceforge.plantuml.activitydiagram3.ftile.Zad access$000(net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context)>($r5);

        virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Zad: void add(net.sourceforge.plantuml.ugraphic.MinMax)>(r4);

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Zad getZad()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Zad $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context context>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context: net.sourceforge.plantuml.activitydiagram3.ftile.Zad access$000(net.sourceforge.plantuml.activitydiagram3.ftile.ZadBuilder$Context)>($r1);

        return $r2;
    }
}
