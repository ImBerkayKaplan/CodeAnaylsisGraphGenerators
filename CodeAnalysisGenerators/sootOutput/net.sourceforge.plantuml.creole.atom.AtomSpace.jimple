public class net.sourceforge.plantuml.creole.atom.AtomSpace extends net.sourceforge.plantuml.creole.atom.AbstractAtom implements net.sourceforge.plantuml.creole.atom.Atom
{
    private final double width;

    public static net.sourceforge.plantuml.creole.atom.Atom create(double)
    {
        net.sourceforge.plantuml.creole.atom.AtomSpace $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.creole.atom.AtomSpace;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.atom.AtomSpace: void <init>(double)>(d0);

        return $r0;
    }

    private void <init>(double)
    {
        net.sourceforge.plantuml.creole.atom.AtomSpace r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomSpace;

        d0 := @parameter0: double;

        specialinvoke r0.<net.sourceforge.plantuml.creole.atom.AbstractAtom: void <init>()>();

        r0.<net.sourceforge.plantuml.creole.atom.AtomSpace: double width> = d0;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.creole.atom.AtomSpace r1;
        double $d0;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.creole.atom.AtomSpace;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = r1.<net.sourceforge.plantuml.creole.atom.AtomSpace: double width>;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d0, 1.0);

        return $r0;
    }

    public double getStartingAltitude(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.atom.AtomSpace r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomSpace;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 0.0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.creole.atom.AtomSpace r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomSpace;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        return;
    }
}
