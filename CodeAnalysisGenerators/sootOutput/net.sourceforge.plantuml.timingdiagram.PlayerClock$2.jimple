class net.sourceforge.plantuml.timingdiagram.PlayerClock$2 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final net.sourceforge.plantuml.timingdiagram.PlayerClock this$0;

    void <init>(net.sourceforge.plantuml.timingdiagram.PlayerClock)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock$2 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock$2;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic, double, double)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock$2 r0;
        double d0, d1, $d2, d3, $d4, d5, $d6;
        net.sourceforge.plantuml.timingdiagram.PlayerClock $r1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r2;
        net.sourceforge.plantuml.ugraphic.ULine r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock$2;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d3 := @parameter2: double;

        d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: double getX(double)>(d0);

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $r2 = $r1.<net.sourceforge.plantuml.timingdiagram.PlayerClock: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d2 = virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $d4 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: double getX(double)>(d3);

        d5 = staticinvoke <java.lang.Math: double min(double,double)>($d2, $d4);

        $d6 = d5 - d1;

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d6);

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d1);

        $r6 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r3);

        return;
    }

    private void drawVline(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.ULine, double)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        net.sourceforge.plantuml.timingdiagram.PlayerClock$2 r2;
        double d0, $d1;
        net.sourceforge.plantuml.ugraphic.ULine r4;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock$2;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.ULine;

        d0 := @parameter2: double;

        $r1 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d1 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: double getX(double)>(d0);

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, 8.0);

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r4);

        return;
    }

    private double getX(double)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock$2 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock $r1;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r2;
        java.math.BigDecimal $r3;
        double d0, $d1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r4;
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock$2;

        d0 := @parameter0: double;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $r4 = $r1.<net.sourceforge.plantuml.timingdiagram.PlayerClock: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r2 = new net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r3 = new java.math.BigDecimal;

        specialinvoke $r3.<java.math.BigDecimal: void <init>(double)>(d0);

        $r5 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DECIMAL>;

        specialinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimeTick: void <init>(java.math.BigDecimal,net.sourceforge.plantuml.timingdiagram.TimingFormat)>($r3, $r5);

        $d1 = virtualinvoke $r4.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r2);

        return $d1;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock$2 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock $r1, $r3, $r6, $r9, $r10, $r12, $r13, $r14, $r17, $r21, $r23, $r26, $r27;
        net.sourceforge.plantuml.graphic.SymbolContext $r2;
        net.sourceforge.plantuml.graphic.StringBounder $r4, $r7;
        double $d0, $d1, $d2, $d3, d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, $d21, d22;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r15, $r19, $r24;
        net.sourceforge.plantuml.ugraphic.ULine r8;
        int $i0, $i2, $i3, $i4, $i7, $i8, $i9, i10;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r11, $r18, $r22;
        byte $b1, $b5, $b6;
        net.sourceforge.plantuml.ugraphic.UGraphic $r16, $r20, $r25, r28, r29, r30;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock$2;

        r28 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.timingdiagram.PlayerClock: net.sourceforge.plantuml.graphic.SymbolContext getContext()>();

        r29 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r28);

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $r4 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d0 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: double access$000(net.sourceforge.plantuml.timingdiagram.PlayerClock,net.sourceforge.plantuml.graphic.StringBounder)>($r3, $r4);

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        r30 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r6 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $r7 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d1 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: double access$100(net.sourceforge.plantuml.timingdiagram.PlayerClock,net.sourceforge.plantuml.graphic.StringBounder)>($r6, $r7);

        r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d1);

        d20 = 0.0;

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $i0 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: int access$200(net.sourceforge.plantuml.timingdiagram.PlayerClock)>($r9);

        if $i0 == 0 goto label1;

        $d16 = virtualinvoke r8.<net.sourceforge.plantuml.ugraphic.ULine: double getDY()>();

        $d17 = 8.0 + $d16;

        $r24 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d17);

        $r25 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        $r26 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $i8 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: int access$200(net.sourceforge.plantuml.timingdiagram.PlayerClock)>($r26);

        $d18 = (double) $i8;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>($r25, 0.0, $d18);

        $r27 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $i9 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: int access$200(net.sourceforge.plantuml.timingdiagram.PlayerClock)>($r27);

        $d19 = (double) $i9;

        d20 = 0.0 + $d19;

     label1:
        $d2 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: double getX(double)>(d20);

        $r10 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $r11 = $r10.<net.sourceforge.plantuml.timingdiagram.PlayerClock: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d3 = virtualinvoke $r11.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label2;

        return;

     label2:
        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: void drawVline(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.ULine,double)>(r30, r8, d20);

        $r12 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $i2 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: int access$300(net.sourceforge.plantuml.timingdiagram.PlayerClock)>($r12);

        if $i2 != 0 goto label3;

        $r23 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $i7 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: int access$400(net.sourceforge.plantuml.timingdiagram.PlayerClock)>($r23);

        $d15 = (double) $i7;

        $d21 = $d15 / 2.0;

        goto label4;

     label3:
        $r13 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $i3 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: int access$300(net.sourceforge.plantuml.timingdiagram.PlayerClock)>($r13);

        $d21 = (double) $i3;

     label4:
        d4 = $d21;

        $r14 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $i4 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerClock: int access$400(net.sourceforge.plantuml.timingdiagram.PlayerClock)>($r14);

        $d5 = (double) $i4;

        d6 = $d5 - $d21;

        i10 = 0;

     label5:
        if i10 >= 1000 goto label8;

        $r15 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(8.0);

        $r16 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $d7 = d20 + d4;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>($r16, d20, $d7);

        d22 = d20 + d4;

        $d8 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: double getX(double)>(d22);

        $r17 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $r18 = $r17.<net.sourceforge.plantuml.timingdiagram.PlayerClock: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d9 = virtualinvoke $r18.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $b5 = $d8 cmpl $d9;

        if $b5 <= 0 goto label6;

        return;

     label6:
        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: void drawVline(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.ULine,double)>(r30, r8, d22);

        $d10 = virtualinvoke r8.<net.sourceforge.plantuml.ugraphic.ULine: double getDY()>();

        $d11 = 8.0 + $d10;

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d11);

        $r20 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        $d12 = d22 + d6;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>($r20, d22, $d12);

        d20 = d22 + d6;

        $d13 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: double getX(double)>(d20);

        $r21 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: net.sourceforge.plantuml.timingdiagram.PlayerClock this$0>;

        $r22 = $r21.<net.sourceforge.plantuml.timingdiagram.PlayerClock: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d14 = virtualinvoke $r22.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $b6 = $d13 cmpl $d14;

        if $b6 <= 0 goto label7;

        return;

     label7:
        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: void drawVline(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.ULine,double)>(r30, r8, d20);

        i10 = i10 + 1;

        goto label5;

     label8:
        return;
    }
}
