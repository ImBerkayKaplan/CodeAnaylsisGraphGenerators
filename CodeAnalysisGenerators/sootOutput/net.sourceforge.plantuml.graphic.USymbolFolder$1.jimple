class net.sourceforge.plantuml.graphic.USymbolFolder$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext;
    final net.sourceforge.plantuml.graphic.TextBlock val$stereotype;
    final net.sourceforge.plantuml.graphic.TextBlock val$label;
    final net.sourceforge.plantuml.graphic.TextBlock val$name;
    final net.sourceforge.plantuml.graphic.USymbolFolder this$0;

    void <init>(net.sourceforge.plantuml.graphic.USymbolFolder, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder$1 r0;
        net.sourceforge.plantuml.graphic.USymbolFolder r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r5;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFolder$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFolder;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.SymbolContext;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter4: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.USymbolFolder this$0> = r1;

        r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext> = r2;

        r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$stereotype> = r3;

        r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$label> = r4;

        r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$name> = r5;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1, $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, r5;
        net.sourceforge.plantuml.graphic.SymbolContext $r3, $r7, $r8;
        net.sourceforge.plantuml.graphic.USymbolFolder $r6, $r9, $r15;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.graphic.USymbol$Margin r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r11;
        net.sourceforge.plantuml.graphic.TextBlock $r12, $r13, r14, $r19;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r16, $r18;
        net.sourceforge.plantuml.ugraphic.UGraphic $r17, $r20, r21, r22, r23;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFolder$1;

        r21 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r1);

        r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.UGraphicStencil: net.sourceforge.plantuml.ugraphic.UGraphic create(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r21, r2);

        $r3 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext>;

        r23 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r22);

        $r4 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.awt.geom.Dimension2D getDimName(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        $r6 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.USymbolFolder this$0>;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r7 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext>;

        $d2 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        $r8 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext>;

        $d3 = virtualinvoke $r8.<net.sourceforge.plantuml.graphic.SymbolContext: double getRoundCorner()>();

        staticinvoke <net.sourceforge.plantuml.graphic.USymbolFolder: void access$000(net.sourceforge.plantuml.graphic.USymbolFolder,net.sourceforge.plantuml.ugraphic.UGraphic,double,double,net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r6, r23, $d0, $d1, r5, $d2, $d3);

        $r9 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.USymbolFolder this$0>;

        r10 = staticinvoke <net.sourceforge.plantuml.graphic.USymbolFolder: net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolFolder)>($r9);

        $r13 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        $r12 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$label>;

        $r11 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        r14 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r13, $r12, $r11);

        $r15 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.USymbolFolder this$0>;

        $z0 = staticinvoke <net.sourceforge.plantuml.graphic.USymbolFolder: boolean access$200(net.sourceforge.plantuml.graphic.USymbolFolder)>($r15);

        if $z0 == 0 goto label1;

        $r19 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$name>;

        $r18 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(4.0, 3.0);

        $r20 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        interfaceinvoke $r19.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r20);

     label1:
        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = virtualinvoke r10.<net.sourceforge.plantuml.graphic.USymbol$Margin: double getX1()>();

        $d5 = virtualinvoke r10.<net.sourceforge.plantuml.graphic.USymbol$Margin: double getY1()>();

        $d6 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d7 = $d5 + $d6;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, $d7);

        $r17 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke r14.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r17);

        return;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D getDimName(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder$1 r0;
        net.sourceforge.plantuml.graphic.USymbolFolder $r1;
        boolean $z0;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;
        net.sourceforge.plantuml.Dimension2DDouble $r5;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFolder$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.USymbolFolder this$0>;

        $z0 = staticinvoke <net.sourceforge.plantuml.graphic.USymbolFolder: boolean access$200(net.sourceforge.plantuml.graphic.USymbolFolder)>($r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$name>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        goto label2;

     label1:
        $r5 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r4 = $r5;

        specialinvoke $r5.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(40.0, 15.0);

     label2:
        return $r4;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, r4, r6, $r9, $r10;
        net.sourceforge.plantuml.graphic.TextBlock $r3, $r5;
        net.sourceforge.plantuml.graphic.USymbolFolder $r7;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r8;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFolder$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.awt.geom.Dimension2D getDimName(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$label>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder$1: net.sourceforge.plantuml.graphic.USymbolFolder this$0>;

        $r8 = staticinvoke <net.sourceforge.plantuml.graphic.USymbolFolder: net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolFolder)>($r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D mergeTB(net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r2, r6, r4);

        $r10 = virtualinvoke $r8.<net.sourceforge.plantuml.graphic.USymbol$Margin: net.sourceforge.plantuml.awt.geom.Dimension2D addDimension(net.sourceforge.plantuml.awt.geom.Dimension2D)>($r9);

        return $r10;
    }
}
