public class net.sourceforge.plantuml.ugraphic.visio.VisioGraphics extends java.lang.Object
{
    private final java.util.List shapes;
    private final net.sourceforge.plantuml.golem.MinMaxDouble limits;

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.golem.MinMaxDouble $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: java.util.List shapes> = $r1;

        $r2 = new net.sourceforge.plantuml.golem.MinMaxDouble;

        specialinvoke $r2.<net.sourceforge.plantuml.golem.MinMaxDouble: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: net.sourceforge.plantuml.golem.MinMaxDouble limits> = $r2;

        return;
    }

    public void createVsd(java.io.OutputStream) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r0;
        net.sourceforge.plantuml.golem.MinMaxDouble $r1, $r2;
        double $d0, d1, $d2, d3, $d4, $d5;
        java.io.OutputStream r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r16, $r17, $r18, $r19;
        java.lang.String $r10, $r15, $r20;
        java.util.List $r21;
        java.util.Iterator r22;
        boolean $z0;
        java.lang.Object $r23;
        net.sourceforge.plantuml.ugraphic.visio.VisioShape r24, $r25;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        r3 := @parameter0: java.io.OutputStream;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: net.sourceforge.plantuml.golem.MinMaxDouble limits>;

        $d0 = virtualinvoke $r1.<net.sourceforge.plantuml.golem.MinMaxDouble: double getMaxX()>();

        d1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: double toInches(double)>($d0);

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: net.sourceforge.plantuml.golem.MinMaxDouble limits>;

        $d2 = virtualinvoke $r2.<net.sourceforge.plantuml.golem.MinMaxDouble: double getMaxY()>();

        d3 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: double toInches(double)>($d2);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<?xml version=\'1.0\' encoding=\'utf-8\' ?>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<VisioDocument xml:space=\'preserve\' xmlns=\'http://schemas.microsoft.com/visio/2003/core\' xmlns:vx=\'http://schemas.microsoft.com/visio/2006/extension\' xmlns:v14=\'http://schemas.microsoft.com/office/visio/2010/extension\'>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<DocumentProperties>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<Creator>PlantUML</Creator>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "</DocumentProperties>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<DocumentSheet NameU=\'TheDoc\' LineStyle=\'0\' FillStyle=\'0\' TextStyle=\'0\'>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "</DocumentSheet>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<Masters/>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<Pages>");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Page ID=\'0\' NameU=\'Page-1\' Name=\'Page 1\' ViewScale=\'1\' ViewCenterX=\'");

        $d4 = d1 / 2.0;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ViewCenterY=\'");

        $d5 = d3 / 2.0;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'>");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, $r10);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<PageSheet LineStyle=\'0\' FillStyle=\'0\' TextStyle=\'0\'>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<PageProps>");

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<PageWidth Unit=\'IN_F\'>");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</PageWidth>");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, $r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<PageHeight Unit=\'IN_F\'>");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</PageHeight>");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, $r20);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<PageScale Unit=\'IN_F\'>1</PageScale>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<DrawingScale Unit=\'IN_F\'>2</DrawingScale>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<DrawingSizeType>3</DrawingSizeType>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<DrawingScaleType>0</DrawingScaleType>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<InhibitSnap>0</InhibitSnap>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "</PageProps>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "</PageSheet>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "<Shapes>");

        $r21 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: java.util.List shapes>;

        r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r23 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (net.sourceforge.plantuml.ugraphic.visio.VisioShape) $r23;

        $r25 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.visio.VisioShape: net.sourceforge.plantuml.ugraphic.visio.VisioShape yReverse(double)>(d3);

        interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.visio.VisioShape: void print(java.io.OutputStream)>(r3);

        goto label1;

     label2:
        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "</Shapes>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "</Page>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "</Pages>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void out(java.io.OutputStream,java.lang.String)>(r3, "</VisioDocument>");

        return;
    }

    private void out(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r0;
        java.lang.String r1, $r3;
        byte[] $r2, $r4;
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r5;

        r5 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = "\n";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r4);

        return;
    }

    private double toInches(double)
    {
        double d0, $d1;
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        d0 := @parameter0: double;

        $d1 = d0 / 72.0;

        return $d1;
    }

    private void ensureVisible(double, double)
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r0;
        double d0, d1;
        net.sourceforge.plantuml.golem.MinMaxDouble $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: net.sourceforge.plantuml.golem.MinMaxDouble limits>;

        virtualinvoke $r1.<net.sourceforge.plantuml.golem.MinMaxDouble: void manage(double,double)>(d0, d1);

        return;
    }

    public void rectangle(double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r0;
        double d0, d1, d2, d3, $d4, $d5;
        java.util.List $r1, $r3;
        int $i0, $i1;
        net.sourceforge.plantuml.ugraphic.visio.VisioRectangle r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void ensureVisible(double,double)>(d0, d1);

        $d5 = d0 + d2;

        $d4 = d1 + d3;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void ensureVisible(double,double)>($d5, $d4);

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: java.util.List shapes>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 + 1;

        r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.visio.VisioRectangle: net.sourceforge.plantuml.ugraphic.visio.VisioRectangle createInches(int,double,double,double,double)>($i1, d0, d1, d2, d3);

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: java.util.List shapes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void text(java.lang.String, double, double, java.lang.String, int, double, double, java.util.Map)
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r0;
        double d0, d1, d2, d3;
        java.util.List $r1, $r4;
        int $i0, i1, $i2;
        java.lang.String r2, r5;
        net.sourceforge.plantuml.ugraphic.visio.VisioText r3;
        java.util.Map r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        r2 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r5 := @parameter3: java.lang.String;

        i1 := @parameter4: int;

        d2 := @parameter5: double;

        d3 := @parameter6: double;

        r6 := @parameter7: java.util.Map;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void ensureVisible(double,double)>(d0, d1);

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: java.util.List shapes>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i2 = $i0 + 1;

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.visio.VisioText: net.sourceforge.plantuml.ugraphic.visio.VisioText createInches(int,java.lang.String,int,double,double,double,double)>($i2, r2, i1, d0, d1, d2, d3);

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: java.util.List shapes>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void line(double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r0;
        double d0, d1, d2, d3;
        byte $b0, $b3;
        java.util.List $r1, $r3;
        int $i1, $i2;
        net.sourceforge.plantuml.ugraphic.visio.VisioLine r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void ensureVisible(double,double)>(d0, d1);

        $b0 = d0 cmpl d2;

        if $b0 != 0 goto label1;

        $b3 = d1 cmpl d3;

        if $b3 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void ensureVisible(double,double)>(d2, d3);

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: java.util.List shapes>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i2 = $i1 + 1;

        r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.visio.VisioLine: net.sourceforge.plantuml.ugraphic.visio.VisioLine createInches(int,double,double,double,double)>($i2, d0, d1, d2, d3);

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: java.util.List shapes>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    private void line(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r0;
        java.awt.geom.Point2D r1, r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        r1 := @parameter0: java.awt.geom.Point2D;

        r2 := @parameter1: java.awt.geom.Point2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d2 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void line(double,double,double,double)>($d0, $d1, $d2, $d3);

        return;
    }

    public void upath(double, double, net.sourceforge.plantuml.ugraphic.UPath)
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, d22, d23;
        net.sourceforge.plantuml.ugraphic.UPath r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        net.sourceforge.plantuml.ugraphic.USegment r3;
        net.sourceforge.plantuml.ugraphic.USegmentType r4, $r6, $r7, $r8, $r9, $r10, $r11;
        double[] r5;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r15;
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r16;

        r16 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r0 := @parameter2: net.sourceforge.plantuml.ugraphic.UPath;

        d22 = d0;

        d23 = d1;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UPath: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.ugraphic.USegment) $r2;

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.USegment: net.sourceforge.plantuml.ugraphic.USegmentType getSegmentType()>();

        r5 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.USegment: double[] getCoord()>();

        $r6 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_MOVETO>;

        if r4 != $r6 goto label2;

        $d20 = r5[0];

        d22 = $d20 + d0;

        $d21 = r5[1];

        d23 = $d21 + d1;

        goto label8;

     label2:
        $r7 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_LINETO>;

        if r4 != $r7 goto label3;

        $d14 = r5[0];

        $d17 = $d14 + d0;

        $d15 = r5[1];

        $d16 = $d15 + d1;

        virtualinvoke r16.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void line(double,double,double,double)>(d22, d23, $d17, $d16);

        $d18 = r5[0];

        d22 = $d18 + d0;

        $d19 = r5[1];

        d23 = $d19 + d1;

        goto label8;

     label3:
        $r8 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_QUADTO>;

        if r4 != $r8 goto label4;

        $d8 = r5[2];

        $d11 = $d8 + d0;

        $d9 = r5[3];

        $d10 = $d9 + d1;

        virtualinvoke r16.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void line(double,double,double,double)>(d22, d23, $d11, $d10);

        $d12 = r5[2];

        d22 = $d12 + d0;

        $d13 = r5[3];

        d23 = $d13 + d1;

        goto label8;

     label4:
        $r9 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_CUBICTO>;

        if r4 != $r9 goto label5;

        $d2 = r5[4];

        $d5 = $d2 + d0;

        $d3 = r5[5];

        $d4 = $d3 + d1;

        virtualinvoke r16.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void line(double,double,double,double)>(d22, d23, $d5, $d4);

        $d6 = r5[4];

        d22 = $d6 + d0;

        $d7 = r5[5];

        d23 = $d7 + d1;

        goto label8;

     label5:
        $r10 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_CLOSE>;

        if r4 != $r10 goto label6;

        goto label8;

     label6:
        $r11 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_ARCTO>;

        if r4 != $r11 goto label7;

        goto label8;

     label7:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown5 ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void println(java.lang.Object)>($r15);

     label8:
        goto label1;

     label9:
        return;
    }

    public void polygon(net.sourceforge.plantuml.ugraphic.UPolygon)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        java.awt.geom.Point2D r4, r6;
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics r5;

        r5 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UPolygon;

        r6 = null;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.awt.geom.Point2D) $r3;

        if r6 == null goto label2;

        specialinvoke r5.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void line(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r6, r4);

     label2:
        r6 = r4;

        goto label1;

     label3:
        return;
    }
}
