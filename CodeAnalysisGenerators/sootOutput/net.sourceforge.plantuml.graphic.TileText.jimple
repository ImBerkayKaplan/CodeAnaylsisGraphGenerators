public class net.sourceforge.plantuml.graphic.TileText extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final java.lang.String text;
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final net.sourceforge.plantuml.Url url;

    public void <init>(java.lang.String, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.graphic.TileText r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        java.lang.String r2;
        net.sourceforge.plantuml.Url r3;

        r0 := @this: net.sourceforge.plantuml.graphic.TileText;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter2: net.sourceforge.plantuml.Url;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r1;

        r0.<net.sourceforge.plantuml.graphic.TileText: java.lang.String text> = r2;

        r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.Url url> = r3;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.graphic.TileText r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2, $r6;
        net.sourceforge.plantuml.ugraphic.UFont $r3;
        java.lang.String $r4, $r10, $r13, $r17, $r18;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        int $i0, i1, $i3;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r16;
        byte $b2;
        net.sourceforge.plantuml.Dimension2DDouble $r19;
        double $d1, $d2, d3, $d4;

        r1 := @this: net.sourceforge.plantuml.graphic.TileText;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r4 = r1.<net.sourceforge.plantuml.graphic.TileText: java.lang.String text>;

        r5 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r3, $r4);

        $r6 = r1.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $i0 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.FontConfiguration: int getSpace()>();

        i1 = staticinvoke <java.lang.Math: int abs(int)>($i0);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("g2d=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void debug(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Size for ");

        $r13 = r1.<net.sourceforge.plantuml.graphic.TileText: java.lang.String text>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void debug(java.lang.String)>($r17);

        d3 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b2 = d3 cmpg 10.0;

        if $b2 >= 0 goto label1;

        d3 = 10.0;

     label1:
        $r18 = r1.<net.sourceforge.plantuml.graphic.TileText: java.lang.String text>;

        $i3 = virtualinvoke $r18.<java.lang.String: int indexOf(int)>(9);

        if $i3 != -1 goto label2;

        $d4 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        goto label3;

     label2:
        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.graphic.TileText: double getWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

     label3:
        $r19 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = (double) i1;

        $d2 = d3 + $d1;

        specialinvoke $r19.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d4, $d2);

        return $r19;
    }

    public double getFontSize2D()
    {
        net.sourceforge.plantuml.graphic.TileText r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;
        net.sourceforge.plantuml.ugraphic.UFont $r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.graphic.TileText;

        $r1 = r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UFont: double getSize2D()>();

        return $d0;
    }

    double getTabSize(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.graphic.TileText r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2;
        net.sourceforge.plantuml.ugraphic.UFont $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.graphic.TileText;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r3, "        ");

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        return $d0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.TileText r0;
        net.sourceforge.plantuml.Url $r1, $r7, $r19;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2, $r11, $r13, $r16;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        java.util.StringTokenizer $r4;
        java.lang.String $r5, r9;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.graphic.StringBounder $r8, $r12;
        double d0, $d1, $d2, d3, d4, d5;
        net.sourceforge.plantuml.ugraphic.UText $r10;
        net.sourceforge.plantuml.ugraphic.UFont $r14;
        net.sourceforge.plantuml.awt.geom.Dimension2D r15;
        int i0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r17;
        net.sourceforge.plantuml.ugraphic.UGraphic $r18, r20, r21;

        r0 := @this: net.sourceforge.plantuml.graphic.TileText;

        r20 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d3 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.Url url>;

        if $r1 == null goto label1;

        $r19 = r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.Url url>;

        interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: void startUrl(net.sourceforge.plantuml.Url)>($r19);

     label1:
        $r2 = r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        r21 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r4 = new java.util.StringTokenizer;

        $r5 = r0.<net.sourceforge.plantuml.graphic.TileText: java.lang.String text>;

        specialinvoke $r4.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, "\t", 1);

        $z0 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.TileText: double getTabSize(net.sourceforge.plantuml.graphic.StringBounder)>($r8);

     label2:
        $z1 = virtualinvoke $r4.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label7;

        r9 = virtualinvoke $r4.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z2 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>("\t");

        if $z2 == 0 goto label3;

        d4 = d3 % d0;

        $d2 = d0 - d4;

        d3 = d3 + $d2;

        goto label6;

     label3:
        $r10 = new net.sourceforge.plantuml.ugraphic.UText;

        $r11 = r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration)>(r9, $r11);

        $r12 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r13 = r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        r15 = interfaceinvoke $r12.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r14, r9);

        $r16 = r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        i0 = virtualinvoke $r16.<net.sourceforge.plantuml.graphic.FontConfiguration: int getSpace()>();

        if i0 >= 0 goto label4;

        d5 = (double) i0;

        goto label5;

     label4:
        d5 = (double) i0;

     label5:
        $r17 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d5);

        $r18 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        interfaceinvoke $r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        $d1 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d3 = d3 + $d1;

     label6:
        goto label2;

     label7:
        $r7 = r0.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.Url url>;

        if $r7 == null goto label8;

        interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeUrl()>();

     label8:
        return;
    }

    double getWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.util.StringTokenizer $r0;
        net.sourceforge.plantuml.graphic.TileText r1;
        java.lang.String $r2, r5;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        double d0, $d1, $d2, d3, d4;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r6;
        net.sourceforge.plantuml.ugraphic.UFont $r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r8;

        r1 := @this: net.sourceforge.plantuml.graphic.TileText;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.util.StringTokenizer;

        $r2 = r1.<net.sourceforge.plantuml.graphic.TileText: java.lang.String text>;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r2, "\t", 1);

        d0 = virtualinvoke r1.<net.sourceforge.plantuml.graphic.TileText: double getTabSize(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        d3 = 0.0;

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label4;

        r5 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("\t");

        if $z1 == 0 goto label2;

        d4 = d3 % d0;

        $d2 = d0 - d4;

        d3 = d3 + $d2;

        goto label3;

     label2:
        $r6 = r1.<net.sourceforge.plantuml.graphic.TileText: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        r8 = interfaceinvoke r4.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r7, r5);

        $d1 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d3 = d3 + $d1;

     label3:
        goto label1;

     label4:
        return d3;
    }
}
