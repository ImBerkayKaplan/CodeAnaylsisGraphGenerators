public class net.sourceforge.plantuml.activitydiagram3.InstructionWhile extends net.sourceforge.plantuml.activitydiagram3.WithNote implements net.sourceforge.plantuml.activitydiagram3.Instruction, net.sourceforge.plantuml.activitydiagram3.InstructionCollection
{
    private final net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList;
    private final net.sourceforge.plantuml.activitydiagram3.Instruction parent;
    private final net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;
    private boolean killed;
    private final net.sourceforge.plantuml.cucadiagram.Display test;
    private net.sourceforge.plantuml.cucadiagram.Display yes;
    private boolean testCalled;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering outColor;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private net.sourceforge.plantuml.activitydiagram3.Instruction specialOut;
    private net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyle;
    private net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneOut;
    private net.sourceforge.plantuml.cucadiagram.Display backward;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2;
    private boolean backwardCalled;

    public void overwriteYes(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display yes> = r1;

        return;
    }

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.Instruction, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2, $r4, $r5, r10, $r12;
        net.sourceforge.plantuml.cucadiagram.Display $r3, r7, $r9, r13, $r15;
        net.sourceforge.plantuml.activitydiagram3.Instruction r6;
        java.lang.Object $r8, $r11, $r14;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r16;
        net.sourceforge.plantuml.ugraphic.color.HColor r17;
        net.sourceforge.plantuml.ISkinParam r18;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r16 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r6 := @parameter1: net.sourceforge.plantuml.activitydiagram3.Instruction;

        r7 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r10 := @parameter3: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r13 := @parameter4: net.sourceforge.plantuml.cucadiagram.Display;

        r17 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        r18 := @parameter6: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: void <init>()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionList;

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList> = $r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean killed> = 0;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean testCalled> = 0;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering outColor> = $r2;

        $r3 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display backward> = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1> = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2> = $r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction parent> = r6;

        $r8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        $r9 = (net.sourceforge.plantuml.cucadiagram.Display) $r8;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display test> = $r9;

        $r11 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r10);

        $r12 = (net.sourceforge.plantuml.activitydiagram3.LinkRendering) $r11;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer> = $r12;

        $r14 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r13);

        $r15 = (net.sourceforge.plantuml.cucadiagram.Display) $r14;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display yes> = $r15;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane> = r16;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.ugraphic.color.HColor color> = r17;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.ISkinParam skinParam> = r18;

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction r1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>(r1);

        return $r3;
    }

    public net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createGtile(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r3;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r4;
        net.sourceforge.plantuml.cucadiagram.Display $r5, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r7;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile r8, r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        r8 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createGtile(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display test>;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display yes>;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction specialOut>;

        r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.gtile.GtileWhile: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createWhile(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.gtile.Gtile,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.activitydiagram3.gtile.Gtile)>($r7, r8, $r6, $r5, $r4, null);

        return r9;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r3, $r13, $r14;
        boolean $z0, $z1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r4, $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle $r5;
        net.sourceforge.plantuml.graphic.color.Colors $r6;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r8;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r9, $r10, $r16;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r11, $r19;
        net.sourceforge.plantuml.ugraphic.color.HColor $r12;
        java.util.Collection $r17, $r20;
        int $i0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled $r18;
        net.sourceforge.plantuml.ISkinParam $r21;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r22, r23, r24;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display backward>;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        if $z0 == 0 goto label1;

        $r22 = null;

        goto label2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display backward>;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyle>;

        $r6 = staticinvoke <net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors empty()>();

        $r22 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile activity(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r3, $r4, $r5, $r6, null);

     label2:
        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        r23 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)>(r2);

        $r16 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering outColor>;

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r14 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display test>;

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display yes>;

        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction specialOut>;

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1>;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2>;

        r24 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createWhile(net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r16, $r15, r23, $r14, $r13, $r12, $r11, $r22, $r10, $r9);

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: java.util.Collection getPositionedNotes()>();

        $i0 = interfaceinvoke $r17.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label3;

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: java.util.Collection getPositionedNotes()>();

        $r21 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.ISkinParam skinParam>;

        r24 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWithNoteOpale: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection,net.sourceforge.plantuml.ISkinParam,boolean)>(r24, $r20, $r21, 0);

     label3:
        $z1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean killed>;

        if $z1 != 0 goto label4;

        $r19 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction specialOut>;

        if $r19 == null goto label5;

     label4:
        $r18 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        specialinvoke $r18.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r24);

        return $r18;

     label5:
        return r24;
    }

    public net.sourceforge.plantuml.activitydiagram3.Instruction getParent()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        return $r1;
    }

    public final boolean kill()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $z0 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean testCalled>;

        if $z0 == 0 goto label1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean killed> = 1;

        return 1;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $z1 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean kill()>();

        return $z1;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer>;

        return $r1;
    }

    public void outDisplay(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.cucadiagram.Display r1, $r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2, $r5;
        java.lang.Object $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering outColor>;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (net.sourceforge.plantuml.cucadiagram.Display) $r3;

        $r5 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering withDisplay(net.sourceforge.plantuml.cucadiagram.Display)>($r4);

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering outColor> = $r5;

        return;
    }

    public void outColor(net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.graphic.Rainbow r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.Rainbow;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering outColor>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering withRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering outColor> = $r3;

        return;
    }

    public boolean addNote(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.sequencediagram.NoteType, net.sourceforge.plantuml.graphic.color.Colors, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1, $r7;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.sequencediagram.NotePosition r3;
        net.sourceforge.plantuml.sequencediagram.NoteType r4;
        net.sourceforge.plantuml.graphic.color.Colors r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r4 := @parameter2: net.sourceforge.plantuml.sequencediagram.NoteType;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        r6 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: boolean addNote(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r2, r3, r4, r5, r6);

        return $z2;

     label1:
        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $z1 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean addNote(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r2, r3, r4, r5, r6);

        return $z1;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.Instruction getLast()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.Instruction getLast()>();

        return $r2;
    }

    public void setSpecial(net.sourceforge.plantuml.activitydiagram3.Instruction)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction specialOut> = r1;

        return;
    }

    public boolean containsBreak()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean containsBreak()>();

        return $z0;
    }

    public void setBackward(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle r3;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r4, r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;

        r4 := @parameter3: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.cucadiagram.Display backward> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneOut> = r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyle> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2> = r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean backwardCalled> = 1;

        return;
    }

    public void incoming(net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        $z0 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean backwardCalled>;

        if $z0 != 0 goto label1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2> = r1;

     label1:
        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean testCalled> = 1;

        return;
    }

    public volatile boolean hasNotes()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: boolean hasNotes()>();

        return $z0;
    }

    public volatile java.util.Collection getPositionedNotes()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r0;
        java.util.Collection $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: java.util.Collection getPositionedNotes()>();

        return $r1;
    }
}
