public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder extends java.lang.Object
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane;
    private final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backColor;
    private final net.sourceforge.plantuml.LineBreakStrategy diamondLineBreak;
    private final net.sourceforge.plantuml.LineBreakStrategy labelLineBreak;
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory;
    private final net.sourceforge.plantuml.svek.ConditionStyle conditionStyle;
    private final net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle;
    private final net.sourceforge.plantuml.activitydiagram3.Branch branch1;
    private final net.sourceforge.plantuml.activitydiagram3.Branch branch2;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontArrow;
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontTest;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2;
    private final net.sourceforge.plantuml.Url url;

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignatureDiamond()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.style.StyleSignature $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r7;

        r7 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName diamond>;

        $r0[4] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r6;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignatureArrow()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory, net.sourceforge.plantuml.svek.ConditionStyle, net.sourceforge.plantuml.svek.ConditionEndStyle, net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r0;
        boolean $z0;
        net.sourceforge.plantuml.LineBreakStrategy $r1, $r2, $r27, $r28;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r4;
        net.sourceforge.plantuml.graphic.Rainbow r5;
        net.sourceforge.plantuml.graphic.FontConfiguration r6, r7, $r31, $r34;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r9;
        net.sourceforge.plantuml.svek.ConditionStyle r10;
        net.sourceforge.plantuml.svek.ConditionEndStyle r11;
        net.sourceforge.plantuml.activitydiagram3.Branch r12, r13;
        net.sourceforge.plantuml.ISkinParam r14;
        net.sourceforge.plantuml.graphic.StringBounder r15;
        net.sourceforge.plantuml.Url r16;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered $r17, $r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r18, $r20;
        net.sourceforge.plantuml.style.StyleSignature $r21, $r24;
        net.sourceforge.plantuml.style.StyleBuilder $r22, $r25;
        net.sourceforge.plantuml.style.Style r23, r26;
        net.sourceforge.plantuml.api.ThemeStyle $r29, $r32;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r30, $r33;
        java.lang.IllegalArgumentException $r35, $r36, $r37;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        r9 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r8 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r10 := @parameter5: net.sourceforge.plantuml.svek.ConditionStyle;

        r11 := @parameter6: net.sourceforge.plantuml.svek.ConditionEndStyle;

        r12 := @parameter7: net.sourceforge.plantuml.activitydiagram3.Branch;

        r13 := @parameter8: net.sourceforge.plantuml.activitydiagram3.Branch;

        r14 := @parameter9: net.sourceforge.plantuml.ISkinParam;

        r15 := @parameter10: net.sourceforge.plantuml.graphic.StringBounder;

        r7 := @parameter11: net.sourceforge.plantuml.graphic.FontConfiguration;

        r6 := @parameter12: net.sourceforge.plantuml.graphic.FontConfiguration;

        r16 := @parameter13: net.sourceforge.plantuml.Url;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label4;

        if r4 != null goto label1;

        $r37 = new java.lang.IllegalArgumentException;

        specialinvoke $r37.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r37;

     label1:
        if r3 != null goto label2;

        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r36;

     label2:
        if r5 != null goto label3;

        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r35;

     label3:
        $r21 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.style.StyleSignature getStyleSignatureArrow()>();

        $r22 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r23 = virtualinvoke $r21.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r22);

        $r24 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.style.StyleSignature getStyleSignatureDiamond()>();

        $r25 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r26 = virtualinvoke $r24.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r25);

        $r27 = virtualinvoke r26.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.LineBreakStrategy diamondLineBreak> = $r27;

        $r28 = virtualinvoke r23.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.LineBreakStrategy labelLineBreak> = $r28;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r5;

        $r29 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r30 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r31 = virtualinvoke r26.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r29, $r30);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.FontConfiguration fontTest> = $r31;

        $r32 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r33 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r34 = virtualinvoke r23.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r32, $r33);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.FontConfiguration fontArrow> = $r34;

        goto label5;

     label4:
        $r1 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.LineBreakStrategy diamondLineBreak> = $r1;

        $r2 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.LineBreakStrategy labelLineBreak> = $r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.FontConfiguration fontTest> = r6;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.FontConfiguration fontArrow> = r7;

     label5:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory> = r8;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane> = r9;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionStyle conditionStyle> = r10;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle> = r11;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1> = r12;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2> = r13;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ISkinParam skinParam> = r14;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r15;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.Url url> = r16;

        $r17 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r18 = virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r17.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r18, 30.0);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1> = $r17;

        $r19 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r20 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r20, 30.0);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2> = $r19;

        return;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory, net.sourceforge.plantuml.svek.ConditionStyle, net.sourceforge.plantuml.svek.ConditionEndStyle, net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r5;
        net.sourceforge.plantuml.svek.ConditionStyle r6;
        net.sourceforge.plantuml.svek.ConditionEndStyle r7;
        net.sourceforge.plantuml.activitydiagram3.Branch r8, r9, $r17, $r18, $r20, $r21, $r23, $r24, $r26, $r27;
        net.sourceforge.plantuml.ISkinParam r10;
        net.sourceforge.plantuml.graphic.StringBounder r11;
        net.sourceforge.plantuml.graphic.FontConfiguration r12, r13;
        net.sourceforge.plantuml.Url r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r16, $r19, $r22, $r25, $r28;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r6 := @parameter5: net.sourceforge.plantuml.svek.ConditionStyle;

        r7 := @parameter6: net.sourceforge.plantuml.svek.ConditionEndStyle;

        r8 := @parameter7: net.sourceforge.plantuml.activitydiagram3.Branch;

        r9 := @parameter8: net.sourceforge.plantuml.activitydiagram3.Branch;

        r10 := @parameter9: net.sourceforge.plantuml.ISkinParam;

        r11 := @parameter10: net.sourceforge.plantuml.graphic.StringBounder;

        r12 := @parameter11: net.sourceforge.plantuml.graphic.FontConfiguration;

        r13 := @parameter12: net.sourceforge.plantuml.graphic.FontConfiguration;

        r14 := @parameter13: net.sourceforge.plantuml.Url;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory,net.sourceforge.plantuml.svek.ConditionStyle,net.sourceforge.plantuml.svek.ConditionEndStyle,net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, r13, r14);

        $z0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: boolean isEmptyOrOnlySingleStopOrSpot(net.sourceforge.plantuml.activitydiagram3.Branch)>(r9);

        if $z0 == 0 goto label1;

        $z7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: boolean isEmptyOrOnlySingleStopOrSpot(net.sourceforge.plantuml.activitydiagram3.Branch)>(r8);

        if $z7 != 0 goto label1;

        $r27 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r26 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        $r28 = specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createDown(net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch)>($r27, $r26);

        return $r28;

     label1:
        $z1 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        $z6 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isOnlySingleStopOrSpot()>();

        if $z6 == 0 goto label2;

        $r24 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r23 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        $r25 = specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createDown(net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch)>($r24, $r23);

        return $r25;

     label2:
        $z2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: boolean isEmptyOrOnlySingleStopOrSpot(net.sourceforge.plantuml.activitydiagram3.Branch)>(r8);

        if $z2 == 0 goto label3;

        $z5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: boolean isEmptyOrOnlySingleStopOrSpot(net.sourceforge.plantuml.activitydiagram3.Branch)>(r9);

        if $z5 != 0 goto label3;

        $r21 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        $r20 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r22 = specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createDown(net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch)>($r21, $r20);

        return $r22;

     label3:
        $z3 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isEmpty()>();

        if $z3 == 0 goto label4;

        $z4 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isOnlySingleStopOrSpot()>();

        if $z4 == 0 goto label4;

        $r18 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        $r17 = $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r19 = specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createDown(net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch)>($r18, $r17);

        return $r19;

     label4:
        $r16 = specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createWithLinks()>();

        return $r16;
    }

    private static boolean isEmptyOrOnlySingleStopOrSpot(net.sourceforge.plantuml.activitydiagram3.Branch)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Branch;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isOnlySingleStopOrSpot()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createDown(net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.activitydiagram3.Branch)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered $r0, $r4;
        net.sourceforge.plantuml.activitydiagram3.Branch r1, r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r6, r11, r12, $r14, $r19, $r21, $r25, $r27, $r31, $r33, $r35, $r39, $r41;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r8;
        net.sourceforge.plantuml.graphic.TextBlock r9, r10;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r13, $r20, $r26, $r34;
        net.sourceforge.plantuml.graphic.Rainbow $r15, $r18, $r24, $r28, $r32, $r36, $r40;
        net.sourceforge.plantuml.svek.ConditionEndStyle $r16, $r23, $r29, $r37;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory $r17, $r22, $r30, $r38;

        r8 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Branch;

        r5 := @parameter1: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r2, 30.0);

        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r6, 30.0);

        r9 = specialinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)>(r1);

        r10 = specialinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)>(r5);

        r11 = specialinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getShape1(boolean,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(0, r9, r10);

        r12 = specialinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getShape2(net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch,boolean)>(r1, r5, 1);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isOnlySingleStopOrSpot()>();

        if $z0 == 0 goto label1;

        $r34 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r35 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r0, 10.0);

        $r36 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r37 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle>;

        $r38 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory>;

        $r39 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        $r40 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getOut()>();

        $r41 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.svek.ConditionEndStyle,net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>(r11, r12, $r34, $r35, $r36, $r37, $r38, $r39, $r40);

        return $r41;

     label1:
        $z1 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isOnlySingleStopOrSpot()>();

        if $z1 == 0 goto label2;

        $r26 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r27 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r4, 10.0);

        $r28 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r29 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle>;

        $r30 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory>;

        $r31 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        $r32 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getOut()>();

        $r33 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.svek.ConditionEndStyle,net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>(r11, r12, $r26, $r27, $r28, $r29, $r30, $r31, $r32);

        return $r33;

     label2:
        $z2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        $r20 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r21 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r4, 10.0);

        $r24 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r23 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle>;

        $r22 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory>;

        $r25 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.svek.ConditionEndStyle,net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>(r11, r12, $r20, $r21, $r24, $r23, $r22, null, null);

        return $r25;

     label3:
        $r13 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r14 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r0, 10.0);

        $r15 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r16 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle>;

        $r17 = r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory>;

        $r18 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getOut()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.svek.ConditionEndStyle,net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>(r11, r12, $r13, $r14, $r15, $r16, $r17, null, $r18);

        return $r19;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createNude()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfNude $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfNude;

        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfNude: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r4, $r3, $r2);

        return $r0;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createWithDiamonds()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, r4, $r8, $r9, r22, r23;
        net.sourceforge.plantuml.activitydiagram3.Branch $r2, $r3, $r11, $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithDiamonds $r5;
        net.sourceforge.plantuml.graphic.StringBounder $r6, $r13, $r17, $r19, $r20, $r21;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r12, $r16;
        net.sourceforge.plantuml.awt.geom.Dimension2D r14, r18;
        double d0, d1, d2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond1(boolean)>(1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getShape2(net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch,boolean)>($r3, $r2, 0);

        $r5 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithDiamonds;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        specialinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithDiamonds: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.graphic.StringBounder)>(r1, $r9, $r8, r4, $r7, $r6);

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)>($r11);

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r14 = interfaceinvoke $r12.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r13);

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        $r16 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)>($r15);

        $r17 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r18 = interfaceinvoke $r16.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r17);

        $r19 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d0 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithDiamonds: double computeMarginNeedForBranchLabe1(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r19, r14);

        $r20 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d1 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithDiamonds: double computeMarginNeedForBranchLabe2(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r20, r18);

        r22 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>($r5, d0, d1);

        $r21 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d2 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithDiamonds: double computeVerticalMarginNeedForBranchs(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r21, r14, r18);

        r23 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addVerticalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>(r22, d2, 0.0);

        return r23;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createWithLinks()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r0;
        net.sourceforge.plantuml.Url $r1, $r30;
        net.sourceforge.plantuml.activitydiagram3.Branch $r2, $r3, $r15, $r19, $r27, $r28;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r4, $r5, r6, $r7, r8, r31, r32, r33, r34;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r9;
        net.sourceforge.plantuml.graphic.StringBounder $r10, $r17, $r21, $r23, $r24, $r25, $r26;
        net.sourceforge.plantuml.svek.ConditionEndStyle $r11;
        net.sourceforge.plantuml.graphic.Rainbow $r12;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r13;
        net.sourceforge.plantuml.graphic.TextBlock $r16, $r20;
        net.sourceforge.plantuml.awt.geom.Dimension2D r18, r22;
        double d0, d1, d2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithUrl $r29;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        r31 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond1(boolean)>(1);

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.Url url>;

        if $r1 == null goto label1;

        $r29 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithUrl;

        $r30 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.Url url>;

        specialinvoke $r29.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithUrl: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.Url)>(r31, $r30);

        r31 = $r29;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getShape2(net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch,boolean)>($r3, $r2, 0);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r5, 10.0);

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r7, 10.0);

        $r9 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks;

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle>;

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        specialinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.svek.ConditionEndStyle,net.sourceforge.plantuml.graphic.StringBounder)>(r31, r6, r8, r4, $r13, $r12, $r11, $r10);

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r16 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)>($r15);

        $r17 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r18 = interfaceinvoke $r16.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r17);

        $r19 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        $r20 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)>($r19);

        $r21 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r22 = interfaceinvoke $r20.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r21);

        $r23 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d0 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: double computeMarginNeedForBranchLabe1(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r23, r18);

        $r24 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d1 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: double computeMarginNeedForBranchLabe2(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r24, r22);

        $r25 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d2 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: double computeVerticalMarginNeedForBranchs(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r25, r18, r22);

        $r28 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r27 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        $r26 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r32 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addLinks(net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.graphic.StringBounder)>($r28, $r27, $r26);

        r33 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>(r32, d0, d1);

        r34 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addVerticalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>(r33, d2, 0.0);

        return r34;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond1(boolean)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r0;
        boolean z0;
        net.sourceforge.plantuml.activitydiagram3.Branch $r1, $r3;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        z0 := @parameter0: boolean;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)>($r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch2>;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)>($r3);

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getShape1(boolean,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(z0, $r2, $r4);

        return $r5;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getShape1(boolean, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r0;
        net.sourceforge.plantuml.activitydiagram3.Branch $r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3, $r6;
        net.sourceforge.plantuml.ISkinParam $r4, $r8, $r12, $r17, $r33, $r42, $r48, $r56, $r63, $r70;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5;
        net.sourceforge.plantuml.creole.CreoleMode $r7;
        net.sourceforge.plantuml.creole.SheetBuilder $r9;
        net.sourceforge.plantuml.creole.Sheet r10;
        net.sourceforge.plantuml.creole.SheetBlock1 $r11;
        net.sourceforge.plantuml.LineBreakStrategy $r13;
        double $d0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r15, $r32, $r41, $r47, $r55, $r62, $r69, r74;
        net.sourceforge.plantuml.style.StyleSignature $r16;
        net.sourceforge.plantuml.style.StyleBuilder $r18;
        net.sourceforge.plantuml.style.Style $r19;
        net.sourceforge.plantuml.ugraphic.UStroke r20;
        net.sourceforge.plantuml.creole.SheetBlock2 $r21;
        net.sourceforge.plantuml.creole.Stencil $r22;
        net.sourceforge.plantuml.svek.ConditionStyle $r24, $r25, $r26, $r27, $r28, $r29;
        java.lang.IllegalStateException $r30;
        boolean z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare $r31, $r38, $r40;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r34, $r43, $r49, $r57, $r64, $r71;
        net.sourceforge.plantuml.ugraphic.color.HColor $r35, $r36, $r44, $r45, $r50, $r51, $r58, $r59, $r65, $r66, $r72, $r73;
        net.sourceforge.plantuml.graphic.TextBlock r37, r39;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond $r46, $r52, $r53, $r54, $r60;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r61, $r67, $r68;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        z0 := @parameter0: boolean;

        r37 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r39 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.Branch branch1>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getLabelTest()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.FontConfiguration fontTest>;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r6 = interfaceinvoke $r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r3);

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r7 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $r9 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>($r5, $r6, $r8, $r7);

        r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>(r2);

        $r11 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.LineBreakStrategy diamondLineBreak>;

        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ISkinParam skinParam>;

        $d0 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: double getPadding()>();

        specialinvoke $r11.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>(r10, $r13, $d0);

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r16 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.style.StyleSignature getStyleSignatureDiamond()>();

        $r17 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r19 = virtualinvoke $r16.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r18);

        r20 = interfaceinvoke $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.style.Style)>($r19);

        $r21 = new net.sourceforge.plantuml.creole.SheetBlock2;

        $r22 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon: net.sourceforge.plantuml.creole.Stencil asStencil(net.sourceforge.plantuml.graphic.TextBlock)>($r11);

        specialinvoke $r21.<net.sourceforge.plantuml.creole.SheetBlock2: void <init>(net.sourceforge.plantuml.creole.SheetBlock1,net.sourceforge.plantuml.creole.Stencil,net.sourceforge.plantuml.ugraphic.UStroke)>($r11, $r22, r20);

        $r25 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionStyle conditionStyle>;

        $r24 = <net.sourceforge.plantuml.svek.ConditionStyle: net.sourceforge.plantuml.svek.ConditionStyle INSIDE_HEXAGON>;

        if $r25 != $r24 goto label2;

        if z0 == 0 goto label1;

        $r68 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r69 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r70 = interfaceinvoke $r69.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r73 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r72 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r71 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r68.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r21, $r70, $r73, $r72, $r71);

        r74 = virtualinvoke $r68.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile withWestAndEast(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r37, r39);

        goto label7;

     label1:
        $r61 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r62 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r63 = interfaceinvoke $r62.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r66 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r65 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r64 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r61.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r21, $r63, $r66, $r65, $r64);

        $r67 = virtualinvoke $r61.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withSouth(net.sourceforge.plantuml.graphic.TextBlock)>(r37);

        r74 = virtualinvoke $r67.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withEast(net.sourceforge.plantuml.graphic.TextBlock)>(r39);

        goto label7;

     label2:
        $r27 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionStyle conditionStyle>;

        $r26 = <net.sourceforge.plantuml.svek.ConditionStyle: net.sourceforge.plantuml.svek.ConditionStyle EMPTY_DIAMOND>;

        if $r27 != $r26 goto label4;

        if z0 == 0 goto label3;

        $r54 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        $r55 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r56 = interfaceinvoke $r55.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r59 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r58 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r57 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r54.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r56, $r59, $r58, $r57);

        $r60 = virtualinvoke $r54.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withNorth(net.sourceforge.plantuml.graphic.TextBlock)>($r21);

        r74 = virtualinvoke $r60.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile withWestAndEast(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r37, r39);

        goto label7;

     label3:
        $r46 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        $r47 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r48 = interfaceinvoke $r47.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r51 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r50 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r49 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r46.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r48, $r51, $r50, $r49);

        $r52 = virtualinvoke $r46.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withNorth(net.sourceforge.plantuml.graphic.TextBlock)>($r21);

        $r53 = virtualinvoke $r52.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withSouth(net.sourceforge.plantuml.graphic.TextBlock)>(r37);

        r74 = virtualinvoke $r53.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withEast(net.sourceforge.plantuml.graphic.TextBlock)>(r39);

        goto label7;

     label4:
        $r29 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionStyle conditionStyle>;

        $r28 = <net.sourceforge.plantuml.svek.ConditionStyle: net.sourceforge.plantuml.svek.ConditionStyle INSIDE_DIAMOND>;

        if $r29 != $r28 goto label6;

        if z0 == 0 goto label5;

        $r40 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare;

        $r41 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r42 = interfaceinvoke $r41.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r45 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r44 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r43 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r40.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r21, $r42, $r45, $r44, $r43);

        r74 = virtualinvoke $r40.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile withWestAndEast(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r37, r39);

        goto label7;

     label5:
        $r31 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare;

        $r32 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r33 = interfaceinvoke $r32.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r36 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r35 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r34 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r31.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r21, $r33, $r36, $r35, $r34);

        $r38 = virtualinvoke $r31.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare withSouth(net.sourceforge.plantuml.graphic.TextBlock)>(r37);

        r74 = virtualinvoke $r38.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondSquare withEast(net.sourceforge.plantuml.graphic.TextBlock)>(r39);

        goto label7;

     label6:
        $r30 = new java.lang.IllegalStateException;

        specialinvoke $r30.<java.lang.IllegalStateException: void <init>()>();

        throw $r30;

     label7:
        return r74;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getLabelPositive(net.sourceforge.plantuml.activitydiagram3.Branch)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory $r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.creole.CreoleMode $r7;
        net.sourceforge.plantuml.LineBreakStrategy $r8;
        net.sourceforge.plantuml.graphic.TextBlock $r9;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getDisplayPositive()>();

        $r4 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.FontConfiguration fontArrow>;

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory>;

        $r6 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.LineBreakStrategy labelLineBreak>;

        $r7 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        $r9 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r4, $r5, $r6, $r8, $r7, null, null);

        return $r9;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getShape2(net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.activitydiagram3.Branch, boolean)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r0;
        net.sourceforge.plantuml.svek.ConditionEndStyle $r1, $r2;
        boolean $z0, z1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty $r3, $r33;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4, $r8, $r18, $r28, $r34;
        net.sourceforge.plantuml.ISkinParam $r5, $r14, $r24, $r29, $r35;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r6, $r30, $r36;
        net.sourceforge.plantuml.activitydiagram3.Branch r7, r17;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r9, $r19;
        net.sourceforge.plantuml.cucadiagram.Display r10, r20;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory $r11, $r21;
        net.sourceforge.plantuml.graphic.FontConfiguration $r12, $r22;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r13, $r23;
        net.sourceforge.plantuml.creole.CreoleMode $r15, $r25;
        net.sourceforge.plantuml.graphic.TextBlock r16, r26, $r37, $r38;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond $r27, $r40, r42;
        net.sourceforge.plantuml.ugraphic.color.HColor $r31, $r32;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r43;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        r7 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Branch;

        r17 := @parameter1: net.sourceforge.plantuml.activitydiagram3.Branch;

        z1 := @parameter2: boolean;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle>;

        $r1 = <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle HLINE>;

        if $r2 != $r1 goto label1;

        $r33 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        $r34 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r35 = interfaceinvoke $r34.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r36 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r33.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: void <init>(net.sourceforge.plantuml.ISkinParam,double,double,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r35, 0.0, 12.0, $r36);

        return $r33;

     label1:
        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: boolean hasTwoBranches()>();

        if $z0 == 0 goto label8;

        $r8 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        r10 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        if r10 != null goto label2;

        $r37 = null;

        goto label3;

     label2:
        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.FontConfiguration fontArrow>;

        $r13 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory>;

        $r14 = interfaceinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r15 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        $r37 = virtualinvoke r10.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create7(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>($r12, $r13, $r14, $r15);

     label3:
        r16 = $r37;

        $r18 = virtualinvoke r17.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        r20 = virtualinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        if r20 != null goto label4;

        $r38 = null;

        goto label5;

     label4:
        $r22 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.FontConfiguration fontArrow>;

        $r23 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r21 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory ftileFactory>;

        $r24 = interfaceinvoke $r21.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r25 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        $r38 = virtualinvoke r20.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create7(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>($r22, $r23, $r24, $r25);

     label5:
        r26 = $r38;

        $r27 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        $r28 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r32 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r31 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r30 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r27.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r29, $r32, $r31, $r30);

        if z1 == 0 goto label6;

        $r40 = virtualinvoke $r27.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withNorth(net.sourceforge.plantuml.graphic.TextBlock)>(r16);

        goto label7;

     label6:
        $r40 = virtualinvoke $r27.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withWest(net.sourceforge.plantuml.graphic.TextBlock)>(r16);

     label7:
        r42 = virtualinvoke $r40.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond withEast(net.sourceforge.plantuml.graphic.TextBlock)>(r26);

        r43 = r42;

        goto label9;

     label8:
        $r3 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: void <init>(net.sourceforge.plantuml.ISkinParam,double,double,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r5, 0.0, 6.0, $r6);

        r43 = $r3;

     label9:
        return r43;
    }

    public boolean hasTwoBranches()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1, $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r3, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r1);

        $z0 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.ConditionalBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        $z1 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }
}
