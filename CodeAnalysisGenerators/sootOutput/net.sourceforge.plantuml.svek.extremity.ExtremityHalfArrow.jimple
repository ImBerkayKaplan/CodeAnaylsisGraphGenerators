class net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private final net.sourceforge.plantuml.ugraphic.ULine line;
    private final net.sourceforge.plantuml.ugraphic.ULine otherLine;
    private final java.awt.geom.Point2D contact;

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: java.awt.geom.Point2D contact>;

        return $r1;
    }

    public void <init>(java.awt.geom.Point2D, double, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, d10;
        java.awt.geom.AffineTransform r1;
        java.awt.geom.Point2D$Double $r2;
        java.awt.geom.Point2D r5, r7, $r8, $r9;
        net.sourceforge.plantuml.ugraphic.ULine $r6, $r10;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow;

        r5 := @parameter0: java.awt.geom.Point2D;

        d9 := @parameter1: double;

        r7 := @parameter2: java.awt.geom.Point2D;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        d10 = virtualinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: double manageround(double)>(d9);

        $d0 = d10 + 1.5707963267948966;

        r1 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double)>($d0);

        $r2 = new java.awt.geom.Point2D$Double;

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>(-9.0, -4.0);

        virtualinvoke r1.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r2, $r2);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: java.awt.geom.Point2D contact> = r5;

        $r6 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>();

        $r8 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: java.awt.geom.Point2D contact>;

        $d2 = virtualinvoke $r8.<java.awt.geom.Point2D: double getX()>();

        $d3 = $d1 - $d2;

        $d4 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>();

        $r9 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: java.awt.geom.Point2D contact>;

        $d5 = virtualinvoke $r9.<java.awt.geom.Point2D: double getY()>();

        $d6 = $d4 - $d5;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d3, $d6);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: net.sourceforge.plantuml.ugraphic.ULine line> = $r6;

        $r10 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d7 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $d8 = virtualinvoke $r2.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d7, $d8);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: net.sourceforge.plantuml.ugraphic.ULine otherLine> = $r10;

        return;
    }

    public void <init>(java.awt.geom.Point2D, double)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow r0;
        java.lang.UnsupportedOperationException $r1;
        java.awt.geom.Point2D r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow;

        r2 := @parameter0: java.awt.geom.Point2D;

        d0 := @parameter1: double;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UChange $r0;
        net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow r1;
        net.sourceforge.plantuml.ugraphic.ULine $r2, $r3, $r8, $r13;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r9;
        java.awt.geom.Point2D $r5, $r6, $r10, $r11;
        net.sourceforge.plantuml.ugraphic.UGraphic $r7, $r12, r14, r15;

        r1 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.UChange changeBack(net.sourceforge.plantuml.ugraphic.UGraphic)>(r14);

        r15 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r2 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: net.sourceforge.plantuml.ugraphic.ULine line>;

        if $r2 == null goto label1;

        $r3 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: net.sourceforge.plantuml.ugraphic.ULine line>;

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.ULine: double getLength()>();

        $b0 = $d0 cmpl 2.0;

        if $b0 <= 0 goto label1;

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r5 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: java.awt.geom.Point2D contact>;

        $d1 = virtualinvoke $r5.<java.awt.geom.Point2D: double getX()>();

        $r6 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: java.awt.geom.Point2D contact>;

        $d2 = virtualinvoke $r6.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d2);

        $r7 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r8 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: net.sourceforge.plantuml.ugraphic.ULine line>;

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r10 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: java.awt.geom.Point2D contact>;

        $d3 = virtualinvoke $r10.<java.awt.geom.Point2D: double getX()>();

        $r11 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: java.awt.geom.Point2D contact>;

        $d4 = virtualinvoke $r11.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, $d4);

        $r12 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r13 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityHalfArrow: net.sourceforge.plantuml.ugraphic.ULine otherLine>;

        interfaceinvoke $r12.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r13);

     label1:
        return;
    }
}
