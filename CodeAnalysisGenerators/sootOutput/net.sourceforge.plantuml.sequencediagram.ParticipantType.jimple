public final enum class net.sourceforge.plantuml.sequencediagram.ParticipantType extends java.lang.Enum implements net.sourceforge.plantuml.style.Styleable
{
    public static final enum net.sourceforge.plantuml.sequencediagram.ParticipantType PARTICIPANT;
    public static final enum net.sourceforge.plantuml.sequencediagram.ParticipantType ACTOR;
    public static final enum net.sourceforge.plantuml.sequencediagram.ParticipantType BOUNDARY;
    public static final enum net.sourceforge.plantuml.sequencediagram.ParticipantType CONTROL;
    public static final enum net.sourceforge.plantuml.sequencediagram.ParticipantType ENTITY;
    public static final enum net.sourceforge.plantuml.sequencediagram.ParticipantType QUEUE;
    public static final enum net.sourceforge.plantuml.sequencediagram.ParticipantType DATABASE;
    public static final enum net.sourceforge.plantuml.sequencediagram.ParticipantType COLLECTIONS;
    private final net.sourceforge.plantuml.ColorParam background;
    private static final net.sourceforge.plantuml.sequencediagram.ParticipantType[] $VALUES;

    public static net.sourceforge.plantuml.sequencediagram.ParticipantType[] values()
    {
        net.sourceforge.plantuml.sequencediagram.ParticipantType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.sequencediagram.ParticipantType[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.sequencediagram.ParticipantType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.sequencediagram.ParticipantType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/sequencediagram/ParticipantType;", r0);

        $r2 = (net.sourceforge.plantuml.sequencediagram.ParticipantType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, net.sourceforge.plantuml.ColorParam)
    {
        net.sourceforge.plantuml.sequencediagram.ParticipantType r0;
        java.lang.String r1;
        int i0;
        net.sourceforge.plantuml.ColorParam r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.ParticipantType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: net.sourceforge.plantuml.ColorParam;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.ColorParam background> = r2;

        return;
    }

    public net.sourceforge.plantuml.ColorParam getBackgroundColorParam()
    {
        net.sourceforge.plantuml.sequencediagram.ParticipantType r0;
        net.sourceforge.plantuml.ColorParam $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.ColorParam background>;

        return $r1;
    }

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.sequencediagram.ParticipantType r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        net.sourceforge.plantuml.style.SName[] $r9, $r15, $r21, $r27, $r33, $r39, $r45, $r51;
        net.sourceforge.plantuml.style.SName $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r28, $r29, $r30, $r31, $r34, $r35, $r36, $r37, $r40, $r41, $r42, $r43, $r46, $r47, $r48, $r49, $r52, $r53, $r54, $r55;
        net.sourceforge.plantuml.style.StyleSignature $r14, $r20, $r26, $r32, $r38, $r44, $r50, $r56;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r1 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType PARTICIPANT>;

        if r0 != $r1 goto label1;

        $r51 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r52 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r51[0] = $r52;

        $r53 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r51[1] = $r53;

        $r54 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r51[2] = $r54;

        $r55 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName participant>;

        $r51[3] = $r55;

        $r56 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r51);

        return $r56;

     label1:
        $r2 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType ACTOR>;

        if r0 != $r2 goto label2;

        $r45 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r46 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r45[0] = $r46;

        $r47 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r45[1] = $r47;

        $r48 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r45[2] = $r48;

        $r49 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName actor>;

        $r45[3] = $r49;

        $r50 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r45);

        return $r50;

     label2:
        $r3 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType BOUNDARY>;

        if r0 != $r3 goto label3;

        $r39 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r40 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r39[0] = $r40;

        $r41 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r39[1] = $r41;

        $r42 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r39[2] = $r42;

        $r43 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName boundary>;

        $r39[3] = $r43;

        $r44 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r39);

        return $r44;

     label3:
        $r4 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType CONTROL>;

        if r0 != $r4 goto label4;

        $r33 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r34 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r33[0] = $r34;

        $r35 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r33[1] = $r35;

        $r36 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r33[2] = $r36;

        $r37 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName control>;

        $r33[3] = $r37;

        $r38 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r33);

        return $r38;

     label4:
        $r5 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType ENTITY>;

        if r0 != $r5 goto label5;

        $r27 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r28 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r27[0] = $r28;

        $r29 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r27[1] = $r29;

        $r30 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r27[2] = $r30;

        $r31 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName entity>;

        $r27[3] = $r31;

        $r32 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r27);

        return $r32;

     label5:
        $r6 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType QUEUE>;

        if r0 != $r6 goto label6;

        $r21 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r22 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r21[0] = $r22;

        $r23 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r21[1] = $r23;

        $r24 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r21[2] = $r24;

        $r25 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName queue>;

        $r21[3] = $r25;

        $r26 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r21);

        return $r26;

     label6:
        $r7 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType DATABASE>;

        if r0 != $r7 goto label7;

        $r15 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r16 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r15[0] = $r16;

        $r17 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r15[1] = $r17;

        $r18 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r15[2] = $r18;

        $r19 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName database>;

        $r15[3] = $r19;

        $r20 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r15);

        return $r20;

     label7:
        $r8 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType COLLECTIONS>;

        if r0 != $r8 goto label8;

        $r9 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r10 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r9[0] = $r10;

        $r11 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r9[1] = $r11;

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r9[2] = $r12;

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName collections>;

        $r9[3] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r9);

        return $r14;

     label8:
        return null;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.sequencediagram.ParticipantType $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        net.sourceforge.plantuml.ColorParam $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        net.sourceforge.plantuml.sequencediagram.ParticipantType[] $r16;

        $r0 = new net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r1 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam participantBackground>;

        specialinvoke $r0.<net.sourceforge.plantuml.sequencediagram.ParticipantType: void <init>(java.lang.String,int,net.sourceforge.plantuml.ColorParam)>("PARTICIPANT", 0, $r1);

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType PARTICIPANT> = $r0;

        $r2 = new net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r3 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam actorBackground>;

        specialinvoke $r2.<net.sourceforge.plantuml.sequencediagram.ParticipantType: void <init>(java.lang.String,int,net.sourceforge.plantuml.ColorParam)>("ACTOR", 1, $r3);

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType ACTOR> = $r2;

        $r4 = new net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r5 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam boundaryBackground>;

        specialinvoke $r4.<net.sourceforge.plantuml.sequencediagram.ParticipantType: void <init>(java.lang.String,int,net.sourceforge.plantuml.ColorParam)>("BOUNDARY", 2, $r5);

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType BOUNDARY> = $r4;

        $r6 = new net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r7 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam controlBackground>;

        specialinvoke $r6.<net.sourceforge.plantuml.sequencediagram.ParticipantType: void <init>(java.lang.String,int,net.sourceforge.plantuml.ColorParam)>("CONTROL", 3, $r7);

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType CONTROL> = $r6;

        $r8 = new net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r9 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam entityBackground>;

        specialinvoke $r8.<net.sourceforge.plantuml.sequencediagram.ParticipantType: void <init>(java.lang.String,int,net.sourceforge.plantuml.ColorParam)>("ENTITY", 4, $r9);

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType ENTITY> = $r8;

        $r10 = new net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r11 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam queueBackground>;

        specialinvoke $r10.<net.sourceforge.plantuml.sequencediagram.ParticipantType: void <init>(java.lang.String,int,net.sourceforge.plantuml.ColorParam)>("QUEUE", 5, $r11);

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType QUEUE> = $r10;

        $r12 = new net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r13 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam databaseBackground>;

        specialinvoke $r12.<net.sourceforge.plantuml.sequencediagram.ParticipantType: void <init>(java.lang.String,int,net.sourceforge.plantuml.ColorParam)>("DATABASE", 6, $r13);

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType DATABASE> = $r12;

        $r14 = new net.sourceforge.plantuml.sequencediagram.ParticipantType;

        $r15 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam collectionsBackground>;

        specialinvoke $r14.<net.sourceforge.plantuml.sequencediagram.ParticipantType: void <init>(java.lang.String,int,net.sourceforge.plantuml.ColorParam)>("COLLECTIONS", 7, $r15);

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType COLLECTIONS> = $r14;

        $r16 = newarray (net.sourceforge.plantuml.sequencediagram.ParticipantType)[8];

        $r17 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType PARTICIPANT>;

        $r16[0] = $r17;

        $r18 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType ACTOR>;

        $r16[1] = $r18;

        $r19 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType BOUNDARY>;

        $r16[2] = $r19;

        $r20 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType CONTROL>;

        $r16[3] = $r20;

        $r21 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType ENTITY>;

        $r16[4] = $r21;

        $r22 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType QUEUE>;

        $r16[5] = $r22;

        $r23 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType DATABASE>;

        $r16[6] = $r23;

        $r24 = <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType COLLECTIONS>;

        $r16[7] = $r24;

        <net.sourceforge.plantuml.sequencediagram.ParticipantType: net.sourceforge.plantuml.sequencediagram.ParticipantType[] $VALUES> = $r16;

        return;
    }
}
