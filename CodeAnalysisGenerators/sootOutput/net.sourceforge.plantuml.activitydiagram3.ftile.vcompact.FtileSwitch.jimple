class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final double xSeparation;
    private final java.util.List tiles;
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;

    private void <init>(java.util.List, java.util.List, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r0;
        java.util.List r1, r7;
        java.lang.Object $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.ISkinParam $r4;
        java.util.ArrayList $r5;
        net.sourceforge.plantuml.graphic.Rainbow r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        r7 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r6 := @parameter2: net.sourceforge.plantuml.graphic.Rainbow;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r4);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: double xSeparation> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: double xSeparation> = 20.0;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles> = $r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r6;

        return;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3, $r5;
        java.util.Set $r4;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        if $r3 == null goto label1;

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r5);

     label1:
        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r4;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r4;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r1;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory, net.sourceforge.plantuml.svek.ConditionStyle, java.util.List, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r0, r41;
        java.util.ArrayList $r1, $r4;
        java.util.List r3;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch $r5;
        net.sourceforge.plantuml.graphic.Rainbow r6;
        java.lang.Object $r7, $r37;
        net.sourceforge.plantuml.activitydiagram3.Branch r8, r43;
        net.sourceforge.plantuml.cucadiagram.Display $r9, $r15, $r28, $r29;
        net.sourceforge.plantuml.graphic.FontConfiguration r10, r16;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r11;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r12, $r18, $r19, $r30;
        net.sourceforge.plantuml.ISkinParam $r13, $r17, $r20, $r25, $r31;
        net.sourceforge.plantuml.graphic.TextBlock r14, r21, r48;
        net.sourceforge.plantuml.ugraphic.color.HColor $r22, r26, r36, $r46;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 $r24, r47;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r27;
        net.sourceforge.plantuml.graphic.StringBounder $r32;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r33;
        double $d0;
        java.lang.Double $r34, $r35;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered $r38;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r39;
        net.sourceforge.plantuml.svek.ConditionStyle r40;
        java.util.Iterator r42, r45;

        r27 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r26 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r36 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r6 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r11 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r40 := @parameter5: net.sourceforge.plantuml.svek.ConditionStyle;

        r3 := @parameter6: java.util.List;

        r10 := @parameter7: net.sourceforge.plantuml.graphic.FontConfiguration;

        r41 := @parameter8: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r0 := @parameter9: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r16 := @parameter10: net.sourceforge.plantuml.graphic.FontConfiguration;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r42 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r37 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r43 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r37;

        $r38 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r39 = virtualinvoke r43.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r38.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r39, 30.0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r38);

        goto label1;

     label2:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r45 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r45.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r7 = interfaceinvoke r45.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r7;

        $r9 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getDisplayPositive()>();

        $r12 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r13 = interfaceinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r14 = virtualinvoke $r9.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r10, $r12, $r13);

        $r15 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getLabelTest()>();

        $r17 = interfaceinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r18 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r19 = interfaceinvoke $r17.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r18);

        $r20 = interfaceinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r21 = virtualinvoke $r15.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r16, $r19, $r20);

        $r22 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r22 != null goto label4;

        $r46 = r36;

        goto label5;

     label4:
        $r46 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

     label5:
        $r24 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2;

        $r25 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r24.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r21, $r25, $r46, r26, r27);

        r47 = $r24;

        $r28 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getInlabel()>();

        $z2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r28);

        if $z2 == 0 goto label6;

        $r35 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(0.0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r35);

        goto label7;

     label6:
        $r29 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getInlabel()>();

        $r30 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r31 = interfaceinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r48 = virtualinvoke $r29.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r10, $r30, $r31);

        $r32 = interfaceinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r33 = interfaceinvoke r48.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r32);

        $d0 = virtualinvoke $r33.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r34 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r34);

        r47 = virtualinvoke $r24.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 withWest(net.sourceforge.plantuml.graphic.TextBlock)>(r48);

     label7:
        virtualinvoke r47.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 withNorth(net.sourceforge.plantuml.graphic.TextBlock)>(r14);

        goto label3;

     label8:
        $r5 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        specialinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: void <init>(java.util.List,java.util.List,net.sourceforge.plantuml.graphic.Rainbow)>($r4, $r1, r6);

        return $r5;
    }

    public java.util.Collection getMyChildren()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r1;
        java.util.List $r2, $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r4;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        java.util.List $r2;
        boolean $z0;
        java.lang.UnsupportedOperationException $r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r4);

        return $r5;

     label1:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r5, r8;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r7;
        double $d0, $d1, d2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        r8 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        d2 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r4;

        r7 = interfaceinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        if r5 != r8 goto label2;

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, 25.0);

        return $r9;

     label2:
        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = $d0 + 20.0;

        d2 = d2 + $d1;

        goto label1;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r8;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r5;

        $r7 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r6, r1);

        $r8 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r6);

        goto label1;

     label2:
        return;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r1;
        java.util.List $r2, $r4;
        java.util.Iterator r3;
        boolean $z0;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r5, $r9;
        java.lang.Object $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r7;
        net.sourceforge.plantuml.graphic.StringBounder r8;
        net.sourceforge.plantuml.awt.geom.Dimension2D r10, r11;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(0.0, 0.0);

        r10 = $r0;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles>;

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r6;

        $r9 = interfaceinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        r10 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D mergeLR(net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r10, $r9);

        goto label1;

     label2:
        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $d0 = (double) $i1;

        $d1 = 20.0 * $d0;

        r11 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r10, $d1, 100.0);

        $r5 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d2 = virtualinvoke r11.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = $d2 / 2.0;

        specialinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r11, $d3, 0.0);

        return $r5;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, $r7, $r10, $r11;
        java.util.ArrayList $r3;
        java.util.List $r4;
        java.util.Iterator r6;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Object $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = new java.util.ArrayList;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileSwitch: java.util.List tiles>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r6 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r8;

        $r10 = interfaceinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z1 = virtualinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z1 == 0 goto label2;

        $r11 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = $d2 / 2.0;

        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double,double)>(r2, $d3, 0.0, $d4);

        return $r11;

     label2:
        goto label1;

     label3:
        $r7 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r2, $d1, 0.0);

        return $r7;
    }
}
