public class net.sourceforge.plantuml.salt.factory.ElementFactoryTab extends net.sourceforge.plantuml.salt.factory.AbstractElementFactoryComplex
{
    static final boolean $assertionsDisabled;

    public void <init>(net.sourceforge.plantuml.salt.DataSource, net.sourceforge.plantuml.salt.Dictionary)
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryTab r0;
        net.sourceforge.plantuml.salt.DataSource r1;
        net.sourceforge.plantuml.salt.Dictionary r2;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryTab;

        r1 := @parameter0: net.sourceforge.plantuml.salt.DataSource;

        r2 := @parameter1: net.sourceforge.plantuml.salt.Dictionary;

        specialinvoke r0.<net.sourceforge.plantuml.salt.factory.AbstractElementFactoryComplex: void <init>(net.sourceforge.plantuml.salt.DataSource,net.sourceforge.plantuml.salt.Dictionary)>(r1, r2);

        return;
    }

    public net.sourceforge.plantuml.salt.Terminated create()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryTab r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.salt.DataSource $r1, $r10, $r14, $r22;
        java.lang.Object $r2, $r4, $r11, $r15, $r16, $r24;
        net.sourceforge.plantuml.salt.Terminated $r3, $r12, $r23, r26, r27;
        java.lang.String r5, $r17, $r25;
        net.sourceforge.plantuml.ugraphic.UFont r6;
        net.sourceforge.plantuml.salt.element.ElementTabBar $r7;
        net.sourceforge.plantuml.salt.Dictionary $r8;
        net.sourceforge.plantuml.salt.Terminator $r13, $r18, $r19;
        java.lang.AssertionError $r20;
        java.lang.IllegalStateException $r21;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryTab;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTab: boolean ready()>();

        if $z0 != 0 goto label1;

        $r21 = new java.lang.IllegalStateException;

        specialinvoke $r21.<java.lang.IllegalStateException: void <init>()>();

        throw $r21;

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTab: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        $r3 = (net.sourceforge.plantuml.salt.Terminated) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r5 = (java.lang.String) $r4;

        $z1 = <net.sourceforge.plantuml.salt.factory.ElementFactoryTab: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("{/");

        if $z2 != 0 goto label2;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label2:
        r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont byDefault(int)>(12);

        $r7 = new net.sourceforge.plantuml.salt.element.ElementTabBar;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTab: net.sourceforge.plantuml.salt.Dictionary getDictionary()>();

        specialinvoke $r7.<net.sourceforge.plantuml.salt.element.ElementTabBar: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ISkinSimple)>(r6, $r8);

     label3:
        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTab: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        $r25 = (java.lang.String) $r24;

        $z3 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("}");

        if $z3 != 0 goto label5;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTab: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r26 = (net.sourceforge.plantuml.salt.Terminated) $r15;

        $r16 = virtualinvoke r26.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        $r17 = (java.lang.String) $r16;

        virtualinvoke $r7.<net.sourceforge.plantuml.salt.element.ElementTabBar: void addTab(java.lang.String)>($r17);

        $r18 = virtualinvoke r26.<net.sourceforge.plantuml.salt.Terminated: net.sourceforge.plantuml.salt.Terminator getTerminator()>();

        $r19 = <net.sourceforge.plantuml.salt.Terminator: net.sourceforge.plantuml.salt.Terminator NEWLINE>;

        if $r18 != $r19 goto label4;

        virtualinvoke $r7.<net.sourceforge.plantuml.salt.element.ElementTabBar: void setVertical(boolean)>(1);

     label4:
        goto label3;

     label5:
        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTab: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r27 = (net.sourceforge.plantuml.salt.Terminated) $r11;

        $r12 = new net.sourceforge.plantuml.salt.Terminated;

        $r13 = virtualinvoke r27.<net.sourceforge.plantuml.salt.Terminated: net.sourceforge.plantuml.salt.Terminator getTerminator()>();

        specialinvoke $r12.<net.sourceforge.plantuml.salt.Terminated: void <init>(java.lang.Object,net.sourceforge.plantuml.salt.Terminator)>($r7, $r13);

        return $r12;
    }

    public boolean ready()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryTab r0;
        net.sourceforge.plantuml.salt.DataSource $r1;
        net.sourceforge.plantuml.salt.Terminated $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryTab;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTab: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("{/");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/salt/factory/ElementFactoryTab;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.salt.factory.ElementFactoryTab: boolean $assertionsDisabled> = $z1;

        return;
    }
}
