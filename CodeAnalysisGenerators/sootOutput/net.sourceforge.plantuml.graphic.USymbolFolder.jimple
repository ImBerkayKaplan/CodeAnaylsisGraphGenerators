public class net.sourceforge.plantuml.graphic.USymbolFolder extends net.sourceforge.plantuml.graphic.USymbol
{
    private static final int marginTitleX1;
    private static final int marginTitleX2;
    private static final int marginTitleX3;
    private static final int marginTitleY0;
    private static final int marginTitleY1;
    private static final int marginTitleY2;
    private final net.sourceforge.plantuml.graphic.SkinParameter skinParameter;
    private final net.sourceforge.plantuml.style.SName sname;
    private final boolean showTitle;

    public void <init>(net.sourceforge.plantuml.style.SName, net.sourceforge.plantuml.graphic.SkinParameter, boolean)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder r0;
        net.sourceforge.plantuml.graphic.SkinParameter r1;
        boolean z0;
        net.sourceforge.plantuml.style.SName r2;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        r2 := @parameter0: net.sourceforge.plantuml.style.SName;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.SkinParameter;

        z0 := @parameter2: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.USymbolFolder: net.sourceforge.plantuml.graphic.SkinParameter skinParameter> = r1;

        r0.<net.sourceforge.plantuml.graphic.USymbolFolder: boolean showTitle> = z0;

        r0.<net.sourceforge.plantuml.graphic.USymbolFolder: net.sourceforge.plantuml.style.SName sname> = r2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r8;
        net.sourceforge.plantuml.graphic.USymbolFolder r1;
        java.lang.String $r2, $r9;
        net.sourceforge.plantuml.graphic.SkinParameter $r5;
        boolean $z0;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.graphic.USymbolFolder: net.sourceforge.plantuml.graphic.SkinParameter skinParameter>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z0 = r1.<net.sourceforge.plantuml.graphic.USymbolFolder: boolean showTitle>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.USymbolFolder r0;
        net.sourceforge.plantuml.graphic.SkinParameter $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        $r1 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder: net.sourceforge.plantuml.graphic.SkinParameter skinParameter>;

        return $r1;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.graphic.USymbolFolder r0;
        net.sourceforge.plantuml.style.SName $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        $r1 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder: net.sourceforge.plantuml.style.SName sname>;

        return $r1;
    }

    private void drawFolder(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, net.sourceforge.plantuml.awt.geom.Dimension2D, double, double)
    {
        net.sourceforge.plantuml.awt.geom.Dimension2D r0;
        double $d0, $d1, $d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, $d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, d31, $d32, $d33, $d34, d35;
        byte $b0, $b1;
        net.sourceforge.plantuml.graphic.USymbolFolder r1;
        net.sourceforge.plantuml.ugraphic.UPath $r2;
        java.awt.geom.Point2D$Double $r3, $r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.ugraphic.UGraphic r8, $r10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9;
        net.sourceforge.plantuml.ugraphic.ULine $r11;
        net.sourceforge.plantuml.ugraphic.UPolygon $r12;
        net.sourceforge.plantuml.ugraphic.AbstractShadowable r14;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        r8 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d12 := @parameter1: double;

        d18 := @parameter2: double;

        r0 := @parameter3: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d31 := @parameter4: double;

        d4 := @parameter5: double;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d34 = d12 / 4.0;

        d35 = staticinvoke <java.lang.Math: double max(double,double)>(30.0, $d34);

        goto label2;

     label1:
        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 + 3.0;

        d35 = $d2 + 3.0;

     label2:
        d3 = specialinvoke r1.<net.sourceforge.plantuml.graphic.USymbolFolder: double getHTitle(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r0);

        $b1 = d4 cmpl 0.0;

        if $b1 != 0 goto label3;

        $r12 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d35, 0.0);

        $d33 = d35 + 7.0;

        virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d33, d3);

        virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d12, d3);

        virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d12, d18);

        virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, d18);

        virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        r14 = $r12;

        goto label4;

     label3:
        $r2 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $d5 = d4 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>($d5, 0.0);

        $d6 = d4 / 2.0;

        $d7 = d35 - $d6;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d7, 0.0);

        $r3 = new java.awt.geom.Point2D$Double;

        $d8 = d4 / 2.0;

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d35, $d8);

        $d9 = d4 / 2.0;

        $d10 = $d9 * 1.5;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r3, $d10, 0.0, 1.0);

        $d11 = d35 + 7.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d11, d3);

        $d13 = d4 / 2.0;

        $d14 = d12 - $d13;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d14, d3);

        $r4 = new java.awt.geom.Point2D$Double;

        $d15 = d4 / 2.0;

        $d16 = d3 + $d15;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d12, $d16);

        $d17 = d4 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r4, $d17, 0.0, 1.0);

        $d19 = d4 / 2.0;

        $d20 = d18 - $d19;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d12, $d20);

        $r5 = new java.awt.geom.Point2D$Double;

        $d21 = d4 / 2.0;

        $d22 = d12 - $d21;

        specialinvoke $r5.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d22, d18);

        $d23 = d4 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r5, $d23, 0.0, 1.0);

        $d24 = d4 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d24, d18);

        $r6 = new java.awt.geom.Point2D$Double;

        $d25 = d4 / 2.0;

        $d26 = d18 - $d25;

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, $d26);

        $d27 = d4 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r6, $d27, 0.0, 1.0);

        $d28 = d4 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d28);

        $r7 = new java.awt.geom.Point2D$Double;

        $d29 = d4 / 2.0;

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d29, 0.0);

        $d30 = d4 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r7, $d30, 0.0, 1.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        r14 = $r2;

     label4:
        interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.Shadowable: void setDeltaShadow(double)>(d31);

        interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r14);

        $r9 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d3);

        $r10 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $d32 = d35 + 7.0;

        $r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d32);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r11);

        return;
    }

    private double getHTitle(net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.awt.geom.Dimension2D r0;
        double $d0, $d1, $d2, d3;
        byte $b0;
        net.sourceforge.plantuml.graphic.USymbolFolder r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        r0 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        d3 = 10.0;

        goto label2;

     label1:
        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = $d1 + 3.0;

        d3 = $d2 + 3.0;

     label2:
        return d3;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolFolder r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(10.0, 20.0, 13.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0, r5, r6;
        net.sourceforge.plantuml.graphic.USymbolFolder$1 $r2;
        net.sourceforge.plantuml.graphic.USymbolFolder r3;
        net.sourceforge.plantuml.graphic.SymbolContext r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r7;

        r3 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r7 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = new net.sourceforge.plantuml.graphic.USymbolFolder$1;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.USymbolFolder$1: void <init>(net.sourceforge.plantuml.graphic.USymbolFolder,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r3, r4, r5, r6, r0);

        return $r2;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolFolder r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4;
        double d0, d1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5, r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolFolder;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolFolder$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolFolder$2: void <init>(net.sourceforge.plantuml.graphic.USymbolFolder,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r1, r2, r3, r4, d0, d1);

        return $r0;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolFolder, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, net.sourceforge.plantuml.awt.geom.Dimension2D, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2, d3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFolder;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r2 := @parameter4: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d2 := @parameter5: double;

        d3 := @parameter6: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFolder: void drawFolder(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r1, d0, d1, r2, d2, d3);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolFolder)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFolder;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFolder: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }

    static boolean access$200(net.sourceforge.plantuml.graphic.USymbolFolder)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder r0;
        boolean $z0;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFolder;

        $z0 = r0.<net.sourceforge.plantuml.graphic.USymbolFolder: boolean showTitle>;

        return $z0;
    }

    static double access$300(net.sourceforge.plantuml.graphic.USymbolFolder, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.graphic.USymbolFolder r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolFolder;

        r1 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolFolder: double getHTitle(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1);

        return $d0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.graphic.USymbolFolder: int marginTitleY2> = 3;

        <net.sourceforge.plantuml.graphic.USymbolFolder: int marginTitleY1> = 3;

        <net.sourceforge.plantuml.graphic.USymbolFolder: int marginTitleY0> = 0;

        <net.sourceforge.plantuml.graphic.USymbolFolder: int marginTitleX3> = 7;

        <net.sourceforge.plantuml.graphic.USymbolFolder: int marginTitleX2> = 3;

        <net.sourceforge.plantuml.graphic.USymbolFolder: int marginTitleX1> = 3;

        return;
    }
}
