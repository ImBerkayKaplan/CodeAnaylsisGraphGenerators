class net.sourceforge.plantuml.emoji.PSystemListEmoji$1 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final net.sourceforge.plantuml.emoji.PSystemListEmoji this$0;

    void <init>(net.sourceforge.plantuml.emoji.PSystemListEmoji)
    {
        net.sourceforge.plantuml.emoji.PSystemListEmoji$1 r0;
        net.sourceforge.plantuml.emoji.PSystemListEmoji r1;

        r0 := @this: net.sourceforge.plantuml.emoji.PSystemListEmoji$1;

        r1 := @parameter0: net.sourceforge.plantuml.emoji.PSystemListEmoji;

        r0.<net.sourceforge.plantuml.emoji.PSystemListEmoji$1: net.sourceforge.plantuml.emoji.PSystemListEmoji this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        java.lang.String[] $r0, $r49;
        java.lang.StringBuilder $r1, $r2, $r6, $r27, $r30, $r31, $r32, $r33, $r36, $r37, $r38, $r39, $r43, $r44, $r45, $r46, $r58, $r59, $r60, $r61;
        net.sourceforge.plantuml.emoji.PSystemListEmoji$1 r3;
        net.sourceforge.plantuml.emoji.PSystemListEmoji $r4, $r66;
        java.lang.String $r5, $r7, r23, r26, $r34, $r40, $r47, $r50, $r62, $r67, $r68, $r70;
        java.util.List $r8, $r51;
        net.sourceforge.plantuml.svek.TextBlockBackcolored r9, r52;
        net.sourceforge.plantuml.graphic.StringBounder r10;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r11, $r53;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r12, $r54, $r55, $r56;
        net.sourceforge.plantuml.ugraphic.UGraphic r13, r74, r75;
        java.util.TreeMap $r14;
        java.util.Map $r16;
        java.util.Set $r17, $r18;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, i3, i4;
        java.util.Iterator r19, r76;
        java.lang.Object $r20, $r22, $r24, $r64, $r65, $r69, $r71;
        java.util.Map$Entry r21, r77;
        net.sourceforge.plantuml.emoji.Emoji $r25, $r72;

        r3 := @this: net.sourceforge.plantuml.emoji.PSystemListEmoji$1;

        r74 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = newarray (java.lang.String)[2];

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<b><size:16>Emoji available on Unicode Block ");

        $r4 = r3.<net.sourceforge.plantuml.emoji.PSystemListEmoji$1: net.sourceforge.plantuml.emoji.PSystemListEmoji this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.emoji.PSystemListEmoji: java.lang.String access$000(net.sourceforge.plantuml.emoji.PSystemListEmoji)>($r4);

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0[0] = $r7;

        $r0[1] = "(Blocks available: 26, 27, 1F3, 1F4, 1F5, 1F6, 1F9)";

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        r9 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.svek.TextBlockBackcolored createBlackOnWhite(java.util.List)>($r8);

        interfaceinvoke r9.<net.sourceforge.plantuml.svek.TextBlockBackcolored: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r74);

        r10 = interfaceinvoke r74.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r11 = interfaceinvoke r9.<net.sourceforge.plantuml.svek.TextBlockBackcolored: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r10);

        $d0 = virtualinvoke $r11.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        r75 = interfaceinvoke r74.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        r13 = r75;

        $r14 = new java.util.TreeMap;

        specialinvoke $r14.<java.util.TreeMap: void <init>()>();

        $r16 = staticinvoke <net.sourceforge.plantuml.emoji.Emoji: java.util.Map getAll()>();

        $r17 = interfaceinvoke $r16.<java.util.Map: java.util.Set entrySet()>();

        r76 = interfaceinvoke $r17.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r76.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r64 = interfaceinvoke r76.<java.util.Iterator: java.lang.Object next()>();

        r77 = (java.util.Map$Entry) $r64;

        $r65 = interfaceinvoke r77.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r67 = (java.lang.String) $r65;

        $r66 = r3.<net.sourceforge.plantuml.emoji.PSystemListEmoji$1: net.sourceforge.plantuml.emoji.PSystemListEmoji this$0>;

        $r68 = staticinvoke <net.sourceforge.plantuml.emoji.PSystemListEmoji: java.lang.String access$000(net.sourceforge.plantuml.emoji.PSystemListEmoji)>($r66);

        $z2 = virtualinvoke $r67.<java.lang.String: boolean startsWith(java.lang.String)>($r68);

        if $z2 == 0 goto label2;

        $r69 = interfaceinvoke r77.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r70 = (java.lang.String) $r69;

        $r71 = interfaceinvoke r77.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r72 = (net.sourceforge.plantuml.emoji.Emoji) $r71;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r70, $r72);

     label2:
        goto label1;

     label3:
        $i0 = interfaceinvoke $r14.<java.util.Map: int size()>();

        $i1 = $i0 + 2;

        i3 = $i1 / 3;

        i4 = 0;

        $r18 = interfaceinvoke $r14.<java.util.Map: java.util.Set entrySet()>();

        r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r20;

        $r22 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        r23 = (java.lang.String) $r22;

        $r24 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r25 = (net.sourceforge.plantuml.emoji.Emoji) $r24;

        r26 = virtualinvoke $r25.<net.sourceforge.plantuml.emoji.Emoji: java.lang.String getShortcut()>();

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<size:13>");

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\"<U+003C>:");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":<U+003E> \"\"");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<:");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":>");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<#0:");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":>");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        if r26 == null goto label5;

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"\"<U+003C>:");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":<U+003E> \"\"");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

     label5:
        $r49 = newarray (java.lang.String)[1];

        $r50 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49[0] = $r50;

        $r51 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r49);

        r52 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.svek.TextBlockBackcolored createBlackOnWhite(java.util.List)>($r51);

        interfaceinvoke r52.<net.sourceforge.plantuml.svek.TextBlockBackcolored: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r75);

        $r53 = interfaceinvoke r52.<net.sourceforge.plantuml.svek.TextBlockBackcolored: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r10);

        $d1 = virtualinvoke $r53.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r54 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d1);

        r75 = interfaceinvoke r75.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r54);

        i4 = i4 + 1;

        if i4 != i3 goto label6;

        $r56 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(500.0);

        r75 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r56);

     label6:
        $i2 = 2 * i3;

        if i4 != $i2 goto label7;

        $r55 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(1000.0);

        r75 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r55);

     label7:
        goto label4;

     label8:
        return;
    }
}
