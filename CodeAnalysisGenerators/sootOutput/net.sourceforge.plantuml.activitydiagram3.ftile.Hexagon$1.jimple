class net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1 extends java.lang.Object implements net.sourceforge.plantuml.creole.Stencil
{
    final net.sourceforge.plantuml.graphic.TextBlock val$tb;

    void <init>(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1 r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1: net.sourceforge.plantuml.graphic.TextBlock val$tb> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private final double getDeltaX(double, double)
    {
        double d0, d1, $d2, d3, $d4, $d5, $d6;
        byte $b0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1 r0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        $d2 = d0 / d1;

        d3 = $d2 * 2.0;

        $b0 = d3 cmpg 1.0;

        if $b0 > 0 goto label1;

        $d6 = 12.0 * d3;

        return $d6;

     label1:
        $d4 = 2.0 - d3;

        $d5 = 12.0 * $d4;

        return $d5;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, d1, $d2, $d3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1: net.sourceforge.plantuml.graphic.TextBlock val$tb>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1: double getDeltaX(double,double)>($d0, d1);

        $d3 = neg $d2;

        return $d3;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1, d2, $d3, $d4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1: net.sourceforge.plantuml.graphic.TextBlock val$tb>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1: double getDeltaX(double,double)>($d1, d2);

        $d4 = $d0 + $d3;

        return $d4;
    }
}
