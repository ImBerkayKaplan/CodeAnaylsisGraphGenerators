public class net.sourceforge.plantuml.graphic.AddStyle extends java.lang.Object implements net.sourceforge.plantuml.graphic.FontChange
{
    private final net.sourceforge.plantuml.graphic.FontStyle style;
    private final net.sourceforge.plantuml.ugraphic.color.HColor extendedColor;

    public void <init>(net.sourceforge.plantuml.graphic.FontStyle, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.AddStyle r0;
        net.sourceforge.plantuml.graphic.FontStyle r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;

        r0 := @this: net.sourceforge.plantuml.graphic.AddStyle;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontStyle;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.AddStyle: net.sourceforge.plantuml.graphic.FontStyle style> = r1;

        r0.<net.sourceforge.plantuml.graphic.AddStyle: net.sourceforge.plantuml.ugraphic.color.HColor extendedColor> = r2;

        return;
    }

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.AddStyle r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.FontStyle $r2, $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;

        r0 := @this: net.sourceforge.plantuml.graphic.AddStyle;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle getStyle(java.lang.String)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle getStyle(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.ugraphic.color.HColor getExtendedColor(java.lang.String)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AddStyle: void <init>(net.sourceforge.plantuml.graphic.FontStyle,net.sourceforge.plantuml.ugraphic.color.HColor)>($r2, $r4);

        return;
    }

    public net.sourceforge.plantuml.graphic.FontConfiguration apply(net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.graphic.AddStyle r0;
        net.sourceforge.plantuml.graphic.FontStyle $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4, r5;

        r0 := @this: net.sourceforge.plantuml.graphic.AddStyle;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        $r1 = r0.<net.sourceforge.plantuml.graphic.AddStyle: net.sourceforge.plantuml.graphic.FontStyle style>;

        r5 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration add(net.sourceforge.plantuml.graphic.FontStyle)>($r1);

        $r2 = r0.<net.sourceforge.plantuml.graphic.AddStyle: net.sourceforge.plantuml.ugraphic.color.HColor extendedColor>;

        if $r2 == null goto label1;

        $r3 = r0.<net.sourceforge.plantuml.graphic.AddStyle: net.sourceforge.plantuml.ugraphic.color.HColor extendedColor>;

        r5 = virtualinvoke r5.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration changeExtendedColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r3);

     label1:
        return r5;
    }
}
