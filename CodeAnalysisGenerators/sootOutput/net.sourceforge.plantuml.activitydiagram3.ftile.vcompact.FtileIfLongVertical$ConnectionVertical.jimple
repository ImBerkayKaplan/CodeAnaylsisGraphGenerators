class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow color;
    private final net.sourceforge.plantuml.graphic.TextBlock label;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;
        net.sourceforge.plantuml.graphic.TextBlock r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r5 := @parameter4: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.graphic.Rainbow color> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.graphic.TextBlock label> = r5;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical r2;
        java.awt.geom.Point2D r3, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.graphic.Rainbow $r7;
        net.sourceforge.plantuml.ugraphic.UPolygon $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r9, r12;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r10;
        net.sourceforge.plantuml.graphic.TextBlock $r11;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.graphic.Rainbow color>;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r6, $r7, $r8);

        $r11 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r10 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment CENTER>;

        r12 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.VerticalAlignment)>($r11, $r10);

        virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r3);

        virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r4);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r12);

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r6;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r3;
        java.awt.geom.Point2D r4, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r6, r2);

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r4);

        return $r8;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r6;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r3;
        java.awt.geom.Point2D r4, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r6, r2);

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r4);

        return $r8;
    }
}
