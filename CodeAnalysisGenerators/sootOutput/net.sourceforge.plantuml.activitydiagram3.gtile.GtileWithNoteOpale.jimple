public class net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale extends net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile implements net.sourceforge.plantuml.creole.Stencil, net.sourceforge.plantuml.style.Styleable
{
    private final net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile;
    private final net.sourceforge.plantuml.svek.image.Opale opale;
    private final net.sourceforge.plantuml.sequencediagram.NotePosition notePosition;
    private final double suppSpace;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneNote;
    private final net.sourceforge.plantuml.ugraphic.UTranslate positionNote;
    private final net.sourceforge.plantuml.ugraphic.UTranslate positionTile;
    private final net.sourceforge.plantuml.awt.geom.Dimension2D dimNote;
    private final net.sourceforge.plantuml.awt.geom.Dimension2D dimTile;

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlane(java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r0;
        java.lang.String r1;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlane(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public void <init>(net.sourceforge.plantuml.activitydiagram3.gtile.Gtile, net.sourceforge.plantuml.activitydiagram3.PositionedNote, net.sourceforge.plantuml.ISkinParam, boolean)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r64, $r66, $r68;
        net.sourceforge.plantuml.ISkinParam $r3, r47;
        net.sourceforge.plantuml.activitydiagram3.PositionedNote r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r5;
        net.sourceforge.plantuml.graphic.color.Colors $r6, $r33, $r46;
        net.sourceforge.plantuml.sequencediagram.NotePosition $r7, $r69, $r70;
        net.sourceforge.plantuml.sequencediagram.NoteType $r8, $r9;
        net.sourceforge.plantuml.skin.rose.Rose $r10;
        net.sourceforge.plantuml.ugraphic.UStroke $r12, r48, $r61;
        boolean $z0, $z1, z2;
        net.sourceforge.plantuml.ColorParam $r13, $r14;
        net.sourceforge.plantuml.graphic.FontConfiguration $r15, r52;
        net.sourceforge.plantuml.FontParam $r16;
        net.sourceforge.plantuml.creole.Sheet r17;
        net.sourceforge.plantuml.awt.geom.Dimension2D r19, $r21, $r22, $r24, $r26, $r28, $r29, $r65, $r67;
        net.sourceforge.plantuml.ugraphic.UTranslate $r20, $r23, $r25, $r27;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, $d21, $d22;
        net.sourceforge.plantuml.style.StyleSignature $r30;
        net.sourceforge.plantuml.style.StyleBuilder $r31;
        net.sourceforge.plantuml.style.Style $r32, r49;
        net.sourceforge.plantuml.style.PName $r34, $r38, $r44;
        net.sourceforge.plantuml.style.Value $r35, $r39, $r45;
        net.sourceforge.plantuml.api.ThemeStyle $r36, $r40, $r42;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r37, $r41, $r43;
        net.sourceforge.plantuml.ugraphic.color.HColor r50, r51;
        net.sourceforge.plantuml.LineBreakStrategy r53;
        net.sourceforge.plantuml.AlignmentParam $r54;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r55;
        net.sourceforge.plantuml.creole.CreoleMode $r56;
        net.sourceforge.plantuml.creole.SheetBuilder $r57;
        net.sourceforge.plantuml.cucadiagram.Display $r58;
        net.sourceforge.plantuml.creole.SheetBlock2 $r59;
        net.sourceforge.plantuml.creole.SheetBlock1 $r60;
        net.sourceforge.plantuml.svek.image.Opale $r62, $r63;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile;

        r4 := @parameter1: net.sourceforge.plantuml.activitydiagram3.PositionedNote;

        r47 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        z2 := @parameter3: boolean;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: double suppSpace> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: double suppSpace> = 20.0;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneNote()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneNote> = $r5;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        if $r6 == null goto label1;

        $r46 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        r47 = virtualinvoke $r46.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ISkinParam mute(net.sourceforge.plantuml.ISkinParam)>(r47);

     label1:
        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile> = r1;

        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.sequencediagram.NotePosition getNotePosition()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.sequencediagram.NotePosition notePosition> = $r7;

        $r8 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.sequencediagram.NoteType getType()>();

        $r9 = <net.sourceforge.plantuml.sequencediagram.NoteType: net.sourceforge.plantuml.sequencediagram.NoteType FLOATING_NOTE>;

        if $r8 != $r9 goto label2;

        z2 = 0;

     label2:
        $r10 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r10.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        $r12 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r48 = $r12;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label3;

        $r30 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r31 = interfaceinvoke r47.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r32 = virtualinvoke $r30.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r31);

        $r33 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        r49 = virtualinvoke $r32.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Style eventuallyOverride(net.sourceforge.plantuml.graphic.color.Colors)>($r33);

        $r34 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r35 = virtualinvoke r49.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r34);

        $r36 = interfaceinvoke r47.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r37 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r50 = interfaceinvoke $r35.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r36, $r37);

        $r38 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r39 = virtualinvoke r49.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r38);

        $r40 = interfaceinvoke r47.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r41 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r51 = interfaceinvoke $r39.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r40, $r41);

        $r42 = interfaceinvoke r47.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r43 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r52 = virtualinvoke r49.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r42, $r43);

        $r44 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r45 = virtualinvoke r49.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r44);

        d20 = interfaceinvoke $r45.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r53 = virtualinvoke r49.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        r48 = virtualinvoke r49.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label6;

     label3:
        $r13 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBackground>;

        r50 = virtualinvoke $r10.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r47, $r13);

        $r14 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        r51 = virtualinvoke $r10.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r47, $r14);

        $r15 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r16 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        specialinvoke $r15.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r47, $r16, null);

        r52 = $r15;

        $z1 = interfaceinvoke r47.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z1 == 0 goto label4;

        $d21 = 4.0;

        goto label5;

     label4:
        $d21 = 0.0;

     label5:
        d20 = $d21;

        r53 = interfaceinvoke r47.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

     label6:
        $r54 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam noteTextAlignment>;

        r55 = interfaceinvoke r47.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r54, null, 0, null);

        $r56 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $r57 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r52, r55, r47, $r56);

        $r58 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        r17 = interfaceinvoke $r57.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>($r58);

        $r59 = new net.sourceforge.plantuml.creole.SheetBlock2;

        $r60 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $d22 = interfaceinvoke r47.<net.sourceforge.plantuml.ISkinParam: double getPadding()>();

        specialinvoke $r60.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>(r17, r53, $d22);

        $r61 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r61.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.0);

        specialinvoke $r59.<net.sourceforge.plantuml.creole.SheetBlock2: void <init>(net.sourceforge.plantuml.creole.SheetBlock1,net.sourceforge.plantuml.creole.Stencil,net.sourceforge.plantuml.ugraphic.UStroke)>($r60, r0, $r61);

        $r62 = new net.sourceforge.plantuml.svek.image.Opale;

        specialinvoke $r62.<net.sourceforge.plantuml.svek.image.Opale: void <init>(double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.TextBlock,boolean,net.sourceforge.plantuml.ugraphic.UStroke)>(d20, r51, r50, $r59, z2, r48);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.svek.image.Opale opale> = $r62;

        $r63 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.svek.image.Opale opale>;

        $r64 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r65 = virtualinvoke $r63.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r64);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimNote> = $r65;

        $r66 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r67 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r66);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimTile> = $r67;

        $r68 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r19 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r68);

        $r69 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.sequencediagram.NotePosition getNotePosition()>();

        $r70 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition LEFT>;

        if $r69 != $r70 goto label7;

        $r25 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d10 = virtualinvoke r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r26 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimNote>;

        $d11 = virtualinvoke $r26.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d12 = $d10 - $d11;

        $d13 = $d12 / 2.0;

        specialinvoke $r25.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(0.0, $d13);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.UTranslate positionNote> = $r25;

        $r27 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r28 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimNote>;

        $d14 = virtualinvoke $r28.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d15 = $d14 + 20.0;

        $d16 = virtualinvoke r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r29 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimTile>;

        $d17 = virtualinvoke $r29.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d18 = $d16 - $d17;

        $d19 = $d18 / 2.0;

        specialinvoke $r27.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d15, $d19);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.UTranslate positionTile> = $r27;

        goto label8;

     label7:
        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r21 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimTile>;

        $d0 = virtualinvoke $r21.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 + 20.0;

        $d2 = virtualinvoke r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r22 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimNote>;

        $d3 = virtualinvoke $r22.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = $d2 - $d3;

        $d5 = $d4 / 2.0;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d5);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.UTranslate positionNote> = $r20;

        $r23 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d6 = virtualinvoke r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r24 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimTile>;

        $d7 = virtualinvoke $r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d8 = $d6 - $d7;

        $d9 = $d8 / 2.0;

        specialinvoke $r23.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(0.0, $d9);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.UTranslate positionTile> = $r23;

     label8:
        return;
    }

    protected net.sourceforge.plantuml.ugraphic.UTranslate getCoordImpl(java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r0;
        java.lang.String r1;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.ugraphic.UTranslate getCoord(java.lang.String)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.UTranslate positionTile>;

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r4);

        return $r5;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r1, $r2, $r4, $r5;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6;
        net.sourceforge.plantuml.Dimension2DDouble $r3;
        net.sourceforge.plantuml.graphic.StringBounder r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimNote>;

        $d0 = virtualinvoke $r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimTile>;

        $d1 = virtualinvoke $r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimTile>;

        $d3 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.awt.geom.Dimension2D dimNote>;

        $d4 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = $d3 + $d4;

        $d6 = $d5 + 20.0;

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d6, d2);

        return $r3;
    }

    protected void drawUInternal(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r4, $r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r5;
        net.sourceforge.plantuml.svek.image.Opale $r3;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.svek.image.Opale opale>;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.UTranslate positionNote>;

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        virtualinvoke $r3.<net.sourceforge.plantuml.svek.image.Opale: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r4);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.ugraphic.UTranslate positionTile>;

        $r7 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

        return;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r0;
        net.sourceforge.plantuml.svek.image.Opale $r1;
        int $i0, $i1;
        double $d0, d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.svek.image.Opale opale>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.svek.image.Opale: int getMarginX1()>();

        $i1 = neg $i0;

        $d0 = (double) $i1;

        return $d0;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.svek.image.Opale $r2, $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double $d0, $d1, $d2, d3;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d3 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.svek.image.Opale opale>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNoteOpale: net.sourceforge.plantuml.svek.image.Opale opale>;

        $i0 = virtualinvoke $r4.<net.sourceforge.plantuml.svek.image.Opale: int getMarginX1()>();

        $d1 = (double) $i0;

        $d2 = $d0 - $d1;

        return $d2;
    }
}
