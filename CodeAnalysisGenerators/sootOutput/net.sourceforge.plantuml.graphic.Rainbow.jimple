public class net.sourceforge.plantuml.graphic.Rainbow extends java.lang.Object
{
    private static final net.sourceforge.plantuml.skin.rose.Rose rose;
    private final java.util.List colors;
    private final int colorArrowSeparationSpace;

    private void <init>(int)
    {
        net.sourceforge.plantuml.graphic.Rainbow r0;
        java.util.ArrayList $r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.graphic.Rainbow;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.Rainbow: java.util.List colors> = $r1;

        r0.<net.sourceforge.plantuml.graphic.Rainbow: int colorArrowSeparationSpace> = i0;

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.graphic.Rainbow r0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.Rainbow;

        $r1 = r0.<net.sourceforge.plantuml.graphic.Rainbow: java.util.List colors>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public static net.sourceforge.plantuml.graphic.Rainbow none()
    {
        net.sourceforge.plantuml.graphic.Rainbow $r0;

        $r0 = new net.sourceforge.plantuml.graphic.Rainbow;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.Rainbow: void <init>(int)>(0);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.Rainbow fromColor(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0, r2;
        net.sourceforge.plantuml.graphic.HtmlColorAndStyle $r1;
        net.sourceforge.plantuml.graphic.Rainbow $r3, $r4;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r0 != null goto label1;

        $r4 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow none()>();

        return $r4;

     label1:
        $r1 = new net.sourceforge.plantuml.graphic.HtmlColorAndStyle;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.HtmlColorAndStyle: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>(r0, r2);

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.graphic.HtmlColorAndStyle)>($r1);

        return $r3;
    }

    public static net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.ISkinParam)
    {
        boolean $z0;
        net.sourceforge.plantuml.ISkinParam r0;
        net.sourceforge.plantuml.ColorParam $r1, $r5, $r6;
        net.sourceforge.plantuml.skin.rose.Rose $r2, $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r8;
        net.sourceforge.plantuml.ColorParam[] $r4;
        net.sourceforge.plantuml.graphic.Rainbow $r9;
        java.lang.IllegalStateException $r10;

        r0 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label1:
        $r2 = <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r1 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r0, $r1);

        $r7 = <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r4 = newarray (net.sourceforge.plantuml.ColorParam)[2];

        $r5 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrowHead>;

        $r4[0] = $r5;

        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        $r4[1] = $r6;

        r8 = virtualinvoke $r7.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r0, null, $r4);

        $r9 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow fromColor(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>(r3, r8);

        return $r9;
    }

    public static net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.ugraphic.color.HColorSet, net.sourceforge.plantuml.api.ThemeStyle)
    {
        net.sourceforge.plantuml.style.Style r0;
        net.sourceforge.plantuml.style.PName $r1;
        net.sourceforge.plantuml.style.Value $r2;
        net.sourceforge.plantuml.api.ThemeStyle r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r5;
        net.sourceforge.plantuml.graphic.Rainbow $r6;

        r0 := @parameter0: net.sourceforge.plantuml.style.Style;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        r3 := @parameter2: net.sourceforge.plantuml.api.ThemeStyle;

        $r1 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r1);

        r5 = interfaceinvoke $r2.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>(r3, r4);

        $r6 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow fromColor(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>(r5, null);

        return $r6;
    }

    public net.sourceforge.plantuml.graphic.Rainbow withDefault(net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.graphic.Rainbow r0, r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.graphic.Rainbow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.Rainbow;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i0 != 0 goto label1;

        return r1;

     label1:
        return r0;
    }

    public static net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.graphic.HtmlColorAndStyle)
    {
        net.sourceforge.plantuml.graphic.Rainbow $r0;
        net.sourceforge.plantuml.graphic.HtmlColorAndStyle r2, $r5;
        java.util.List $r3;
        java.lang.Object $r4;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.HtmlColorAndStyle;

        $r0 = new net.sourceforge.plantuml.graphic.Rainbow;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.Rainbow: void <init>(int)>(0);

        $r3 = $r0.<net.sourceforge.plantuml.graphic.Rainbow: java.util.List colors>;

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r5 = (net.sourceforge.plantuml.graphic.HtmlColorAndStyle) $r4;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r5);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.ISkinParam, java.lang.String, int) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        java.lang.String r0, r4;
        net.sourceforge.plantuml.graphic.Rainbow $r1, $r8;
        int i0, i1, i2;
        java.lang.String[] r3;
        net.sourceforge.plantuml.ISkinParam r5;
        java.util.List $r6;
        net.sourceforge.plantuml.graphic.HtmlColorAndStyle $r7;

        r5 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if r0 != null goto label1;

        $r8 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow none()>();

        return $r8;

     label1:
        $r1 = new net.sourceforge.plantuml.graphic.Rainbow;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.Rainbow: void <init>(int)>(i0);

        r3 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(";");

        i1 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r4 = r3[i2];

        $r6 = $r1.<net.sourceforge.plantuml.graphic.Rainbow: java.util.List colors>;

        $r7 = staticinvoke <net.sourceforge.plantuml.graphic.HtmlColorAndStyle: net.sourceforge.plantuml.graphic.HtmlColorAndStyle build(net.sourceforge.plantuml.ISkinParam,java.lang.String)>(r5, r4);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        i2 = i2 + 1;

        goto label2;

     label3:
        return $r1;
    }

    public boolean isInvisible()
    {
        net.sourceforge.plantuml.graphic.Rainbow r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.graphic.HtmlColorAndStyle r4;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r5;

        r0 := @this: net.sourceforge.plantuml.graphic.Rainbow;

        $r1 = r0.<net.sourceforge.plantuml.graphic.Rainbow: java.util.List colors>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.graphic.HtmlColorAndStyle) $r3;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.HtmlColorAndStyle: net.sourceforge.plantuml.cucadiagram.LinkStyle getStyle()>();

        $z1 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.LinkStyle: boolean isInvisible()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public java.util.List getColors()
    {
        net.sourceforge.plantuml.graphic.Rainbow r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.Rainbow;

        $r1 = r0.<net.sourceforge.plantuml.graphic.Rainbow: java.util.List colors>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getColor()
    {
        net.sourceforge.plantuml.graphic.Rainbow r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.graphic.HtmlColorAndStyle $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;

        r0 := @this: net.sourceforge.plantuml.graphic.Rainbow;

        $r1 = r0.<net.sourceforge.plantuml.graphic.Rainbow: java.util.List colors>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.graphic.HtmlColorAndStyle) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.HtmlColorAndStyle: net.sourceforge.plantuml.ugraphic.color.HColor getArrowColor()>();

        return $r4;
    }

    public int getColorArrowSeparationSpace()
    {
        net.sourceforge.plantuml.graphic.Rainbow r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.graphic.Rainbow;

        $i0 = r0.<net.sourceforge.plantuml.graphic.Rainbow: int colorArrowSeparationSpace>;

        return $i0;
    }

    public int size()
    {
        net.sourceforge.plantuml.graphic.Rainbow r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.graphic.Rainbow;

        $r1 = r0.<net.sourceforge.plantuml.graphic.Rainbow: java.util.List colors>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.skin.rose.Rose $r0;

        $r0 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.skin.rose.Rose rose> = $r0;

        return;
    }
}
