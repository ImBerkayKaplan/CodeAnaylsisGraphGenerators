public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered extends net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate
{
    private final double minWidth;
    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: double minWidth> = d0;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r4;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r2;
        net.sourceforge.plantuml.ugraphic.UTranslate r3;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.ugraphic.UTranslate getUTranslateInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r4);

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r1, $r2, $r4;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionSlow(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal> = $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal>;

        return $r2;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionSlow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, $r3, $r5;
        double $d0, d1, $d2, $d3, $d4;
        boolean $z0;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        d1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: double getPoint2(double,net.sourceforge.plantuml.graphic.StringBounder)>($d0, r1);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        $r5 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        specialinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r6, d1, $d4);

        return $r5;

     label1:
        $r3 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        specialinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double,double)>($r4, d1, $d2, $d3);

        return $r3;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        double $d0, $d1, $d2, $d3;
        byte $b0;
        net.sourceforge.plantuml.Dimension2DDouble $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtileDelegated()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: double minWidth>;

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: double minWidth>;

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d2, $d3);

        return $r4;

     label1:
        return r3;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getUTranslateInternal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UTranslate r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtileDelegated()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 - $d1;

        $d3 = $d2 / 2.0;

        r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d3);

        return r5;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r1;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtileDelegated()>();

        if r0 != $r2 goto label1;

        $r4 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.ugraphic.UTranslate getUTranslateInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        return $r4;

     label1:
        return null;
    }

    private double getPoint2(double, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7;
        byte $b0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        d2 := @parameter0: double;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtileDelegated()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: double minWidth>;

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $d3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: double minWidth>;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d5 = $d3 - $d4;

        $d6 = d5 / 2.0;

        $d7 = d2 + $d6;

        return $d7;

     label1:
        return d2;
    }

    public volatile net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }
}
