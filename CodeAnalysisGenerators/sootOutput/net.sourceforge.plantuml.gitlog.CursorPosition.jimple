public class net.sourceforge.plantuml.gitlog.CursorPosition extends java.lang.Object
{
    private final int x;
    private final int y;
    private final net.sourceforge.plantuml.gitlog.GitTextArea source;

    public void <init>(net.sourceforge.plantuml.gitlog.GitTextArea, int, int)
    {
        net.sourceforge.plantuml.gitlog.CursorPosition r0;
        net.sourceforge.plantuml.gitlog.GitTextArea r1;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        r1 := @parameter0: net.sourceforge.plantuml.gitlog.GitTextArea;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.GitTextArea source> = r1;

        r0.<net.sourceforge.plantuml.gitlog.CursorPosition: int x> = i0;

        r0.<net.sourceforge.plantuml.gitlog.CursorPosition: int y> = i1;

        return;
    }

    private java.lang.String getCurrentLine()
    {
        net.sourceforge.plantuml.gitlog.CursorPosition r0;
        int $i0;
        net.sourceforge.plantuml.gitlog.GitTextArea $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        $r1 = r0.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.GitTextArea source>;

        $i0 = r0.<net.sourceforge.plantuml.gitlog.CursorPosition: int y>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.gitlog.GitTextArea: java.lang.String getLine(int)>($i0);

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6;
        net.sourceforge.plantuml.gitlog.CursorPosition r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r7;

        r2 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = r2.<net.sourceforge.plantuml.gitlog.CursorPosition: int x>;

        $i1 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i2 = r2.<net.sourceforge.plantuml.gitlog.CursorPosition: int y>;

        $i3 = $i2 + 1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public net.sourceforge.plantuml.gitlog.CursorPosition move(int, int)
    {
        net.sourceforge.plantuml.gitlog.CursorPosition $r0, r1;
        int i0, $i1, i2, $i3, $i4, $i5;
        net.sourceforge.plantuml.gitlog.GitTextArea $r2;

        r1 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r0 = new net.sourceforge.plantuml.gitlog.CursorPosition;

        $r2 = r1.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.GitTextArea source>;

        $i1 = r1.<net.sourceforge.plantuml.gitlog.CursorPosition: int x>;

        $i5 = $i1 + i0;

        $i3 = r1.<net.sourceforge.plantuml.gitlog.CursorPosition: int y>;

        $i4 = $i3 + i2;

        specialinvoke $r0.<net.sourceforge.plantuml.gitlog.CursorPosition: void <init>(net.sourceforge.plantuml.gitlog.GitTextArea,int,int)>($r2, $i5, $i4);

        return $r0;
    }

    public boolean matches(java.lang.String)
    {
        net.sourceforge.plantuml.gitlog.CursorPosition r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String r1, $r2, r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        r3 := @parameter0: java.lang.String;

        $i0 = r0.<net.sourceforge.plantuml.gitlog.CursorPosition: int x>;

        if $i0 >= 0 goto label1;

        return 0;

     label1:
        r1 = specialinvoke r0.<net.sourceforge.plantuml.gitlog.CursorPosition: java.lang.String getCurrentLine()>();

        $i1 = r0.<net.sourceforge.plantuml.gitlog.CursorPosition: int x>;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= $i2 goto label2;

        return 0;

     label2:
        $i3 = r0.<net.sourceforge.plantuml.gitlog.CursorPosition: int x>;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i3);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(r3);

        return $z0;
    }

    public java.lang.String getCommentInLine()
    {
        net.sourceforge.plantuml.gitlog.CursorPosition r0;
        java.lang.String r1, $r2;
        int i0, i1, i2, $i3;

        r0 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.gitlog.CursorPosition: java.lang.String getCurrentLine()>();

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>("*");

        if i0 != -1 goto label1;

        return null;

     label1:
        i1 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>("(", i0);

        if i1 != -1 goto label2;

        return null;

     label2:
        i2 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(")", i1);

        if i2 != -1 goto label3;

        return null;

     label3:
        $i3 = i1 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i3, i2);

        return $r2;
    }

    public static java.lang.String getCommitNameInLine(java.lang.String)
    {
        int i0, i1;
        java.lang.String $r0, r1, r2, r3;

        r2 := @parameter0: java.lang.String;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("*");

        if i0 != -1 goto label1;

        return null;

     label1:
        $r0 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[-.*|/\\\\]", "");

        r3 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        i1 = virtualinvoke r3.<java.lang.String: int indexOf(java.lang.String)>(" ");

        if i1 != -1 goto label2;

        return r3;

     label2:
        r1 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        return r1;
    }

    public java.lang.String getCommitDefinition()
    {
        net.sourceforge.plantuml.gitlog.CursorPosition r0;
        java.lang.String $r1, $r2, $r3;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.gitlog.CursorPosition: java.lang.String getCurrentLine()>();

        $i0 = r0.<net.sourceforge.plantuml.gitlog.CursorPosition: int x>;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i0);

        $r3 = staticinvoke <net.sourceforge.plantuml.gitlog.CursorPosition: java.lang.String getCommitNameInLine(java.lang.String)>($r2);

        return $r3;
    }

    public net.sourceforge.plantuml.gitlog.Commit getCommit()
    {
        net.sourceforge.plantuml.gitlog.Commit $r0;
        net.sourceforge.plantuml.gitlog.CursorPosition r1;
        java.lang.String $r2;

        r1 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        $r0 = new net.sourceforge.plantuml.gitlog.Commit;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.gitlog.CursorPosition: java.lang.String getCommitDefinition()>();

        specialinvoke $r0.<net.sourceforge.plantuml.gitlog.Commit: void <init>(java.lang.String,net.sourceforge.plantuml.gitlog.CursorPosition)>($r2, r1);

        return $r0;
    }

    public net.sourceforge.plantuml.gitlog.CursorPosition getDownFromHere()
    {
        net.sourceforge.plantuml.gitlog.CursorPosition r0, $r1;

        r0 := @this: net.sourceforge.plantuml.gitlog.CursorPosition;

        $r1 = staticinvoke <net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition getDownFromInternal(net.sourceforge.plantuml.gitlog.CursorPosition)>(r0);

        return $r1;
    }

    private static net.sourceforge.plantuml.gitlog.CursorPosition getDownFromInternal(net.sourceforge.plantuml.gitlog.CursorPosition)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49;
        java.lang.StringBuilder $r0, $r2, $r3;
        java.io.PrintStream $r1;
        java.lang.String $r4, $r6;
        java.lang.UnsupportedOperationException $r5;
        net.sourceforge.plantuml.gitlog.CursorPosition $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, r34;

        r34 := @parameter0: net.sourceforge.plantuml.gitlog.CursorPosition;

     label01:
        $z43 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("* ");

        if $z43 == 0 goto label02;

        return r34;

     label02:
        $z0 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/");

        if $z0 == 0 goto label03;

        $r33 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 0);

        $z42 = virtualinvoke $r33.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("_|/");

        if $z42 == 0 goto label03;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 0);

        goto label01;

     label03:
        $z1 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("_");

        if $z1 == 0 goto label04;

        $r32 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 0);

        $z41 = virtualinvoke $r32.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("_|_");

        if $z41 == 0 goto label04;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 0);

        goto label01;

     label04:
        $z2 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("_");

        if $z2 == 0 goto label05;

        $r31 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 1);

        $z40 = virtualinvoke $r31.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/");

        if $z40 == 0 goto label05;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 1);

        goto label01;

     label05:
        $z3 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("|");

        if $z3 == 0 goto label06;

        $r30 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        $z39 = virtualinvoke $r30.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("* ");

        if $z39 == 0 goto label06;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        goto label01;

     label06:
        $z4 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("|");

        if $z4 == 0 goto label07;

        $r29 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        $z38 = virtualinvoke $r29.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("|");

        if $z38 == 0 goto label07;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        goto label01;

     label07:
        $z5 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z5 == 0 goto label08;

        $r27 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        $z36 = virtualinvoke $r27.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>(" \\");

        if $z36 == 0 goto label08;

        $r28 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(2, 2);

        $z37 = virtualinvoke $r28.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("|");

        if $z37 == 0 goto label08;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(2, 2);

        goto label01;

     label08:
        $z44 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z44 == 0 goto label09;

        $r25 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        $z34 = virtualinvoke $r25.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>(" \\");

        if $z34 == 0 goto label09;

        $r26 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(2, 2);

        $z35 = virtualinvoke $r26.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("\\");

        if $z35 == 0 goto label09;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(2, 2);

        goto label01;

     label09:
        $z45 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z45 == 0 goto label10;

        $r23 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-1, 1);

        $z32 = virtualinvoke $r23.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/ ");

        if $z32 == 0 goto label10;

        $r24 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 2);

        $z33 = virtualinvoke $r24.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("* ");

        if $z33 == 0 goto label10;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 2);

        goto label01;

     label10:
        $z46 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z46 == 0 goto label11;

        $r22 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-3, 1);

        $z31 = virtualinvoke $r22.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("_|/ ");

        if $z31 == 0 goto label11;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-3, 1);

        goto label01;

     label11:
        $z6 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z6 == 0 goto label12;

        $r20 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-1, 1);

        $z29 = virtualinvoke $r20.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/ ");

        if $z29 == 0 goto label12;

        $r21 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 2);

        $z30 = virtualinvoke $r21.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z30 == 0 goto label12;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 2);

        goto label01;

     label12:
        $z47 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z47 == 0 goto label13;

        $r19 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-3, 1);

        $z28 = virtualinvoke $r19.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("_|/");

        if $z28 == 0 goto label13;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-3, 1);

        goto label01;

     label13:
        $z7 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z7 == 0 goto label14;

        $r17 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        $z26 = virtualinvoke $r17.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>(" \\");

        if $z26 == 0 goto label14;

        $r18 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(1, 2);

        $z27 = virtualinvoke $r18.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/ ");

        if $z27 == 0 goto label14;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(1, 2);

        goto label01;

     label14:
        $z48 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("| ");

        if $z48 == 0 goto label15;

        $r15 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        $z24 = virtualinvoke $r15.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>(" \\");

        if $z24 == 0 goto label15;

        $r16 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(2, 2);

        $z25 = virtualinvoke $r16.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("* ");

        if $z25 == 0 goto label15;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(2, 2);

        goto label01;

     label15:
        $z49 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("\\ ");

        if $z49 == 0 goto label16;

        $r14 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(1, 1);

        $z23 = virtualinvoke $r14.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("* ");

        if $z23 == 0 goto label16;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(1, 1);

        goto label01;

     label16:
        $z8 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>(" \\");

        if $z8 == 0 goto label17;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(2, 1);

        goto label01;

     label17:
        $z9 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("\\ ");

        if $z9 == 0 goto label18;

        $r13 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        $z22 = virtualinvoke $r13.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/ ");

        if $z22 == 0 goto label18;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(0, 1);

        goto label01;

     label18:
        $z10 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("\\ ");

        if $z10 == 0 goto label19;

        $r12 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(1, 1);

        $z21 = virtualinvoke $r12.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("\\ ");

        if $z21 == 0 goto label19;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(1, 1);

        goto label01;

     label19:
        $z11 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("\\ ");

        if $z11 == 0 goto label20;

        $r11 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(1, 1);

        $z20 = virtualinvoke $r11.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("|");

        if $z20 == 0 goto label20;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(1, 1);

        goto label01;

     label20:
        $z12 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/ ");

        if $z12 == 0 goto label21;

        $r10 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-1, 1);

        $z19 = virtualinvoke $r10.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/ ");

        if $z19 == 0 goto label21;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-1, 1);

        goto label01;

     label21:
        $z13 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/ ");

        if $z13 == 0 goto label22;

        $r9 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 1);

        $z18 = virtualinvoke $r9.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/| ");

        if $z18 == 0 goto label22;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-2, 1);

        goto label01;

     label22:
        $z14 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/");

        if $z14 == 0 goto label23;

        $r8 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-1, 1);

        $z17 = virtualinvoke $r8.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("* ");

        if $z17 == 0 goto label23;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-1, 1);

        goto label01;

     label23:
        $z15 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("/");

        if $z15 == 0 goto label24;

        $r7 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-1, 1);

        $z16 = virtualinvoke $r7.<net.sourceforge.plantuml.gitlog.CursorPosition: boolean matches(java.lang.String)>("|");

        if $z16 == 0 goto label24;

        r34 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: net.sourceforge.plantuml.gitlog.CursorPosition move(int,int)>(-1, 1);

        goto label01;

     label24:
        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r34);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r4);

        $r5 = new java.lang.UnsupportedOperationException;

        $r6 = virtualinvoke r34.<net.sourceforge.plantuml.gitlog.CursorPosition: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r5;
    }
}
