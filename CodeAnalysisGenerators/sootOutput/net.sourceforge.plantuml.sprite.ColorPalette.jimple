public class net.sourceforge.plantuml.sprite.ColorPalette extends java.lang.Object
{
    private static final java.lang.String colorValue;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        net.sourceforge.plantuml.sprite.ColorPalette r0;

        r0 := @this: net.sourceforge.plantuml.sprite.ColorPalette;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public char getCharFor(java.awt.Color)
    {
        net.sourceforge.plantuml.sprite.ColorPalette r0;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r1;
        java.awt.Color r2;
        char $c0;

        r0 := @this: net.sourceforge.plantuml.sprite.ColorPalette;

        r2 := @parameter0: java.awt.Color;

        $r1 = new net.sourceforge.plantuml.ugraphic.color.HColorSimple;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: void <init>(java.awt.Color,boolean)>(r2, 0);

        $c0 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.ColorPalette: char getCharFor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r1);

        return $c0;
    }

    public char getCharFor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        java.lang.String $r0, $r2;
        int $i0, i4;
        boolean $z0;
        java.lang.AssertionError $r1;
        char c1, c3;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;
        net.sourceforge.plantuml.sprite.ColorPalette r4;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r5, $r6;
        double d0, d1;
        byte $b2;

        r4 := @this: net.sourceforge.plantuml.sprite.ColorPalette;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        c3 = 0;

        d1 = 1.7976931348623157E308;

        i4 = 0;

     label1:
        $r0 = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label3;

        $r2 = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        c1 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i4);

        $r5 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) r3;

        $r6 = specialinvoke r4.<net.sourceforge.plantuml.sprite.ColorPalette: net.sourceforge.plantuml.ugraphic.color.HColorSimple getHtmlColorSimpleFor(char)>(c1);

        d0 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: double distance(net.sourceforge.plantuml.ugraphic.color.HColorSimple)>($r6);

        $b2 = d0 cmpg d1;

        if $b2 >= 0 goto label2;

        c3 = c1;

        d1 = d0;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        $z0 = <net.sourceforge.plantuml.sprite.ColorPalette: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        if c3 != 0 goto label4;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label4:
        return c3;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColorSimple getHtmlColorSimpleFor(char)
    {
        net.sourceforge.plantuml.sprite.ColorPalette r0;
        char c0;
        java.awt.Color $r1, r3;
        java.lang.Object $r2;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r4;

        r0 := @this: net.sourceforge.plantuml.sprite.ColorPalette;

        c0 := @parameter0: char;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.ColorPalette: java.awt.Color getColorFor(char)>(c0);

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        r3 = (java.awt.Color) $r2;

        $r4 = new net.sourceforge.plantuml.ugraphic.color.HColorSimple;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: void <init>(java.awt.Color,boolean)>(r3, 0);

        return $r4;
    }

    public java.awt.Color getColorFor(char)
    {
        char c0;
        java.lang.String $r0;
        int i1, $i2, i3, $i4, $i5, i6, $i7, $i8, i9;
        java.awt.Color $r1;
        net.sourceforge.plantuml.sprite.ColorPalette r2;

        r2 := @this: net.sourceforge.plantuml.sprite.ColorPalette;

        c0 := @parameter0: char;

        $r0 = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        i1 = virtualinvoke $r0.<java.lang.String: int indexOf(int)>(c0);

        if i1 != -1 goto label1;

        return null;

     label1:
        $i2 = i1 % 4;

        i3 = $i2 * 85;

        $i4 = i1 / 4;

        $i5 = $i4 % 4;

        i6 = $i5 * 85;

        $i7 = i1 / 16;

        $i8 = $i7 % 4;

        i9 = $i8 * 85;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i9, i6, i3);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <net.sourceforge.plantuml.sprite.ColorPalette: java.lang.String colorValue> = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        $r0 = class "Lnet/sourceforge/plantuml/sprite/ColorPalette;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.sprite.ColorPalette: boolean $assertionsDisabled> = $z1;

        return;
    }
}
