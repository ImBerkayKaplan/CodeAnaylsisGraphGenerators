public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink extends net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;

    public void <init>(java.util.List, java.util.List, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink r0;
        java.util.List r1, r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r4, r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.graphic.Rainbow r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r4 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r6 := @parameter5: net.sourceforge.plantuml.graphic.StringBounder;

        r7 := @parameter6: net.sourceforge.plantuml.graphic.Rainbow;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: void <init>(java.util.List,java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2, r3, r4, r5, r6);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r7;

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addLinks(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink r2;
        java.util.List $r3, $r7;
        java.lang.Object $r4, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r5, $r12;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink$ConnectionVerticalTop $r6;
        net.sourceforge.plantuml.activitydiagram3.Branch $r9;
        net.sourceforge.plantuml.graphic.StringBounder r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r11;
        boolean $z1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink$ConnectionVerticalBottom $r13;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink;

        r10 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink: java.util.List tiles>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r4;

        $r6 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink$ConnectionVerticalTop;

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink: java.util.List branches>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r8;

        specialinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink$ConnectionVerticalTop: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.Branch)>(r2, r5, $r9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r11 = interfaceinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r10);

        $z1 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z1 == 0 goto label1;

        $r13 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink$ConnectionVerticalBottom;

        specialinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink$ConnectionVerticalBottom: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, r5);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

     label1:
        $r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>(r2, $r0);

        return $r12;
    }

    static net.sourceforge.plantuml.graphic.Rainbow access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink r0;
        net.sourceforge.plantuml.graphic.Rainbow $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        return $r1;
    }
}
