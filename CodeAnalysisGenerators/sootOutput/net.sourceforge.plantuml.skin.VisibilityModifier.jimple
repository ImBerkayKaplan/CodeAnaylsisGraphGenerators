public final enum class net.sourceforge.plantuml.skin.VisibilityModifier extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD;
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD;
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD;
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD;
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_METHOD;
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_METHOD;
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_METHOD;
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_METHOD;
    public static final enum net.sourceforge.plantuml.skin.VisibilityModifier IE_MANDATORY;
    private final net.sourceforge.plantuml.ColorParam foregroundParam;
    private final net.sourceforge.plantuml.ColorParam backgroundParam;
    private final char unicode;
    private static final net.sourceforge.plantuml.skin.VisibilityModifier[] $VALUES;

    public static net.sourceforge.plantuml.skin.VisibilityModifier[] values()
    {
        net.sourceforge.plantuml.skin.VisibilityModifier[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.skin.VisibilityModifier[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.skin.VisibilityModifier valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.skin.VisibilityModifier $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/skin/VisibilityModifier;", r0);

        $r2 = (net.sourceforge.plantuml.skin.VisibilityModifier) $r1;

        return $r2;
    }

    public static java.lang.String regexForVisibilityCharacterInClassName()
    {
        return "[-#+~]";
    }

    private void <init>(java.lang.String, int, char, net.sourceforge.plantuml.ColorParam, net.sourceforge.plantuml.ColorParam)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier r0;
        java.lang.String r1;
        int i0;
        net.sourceforge.plantuml.ColorParam r2, r3;
        char c1;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        r2 := @parameter3: net.sourceforge.plantuml.ColorParam;

        r3 := @parameter4: net.sourceforge.plantuml.ColorParam;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.ColorParam foregroundParam> = r2;

        r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.ColorParam backgroundParam> = r3;

        r0.<net.sourceforge.plantuml.skin.VisibilityModifier: char unicode> = c1;

        return;
    }

    public net.sourceforge.plantuml.graphic.UDrawable getUDrawable(int, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier$1 $r0;
        net.sourceforge.plantuml.skin.VisibilityModifier r1;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, r3;

        r1 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        i0 := @parameter0: int;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.skin.VisibilityModifier$1;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.VisibilityModifier$1: void <init>(net.sourceforge.plantuml.skin.VisibilityModifier,int,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, i0, r2, r3);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getUBlock(int, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, boolean)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier$2 $r0;
        net.sourceforge.plantuml.skin.VisibilityModifier r1;
        int i0;
        boolean z0;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, r3;

        r1 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        i0 := @parameter0: int;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        z0 := @parameter3: boolean;

        $r0 = new net.sourceforge.plantuml.skin.VisibilityModifier$2;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: void <init>(net.sourceforge.plantuml.skin.VisibilityModifier,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, i0, z0, r2, r3);

        return $r0;
    }

    private void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic, int, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, double, double)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0, r2;
        net.sourceforge.plantuml.ugraphic.UBackground $r1, $r7;
        net.sourceforge.plantuml.skin.VisibilityModifier r3;
        int[] $r4;
        int $i0, $i1, i2, i3;
        double d0, d1;
        java.lang.IllegalStateException $r5;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic r8, r9, r10;

        r3 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        r8 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i2 := @parameter1: int;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r0 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter4: double;

        d1 := @parameter5: double;

        if r0 != null goto label01;

        $r6 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        goto label02;

     label01:
        $r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

     label02:
        r10 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r2);

        i3 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: int ensureEven(int)>(i2);

        $r4 = <net.sourceforge.plantuml.skin.VisibilityModifier$3: int[] $SwitchMap$net$sourceforge$plantuml$skin$VisibilityModifier>;

        $i0 = virtualinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: int ordinal()>();

        $i1 = $r4[$i0];

        tableswitch($i1)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            case 8: goto label10;
            case 9: goto label11;
            default: goto label12;
        };

     label03:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawTriangle(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 0, i3, d0, d1);

        goto label13;

     label04:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawSquare(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 0, i3, d0, d1);

        goto label13;

     label05:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawDiamond(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 0, i3, d0, d1);

        goto label13;

     label06:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawCircle(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 0, i3, d0, d1);

        goto label13;

     label07:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawTriangle(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 1, i3, d0, d1);

        goto label13;

     label08:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawSquare(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 1, i3, d0, d1);

        goto label13;

     label09:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawDiamond(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 1, i3, d0, d1);

        goto label13;

     label10:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawCircle(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 1, i3, d0, d1);

        goto label13;

     label11:
        specialinvoke r3.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawCircle(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,int,double,double)>(r10, 1, i3, d0, d1);

        goto label13;

     label12:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label13:
        return;
    }

    private void drawSquare(net.sourceforge.plantuml.ugraphic.UGraphic, boolean, int, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        double d0, d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.URectangle $r3;
        int i0, $i1, $i2;
        net.sourceforge.plantuml.skin.VisibilityModifier r4;
        boolean z0;

        r4 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        $r1 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = d0 + 2.0;

        $d2 = d1 + 2.0;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, $d2);

        $r2 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r3 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $i1 = i0 - 4;

        $d5 = (double) $i1;

        $i2 = i0 - 4;

        $d4 = (double) $i2;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d5, $d4);

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        return;
    }

    private void drawCircle(net.sourceforge.plantuml.ugraphic.UGraphic, boolean, int, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        double d0, d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UEllipse $r3;
        int i0, $i1, $i2;
        net.sourceforge.plantuml.skin.VisibilityModifier r4;
        boolean z0;

        r4 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        $r1 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = d0 + 2.0;

        $d2 = d1 + 2.0;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, $d2);

        $r2 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r3 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        $i1 = i0 - 4;

        $d5 = (double) $i1;

        $i2 = i0 - 4;

        $d4 = (double) $i2;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>($d5, $d4);

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        return;
    }

    private static int ensureEven(int)
    {
        int $i0, i1;

        i1 := @parameter0: int;

        $i0 = i1 % 2;

        if $i0 != 1 goto label1;

        i1 = i1 + -1;

     label1:
        return i1;
    }

    private void drawDiamond(net.sourceforge.plantuml.ugraphic.UGraphic, boolean, int, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11, $d12;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.skin.VisibilityModifier r5;
        boolean z0;
        int i0, i1;

        r5 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        d10 := @parameter3: double;

        d11 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        i1 = i0 + -2;

        $d0 = (double) i1;

        $d1 = $d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d1, 0.0);

        $d4 = (double) i1;

        $d2 = (double) i1;

        $d3 = $d2 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d4, $d3);

        $d5 = (double) i1;

        $d7 = $d5 / 2.0;

        $d6 = (double) i1;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d7, $d6);

        $d8 = (double) i1;

        $d9 = $d8 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, $d9);

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d12 = d10 + 1.0;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d12, d11);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        return;
    }

    private void drawTriangle(net.sourceforge.plantuml.ugraphic.UGraphic, boolean, int, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double $d0, $d1, $d2, $d3, $d4, d5, d6, $d7;
        int $i0, $i1, i2, i3;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.skin.VisibilityModifier r5;
        boolean z0;

        r5 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        z0 := @parameter1: boolean;

        i2 := @parameter2: int;

        d5 := @parameter3: double;

        d6 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        i3 = i2 + -2;

        $d0 = (double) i3;

        $d1 = $d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d1, 1.0);

        $i0 = i3 - 1;

        $d2 = (double) $i0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, $d2);

        $d4 = (double) i3;

        $i1 = i3 - 1;

        $d3 = (double) $i1;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d4, $d3);

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d7 = d5 + 1.0;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, d6);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        return;
    }

    public static boolean isVisibilityCharacter(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int $i0;
        char c1, $c2;

        r0 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if $i0 > 2 goto label1;

        return 0;

     label1:
        c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(0);

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(1);

        if $c2 != c1 goto label2;

        return 0;

     label2:
        if c1 != 45 goto label3;

        return 1;

     label3:
        if c1 != 35 goto label4;

        return 1;

     label4:
        if c1 != 43 goto label5;

        return 1;

     label5:
        if c1 != 126 goto label6;

        return 1;

     label6:
        if c1 != 42 goto label7;

        return 1;

     label7:
        return 0;
    }

    public static net.sourceforge.plantuml.skin.VisibilityModifier getByUnicode(char)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier[] r0;
        int i0, i3;
        net.sourceforge.plantuml.skin.VisibilityModifier r1;
        char c1, $c2;

        c1 := @parameter0: char;

        r0 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier[] values()>();

        i0 = lengthof r0;

        i3 = 0;

     label1:
        if i3 >= i0 goto label3;

        r1 = r0[i3];

        $c2 = r1.<net.sourceforge.plantuml.skin.VisibilityModifier: char unicode>;

        if $c2 != c1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    public static java.lang.String replaceVisibilityModifierByUnicodeChar(java.lang.String, boolean)
    {
        java.lang.String r0, $r5, $r7;
        boolean z0;
        net.sourceforge.plantuml.skin.VisibilityModifier r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6;
        char $c0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier(java.lang.CharSequence,boolean)>(r0, z0);

        if r1 != null goto label1;

        return r0;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c0 = r1.<net.sourceforge.plantuml.skin.VisibilityModifier: char unicode>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier(java.lang.CharSequence, boolean)
    {
        java.lang.CharSequence r0;
        int $i0;
        char c1, $c2;
        boolean z0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1, $r2;

        r0 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if $i0 > 2 goto label1;

        return null;

     label1:
        c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(0);

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(1);

        if $c2 != c1 goto label2;

        return null;

     label2:
        if z0 == 0 goto label3;

        $r2 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifierForField(char)>(c1);

        return $r2;

     label3:
        $r1 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifierForMethod(char)>(c1);

        return $r1;
    }

    private static net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifierForField(char)
    {
        char c0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r0, $r1, $r2, $r3, $r4;

        c0 := @parameter0: char;

        if c0 != 45 goto label1;

        $r4 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD>;

        return $r4;

     label1:
        if c0 != 35 goto label2;

        $r3 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD>;

        return $r3;

     label2:
        if c0 != 43 goto label3;

        $r2 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD>;

        return $r2;

     label3:
        if c0 != 126 goto label4;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD>;

        return $r1;

     label4:
        if c0 != 42 goto label5;

        $r0 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier IE_MANDATORY>;

        return $r0;

     label5:
        return null;
    }

    private static net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifierForMethod(char)
    {
        char c0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r0, $r1, $r2, $r3, $r4;

        c0 := @parameter0: char;

        if c0 != 45 goto label1;

        $r4 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_METHOD>;

        return $r4;

     label1:
        if c0 != 35 goto label2;

        $r3 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_METHOD>;

        return $r3;

     label2:
        if c0 != 43 goto label3;

        $r2 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_METHOD>;

        return $r2;

     label3:
        if c0 != 126 goto label4;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_METHOD>;

        return $r1;

     label4:
        if c0 != 42 goto label5;

        $r0 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier IE_MANDATORY>;

        return $r0;

     label5:
        return null;
    }

    public final net.sourceforge.plantuml.ColorParam getForeground()
    {
        net.sourceforge.plantuml.skin.VisibilityModifier r0;
        net.sourceforge.plantuml.ColorParam $r1;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        $r1 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.ColorParam foregroundParam>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ColorParam getBackground()
    {
        net.sourceforge.plantuml.skin.VisibilityModifier r0;
        net.sourceforge.plantuml.ColorParam $r1;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        $r1 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.ColorParam backgroundParam>;

        return $r1;
    }

    public java.lang.String getXmiVisibility()
    {
        net.sourceforge.plantuml.skin.VisibilityModifier r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD>;

        if r0 == $r1 goto label1;

        $r2 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_METHOD>;

        if r0 != $r2 goto label2;

     label1:
        return "public";

     label2:
        $r3 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD>;

        if r0 == $r3 goto label3;

        $r4 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_METHOD>;

        if r0 != $r4 goto label4;

     label3:
        return "private";

     label4:
        $r5 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD>;

        if r0 == $r5 goto label5;

        $r6 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_METHOD>;

        if r0 != $r6 goto label6;

     label5:
        return "protected";

     label6:
        $r7 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD>;

        if r0 == $r7 goto label7;

        $r8 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_METHOD>;

        if r0 != $r8 goto label8;

     label7:
        return "package";

     label8:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;
    }

    public boolean isField()
    {
        net.sourceforge.plantuml.skin.VisibilityModifier r0, $r1, $r2, $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD>;

        if r0 == $r1 goto label1;

        $r2 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD>;

        if r0 == $r2 goto label1;

        $r3 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD>;

        if r0 == $r3 goto label1;

        $r4 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD>;

        if r0 != $r4 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.skin.VisibilityModifier r0, $r1, $r2, $r9, $r10, $r17, $r18, $r25, $r26, $r33;
        net.sourceforge.plantuml.style.SName[] $r3, $r11, $r19, $r27, $r35;
        net.sourceforge.plantuml.style.SName $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r20, $r21, $r22, $r23, $r28, $r29, $r30, $r31, $r36, $r37, $r38, $r39;
        net.sourceforge.plantuml.style.StyleSignature $r8, $r16, $r24, $r32, $r40;
        java.lang.IllegalStateException $r34;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier IE_MANDATORY>;

        if r0 != $r1 goto label1;

        $r35 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r36 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r35[0] = $r36;

        $r37 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r35[1] = $r37;

        $r38 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName visibilityIcon>;

        $r35[2] = $r38;

        $r39 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName IEMandatory>;

        $r35[3] = $r39;

        $r40 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r35);

        return $r40;

     label1:
        $r2 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD>;

        if r0 == $r2 goto label2;

        $r9 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_METHOD>;

        if r0 != $r9 goto label3;

     label2:
        $r3 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r3[0] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r3[1] = $r5;

        $r6 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName visibilityIcon>;

        $r3[2] = $r6;

        $r7 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName public_>;

        $r3[3] = $r7;

        $r8 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r3);

        return $r8;

     label3:
        $r10 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD>;

        if r0 == $r10 goto label4;

        $r17 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_METHOD>;

        if r0 != $r17 goto label5;

     label4:
        $r11 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r11[0] = $r12;

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r11[1] = $r13;

        $r14 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName visibilityIcon>;

        $r11[2] = $r14;

        $r15 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName private_>;

        $r11[3] = $r15;

        $r16 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r11);

        return $r16;

     label5:
        $r18 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD>;

        if r0 == $r18 goto label6;

        $r25 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_METHOD>;

        if r0 != $r25 goto label7;

     label6:
        $r19 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r20 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r19[0] = $r20;

        $r21 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r19[1] = $r21;

        $r22 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName visibilityIcon>;

        $r19[2] = $r22;

        $r23 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName protected_>;

        $r19[3] = $r23;

        $r24 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r19);

        return $r24;

     label7:
        $r26 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD>;

        if r0 == $r26 goto label8;

        $r33 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_METHOD>;

        if r0 != $r33 goto label9;

     label8:
        $r27 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r28 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r27[0] = $r28;

        $r29 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r27[1] = $r29;

        $r30 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName visibilityIcon>;

        $r27[2] = $r30;

        $r31 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName package_>;

        $r27[3] = $r31;

        $r32 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r27);

        return $r32;

     label9:
        $r34 = new java.lang.IllegalStateException;

        specialinvoke $r34.<java.lang.IllegalStateException: void <init>()>();

        throw $r34;
    }

    static void access$000(net.sourceforge.plantuml.skin.VisibilityModifier, net.sourceforge.plantuml.ugraphic.UGraphic, int, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, double, double)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, r3;
        double d0, d1;

        r0 := @parameter0: net.sourceforge.plantuml.skin.VisibilityModifier;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter2: int;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter5: double;

        d1 := @parameter6: double;

        specialinvoke r0.<net.sourceforge.plantuml.skin.VisibilityModifier: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic,int,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double,double)>(r1, i0, r2, r3, d0, d1);

        return;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.skin.VisibilityModifier $r0, $r2, $r4, $r6, $r8, $r11, $r14, $r17, $r20, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        net.sourceforge.plantuml.ColorParam $r1, $r3, $r5, $r7, $r9, $r10, $r12, $r13, $r15, $r16, $r18, $r19, $r21, $r22;
        net.sourceforge.plantuml.skin.VisibilityModifier[] $r23;

        $r0 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r1 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPrivate>;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("PRIVATE_FIELD", 0, 61179, $r1, null);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD> = $r0;

        $r2 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r3 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconProtected>;

        specialinvoke $r2.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("PROTECTED_FIELD", 1, 61178, $r3, null);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD> = $r2;

        $r4 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r5 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPackage>;

        specialinvoke $r4.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("PACKAGE_PRIVATE_FIELD", 2, 61177, $r5, null);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD> = $r4;

        $r6 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r7 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPublic>;

        specialinvoke $r6.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("PUBLIC_FIELD", 3, 61176, $r7, null);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD> = $r6;

        $r8 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r10 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPrivate>;

        $r9 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPrivateBackground>;

        specialinvoke $r8.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("PRIVATE_METHOD", 4, 61175, $r10, $r9);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_METHOD> = $r8;

        $r11 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r13 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconProtected>;

        $r12 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconProtectedBackground>;

        specialinvoke $r11.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("PROTECTED_METHOD", 5, 61174, $r13, $r12);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_METHOD> = $r11;

        $r14 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r16 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPackage>;

        $r15 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPackageBackground>;

        specialinvoke $r14.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("PACKAGE_PRIVATE_METHOD", 6, 61173, $r16, $r15);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_METHOD> = $r14;

        $r17 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r19 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPublic>;

        $r18 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconPublicBackground>;

        specialinvoke $r17.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("PUBLIC_METHOD", 7, 61172, $r19, $r18);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_METHOD> = $r17;

        $r20 = new net.sourceforge.plantuml.skin.VisibilityModifier;

        $r22 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconIEMandatory>;

        $r21 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam iconIEMandatory>;

        specialinvoke $r20.<net.sourceforge.plantuml.skin.VisibilityModifier: void <init>(java.lang.String,int,char,net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.ColorParam)>("IE_MANDATORY", 8, 61171, $r22, $r21);

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier IE_MANDATORY> = $r20;

        $r23 = newarray (net.sourceforge.plantuml.skin.VisibilityModifier)[9];

        $r24 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD>;

        $r23[0] = $r24;

        $r25 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD>;

        $r23[1] = $r25;

        $r26 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD>;

        $r23[2] = $r26;

        $r27 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD>;

        $r23[3] = $r27;

        $r28 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_METHOD>;

        $r23[4] = $r28;

        $r29 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_METHOD>;

        $r23[5] = $r29;

        $r30 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_METHOD>;

        $r23[6] = $r30;

        $r31 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_METHOD>;

        $r23[7] = $r31;

        $r32 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier IE_MANDATORY>;

        $r23[8] = $r32;

        <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier[] $VALUES> = $r23;

        return;
    }
}
