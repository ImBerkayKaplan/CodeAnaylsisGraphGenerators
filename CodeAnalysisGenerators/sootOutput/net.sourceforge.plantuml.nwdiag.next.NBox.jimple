public class net.sourceforge.plantuml.nwdiag.next.NBox extends java.lang.Object implements net.sourceforge.plantuml.nwdiag.next.Staged
{
    private final java.util.List bars;
    private final net.sourceforge.plantuml.nwdiag.next.NTetris tetris;

    public void <init>()
    {
        net.sourceforge.plantuml.nwdiag.next.NBox r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.nwdiag.next.NTetris $r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBox;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars> = $r1;

        $r2 = new net.sourceforge.plantuml.nwdiag.next.NTetris;

        specialinvoke $r2.<net.sourceforge.plantuml.nwdiag.next.NTetris: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.next.NBox: net.sourceforge.plantuml.nwdiag.next.NTetris tetris> = $r2;

        return;
    }

    public void add(net.sourceforge.plantuml.nwdiag.next.NBar)
    {
        net.sourceforge.plantuml.nwdiag.next.NBox r0;
        net.sourceforge.plantuml.nwdiag.next.NBar r1;
        java.util.List $r2, $r3;
        boolean $z0;
        net.sourceforge.plantuml.nwdiag.next.NTetris $r4;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBox;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NBar;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: net.sourceforge.plantuml.nwdiag.next.NTetris tetris>;

        virtualinvoke $r4.<net.sourceforge.plantuml.nwdiag.next.NTetris: void add(net.sourceforge.plantuml.nwdiag.next.Staged)>(r1);

        return;
    }

    public net.sourceforge.plantuml.nwdiag.next.NStage getStart()
    {
        net.sourceforge.plantuml.nwdiag.next.NBox r0;
        java.util.List $r1, $r4, $r5;
        java.lang.Object $r2, $r6;
        net.sourceforge.plantuml.nwdiag.next.NBar $r3, $r7;
        int $i0, i1;
        net.sourceforge.plantuml.nwdiag.next.NStage $r8, r9;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBox;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.nwdiag.next.NBar) $r2;

        r9 = virtualinvoke $r3.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage getStart()>();

        i1 = 1;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (net.sourceforge.plantuml.nwdiag.next.NBar) $r6;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage getStart()>();

        r9 = staticinvoke <net.sourceforge.plantuml.nwdiag.next.NStage: net.sourceforge.plantuml.nwdiag.next.NStage getMin(net.sourceforge.plantuml.nwdiag.next.NStage,net.sourceforge.plantuml.nwdiag.next.NStage)>(r9, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r9;
    }

    public net.sourceforge.plantuml.nwdiag.next.NStage getEnd()
    {
        net.sourceforge.plantuml.nwdiag.next.NBox r0;
        java.util.List $r1, $r4, $r5;
        java.lang.Object $r2, $r6;
        net.sourceforge.plantuml.nwdiag.next.NBar $r3, $r7;
        int $i0, i1;
        net.sourceforge.plantuml.nwdiag.next.NStage $r8, r9;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBox;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.nwdiag.next.NBar) $r2;

        r9 = virtualinvoke $r3.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage getEnd()>();

        i1 = 1;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r5 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.List bars>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        $r7 = (net.sourceforge.plantuml.nwdiag.next.NBar) $r6;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage getEnd()>();

        r9 = staticinvoke <net.sourceforge.plantuml.nwdiag.next.NStage: net.sourceforge.plantuml.nwdiag.next.NStage getMax(net.sourceforge.plantuml.nwdiag.next.NStage,net.sourceforge.plantuml.nwdiag.next.NStage)>(r9, $r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r9;
    }

    public int getNWidth()
    {
        net.sourceforge.plantuml.nwdiag.next.NBox r0;
        net.sourceforge.plantuml.nwdiag.next.NTetris $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBox;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: net.sourceforge.plantuml.nwdiag.next.NTetris tetris>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.nwdiag.next.NTetris: int getNWidth()>();

        return $i0;
    }

    public java.util.Map getPositions()
    {
        net.sourceforge.plantuml.nwdiag.next.NBox r0;
        net.sourceforge.plantuml.nwdiag.next.NTetris $r1;
        java.util.Map $r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBox;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NBox: net.sourceforge.plantuml.nwdiag.next.NTetris tetris>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.nwdiag.next.NTetris: java.util.Map getPositions()>();

        return $r2;
    }

    public boolean contains(net.sourceforge.plantuml.nwdiag.next.NStage)
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0, $r2, $r3;
        net.sourceforge.plantuml.nwdiag.next.NBox r1;
        int $i0, $i1;
        boolean $z0;

        r1 := @this: net.sourceforge.plantuml.nwdiag.next.NBox;

        r0 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NStage;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.next.NBox: net.sourceforge.plantuml.nwdiag.next.NStage getStart()>();

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int compareTo(net.sourceforge.plantuml.nwdiag.next.NStage)>($r2);

        if $i0 < 0 goto label1;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.next.NBox: net.sourceforge.plantuml.nwdiag.next.NStage getEnd()>();

        $i1 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int compareTo(net.sourceforge.plantuml.nwdiag.next.NStage)>($r3);

        if $i1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
