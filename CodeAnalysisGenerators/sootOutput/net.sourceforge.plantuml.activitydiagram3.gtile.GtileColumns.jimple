public class net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns extends net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile
{
    protected final java.util.List gtiles;
    private double margin;
    private double dy;

    protected final net.sourceforge.plantuml.ugraphic.UTranslate getPosition(int)
    {
        int i0, i1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r1;
        double $d0, $d1, $d2, $d3, d4;
        java.util.List $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r4;
        net.sourceforge.plantuml.graphic.StringBounder $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        i0 := @parameter0: int;

        d4 = 0.0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (net.sourceforge.plantuml.activitydiagram3.gtile.Gtile) $r3;

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r6 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r5);

        $d1 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: double margin>;

        $d3 = $d1 + $d2;

        d4 = d4 + $d3;

        i1 = i1 + 1;

        goto label1;

     label2:
        $r0 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: double dy>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d4, $d0);

        return $r0;
    }

    protected final void setMargin(double)
    {
        double d0;
        byte $b0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 0.0;

        if $b0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("margin=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label1:
        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: double margin> = d0;

        return;
    }

    protected final void pushDown(double)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r0;
        double d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        d0 := @parameter0: double;

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: double dy>;

        $d2 = $d1 + d0;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: double dy> = $d2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r2;
        java.util.List $r3;
        java.lang.String $r5;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GtileIfSimple ");

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public net.sourceforge.plantuml.activitydiagram3.gtile.Gtile first()
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.gtile.Gtile) $r2;

        return $r3;
    }

    public void <init>(java.util.List, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, double)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r0;
        java.util.List r1;
        java.lang.Object $r2, $r5;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r3, $r6;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.ISkinParam $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r8;
        double d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        r1 := @parameter0: java.util.List;

        r8 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        d0 := @parameter2: double;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.gtile.Gtile) $r2;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (net.sourceforge.plantuml.activitydiagram3.gtile.Gtile) $r5;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r4, $r7, r8);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: double margin> = d0;

        return;
    }

    protected void drawUInternal(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r0;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile r4;
        net.sourceforge.plantuml.ugraphic.UTranslate r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6, $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i1 = 0;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (net.sourceforge.plantuml.activitydiagram3.gtile.Gtile) $r3;

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: net.sourceforge.plantuml.ugraphic.UTranslate getPosition(int)>(i1);

        $r7 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r5);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r1;
        java.util.List $r2, $r3;
        int $i0, i1;
        java.lang.Object $r4;
        net.sourceforge.plantuml.graphic.StringBounder r5;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7, r9, r10;
        net.sourceforge.plantuml.ugraphic.UTranslate r8;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(0.0, 0.0);

        r10 = $r0;

        i1 = 0;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (net.sourceforge.plantuml.activitydiagram3.gtile.Gtile) $r4;

        r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r5);

        r8 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: net.sourceforge.plantuml.ugraphic.UTranslate getPosition(int)>(i1);

        r9 = virtualinvoke r8.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.awt.geom.Dimension2D getTranslated(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r7);

        r10 = staticinvoke <net.sourceforge.plantuml.utils.MathUtils: net.sourceforge.plantuml.awt.geom.Dimension2D max(net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r10, r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r10;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.util.Set $r5, $r8;
        java.lang.Object $r6;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile r7;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileColumns: java.util.List gtiles>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.activitydiagram3.gtile.Gtile) $r6;

        $r8 = interfaceinvoke r7.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: java.util.Set getSwimlanes()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

        goto label1;

     label2:
        $r5 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r5;
    }
}
