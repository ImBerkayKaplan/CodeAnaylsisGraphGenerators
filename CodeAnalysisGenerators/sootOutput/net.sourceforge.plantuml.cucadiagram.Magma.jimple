class net.sourceforge.plantuml.cucadiagram.Magma extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram;
    private final java.util.List standalones;
    private final net.sourceforge.plantuml.cucadiagram.LinkType linkType;

    public void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram, java.util.List)
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1, $r4;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r2, $r3;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r5;
        java.util.List r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        r5 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r6 := @parameter1: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        $r3 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        $r2 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        specialinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r3, $r2);

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType getInvisible()>();

        r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.LinkType linkType> = $r4;

        r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram> = r5;

        r0.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones> = r6;

        return;
    }

    public void putInSquare()
    {
        net.sourceforge.plantuml.cucadiagram.Magma$1 $r0;
        net.sourceforge.plantuml.cucadiagram.Magma r1;
        net.sourceforge.plantuml.cucadiagram.SquareMaker $r3;
        java.util.List $r4;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Magma$1;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Magma$1: void <init>(net.sourceforge.plantuml.cucadiagram.Magma)>(r1);

        $r3 = new net.sourceforge.plantuml.cucadiagram.SquareMaker;

        specialinvoke $r3.<net.sourceforge.plantuml.cucadiagram.SquareMaker: void <init>()>();

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.SquareMaker: void putInSquare(java.util.List,net.sourceforge.plantuml.cucadiagram.SquareLinker)>($r4, $r0);

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.IGroup getContainer()
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r3;
        net.sourceforge.plantuml.cucadiagram.IGroup r4, $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r2;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = interfaceinvoke r4.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        return $r5;
    }

    public boolean isComplete()
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        int $i0, $i1;
        java.util.List $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.IGroup getContainer()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: int size()>();

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != $i1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private int squareSize()
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        java.util.List $r1;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.SquareMaker: int computeBranch(int)>($i0);

        return $i1;
    }

    private net.sourceforge.plantuml.cucadiagram.ILeaf getTopLeft()
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r2;

        return $r3;
    }

    private net.sourceforge.plantuml.cucadiagram.ILeaf getBottomLeft()
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        java.util.List $r1, $r2;
        int $i0, i1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        i1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.SquareMaker: int getBottomLeft(int)>($i0);

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        return $r4;
    }

    private net.sourceforge.plantuml.cucadiagram.ILeaf getTopRight()
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        int i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        i0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Magma: int squareSize()>();

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $i1 = i0 - 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r2;

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r6, $r7, $r10, $r11, $r12;
        net.sourceforge.plantuml.cucadiagram.Magma r1;
        java.util.List $r2, $r8;
        java.lang.Object $r3;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r4;
        net.sourceforge.plantuml.cucadiagram.IGroup $r5;
        java.lang.String $r9, $r13;
        boolean $z0;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r1.<net.sourceforge.plantuml.cucadiagram.Magma: java.util.List standalones>;

        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z0 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Magma: boolean isComplete()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public void linkToDown(net.sourceforge.plantuml.cucadiagram.Magma)
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0, r4;
        net.sourceforge.plantuml.cucadiagram.Link $r1;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r2, $r6;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r3, $r5;
        net.sourceforge.plantuml.cucadiagram.LinkType $r7;
        net.sourceforge.plantuml.cucadiagram.Display $r8;
        net.sourceforge.plantuml.ISkinParam $r9;
        net.sourceforge.plantuml.style.StyleBuilder $r10;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Magma;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r1 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.ILeaf getBottomLeft()>();

        $r5 = specialinvoke r4.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.ILeaf getTopLeft()>();

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.LinkType linkType>;

        $r8 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r9 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>($r3, $r5, $r7, $r8, 2, $r10);

        virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>($r1);

        return;
    }

    public void linkToRight(net.sourceforge.plantuml.cucadiagram.Magma)
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0, r4;
        net.sourceforge.plantuml.cucadiagram.Link $r1;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r2, $r6;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r3, $r5;
        net.sourceforge.plantuml.cucadiagram.LinkType $r7;
        net.sourceforge.plantuml.cucadiagram.Display $r8;
        net.sourceforge.plantuml.ISkinParam $r9;
        net.sourceforge.plantuml.style.StyleBuilder $r10;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Magma;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Magma;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r1 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.ILeaf getTopRight()>();

        $r5 = specialinvoke r4.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.ILeaf getTopLeft()>();

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.LinkType linkType>;

        $r8 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r9 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>($r3, $r5, $r7, $r8, 1, $r10);

        virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>($r1);

        return;
    }

    static net.sourceforge.plantuml.cucadiagram.LinkType access$000(net.sourceforge.plantuml.cucadiagram.Magma)
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Magma;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.LinkType linkType>;

        return $r1;
    }

    static net.sourceforge.plantuml.cucadiagram.CucaDiagram access$100(net.sourceforge.plantuml.cucadiagram.Magma)
    {
        net.sourceforge.plantuml.cucadiagram.Magma r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r1;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Magma;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Magma: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        return $r1;
    }
}
