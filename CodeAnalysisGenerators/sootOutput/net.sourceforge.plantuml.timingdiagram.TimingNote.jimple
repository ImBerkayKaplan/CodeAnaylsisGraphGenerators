public class net.sourceforge.plantuml.timingdiagram.TimingNote extends java.lang.Object
{
    private final net.sourceforge.plantuml.timingdiagram.TimeTick when;
    private final net.sourceforge.plantuml.timingdiagram.Player player;
    private final net.sourceforge.plantuml.cucadiagram.Display note;
    private final net.sourceforge.plantuml.command.Position position;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.style.Style style;

    public void <init>(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.timingdiagram.Player, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.command.Position, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.style.Style)
    {
        net.sourceforge.plantuml.timingdiagram.TimingNote r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.timingdiagram.Player r3;
        net.sourceforge.plantuml.timingdiagram.TimeTick r4;
        net.sourceforge.plantuml.ISkinParam r5;
        net.sourceforge.plantuml.command.Position r6;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingNote;

        r4 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r3 := @parameter1: net.sourceforge.plantuml.timingdiagram.Player;

        r2 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r6 := @parameter3: net.sourceforge.plantuml.command.Position;

        r5 := @parameter4: net.sourceforge.plantuml.ISkinParam;

        r1 := @parameter5: net.sourceforge.plantuml.style.Style;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.style.Style style> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.cucadiagram.Display note> = r2;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.timingdiagram.Player player> = r3;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.timingdiagram.TimeTick when> = r4;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam> = r5;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.command.Position position> = r6;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.TimingNote r0;
        net.sourceforge.plantuml.command.Position $r1, $r2;
        net.sourceforge.plantuml.svek.image.Opale $r3;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingNote;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.command.Position position>;

        $r1 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM>;

        if $r2 != $r1 goto label1;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: double getMarginY()>();

        $d1 = $d0 / 2.0;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d1);

        r5 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

     label1:
        $r3 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.svek.image.Opale createOpale()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.svek.image.Opale: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r5);

        return;
    }

    private net.sourceforge.plantuml.svek.image.Opale createOpale()
    {
        net.sourceforge.plantuml.ugraphic.UStroke $r0, r34;
        boolean $z0, $z1;
        net.sourceforge.plantuml.timingdiagram.TimingNote r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r5, $r8, $r10, $r15, $r22, $r24, $r29, $r31, $r39, $r42, $r49;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3, $r13, r35;
        net.sourceforge.plantuml.FontParam $r4;
        net.sourceforge.plantuml.skin.rose.Rose $r6;
        net.sourceforge.plantuml.ColorParam $r7, $r9;
        net.sourceforge.plantuml.style.Style $r14, $r17, $r20, $r27, $r33;
        net.sourceforge.plantuml.style.PName $r16, $r19, $r26;
        net.sourceforge.plantuml.style.Value $r18, $r21, $r28;
        net.sourceforge.plantuml.api.ThemeStyle $r23, $r30;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r25, $r32;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.color.HColor r36, r37;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r40, $r41;
        net.sourceforge.plantuml.creole.CreoleMode $r43;
        net.sourceforge.plantuml.creole.SheetBuilder $r44;
        net.sourceforge.plantuml.cucadiagram.Display $r45;
        net.sourceforge.plantuml.creole.Sheet r46;
        net.sourceforge.plantuml.creole.SheetBlock1 $r47;
        net.sourceforge.plantuml.LineBreakStrategy $r48;
        net.sourceforge.plantuml.svek.image.Opale $r50;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.TimingNote;

        $r0 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r34 = $r0;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r13 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r15 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r14 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.style.Style style>;

        specialinvoke $r13.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r15, $r14);

        r35 = $r13;

        $r17 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.style.Style style>;

        $r16 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r16);

        d0 = interfaceinvoke $r18.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        $r20 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.style.Style style>;

        $r19 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r19);

        $r22 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r24 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r36 = interfaceinvoke $r21.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r23, $r25);

        $r27 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.style.Style style>;

        $r26 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r28 = virtualinvoke $r27.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r26);

        $r29 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r30 = interfaceinvoke $r29.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r31 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r32 = interfaceinvoke $r31.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r37 = interfaceinvoke $r28.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r30, $r32);

        $r33 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.style.Style style>;

        r34 = virtualinvoke $r33.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label4;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z1 == 0 goto label2;

        $d1 = 4.0;

        goto label3;

     label2:
        $d1 = 0.0;

     label3:
        d0 = $d1;

        $r3 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r5 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r4 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        specialinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r5, $r4, null);

        r35 = $r3;

        $r6 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r6.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        $r8 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r7 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBackground>;

        r37 = virtualinvoke $r6.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r8, $r7);

        $r10 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r9 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        r36 = virtualinvoke $r6.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r10, $r9);

     label4:
        $r39 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r40 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r41 = interfaceinvoke $r39.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r40);

        $r42 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r43 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $r44 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r35, $r41, $r42, $r43);

        $r45 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.cucadiagram.Display note>;

        r46 = interfaceinvoke $r44.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>($r45);

        $r47 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $r48 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $r49 = r1.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.ISkinParam skinParam>;

        $d2 = interfaceinvoke $r49.<net.sourceforge.plantuml.ISkinParam: double getPadding()>();

        specialinvoke $r47.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>(r46, $r48, $d2);

        $r50 = new net.sourceforge.plantuml.svek.image.Opale;

        specialinvoke $r50.<net.sourceforge.plantuml.svek.image.Opale: void <init>(double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.TextBlock,boolean,net.sourceforge.plantuml.ugraphic.UStroke)>(d0, r36, r37, $r47, 0, r34);

        return $r50;
    }

    public double getHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingNote r0;
        net.sourceforge.plantuml.svek.image.Opale $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingNote;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.svek.image.Opale createOpale()>();

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: double getMarginY()>();

        $d2 = $d0 + $d1;

        return $d2;
    }

    private double getMarginY()
    {
        net.sourceforge.plantuml.timingdiagram.TimingNote r0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingNote;

        return 10.0;
    }

    public net.sourceforge.plantuml.timingdiagram.TimeTick getWhen()
    {
        net.sourceforge.plantuml.timingdiagram.TimingNote r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingNote;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.timingdiagram.TimeTick when>;

        return $r1;
    }

    public final net.sourceforge.plantuml.command.Position getPosition()
    {
        net.sourceforge.plantuml.timingdiagram.TimingNote r0;
        net.sourceforge.plantuml.command.Position $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingNote;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.command.Position position>;

        return $r1;
    }
}
