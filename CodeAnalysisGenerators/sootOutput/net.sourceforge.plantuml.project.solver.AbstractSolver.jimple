public abstract class net.sourceforge.plantuml.project.solver.AbstractSolver extends java.lang.Object implements net.sourceforge.plantuml.project.solver.Solver
{
    protected final java.util.Map values;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        net.sourceforge.plantuml.project.solver.AbstractSolver r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: net.sourceforge.plantuml.project.solver.AbstractSolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: java.util.Map values> = $r1;

        return;
    }

    public final void setData(net.sourceforge.plantuml.project.core.TaskAttribute, net.sourceforge.plantuml.project.Value)
    {
        net.sourceforge.plantuml.project.solver.AbstractSolver r0;
        net.sourceforge.plantuml.project.core.TaskAttribute r1, $r8;
        java.util.Map $r2, $r6, $r12, $r13;
        java.lang.Object $r3;
        net.sourceforge.plantuml.project.Value r4, r11;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.AssertionError $r7;
        net.sourceforge.plantuml.project.time.Day r9, $r10;

        r0 := @this: net.sourceforge.plantuml.project.solver.AbstractSolver;

        r1 := @parameter0: net.sourceforge.plantuml.project.core.TaskAttribute;

        r11 := @parameter1: net.sourceforge.plantuml.project.Value;

        $r2 = r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: java.util.Map values>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (net.sourceforge.plantuml.project.Value) $r3;

        if r4 == null goto label1;

        $r8 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if r1 != $r8 goto label1;

        r9 = (net.sourceforge.plantuml.project.time.Day) r4;

        $r10 = (net.sourceforge.plantuml.project.time.Day) r11;

        $i1 = virtualinvoke r9.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r10);

        if $i1 <= 0 goto label1;

        r11 = r4;

     label1:
        $r12 = r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: java.util.Map values>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r11);

        $r13 = r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: java.util.Map values>;

        $i2 = interfaceinvoke $r13.<java.util.Map: int size()>();

        if $i2 <= 2 goto label2;

        specialinvoke r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: void removeFirstElement()>();

     label2:
        $z0 = <net.sourceforge.plantuml.project.solver.AbstractSolver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r6 = r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: java.util.Map values>;

        $i0 = interfaceinvoke $r6.<java.util.Map: int size()>();

        if $i0 <= 2 goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label3:
        return;
    }

    private void removeFirstElement()
    {
        net.sourceforge.plantuml.project.solver.AbstractSolver r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator r3;

        r0 := @this: net.sourceforge.plantuml.project.solver.AbstractSolver;

        $r1 = r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: java.util.Map values>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        return;
    }

    public final net.sourceforge.plantuml.project.Value getData(net.sourceforge.plantuml.project.core.TaskAttribute)
    {
        net.sourceforge.plantuml.project.solver.AbstractSolver r0;
        net.sourceforge.plantuml.project.core.TaskAttribute r1, $r5, $r6;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.project.Value r4, $r8, $r9;
        net.sourceforge.plantuml.project.Load $r7;

        r0 := @this: net.sourceforge.plantuml.project.solver.AbstractSolver;

        r1 := @parameter0: net.sourceforge.plantuml.project.core.TaskAttribute;

        $r2 = r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: java.util.Map values>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (net.sourceforge.plantuml.project.Value) $r3;

        if r4 != null goto label3;

        $r5 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        if r1 != $r5 goto label1;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: net.sourceforge.plantuml.project.Value computeEnd()>();

        return $r9;

     label1:
        $r6 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if r1 != $r6 goto label2;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.project.solver.AbstractSolver: net.sourceforge.plantuml.project.Value computeStart()>();

        return $r8;

     label2:
        $r7 = staticinvoke <net.sourceforge.plantuml.project.Load: net.sourceforge.plantuml.project.Load inWinks(int)>(1);

        return $r7;

     label3:
        return r4;
    }

    protected abstract net.sourceforge.plantuml.project.Value computeEnd();

    protected abstract net.sourceforge.plantuml.project.Value computeStart();

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/project/solver/AbstractSolver;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.project.solver.AbstractSolver: boolean $assertionsDisabled> = $z1;

        return;
    }
}
