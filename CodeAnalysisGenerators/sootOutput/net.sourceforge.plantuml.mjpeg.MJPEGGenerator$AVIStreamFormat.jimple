class net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat extends java.lang.Object
{
    public byte[] fcc;
    public int cb;
    public int biSize;
    public int biWidth;
    public int biHeight;
    public short biPlanes;
    public short biBitCount;
    public byte[] biCompression;
    public int biSizeImage;
    public int biXPelsPerMeter;
    public int biYPelsPerMeter;
    public int biClrUsed;
    public int biClrImportant;
    final net.sourceforge.plantuml.mjpeg.MJPEGGenerator this$0;

    public void <init>(net.sourceforge.plantuml.mjpeg.MJPEGGenerator)
    {
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat r0;
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator r1;
        byte[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat;

        r1 := @parameter0: net.sourceforge.plantuml.mjpeg.MJPEGGenerator;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: net.sourceforge.plantuml.mjpeg.MJPEGGenerator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[4];

        $r2[0] = 115;

        $r2[1] = 116;

        $r2[2] = 114;

        $r2[3] = 102;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: byte[] fcc> = $r2;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int cb> = 40;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biSize> = 40;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biWidth> = 0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biHeight> = 0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: short biPlanes> = 1;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: short biBitCount> = 24;

        $r3 = newarray (byte)[4];

        $r3[0] = 77;

        $r3[1] = 74;

        $r3[2] = 80;

        $r3[3] = 71;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: byte[] biCompression> = $r3;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biSizeImage> = 0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biXPelsPerMeter> = 0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biYPelsPerMeter> = 0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biClrUsed> = 0;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biClrImportant> = 0;

        $i0 = r1.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int width>;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biWidth> = $i0;

        $i1 = r1.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int height>;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biHeight> = $i1;

        $i3 = r1.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int width>;

        $i2 = r1.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int height>;

        $i4 = $i3 * $i2;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biSizeImage> = $i4;

        return;
    }

    public byte[] toBytes() throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r0;
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat r2;
        byte[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        short $s8, $s9, $s10, $s11;

        r2 := @this: net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: byte[] fcc>;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r3);

        $i0 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int cb>;

        $i1 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i0);

        $r4 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i1);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r4);

        $i2 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biSize>;

        $i3 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i2);

        $r5 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i3);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

        $i4 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biWidth>;

        $i5 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i4);

        $r6 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i5);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r6);

        $i6 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biHeight>;

        $i7 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i6);

        $r7 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i7);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r7);

        $s8 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: short biPlanes>;

        $s9 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: short swapShort(short)>($s8);

        $r8 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] shortBytes(short)>($s9);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r8);

        $s10 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: short biBitCount>;

        $s11 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: short swapShort(short)>($s10);

        $r9 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] shortBytes(short)>($s11);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r9);

        $r10 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: byte[] biCompression>;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r10);

        $i12 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biSizeImage>;

        $i13 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i12);

        $r11 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i13);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r11);

        $i14 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biXPelsPerMeter>;

        $i15 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i14);

        $r12 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i15);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r12);

        $i16 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biYPelsPerMeter>;

        $i17 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i16);

        $r13 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i17);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r13);

        $i18 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biClrUsed>;

        $i19 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i18);

        $r14 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i19);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r14);

        $i20 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIStreamFormat: int biClrImportant>;

        $i21 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i20);

        $r15 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i21);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r15);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void close()>();

        $r16 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r16;
    }
}
