public abstract class org.stathissideris.ascii2image.graphics.DiagramComponent extends java.lang.Object
{
    private static final boolean DEBUG;

    public void <init>()
    {
        org.stathissideris.ascii2image.graphics.DiagramComponent r0;

        r0 := @this: org.stathissideris.ascii2image.graphics.DiagramComponent;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected static org.stathissideris.ascii2image.graphics.ShapePoint makePointForCell(org.stathissideris.ascii2image.text.TextGrid$Cell, org.stathissideris.ascii2image.text.TextGrid, int, int, boolean)
    {
        org.stathissideris.ascii2image.text.TextGrid r0;
        org.stathissideris.ascii2image.text.TextGrid$Cell r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.stathissideris.ascii2image.graphics.ShapePoint $r7, $r8, $r9, $r10, $r11;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r1 := @parameter0: org.stathissideris.ascii2image.text.TextGrid$Cell;

        r0 := @parameter1: org.stathissideris.ascii2image.text.TextGrid;

        i0 := @parameter2: int;

        i5 := @parameter3: int;

        z5 := @parameter4: boolean;

        $z0 = virtualinvoke r0.<org.stathissideris.ascii2image.text.TextGrid: boolean isCorner(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r1);

        if $z0 == 0 goto label1;

        if z5 == 0 goto label1;

        $r11 = new org.stathissideris.ascii2image.graphics.ShapePoint;

        $i34 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int x>;

        $i36 = $i34 * i0;

        $i35 = i0 / 2;

        $i37 = $i36 + $i35;

        $f9 = (float) $i37;

        $i38 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int y>;

        $i40 = $i38 * i5;

        $i39 = i5 / 2;

        $i41 = $i40 + $i39;

        $f8 = (float) $i41;

        specialinvoke $r11.<org.stathissideris.ascii2image.graphics.ShapePoint: void <init>(float,float,int)>($f9, $f8, 1);

        return $r11;

     label1:
        $z1 = virtualinvoke r0.<org.stathissideris.ascii2image.text.TextGrid: boolean isNormalCorner(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r1);

        if $z1 == 0 goto label2;

        $r10 = new org.stathissideris.ascii2image.graphics.ShapePoint;

        $i26 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int x>;

        $i28 = $i26 * i0;

        $i27 = i0 / 2;

        $i29 = $i28 + $i27;

        $f7 = (float) $i29;

        $i30 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int y>;

        $i32 = $i30 * i5;

        $i31 = i5 / 2;

        $i33 = $i32 + $i31;

        $f6 = (float) $i33;

        specialinvoke $r10.<org.stathissideris.ascii2image.graphics.ShapePoint: void <init>(float,float,int)>($f7, $f6, 0);

        return $r10;

     label2:
        $z2 = virtualinvoke r0.<org.stathissideris.ascii2image.text.TextGrid: boolean isRoundCorner(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r1);

        if $z2 == 0 goto label3;

        $r9 = new org.stathissideris.ascii2image.graphics.ShapePoint;

        $i18 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int x>;

        $i20 = $i18 * i0;

        $i19 = i0 / 2;

        $i21 = $i20 + $i19;

        $f5 = (float) $i21;

        $i22 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int y>;

        $i24 = $i22 * i5;

        $i23 = i5 / 2;

        $i25 = $i24 + $i23;

        $f4 = (float) $i25;

        specialinvoke $r9.<org.stathissideris.ascii2image.graphics.ShapePoint: void <init>(float,float,int)>($f5, $f4, 1);

        return $r9;

     label3:
        $z3 = virtualinvoke r0.<org.stathissideris.ascii2image.text.TextGrid: boolean isLinesEnd(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r1);

        if $z3 == 0 goto label4;

        $r8 = new org.stathissideris.ascii2image.graphics.ShapePoint;

        $i10 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int x>;

        $i12 = $i10 * i0;

        $i11 = i0 / 2;

        $i13 = $i12 + $i11;

        $f3 = (float) $i13;

        $i14 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int y>;

        $i16 = $i14 * i5;

        $i15 = i5 / 2;

        $i17 = $i16 + $i15;

        $f2 = (float) $i17;

        specialinvoke $r8.<org.stathissideris.ascii2image.graphics.ShapePoint: void <init>(float,float,int)>($f3, $f2, 0);

        return $r8;

     label4:
        $z4 = virtualinvoke r0.<org.stathissideris.ascii2image.text.TextGrid: boolean isIntersection(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r1);

        if $z4 == 0 goto label5;

        $r7 = new org.stathissideris.ascii2image.graphics.ShapePoint;

        $i1 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int x>;

        $i3 = $i1 * i0;

        $i2 = i0 / 2;

        $i4 = $i3 + $i2;

        $f1 = (float) $i4;

        $i6 = r1.<org.stathissideris.ascii2image.text.TextGrid$Cell: int y>;

        $i8 = $i6 * i5;

        $i7 = i5 / 2;

        $i9 = $i8 + $i7;

        $f0 = (float) $i9;

        specialinvoke $r7.<org.stathissideris.ascii2image.graphics.ShapePoint: void <init>(float,float,int)>($f1, $f0, 0);

        return $r7;

     label5:
        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot make point for cell ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r2;
    }

    public static org.stathissideris.ascii2image.graphics.DiagramComponent createClosedFromBoundaryCells(org.stathissideris.ascii2image.text.TextGrid, org.stathissideris.ascii2image.text.CellSet, int, int)
    {
        org.stathissideris.ascii2image.text.TextGrid r0;
        org.stathissideris.ascii2image.text.CellSet r1;
        int i0, i1;
        org.stathissideris.ascii2image.graphics.DiagramComponent $r2;

        r0 := @parameter0: org.stathissideris.ascii2image.text.TextGrid;

        r1 := @parameter1: org.stathissideris.ascii2image.text.CellSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r2 = staticinvoke <org.stathissideris.ascii2image.graphics.DiagramComponent: org.stathissideris.ascii2image.graphics.DiagramComponent createClosedFromBoundaryCells(org.stathissideris.ascii2image.text.TextGrid,org.stathissideris.ascii2image.text.CellSet,int,int,boolean)>(r0, r1, i0, i1, 0);

        return $r2;
    }

    public static org.stathissideris.ascii2image.graphics.DiagramComponent createClosedFromBoundaryCells(org.stathissideris.ascii2image.text.TextGrid, org.stathissideris.ascii2image.text.CellSet, int, int, boolean)
    {
        org.stathissideris.ascii2image.text.CellSet r0, r22, r24;
        org.stathissideris.ascii2image.text.TextGrid r1, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        org.stathissideris.ascii2image.graphics.DiagramShape $r2;
        boolean $z0, $z1, $z2, $z3, $z4, z5, $z6;
        org.stathissideris.ascii2image.text.TextGrid$Cell r6, r21, r23;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;
        java.lang.String $r16;
        org.stathissideris.ascii2image.graphics.ShapePoint $r17, $r18, $r19;
        java.lang.IllegalArgumentException $r20;

        r1 := @parameter0: org.stathissideris.ascii2image.text.TextGrid;

        r0 := @parameter1: org.stathissideris.ascii2image.text.CellSet;

        i7 := @parameter2: int;

        i8 := @parameter3: int;

        z5 := @parameter4: boolean;

        $i0 = virtualinvoke r0.<org.stathissideris.ascii2image.text.CellSet: int getType(org.stathissideris.ascii2image.text.TextGrid)>(r1);

        if $i0 != 1 goto label1;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CellSet is closed and cannot be handled by this method");

        throw $r20;

     label1:
        $i1 = virtualinvoke r0.<org.stathissideris.ascii2image.text.CellSet: int size()>();

        if $i1 >= 2 goto label2;

        return null;

     label2:
        $r2 = new org.stathissideris.ascii2image.graphics.DiagramShape;

        specialinvoke $r2.<org.stathissideris.ascii2image.graphics.DiagramShape: void <init>()>();

        virtualinvoke $r2.<org.stathissideris.ascii2image.graphics.DiagramShape: void setClosed(boolean)>(1);

        $z0 = virtualinvoke r1.<org.stathissideris.ascii2image.text.TextGrid: boolean containsAtLeastOneDashedLine(org.stathissideris.ascii2image.text.CellSet)>(r0);

        if $z0 == 0 goto label3;

        virtualinvoke $r2.<org.stathissideris.ascii2image.graphics.DiagramShape: void setStrokeDashed(boolean)>(1);

     label3:
        $r4 = new org.stathissideris.ascii2image.text.TextGrid;

        $i2 = virtualinvoke r1.<org.stathissideris.ascii2image.text.TextGrid: int getWidth()>();

        $i3 = virtualinvoke r1.<org.stathissideris.ascii2image.text.TextGrid: int getHeight()>();

        specialinvoke $r4.<org.stathissideris.ascii2image.text.TextGrid: void <init>(int,int)>($i2, $i3);

        virtualinvoke r1.<org.stathissideris.ascii2image.text.TextGrid: void copyCellsTo(org.stathissideris.ascii2image.text.CellSet,org.stathissideris.ascii2image.text.TextGrid)>(r0, $r4);

        r6 = virtualinvoke r0.<org.stathissideris.ascii2image.text.CellSet: org.stathissideris.ascii2image.text.TextGrid$Cell getFirst()>();

        $z1 = virtualinvoke $r4.<org.stathissideris.ascii2image.text.TextGrid: boolean isCorner(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r6);

        if $z1 == 0 goto label4;

        $r19 = staticinvoke <org.stathissideris.ascii2image.graphics.DiagramComponent: org.stathissideris.ascii2image.graphics.ShapePoint makePointForCell(org.stathissideris.ascii2image.text.TextGrid$Cell,org.stathissideris.ascii2image.text.TextGrid,int,int,boolean)>(r6, $r4, i7, i8, z5);

        virtualinvoke $r2.<org.stathissideris.ascii2image.graphics.DiagramShape: void addToPoints(org.stathissideris.ascii2image.graphics.ShapePoint)>($r19);

     label4:
        r21 = r6;

        r22 = virtualinvoke $r4.<org.stathissideris.ascii2image.text.TextGrid: org.stathissideris.ascii2image.text.CellSet followCell(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r6);

        $i4 = virtualinvoke r22.<org.stathissideris.ascii2image.text.CellSet: int size()>();

        if $i4 != 0 goto label5;

        return null;

     label5:
        r23 = virtualinvoke r22.<org.stathissideris.ascii2image.text.CellSet: org.stathissideris.ascii2image.text.TextGrid$Cell getFirst()>();

        $z2 = virtualinvoke $r4.<org.stathissideris.ascii2image.text.TextGrid: boolean isCorner(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r23);

        if $z2 == 0 goto label6;

        $r18 = staticinvoke <org.stathissideris.ascii2image.graphics.DiagramComponent: org.stathissideris.ascii2image.graphics.ShapePoint makePointForCell(org.stathissideris.ascii2image.text.TextGrid$Cell,org.stathissideris.ascii2image.text.TextGrid,int,int,boolean)>(r23, $r4, i7, i8, z5);

        virtualinvoke $r2.<org.stathissideris.ascii2image.graphics.DiagramShape: void addToPoints(org.stathissideris.ascii2image.graphics.ShapePoint)>($r18);

     label6:
        $z6 = virtualinvoke r23.<org.stathissideris.ascii2image.text.TextGrid$Cell: boolean equals(java.lang.Object)>(r6);

        if $z6 != 0 goto label9;

        r24 = virtualinvoke $r4.<org.stathissideris.ascii2image.text.TextGrid: org.stathissideris.ascii2image.text.CellSet followCell(org.stathissideris.ascii2image.text.TextGrid$Cell,org.stathissideris.ascii2image.text.TextGrid$Cell)>(r23, r21);

        $i5 = virtualinvoke r24.<org.stathissideris.ascii2image.text.CellSet: int size()>();

        if $i5 != 1 goto label7;

        r21 = r23;

        r23 = virtualinvoke r24.<org.stathissideris.ascii2image.text.CellSet: org.stathissideris.ascii2image.text.TextGrid$Cell getFirst()>();

        $z3 = virtualinvoke r23.<org.stathissideris.ascii2image.text.TextGrid$Cell: boolean equals(java.lang.Object)>(r6);

        if $z3 != 0 goto label6;

        $z4 = virtualinvoke $r4.<org.stathissideris.ascii2image.text.TextGrid: boolean isCorner(org.stathissideris.ascii2image.text.TextGrid$Cell)>(r23);

        if $z4 == 0 goto label6;

        $r17 = staticinvoke <org.stathissideris.ascii2image.graphics.DiagramComponent: org.stathissideris.ascii2image.graphics.ShapePoint makePointForCell(org.stathissideris.ascii2image.text.TextGrid$Cell,org.stathissideris.ascii2image.text.TextGrid,int,int,boolean)>(r23, $r4, i7, i8, z5);

        virtualinvoke $r2.<org.stathissideris.ascii2image.graphics.DiagramShape: void addToPoints(org.stathissideris.ascii2image.graphics.ShapePoint)>($r17);

        goto label6;

     label7:
        $i6 = virtualinvoke r24.<org.stathissideris.ascii2image.text.CellSet: int size()>();

        if $i6 <= 1 goto label8;

        return null;

     label8:
        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cannot create closed shape from boundary cells, nowhere to go from ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" coming from ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r21);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in grid:\n");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nmaybe you have an edge pointing nowhere?");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r7;

     label9:
        return $r2;
    }

    public static void <clinit>()
    {
        <org.stathissideris.ascii2image.graphics.DiagramComponent: boolean DEBUG> = 0;

        return;
    }
}
