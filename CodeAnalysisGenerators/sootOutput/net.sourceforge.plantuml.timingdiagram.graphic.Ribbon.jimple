public class net.sourceforge.plantuml.timingdiagram.graphic.Ribbon extends java.lang.Object implements net.sourceforge.plantuml.timingdiagram.graphic.PDrawing
{
    private final java.util.List changes;
    private final java.util.List constraints;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.timingdiagram.TimingRuler ruler;
    private java.lang.String initialState;
    private net.sourceforge.plantuml.graphic.color.Colors initialColors;
    private final java.util.List notes;
    private final boolean compact;
    private final net.sourceforge.plantuml.graphic.TextBlock title;
    private final int suggestedHeight;
    private final net.sourceforge.plantuml.style.Style style;
    static final boolean $assertionsDisabled;

    public void <init>(net.sourceforge.plantuml.timingdiagram.TimingRuler, net.sourceforge.plantuml.ISkinParam, java.util.List, boolean, net.sourceforge.plantuml.graphic.TextBlock, int, net.sourceforge.plantuml.style.Style)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.util.ArrayList $r1, $r2;
        net.sourceforge.plantuml.style.Style r3;
        int i0, $i1;
        boolean z0;
        net.sourceforge.plantuml.timingdiagram.TimingRuler r4;
        net.sourceforge.plantuml.ISkinParam r5;
        java.util.List r6;
        net.sourceforge.plantuml.graphic.TextBlock r7;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r4 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingRuler;

        r5 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r6 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        r7 := @parameter4: net.sourceforge.plantuml.graphic.TextBlock;

        i0 := @parameter5: int;

        r3 := @parameter6: net.sourceforge.plantuml.style.Style;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List constraints> = $r2;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.style.Style style> = r3;

        if i0 != 0 goto label1;

        $i1 = 24;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: int suggestedHeight> = $i1;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: boolean compact> = z0;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler> = r4;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.ISkinParam skinParam> = r5;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List notes> = r6;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.TextBlock title> = r7;

        return;
    }

    public net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint getTimeProjection(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.timingdiagram.TimeTick)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick r1, $r12;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r2;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, $d13, $d14;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.command.Position $r4;
        java.util.List $r5;
        java.util.Iterator r6;
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint $r7, $r13;
        java.awt.geom.Point2D$Double $r8, $r9, $r14, $r15;
        java.lang.Object $r10;
        net.sourceforge.plantuml.timingdiagram.ChangeState r11;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r1 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        d0 = virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>(r1);

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r4 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForNotes(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.command.Position)>(r3, $r4);

        $d3 = $d1 + $d2;

        $d4 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForTopComment(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d5 = $d3 + $d4;

        $d6 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d7 = $d6 / 2.0;

        d8 = $d5 + $d7;

        $r5 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r11 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r10;

        $r12 = virtualinvoke r11.<net.sourceforge.plantuml.timingdiagram.ChangeState: net.sourceforge.plantuml.timingdiagram.TimeTick getWhen()>();

        $i0 = virtualinvoke $r12.<net.sourceforge.plantuml.timingdiagram.TimeTick: int compareTo(net.sourceforge.plantuml.timingdiagram.TimeTick)>(r1);

        if $i0 != 0 goto label2;

        $r13 = new net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint;

        $r14 = new java.awt.geom.Point2D$Double;

        specialinvoke $r14.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, d8);

        $r15 = new java.awt.geom.Point2D$Double;

        specialinvoke $r15.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, d8);

        specialinvoke $r13.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r14, $r15);

        return $r13;

     label2:
        goto label1;

     label3:
        $r7 = new net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint;

        $r8 = new java.awt.geom.Point2D$Double;

        $d9 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d10 = $d9 / 2.0;

        $d11 = d8 - $d10;

        specialinvoke $r8.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, $d11);

        $r9 = new java.awt.geom.Point2D$Double;

        $d12 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d13 = $d12 / 2.0;

        $d14 = d8 + $d13;

        specialinvoke $r9.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, $d14);

        specialinvoke $r7.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r8, $r9);

        return $r7;
    }

    public void addChange(net.sourceforge.plantuml.timingdiagram.ChangeState)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.timingdiagram.ChangeState r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.ChangeState;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    private double getPosInPixel(net.sourceforge.plantuml.timingdiagram.ChangeState)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.timingdiagram.ChangeState r1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r2;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.ChangeState;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.ChangeState: net.sourceforge.plantuml.timingdiagram.TimeTick getWhen()>();

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r3);

        return $d0;
    }

    private net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()
    {
        boolean $z0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r0, $r4;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r1;
        net.sourceforge.plantuml.style.Style $r2;
        net.sourceforge.plantuml.ISkinParam $r3, $r6;
        net.sourceforge.plantuml.FontParam $r5;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r4 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r6 = r1.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r5 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam TIMING>;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r6, $r5, null);

        return $r4;

     label1:
        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r3 = r1.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r2 = r1.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.style.Style style>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r3, $r2);

        return $r0;
    }

    private net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.String)
    {
        java.lang.String r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r0);

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r4 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r3, $r5, $r4);

        return $r6;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getPart1(double)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon$1 $r0;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r1;
        double d0;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.timingdiagram.graphic.Ribbon$1;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon$1: void <init>(net.sourceforge.plantuml.timingdiagram.graphic.Ribbon)>(r1);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.UDrawable getPart2()
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon$2 $r0;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r1;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        $r0 = new net.sourceforge.plantuml.timingdiagram.graphic.Ribbon$2;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon$2: void <init>(net.sourceforge.plantuml.timingdiagram.graphic.Ribbon)>(r1);

        return $r0;
    }

    private void drawNotes(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.command.Position)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.TimingNote r4;
        net.sourceforge.plantuml.command.Position $r5, r6;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r7;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r8;
        double d0;
        net.sourceforge.plantuml.ugraphic.UGraphic r9, $r11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r9 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r6 := @parameter1: net.sourceforge.plantuml.command.Position;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List notes>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.timingdiagram.TimingNote) $r3;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.command.Position getPosition()>();

        if $r5 != r6 goto label2;

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r8 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.timingdiagram.TimeTick getWhen()>();

        d0 = virtualinvoke $r7.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r8);

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d0);

        $r11 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingNote: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r11);

     label2:
        goto label1;

     label3:
        return;
    }

    private double getInitialWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.lang.String $r1, $r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.lang.String initialState>;

        if $r1 != null goto label1;

        return 0.0;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.lang.String initialState>;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.String)>($r2);

        $r5 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 + 24.0;

        return $d1;
    }

    private void drawHexa(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.timingdiagram.ChangeState)
    {
        double d0, $d1;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.timingdiagram.ChangeState r1;
        net.sourceforge.plantuml.style.Style $r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.graphic.SymbolContext $r4;
        net.sourceforge.plantuml.timingdiagram.graphic.HexaShape r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.timingdiagram.ChangeState;

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.style.Style style>;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.ChangeState: net.sourceforge.plantuml.graphic.SymbolContext getContext(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r3, $r2);

        r5 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: net.sourceforge.plantuml.timingdiagram.graphic.HexaShape create(double,double,net.sourceforge.plantuml.graphic.SymbolContext)>(d0, $d1, $r4);

        virtualinvoke r5.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r6);

        return;
    }

    private void drawFlat(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.timingdiagram.ChangeState)
    {
        double d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.ULine r0;
        net.sourceforge.plantuml.timingdiagram.ChangeState r1;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r2;
        net.sourceforge.plantuml.style.Style $r3;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.graphic.SymbolContext $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6, $r7, $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.timingdiagram.ChangeState;

        r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(d0);

        $r4 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.style.Style style>;

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.ChangeState: net.sourceforge.plantuml.graphic.SymbolContext getContext(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r4, $r3);

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r6);

        $d1 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d2 = $d1 / 2.0;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d2);

        $r9 = interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

        return;
    }

    private double getRibbonHeight()
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        int $i0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        $i0 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: int suggestedHeight>;

        $d0 = (double) $i0;

        return $d0;
    }

    private void drawPentaB(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.timingdiagram.ChangeState)
    {
        double d0, $d1;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.timingdiagram.ChangeState r1;
        net.sourceforge.plantuml.style.Style $r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.graphic.SymbolContext $r4;
        net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.timingdiagram.ChangeState;

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.style.Style style>;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.ChangeState: net.sourceforge.plantuml.graphic.SymbolContext getContext(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r3, $r2);

        r5 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape create(double,double,net.sourceforge.plantuml.graphic.SymbolContext)>(d0, $d1, $r4);

        virtualinvoke r5.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r6);

        return;
    }

    private void drawPentaA(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.timingdiagram.ChangeState)
    {
        net.sourceforge.plantuml.timingdiagram.ChangeState r0;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r1;
        net.sourceforge.plantuml.style.Style $r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.graphic.color.ColorType $r4;
        net.sourceforge.plantuml.graphic.color.Colors $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor r6;
        double d0, $d1;
        net.sourceforge.plantuml.timingdiagram.graphic.PentaAShape r7;
        net.sourceforge.plantuml.ugraphic.UGraphic r8;
        net.sourceforge.plantuml.graphic.SymbolContext r9;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r8 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        r0 := @parameter2: net.sourceforge.plantuml.timingdiagram.ChangeState;

        $r3 = r1.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r2 = r1.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.style.Style style>;

        r9 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.ChangeState: net.sourceforge.plantuml.graphic.SymbolContext getContext(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>($r3, $r2);

        $r5 = r1.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.color.Colors initialColors>;

        $r4 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r4);

        if r6 == null goto label1;

        r9 = virtualinvoke r9.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withBackColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r6);

     label1:
        $d1 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        r7 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.PentaAShape: net.sourceforge.plantuml.timingdiagram.graphic.PentaAShape create(double,double,net.sourceforge.plantuml.graphic.SymbolContext)>(d0, $d1, r9);

        virtualinvoke r7.<net.sourceforge.plantuml.timingdiagram.graphic.PentaAShape: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r8);

        return;
    }

    private double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r1;
        java.util.List $r2;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List constraints>;

        $d0 = staticinvoke <net.sourceforge.plantuml.timingdiagram.TimeConstraint: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder,java.util.List)>(r0, $r2);

        return $d0;
    }

    private double getHeightForNotes(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.command.Position)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.TimingNote r4;
        net.sourceforge.plantuml.command.Position $r5, r6;
        net.sourceforge.plantuml.graphic.StringBounder r7;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r7 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r6 := @parameter1: net.sourceforge.plantuml.command.Position;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List notes>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.timingdiagram.TimingNote) $r3;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingNote: net.sourceforge.plantuml.command.Position getPosition()>();

        if $r5 != r6 goto label2;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingNote: double getHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

     label2:
        goto label1;

     label3:
        return d1;
    }

    private double getMarginX()
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        return 12.0;
    }

    public void setInitialState(java.lang.String, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.color.Colors r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.color.Colors;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.lang.String initialState> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.color.Colors initialColors> = r2;

        return;
    }

    public void addConstraint(net.sourceforge.plantuml.timingdiagram.TimeConstraint)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List constraints>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public double getFullHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        net.sourceforge.plantuml.command.Position $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForTopComment(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = $d0 + $d1;

        $r2 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForNotes(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.command.Position)>(r1, $r2);

        $d4 = $d2 + $d3;

        $d5 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d6 = $d4 + $d5;

        $r3 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM>;

        $d7 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForNotes(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.command.Position)>(r1, $r3);

        $d8 = $d6 + $d7;

        $d9 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getBottomMargin()>();

        $d10 = $d8 + $d9;

        return $d10;
    }

    private double getBottomMargin()
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        return 10.0;
    }

    private void drawPart2(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, r5, $r7, $r9, $r11, $r15;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        net.sourceforge.plantuml.command.Position $r3, $r12, $r13, $r16;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r6, $r8, $r10, $r14;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d0 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForTopComment(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = $d0 + $d1;

        $r3 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        $d3 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForNotes(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.command.Position)>(r1, $r3);

        $d4 = $d2 + $d3;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d4);

        r5 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawBeforeZeroState(net.sourceforge.plantuml.ugraphic.UGraphic)>(r5);

        $d5 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d6 = $d5 / 2.0;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d6);

        $r7 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawBeforeZeroStateLabel(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

        specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawStates(net.sourceforge.plantuml.ugraphic.UGraphic)>(r5);

        $d7 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d8 = $d7 / 2.0;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d8);

        $r9 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawStatesLabels(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

        $d9 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d10 = $d9 / 2.0;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d10);

        $r11 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawConstraints(net.sourceforge.plantuml.ugraphic.UGraphic)>($r11);

        $r12 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawNotes(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.command.Position)>(r0, $r12);

        $d11 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d12 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d13 = $d11 + $d12;

        $r13 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        $d14 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getHeightForNotes(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.command.Position)>(r1, $r13);

        $d15 = $d13 + $d14;

        $r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d15);

        $r15 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        $r16 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM>;

        specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawNotes(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.command.Position)>($r15, $r16);

        return;
    }

    private void drawBeforeZeroState(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.lang.String $r1;
        java.util.List $r2, $r5, $r10;
        int $i0;
        net.sourceforge.plantuml.ugraphic.UGraphic r3, $r9;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        java.lang.Object $r6, $r11;
        net.sourceforge.plantuml.timingdiagram.ChangeState $r7, $r12;
        double d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.lang.String initialState>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        r4 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r5 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r6;

        d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.ChangeState)>($r7);

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getInitialWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d2 = neg $d1;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d2);

        $r9 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getInitialWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d4 = $d3 + d0;

        $r10 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        $r12 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r11;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawPentaA(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.timingdiagram.ChangeState)>($r9, $d4, $r12);

     label1:
        return;
    }

    private void drawBeforeZeroStateLabel(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r8;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r2;
        java.lang.String $r3, $r4;
        net.sourceforge.plantuml.graphic.TextBlock r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.lang.String initialState>;

        if $r3 == null goto label1;

        $r4 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.lang.String initialState>;

        r5 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.String)>($r4);

        r6 = interfaceinvoke r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getMarginX()>();

        $d1 = neg $d0;

        $d2 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = $d1 - $d2;

        $d4 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = neg $d4;

        $d6 = $d5 / 2.0;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, $d6);

        $r8 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke r5.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r8);

     label1:
        return;
    }

    private void drawStates(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.util.List $r1, $r2, $r3, $r4, $r13, $r16, $r19, $r22, $r27, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, i7;
        java.lang.Object $r5, $r14, $r17, $r20, $r23, $r28, $r33;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.ugraphic.UGraphic r6, $r8, $r11, $r26, $r31;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r10, $r25, $r30;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r9, $r12;
        double $d0, $d1, $d2, $d3, d4, $d5, $d6, d7, d8;
        net.sourceforge.plantuml.timingdiagram.ChangeState $r15, $r18, $r21, $r24, $r29, $r34, r36;
        byte $b6;
        java.lang.AssertionError $r35;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i7 = 0;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        if i7 >= $i1 goto label5;

        $r13 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i7);

        $r15 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r14;

        d7 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.ChangeState)>($r15);

        $r16 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $i5 = i7 + 1;

        $r17 = interfaceinvoke $r16.<java.util.List: java.lang.Object get(int)>($i5);

        $r18 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r17;

        d4 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.ChangeState)>($r18);

        $z2 = <net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: boolean $assertionsDisabled>;

        if $z2 != 0 goto label2;

        $b6 = d4 cmpl d7;

        if $b6 > 0 goto label2;

        $r35 = new java.lang.AssertionError;

        specialinvoke $r35.<java.lang.AssertionError: void <init>()>();

        throw $r35;

     label2:
        $r19 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(i7);

        $r21 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r20;

        $z3 = virtualinvoke $r21.<net.sourceforge.plantuml.timingdiagram.ChangeState: boolean isFlat()>();

        if $z3 == 0 goto label3;

        $r30 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d7);

        $r31 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r30);

        $d6 = d4 - d7;

        $r32 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r33 = interfaceinvoke $r32.<java.util.List: java.lang.Object get(int)>(i7);

        $r34 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r33;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawFlat(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.timingdiagram.ChangeState)>($r31, $d6, $r34);

        goto label4;

     label3:
        $r22 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i7);

        $r24 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r23;

        $z4 = virtualinvoke $r24.<net.sourceforge.plantuml.timingdiagram.ChangeState: boolean isCompletelyHidden()>();

        if $z4 != 0 goto label4;

        $r25 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d7);

        $r26 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r25);

        $d5 = d4 - d7;

        $r27 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r28 = interfaceinvoke $r27.<java.util.List: java.lang.Object get(int)>(i7);

        $r29 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r28;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawHexa(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.timingdiagram.ChangeState)>($r26, $d5, $r29);

     label4:
        i7 = i7 + 1;

        goto label1;

     label5:
        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 < 1 goto label7;

        $r4 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i4 = $i3 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i4);

        r36 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r5;

        d8 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.ChangeState)>(r36);

        $z0 = virtualinvoke r36.<net.sourceforge.plantuml.timingdiagram.ChangeState: boolean isFlat()>();

        if $z0 == 0 goto label6;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d8);

        $r11 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r12 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d2 = virtualinvoke $r12.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $d3 = $d2 - d8;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawFlat(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.timingdiagram.ChangeState)>($r11, $d3, r36);

        goto label7;

     label6:
        $z1 = virtualinvoke r36.<net.sourceforge.plantuml.timingdiagram.ChangeState: boolean isCompletelyHidden()>();

        if $z1 != 0 goto label7;

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d8);

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d0 = virtualinvoke $r9.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $d1 = $d0 - d8;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawPentaB(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.timingdiagram.ChangeState)>($r8, $d1, r36);

     label7:
        return;
    }

    private void drawStatesLabels(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r17, $r23;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r2;
        java.util.List $r3, $r4, $r10, $r11;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r5, $r13;
        net.sourceforge.plantuml.timingdiagram.ChangeState r6, $r14;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r7, $r12;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r8, $r15;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        boolean $z0, $z1, $z2;
        java.lang.String $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r16, $r22;
        net.sourceforge.plantuml.graphic.TextBlock r18, r20;
        net.sourceforge.plantuml.awt.geom.Dimension2D r19, r21;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        i4 = 0;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i4 >= $i0 goto label5;

        $r4 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i4);

        r6 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r5;

        $r7 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r8 = virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.ChangeState: net.sourceforge.plantuml.timingdiagram.TimeTick getWhen()>();

        d0 = virtualinvoke $r7.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r8);

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.ChangeState: boolean isBlank()>();

        if $z0 != 0 goto label4;

        $z1 = virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.ChangeState: boolean isCompletelyHidden()>();

        if $z1 != 0 goto label4;

        $z2 = virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.ChangeState: boolean isFlat()>();

        if $z2 != 0 goto label4;

        $r9 = virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.ChangeState: java.lang.String getState()>();

        r18 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.String)>($r9);

        r19 = interfaceinvoke r18.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r10 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $i1 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i4 != $i2 goto label2;

        $d9 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getMarginX()>();

        d10 = d0 + $d9;

        goto label3;

     label2:
        $r12 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r11 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        $i3 = i4 + 1;

        $r13 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i3);

        $r14 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r13;

        $r15 = virtualinvoke $r14.<net.sourceforge.plantuml.timingdiagram.ChangeState: net.sourceforge.plantuml.timingdiagram.TimeTick getWhen()>();

        d1 = virtualinvoke $r12.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r15);

        $d2 = d0 + d1;

        $d3 = $d2 / 2.0;

        $d4 = virtualinvoke r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = $d4 / 2.0;

        d10 = $d3 - $d5;

     label3:
        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d6 = virtualinvoke r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d7 = neg $d6;

        $d8 = $d7 / 2.0;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d10, $d8);

        $r17 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke r18.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r17);

     label4:
        r20 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.TextBlock getCommentTopBlock(net.sourceforge.plantuml.timingdiagram.ChangeState)>(r6);

        r21 = interfaceinvoke r20.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r22 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d11 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getMarginX()>();

        $d12 = d0 + $d11;

        $d13 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        $d14 = neg $d13;

        $d15 = $d14 / 2.0;

        $d16 = virtualinvoke r21.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d17 = $d15 - $d16;

        specialinvoke $r22.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d12, $d17);

        $r23 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        interfaceinvoke r20.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r23);

        i4 = i4 + 1;

        goto label1;

     label5:
        return;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getCommentTopBlock(net.sourceforge.plantuml.timingdiagram.ChangeState)
    {
        net.sourceforge.plantuml.timingdiagram.ChangeState r0;
        java.lang.String $r1, $r3;
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r2;
        net.sourceforge.plantuml.graphic.TextBlock $r4, $r5;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.ChangeState;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.ChangeState: java.lang.String getComment()>();

        if $r1 != null goto label1;

        $r5 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        return $r5;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.ChangeState: java.lang.String getComment()>();

        $r4 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.TextBlock createTextBlock(java.lang.String)>($r3);

        return $r4;
    }

    private double getHeightForTopComment(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.ChangeState r4;
        net.sourceforge.plantuml.graphic.TextBlock $r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r7;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List changes>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.timingdiagram.ChangeState) $r3;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.TextBlock getCommentTopBlock(net.sourceforge.plantuml.timingdiagram.ChangeState)>(r4);

        $r7 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d0 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    private void drawConstraints(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r6;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: java.util.List constraints>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.timingdiagram.TimeConstraint) $r3;

        $r6 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.timingdiagram.TimingRuler)>(r5, $r6);

        goto label1;

     label2:
        return;
    }

    static boolean access$000(net.sourceforge.plantuml.timingdiagram.graphic.Ribbon)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        boolean $z0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        $z0 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: boolean compact>;

        return $z0;
    }

    static net.sourceforge.plantuml.graphic.TextBlock access$100(net.sourceforge.plantuml.timingdiagram.graphic.Ribbon)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: net.sourceforge.plantuml.graphic.TextBlock title>;

        return $r1;
    }

    static double access$200(net.sourceforge.plantuml.timingdiagram.graphic.Ribbon)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getRibbonHeight()>();

        return $d0;
    }

    static double access$300(net.sourceforge.plantuml.timingdiagram.graphic.Ribbon, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: double getInitialWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    static void access$400(net.sourceforge.plantuml.timingdiagram.graphic.Ribbon, net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Ribbon r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.Ribbon;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: void drawPart2(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/timingdiagram/graphic/Ribbon;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.timingdiagram.graphic.Ribbon: boolean $assertionsDisabled> = $z1;

        return;
    }
}
