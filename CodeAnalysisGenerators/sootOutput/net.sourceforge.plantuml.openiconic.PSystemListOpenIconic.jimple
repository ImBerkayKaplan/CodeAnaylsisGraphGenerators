public class net.sourceforge.plantuml.openiconic.PSystemListOpenIconic extends net.sourceforge.plantuml.PlainDiagram
{

    public void <init>(net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.openiconic.PSystemListOpenIconic r0;
        net.sourceforge.plantuml.core.UmlSource r1;

        r0 := @this: net.sourceforge.plantuml.openiconic.PSystemListOpenIconic;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        specialinvoke r0.<net.sourceforge.plantuml.PlainDiagram: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        return;
    }

    protected net.sourceforge.plantuml.graphic.UDrawable getRootDrawable(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        java.util.ArrayList $r0;
        java.io.BufferedReader $r2;
        java.io.InputStreamReader $r3;
        net.sourceforge.plantuml.openiconic.PSystemListOpenIconic r4;
        java.io.InputStream $r5;
        java.lang.String $r6, $r14;
        net.sourceforge.plantuml.graphic.TextBlockHorizontal $r7;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r8;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r13;
        java.lang.Throwable $r15, $r17;
        net.sourceforge.plantuml.FileFormatOption r18;
        java.util.List r22;

        r4 := @this: net.sourceforge.plantuml.openiconic.PSystemListOpenIconic;

        r18 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("<b>List Open Iconic");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("<i>Credit to");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("https://useiconic.com/open");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(" ");

        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        $r5 = specialinvoke r4.<net.sourceforge.plantuml.openiconic.PSystemListOpenIconic: java.io.InputStream getRessourceAllTxt()>();

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

     label1:
        $r6 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r6 == null goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<&");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label1;

     label2:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

        goto label8;

     label3:
        $r17 := @caughtexception;

     label4:
        virtualinvoke $r2.<java.io.BufferedReader: void close()>();

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        virtualinvoke $r17.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r15);

     label7:
        throw $r17;

     label8:
        r22 = staticinvoke <net.sourceforge.plantuml.donors.PSystemDonors: java.util.List getCols(java.util.List,int,int)>($r0, 7, 0);

        $r7 = new net.sourceforge.plantuml.graphic.TextBlockHorizontal;

        $r8 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment TOP>;

        specialinvoke $r7.<net.sourceforge.plantuml.graphic.TextBlockHorizontal: void <init>(java.util.List,net.sourceforge.plantuml.graphic.VerticalAlignment)>(r22, $r8);

        return $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    private java.io.InputStream getRessourceAllTxt()
    {
        java.lang.Class $r0;
        java.io.InputStream $r1;
        net.sourceforge.plantuml.openiconic.PSystemListOpenIconic r2;

        r2 := @this: net.sourceforge.plantuml.openiconic.PSystemListOpenIconic;

        $r0 = class "Lnet/sourceforge/plantuml/openiconic/data/DummyIcon;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("all.txt");

        return $r1;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.openiconic.PSystemListOpenIconic r1;

        r1 := @this: net.sourceforge.plantuml.openiconic.PSystemListOpenIconic;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Open iconic)");

        return $r0;
    }
}
