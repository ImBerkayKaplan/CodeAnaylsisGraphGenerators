public class net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UPath, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.tikz.TikzGraphics)
    {
        net.sourceforge.plantuml.ugraphic.UParam r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, $r5, $r12, $r14;
        boolean $z0;
        net.sourceforge.plantuml.tikz.TikzGraphics r2;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r3;
        java.awt.Color $r4, $r6, r13, r15;
        net.sourceforge.plantuml.ugraphic.UStroke $r7, $r8;
        double $d0, d1, d2;
        java.lang.String $r9;
        net.sourceforge.plantuml.ugraphic.UPath r10;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r11;
        char $c0;
        net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz r16;

        r16 := @this: net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz;

        r10 := @parameter0: net.sourceforge.plantuml.ugraphic.UPath;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r3 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r0 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r2 := @parameter5: net.sourceforge.plantuml.tikz.TikzGraphics;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $z0 = r1 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z0 == 0 goto label1;

        r11 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r1;

        $r12 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor1()>();

        r13 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r12);

        $r14 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor2()>();

        r15 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r14);

        $c0 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: char getPolicy()>();

        virtualinvoke r2.<net.sourceforge.plantuml.tikz.TikzGraphics: void setGradientColor(java.awt.Color,java.awt.Color,char)>(r13, r15, $c0);

        goto label2;

     label1:
        $r4 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r1);

        virtualinvoke r2.<net.sourceforge.plantuml.tikz.TikzGraphics: void setFillColor(java.awt.Color)>($r4);

     label2:
        $r5 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r6 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r5);

        virtualinvoke r2.<net.sourceforge.plantuml.tikz.TikzGraphics: void setStrokeColor(java.awt.Color)>($r6);

        $r7 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d0 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r8 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UStroke: java.lang.String getDashTikz()>();

        virtualinvoke r2.<net.sourceforge.plantuml.tikz.TikzGraphics: void setStrokeWidth(double,java.lang.String)>($d0, $r9);

        virtualinvoke r2.<net.sourceforge.plantuml.tikz.TikzGraphics: void upath(double,double,net.sourceforge.plantuml.ugraphic.UPath)>(d1, d2, r10);

        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.tikz.TikzGraphics $r5;
        net.sourceforge.plantuml.ugraphic.UPath $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UPath) r1;

        $r5 = (net.sourceforge.plantuml.tikz.TikzGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz: void draw(net.sourceforge.plantuml.ugraphic.UPath,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.tikz.TikzGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
