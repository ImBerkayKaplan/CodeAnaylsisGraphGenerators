public class gen.lib.common.ns__c extends java.lang.Object
{
    private static smetana.core.jmp_buf jbuf;

    public void <init>()
    {
        gen.lib.common.ns__c r0;

        r0 := @this: gen.lib.common.ns__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void add_tree_edge(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        boolean $z0;
        smetana.core.Z $r1, $r3, $r6, $r34, $r37, $r40, $r43;
        h.ST_elist $r2, $r4, $r7, $r10, $r12, $r13, $r15, $r16, $r18, $r20, $r22, $r23, $r25, $r26, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        smetana.core.CArrayOfStar $r5, $r11, $r14, $r17, $r21, $r24, $r27, $r36, $r42;
        h.ST_Agnode_s $r8, $r9, $r39, $r45, r50, r51;
        java.lang.Object $r19, $r29;
        h.ST_nlist_t $r35, $r38, $r41, $r44;
        java.lang.Throwable $r48;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6au5htcaxhw0blmx5c48v03u0", "add_tree_edge");

     label1:
        $z0 = staticinvoke <smetana.core.Macro: boolean TREE_EDGE(h.ST_Agedge_s)>(r0);

        if $z0 == 0 goto label2;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cq4nqjjxvb0dtdfy4c7pwpqai");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6fzmgjpkhmnx0a2cnt0q0rceg");

     label2:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_elist Tree_edge>;

        $i0 = $r2.<h.ST_elist: int size>;

        staticinvoke <smetana.core.Macro: void ED_tree_index(h.ST_Agedge_s,int)>(r0, $i0);

        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = $r3.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r5 = $r4.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r7 = $r6.<smetana.core.Z: h.ST_elist Tree_edge>;

        $i1 = $r7.<h.ST_elist: int size>;

        $i2 = $i1 + 1;

        $r7.<h.ST_elist: int size> = $i2;

        virtualinvoke $r5.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i1, r0);

        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $i3 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r8);

        if $i3 != 0 goto label3;

        $r40 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r41 = $r40.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $r42 = $r41.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r43 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r44 = $r43.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $i17 = $r44.<h.ST_nlist_t: int size>;

        $i18 = $i17 + 1;

        $r44.<h.ST_nlist_t: int size> = $i18;

        $r45 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        virtualinvoke $r42.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i17, $r45);

     label3:
        $r9 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $i4 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r9);

        if $i4 != 0 goto label4;

        $r34 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r35 = $r34.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $r36 = $r35.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r37 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r38 = $r37.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $i15 = $r38.<h.ST_nlist_t: int size>;

        $i16 = $i15 + 1;

        $r38.<h.ST_nlist_t: int size> = $i16;

        $r39 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        virtualinvoke $r36.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i15, $r39);

     label4:
        r50 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r50, 1);

        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r50);

        $r11 = $r10.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r12 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r50);

        $i5 = $r12.<h.ST_elist: int size>;

        $i6 = $i5 + 1;

        $r12.<h.ST_elist: int size> = $i6;

        virtualinvoke $r11.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i5, r0);

        $r13 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r50);

        $r14 = $r13.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r15 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r50);

        $i7 = $r15.<h.ST_elist: int size>;

        virtualinvoke $r14.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i7, null);

        $r16 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r50);

        $r17 = $r16.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r18 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r50);

        $i8 = $r18.<h.ST_elist: int size>;

        $i9 = $i8 - 1;

        $r19 = virtualinvoke $r17.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i9);

        if $r19 != null goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9src34zgmgy8yvdzfs1ozlh0w");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6fzmgjpkhmnx0a2cnt0q0rceg");

     label5:
        r51 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r51, 1);

        $r20 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r51);

        $r21 = $r20.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r22 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r51);

        $i10 = $r22.<h.ST_elist: int size>;

        $i11 = $i10 + 1;

        $r22.<h.ST_elist: int size> = $i11;

        virtualinvoke $r21.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i10, r0);

        $r23 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r51);

        $r24 = $r23.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r25 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r51);

        $i12 = $r25.<h.ST_elist: int size>;

        virtualinvoke $r24.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i12, null);

        $r26 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r51);

        $r27 = $r26.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r28 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r51);

        $i13 = $r28.<h.ST_elist: int size>;

        $i14 = $i13 - 1;

        $r29 = virtualinvoke $r27.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i14);

        if $r29 != null goto label6;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("f0uri98pv606g2qjpy9k385cy");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6fzmgjpkhmnx0a2cnt0q0rceg");

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6au5htcaxhw0blmx5c48v03u0", "add_tree_edge");

        goto label8;

     label7:
        $r48 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6au5htcaxhw0blmx5c48v03u0", "add_tree_edge");

        throw $r48;

     label8:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
    }

    public static void exchange_tree_edges(h.ST_Agedge_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, r1, $r13, $r24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17;
        smetana.core.Z $r2;
        h.ST_elist $r3, $r5, $r6, $r7, $r8, $r10, $r14, $r16, $r17, $r18, $r19, $r21, $r25, $r27, $r29, $r30, $r31, $r32, $r34, $r35, $r37, $r38, $r39, $r40, $r42, $r43, $r46;
        smetana.core.CArrayOfStar $r4, $r9, $r11, $r15, $r20, $r22, $r26, $r28, $r33, $r36, $r41, $r44, $r47;
        java.lang.Object $r12, $r23, $r45, $r48;
        boolean $z0, $z1;
        java.lang.Throwable $r49;
        h.ST_Agnode_s r51, r52, r53, r54;

        r1 := @parameter0: h.ST_Agedge_s;

        r0 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9b7b78pmafynmvffztrqnlxtn", "exchange_tree_edges");

     label01:
        $i0 = staticinvoke <smetana.core.Macro: int ED_tree_index(h.ST_Agedge_s)>(r1);

        staticinvoke <smetana.core.Macro: void ED_tree_index(h.ST_Agedge_s,int)>(r0, $i0);

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r4 = $r3.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $i1 = staticinvoke <smetana.core.Macro: int ED_tree_index(h.ST_Agedge_s)>(r1);

        virtualinvoke $r4.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i1, r0);

        staticinvoke <smetana.core.Macro: void ED_tree_index(h.ST_Agedge_s,int)>(r1, -1);

        r51 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r1);

        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r51);

        $r6 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r51);

        $i2 = $r6.<h.ST_elist: int size>;

        $i3 = $i2 - 1;

        $r5.<h.ST_elist: int size> = $i3;

        $r7 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r51);

        i14 = $r7.<h.ST_elist: int size>;

        i15 = 0;

     label02:
        if i15 > i14 goto label04;

        $r46 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r51);

        $r47 = $r46.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r48 = virtualinvoke $r47.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i15);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r48, r1);

        if $z1 == 0 goto label03;

        goto label04;

     label03:
        i15 = i15 + 1;

        goto label02;

     label04:
        $r8 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r51);

        $r9 = $r8.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r51);

        $r11 = $r10.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r12 = virtualinvoke $r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i14);

        $r13 = (h.ST_Agedge_s) $r12;

        virtualinvoke $r9.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i15, $r13);

        $r14 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r51);

        $r15 = $r14.<h.ST_elist: smetana.core.CArrayOfStar list>;

        virtualinvoke $r15.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i14, null);

        r52 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r1);

        $r16 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r52);

        $r17 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r52);

        $i4 = $r17.<h.ST_elist: int size>;

        $i5 = $i4 - 1;

        $r16.<h.ST_elist: int size> = $i5;

        $r18 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r52);

        i16 = $r18.<h.ST_elist: int size>;

        i17 = 0;

     label05:
        if i17 > i16 goto label07;

        $r43 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r52);

        $r44 = $r43.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r45 = virtualinvoke $r44.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i17);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r45, r1);

        if $z0 == 0 goto label06;

        goto label07;

     label06:
        i17 = i17 + 1;

        goto label05;

     label07:
        $r19 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r52);

        $r20 = $r19.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r21 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r52);

        $r22 = $r21.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r23 = virtualinvoke $r22.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i16);

        $r24 = (h.ST_Agedge_s) $r23;

        virtualinvoke $r20.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i17, $r24);

        $r25 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r52);

        $r26 = $r25.<h.ST_elist: smetana.core.CArrayOfStar list>;

        virtualinvoke $r26.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i16, null);

        r53 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r27 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r53);

        $r28 = $r27.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r29 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r53);

        $i6 = $r29.<h.ST_elist: int size>;

        virtualinvoke $r28.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i6, r0);

        $r30 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r53);

        $r31 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r53);

        $i7 = $r31.<h.ST_elist: int size>;

        $i8 = $i7 + 1;

        $r30.<h.ST_elist: int size> = $i8;

        $r32 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r53);

        $r33 = $r32.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r34 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r53);

        $i9 = $r34.<h.ST_elist: int size>;

        virtualinvoke $r33.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i9, null);

        r54 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r35 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r54);

        $r36 = $r35.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r37 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r54);

        $i10 = $r37.<h.ST_elist: int size>;

        virtualinvoke $r36.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i10, r0);

        $r38 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r54);

        $r39 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r54);

        $i11 = $r39.<h.ST_elist: int size>;

        $i12 = $i11 + 1;

        $r38.<h.ST_elist: int size> = $i12;

        $r40 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r54);

        $r41 = $r40.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r42 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r54);

        $i13 = $r42.<h.ST_elist: int size>;

        virtualinvoke $r41.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i13, null);

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9b7b78pmafynmvffztrqnlxtn", "exchange_tree_edges");

        goto label11;

     label09:
        $r49 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9b7b78pmafynmvffztrqnlxtn", "exchange_tree_edges");

        throw $r49;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void init_rank()
    {
        smetana.core.Z $r0, $r2, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        h.ST_nodequeue r1;
        h.ST_Agraph_s $r3;
        h.ST_Agnode_s $r4, $r18, $r19, $r20, $r21, $r22, r25;
        h.ST_elist $r10, $r14;
        smetana.core.CArrayOfStar $r11, $r15;
        java.lang.Object $r12, $r16;
        h.ST_Agedge_s $r13, $r17;
        java.lang.Throwable $r23;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dbxco6m0mabzhsqfo3pb8nctk", "init_rank");

     label01:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r0.<smetana.core.Z: int N_nodes>;

        r1 = staticinvoke <gen.lib.common.utils__c: h.ST_nodequeue new_queue(int)>($i0);

        i11 = 0;

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r25 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r3);

     label02:
        if r25 == null goto label04;

        $i10 = staticinvoke <smetana.core.Macro: int ND_priority(h.ST_Agnode_s)>(r25);

        if $i10 != 0 goto label03;

        staticinvoke <gen.lib.common.utils__c: void enqueue(h.ST_nodequeue,h.ST_Agnode_s)>(r1, r25);

     label03:
        r25 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r25);

        goto label02;

     label04:
        $r4 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s dequeue(h.ST_nodequeue)>(r1);

        if $r4 == null goto label09;

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>($r4, 0);

        i11 = i11 + 1;

        i12 = 0;

     label05:
        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>($r4);

        $r11 = $r10.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r12 = virtualinvoke $r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i12);

        $r13 = (h.ST_Agedge_s) $r12;

        if $r13 == null goto label06;

        $i5 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r4);

        $r22 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r13);

        $i6 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r22);

        $i7 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>($r13);

        $i8 = $i6 + $i7;

        $i9 = staticinvoke <smetana.core.Macro: int MAX(int,int)>($i5, $i8);

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>($r4, $i9);

        i12 = i12 + 1;

        goto label05;

     label06:
        i13 = 0;

     label07:
        $r14 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>($r4);

        $r15 = $r14.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r16 = virtualinvoke $r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i13);

        $r17 = (h.ST_Agedge_s) $r16;

        if $r17 == null goto label04;

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r17);

        $r19 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r17);

        $i2 = staticinvoke <smetana.core.Macro: int ND_priority(h.ST_Agnode_s)>($r19);

        $i3 = $i2 - 1;

        staticinvoke <smetana.core.Macro: void ND_priority(h.ST_Agnode_s,int)>($r18, $i3);

        $r20 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r17);

        $i4 = staticinvoke <smetana.core.Macro: int ND_priority(h.ST_Agnode_s)>($r20);

        if $i4 > 0 goto label08;

        $r21 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r17);

        staticinvoke <gen.lib.common.utils__c: void enqueue(h.ST_nodequeue,h.ST_Agnode_s)>(r1, $r21);

     label08:
        i13 = i13 + 1;

        goto label07;

     label09:
        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r5.<smetana.core.Z: int N_nodes>;

        if i11 == $i1 goto label10;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7sgp99x1l3hzfks5wykxa87gf");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bwwunxmw4kgz6qntbn6xp0cur");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3dk132mz1u2pf0tla64kl6hv0");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("916bi45h6sjvte1rgig12b1v2");

     label10:
        staticinvoke <gen.lib.common.utils__c: void free_queue(h.ST_nodequeue)>(r1);

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dbxco6m0mabzhsqfo3pb8nctk", "init_rank");

        goto label14;

     label12:
        $r23 := @caughtexception;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dbxco6m0mabzhsqfo3pb8nctk", "init_rank");

        throw $r23;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static h.ST_Agnode_s incident(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agnode_s $r1, $r2, $r3, r6, r7;
        int $i0, $i1, $i2;
        java.lang.Throwable $r4;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bj7ux5kz8ls2lnfh0ix6i00b9", "incident");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $i0 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r1);

        if $i0 == 0 goto label3;

        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $i2 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r3);

        if $i2 != 0 goto label5;

        r6 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bj7ux5kz8ls2lnfh0ix6i00b9", "incident");

        return r6;

     label3:
        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $i1 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r2);

        if $i1 == 0 goto label5;

        r7 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bj7ux5kz8ls2lnfh0ix6i00b9", "incident");

        return r7;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bj7ux5kz8ls2lnfh0ix6i00b9", "incident");

        return null;

     label6:
        $r4 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bj7ux5kz8ls2lnfh0ix6i00b9", "incident");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
    }

    public static h.ST_Agedge_s leave_edge()
    {
        smetana.core.Z $r0, $r1, $r2, $r4, $r5, $r6, $r9, $r12, $r13, $r16, $r18, $r21, $r24, $r25, $r28, $r34, $r37;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, $i20;
        h.ST_elist $r3, $r7, $r14, $r19, $r26;
        smetana.core.CArrayOfStar $r8, $r15, $r20, $r27;
        java.lang.Object $r10, $r17, $r22, $r29;
        h.ST_Agedge_s $r11, $r23, r32;
        java.lang.Throwable $r30;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("4i9tcvid2iql874c6k70s9aqm", "leave_edge");

     label01:
        r32 = null;

        i18 = 0;

        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        i0 = $r0.<smetana.core.Z: int S_i>;

     label02:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r1.<smetana.core.Z: int S_i>;

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_elist Tree_edge>;

        $i2 = $r3.<h.ST_elist: int size>;

        if $i1 >= $i2 goto label07;

        $r18 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r19 = $r18.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r20 = $r19.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r21 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i11 = $r21.<smetana.core.Z: int S_i>;

        $r22 = virtualinvoke $r20.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i11);

        $r23 = (h.ST_Agedge_s) $r22;

        $i12 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>($r23);

        if $i12 >= 0 goto label06;

        if r32 == null goto label03;

        $i16 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>(r32);

        $i17 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>($r23);

        if $i16 <= $i17 goto label04;

        r32 = $r23;

        goto label04;

     label03:
        $r25 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r26 = $r25.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r27 = $r26.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r28 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i15 = $r28.<smetana.core.Z: int S_i>;

        $r29 = virtualinvoke $r27.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i15);

        r32 = (h.ST_Agedge_s) $r29;

     label04:
        i18 = i18 + 1;

        $r34 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i19 = $r34.<smetana.core.Z: int Search_size>;

        if i18 < $i19 goto label06;

     label05:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4i9tcvid2iql874c6k70s9aqm", "leave_edge");

        return r32;

     label06:
        $r24 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i13 = $r24.<smetana.core.Z: int S_i>;

        $i14 = $i13 + 1;

        $r24.<smetana.core.Z: int S_i> = $i14;

        goto label02;

     label07:
        if i0 <= 0 goto label13;

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4.<smetana.core.Z: int S_i> = 0;

     label08:
        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i3 = $r5.<smetana.core.Z: int S_i>;

        if $i3 >= i0 goto label13;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r7 = $r6.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r8 = $r7.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i4 = $r9.<smetana.core.Z: int S_i>;

        $r10 = virtualinvoke $r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i4);

        $r11 = (h.ST_Agedge_s) $r10;

        $i5 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>($r11);

        if $i5 >= 0 goto label12;

        if r32 == null goto label09;

        $i9 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>(r32);

        $i10 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>($r11);

        if $i9 <= $i10 goto label10;

        r32 = $r11;

        goto label10;

     label09:
        $r13 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r14 = $r13.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r15 = $r14.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i8 = $r16.<smetana.core.Z: int S_i>;

        $r17 = virtualinvoke $r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i8);

        r32 = (h.ST_Agedge_s) $r17;

     label10:
        i18 = i18 + 1;

        $r37 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i20 = $r37.<smetana.core.Z: int Search_size>;

        if i18 < $i20 goto label12;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4i9tcvid2iql874c6k70s9aqm", "leave_edge");

        return r32;

     label12:
        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i6 = $r12.<smetana.core.Z: int S_i>;

        $i7 = $i6 + 1;

        $r12.<smetana.core.Z: int S_i> = $i7;

        goto label08;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4i9tcvid2iql874c6k70s9aqm", "leave_edge");

        return r32;

     label14:
        $r30 := @caughtexception;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4i9tcvid2iql874c6k70s9aqm", "leave_edge");

        throw $r30;

        catch java.lang.Throwable from label01 to label05 with label14;
        catch java.lang.Throwable from label06 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public static void dfs_enter_outedge(h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, $r10, $r11, $r12, $r13, $r15;
        h.ST_elist $r1, $r5;
        smetana.core.CArrayOfStar $r2, $r6;
        java.lang.Object $r3, $r7;
        h.ST_Agedge_s $r4, $r8, $r21;
        smetana.core.Z $r9, $r14, $r16, $r17, $r18, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, i11;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r22;

        r0 := @parameter0: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("10lkpr4y40luvy2idlozfiva3", "dfs_enter_outedge");

     label01:
        i10 = 0;

     label02:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        $r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i10);

        $r4 = (h.ST_Agedge_s) $r3;

        if $r4 == null goto label06;

        $z0 = staticinvoke <smetana.core.Macro: boolean TREE_EDGE(h.ST_Agedge_s)>($r4);

        if $z0 != 0 goto label04;

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i5 = $r14.<smetana.core.Z: int Low>;

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r4);

        $i6 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r15);

        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i7 = $r16.<smetana.core.Z: int Lim>;

        $z1 = staticinvoke <smetana.core.Macro: boolean SEQ(int,int,int)>($i5, $i6, $i7);

        $z2 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z1);

        if $z2 == 0 goto label05;

        i8 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>($r4);

        $r17 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i9 = $r17.<smetana.core.Z: int Slack>;

        if i8 < $i9 goto label03;

        $r20 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r21 = $r20.<smetana.core.Z: h.ST_Agedge_s Enter>;

        if $r21 != null goto label05;

     label03:
        $r18 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r18.<smetana.core.Z: h.ST_Agedge_s Enter> = $r4;

        $r19 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r19.<smetana.core.Z: int Slack> = i8;

        goto label05;

     label04:
        $r12 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r4);

        $i3 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r12);

        $i4 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r0);

        if $i3 >= $i4 goto label05;

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r4);

        staticinvoke <gen.lib.common.ns__c: void dfs_enter_outedge(h.ST_Agnode_s)>($r13);

     label05:
        i10 = i10 + 1;

        goto label02;

     label06:
        i11 = 0;

     label07:
        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r0);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i11);

        $r8 = (h.ST_Agedge_s) $r7;

        if $r8 == null goto label09;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r9.<smetana.core.Z: int Slack>;

        if $i0 <= 0 goto label09;

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r8);

        $i1 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r10);

        $i2 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r0);

        if $i1 >= $i2 goto label08;

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r8);

        staticinvoke <gen.lib.common.ns__c: void dfs_enter_outedge(h.ST_Agnode_s)>($r11);

     label08:
        i11 = i11 + 1;

        goto label07;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("10lkpr4y40luvy2idlozfiva3", "dfs_enter_outedge");

        goto label12;

     label10:
        $r22 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("10lkpr4y40luvy2idlozfiva3", "dfs_enter_outedge");

        throw $r22;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void dfs_enter_inedge(h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, $r10, $r11, $r12, $r13, $r15;
        h.ST_elist $r1, $r5;
        smetana.core.CArrayOfStar $r2, $r6;
        java.lang.Object $r3, $r7;
        h.ST_Agedge_s $r4, $r8, $r21;
        smetana.core.Z $r9, $r14, $r16, $r17, $r18, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9, i10, i11;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r22;

        r0 := @parameter0: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2z9nii6380p8qlql8nznzgvof", "dfs_enter_inedge");

     label01:
        i10 = 0;

     label02:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r0);

        $r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i10);

        $r4 = (h.ST_Agedge_s) $r3;

        if $r4 == null goto label06;

        $z0 = staticinvoke <smetana.core.Macro: boolean TREE_EDGE(h.ST_Agedge_s)>($r4);

        if $z0 != 0 goto label04;

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i5 = $r14.<smetana.core.Z: int Low>;

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r4);

        $i6 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r15);

        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i7 = $r16.<smetana.core.Z: int Lim>;

        $z1 = staticinvoke <smetana.core.Macro: boolean SEQ(int,int,int)>($i5, $i6, $i7);

        $z2 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z1);

        if $z2 == 0 goto label05;

        i8 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>($r4);

        $r17 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i9 = $r17.<smetana.core.Z: int Slack>;

        if i8 < $i9 goto label03;

        $r20 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r21 = $r20.<smetana.core.Z: h.ST_Agedge_s Enter>;

        if $r21 != null goto label05;

     label03:
        $r18 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r18.<smetana.core.Z: h.ST_Agedge_s Enter> = $r4;

        $r19 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r19.<smetana.core.Z: int Slack> = i8;

        goto label05;

     label04:
        $r12 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r4);

        $i3 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r12);

        $i4 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r0);

        if $i3 >= $i4 goto label05;

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r4);

        staticinvoke <gen.lib.common.ns__c: void dfs_enter_inedge(h.ST_Agnode_s)>($r13);

     label05:
        i10 = i10 + 1;

        goto label02;

     label06:
        i11 = 0;

     label07:
        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r0);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i11);

        $r8 = (h.ST_Agedge_s) $r7;

        if $r8 == null goto label09;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r9.<smetana.core.Z: int Slack>;

        if $i0 <= 0 goto label09;

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r8);

        $i1 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r10);

        $i2 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r0);

        if $i1 >= $i2 goto label08;

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r8);

        staticinvoke <gen.lib.common.ns__c: void dfs_enter_inedge(h.ST_Agnode_s)>($r11);

     label08:
        i11 = i11 + 1;

        goto label07;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2z9nii6380p8qlql8nznzgvof", "dfs_enter_inedge");

        goto label12;

     label10:
        $r22 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2z9nii6380p8qlql8nznzgvof", "dfs_enter_inedge");

        throw $r22;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static h.ST_Agedge_s enter_edge(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, r8;
        h.ST_Agnode_s $r1, $r2, r11;
        int $i0, $i1, $i2, $i3;
        smetana.core.Z $r3, $r4, $r5, $r6, $r7;
        java.lang.Throwable $r9;
        boolean z0;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("aeu2po1o1rvibmafk0k8dw0fh", "enter_edge");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $i0 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r1);

        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $i1 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r2);

        if $i0 >= $i1 goto label2;

        r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        z0 = 0;

        goto label3;

     label2:
        r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        z0 = 1;

     label3:
        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3.<smetana.core.Z: h.ST_Agedge_s Enter> = null;

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4.<smetana.core.Z: int Slack> = 2147483647;

        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i2 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>(r11);

        $r5.<smetana.core.Z: int Low> = $i2;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i3 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r11);

        $r6.<smetana.core.Z: int Lim> = $i3;

        if z0 == 0 goto label4;

        staticinvoke <gen.lib.common.ns__c: void dfs_enter_outedge(h.ST_Agnode_s)>(r11);

        goto label5;

     label4:
        staticinvoke <gen.lib.common.ns__c: void dfs_enter_inedge(h.ST_Agnode_s)>(r11);

     label5:
        $r7 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        r8 = $r7.<smetana.core.Z: h.ST_Agedge_s Enter>;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aeu2po1o1rvibmafk0k8dw0fh", "enter_edge");

        return r8;

     label7:
        $r9 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aeu2po1o1rvibmafk0k8dw0fh", "enter_edge");

        throw $r9;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static boolean treesearch(h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, $r9, $r13, $r14, $r18;
        h.ST_elist $r1, $r5, $r11, $r16;
        smetana.core.CArrayOfStar $r2, $r6;
        java.lang.Object $r3, $r7;
        h.ST_Agedge_s $r4, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        smetana.core.Z $r10, $r12, $r15, $r17;
        boolean $z0, $z1;
        java.lang.Throwable $r19;

        r0 := @parameter0: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1gvyafmercq92v3lg6gb33cbt", "treesearch");

     label01:
        i10 = 0;

     label02:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        $r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i10);

        $r4 = (h.ST_Agedge_s) $r3;

        if $r4 == null goto label05;

        $r14 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r4);

        $i5 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r14);

        if $i5 != 0 goto label04;

        $i6 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>($r4);

        if $i6 != 0 goto label04;

        staticinvoke <gen.lib.common.ns__c: void add_tree_edge(h.ST_Agedge_s)>($r4);

        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r16 = $r15.<smetana.core.Z: h.ST_elist Tree_edge>;

        $i7 = $r16.<h.ST_elist: int size>;

        $r17 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i8 = $r17.<smetana.core.Z: int N_nodes>;

        $i9 = $i8 - 1;

        if $i7 == $i9 goto label03;

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r4);

        $z1 = staticinvoke <gen.lib.common.ns__c: boolean treesearch(h.ST_Agnode_s)>($r18);

        if $z1 == 0 goto label04;

     label03:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1gvyafmercq92v3lg6gb33cbt", "treesearch");

        return 1;

     label04:
        i10 = i10 + 1;

        goto label02;

     label05:
        i11 = 0;

     label06:
        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r0);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i11);

        $r8 = (h.ST_Agedge_s) $r7;

        if $r8 == null goto label09;

        $r9 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r8);

        $i0 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r9);

        if $i0 != 0 goto label08;

        $i1 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>($r8);

        if $i1 != 0 goto label08;

        staticinvoke <gen.lib.common.ns__c: void add_tree_edge(h.ST_Agedge_s)>($r8);

        $r10 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r11 = $r10.<smetana.core.Z: h.ST_elist Tree_edge>;

        $i2 = $r11.<h.ST_elist: int size>;

        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i3 = $r12.<smetana.core.Z: int N_nodes>;

        $i4 = $i3 - 1;

        if $i2 == $i4 goto label07;

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r8);

        $z0 = staticinvoke <gen.lib.common.ns__c: boolean treesearch(h.ST_Agnode_s)>($r13);

        if $z0 == 0 goto label08;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1gvyafmercq92v3lg6gb33cbt", "treesearch");

        return 1;

     label08:
        i11 = i11 + 1;

        goto label06;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1gvyafmercq92v3lg6gb33cbt", "treesearch");

        return 0;

     label10:
        $r19 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1gvyafmercq92v3lg6gb33cbt", "treesearch");

        throw $r19;

        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static int tight_tree()
    {
        smetana.core.Z $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        h.ST_Agraph_s $r1, $r9;
        h.ST_elist $r3, $r7, $r13, $r15, $r19, $r21, $r23, $r24;
        int $i0, i2, $i3, i5;
        h.ST_nlist_t $r5, $r11;
        smetana.core.CArrayOfStar $r16, $r20, $r22;
        java.lang.Object $r17;
        h.ST_Agedge_s $r18;
        java.lang.Throwable $r25;
        h.ST_Agnode_s r27, r28;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("c98bj1u8j43cdezeczn33mec0", "tight_tree");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r27 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r1);

     label2:
        if r27 == null goto label3;

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r27, 0);

        $r19 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r27);

        $r20 = $r19.<h.ST_elist: smetana.core.CArrayOfStar list>;

        virtualinvoke $r20.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(0, null);

        $r21 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r27);

        $r22 = $r21.<h.ST_elist: smetana.core.CArrayOfStar list>;

        virtualinvoke $r22.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(0, null);

        $r23 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r27);

        $r24 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r27);

        $r24.<h.ST_elist: int size> = 0;

        $r23.<h.ST_elist: int size> = 0;

        r27 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r27);

        goto label2;

     label3:
        i5 = 0;

     label4:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_elist Tree_edge>;

        $i0 = $r3.<h.ST_elist: int size>;

        if i5 >= $i0 goto label5;

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r15 = $r14.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r16 = $r15.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r17 = virtualinvoke $r16.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i5);

        $r18 = (h.ST_Agedge_s) $r17;

        staticinvoke <smetana.core.Macro: void ED_tree_index(h.ST_Agedge_s,int)>($r18, -1);

        i5 = i5 + 1;

        goto label4;

     label5:
        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r7 = $r6.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r7.<h.ST_elist: int size> = 0;

        $r5.<h.ST_nlist_t: int size> = 0;

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r28 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r9);

     label6:
        if r28 == null goto label7;

        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r13 = $r12.<smetana.core.Z: h.ST_elist Tree_edge>;

        $i3 = $r13.<h.ST_elist: int size>;

        if $i3 != 0 goto label7;

        staticinvoke <gen.lib.common.ns__c: boolean treesearch(h.ST_Agnode_s)>(r28);

        r28 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r28);

        goto label6;

     label7:
        $r10 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r11 = $r10.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        i2 = $r11.<h.ST_nlist_t: int size>;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c98bj1u8j43cdezeczn33mec0", "tight_tree");

        return i2;

     label9:
        $r25 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c98bj1u8j43cdezeczn33mec0", "tight_tree");

        throw $r25;

        catch java.lang.Throwable from label1 to label8 with label9;
    }

    public static void init_cutvalues()
    {
        smetana.core.Z $r0, $r3;
        h.ST_Agraph_s $r1, $r4;
        h.ST_Agnode_s $r2, $r5;
        java.lang.Throwable $r6;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("10o7oe8d097fx7swmpqd4tf0h", "init_cutvalues");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r1);

        staticinvoke <gen.lib.common.ns__c: int dfs_range(h.ST_Agnode_s,h.ST_Agedge_s,int)>($r2, null, 1);

        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = $r3.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        $r5 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r4);

        staticinvoke <gen.lib.common.ns__c: void dfs_cutval(h.ST_Agnode_s,h.ST_Agedge_s)>($r5, null);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("10o7oe8d097fx7swmpqd4tf0h", "init_cutvalues");

        goto label4;

     label3:
        $r6 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("10o7oe8d097fx7swmpqd4tf0h", "init_cutvalues");

        throw $r6;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static int feasible_tree()
    {
        smetana.core.Z $r0, $r1, $r5, $r10, $r23, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, i8, i9, i10, $i11;
        h.ST_Agraph_s $r2;
        h.ST_Agnode_s $r3, $r4, $r9, $r14, $r20, r25;
        boolean $z0, $z1;
        h.ST_nlist_t $r6, $r11, $r27;
        smetana.core.CArrayOfStar $r7, $r12, $r16;
        java.lang.Object $r8, $r13, $r17;
        h.ST_elist $r15;
        h.ST_Agedge_s $r18, r24;
        java.lang.Throwable $r21;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("756raqohoxdeiddqbyr37h7ig", "feasible_tree");

     label01:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r0.<smetana.core.Z: int N_nodes>;

        if $i0 > 1 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("756raqohoxdeiddqbyr37h7ig", "feasible_tree");

        return 0;

     label03:
        $i6 = staticinvoke <gen.lib.common.ns__c: int tight_tree()>();

        $r23 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i7 = $r23.<smetana.core.Z: int N_nodes>;

        if $i6 >= $i7 goto label13;

        r24 = null;

        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r25 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r2);

     label04:
        if r25 == null goto label09;

        i8 = 0;

     label05:
        $r15 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r25);

        $r16 = $r15.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r17 = virtualinvoke $r16.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r18 = (h.ST_Agedge_s) $r17;

        if $r18 == null goto label08;

        $z1 = staticinvoke <smetana.core.Macro: boolean TREE_EDGE(h.ST_Agedge_s)>($r18);

        if $z1 != 0 goto label07;

        $r20 = staticinvoke <gen.lib.common.ns__c: h.ST_Agnode_s incident(h.ST_Agedge_s)>($r18);

        if $r20 == null goto label07;

        if r24 == null goto label06;

        $i3 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>($r18);

        $i4 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>(r24);

        if $i3 >= $i4 goto label07;

     label06:
        r24 = $r18;

     label07:
        i8 = i8 + 1;

        goto label05;

     label08:
        r25 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r25);

        goto label04;

     label09:
        if r24 == null goto label12;

        i9 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>(r24);

        if i9 == 0 goto label03;

        $r3 = staticinvoke <gen.lib.common.ns__c: h.ST_Agnode_s incident(h.ST_Agedge_s)>(r24);

        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r24);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r3, $r4);

        if $z0 == 0 goto label10;

        i9 = neg i9;

     label10:
        i10 = 0;

     label11:
        $r26 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r27 = $r26.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $i11 = $r27.<h.ST_nlist_t: int size>;

        if i10 >= $i11 goto label03;

        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r6 = $r5.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $r7 = $r6.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r8 = virtualinvoke $r7.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i10);

        $r9 = (h.ST_Agnode_s) $r8;

        $r10 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r11 = $r10.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $r12 = $r11.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r13 = virtualinvoke $r12.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i10);

        $r14 = (h.ST_Agnode_s) $r13;

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r14);

        $i2 = $i1 + i9;

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>($r9, $i2);

        i10 = i10 + 1;

        goto label11;

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("756raqohoxdeiddqbyr37h7ig", "feasible_tree");

        return 1;

     label13:
        staticinvoke <gen.lib.common.ns__c: void init_cutvalues()>();

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("756raqohoxdeiddqbyr37h7ig", "feasible_tree");

        return 0;

     label15:
        $r21 := @caughtexception;

     label16:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("756raqohoxdeiddqbyr37h7ig", "feasible_tree");

        throw $r21;

        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label03 to label12 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public static h.ST_Agnode_s treeupdate(h.ST_Agnode_s, h.ST_Agnode_s, int, boolean)
    {
        h.ST_Agnode_s r0, $r3, $r4, $r5, r8;
        h.ST_Agedge_s r2;
        boolean $z0, z1, $z2, $z3, z4;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.Throwable $r6;

        r8 := @parameter0: h.ST_Agnode_s;

        r0 := @parameter1: h.ST_Agnode_s;

        i1 := @parameter2: int;

        z1 := @parameter3: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("49un8m43odrf89cedvin3wz3r", "treeupdate");

     label1:
        $i7 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>(r8);

        $i8 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r0);

        $i9 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r8);

        $z2 = staticinvoke <smetana.core.Macro: boolean SEQ(int,int,int)>($i7, $i8, $i9);

        $z3 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z2);

        if $z3 == 0 goto label7;

        r2 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ND_par(h.ST_Agnode_s)>(r8);

        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r2);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r8, $r3);

        if $z0 == 0 goto label2;

        z4 = z1;

        goto label3;

     label2:
        z4 = staticinvoke <smetana.core.Macro: boolean NOT(boolean)>(z1);

     label3:
        if z4 == 0 goto label4;

        $i5 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>(r2);

        $i6 = $i5 + i1;

        staticinvoke <smetana.core.Macro: void ED_cutvalue(h.ST_Agedge_s,int)>(r2, $i6);

        goto label5;

     label4:
        $i0 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>(r2);

        $i2 = $i0 - i1;

        staticinvoke <smetana.core.Macro: void ED_cutvalue(h.ST_Agedge_s,int)>(r2, $i2);

     label5:
        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r2);

        $i3 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r4);

        $r5 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r2);

        $i4 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r5);

        if $i3 <= $i4 goto label6;

        r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r2);

        goto label1;

     label6:
        r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r2);

        goto label1;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("49un8m43odrf89cedvin3wz3r", "treeupdate");

        return r8;

     label8:
        $r6 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("49un8m43odrf89cedvin3wz3r", "treeupdate");

        throw $r6;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static void rerank(h.ST_Agnode_s, int)
    {
        h.ST_Agnode_s r0, $r10, $r12;
        int $i0, i1, $i2, i3, i4;
        h.ST_elist $r1, $r5;
        smetana.core.CArrayOfStar $r2, $r6;
        java.lang.Object $r3, $r7;
        h.ST_Agedge_s $r4, $r8, $r9, $r11;
        boolean $z0, $z1;
        java.lang.Throwable $r13;

        r0 := @parameter0: h.ST_Agnode_s;

        i1 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("e66n8gern1fejjsn8nefypo0g", "rerank");

     label01:
        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r0);

        $i2 = $i0 - i1;

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r0, $i2);

        i3 = 0;

     label02:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r0);

        $r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i3);

        $r4 = (h.ST_Agedge_s) $r3;

        if $r4 == null goto label04;

        $r11 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ND_par(h.ST_Agnode_s)>(r0);

        $z1 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r4, $r11);

        if $z1 == 0 goto label03;

        $r12 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r4);

        staticinvoke <gen.lib.common.ns__c: void rerank(h.ST_Agnode_s,int)>($r12, i1);

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        i4 = 0;

     label05:
        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r0);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        $r8 = (h.ST_Agedge_s) $r7;

        if $r8 == null goto label07;

        $r9 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ND_par(h.ST_Agnode_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r8, $r9);

        if $z0 == 0 goto label06;

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r8);

        staticinvoke <gen.lib.common.ns__c: void rerank(h.ST_Agnode_s,int)>($r10, i1);

     label06:
        i4 = i4 + 1;

        goto label05;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("e66n8gern1fejjsn8nefypo0g", "rerank");

        goto label10;

     label08:
        $r13 := @caughtexception;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("e66n8gern1fejjsn8nefypo0g", "rerank");

        throw $r13;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static void update(h.ST_Agedge_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, r1, $r3;
        int i0, i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        h.ST_Agnode_s r2, $r6, $r8, $r10, $r12, $r14, $r15, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26;
        h.ST_elist $r7, $r9, $r11, $r13;
        java.lang.Throwable $r20;
        boolean $z0;

        r1 := @parameter0: h.ST_Agedge_s;

        r0 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("xww1p8bentf1qk7mgfhi1q6m", "update");

     label01:
        i0 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>(r0);

        if i0 <= 0 goto label05;

        $r6 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r1);

        $r7 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>($r6);

        $i5 = $r7.<h.ST_elist: int size>;

        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r1);

        $r9 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>($r8);

        $i6 = $r9.<h.ST_elist: int size>;

        i13 = $i5 + $i6;

        if i13 != 1 goto label02;

        $r19 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r1);

        staticinvoke <gen.lib.common.ns__c: void rerank(h.ST_Agnode_s,int)>($r19, i0);

        goto label05;

     label02:
        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r1);

        $r11 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>($r10);

        $i7 = $r11.<h.ST_elist: int size>;

        $r12 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r1);

        $r13 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>($r12);

        $i8 = $r13.<h.ST_elist: int size>;

        i14 = $i7 + $i8;

        if i14 != 1 goto label03;

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r1);

        $i12 = neg i0;

        staticinvoke <gen.lib.common.ns__c: void rerank(h.ST_Agnode_s,int)>($r18, $i12);

        goto label05;

     label03:
        $r14 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r1);

        $i9 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r14);

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r1);

        $i10 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r15);

        if $i9 >= $i10 goto label04;

        $r17 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r1);

        staticinvoke <gen.lib.common.ns__c: void rerank(h.ST_Agnode_s,int)>($r17, i0);

        goto label05;

     label04:
        $r16 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r1);

        $i11 = neg i0;

        staticinvoke <gen.lib.common.ns__c: void rerank(h.ST_Agnode_s,int)>($r16, $i11);

     label05:
        i1 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>(r1);

        $r22 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r23 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        r2 = staticinvoke <gen.lib.common.ns__c: h.ST_Agnode_s treeupdate(h.ST_Agnode_s,h.ST_Agnode_s,int,boolean)>($r22, $r23, i1, 1);

        $r24 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r25 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r26 = staticinvoke <gen.lib.common.ns__c: h.ST_Agnode_s treeupdate(h.ST_Agnode_s,h.ST_Agnode_s,int,boolean)>($r24, $r25, i1, 0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r26, r2);

        if $z0 == 0 goto label06;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("f2l4c6yhnwnfer3vrasf55fio");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6fzmgjpkhmnx0a2cnt0q0rceg");

     label06:
        $i2 = neg i1;

        staticinvoke <smetana.core.Macro: void ED_cutvalue(h.ST_Agedge_s,int)>(r0, $i2);

        staticinvoke <smetana.core.Macro: void ED_cutvalue(h.ST_Agedge_s,int)>(r1, 0);

        staticinvoke <gen.lib.common.ns__c: void exchange_tree_edges(h.ST_Agedge_s,h.ST_Agedge_s)>(r1, r0);

        $r3 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ND_par(h.ST_Agnode_s)>(r2);

        $i3 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>(r2);

        staticinvoke <gen.lib.common.ns__c: int dfs_range(h.ST_Agnode_s,h.ST_Agedge_s,int)>(r2, $r3, $i3);

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("xww1p8bentf1qk7mgfhi1q6m", "update");

        goto label10;

     label08:
        $r20 := @caughtexception;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("xww1p8bentf1qk7mgfhi1q6m", "update");

        throw $r20;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static void scan_and_normalize()
    {
        smetana.core.Z $r0, $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        h.ST_Agraph_s $r3, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.lang.Throwable $r15;
        h.ST_Agnode_s r17, r18;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3yw7w42hz7af67d6qse3b2172", "scan_and_normalize");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r0.<smetana.core.Z: int Minrank> = 2147483647;

        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1.<smetana.core.Z: int Maxrank> = -2147483647;

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r17 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r3);

     label2:
        if r17 == null goto label4;

        $i7 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r17);

        if $i7 != 0 goto label3;

        $r11 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i8 = $r12.<smetana.core.Z: int Minrank>;

        $i9 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r17);

        $i10 = staticinvoke <smetana.core.Macro: int MIN(int,int)>($i8, $i9);

        $r11.<smetana.core.Z: int Minrank> = $i10;

        $r13 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i11 = $r14.<smetana.core.Z: int Maxrank>;

        $i12 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r17);

        $i13 = staticinvoke <smetana.core.Macro: int MAX(int,int)>($i11, $i12);

        $r13.<smetana.core.Z: int Maxrank> = $i13;

     label3:
        r17 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r17);

        goto label2;

     label4:
        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r4.<smetana.core.Z: int Minrank>;

        if $i0 == 0 goto label7;

        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r6 = $r5.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r18 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r6);

     label5:
        if r18 == null goto label6;

        $i4 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r18);

        $r10 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i5 = $r10.<smetana.core.Z: int Minrank>;

        $i6 = $i4 - $i5;

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r18, $i6);

        r18 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r18);

        goto label5;

     label6:
        $r7 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r7.<smetana.core.Z: int Maxrank>;

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i2 = $r8.<smetana.core.Z: int Minrank>;

        $i3 = $i1 - $i2;

        $r7.<smetana.core.Z: int Maxrank> = $i3;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9.<smetana.core.Z: int Minrank> = 0;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3yw7w42hz7af67d6qse3b2172", "scan_and_normalize");

        goto label9;

     label8:
        $r15 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3yw7w42hz7af67d6qse3b2172", "scan_and_normalize");

        throw $r15;

     label9:
        return;

        catch java.lang.Throwable from label1 to label7 with label8;
    }

    public static void freeTreeList(h.ST_Agraph_s)
    {
        smetana.core.Z $r0;
        h.ST_Agraph_s $r1, r6;
        h.ST_elist $r2, $r3;
        java.lang.Throwable $r4;
        h.ST_Agnode_s r7;

        r6 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7eg6zti36nbg4tqyo8yunh86r", "freeTreeList");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r7 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r1);

     label2:
        if r7 == null goto label3;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r7);

        staticinvoke <smetana.core.Macro: void free_list(h.ST_elist)>($r2);

        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r7);

        staticinvoke <smetana.core.Macro: void free_list(h.ST_elist)>($r3);

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r7, 0);

        r7 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r7);

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7eg6zti36nbg4tqyo8yunh86r", "freeTreeList");

        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7eg6zti36nbg4tqyo8yunh86r", "freeTreeList");

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void LR_balance()
    {
        smetana.core.Z $r0, $r2, $r4;
        h.ST_elist $r1, $r5;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, i8;
        h.ST_Agraph_s $r3;
        smetana.core.CArrayOfStar $r6;
        java.lang.Object $r7;
        h.ST_Agedge_s r8, r9;
        h.ST_Agnode_s $r10, $r11, $r12, $r13;
        java.lang.Throwable $r14;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9gx8p7md3v3mzp640xdjj814a", "LR_balance");

     label01:
        i8 = 0;

     label02:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_elist Tree_edge>;

        $i0 = $r1.<h.ST_elist: int size>;

        if i8 >= $i0 goto label07;

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        r8 = (h.ST_Agedge_s) $r7;

        $i1 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>(r8);

        if $i1 != 0 goto label06;

        r9 = staticinvoke <gen.lib.common.ns__c: h.ST_Agedge_s enter_edge(h.ST_Agedge_s)>(r8);

        if r9 != null goto label03;

        goto label06;

     label03:
        i2 = staticinvoke <smetana.core.Macro: int SLACK(h.ST_Agedge_s)>(r9);

        if i2 > 1 goto label04;

        goto label06;

     label04:
        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r8);

        $i3 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r10);

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r8);

        $i4 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>($r11);

        if $i3 >= $i4 goto label05;

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r8);

        $i7 = i2 / 2;

        staticinvoke <gen.lib.common.ns__c: void rerank(h.ST_Agnode_s,int)>($r13, $i7);

        goto label06;

     label05:
        $r12 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r8);

        $i5 = neg i2;

        $i6 = $i5 / 2;

        staticinvoke <gen.lib.common.ns__c: void rerank(h.ST_Agnode_s,int)>($r12, $i6);

     label06:
        i8 = i8 + 1;

        goto label02;

     label07:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        staticinvoke <gen.lib.common.ns__c: void freeTreeList(h.ST_Agraph_s)>($r3);

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9gx8p7md3v3mzp640xdjj814a", "LR_balance");

        goto label11;

     label09:
        $r14 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9gx8p7md3v3mzp640xdjj814a", "LR_balance");

        throw $r14;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static void TB_balance()
    {
        smetana.core.Z $r0, $r2, $r3, $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, i27, i28, i29, i30, i31;
        int[] r1;
        h.ST_Agraph_s $r4, $r6;
        h.ST_elist $r8, $r12, $r16, $r17;
        smetana.core.CArrayOfStar $r9, $r13;
        java.lang.Object $r10, $r14;
        h.ST_Agedge_s $r11, $r15;
        h.ST_Agnode_s $r18, $r19, r22, r23;
        java.lang.Throwable $r20;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("5c01jnao2ubmy4l0vi5jol0jz", "TB_balance");

     label01:
        staticinvoke <gen.lib.common.ns__c: void scan_and_normalize()>();

        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r0.<smetana.core.Z: int Maxrank>;

        $i1 = $i0 + 1;

        r1 = newarray (int)[$i1];

        i23 = 0;

     label02:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i2 = $r2.<smetana.core.Z: int Maxrank>;

        if i23 > $i2 goto label03;

        r1[i23] = 0;

        i23 = i23 + 1;

        goto label02;

     label03:
        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = $r3.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r22 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r4);

     label04:
        if r22 == null goto label06;

        $i19 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r22);

        if $i19 != 0 goto label05;

        $i20 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r22);

        $i21 = r1[$i20];

        $i22 = $i21 + 1;

        r1[$i20] = $i22;

     label05:
        r22 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r22);

        goto label04;

     label06:
        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r6 = $r5.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        r23 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>($r6);

     label07:
        if r23 == null goto label19;

        $i3 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r23);

        if $i3 == 0 goto label08;

        goto label18;

     label08:
        i24 = 0;

        i25 = 0;

        i26 = 0;

        $r7 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        i27 = $r7.<smetana.core.Z: int Maxrank>;

        i28 = 0;

     label09:
        $r8 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r23);

        $r9 = $r8.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r10 = virtualinvoke $r9.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i28);

        $r11 = (h.ST_Agedge_s) $r10;

        if $r11 == null goto label10;

        $i15 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r11);

        i25 = i25 + $i15;

        $r19 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r11);

        $i16 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r19);

        $i17 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>($r11);

        $i18 = $i16 + $i17;

        i26 = staticinvoke <smetana.core.Macro: int MAX(int,int)>(i26, $i18);

        i28 = i28 + 1;

        goto label09;

     label10:
        i29 = 0;

     label11:
        $r12 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r23);

        $r13 = $r12.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r14 = virtualinvoke $r13.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i29);

        $r15 = (h.ST_Agedge_s) $r14;

        if $r15 == null goto label12;

        $i11 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r15);

        i24 = i24 + $i11;

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r15);

        $i12 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r18);

        $i13 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>($r15);

        $i14 = $i12 - $i13;

        i27 = staticinvoke <smetana.core.Macro: int MIN(int,int)>(i27, $i14);

        i29 = i29 + 1;

        goto label11;

     label12:
        if i26 >= 0 goto label13;

        i26 = 0;

     label13:
        if i25 != i24 goto label17;

        i30 = i26;

        i31 = i26 + 1;

     label14:
        if i31 > i27 goto label16;

        $i10 = r1[i31];

        $i9 = r1[i30];

        if $i10 >= $i9 goto label15;

        i30 = i31;

     label15:
        i31 = i31 + 1;

        goto label14;

     label16:
        $i4 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r23);

        $i5 = r1[$i4];

        $i6 = $i5 - 1;

        r1[$i4] = $i6;

        $i7 = r1[i30];

        $i8 = $i7 + 1;

        r1[i30] = $i8;

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r23, i30);

     label17:
        $r16 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r23);

        staticinvoke <smetana.core.Macro: void free_list(h.ST_elist)>($r16);

        $r17 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r23);

        staticinvoke <smetana.core.Macro: void free_list(h.ST_elist)>($r17);

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r23, 0);

     label18:
        r23 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r23);

        goto label07;

     label19:
        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>(r1);

     label20:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5c01jnao2ubmy4l0vi5jol0jz", "TB_balance");

        goto label23;

     label21:
        $r20 := @caughtexception;

     label22:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5c01jnao2ubmy4l0vi5jol0jz", "TB_balance");

        throw $r20;

     label23:
        return;

        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public static int init_graph(h.ST_Agraph_s)
    {
        smetana.core.Z $r0, $r2, $r3, $r4, $r5, $r7, $r8, $r12, $r14, $r16, $r17, $r21, $r39, $r44;
        h.ST_Agraph_s r1;
        h.ST_nlist_t $r6, $r9, $r13;
        int $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i18, i19;
        smetana.core.CArrayOfStar $r10, $r11, $r19, $r20, $r24, $r28, $r31, $r35, $r41;
        h.ST_elist $r15, $r18, $r22, $r23, $r27, $r29, $r30, $r34, $r36, $r40;
        java.lang.Object $r25, $r32, $r42;
        h.ST_Agedge_s $r26, $r33, $r43;
        h.ST_Agnode_s $r37, $r38, r47, r49;
        java.lang.Throwable $r45;
        byte b17;

        r1 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("37hg5w7ywmyljdiebgp5ltl22", "init_graph");

     label01:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r0.<smetana.core.Z: h.ST_Agraph_s G_ns> = r1;

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4.<smetana.core.Z: int S_i> = 0;

        $r3.<smetana.core.Z: int N_edges> = 0;

        $r2.<smetana.core.Z: int N_nodes> = 0;

        r47 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r1);

     label02:
        if r47 == null goto label05;

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r47, 0);

        $r39 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i12 = $r39.<smetana.core.Z: int N_nodes>;

        $i13 = $i12 + 1;

        $r39.<smetana.core.Z: int N_nodes> = $i13;

        i16 = 0;

     label03:
        $r40 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r47);

        $r41 = $r40.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r42 = virtualinvoke $r41.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i16);

        $r43 = (h.ST_Agedge_s) $r42;

        if $r43 == null goto label04;

        $r44 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i14 = $r44.<smetana.core.Z: int N_edges>;

        $i15 = $i14 + 1;

        $r44.<smetana.core.Z: int N_edges> = $i15;

        i16 = i16 + 1;

        goto label03;

     label04:
        r47 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r47);

        goto label02;

     label05:
        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r6 = $r5.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $r7 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r7.<smetana.core.Z: int N_nodes>;

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $r10 = $r9.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r11 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar REALLOC(int,smetana.core.CArrayOfStar,java.lang.Class)>($i1, $r10, class "Lh/ST_Agnode_s;");

        $r6.<h.ST_nlist_t: smetana.core.CArrayOfStar list> = $r11;

        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r13 = $r12.<smetana.core.Z: h.ST_nlist_t Tree_node>;

        $r13.<h.ST_nlist_t: int size> = 0;

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r15 = $r14.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i2 = $r16.<smetana.core.Z: int N_nodes>;

        $r17 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r18 = $r17.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r19 = $r18.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r20 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar REALLOC(int,smetana.core.CArrayOfStar,java.lang.Class)>($i2, $r19, class "Lh/ST_Agedge_s;");

        $r15.<h.ST_elist: smetana.core.CArrayOfStar list> = $r20;

        $r21 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r22 = $r21.<smetana.core.Z: h.ST_elist Tree_edge>;

        $r22.<h.ST_elist: int size> = 0;

        b17 = 1;

        r49 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r1);

     label06:
        if r49 == null goto label12;

        staticinvoke <smetana.core.Macro: void ND_priority(h.ST_Agnode_s,int)>(r49, 0);

        i18 = 0;

     label07:
        $r23 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r49);

        $r24 = $r23.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r25 = virtualinvoke $r24.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i18);

        $r26 = (h.ST_Agedge_s) $r25;

        if $r26 == null goto label09;

        $i6 = staticinvoke <smetana.core.Macro: int ND_priority(h.ST_Agnode_s)>(r49);

        $i7 = $i6 + 1;

        staticinvoke <smetana.core.Macro: void ND_priority(h.ST_Agnode_s,int)>(r49, $i7);

        staticinvoke <smetana.core.Macro: void ED_cutvalue(h.ST_Agedge_s,int)>($r26, 0);

        staticinvoke <smetana.core.Macro: void ED_tree_index(h.ST_Agedge_s,int)>($r26, -1);

        if b17 == 0 goto label08;

        $r37 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r26);

        $i8 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r37);

        $r38 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r26);

        $i9 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r38);

        $i10 = $i8 - $i9;

        $i11 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>($r26);

        if $i10 >= $i11 goto label08;

        b17 = 0;

     label08:
        i18 = i18 + 1;

        goto label07;

     label09:
        $r27 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r49);

        $i4 = i18 + 1;

        $r28 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar ALLOC(int,java.lang.Class)>($i4, class "Lh/ST_Agedge_s;");

        $r27.<h.ST_elist: smetana.core.CArrayOfStar list> = $r28;

        $r29 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r49);

        $r29.<h.ST_elist: int size> = 0;

        i19 = 0;

     label10:
        $r30 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r49);

        $r31 = $r30.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r32 = virtualinvoke $r31.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i19);

        $r33 = (h.ST_Agedge_s) $r32;

        if $r33 == null goto label11;

        i19 = i19 + 1;

        goto label10;

     label11:
        $r34 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r49);

        $i5 = i19 + 1;

        $r35 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar ALLOC(int,java.lang.Class)>($i5, class "Lh/ST_Agedge_s;");

        $r34.<h.ST_elist: smetana.core.CArrayOfStar list> = $r35;

        $r36 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r49);

        $r36.<h.ST_elist: int size> = 0;

        r49 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r49);

        goto label06;

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("37hg5w7ywmyljdiebgp5ltl22", "init_graph");

        return b17;

     label13:
        $r45 := @caughtexception;

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("37hg5w7ywmyljdiebgp5ltl22", "init_graph");

        throw $r45;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static int rank2(h.ST_Agraph_s, int, int, int)
    {
        smetana.core.CString $r0;
        h.ST_Agraph_s r2, $r8;
        int i0, i1, i2, $i3, $i4, i5, i6;
        boolean $z0;
        smetana.core.Z $r3, $r7, $r10;
        smetana.core.jmp_buf $r4;
        h.ST_Agedge_s $r5, r9;
        java.lang.Throwable $r11;

        r2 := @parameter0: h.ST_Agraph_s;

        i5 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("5n0ipwzhr8urlx0fsdzr02gwq", "rank2");

     label01:
        i6 = 0;

        $r0 = new smetana.core.CString;

        specialinvoke $r0.<smetana.core.CString: void <init>(java.lang.String)>("network simplex: ");

        i0 = staticinvoke <gen.lib.common.ns__c: int init_graph(h.ST_Agraph_s)>(r2);

        $z0 = staticinvoke <smetana.core.Macro: boolean N(int)>(i0);

        if $z0 == 0 goto label02;

        staticinvoke <gen.lib.common.ns__c: void init_rank()>();

     label02:
        if i1 > 0 goto label04;

        staticinvoke <gen.lib.common.ns__c: void freeTreeList(h.ST_Agraph_s)>(r2);

     label03:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5n0ipwzhr8urlx0fsdzr02gwq", "rank2");

        return 0;

     label04:
        if i2 < 0 goto label05;

        $r10 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r10.<smetana.core.Z: int Search_size> = i2;

        goto label06;

     label05:
        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3.<smetana.core.Z: int Search_size> = 30;

     label06:
        $r4 = <gen.lib.common.ns__c: smetana.core.jmp_buf jbuf>;

        $i3 = staticinvoke <smetana.core.JUtils: int setjmp(smetana.core.jmp_buf)>($r4);

        if $i3 == 0 goto label08;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5n0ipwzhr8urlx0fsdzr02gwq", "rank2");

        return 2;

     label08:
        $i4 = staticinvoke <gen.lib.common.ns__c: int feasible_tree()>();

        if $i4 == 0 goto label10;

        staticinvoke <gen.lib.common.ns__c: void freeTreeList(h.ST_Agraph_s)>(r2);

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5n0ipwzhr8urlx0fsdzr02gwq", "rank2");

        return 1;

     label10:
        $r5 = staticinvoke <gen.lib.common.ns__c: h.ST_Agedge_s leave_edge()>();

        if $r5 == null goto label11;

        r9 = staticinvoke <gen.lib.common.ns__c: h.ST_Agedge_s enter_edge(h.ST_Agedge_s)>($r5);

        staticinvoke <gen.lib.common.ns__c: void update(h.ST_Agedge_s,h.ST_Agedge_s)>($r5, r9);

        i6 = i6 + 1;

        if i6 < i1 goto label10;

        goto label11;

     label11:
        lookupswitch(i5)
        {
            case 1: goto label12;
            case 2: goto label13;
            default: goto label14;
        };

     label12:
        staticinvoke <gen.lib.common.ns__c: void TB_balance()>();

        goto label15;

     label13:
        staticinvoke <gen.lib.common.ns__c: void LR_balance()>();

        goto label15;

     label14:
        staticinvoke <gen.lib.common.ns__c: void scan_and_normalize()>();

        $r7 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r8 = $r7.<smetana.core.Z: h.ST_Agraph_s G_ns>;

        staticinvoke <gen.lib.common.ns__c: void freeTreeList(h.ST_Agraph_s)>($r8);

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5n0ipwzhr8urlx0fsdzr02gwq", "rank2");

        return 0;

     label16:
        $r11 := @caughtexception;

     label17:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5n0ipwzhr8urlx0fsdzr02gwq", "rank2");

        throw $r11;

        catch java.lang.Throwable from label01 to label03 with label16;
        catch java.lang.Throwable from label04 to label07 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.lang.Throwable from label10 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static int rank(h.ST_Agraph_s, int, int)
    {
        h.ST_Agraph_s r0;
        smetana.core.CString $r1, $r2;
        int i0, i1, i2, i3;
        java.lang.Throwable $r4;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("aqly8eniwjr5bmh4hzwc7ftdr", "rank");

     label1:
        $r1 = new smetana.core.CString;

        specialinvoke $r1.<smetana.core.CString: void <init>(java.lang.String)>("searchsize");

        $r2 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r1);

        if $r2 == null goto label2;

        i3 = staticinvoke <smetana.core.JUtils: int atoi(smetana.core.CString)>($r2);

        goto label3;

     label2:
        i3 = 30;

     label3:
        i2 = staticinvoke <gen.lib.common.ns__c: int rank2(h.ST_Agraph_s,int,int,int)>(r0, i0, i1, i3);

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aqly8eniwjr5bmh4hzwc7ftdr", "rank");

        return i2;

     label5:
        $r4 := @caughtexception;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aqly8eniwjr5bmh4hzwc7ftdr", "rank");

        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void x_cutval(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, $r2, $r6, $r13;
        h.ST_Agnode_s $r1, r9;
        boolean $z0;
        h.ST_elist $r3, $r10;
        smetana.core.CArrayOfStar $r4, $r11;
        java.lang.Object $r5, $r12;
        int $i0, $i1, i3, i4, i5;
        java.lang.Throwable $r7;
        byte b2;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2q59mz8qtn0biifbezb8uxz17", "x_cutval");

     label01:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ND_par(h.ST_Agnode_s)>($r1);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r2, r0);

        if $z0 == 0 goto label02;

        r9 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        b2 = 1;

        goto label03;

     label02:
        r9 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        b2 = -1;

     label03:
        i3 = 0;

        i4 = 0;

     label04:
        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r9);

        $r11 = $r10.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r12 = virtualinvoke $r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        $r13 = (h.ST_Agedge_s) $r12;

        if $r13 == null goto label05;

        $i1 = staticinvoke <gen.lib.common.ns__c: int x_val(h.ST_Agedge_s,h.ST_Agnode_s,int)>($r13, r9, b2);

        i3 = i3 + $i1;

        i4 = i4 + 1;

        goto label04;

     label05:
        i5 = 0;

     label06:
        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r9);

        $r4 = $r3.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r5 = virtualinvoke $r4.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i5);

        $r6 = (h.ST_Agedge_s) $r5;

        if $r6 == null goto label07;

        $i0 = staticinvoke <gen.lib.common.ns__c: int x_val(h.ST_Agedge_s,h.ST_Agnode_s,int)>($r6, r9, b2);

        i3 = i3 + $i0;

        i5 = i5 + 1;

        goto label06;

     label07:
        staticinvoke <smetana.core.Macro: void ED_cutvalue(h.ST_Agedge_s,int)>(r0, i3);

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2q59mz8qtn0biifbezb8uxz17", "x_cutval");

        goto label11;

     label09:
        $r7 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2q59mz8qtn0biifbezb8uxz17", "x_cutval");

        throw $r7;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static int x_val(h.ST_Agedge_s, h.ST_Agnode_s, int)
    {
        h.ST_Agedge_s r0;
        h.ST_Agnode_s $r1, r2, $r3, $r4, r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z9;
        int $i0, $i1, $i2, $i3, i4, i6, i7;
        java.lang.Throwable $r5;
        byte b8;

        r0 := @parameter0: h.ST_Agedge_s;

        r2 := @parameter1: h.ST_Agnode_s;

        i4 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bfeafmsmmnblgizs37qj03dy4", "x_val");

     label01:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r1, r2);

        if $z0 == 0 goto label02;

        r7 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        goto label03;

     label02:
        r7 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

     label03:
        $i0 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>(r2);

        $i1 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r7);

        $i2 = staticinvoke <smetana.core.Macro: int ND_lim(h.ST_Agnode_s)>(r2);

        $z1 = staticinvoke <smetana.core.Macro: boolean SEQ(int,int,int)>($i0, $i1, $i2);

        $z2 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z1);

        if $z2 == 0 goto label04;

        z9 = 1;

        i6 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r0);

        goto label07;

     label04:
        z9 = 0;

        $z3 = staticinvoke <smetana.core.Macro: boolean TREE_EDGE(h.ST_Agedge_s)>(r0);

        if $z3 == 0 goto label05;

        i7 = staticinvoke <smetana.core.Macro: int ED_cutvalue(h.ST_Agedge_s)>(r0);

        goto label06;

     label05:
        i7 = 0;

     label06:
        $i3 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r0);

        i6 = i7 - $i3;

     label07:
        if i4 <= 0 goto label09;

        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $z5 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r4, r2);

        if $z5 == 0 goto label08;

        b8 = 1;

        goto label11;

     label08:
        b8 = -1;

        goto label11;

     label09:
        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $z4 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r3, r2);

        if $z4 == 0 goto label10;

        b8 = 1;

        goto label11;

     label10:
        b8 = -1;

     label11:
        if z9 == 0 goto label12;

        b8 = neg b8;

     label12:
        if b8 >= 0 goto label13;

        i6 = neg i6;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bfeafmsmmnblgizs37qj03dy4", "x_val");

        return i6;

     label14:
        $r5 := @caughtexception;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bfeafmsmmnblgizs37qj03dy4", "x_val");

        throw $r5;

        catch java.lang.Throwable from label01 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public static void dfs_cutval(h.ST_Agnode_s, h.ST_Agedge_s)
    {
        h.ST_Agnode_s r0, $r10, $r11;
        h.ST_elist $r1, $r5;
        smetana.core.CArrayOfStar $r2, $r6;
        java.lang.Object $r3, $r7;
        h.ST_Agedge_s $r4, $r8, r9;
        boolean $z0, $z1;
        java.lang.Throwable $r12;
        int i0, i1;

        r0 := @parameter0: h.ST_Agnode_s;

        r9 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("ah65iqmwa5j0qwotm6amhijlg", "dfs_cutval");

     label01:
        i0 = 0;

     label02:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r0);

        $r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i0);

        $r4 = (h.ST_Agedge_s) $r3;

        if $r4 == null goto label04;

        $z1 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r4, r9);

        if $z1 == 0 goto label03;

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r4);

        staticinvoke <gen.lib.common.ns__c: void dfs_cutval(h.ST_Agnode_s,h.ST_Agedge_s)>($r11, $r4);

     label03:
        i0 = i0 + 1;

        goto label02;

     label04:
        i1 = 0;

     label05:
        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r0);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i1);

        $r8 = (h.ST_Agedge_s) $r7;

        if $r8 == null goto label07;

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r8, r9);

        if $z0 == 0 goto label06;

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r8);

        staticinvoke <gen.lib.common.ns__c: void dfs_cutval(h.ST_Agnode_s,h.ST_Agedge_s)>($r10, $r8);

     label06:
        i1 = i1 + 1;

        goto label05;

     label07:
        if r9 == null goto label08;

        staticinvoke <gen.lib.common.ns__c: void x_cutval(h.ST_Agedge_s)>(r9);

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ah65iqmwa5j0qwotm6amhijlg", "dfs_cutval");

        goto label11;

     label09:
        $r12 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ah65iqmwa5j0qwotm6amhijlg", "dfs_cutval");

        throw $r12;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static int dfs_range(h.ST_Agnode_s, h.ST_Agedge_s, int)
    {
        int i0, i1, i2, i3, i4;
        h.ST_Agnode_s r0, $r10, $r11;
        h.ST_Agedge_s r1, $r5, $r9;
        h.ST_elist $r2, $r6;
        smetana.core.CArrayOfStar $r3, $r7;
        java.lang.Object $r4, $r8;
        boolean $z0, $z1;
        java.lang.Throwable $r12;

        r0 := @parameter0: h.ST_Agnode_s;

        r1 := @parameter1: h.ST_Agedge_s;

        i0 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("cgqr48qol9p8bsqjnryo5z5x9", "dfs_range");

     label01:
        i2 = i0;

        staticinvoke <smetana.core.Macro: void ND_par(h.ST_Agnode_s,h.ST_Agedge_s)>(r0, r1);

        staticinvoke <smetana.core.Macro: void ND_low(h.ST_Agnode_s,int)>(r0, i0);

        i3 = 0;

     label02:
        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_out(h.ST_Agnode_s)>(r0);

        $r3 = $r2.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r4 = virtualinvoke $r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i3);

        $r5 = (h.ST_Agedge_s) $r4;

        if $r5 == null goto label04;

        $z1 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r5, r1);

        if $z1 == 0 goto label03;

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r5);

        i2 = staticinvoke <gen.lib.common.ns__c: int dfs_range(h.ST_Agnode_s,h.ST_Agedge_s,int)>($r11, $r5, i2);

     label03:
        i3 = i3 + 1;

        goto label02;

     label04:
        i4 = 0;

     label05:
        $r6 = staticinvoke <smetana.core.Macro: h.ST_elist ND_tree_in(h.ST_Agnode_s)>(r0);

        $r7 = $r6.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r8 = virtualinvoke $r7.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        $r9 = (h.ST_Agedge_s) $r8;

        if $r9 == null goto label07;

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r9, r1);

        if $z0 == 0 goto label06;

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r9);

        i2 = staticinvoke <gen.lib.common.ns__c: int dfs_range(h.ST_Agnode_s,h.ST_Agedge_s,int)>($r10, $r9, i2);

     label06:
        i4 = i4 + 1;

        goto label05;

     label07:
        staticinvoke <smetana.core.Macro: void ND_lim(h.ST_Agnode_s,int)>(r0, i2);

        i1 = i2 + 1;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cgqr48qol9p8bsqjnryo5z5x9", "dfs_range");

        return i1;

     label09:
        $r12 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cgqr48qol9p8bsqjnryo5z5x9", "dfs_range");

        throw $r12;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    static void <clinit>()
    {
        smetana.core.jmp_buf $r0;

        $r0 = new smetana.core.jmp_buf;

        specialinvoke $r0.<smetana.core.jmp_buf: void <init>()>();

        <gen.lib.common.ns__c: smetana.core.jmp_buf jbuf> = $r0;

        return;
    }
}
