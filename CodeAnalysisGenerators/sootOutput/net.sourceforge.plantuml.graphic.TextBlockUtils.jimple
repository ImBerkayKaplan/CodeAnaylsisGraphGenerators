public class net.sourceforge.plantuml.graphic.TextBlockUtils extends java.lang.Object
{
    public static final net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK;

    public void <init>()
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils r0;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock bordered(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.UStroke, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, double)
    {
        net.sourceforge.plantuml.graphic.TextBlockBordered $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.UStroke r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r4;
        double d0;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UStroke;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockBordered;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockBordered: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.UStroke,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>(r1, r2, r3, r4, d0);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock bordered(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.UStroke, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, double, double, double)
    {
        net.sourceforge.plantuml.graphic.TextBlockBordered $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.UStroke r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r4;
        double d0, d1, d2;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UStroke;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter4: double;

        d1 := @parameter5: double;

        d2 := @parameter6: double;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockBordered;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockBordered: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.UStroke,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double,double,double)>(r1, r2, r3, r4, d0, d1, d2);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock bordered(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.UStroke, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, double, net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft)
    {
        net.sourceforge.plantuml.graphic.TextBlockBordered $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.UStroke r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r4;
        double d0;
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft r5;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UStroke;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter4: double;

        r5 := @parameter5: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockBordered;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockBordered: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.UStroke,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double,net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft)>(r1, r2, r3, r4, d0, r5);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock title(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ISkinParam)
    {
        boolean $z0;
        net.sourceforge.plantuml.ISkinParam r0;
        net.sourceforge.plantuml.LineParam $r1;
        net.sourceforge.plantuml.skin.rose.Rose $r2;
        net.sourceforge.plantuml.ColorParam $r4, $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor r6, r17;
        net.sourceforge.plantuml.graphic.TextBlockTitle $r7;
        net.sourceforge.plantuml.graphic.FontConfiguration r8;
        net.sourceforge.plantuml.cucadiagram.Display r9;
        net.sourceforge.plantuml.CornerParam $r11;
        double d0;
        net.sourceforge.plantuml.graphic.TextBlock $r12, $r13;
        net.sourceforge.plantuml.ugraphic.UStroke $r14, r16;
        java.lang.UnsupportedOperationException $r15;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r9 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r0 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r15 = new java.lang.UnsupportedOperationException;

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r15;

     label1:
        $r1 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam titleBorder>;

        r16 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.LineParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r1, null);

        $r2 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r2.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        $r4 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam titleBorder>;

        r17 = virtualinvoke $r2.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r0, $r4);

        $r5 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam titleBackground>;

        r6 = virtualinvoke $r2.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r0, $r5);

        $r7 = new net.sourceforge.plantuml.graphic.TextBlockTitle;

        specialinvoke $r7.<net.sourceforge.plantuml.graphic.TextBlockTitle: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple)>(r8, r9, r0);

        if r16 != null goto label2;

        if r17 != null goto label2;

        return $r7;

     label2:
        if r16 != null goto label3;

        $r14 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        r16 = $r14;

     label3:
        if r17 != null goto label4;

        r17 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

     label4:
        $r11 = <net.sourceforge.plantuml.CornerParam: net.sourceforge.plantuml.CornerParam titleBorder>;

        d0 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: double getRoundCorner(net.sourceforge.plantuml.CornerParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r11, null);

        $r12 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock bordered(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.UStroke,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>($r7, r16, r17, r6, d0);

        $r13 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double)>($r12, 2.0, 2.0);

        return $r13;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock, double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        net.sourceforge.plantuml.graphic.TextBlockMarged $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        return r1;

     label1:
        $r0 = new net.sourceforge.plantuml.graphic.TextBlockMarged;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockMarged: void <init>(net.sourceforge.plantuml.graphic.TextBlock,double,double,double,double)>(r1, d1, d0, d1, d0);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft)
    {
        net.sourceforge.plantuml.graphic.TextBlockMarged $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft r2;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockMarged;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockMarged: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft)>(r1, r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock, double, double, double, double)
    {
        net.sourceforge.plantuml.graphic.TextBlockMarged $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        double d0, d1, d2, d3;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        d3 := @parameter1: double;

        d1 := @parameter2: double;

        d0 := @parameter3: double;

        d2 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockMarged;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockMarged: void <init>(net.sourceforge.plantuml.graphic.TextBlock,double,double,double,double)>(r1, d0, d1, d2, d3);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock withMinWidth(net.sourceforge.plantuml.graphic.TextBlock, double, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlockMinWidth $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        double d0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockMinWidth;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: void <init>(net.sourceforge.plantuml.graphic.TextBlock,double,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r1, d0, r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock empty(double, double)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$1 $r0;
        double d0, d1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockUtils$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$1: void <init>(double,double)>(d0, d1);

        return $r0;
    }

    public static net.sourceforge.plantuml.posimo.Positionable asPositionable(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.StringBounder, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.posimo.PositionableImpl $r0;
        java.awt.geom.Point2D r1;
        net.sourceforge.plantuml.graphic.TextBlock r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r1 := @parameter2: java.awt.geom.Point2D;

        $r0 = new net.sourceforge.plantuml.posimo.PositionableImpl;

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        specialinvoke $r0.<net.sourceforge.plantuml.posimo.PositionableImpl: void <init>(java.awt.geom.Point2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1, $r4);

        return $r0;
    }

    public static net.sourceforge.plantuml.posimo.Positionable asPositionable(net.sourceforge.plantuml.awt.geom.Dimension2D, net.sourceforge.plantuml.graphic.StringBounder, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.posimo.PositionableImpl $r0;
        java.awt.geom.Point2D r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r2 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r1 := @parameter2: java.awt.geom.Point2D;

        $r0 = new net.sourceforge.plantuml.posimo.PositionableImpl;

        specialinvoke $r0.<net.sourceforge.plantuml.posimo.PositionableImpl: void <init>(java.awt.geom.Point2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1, r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock mergeLR(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.VerticalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0, $r1, r2, $r3;
        net.sourceforge.plantuml.graphic.TextBlockHorizontal $r4;
        net.sourceforge.plantuml.graphic.VerticalAlignment r5;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.VerticalAlignment;

        $r1 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        if r0 != $r1 goto label1;

        return r2;

     label1:
        $r3 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        if r2 != $r3 goto label2;

        return r0;

     label2:
        $r4 = new net.sourceforge.plantuml.graphic.TextBlockHorizontal;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlockHorizontal: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.VerticalAlignment)>(r0, r2, r5);

        return $r4;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0, $r1, r2, $r3;
        net.sourceforge.plantuml.graphic.TextBlockVertical2 $r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r1 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        if r0 != $r1 goto label1;

        return r2;

     label1:
        $r3 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        if r2 != $r3 goto label2;

        return r0;

     label2:
        $r4 = new net.sourceforge.plantuml.graphic.TextBlockVertical2;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlockVertical2: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r0, r2, r5);

        return $r4;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.UImage, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0, $r1;
        net.sourceforge.plantuml.graphic.TextBlockVertical2 $r2;
        net.sourceforge.plantuml.ugraphic.UImage r3;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.UImage;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r1 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        if r0 != $r1 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r2 = new net.sourceforge.plantuml.graphic.TextBlockVertical2;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlockVertical2: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.UImage,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r0, r3, r4);

        return $r2;
    }

    public static net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.UDrawable, net.sourceforge.plantuml.graphic.StringBounder, boolean)
    {
        net.sourceforge.plantuml.ugraphic.LimitFinder $r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        boolean z0;
        net.sourceforge.plantuml.graphic.UDrawable r3;
        net.sourceforge.plantuml.ugraphic.MinMax $r4;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.UDrawable;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        z0 := @parameter2: boolean;

        $r0 = new net.sourceforge.plantuml.ugraphic.LimitFinder;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.LimitFinder: void <init>(net.sourceforge.plantuml.graphic.StringBounder,boolean)>(r1, z0);

        interfaceinvoke r3.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r0);

        $r4 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.LimitFinder: net.sourceforge.plantuml.ugraphic.MinMax getMinMax()>();

        return $r4;
    }

    public static boolean isEmpty(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        double $d0, $d1;
        byte $b0, $b1;
        boolean $z0;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        if r0 != null goto label1;

        return 1;

     label1:
        r2 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label2;

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b1 = $d1 cmpl 0.0;

        if $b1 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static java.awt.font.FontRenderContext getFontRenderContext()
    {
        java.awt.Graphics2D $r0;
        java.awt.font.FontRenderContext $r1;

        $r0 = <net.sourceforge.plantuml.FileFormat: java.awt.Graphics2D gg>;

        $r1 = virtualinvoke $r0.<java.awt.Graphics2D: java.awt.font.FontRenderContext getFontRenderContext()>();

        return $r1;
    }

    public static java.awt.font.TextLayout createTextLayout(net.sourceforge.plantuml.ugraphic.UText)
    {
        net.sourceforge.plantuml.ugraphic.UText r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;
        net.sourceforge.plantuml.ugraphic.UFont $r2;
        java.lang.String $r3;
        java.awt.font.TextLayout $r4;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UText;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UText: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UText: java.lang.String getText()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: java.awt.font.TextLayout createTextLayout(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r2, $r3);

        return $r4;
    }

    public static java.awt.font.TextLayout createTextLayout(net.sourceforge.plantuml.ugraphic.UFont, java.lang.String)
    {
        java.awt.font.TextLayout $r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ugraphic.UFont r2;
        java.awt.Font $r3;
        java.awt.font.FontRenderContext $r4;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.awt.font.TextLayout;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UFont: java.awt.Font getUnderlayingFont()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: java.awt.font.FontRenderContext getFontRenderContext()>();

        specialinvoke $r0.<java.awt.font.TextLayout: void <init>(java.lang.String,java.awt.Font,java.awt.font.FontRenderContext)>(r1, $r3, $r4);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock fullInnerPosition(net.sourceforge.plantuml.graphic.TextBlock, java.lang.String)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$2 $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        java.lang.String r2;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: java.lang.String;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockUtils$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$2: void <init>(net.sourceforge.plantuml.graphic.TextBlock,java.lang.String)>(r1, r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.svek.TextBlockBackcolored addBackcolor(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$3 $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockUtils$3;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$3: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.TextBlock fromUImage(net.sourceforge.plantuml.ugraphic.UImage)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$4 $r0;
        net.sourceforge.plantuml.ugraphic.UImage r1;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UImage;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockUtils$4;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$4: void <init>(net.sourceforge.plantuml.ugraphic.UImage)>(r1);

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.graphic.TextBlock $r0;

        $r0 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK> = $r0;

        return;
    }
}
