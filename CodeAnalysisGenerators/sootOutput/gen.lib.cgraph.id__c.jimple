public class gen.lib.cgraph.id__c extends java.lang.Object
{
    public static smetana.core.CFunction idopen;
    public static smetana.core.CFunction idmap;
    public static smetana.core.CFunction idalloc;
    public static smetana.core.CFunction idfree;
    public static smetana.core.CFunction idprint;
    public static smetana.core.CFunction idclose;
    public static smetana.core.CFunction idregister;

    public void <init>()
    {
        gen.lib.cgraph.id__c r0;

        r0 := @this: gen.lib.cgraph.id__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object idopen(h.ST_Agraph_s, h.ST_Agdisc_s)
    {
        h.ST_Agraph_s r0;
        java.lang.Throwable $r2;
        h.ST_Agdisc_s r4;

        r0 := @parameter0: h.ST_Agraph_s;

        r4 := @parameter1: h.ST_Agdisc_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("a0a2zxsu8n019hzm1rwf1jc7f", "idopen");

     label1:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("a0a2zxsu8n019hzm1rwf1jc7f", "idopen");

        return r0;

     label2:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("a0a2zxsu8n019hzm1rwf1jc7f", "idopen");

        throw $r2;

        catch java.lang.Throwable from label1 to label1 with label2;
    }

    public static int idmap(java.lang.Object, int, smetana.core.CString, int[], boolean)
    {
        smetana.core.CString r0, r8;
        int[] r1;
        smetana.core.Z $r2, $r3;
        int $i0, $i1, $i2, $i3, i4, i5;
        boolean $z0, z1;
        java.lang.Object r4;
        java.lang.Throwable $r5;
        h.ST_Agraph_s r7;

        r4 := @parameter0: java.lang.Object;

        i4 := @parameter1: int;

        r0 := @parameter2: smetana.core.CString;

        r1 := @parameter3: int[];

        z1 := @parameter4: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("lsl0c1gejls1wv04ga6xy2cf", "idmap");

     label1:
        if r0 == null goto label4;

        r7 = (h.ST_Agraph_s) r4;

        if z1 == 0 goto label2;

        r8 = staticinvoke <gen.lib.cgraph.refstr__c: smetana.core.CString agstrdup(h.ST_Agraph_s,smetana.core.CString)>(r7, r0);

        goto label3;

     label2:
        r8 = staticinvoke <gen.lib.cgraph.refstr__c: smetana.core.CString agstrbind(h.ST_Agraph_s,smetana.core.CString)>(r7, r0);

     label3:
        $i3 = staticinvoke <smetana.core.Memory: int identityHashCode(smetana.core.CString)>(r8);

        r1[0] = $i3;

        goto label5;

     label4:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r2.<smetana.core.Z: int ctr>;

        r1[0] = $i0;

        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r3.<smetana.core.Z: int ctr>;

        $i2 = $i1 + 2;

        $r3.<smetana.core.Z: int ctr> = $i2;

     label5:
        $z0 = staticinvoke <smetana.core.Macro: boolean N(int)>(0);

        i5 = staticinvoke <smetana.core.Macro: int ASINT(boolean)>($z0);

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("lsl0c1gejls1wv04ga6xy2cf", "idmap");

        return i5;

     label7:
        $r5 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("lsl0c1gejls1wv04ga6xy2cf", "idmap");

        throw $r5;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static transient java.lang.Object idalloc(java.lang.Object[])
    {
        java.lang.UnsupportedOperationException $r7;
        java.lang.Object[] r8;

        r8 := @parameter0: java.lang.Object[];

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1z2o91qjhxg0zcs8vgzyl9bf1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("erg9i1970wdri39osu8hx2a6e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2s0qc9g3dasd7eqa3rhtlxrae");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("x0ltcg0hfp8jlgbjde43bdwj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6xs9bwnce34njm5w424uwon6d");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("297p5iu8oro94tdg9v29bbgiw");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r7;
    }

    public static transient java.lang.Object idfree(java.lang.Object[])
    {
        java.lang.UnsupportedOperationException $r6;
        java.lang.Object[] r7;

        r7 := @parameter0: java.lang.Object[];

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("adq5fviqjzpkxrjt37qxo1ywh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("erg9i1970wdri39osu8hx2a6e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("x0ltcg0hfp8jlgbjde43bdwj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e3dd233viwus8xrkad68a1qhr");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("69x6bjndheh46syz632mlu192");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;
    }

    public static smetana.core.CString idprint(smetana.core.__ptr__, int, int)
    {
        int i0, $i1, i2;
        java.lang.Object $r0;
        java.lang.Throwable $r1;
        smetana.core.__ptr__ r3;
        smetana.core.CString r4;

        r3 := @parameter0: smetana.core.__ptr__;

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8143j507ej7uqqjzw5i32xej5", "idprint");

     label1:
        $i1 = i0 % 2;

        if $i1 != 0 goto label3;

        $r0 = staticinvoke <smetana.core.Memory: java.lang.Object fromIdentityHashCode(int)>(i0);

        r4 = (smetana.core.CString) $r0;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8143j507ej7uqqjzw5i32xej5", "idprint");

        return r4;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8143j507ej7uqqjzw5i32xej5", "idprint");

        return null;

     label4:
        $r1 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8143j507ej7uqqjzw5i32xej5", "idprint");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static transient java.lang.Object idclose(java.lang.Object[])
    {
        java.lang.UnsupportedOperationException $r4;
        java.lang.Object[] r5;

        r5 := @parameter0: java.lang.Object[];

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("18oh21h7t6fg06ozg64u87nyu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("erg9i1970wdri39osu8hx2a6e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2s0qc9g3dasd7eqa3rhtlxrae");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public static void idregister(java.lang.Object, int, java.lang.Object)
    {
        java.lang.Object r0, r1;
        int i0;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("5bjqo0ihl0x25vaspoiehmwzk", "idregister");

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5bjqo0ihl0x25vaspoiehmwzk", "idregister");

        return;
    }

    public static int agmapnametoid(h.ST_Agraph_s, int, smetana.core.CString, int[], boolean)
    {
        smetana.core.CString r0;
        boolean z0;
        h.ST_Agraph_s r1;
        h.ST_Agiddisc_s $r2, $r15;
        java.lang.Object[] $r3, $r11, $r16;
        smetana.core.CFunction $r4, $r17;
        smetana.core.__ptr__ $r5, $r18;
        int i0, $i1, i3, i5;
        java.lang.Integer $r6, $r10, $r12, $r13, $r19, $r22;
        int[] r7;
        java.lang.Boolean $r8, $r20;
        java.lang.Object $r9, $r21;
        char $c2;
        java.lang.Throwable $r23;

        r1 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        r0 := @parameter2: smetana.core.CString;

        r7 := @parameter3: int[];

        z0 := @parameter4: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("aq30wwcj4ugatsgx0zdtdmeed", "agmapnametoid");

     label1:
        if r0 == null goto label3;

        $c2 = virtualinvoke r0.<smetana.core.CString: char charAt(int)>(0);

        if $c2 == 37 goto label3;

        $r15 = staticinvoke <smetana.core.Macro: h.ST_Agiddisc_s AGDISC_id(h.ST_Agraph_s)>(r1);

        $r17 = $r15.<h.ST_Agiddisc_s: smetana.core.CFunction map>;

        $r16 = newarray (java.lang.Object)[5];

        $r18 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ AGCLOS_id(h.ST_Agraph_s)>(r1);

        $r16[0] = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r16[1] = $r19;

        $r16[2] = r0;

        $r16[3] = r7;

        $r20 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r16[4] = $r20;

        $r21 = interfaceinvoke $r17.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r16);

        $r22 = (java.lang.Integer) $r21;

        i3 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        if i3 == 0 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aq30wwcj4ugatsgx0zdtdmeed", "agmapnametoid");

        return i3;

     label3:
        if r0 == null goto label5;

        i5 = staticinvoke <gen.lib.cgraph.imap__c: int aginternalmaplookup(h.ST_Agraph_s,int,smetana.core.CString,int[])>(r1, i0, r0, r7);

        if i5 == 0 goto label6;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aq30wwcj4ugatsgx0zdtdmeed", "agmapnametoid");

        return i5;

     label5:
        i5 = 0;

     label6:
        if z0 == 0 goto label7;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agiddisc_s AGDISC_id(h.ST_Agraph_s)>(r1);

        $r4 = $r2.<h.ST_Agiddisc_s: smetana.core.CFunction map>;

        $r3 = newarray (java.lang.Object)[5];

        $r5 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ AGCLOS_id(h.ST_Agraph_s)>(r1);

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[1] = $r6;

        $r3[2] = null;

        $r3[3] = r7;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3[4] = $r8;

        $r9 = interfaceinvoke $r4.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r3);

        $r10 = (java.lang.Integer) $r9;

        i5 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if i5 == 0 goto label7;

        if r0 == null goto label7;

        $r11 = newarray (java.lang.Object)[4];

        $r11[0] = r1;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r11[1] = $r12;

        $r11[2] = r0;

        $i1 = r7[0];

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[3] = $r13;

        staticinvoke <gen.lib.cgraph.imap__c: java.lang.Object aginternalmapinsert(java.lang.Object[])>($r11);

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aq30wwcj4ugatsgx0zdtdmeed", "agmapnametoid");

        return i5;

     label8:
        $r23 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aq30wwcj4ugatsgx0zdtdmeed", "agmapnametoid");

        throw $r23;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static smetana.core.CString agnameof(h.ST_Agobj_s)
    {
        h.ST_Agobj_s r0;
        h.ST_Agraph_s r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        smetana.core.CString $r2, $r5, $r17, r24;
        h.ST_Agiddisc_s $r3, $r10;
        smetana.core.CFunction $r4, $r12;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        java.lang.Object[] $r11;
        smetana.core.__ptr__ $r13;
        java.lang.Integer $r14, $r15;
        java.lang.Object $r16;
        java.lang.Throwable $r18;

        r0 := @parameter0: h.ST_Agobj_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("cctsybrl54fy799aynfej4iiy", "agnameof");

     label1:
        r1 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agraphof(h.ST_Agobj_s)>(r0);

        $i0 = staticinvoke <smetana.core.Macro: int AGTYPE(h.ST_Agobj_s)>(r0);

        $i1 = staticinvoke <smetana.core.Macro: int AGID(h.ST_Agobj_s)>(r0);

        $r2 = staticinvoke <gen.lib.cgraph.imap__c: smetana.core.CString aginternalmapprint(h.ST_Agraph_s,int,int)>(r1, $i0, $i1);

        if $r2 == null goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cctsybrl54fy799aynfej4iiy", "agnameof");

        return $r2;

     label3:
        $r3 = staticinvoke <smetana.core.Macro: h.ST_Agiddisc_s AGDISC_id(h.ST_Agraph_s)>(r1);

        $r4 = $r3.<h.ST_Agiddisc_s: smetana.core.CFunction print>;

        if $r4 == null goto label5;

        $r10 = staticinvoke <smetana.core.Macro: h.ST_Agiddisc_s AGDISC_id(h.ST_Agraph_s)>(r1);

        $r12 = $r10.<h.ST_Agiddisc_s: smetana.core.CFunction print>;

        $r11 = newarray (java.lang.Object)[3];

        $r13 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ AGCLOS_id(h.ST_Agraph_s)>(r1);

        $r11[0] = $r13;

        $i4 = staticinvoke <smetana.core.Macro: int AGTYPE(h.ST_Agobj_s)>(r0);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r11[1] = $r14;

        $i5 = staticinvoke <smetana.core.Macro: int AGID(h.ST_Agobj_s)>(r0);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r11[2] = $r15;

        $r16 = interfaceinvoke $r12.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r11);

        $r17 = (smetana.core.CString) $r16;

        if $r17 == null goto label5;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cctsybrl54fy799aynfej4iiy", "agnameof");

        return $r17;

     label5:
        $i2 = staticinvoke <smetana.core.Macro: int AGTYPE(h.ST_Agobj_s)>(r0);

        if $i2 == 2 goto label6;

        $r5 = new smetana.core.CString;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $i3 = staticinvoke <smetana.core.Macro: int AGID(h.ST_Agobj_s)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<smetana.core.CString: void <init>(java.lang.String)>($r9);

        r24 = $r5;

        goto label7;

     label6:
        r24 = null;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cctsybrl54fy799aynfej4iiy", "agnameof");

        return r24;

     label8:
        $r18 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cctsybrl54fy799aynfej4iiy", "agnameof");

        throw $r18;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static void agregister(h.ST_Agraph_s, int, java.lang.Object)
    {
        h.ST_Agraph_s r0;
        h.ST_Agiddisc_s $r1;
        java.lang.Object[] $r2;
        smetana.core.CFunction $r3;
        smetana.core.__ptr__ $r4;
        int i0;
        java.lang.Integer $r5;
        java.lang.Object r6;
        java.lang.Throwable $r8;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        r6 := @parameter2: java.lang.Object;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("emt63ldde99jnwe2vvjal9kt9", "agregister");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agiddisc_s AGDISC_id(h.ST_Agraph_s)>(r0);

        $r3 = $r1.<h.ST_Agiddisc_s: smetana.core.CFunction idregister>;

        $r2 = newarray (java.lang.Object)[3];

        $r4 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ AGCLOS_id(h.ST_Agraph_s)>(r0);

        $r2[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r5;

        $r2[2] = r6;

        interfaceinvoke $r3.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r2);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("emt63ldde99jnwe2vvjal9kt9", "agregister");

        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("emt63ldde99jnwe2vvjal9kt9", "agregister");

        throw $r8;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        gen.lib.cgraph.id__c$1 $r0;
        gen.lib.cgraph.id__c$2 $r1;
        gen.lib.cgraph.id__c$3 $r2;
        gen.lib.cgraph.id__c$4 $r3;
        gen.lib.cgraph.id__c$5 $r4;
        gen.lib.cgraph.id__c$6 $r5;
        gen.lib.cgraph.id__c$7 $r6;

        $r0 = new gen.lib.cgraph.id__c$1;

        specialinvoke $r0.<gen.lib.cgraph.id__c$1: void <init>(java.lang.String)>("idopen");

        <gen.lib.cgraph.id__c: smetana.core.CFunction idopen> = $r0;

        $r1 = new gen.lib.cgraph.id__c$2;

        specialinvoke $r1.<gen.lib.cgraph.id__c$2: void <init>(java.lang.String)>("idmap");

        <gen.lib.cgraph.id__c: smetana.core.CFunction idmap> = $r1;

        $r2 = new gen.lib.cgraph.id__c$3;

        specialinvoke $r2.<gen.lib.cgraph.id__c$3: void <init>(java.lang.String)>("idalloc");

        <gen.lib.cgraph.id__c: smetana.core.CFunction idalloc> = $r2;

        $r3 = new gen.lib.cgraph.id__c$4;

        specialinvoke $r3.<gen.lib.cgraph.id__c$4: void <init>(java.lang.String)>("idfree");

        <gen.lib.cgraph.id__c: smetana.core.CFunction idfree> = $r3;

        $r4 = new gen.lib.cgraph.id__c$5;

        specialinvoke $r4.<gen.lib.cgraph.id__c$5: void <init>(java.lang.String)>("idprint");

        <gen.lib.cgraph.id__c: smetana.core.CFunction idprint> = $r4;

        $r5 = new gen.lib.cgraph.id__c$6;

        specialinvoke $r5.<gen.lib.cgraph.id__c$6: void <init>(java.lang.String)>("idclose");

        <gen.lib.cgraph.id__c: smetana.core.CFunction idclose> = $r5;

        $r6 = new gen.lib.cgraph.id__c$7;

        specialinvoke $r6.<gen.lib.cgraph.id__c$7: void <init>(java.lang.String)>("idregister");

        <gen.lib.cgraph.id__c: smetana.core.CFunction idregister> = $r6;

        return;
    }
}
