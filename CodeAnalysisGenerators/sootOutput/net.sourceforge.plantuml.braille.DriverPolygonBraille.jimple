public class net.sourceforge.plantuml.braille.DriverPolygonBraille extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.braille.DriverPolygonBraille r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer r1;

        r0 := @this: net.sourceforge.plantuml.braille.DriverPolygonBraille;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.braille.DriverPolygonBraille: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UPolygon, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.braille.BrailleGrid)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.ugraphic.UPolygon r2;
        java.util.List $r3;
        boolean $z1, $z2, $z3;
        net.sourceforge.plantuml.braille.DriverPolygonBraille r4;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r5;
        net.sourceforge.plantuml.braille.BrailleGrid r6;
        java.lang.Object $r7, $r9;
        java.awt.geom.Point2D r8, $r11, r15;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r12;
        net.sourceforge.plantuml.ugraphic.UParam r13;
        java.util.Iterator r14, r17;
        net.sourceforge.plantuml.ugraphic.UClip r16;

        r4 := @this: net.sourceforge.plantuml.braille.DriverPolygonBraille;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UPolygon;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r12 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r13 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r6 := @parameter5: net.sourceforge.plantuml.braille.BrailleGrid;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        r14 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r9 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.awt.geom.Point2D) $r9;

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d1);

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r15);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label1;

     label2:
        $r5 = r4.<net.sourceforge.plantuml.braille.DriverPolygonBraille: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r16 = interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r16 == null goto label5;

        r17 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r7 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.awt.geom.Point2D) $r7;

        $z3 = virtualinvoke r16.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(java.awt.geom.Point2D)>(r8);

        if $z3 != 0 goto label4;

        return;

     label4:
        goto label3;

     label5:
        virtualinvoke r6.<net.sourceforge.plantuml.braille.BrailleGrid: void drawPolygon(java.util.List)>($r0);

        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.braille.DriverPolygonBraille r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.braille.BrailleGrid $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6;

        r0 := @this: net.sourceforge.plantuml.braille.DriverPolygonBraille;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UPolygon) r1;

        $r5 = (net.sourceforge.plantuml.braille.BrailleGrid) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.braille.DriverPolygonBraille: void draw(net.sourceforge.plantuml.ugraphic.UPolygon,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.braille.BrailleGrid)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
