class net.sourceforge.plantuml.graphic.USymbolStorage extends net.sourceforge.plantuml.graphic.USymbol
{

    void <init>()
    {
        net.sourceforge.plantuml.graphic.USymbolStorage r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolStorage;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolStorage r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStorage;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter STORAGE>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolStorage r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStorage;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName storage>;

        return $r0;
    }

    private void drawStorage(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1;
        double d0, d1, d2;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.graphic.USymbolStorage r3;

        r3 := @this: net.sourceforge.plantuml.graphic.USymbolStorage;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d0, d1);

        r1 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>(70.0);

        virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(d2);

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r1);

        return;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolStorage r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStorage;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(10.0, 10.0, 10.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolStorage$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolStorage r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStorage;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolStorage$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolStorage$1: void <init>(net.sourceforge.plantuml.graphic.USymbolStorage,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r2, r3, r4);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolStorage$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolStorage r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4;
        double d0, d1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5, r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStorage;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolStorage$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolStorage$2: void <init>(net.sourceforge.plantuml.graphic.USymbolStorage,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,double,net.sourceforge.plantuml.graphic.TextBlock,double)>(r1, r2, r3, d0, r4, d1);

        return $r0;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolStorage, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolStorage r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolStorage;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolStorage: void drawStorage(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r1, d0, d1, d2);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolStorage)
    {
        net.sourceforge.plantuml.graphic.USymbolStorage r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolStorage;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolStorage: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }
}
