class net.sourceforge.plantuml.donors.PSystemDonors$1 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final java.util.List val$cols;
    final net.sourceforge.plantuml.donors.PSystemDonors this$0;

    void <init>(net.sourceforge.plantuml.donors.PSystemDonors, java.util.List)
    {
        net.sourceforge.plantuml.donors.PSystemDonors$1 r0;
        net.sourceforge.plantuml.donors.PSystemDonors r1;
        java.util.List r2;

        r0 := @this: net.sourceforge.plantuml.donors.PSystemDonors$1;

        r1 := @parameter0: net.sourceforge.plantuml.donors.PSystemDonors;

        r2 := @parameter1: java.util.List;

        r0.<net.sourceforge.plantuml.donors.PSystemDonors$1: net.sourceforge.plantuml.donors.PSystemDonors this$0> = r1;

        r0.<net.sourceforge.plantuml.donors.PSystemDonors$1: java.util.List val$cols> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        java.lang.String[] $r0;
        java.util.List $r1, $r7;
        net.sourceforge.plantuml.svek.TextBlockBackcolored r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4, r16;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r12, $r17;
        net.sourceforge.plantuml.donors.PSystemDonors$1 r6;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UImage $r8;
        net.sourceforge.plantuml.ugraphic.PixelImage $r9;
        java.awt.image.BufferedImage $r10;
        net.sourceforge.plantuml.ugraphic.AffineTransformType $r11;
        int $i0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r13, $r18, r19, r20;
        java.lang.Object $r14;
        net.sourceforge.plantuml.graphic.TextBlock r15;
        java.util.Iterator r21;

        r6 := @this: net.sourceforge.plantuml.donors.PSystemDonors$1;

        r19 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = newarray (java.lang.String)[1];

        $r0[0] = "<b>Special thanks to our sponsors and donors !";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        r2 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.svek.TextBlockBackcolored createBlackOnWhite(java.util.List)>($r1);

        interfaceinvoke r2.<net.sourceforge.plantuml.svek.TextBlockBackcolored: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r19);

        r3 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.svek.TextBlockBackcolored: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        r20 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        d6 = 0.0;

        d7 = 0.0;

        d8 = 0.0;

        $r7 = r6.<net.sourceforge.plantuml.donors.PSystemDonors$1: java.util.List val$cols>;

        r21 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r15 = (net.sourceforge.plantuml.graphic.TextBlock) $r14;

        r16 = interfaceinvoke r15.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r17 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d6);

        $r18 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        interfaceinvoke r15.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r18);

        d7 = d6;

        $d3 = virtualinvoke r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = $d3 + 10.0;

        d6 = d6 + $d4;

        $d5 = virtualinvoke r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d8 = staticinvoke <java.lang.Math: double max(double,double)>(d8, $d5);

        goto label1;

     label2:
        $r8 = new net.sourceforge.plantuml.ugraphic.UImage;

        $r9 = new net.sourceforge.plantuml.ugraphic.PixelImage;

        $r10 = staticinvoke <net.sourceforge.plantuml.version.PSystemVersion: java.awt.image.BufferedImage getPlantumlImage()>();

        $r11 = <net.sourceforge.plantuml.ugraphic.AffineTransformType: net.sourceforge.plantuml.ugraphic.AffineTransformType TYPE_BILINEAR>;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.PixelImage: void <init>(java.awt.image.BufferedImage,net.sourceforge.plantuml.ugraphic.AffineTransformType)>($r10, $r11);

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UImage: void <init>(net.sourceforge.plantuml.ugraphic.MutableImage)>($r9);

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i0 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UImage: int getHeight()>();

        $d1 = (double) $i0;

        $d2 = d8 - $d1;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d7, $d2);

        $r13 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        return;
    }
}
