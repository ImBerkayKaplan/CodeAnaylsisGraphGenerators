public class net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside extends net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondWIP
{

    public void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside r0;
        net.sourceforge.plantuml.graphic.TextBlock r1, $r6, $r7, $r8, $r9;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r6 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r7 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r8 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r9 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r2, r3, r4, r5, $r6, $r7, $r8, $r9);

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withNorth(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r0, r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r9, $r10;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r9 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r8 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r7 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock south>;

        $r6 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock west>;

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock east>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>($r2, $r3, $r10, $r9, $r8, r4, $r7, $r6, $r5);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withWest(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r0, r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r9, $r10;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r9 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r8 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r7 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock north>;

        $r6 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock south>;

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock east>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>($r2, $r3, $r10, $r9, $r8, $r7, $r6, r4, $r5);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withEast(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r0, r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r9, $r10;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r9 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r8 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r7 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock north>;

        $r6 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock south>;

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock west>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>($r2, $r3, $r10, $r9, $r8, $r7, $r6, $r5, r4);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile withWestAndEast(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside r0, $r2, $r4;
        net.sourceforge.plantuml.graphic.TextBlock r1, r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withWest(net.sourceforge.plantuml.graphic.TextBlock)>(r1);

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withEast(net.sourceforge.plantuml.graphic.TextBlock)>(r3);

        return $r4;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside withSouth(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r0, r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r9, $r10;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r9 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r8 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r7 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock north>;

        $r6 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock west>;

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock east>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>($r2, $r3, $r10, $r9, $r8, $r7, r4, $r6, $r5);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside r0;
        net.sourceforge.plantuml.graphic.TextBlock r1, r6, r7, r8, r9;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r6 := @parameter5: net.sourceforge.plantuml.graphic.TextBlock;

        r7 := @parameter6: net.sourceforge.plantuml.graphic.TextBlock;

        r9 := @parameter7: net.sourceforge.plantuml.graphic.TextBlock;

        r8 := @parameter8: net.sourceforge.plantuml.graphic.TextBlock;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondWIP: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r2, r3, r4, r5, r6, r7, r8, r9);

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r14, $r17, $r20, $r22, $r25, $r27, $r30;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r23, r28;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r10;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, $r9, $r15, $r18, $r21, $r26, $r31, r32, r33;
        net.sourceforge.plantuml.style.Style $r7;
        net.sourceforge.plantuml.ugraphic.UStroke $r8;
        net.sourceforge.plantuml.ugraphic.UBackground $r11;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31;
        net.sourceforge.plantuml.ugraphic.UPolygon $r12;
        net.sourceforge.plantuml.ugraphic.UTranslate $r13, $r16, $r19, $r24, $r29;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r32 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock label>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        r4 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionAlone(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r6 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.style.Style getStyle()>();

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.style.Style)>($r7);

        $r9 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r33 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        $d0 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: double shadowing>;

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon: net.sourceforge.plantuml.ugraphic.UPolygon asPolygon(double,double,double)>($d0, $d1, $d2);

        interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        $r14 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock north>;

        $r13 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = $d3 / 2.0;

        $d5 = 4.0 + $d4;

        $d6 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, $d6);

        $r15 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        interfaceinvoke $r14.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r15);

        $r17 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock south>;

        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d7 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d8 = $d7 / 2.0;

        $d9 = 4.0 + $d8;

        $d10 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d9, $d10);

        $r18 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke $r17.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r18);

        $d11 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d12 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d13 = $d11 - $d12;

        d14 = $d13 / 2.0;

        $d15 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d16 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d17 = $d15 - $d16;

        d18 = $d17 / 2.0;

        $r20 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r19 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d14, d18);

        $r21 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke $r20.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r21);

        $r22 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock west>;

        r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r25 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock west>;

        $r24 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d19 = virtualinvoke r23.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d20 = neg $d19;

        $d21 = virtualinvoke r23.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d22 = neg $d21;

        $d23 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d24 = $d23 / 2.0;

        $d25 = $d22 + $d24;

        specialinvoke $r24.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d20, $d25);

        $r26 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        interfaceinvoke $r25.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r26);

        $r27 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock east>;

        r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r30 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock east>;

        $r29 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d26 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d27 = virtualinvoke r28.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d28 = neg $d27;

        $d29 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d30 = $d29 / 2.0;

        $d31 = $d28 + $d30;

        specialinvoke $r29.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d26, $d31);

        $r31 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r29);

        interfaceinvoke $r30.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r31);

        return;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionAlone(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r6, r7;
        double $d0, $d1, $d2, $d3, $d4;
        byte $b0, $b1;
        net.sourceforge.plantuml.Dimension2DDouble $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock label>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b1 = $d4 cmpl 0.0;

        if $b1 != 0 goto label2;

     label1:
        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(24.0, 24.0);

        r7 = $r4;

        goto label3;

     label2:
        $r6 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D atLeast(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r3, 24.0, 24.0);

        r7 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r6, 24.0, 0.0);

     label3:
        $r5 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d1 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 / 2.0;

        $d3 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double,double)>(r7, $d2, 0.0, $d3);

        return $r5;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, $r9;
        net.sourceforge.plantuml.graphic.TextBlock $r3, $r5, $r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r8;
        double d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionAlone(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock west>;

        interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock east>;

        interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock north>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke $r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r9 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry incHeight(double)>(d0);

        return $r9;
    }

    public double getEastLabelWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock east>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        return $d0;
    }

    public double getSouthLabelHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: net.sourceforge.plantuml.graphic.TextBlock south>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        return $d0;
    }
}
