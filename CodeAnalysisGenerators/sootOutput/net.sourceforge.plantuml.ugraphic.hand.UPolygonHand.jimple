public class net.sourceforge.plantuml.ugraphic.hand.UPolygonHand extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.UPolygon poly;

    public void <init>(net.sourceforge.plantuml.ugraphic.UPolygon, java.util.Random)
    {
        net.sourceforge.plantuml.ugraphic.hand.UPolygonHand r0;
        net.sourceforge.plantuml.ugraphic.UPolygon r1, $r10, $r11, $r14;
        java.util.List r2;
        int $i0, $i1, i2;
        net.sourceforge.plantuml.ugraphic.hand.HandJiggle $r3;
        java.lang.Object $r4, $r8, $r12;
        java.util.Random r5;
        java.awt.geom.Point2D $r6, $r9, $r13;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.hand.UPolygonHand;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UPolygon;

        r5 := @parameter1: java.util.Random;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r14 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.hand.UPolygonHand: net.sourceforge.plantuml.ugraphic.UPolygon poly> = $r14;

        return;

     label1:
        $r3 = new net.sourceforge.plantuml.ugraphic.hand.HandJiggle;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (java.awt.geom.Point2D) $r4;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void <init>(java.awt.geom.Point2D,double,java.util.Random)>($r6, 1.5, r5);

        i2 = 1;

     label2:
        $i1 = interfaceinvoke r2.<java.util.List: int size()>();

        if i2 >= $i1 goto label3;

        $r12 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r13 = (java.awt.geom.Point2D) $r12;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(java.awt.geom.Point2D)>($r13);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.awt.geom.Point2D) $r8;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(java.awt.geom.Point2D)>($r9);

        $r10 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: net.sourceforge.plantuml.ugraphic.UPolygon toUPolygon()>();

        r0.<net.sourceforge.plantuml.ugraphic.hand.UPolygonHand: net.sourceforge.plantuml.ugraphic.UPolygon poly> = $r10;

        $r11 = r0.<net.sourceforge.plantuml.ugraphic.hand.UPolygonHand: net.sourceforge.plantuml.ugraphic.UPolygon poly>;

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPolygon: double getDeltaShadow()>();

        virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UPolygon: void setDeltaShadow(double)>($d0);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.Shadowable getHanddrawn()
    {
        net.sourceforge.plantuml.ugraphic.hand.UPolygonHand r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.hand.UPolygonHand;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.hand.UPolygonHand: net.sourceforge.plantuml.ugraphic.UPolygon poly>;

        return $r1;
    }
}
