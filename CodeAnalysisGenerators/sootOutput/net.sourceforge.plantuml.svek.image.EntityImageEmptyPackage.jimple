public class net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage extends net.sourceforge.plantuml.svek.AbstractEntityImage
{
    private final net.sourceforge.plantuml.graphic.TextBlock desc;
    private static final int MARGIN;
    private final net.sourceforge.plantuml.cucadiagram.Stereotype stereotype;
    private final net.sourceforge.plantuml.graphic.TextBlock stereoBlock;
    private final net.sourceforge.plantuml.Url url;
    private final net.sourceforge.plantuml.style.SName sname;
    private final double shadowing;
    private final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    private final net.sourceforge.plantuml.ugraphic.UStroke stroke;
    private final double roundCorner;
    private final net.sourceforge.plantuml.ugraphic.color.HColor back;

    private net.sourceforge.plantuml.style.Style getStyle()
    {
        net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style $r4;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        return $r4;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r4, $r5;
        net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage r3;
        net.sourceforge.plantuml.style.StyleSignature $r6, $r8;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r7;

        r3 := @this: net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r4 = r3.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.style.SName sname>;

        $r0[2] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName package_>;

        $r0[3] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        $r7 = r3.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature 'with'(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r7);

        return $r8;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.PortionShower, net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2, $r9, $r14, $r19, $r25, $r39, $r49, $r51, $r59, $r61, $r65, $r67;
        net.sourceforge.plantuml.style.SName r3;
        net.sourceforge.plantuml.graphic.color.Colors r4;
        net.sourceforge.plantuml.graphic.color.ColorType $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor r6, $r13, $r23, $r53, $r69;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r7, $r10, $r16, $r18, $r22, $r26, $r28, $r30, $r34, $r40;
        net.sourceforge.plantuml.Url $r8;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.ColorParam[] $r11;
        net.sourceforge.plantuml.ColorParam $r12;
        net.sourceforge.plantuml.cucadiagram.IEntity $r15, $r17;
        net.sourceforge.plantuml.ugraphic.UStroke $r20, $r56;
        net.sourceforge.plantuml.graphic.USymbol $r21;
        net.sourceforge.plantuml.graphic.FontConfiguration $r24, $r38, r72;
        net.sourceforge.plantuml.FontParam $r27, $r41;
        net.sourceforge.plantuml.Guillemet $r29, $r35;
        java.lang.String $r31;
        net.sourceforge.plantuml.cucadiagram.PortionShower r32;
        net.sourceforge.plantuml.cucadiagram.EntityPortion $r33;
        java.util.List $r36;
        net.sourceforge.plantuml.cucadiagram.Display $r37, $r44, $r74;
        net.sourceforge.plantuml.graphic.TextBlock $r42, $r43, r45, $r75, $r78;
        net.sourceforge.plantuml.style.PName $r47, $r54, $r57, $r63;
        net.sourceforge.plantuml.style.Value $r48, $r55, $r58, $r64;
        net.sourceforge.plantuml.api.ThemeStyle $r50, $r60, $r66;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r52, $r62, $r68;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.style.Style r70, r71;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r73;
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl $r76;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned r77;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r32 := @parameter2: net.sourceforge.plantuml.cucadiagram.PortionShower;

        r3 := @parameter3: net.sourceforge.plantuml.style.SName;

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractEntityImage: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.style.SName sname> = r3;

        r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r5 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r6 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r5);

        $r7 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype> = $r7;

        $r8 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.Url getUrl99()>();

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.Url url> = $r8;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label03;

        r70 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.style.Style getStyle()>();

        r71 = virtualinvoke r70.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Style eventuallyOverride(net.sourceforge.plantuml.graphic.color.Colors)>(r4);

        $r47 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r48 = virtualinvoke r71.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r47);

        $r49 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r50 = interfaceinvoke $r49.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r51 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r52 = interfaceinvoke $r51.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r53 = interfaceinvoke $r48.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r50, $r52);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = $r53;

        $r54 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r55 = virtualinvoke r71.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r54);

        $d0 = interfaceinvoke $r55.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: double shadowing> = $d0;

        $r56 = virtualinvoke r71.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.graphic.color.Colors)>(r4);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.UStroke stroke> = $r56;

        $r57 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r58 = virtualinvoke r71.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r57);

        $d1 = interfaceinvoke $r58.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: double roundCorner> = $d1;

        if r6 != null goto label01;

        $r63 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r64 = virtualinvoke r71.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r63);

        $r65 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r66 = interfaceinvoke $r65.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r67 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r68 = interfaceinvoke $r67.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r69 = interfaceinvoke $r64.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r66, $r68);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.color.HColor back> = $r69;

        goto label02;

     label01:
        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.color.HColor back> = r6;

     label02:
        $r59 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r60 = interfaceinvoke $r59.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r61 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r62 = interfaceinvoke $r61.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r72 = virtualinvoke r71.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r60, $r62);

        r73 = virtualinvoke r71.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        goto label06;

     label03:
        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r11 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r12 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam packageBorder>;

        $r11[0] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r9, $r10, $r11);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = $r13;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $z1 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r16);

        if $z1 == 0 goto label04;

        $d2 = 3.0;

        goto label05;

     label04:
        $d2 = 0.0;

     label05:
        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: double shadowing> = $d2;

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = staticinvoke <net.sourceforge.plantuml.svek.GeneralImageBuilder: net.sourceforge.plantuml.ugraphic.UStroke getForcedStroke(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam)>($r18, $r19);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.UStroke stroke> = $r20;

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: double roundCorner> = 0.0;

        $r22 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        $r21 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol PACKAGE>;

        $r23 = staticinvoke <net.sourceforge.plantuml.svek.Cluster: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.style.SName,net.sourceforge.plantuml.graphic.USymbol)>(r6, r2, $r22, r3, $r21);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.color.HColor back> = $r23;

        $r24 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r27 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PACKAGE>;

        $r26 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        specialinvoke $r24.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r25, $r27, $r26);

        r72 = $r24;

        r73 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

     label06:
        $r74 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r75 = virtualinvoke $r74.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r72, r73, r2);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock desc> = $r75;

        $r76 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r1;

        r77 = virtualinvoke $r76.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        if r77 == null goto label07;

        $r44 = virtualinvoke r77.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        r45 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.EntityImageLegend: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>($r44, r2);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock stereoBlock> = r45;

        goto label10;

     label07:
        $r28 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        if $r28 == null goto label08;

        $r30 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        $r29 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet DOUBLE_COMPARATOR>;

        $r31 = virtualinvoke $r30.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)>($r29);

        if $r31 == null goto label08;

        $r33 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion STEREOTYPE>;

        $z2 = interfaceinvoke r32.<net.sourceforge.plantuml.cucadiagram.PortionShower: boolean showPortion(net.sourceforge.plantuml.cucadiagram.EntityPortion,net.sourceforge.plantuml.cucadiagram.IEntity)>($r33, r1);

        if $z2 != 0 goto label09;

     label08:
        $r78 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock stereoBlock> = $r78;

        goto label10;

     label09:
        $r34 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        $r35 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.Guillemet guillemet()>();

        $r36 = virtualinvoke $r34.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getLabels(net.sourceforge.plantuml.Guillemet)>($r35);

        $r37 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r36);

        $r38 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r39 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r41 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PACKAGE_STEREOTYPE>;

        $r40 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        specialinvoke $r38.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r39, $r41, $r40);

        $r42 = virtualinvoke $r37.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r38, r73, r2);

        $r43 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double)>($r42, 1.0, 0.0);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock stereoBlock> = $r43;

     label10:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r5, $r6, $r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r8, r9, r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r4;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock desc>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock desc>;

        $r5 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock stereoBlock>;

        $r4 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r7 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r6, $r5, $r4);

        r9 = interfaceinvoke $r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = 2.0 * $d0;

        r10 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D atLeast(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r9, 0.0, $d1);

        $r8 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r10, 20.0, 20.0);

        return $r8;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage r0;
        net.sourceforge.plantuml.Url $r1, $r19, $r20;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        double d0, d1, $d2, $d3;
        net.sourceforge.plantuml.svek.ClusterDecoration $r5;
        net.sourceforge.plantuml.ISkinParam $r6, $r12, $r15;
        net.sourceforge.plantuml.svek.PackageStyle $r7;
        net.sourceforge.plantuml.ugraphic.UStroke $r8;
        net.sourceforge.plantuml.graphic.TextBlock $r9, $r10;
        net.sourceforge.plantuml.AlignmentParam $r13;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r14, r16;
        net.sourceforge.plantuml.ugraphic.color.HColor $r17, $r18;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.Url url>;

        if $r1 == null goto label1;

        $r20 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.Url url>;

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void startUrl(net.sourceforge.plantuml.Url)>($r20);

     label1:
        r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r5 = new net.sourceforge.plantuml.svek.ClusterDecoration;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.svek.PackageStyle packageStyle()>();

        $r10 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock desc>;

        $r9 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.graphic.TextBlock stereoBlock>;

        $r8 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        specialinvoke $r5.<net.sourceforge.plantuml.svek.ClusterDecoration: void <init>(net.sourceforge.plantuml.svek.PackageStyle,net.sourceforge.plantuml.graphic.USymbol,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,double,double,double,double,net.sourceforge.plantuml.ugraphic.UStroke)>($r7, null, $r10, $r9, 0.0, 0.0, d0, d1, $r8);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam packageTitleAlignment>;

        r14 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r13, null, 0, null);

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getStereotypeAlignment()>();

        $r18 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.color.HColor back>;

        $r17 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $d3 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: double shadowing>;

        $d2 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: double roundCorner>;

        virtualinvoke $r5.<net.sourceforge.plantuml.svek.ClusterDecoration: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double,double,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r2, $r18, $r17, $d3, $d2, r14, r16);

        $r19 = r0.<net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: net.sourceforge.plantuml.Url url>;

        if $r19 == null goto label2;

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeUrl()>();

     label2:
        return;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage r1;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE>;

        return $r0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.svek.image.EntityImageEmptyPackage: int MARGIN> = 10;

        return;
    }
}
