public final class h.ST_Agraphinfo_t extends h.ST_Agrec_s
{
    public h.ST_layout_t drawing;
    public h.ST_textlabel_t label;
    public final h.ST_boxf bb;
    public final h.ST_pointf[] border;
    public int has_labels;
    public int charset;
    public int rankdir;
    public double ht1;
    public double ht2;
    public int flags;
    public h.ST_GVC_s gvc;
    public smetana.core.CFunction cleanup;
    public int n_cluster;
    public smetana.core.CArrayOfStar clust;
    public h.ST_Agraph_s dotroot;
    public h.ST_Agnode_s nlist;
    public smetana.core.CArray rank;
    public h.ST_Agraph_s parent;
    public final h.ST_nlist_t comp;
    public h.ST_Agnode_s minset;
    public h.ST_Agnode_s maxset;
    public int n_nodes;
    public int minrank;
    public int maxrank;
    public int has_flat_edges;
    public int showboxes;
    public int fontnames;
    public int nodesep;
    public int ranksep;
    public h.ST_Agnode_s ln;
    public h.ST_Agnode_s rn;
    public h.ST_Agnode_s leader;
    public smetana.core.CArrayOfStar rankleader;
    public boolean expanded;
    public int installed;
    public int set_type;
    public int label_pos;
    public int exact_ranksep;

    public void <init>()
    {
        h.ST_Agraphinfo_t r0;
        h.ST_boxf $r1;
        h.ST_pointf[] $r2;
        h.ST_pointf $r3, $r4, $r5, $r6;
        h.ST_nlist_t $r7;

        r0 := @this: h.ST_Agraphinfo_t;

        specialinvoke r0.<h.ST_Agrec_s: void <init>()>();

        $r1 = new h.ST_boxf;

        specialinvoke $r1.<h.ST_boxf: void <init>()>();

        r0.<h.ST_Agraphinfo_t: h.ST_boxf bb> = $r1;

        $r2 = newarray (h.ST_pointf)[4];

        $r3 = new h.ST_pointf;

        specialinvoke $r3.<h.ST_pointf: void <init>()>();

        $r2[0] = $r3;

        $r4 = new h.ST_pointf;

        specialinvoke $r4.<h.ST_pointf: void <init>()>();

        $r2[1] = $r4;

        $r5 = new h.ST_pointf;

        specialinvoke $r5.<h.ST_pointf: void <init>()>();

        $r2[2] = $r5;

        $r6 = new h.ST_pointf;

        specialinvoke $r6.<h.ST_pointf: void <init>()>();

        $r2[3] = $r6;

        r0.<h.ST_Agraphinfo_t: h.ST_pointf[] border> = $r2;

        $r7 = new h.ST_nlist_t;

        specialinvoke $r7.<h.ST_nlist_t: void <init>()>();

        r0.<h.ST_Agraphinfo_t: h.ST_nlist_t comp> = $r7;

        return;
    }
}
