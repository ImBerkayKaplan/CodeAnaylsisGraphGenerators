public final class ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder extends java.lang.Object
{
    private final ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field;
    private final java.util.Vector cachedGenerators;

    public void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256)
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder r0;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r1, $r2;
        boolean $z0;
        java.util.Vector $r3, $r6;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly $r4;
        int[] $r5;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder;

        r1 := @parameter0: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 QR_CODE_FIELD>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Only QR Code is supported at this time");

        throw $r7;

     label1:
        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field> = r1;

        $r3 = new java.util.Vector;

        specialinvoke $r3.<java.util.Vector: void <init>()>();

        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: java.util.Vector cachedGenerators> = $r3;

        $r6 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: java.util.Vector cachedGenerators>;

        $r4 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r5 = newarray (int)[1];

        $r5[0] = 1;

        specialinvoke $r4.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>(r1, $r5);

        virtualinvoke $r6.<java.util.Vector: void addElement(java.lang.Object)>($r4);

        return;
    }

    private ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly buildGenerator(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder r0;
        java.util.Vector $r1, $r2, $r5, $r6, $r8, $r14;
        java.lang.Object $r3, $r7;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly $r4, $r9, r13, r15;
        int[] $r10;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r11, $r12;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder;

        i0 := @parameter0: int;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: java.util.Vector cachedGenerators>;

        $i1 = virtualinvoke $r1.<java.util.Vector: int size()>();

        if i0 < $i1 goto label2;

        $r6 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: java.util.Vector cachedGenerators>;

        $r5 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: java.util.Vector cachedGenerators>;

        $i2 = virtualinvoke $r5.<java.util.Vector: int size()>();

        $i3 = $i2 - 1;

        $r7 = virtualinvoke $r6.<java.util.Vector: java.lang.Object elementAt(int)>($i3);

        r15 = (ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly) $r7;

        $r8 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: java.util.Vector cachedGenerators>;

        i6 = virtualinvoke $r8.<java.util.Vector: int size()>();

     label1:
        if i6 > i0 goto label2;

        $r9 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r12 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $r10 = newarray (int)[2];

        $r10[0] = 1;

        $r11 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        $i4 = i6 - 1;

        $i5 = virtualinvoke $r11.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int exp(int)>($i4);

        $r10[1] = $i5;

        specialinvoke $r9.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>($r12, $r10);

        r13 = virtualinvoke r15.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly multiply(ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly)>($r9);

        $r14 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: java.util.Vector cachedGenerators>;

        virtualinvoke $r14.<java.util.Vector: void addElement(java.lang.Object)>(r13);

        r15 = r13;

        i6 = i6 + 1;

        goto label1;

     label2:
        $r2 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: java.util.Vector cachedGenerators>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r4 = (ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly) $r3;

        return $r4;
    }

    public void encode(int[], int)
    {
        int i0, $i1, i2, $i3, i4, $i5, $i6, $i7, i8;
        int[] r0, r3, r8;
        ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder r1;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly r2, $r4, r7, r12;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r5;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly[] $r6;
        java.lang.IllegalArgumentException $r9, $r10;

        r1 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No error correction bytes");

        throw $r10;

     label1:
        $i1 = lengthof r0;

        i2 = $i1 - i0;

        if i2 > 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No data bytes provided");

        throw $r9;

     label2:
        r2 = specialinvoke r1.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly buildGenerator(int)>(i0);

        r3 = newarray (int)[i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, r3, 0, i2);

        $r4 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r5 = r1.<ext.plantuml.com.google.zxing.common.reedsolomon.ReedSolomonEncoder: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 field>;

        specialinvoke $r4.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>($r5, r3);

        r12 = virtualinvoke $r4.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly multiplyByMonomial(int,int)>(i0, 1);

        $r6 = virtualinvoke r12.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly[] divide(ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly)>(r2);

        r7 = $r6[1];

        r8 = virtualinvoke r7.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: int[] getCoefficients()>();

        $i3 = lengthof r8;

        i4 = i0 - $i3;

        i8 = 0;

     label3:
        if i8 >= i4 goto label4;

        $i7 = i2 + i8;

        r0[$i7] = 0;

        i8 = i8 + 1;

        goto label3;

     label4:
        $i6 = i2 + i4;

        $i5 = lengthof r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r8, 0, r0, $i6, $i5);

        return;
    }
}
