public class net.sourceforge.plantuml.theme.ThemeUtils extends java.lang.Object
{
    private static final java.lang.String THEME_FILE_PREFIX;
    private static final java.lang.String THEME_FILE_SUFFIX;
    private static final java.lang.String THEME_PATH;

    public void <init>()
    {
        net.sourceforge.plantuml.theme.ThemeUtils r0;

        r0 := @this: net.sourceforge.plantuml.theme.ThemeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List getAllThemeNames() throws java.io.IOException
    {
        java.util.Set $r0;
        java.lang.Object $r1, $r6;
        java.util.Collection r2;
        java.util.ArrayList $r3;
        java.util.Iterator r5;
        boolean $z0, $z1, $z2;
        java.lang.String r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3;

        $r0 = staticinvoke <net.sourceforge.plantuml.sprite.RessourcesUtils: java.util.Set getJarFile(java.lang.String,boolean)>("themes", 0);

        $r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r0);

        r2 = (java.util.Collection) $r1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r5 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $z1 = virtualinvoke r7.<java.lang.String: boolean startsWith(java.lang.String)>("puml-theme-");

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>(".puml");

        if $z2 == 0 goto label2;

        $r8 = "puml-theme-";

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i1 = virtualinvoke r7.<java.lang.String: int length()>();

        $r9 = ".puml";

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i3 = $i1 - $i2;

        $r10 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>($i0, $i3);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r10);

     label2:
        goto label1;

     label3:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r3);

        return $r3;
    }

    public static net.sourceforge.plantuml.preproc.ReadLine getReaderTheme(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r13;
        java.lang.String r2, $r4, r9, r14;
        java.lang.Class $r15;
        java.io.InputStream r16;
        java.io.InputStreamReader $r17;
        net.sourceforge.plantuml.preproc.ReadLine $r18;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Loading theme ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r4);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/themes/puml-theme-");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".puml");

        r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = class "Lnet/sourceforge/plantuml/preproc/Stdlib;";

        r16 = virtualinvoke $r15.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r9);

        if r16 != null goto label1;

        return null;

     label1:
        $r17 = new java.io.InputStreamReader;

        specialinvoke $r17.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r16);

        $r18 = staticinvoke <net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.preproc.ReadLine create(java.io.Reader,java.lang.String)>($r17, r14);

        return $r18;
    }

    public static java.lang.String getFullPath(java.lang.String, java.lang.String)
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r7;
        java.lang.String r1, r5, $r6, $r8;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0);

        $r6 = staticinvoke <net.sourceforge.plantuml.theme.ThemeUtils: java.lang.String getFilename(java.lang.String)>(r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String getFilename(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4;
        java.lang.String r2, $r5;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("puml-theme-");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".puml");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.theme.ThemeUtils: java.lang.String THEME_PATH> = "themes";

        <net.sourceforge.plantuml.theme.ThemeUtils: java.lang.String THEME_FILE_SUFFIX> = ".puml";

        <net.sourceforge.plantuml.theme.ThemeUtils: java.lang.String THEME_FILE_PREFIX> = "puml-theme-";

        return;
    }
}
