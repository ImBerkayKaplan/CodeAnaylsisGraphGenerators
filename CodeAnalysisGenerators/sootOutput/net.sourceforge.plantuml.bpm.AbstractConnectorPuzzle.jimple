abstract class net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle extends java.lang.Object implements net.sourceforge.plantuml.bpm.ConnectorPuzzle
{
    private final java.util.EnumSet connections;

    void <init>()
    {
        net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle r0;
        java.util.EnumSet $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lnet/sourceforge/plantuml/bpm/ConnectorPuzzle$Where;");

        r0.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: java.util.EnumSet connections> = $r1;

        return;
    }

    public final boolean have(net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where)
    {
        net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where r1;
        java.util.EnumSet $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where;

        $r2 = r0.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: java.util.EnumSet connections>;

        $z0 = virtualinvoke $r2.<java.util.EnumSet: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public final void append(net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where)
    {
        net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where r1;
        java.util.EnumSet $r2;

        r0 := @this: net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where;

        $r2 = r0.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: java.util.EnumSet connections>;

        virtualinvoke $r2.<java.util.EnumSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void remove(net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where)
    {
        net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle r0;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where r1;
        java.util.EnumSet $r2;
        boolean z0;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where;

        $r2 = r0.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: java.util.EnumSet connections>;

        z0 = virtualinvoke $r2.<java.util.EnumSet: boolean remove(java.lang.Object)>(r1);

        if z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public final void append(net.sourceforge.plantuml.bpm.ConnectorPuzzle)
    {
        net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle r0, $r2;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle r1;
        java.util.EnumSet $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.ConnectorPuzzle;

        $r4 = r0.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: java.util.EnumSet connections>;

        $r2 = (net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle) r1;

        $r3 = $r2.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: java.util.EnumSet connections>;

        virtualinvoke $r4.<java.util.EnumSet: boolean addAll(java.util.Collection)>($r3);

        return;
    }

    protected final java.util.Set connections()
    {
        net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle r0;
        java.util.EnumSet $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle;

        $r1 = r0.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: java.util.EnumSet connections>;

        return $r1;
    }
}
