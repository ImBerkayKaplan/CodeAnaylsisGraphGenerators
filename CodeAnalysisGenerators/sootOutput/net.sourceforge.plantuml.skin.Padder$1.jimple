class net.sourceforge.plantuml.skin.Padder$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.graphic.TextBlock val$orig;
    final net.sourceforge.plantuml.skin.Padder this$0;

    void <init>(net.sourceforge.plantuml.skin.Padder, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.skin.Padder$1 r0;
        net.sourceforge.plantuml.skin.Padder r1;
        net.sourceforge.plantuml.graphic.TextBlock r2;

        r0 := @this: net.sourceforge.plantuml.skin.Padder$1;

        r1 := @parameter0: net.sourceforge.plantuml.skin.Padder;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0> = r1;

        r0.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.graphic.TextBlock val$orig> = r2;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.Padder$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3, $r6;
        net.sourceforge.plantuml.skin.Padder $r4, $r5;
        double $d0, $d1, $d2, $d3;

        r0 := @this: net.sourceforge.plantuml.skin.Padder$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.graphic.TextBlock val$orig>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $d0 = staticinvoke <net.sourceforge.plantuml.skin.Padder: double access$000(net.sourceforge.plantuml.skin.Padder)>($r4);

        $r5 = r0.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $d1 = staticinvoke <net.sourceforge.plantuml.skin.Padder: double access$100(net.sourceforge.plantuml.skin.Padder)>($r5);

        $d2 = $d0 + $d1;

        $d3 = 2.0 * $d2;

        $r6 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double)>($r3, $d3);

        return $r6;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UTranslate $r0, $r21;
        net.sourceforge.plantuml.skin.Padder$1 r1;
        net.sourceforge.plantuml.skin.Padder $r2, $r3, $r4, $r6, $r8, $r10, $r17, $r19, $r22, $r24;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r7, $r9, $r11;
        net.sourceforge.plantuml.ugraphic.UBackground $r12, $r27;
        net.sourceforge.plantuml.graphic.TextBlock $r13, $r23;
        net.sourceforge.plantuml.graphic.StringBounder $r14;
        net.sourceforge.plantuml.awt.geom.Dimension2D r15, $r18;
        net.sourceforge.plantuml.ugraphic.URectangle $r16, r20;
        net.sourceforge.plantuml.ugraphic.UGraphic $r25, r29, r30, r32, r33;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r26, $r28;

        r1 := @this: net.sourceforge.plantuml.skin.Padder$1;

        r29 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r2 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $d0 = staticinvoke <net.sourceforge.plantuml.skin.Padder: double access$000(net.sourceforge.plantuml.skin.Padder)>($r2);

        $r3 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $d1 = staticinvoke <net.sourceforge.plantuml.skin.Padder: double access$000(net.sourceforge.plantuml.skin.Padder)>($r3);

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d0, $d1);

        r30 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r4 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor access$200(net.sourceforge.plantuml.skin.Padder)>($r4);

        if $r5 != null goto label1;

        $r28 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r28.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        r32 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r28);

        goto label2;

     label1:
        $r6 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $r7 = staticinvoke <net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor access$200(net.sourceforge.plantuml.skin.Padder)>($r6);

        r32 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

     label2:
        $r8 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $r9 = staticinvoke <net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor access$300(net.sourceforge.plantuml.skin.Padder)>($r8);

        if $r9 != null goto label3;

        $r26 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r26.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r27 = virtualinvoke $r26.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r33 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        goto label4;

     label3:
        $r10 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $r11 = staticinvoke <net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.ugraphic.color.HColor access$300(net.sourceforge.plantuml.skin.Padder)>($r10);

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r33 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

     label4:
        $r13 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.graphic.TextBlock val$orig>;

        $r14 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r15 = interfaceinvoke $r13.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r14);

        $r16 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $r17 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $d2 = staticinvoke <net.sourceforge.plantuml.skin.Padder: double access$100(net.sourceforge.plantuml.skin.Padder)>($r17);

        $d3 = 2.0 * $d2;

        $r18 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double)>(r15, $d3);

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>($r18);

        $r19 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $d4 = staticinvoke <net.sourceforge.plantuml.skin.Padder: double access$400(net.sourceforge.plantuml.skin.Padder)>($r19);

        r20 = virtualinvoke $r16.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d4);

        interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r20);

        $r23 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.graphic.TextBlock val$orig>;

        $r21 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r22 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $d5 = staticinvoke <net.sourceforge.plantuml.skin.Padder: double access$100(net.sourceforge.plantuml.skin.Padder)>($r22);

        $r24 = r1.<net.sourceforge.plantuml.skin.Padder$1: net.sourceforge.plantuml.skin.Padder this$0>;

        $d6 = staticinvoke <net.sourceforge.plantuml.skin.Padder: double access$100(net.sourceforge.plantuml.skin.Padder)>($r24);

        specialinvoke $r21.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, $d6);

        $r25 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        interfaceinvoke $r23.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r25);

        return;
    }
}
