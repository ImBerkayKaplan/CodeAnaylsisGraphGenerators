class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0> = r1;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r6, $r10, $r14;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4, r11, $r15, r19;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical $r5, $r12, $r18, $r20;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r13, $r17;
        java.awt.geom.Point2D $r8, r9, $r16, r25, r26;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        net.sourceforge.plantuml.ISkinParam $r21;
        net.sourceforge.plantuml.graphic.Rainbow $r22;
        net.sourceforge.plantuml.ugraphic.UPolygon $r23;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r24;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r5, $r6, r1);

        $r8 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        r9 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r8);

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r12 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r13 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.graphic.StringBounder)>($r12, r1);

        $r14 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        r25 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r16);

        $r17 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = $d0 / 2.0;

        $d2 = virtualinvoke r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d3 = $d2 / 2.0;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d3);

        r26 = virtualinvoke $r17.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r25);

        $r18 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.graphic.StringBounder)>($r18, r1);

        $r20 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r22 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r23 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()>();

        r24 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r21, $r22, $r23);

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r9);

        $d4 = virtualinvoke r9.<java.awt.geom.Point2D: double getX()>();

        $d5 = virtualinvoke r9.<java.awt.geom.Point2D: double getY()>();

        $d6 = $d5 + 15.0;

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d4, $d6);

        $d7 = virtualinvoke r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d8 = virtualinvoke r9.<java.awt.geom.Point2D: double getY()>();

        $d9 = $d8 + 15.0;

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d7, $d9);

        $d10 = virtualinvoke r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d11 = virtualinvoke r26.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d10, $d11);

        virtualinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r26);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r24);

        return;
    }
}
