public class net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline extends net.sourceforge.plantuml.command.CommandMultilines2
{

    public void <init>()
    {
        net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.command.MultilinesStrategy $r2;

        r0 := @this: net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline;

        $r1 = staticinvoke <net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        $r2 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy REMOVE_STARTING_QUOTE>;

        specialinvoke r0.<net.sourceforge.plantuml.command.CommandMultilines2: void <init>(net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy)>($r1, $r2);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        net.sourceforge.plantuml.command.regex.RegexOptional $r5;
        net.sourceforge.plantuml.command.regex.RegexConcat $r11;

        $r0 = class "Lnet/sourceforge/plantuml/mindmap/CommandMindMapOrgmodeMultiline;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[7];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TYPE", "([*]+)");

        $r2[1] = $r4;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BACKCOLOR", "\\[(#\\w+)\\]");

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r6);

        $r2[2] = $r5;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("SHAPE", "(_)?");

        $r2[3] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(":");

        $r2[4] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("DATA", "(.*)");

        $r2[5] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[6] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r11;
    }

    public java.lang.String getPatternEnd()
    {
        net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline r0;

        r0 := @this: net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline;

        return "^(.*);(?:\\s*\\<\\<(.+)\\>\\>)?$";
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.mindmap.MindMapDiagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.StringLocated $r2, $r3, $r8;
        java.lang.String $r4, $r6, $r9, $r11, r13, r14, r15, $r18, $r22, $r30;
        net.sourceforge.plantuml.command.regex.RegexResult r5;
        net.sourceforge.plantuml.command.regex.Pattern2 $r7;
        java.util.List r10;
        java.lang.Object $r12, $r29;
        net.sourceforge.plantuml.mindmap.MindMapDiagram r16;
        int $i0, $i1, $i2, $i3;
        net.sourceforge.plantuml.cucadiagram.Display $r17, $r21;
        net.sourceforge.plantuml.mindmap.IdeaShape $r19, $r23;
        net.sourceforge.plantuml.command.CommandExecutionResult $r20, $r24;
        net.sourceforge.plantuml.ISkinParam $r25, $r27;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r26;
        net.sourceforge.plantuml.api.ThemeStyle $r28;
        net.sourceforge.plantuml.command.BlocLines r31, r32;
        net.sourceforge.plantuml.ugraphic.color.HColor r33;

        r0 := @this: net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline;

        r16 := @parameter0: net.sourceforge.plantuml.mindmap.MindMapDiagram;

        r31 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline: net.sourceforge.plantuml.command.regex.IRegex getStartingPattern()>();

        $r2 = virtualinvoke r31.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.StringLocated getFirst()>();

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r5 = interfaceinvoke $r1.<net.sourceforge.plantuml.command.regex.IRegex: net.sourceforge.plantuml.command.regex.RegexResult matcher(java.lang.String)>($r4);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline: java.lang.String getPatternEnd()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>($r6);

        $r8 = virtualinvoke r31.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.StringLocated getLast()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r10 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.util.List getSplit(net.sourceforge.plantuml.command.regex.Pattern2,java.lang.String)>($r7, $r9);

        $r11 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("DATA", 0);

        r32 = virtualinvoke r31.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines removeStartingAndEnding(java.lang.String,int)>($r11, 1);

        $r12 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(1);

        r13 = (java.lang.String) $r12;

        if r13 == null goto label1;

        $r29 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0);

        $r30 = (java.lang.String) $r29;

        r32 = virtualinvoke r32.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines overrideLastLine(java.lang.String)>($r30);

     label1:
        r14 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("TYPE", 0);

        r15 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BACKCOLOR", 0);

        r33 = null;

        if r15 == null goto label2;

        $r25 = virtualinvoke r16.<net.sourceforge.plantuml.mindmap.MindMapDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r27 = virtualinvoke r16.<net.sourceforge.plantuml.mindmap.MindMapDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r33 = virtualinvoke $r26.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r28, r15);

     label2:
        if r13 != null goto label3;

        $i2 = virtualinvoke r14.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $r21 = virtualinvoke r32.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        $r22 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("SHAPE", 0);

        $r23 = staticinvoke <net.sourceforge.plantuml.mindmap.IdeaShape: net.sourceforge.plantuml.mindmap.IdeaShape fromDesc(java.lang.String)>($r22);

        $r24 = virtualinvoke r16.<net.sourceforge.plantuml.mindmap.MindMapDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addIdea(net.sourceforge.plantuml.ugraphic.color.HColor,int,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.mindmap.IdeaShape)>(r33, $i3, $r21, $r23);

        return $r24;

     label3:
        $i0 = virtualinvoke r14.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r17 = virtualinvoke r32.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        $r18 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("SHAPE", 0);

        $r19 = staticinvoke <net.sourceforge.plantuml.mindmap.IdeaShape: net.sourceforge.plantuml.mindmap.IdeaShape fromDesc(java.lang.String)>($r18);

        $r20 = virtualinvoke r16.<net.sourceforge.plantuml.mindmap.MindMapDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addIdea(java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor,int,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.mindmap.IdeaShape)>(r13, r33, $i1, $r17, $r19);

        return $r20;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.mindmap.MindMapDiagram $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r3 = (net.sourceforge.plantuml.mindmap.MindMapDiagram) r1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline: net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.mindmap.MindMapDiagram,net.sourceforge.plantuml.command.BlocLines)>($r3, r2);

        return $r4;
    }
}
