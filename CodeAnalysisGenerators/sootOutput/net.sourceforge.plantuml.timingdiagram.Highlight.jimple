public class net.sourceforge.plantuml.timingdiagram.Highlight extends java.lang.Object
{
    private final net.sourceforge.plantuml.timingdiagram.TimeTick tickFrom;
    private final net.sourceforge.plantuml.timingdiagram.TimeTick tickTo;
    private final net.sourceforge.plantuml.cucadiagram.Display caption;
    private final net.sourceforge.plantuml.graphic.color.Colors colors;
    private final net.sourceforge.plantuml.ISkinParam skinParam;

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick r1, r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.graphic.color.Colors r4;
        net.sourceforge.plantuml.ISkinParam r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        r5 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r1 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r2 := @parameter2: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r3 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter4: net.sourceforge.plantuml.graphic.color.Colors;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick tickFrom> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick tickTo> = r2;

        r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.cucadiagram.Display caption> = r3;

        r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.graphic.color.Colors colors> = r4;

        r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ISkinParam skinParam> = r5;

        return;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.timingdiagram.Highlight r6;

        r6 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timingDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName highlight>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private net.sourceforge.plantuml.style.Style getStyle()
    {
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style $r4;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        return $r4;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()
    {
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.graphic.color.ColorType $r1;
        net.sourceforge.plantuml.graphic.color.Colors $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, $r11, $r12;
        boolean $z0;
        net.sourceforge.plantuml.style.Style $r4;
        net.sourceforge.plantuml.style.PName $r5;
        net.sourceforge.plantuml.style.Value $r6;
        net.sourceforge.plantuml.ISkinParam $r7, $r9;
        net.sourceforge.plantuml.api.ThemeStyle $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r10;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r1 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r1);

        if r3 != null goto label2;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r12 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor COL_A9DCDF>;

        return $r12;

     label1:
        $r4 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.style.Style getStyle()>();

        $r5 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r5);

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r11 = interfaceinvoke $r6.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r8, $r10);

        return $r11;

     label2:
        return r3;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getLineColor()
    {
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.graphic.color.ColorType $r1;
        net.sourceforge.plantuml.graphic.color.Colors $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, $r11;
        boolean $z0;
        net.sourceforge.plantuml.style.Style $r4;
        net.sourceforge.plantuml.style.PName $r5;
        net.sourceforge.plantuml.style.Value $r6;
        net.sourceforge.plantuml.ISkinParam $r7, $r9;
        net.sourceforge.plantuml.api.ThemeStyle $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r10;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r12;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r1 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r1);

        if r3 != null goto label2;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r12 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        return $r12;

     label1:
        $r4 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.style.Style getStyle()>();

        $r5 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r5);

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r11 = interfaceinvoke $r6.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r8, $r10);

        return $r11;

     label2:
        return r3;
    }

    private net.sourceforge.plantuml.ugraphic.UStroke getUStroke()
    {
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.style.Style $r1;
        net.sourceforge.plantuml.ugraphic.UStroke $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double,double,double)>(4.0, 4.0, 2.0);

        return $r3;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.style.Style getStyle()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        return $r2;
    }

    public final net.sourceforge.plantuml.timingdiagram.TimeTick getTickFrom()
    {
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick tickFrom>;

        return $r1;
    }

    public final net.sourceforge.plantuml.timingdiagram.TimeTick getTickTo()
    {
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick tickTo>;

        return $r1;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getCaption()
    {
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.cucadiagram.Display caption>;

        return $r1;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getCaption(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.graphic.FontConfiguration $r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.FontParam $r2;
        net.sourceforge.plantuml.timingdiagram.Highlight r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.cucadiagram.Display $r6;
        net.sourceforge.plantuml.graphic.TextBlock $r7;

        r4 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r2 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam TIMING>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r1, $r2, null);

        $r6 = r4.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.cucadiagram.Display caption>;

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r0, $r5, r1);

        return $r7;
    }

    public void drawHighlightsBack(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.timingdiagram.TimingRuler, double)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1, $r11, r12, r13;
        net.sourceforge.plantuml.timingdiagram.Highlight r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        net.sourceforge.plantuml.ugraphic.UBackground $r4;
        net.sourceforge.plantuml.timingdiagram.TimingRuler r5;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r6, $r7;
        double d0, d1, d2, $d3;
        net.sourceforge.plantuml.ugraphic.URectangle $r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r5 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimingRuler;

        d2 := @parameter2: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r1 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r13 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick getTickFrom()>();

        d0 = virtualinvoke r5.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r6);

        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick getTickTo()>();

        d1 = virtualinvoke r5.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r7);

        $r8 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = d1 - d0;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d3, d2);

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d0);

        $r11 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        return;
    }

    public void drawHighlightsLines(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.timingdiagram.TimingRuler, double)
    {
        net.sourceforge.plantuml.timingdiagram.Highlight r0;
        net.sourceforge.plantuml.ugraphic.UStroke $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        double d0, d1, d2;
        net.sourceforge.plantuml.ugraphic.ULine r3;
        net.sourceforge.plantuml.timingdiagram.TimingRuler r4;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r5, $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r9;
        net.sourceforge.plantuml.ugraphic.UGraphic $r8, $r10, r11, r12, r13;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.Highlight;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r4 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimingRuler;

        d0 := @parameter2: double;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ugraphic.UStroke getUStroke()>();

        r12 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.ugraphic.color.HColor getLineColor()>();

        r13 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(d0);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick getTickFrom()>();

        d1 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r5);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick getTickTo()>();

        d2 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r6);

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d1);

        $r8 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r3);

        $r9 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d2);

        $r10 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r3);

        return;
    }
}
