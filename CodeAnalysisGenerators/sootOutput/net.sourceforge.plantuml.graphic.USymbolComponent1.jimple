class net.sourceforge.plantuml.graphic.USymbolComponent1 extends net.sourceforge.plantuml.graphic.USymbol
{

    void <init>()
    {
        net.sourceforge.plantuml.graphic.USymbolComponent1 r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolComponent1;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolComponent1 r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolComponent1;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter COMPONENT1>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolComponent1 r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolComponent1;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName component>;

        return $r0;
    }

    private void drawComponent1(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1, $r3;
        double d0, d1, d2, d3, $d4;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r6, $r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r7;
        net.sourceforge.plantuml.graphic.USymbolComponent1 r9;

        r9 := @this: net.sourceforge.plantuml.graphic.USymbolComponent1;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d3 := @parameter3: double;

        d2 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d0, d1);

        r1 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>(d2);

        virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(d3);

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r1);

        $r3 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(10.0, 5.0);

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(-5.0, 5.0);

        $r6 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = d1 - 10.0;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(-5.0, $d4);

        $r8 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        return;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolComponent1 r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolComponent1;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(10.0, 10.0, 10.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolComponent1$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolComponent1 r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolComponent1;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolComponent1$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolComponent1$1: void <init>(net.sourceforge.plantuml.graphic.USymbolComponent1,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r2, r3, r4);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0, r2, $r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r1, r4;
        double d0, d1;
        net.sourceforge.plantuml.graphic.SymbolContext r3;
        net.sourceforge.plantuml.graphic.USymbol $r5;
        net.sourceforge.plantuml.graphic.USymbolComponent1 r7;

        r7 := @this: net.sourceforge.plantuml.graphic.USymbolComponent1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r3 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r4 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r5 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol COMPONENT2>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock,double,double,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r0, r1, r2, d0, d1, r3, r4);

        return $r6;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolComponent1, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolComponent1 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2, d3;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolComponent1;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolComponent1: void drawComponent1(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double)>(r1, d0, d1, d2, d3);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolComponent1)
    {
        net.sourceforge.plantuml.graphic.USymbolComponent1 r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolComponent1;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolComponent1: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }
}
