public class net.sourceforge.plantuml.mindmap.MindMapDiagramFactory extends net.sourceforge.plantuml.command.PSystemCommandFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.mindmap.MindMapDiagramFactory r0;
        net.sourceforge.plantuml.core.DiagramType $r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagramFactory;

        $r1 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType MINDMAP>;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>(net.sourceforge.plantuml.core.DiagramType)>($r1);

        return;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.mindmap.CommandMindMapOrgmode $r2;
        net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline $r3;
        net.sourceforge.plantuml.mindmap.CommandMindMapRoot $r4;
        net.sourceforge.plantuml.mindmap.CommandMindMapPlus $r5;
        net.sourceforge.plantuml.mindmap.CommandMindMapDirection $r6;
        net.sourceforge.plantuml.mindmap.MindMapDiagramFactory r7;

        r7 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagramFactory;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands1(java.util.List)>($r0);

        $r2 = new net.sourceforge.plantuml.mindmap.CommandMindMapOrgmode;

        specialinvoke $r2.<net.sourceforge.plantuml.mindmap.CommandMindMapOrgmode: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline;

        specialinvoke $r3.<net.sourceforge.plantuml.mindmap.CommandMindMapOrgmodeMultiline: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.mindmap.CommandMindMapRoot;

        specialinvoke $r4.<net.sourceforge.plantuml.mindmap.CommandMindMapRoot: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new net.sourceforge.plantuml.mindmap.CommandMindMapPlus;

        specialinvoke $r5.<net.sourceforge.plantuml.mindmap.CommandMindMapPlus: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.mindmap.CommandMindMapDirection;

        specialinvoke $r6.<net.sourceforge.plantuml.mindmap.CommandMindMapDirection: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        return $r0;
    }

    public net.sourceforge.plantuml.mindmap.MindMapDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.mindmap.MindMapDiagram $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.mindmap.MindMapDiagramFactory r3;
        net.sourceforge.plantuml.ISkinSimple r4;

        r3 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.mindmap.MindMapDiagram;

        specialinvoke $r0.<net.sourceforge.plantuml.mindmap.MindMapDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource)>(r1, r2);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.mindmap.MindMapDiagramFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.mindmap.MindMapDiagram $r4;

        r0 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.mindmap.MindMapDiagramFactory: net.sourceforge.plantuml.mindmap.MindMapDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }
}
