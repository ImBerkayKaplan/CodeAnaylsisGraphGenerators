public class net.sourceforge.plantuml.project.GanttDiagramFactory extends net.sourceforge.plantuml.command.PSystemCommandFactory
{
    private static final java.util.Collection cache;

    private static final java.util.List subjects()
    {
        net.sourceforge.plantuml.project.lang.Subject[] $r0;
        net.sourceforge.plantuml.project.lang.SubjectTask $r1;
        net.sourceforge.plantuml.project.lang.SubjectProject $r2;
        net.sourceforge.plantuml.project.lang.SubjectDayOfWeek $r3;
        net.sourceforge.plantuml.project.lang.SubjectDayAsDate $r4;
        net.sourceforge.plantuml.project.lang.SubjectDaysAsDates $r5;
        net.sourceforge.plantuml.project.lang.SubjectResource $r6;
        net.sourceforge.plantuml.project.lang.SubjectToday $r7;
        java.util.List $r8;

        $r0 = newarray (net.sourceforge.plantuml.project.lang.Subject)[7];

        $r1 = new net.sourceforge.plantuml.project.lang.SubjectTask;

        specialinvoke $r1.<net.sourceforge.plantuml.project.lang.SubjectTask: void <init>()>();

        $r0[0] = $r1;

        $r2 = new net.sourceforge.plantuml.project.lang.SubjectProject;

        specialinvoke $r2.<net.sourceforge.plantuml.project.lang.SubjectProject: void <init>()>();

        $r0[1] = $r2;

        $r3 = new net.sourceforge.plantuml.project.lang.SubjectDayOfWeek;

        specialinvoke $r3.<net.sourceforge.plantuml.project.lang.SubjectDayOfWeek: void <init>()>();

        $r0[2] = $r3;

        $r4 = new net.sourceforge.plantuml.project.lang.SubjectDayAsDate;

        specialinvoke $r4.<net.sourceforge.plantuml.project.lang.SubjectDayAsDate: void <init>()>();

        $r0[3] = $r4;

        $r5 = new net.sourceforge.plantuml.project.lang.SubjectDaysAsDates;

        specialinvoke $r5.<net.sourceforge.plantuml.project.lang.SubjectDaysAsDates: void <init>()>();

        $r0[4] = $r5;

        $r6 = new net.sourceforge.plantuml.project.lang.SubjectResource;

        specialinvoke $r6.<net.sourceforge.plantuml.project.lang.SubjectResource: void <init>()>();

        $r0[5] = $r6;

        $r7 = new net.sourceforge.plantuml.project.lang.SubjectToday;

        specialinvoke $r7.<net.sourceforge.plantuml.project.lang.SubjectToday: void <init>()>();

        $r0[6] = $r7;

        $r8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r8;
    }

    public void <init>(net.sourceforge.plantuml.core.DiagramType)
    {
        net.sourceforge.plantuml.project.GanttDiagramFactory r0;
        net.sourceforge.plantuml.core.DiagramType r1;

        r0 := @this: net.sourceforge.plantuml.project.GanttDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.core.DiagramType;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>(net.sourceforge.plantuml.core.DiagramType)>(r1);

        return;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.style.CommandStyleMultilinesCSS $r2;
        net.sourceforge.plantuml.style.CommandStyleImport $r3;
        net.sourceforge.plantuml.command.CommandNope $r4;
        java.util.Collection $r5;
        net.sourceforge.plantuml.project.command.CommandGanttArrow $r6;
        net.sourceforge.plantuml.project.command.CommandGanttArrow2 $r7;
        net.sourceforge.plantuml.project.command.CommandColorTask $r8;
        net.sourceforge.plantuml.project.command.CommandSeparator $r9;
        net.sourceforge.plantuml.project.command.CommandWeekNumberStrategy $r10;
        net.sourceforge.plantuml.project.command.CommandLanguage $r11;
        net.sourceforge.plantuml.project.command.CommandPrintScale $r12;
        net.sourceforge.plantuml.project.command.CommandPrintBetween $r13;
        net.sourceforge.plantuml.project.command.CommandNoteBottom $r14;
        net.sourceforge.plantuml.project.command.CommandFootbox $r15;
        net.sourceforge.plantuml.project.command.CommandLabelOnColumn $r16;
        net.sourceforge.plantuml.project.command.CommandHideRessourceName $r17;
        net.sourceforge.plantuml.project.command.CommandHideRessourceFootbox $r18;
        net.sourceforge.plantuml.project.GanttDiagramFactory r19;

        r19 := @this: net.sourceforge.plantuml.project.GanttDiagramFactory;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addTitleCommands(java.util.List)>($r0);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands2(java.util.List)>($r0);

        $r2 = new net.sourceforge.plantuml.style.CommandStyleMultilinesCSS;

        specialinvoke $r2.<net.sourceforge.plantuml.style.CommandStyleMultilinesCSS: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.style.CommandStyleImport;

        specialinvoke $r3.<net.sourceforge.plantuml.style.CommandStyleImport: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.command.CommandNope;

        specialinvoke $r4.<net.sourceforge.plantuml.command.CommandNope: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection getLanguageCommands()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = new net.sourceforge.plantuml.project.command.CommandGanttArrow;

        specialinvoke $r6.<net.sourceforge.plantuml.project.command.CommandGanttArrow: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new net.sourceforge.plantuml.project.command.CommandGanttArrow2;

        specialinvoke $r7.<net.sourceforge.plantuml.project.command.CommandGanttArrow2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new net.sourceforge.plantuml.project.command.CommandColorTask;

        specialinvoke $r8.<net.sourceforge.plantuml.project.command.CommandColorTask: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new net.sourceforge.plantuml.project.command.CommandSeparator;

        specialinvoke $r9.<net.sourceforge.plantuml.project.command.CommandSeparator: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new net.sourceforge.plantuml.project.command.CommandWeekNumberStrategy;

        specialinvoke $r10.<net.sourceforge.plantuml.project.command.CommandWeekNumberStrategy: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new net.sourceforge.plantuml.project.command.CommandLanguage;

        specialinvoke $r11.<net.sourceforge.plantuml.project.command.CommandLanguage: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new net.sourceforge.plantuml.project.command.CommandPrintScale;

        specialinvoke $r12.<net.sourceforge.plantuml.project.command.CommandPrintScale: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = new net.sourceforge.plantuml.project.command.CommandPrintBetween;

        specialinvoke $r13.<net.sourceforge.plantuml.project.command.CommandPrintBetween: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new net.sourceforge.plantuml.project.command.CommandNoteBottom;

        specialinvoke $r14.<net.sourceforge.plantuml.project.command.CommandNoteBottom: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = new net.sourceforge.plantuml.project.command.CommandFootbox;

        specialinvoke $r15.<net.sourceforge.plantuml.project.command.CommandFootbox: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = new net.sourceforge.plantuml.project.command.CommandLabelOnColumn;

        specialinvoke $r16.<net.sourceforge.plantuml.project.command.CommandLabelOnColumn: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = new net.sourceforge.plantuml.project.command.CommandHideRessourceName;

        specialinvoke $r17.<net.sourceforge.plantuml.project.command.CommandHideRessourceName: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = new net.sourceforge.plantuml.project.command.CommandHideRessourceFootbox;

        specialinvoke $r18.<net.sourceforge.plantuml.project.command.CommandHideRessourceFootbox: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

        return $r0;
    }

    public static void clearCache()
    {
        java.util.Collection $r0;

        $r0 = <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection cache>;

        interfaceinvoke $r0.<java.util.Collection: void clear()>();

        return;
    }

    private static java.util.Collection getLanguageCommands()
    {
        java.util.Collection $r0, $r2, $r3, $r7, $r9, $r11, $r22, $r25, $r27, $r29, $r34;
        int $i0;
        java.util.List $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z9, $z11, $z12;
        java.lang.Object $r6, $r8, $r10, $r13, $r24, $r26, $r30;
        java.util.Iterator r12, r38, r40, r42, r44, r46, r48;
        net.sourceforge.plantuml.project.lang.SentenceSimple r14, r41, r43, r47, r49;
        java.lang.String $r15, $r16, $r17, $r18, $r19, $r20, $r31, $r32;
        net.sourceforge.plantuml.project.lang.SentenceAndAnd $r21;
        net.sourceforge.plantuml.project.command.NaturalCommand $r23, $r28, $r35;
        net.sourceforge.plantuml.project.lang.SentenceAnd $r33;
        java.lang.Throwable $r36;
        net.sourceforge.plantuml.project.lang.Subject r39, r45;

        $r0 = <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection cache>;

        entermonitor $r0;

     label01:
        $r2 = <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection cache>;

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        if $i0 != 0 goto label17;

        $r4 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.List subjects()>();

        r38 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r24 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (net.sourceforge.plantuml.project.lang.Subject) $r24;

        $r25 = interfaceinvoke r39.<net.sourceforge.plantuml.project.lang.Subject: java.util.Collection getSentences()>();

        r40 = interfaceinvoke $r25.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z9 = interfaceinvoke r40.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label07;

        $r26 = interfaceinvoke r40.<java.util.Iterator: java.lang.Object next()>();

        r41 = (net.sourceforge.plantuml.project.lang.SentenceSimple) $r26;

        $r27 = <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection cache>;

        $r28 = staticinvoke <net.sourceforge.plantuml.project.command.NaturalCommand: net.sourceforge.plantuml.project.command.NaturalCommand create(net.sourceforge.plantuml.project.lang.Sentence)>(r41);

        interfaceinvoke $r27.<java.util.Collection: boolean add(java.lang.Object)>($r28);

        $r29 = interfaceinvoke r39.<net.sourceforge.plantuml.project.lang.Subject: java.util.Collection getSentences()>();

        r42 = interfaceinvoke $r29.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z11 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label06;

        $r30 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r43 = (net.sourceforge.plantuml.project.lang.SentenceSimple) $r30;

        $r31 = virtualinvoke r41.<net.sourceforge.plantuml.project.lang.SentenceSimple: java.lang.String getVerbPattern()>();

        $r32 = virtualinvoke r43.<net.sourceforge.plantuml.project.lang.SentenceSimple: java.lang.String getVerbPattern()>();

        $z12 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z12 != 0 goto label05;

        $r34 = <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection cache>;

        $r33 = new net.sourceforge.plantuml.project.lang.SentenceAnd;

        specialinvoke $r33.<net.sourceforge.plantuml.project.lang.SentenceAnd: void <init>(net.sourceforge.plantuml.project.lang.SentenceSimple,net.sourceforge.plantuml.project.lang.SentenceSimple)>(r41, r43);

        $r35 = staticinvoke <net.sourceforge.plantuml.project.command.NaturalCommand: net.sourceforge.plantuml.project.command.NaturalCommand create(net.sourceforge.plantuml.project.lang.Sentence)>($r33);

        interfaceinvoke $r34.<java.util.Collection: boolean add(java.lang.Object)>($r35);

     label05:
        goto label04;

     label06:
        goto label03;

     label07:
        goto label02;

     label08:
        $r5 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.List subjects()>();

        r44 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label17;

        $r6 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (net.sourceforge.plantuml.project.lang.Subject) $r6;

        $r7 = interfaceinvoke r45.<net.sourceforge.plantuml.project.lang.Subject: java.util.Collection getSentences()>();

        r46 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z2 = interfaceinvoke r46.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label16;

        $r8 = interfaceinvoke r46.<java.util.Iterator: java.lang.Object next()>();

        r47 = (net.sourceforge.plantuml.project.lang.SentenceSimple) $r8;

        $r9 = interfaceinvoke r45.<net.sourceforge.plantuml.project.lang.Subject: java.util.Collection getSentences()>();

        r48 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r48.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label15;

        $r10 = interfaceinvoke r48.<java.util.Iterator: java.lang.Object next()>();

        r49 = (net.sourceforge.plantuml.project.lang.SentenceSimple) $r10;

        $r11 = interfaceinvoke r45.<net.sourceforge.plantuml.project.lang.Subject: java.util.Collection getSentences()>();

        r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label12:
        $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label14;

        $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (net.sourceforge.plantuml.project.lang.SentenceSimple) $r13;

        $r15 = virtualinvoke r47.<net.sourceforge.plantuml.project.lang.SentenceSimple: java.lang.String getVerbPattern()>();

        $r16 = virtualinvoke r49.<net.sourceforge.plantuml.project.lang.SentenceSimple: java.lang.String getVerbPattern()>();

        $z5 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z5 != 0 goto label13;

        $r17 = virtualinvoke r47.<net.sourceforge.plantuml.project.lang.SentenceSimple: java.lang.String getVerbPattern()>();

        $r18 = virtualinvoke r14.<net.sourceforge.plantuml.project.lang.SentenceSimple: java.lang.String getVerbPattern()>();

        $z6 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z6 != 0 goto label13;

        $r19 = virtualinvoke r14.<net.sourceforge.plantuml.project.lang.SentenceSimple: java.lang.String getVerbPattern()>();

        $r20 = virtualinvoke r49.<net.sourceforge.plantuml.project.lang.SentenceSimple: java.lang.String getVerbPattern()>();

        $z7 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z7 != 0 goto label13;

        $r22 = <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection cache>;

        $r21 = new net.sourceforge.plantuml.project.lang.SentenceAndAnd;

        specialinvoke $r21.<net.sourceforge.plantuml.project.lang.SentenceAndAnd: void <init>(net.sourceforge.plantuml.project.lang.SentenceSimple,net.sourceforge.plantuml.project.lang.SentenceSimple,net.sourceforge.plantuml.project.lang.SentenceSimple)>(r47, r49, r14);

        $r23 = staticinvoke <net.sourceforge.plantuml.project.command.NaturalCommand: net.sourceforge.plantuml.project.command.NaturalCommand create(net.sourceforge.plantuml.project.lang.Sentence)>($r21);

        interfaceinvoke $r22.<java.util.Collection: boolean add(java.lang.Object)>($r23);

     label13:
        goto label12;

     label14:
        goto label11;

     label15:
        goto label10;

     label16:
        goto label09;

     label17:
        exitmonitor $r0;

     label18:
        goto label21;

     label19:
        $r36 := @caughtexception;

        exitmonitor $r0;

     label20:
        throw $r36;

     label21:
        $r3 = <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection cache>;

        return $r3;

        catch java.lang.Throwable from label01 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public net.sourceforge.plantuml.project.GanttDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.project.GanttDiagram $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.project.GanttDiagramFactory r3;
        net.sourceforge.plantuml.ISkinSimple r4;

        r3 := @this: net.sourceforge.plantuml.project.GanttDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.project.GanttDiagram;

        specialinvoke $r0.<net.sourceforge.plantuml.project.GanttDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource)>(r1, r2);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.project.GanttDiagramFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.project.GanttDiagram $r4;

        r0 := @this: net.sourceforge.plantuml.project.GanttDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.project.GanttDiagramFactory: net.sourceforge.plantuml.project.GanttDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <net.sourceforge.plantuml.project.GanttDiagramFactory: java.util.Collection cache> = $r0;

        return;
    }
}
