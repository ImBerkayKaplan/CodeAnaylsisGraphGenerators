class net.sourceforge.plantuml.mindmap.Idea extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private final int level;
    private final net.sourceforge.plantuml.mindmap.Idea parent;
    private final java.util.List children;
    private final net.sourceforge.plantuml.mindmap.IdeaShape shape;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backColor;
    private final net.sourceforge.plantuml.style.StyleBuilder styleBuilder;
    private final java.lang.String stereotype;

    public void <init>(net.sourceforge.plantuml.style.StyleBuilder, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.mindmap.IdeaShape, java.lang.String)
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        net.sourceforge.plantuml.style.StyleBuilder r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.mindmap.IdeaShape r4;
        java.lang.String r5;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        r1 := @parameter0: net.sourceforge.plantuml.style.StyleBuilder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter3: net.sourceforge.plantuml.mindmap.IdeaShape;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.mindmap.Idea: void <init>(net.sourceforge.plantuml.style.StyleBuilder,net.sourceforge.plantuml.ugraphic.color.HColor,int,net.sourceforge.plantuml.mindmap.Idea,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.mindmap.IdeaShape,java.lang.String)>(r1, r2, 0, null, r3, r4, r5);

        return;
    }

    public net.sourceforge.plantuml.mindmap.Idea createIdea(net.sourceforge.plantuml.style.StyleBuilder, net.sourceforge.plantuml.ugraphic.color.HColor, int, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.mindmap.IdeaShape, java.lang.String)
    {
        net.sourceforge.plantuml.mindmap.Idea $r0, r3;
        net.sourceforge.plantuml.style.StyleBuilder r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        int i0;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.mindmap.IdeaShape r5;
        java.lang.String r6;
        java.util.List $r8;

        r3 := @this: net.sourceforge.plantuml.mindmap.Idea;

        r1 := @parameter0: net.sourceforge.plantuml.style.StyleBuilder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 := @parameter2: int;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r5 := @parameter4: net.sourceforge.plantuml.mindmap.IdeaShape;

        r6 := @parameter5: java.lang.String;

        $r0 = new net.sourceforge.plantuml.mindmap.Idea;

        specialinvoke $r0.<net.sourceforge.plantuml.mindmap.Idea: void <init>(net.sourceforge.plantuml.style.StyleBuilder,net.sourceforge.plantuml.ugraphic.color.HColor,int,net.sourceforge.plantuml.mindmap.Idea,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.mindmap.IdeaShape,java.lang.String)>(r1, r2, i0, r3, r4, r5, r6);

        $r8 = r3.<net.sourceforge.plantuml.mindmap.Idea: java.util.List children>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.style.StyleBuilder, net.sourceforge.plantuml.ugraphic.color.HColor, int, net.sourceforge.plantuml.mindmap.Idea, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.mindmap.IdeaShape, java.lang.String)
    {
        net.sourceforge.plantuml.mindmap.Idea r0, r5;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        net.sourceforge.plantuml.style.StyleBuilder r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        int i0;
        net.sourceforge.plantuml.mindmap.IdeaShape r6;
        java.lang.String r7;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        r3 := @parameter0: net.sourceforge.plantuml.style.StyleBuilder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 := @parameter2: int;

        r5 := @parameter3: net.sourceforge.plantuml.mindmap.Idea;

        r4 := @parameter4: net.sourceforge.plantuml.cucadiagram.Display;

        r6 := @parameter5: net.sourceforge.plantuml.mindmap.IdeaShape;

        r7 := @parameter6: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.mindmap.Idea: java.util.List children> = $r1;

        r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = r2;

        r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.style.StyleBuilder styleBuilder> = r3;

        r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.cucadiagram.Display label> = r4;

        r0.<net.sourceforge.plantuml.mindmap.Idea: int level> = i0;

        r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.mindmap.Idea parent> = r5;

        r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.mindmap.IdeaShape shape> = r6;

        r0.<net.sourceforge.plantuml.mindmap.Idea: java.lang.String stereotype> = r7;

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.String toString()>();

        return $r2;
    }

    public final int getLevel()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $i0 = r0.<net.sourceforge.plantuml.mindmap.Idea: int level>;

        return $i0;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getLabel()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.cucadiagram.Display label>;

        return $r1;
    }

    public java.util.Collection getChildren()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: java.util.List children>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public boolean hasChildren()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        java.util.List $r1;
        int $i0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: java.util.List children>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.mindmap.Idea getParent()
    {
        net.sourceforge.plantuml.mindmap.Idea r0, $r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.mindmap.Idea parent>;

        return $r1;
    }

    public final net.sourceforge.plantuml.mindmap.IdeaShape getShape()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        net.sourceforge.plantuml.mindmap.IdeaShape $r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.mindmap.IdeaShape shape>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        return $r1;
    }

    public final net.sourceforge.plantuml.style.StyleBuilder getStyleBuilder()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        net.sourceforge.plantuml.style.StyleBuilder $r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        return $r1;
    }

    public final java.lang.String getStereotype()
    {
        net.sourceforge.plantuml.mindmap.Idea r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.Idea;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.Idea: java.lang.String stereotype>;

        return $r1;
    }
}
