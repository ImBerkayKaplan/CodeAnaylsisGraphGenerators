public class net.sourceforge.plantuml.salt.element.Skeleton extends java.lang.Object
{
    private final java.util.List entries;

    public void <init>()
    {
        net.sourceforge.plantuml.salt.element.Skeleton r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.Skeleton;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.salt.element.Skeleton: java.util.List entries> = $r1;

        return;
    }

    public void add(double, double)
    {
        net.sourceforge.plantuml.salt.element.Skeleton r0;
        net.sourceforge.plantuml.salt.element.Skeleton$Entry $r1;
        double d0, d1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.salt.element.Skeleton;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.salt.element.Skeleton: java.util.List entries>;

        $r1 = new net.sourceforge.plantuml.salt.element.Skeleton$Entry;

        specialinvoke $r1.<net.sourceforge.plantuml.salt.element.Skeleton$Entry: void <init>(double,double)>(d0, d1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UGraphic, double, double)
    {
        net.sourceforge.plantuml.salt.element.Skeleton r0;
        java.util.List $r1, $r2, $r5, $r7, $r10;
        int $i0, $i1, $i2, $i4, i6, i7;
        java.lang.Object $r3, $r8, $r11;
        net.sourceforge.plantuml.salt.element.Skeleton$Entry r4, r9, $r12, r13;
        net.sourceforge.plantuml.ugraphic.UGraphic r6;
        double $d0, $d1, $d2, $d3, d4, d5;
        byte $b3, $b5;

        r0 := @this: net.sourceforge.plantuml.salt.element.Skeleton;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d4 := @parameter1: double;

        d5 := @parameter2: double;

        i6 = 0;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.salt.element.Skeleton: java.util.List entries>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i6 >= $i0 goto label7;

        $r2 = r0.<net.sourceforge.plantuml.salt.element.Skeleton: java.util.List entries>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i6);

        r4 = (net.sourceforge.plantuml.salt.element.Skeleton$Entry) $r3;

        $i1 = i6 + 1;

        $r5 = r0.<net.sourceforge.plantuml.salt.element.Skeleton: java.util.List entries>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r10 = r0.<net.sourceforge.plantuml.salt.element.Skeleton: java.util.List entries>;

        $i4 = i6 + 1;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i4);

        $r12 = (net.sourceforge.plantuml.salt.element.Skeleton$Entry) $r11;

        $d2 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$000(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>($r12);

        $d3 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$000(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r4);

        $b5 = $d2 cmpl $d3;

        if $b5 <= 0 goto label2;

        virtualinvoke r4.<net.sourceforge.plantuml.salt.element.Skeleton$Entry: void drawRectangle(net.sourceforge.plantuml.ugraphic.UGraphic)>(r6);

     label2:
        r13 = null;

        i7 = 0;

     label3:
        if i7 >= i6 goto label5;

        $r7 = r0.<net.sourceforge.plantuml.salt.element.Skeleton: java.util.List entries>;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i7);

        r9 = (net.sourceforge.plantuml.salt.element.Skeleton$Entry) $r8;

        $d0 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$000(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r9);

        $d1 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$000(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r4);

        $b3 = $d0 cmpg $d1;

        if $b3 >= 0 goto label4;

        r13 = r9;

     label4:
        i7 = i7 + 1;

        goto label3;

     label5:
        if r13 == null goto label6;

        specialinvoke r0.<net.sourceforge.plantuml.salt.element.Skeleton: void drawChild(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.salt.element.Skeleton$Entry,net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r6, r13, r4);

     label6:
        i6 = i6 + 1;

        goto label1;

     label7:
        return;
    }

    private void drawChild(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.salt.element.Skeleton$Entry, net.sourceforge.plantuml.salt.element.Skeleton$Entry)
    {
        net.sourceforge.plantuml.salt.element.Skeleton$Entry r0, r1;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4, $r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r6;
        net.sourceforge.plantuml.ugraphic.ULine $r5, $r8;
        net.sourceforge.plantuml.salt.element.Skeleton r9;

        r9 := @this: net.sourceforge.plantuml.salt.element.Skeleton;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: net.sourceforge.plantuml.salt.element.Skeleton$Entry;

        r0 := @parameter2: net.sourceforge.plantuml.salt.element.Skeleton$Entry;

        $d0 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$100(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r0);

        $d1 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$100(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r1);

        $d2 = $d0 - $d1;

        d3 = $d2 - 2.0;

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$000(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r1);

        $d5 = $d4 + 1.0;

        $d6 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$100(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r1);

        $d7 = $d6 + 3.0;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, $d7);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(d3);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        $d8 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$000(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r0);

        $d9 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$000(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r1);

        $d10 = $d8 - $d9;

        d11 = $d10 - 2.0;

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d12 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$000(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r1);

        $d13 = $d12 + 1.0;

        $d14 = staticinvoke <net.sourceforge.plantuml.salt.element.Skeleton$Entry: double access$100(net.sourceforge.plantuml.salt.element.Skeleton$Entry)>(r0);

        $d15 = $d14 + 1.0;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d13, $d15);

        $r7 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(d11);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        return;
    }
}
