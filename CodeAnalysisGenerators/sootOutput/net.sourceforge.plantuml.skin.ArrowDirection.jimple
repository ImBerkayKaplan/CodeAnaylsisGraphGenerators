public final enum class net.sourceforge.plantuml.skin.ArrowDirection extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL;
    public static final enum net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE;
    public static final enum net.sourceforge.plantuml.skin.ArrowDirection SELF;
    public static final enum net.sourceforge.plantuml.skin.ArrowDirection BOTH_DIRECTION;
    private static final net.sourceforge.plantuml.skin.ArrowDirection[] $VALUES;

    public static net.sourceforge.plantuml.skin.ArrowDirection[] values()
    {
        net.sourceforge.plantuml.skin.ArrowDirection[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.skin.ArrowDirection[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.skin.ArrowDirection valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.skin.ArrowDirection $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/skin/ArrowDirection;", r0);

        $r2 = (net.sourceforge.plantuml.skin.ArrowDirection) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.skin.ArrowDirection r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.skin.ArrowDirection;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public net.sourceforge.plantuml.skin.ArrowDirection reverse()
    {
        net.sourceforge.plantuml.skin.ArrowDirection r0, $r2, $r3;
        int[] $r1;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r4;

        r0 := @this: net.sourceforge.plantuml.skin.ArrowDirection;

        $r1 = <net.sourceforge.plantuml.skin.ArrowDirection$1: int[] $SwitchMap$net$sourceforge$plantuml$skin$ArrowDirection>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ArrowDirection: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        return $r3;

     label2:
        $r2 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        return $r2;

     label3:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.skin.ArrowDirection $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        net.sourceforge.plantuml.skin.ArrowDirection[] $r4;

        $r0 = new net.sourceforge.plantuml.skin.ArrowDirection;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.ArrowDirection: void <init>(java.lang.String,int)>("LEFT_TO_RIGHT_NORMAL", 0);

        <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL> = $r0;

        $r1 = new net.sourceforge.plantuml.skin.ArrowDirection;

        specialinvoke $r1.<net.sourceforge.plantuml.skin.ArrowDirection: void <init>(java.lang.String,int)>("RIGHT_TO_LEFT_REVERSE", 1);

        <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE> = $r1;

        $r2 = new net.sourceforge.plantuml.skin.ArrowDirection;

        specialinvoke $r2.<net.sourceforge.plantuml.skin.ArrowDirection: void <init>(java.lang.String,int)>("SELF", 2);

        <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection SELF> = $r2;

        $r3 = new net.sourceforge.plantuml.skin.ArrowDirection;

        specialinvoke $r3.<net.sourceforge.plantuml.skin.ArrowDirection: void <init>(java.lang.String,int)>("BOTH_DIRECTION", 3);

        <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection BOTH_DIRECTION> = $r3;

        $r4 = newarray (net.sourceforge.plantuml.skin.ArrowDirection)[4];

        $r5 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        $r4[0] = $r5;

        $r6 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        $r4[1] = $r6;

        $r7 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection SELF>;

        $r4[2] = $r7;

        $r8 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection BOTH_DIRECTION>;

        $r4[3] = $r8;

        <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection[] $VALUES> = $r4;

        return;
    }
}
