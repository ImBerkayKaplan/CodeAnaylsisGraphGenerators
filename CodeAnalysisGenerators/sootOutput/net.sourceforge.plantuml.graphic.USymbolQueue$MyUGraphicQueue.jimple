class net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue extends net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine implements net.sourceforge.plantuml.creole.Stencil
{
    private final double x1;
    private final double x2;
    private final double fullHeight;
    final net.sourceforge.plantuml.graphic.USymbolQueue this$0;

    protected net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine copy(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue $r0, r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.graphic.USymbolQueue $r3;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue;

        $r3 = r1.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: net.sourceforge.plantuml.graphic.USymbolQueue this$0>;

        $d2 = r1.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double x1>;

        $d1 = r1.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double x2>;

        $d0 = r1.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double fullHeight>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: void <init>(net.sourceforge.plantuml.graphic.USymbolQueue,net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>($r3, r2, $d2, $d1, $d0);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.graphic.USymbolQueue, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue r0;
        net.sourceforge.plantuml.graphic.USymbolQueue r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double d0, d1, d2;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.USymbolQueue;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: net.sourceforge.plantuml.graphic.USymbolQueue this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

        r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double x1> = d0;

        r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double x2> = d1;

        r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double fullHeight> = d2;

        return;
    }

    protected void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UHorizontalLine, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue r2;
        net.sourceforge.plantuml.ugraphic.UTranslate r3;
        double $d0;
        net.sourceforge.plantuml.ugraphic.UStroke $r4;

        r2 := @this: net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawLineInternal(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.creole.Stencil,double,net.sourceforge.plantuml.ugraphic.UStroke)>(r1, r2, $d0, $r4);

        return;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        return 0.0;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue r0;
        double $d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11;
        byte $b0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 := @parameter1: double;

        $d0 = r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double fullHeight>;

        d1 = $d0 / 2.0;

        $b0 = d2 cmpg d1;

        if $b0 > 0 goto label1;

        $d10 = d2 / d1;

        d11 = 1.0 - $d10;

        goto label2;

     label1:
        $d3 = d2 - d1;

        d11 = $d3 / d1;

     label2:
        $d5 = r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double x2>;

        $d4 = r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double x1>;

        $d6 = $d5 - $d4;

        $d8 = $d6 * d11;

        $d7 = r0.<net.sourceforge.plantuml.graphic.USymbolQueue$MyUGraphicQueue: double x1>;

        $d9 = $d8 + $d7;

        return $d9;
    }
}
