public class net.sourceforge.plantuml.ugraphic.comp.SlotFinder extends net.sourceforge.plantuml.ugraphic.UGraphicNo
{
    private final net.sourceforge.plantuml.ugraphic.comp.SlotSet slot;
    private final net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode;

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder $r0, r1;
        net.sourceforge.plantuml.ugraphic.UChange r2;

        r1 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $r0 = new net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: void <init>(net.sourceforge.plantuml.ugraphic.comp.SlotFinder,net.sourceforge.plantuml.ugraphic.UChange)>(r1, r2);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.comp.CompressionMode, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r2;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.comp.CompressionMode;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphicNo: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = new net.sourceforge.plantuml.ugraphic.comp.SlotSet;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot> = $r2;

        r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode> = r3;

        return;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.comp.SlotFinder, net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0, r1;
        net.sourceforge.plantuml.ugraphic.UChange r2;
        java.lang.Class[] $r3;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r4;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r5;
        java.lang.UnsupportedOperationException $r6;
        java.lang.Class $r7;
        java.lang.String $r8;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UChange;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphicNo: void <init>(net.sourceforge.plantuml.ugraphic.UGraphicNo,net.sourceforge.plantuml.ugraphic.UChange)>(r1, r2);

        $r3 = newarray (java.lang.Class)[4];

        $r3[0] = class "Lnet/sourceforge/plantuml/ugraphic/UBackground;";

        $r3[1] = class "Lnet/sourceforge/plantuml/ugraphic/color/HColor;";

        $r3[2] = class "Lnet/sourceforge/plantuml/ugraphic/UStroke;";

        $r3[3] = class "Lnet/sourceforge/plantuml/ugraphic/UTranslate;";

        $z0 = staticinvoke <net.sourceforge.plantuml.utils.ObjectUtils: boolean instanceOfAny(java.lang.Object,java.lang.Class[])>(r2, $r3);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label1:
        $r4 = r1.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode> = $r4;

        $r5 = r1.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot> = $r5;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, $r2;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.UShape r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        net.sourceforge.plantuml.ugraphic.UEmpty $r4;
        net.sourceforge.plantuml.ugraphic.UEllipse $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6;
        net.sourceforge.plantuml.ugraphic.UPath $r7;
        net.sourceforge.plantuml.ugraphic.URectangle $r8;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r9, $r10;
        net.sourceforge.plantuml.ugraphic.UShapeIgnorableForCompression r11;
        net.sourceforge.plantuml.ugraphic.UText r12;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        d0 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        d1 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $z0 = r3 instanceof net.sourceforge.plantuml.ugraphic.UShapeIgnorableForCompression;

        if $z0 == 0 goto label1;

        r11 = (net.sourceforge.plantuml.ugraphic.UShapeIgnorableForCompression) r3;

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $z7 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UShapeIgnorableForCompression: boolean isIgnoreForCompressionOn(net.sourceforge.plantuml.ugraphic.comp.CompressionMode)>($r9);

        if $z7 == 0 goto label1;

        $r10 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UShapeIgnorableForCompression: void drawWhenCompressed(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.comp.CompressionMode)>(r0, $r10);

        return;

     label1:
        $z1 = r3 instanceof net.sourceforge.plantuml.ugraphic.URectangle;

        if $z1 == 0 goto label2;

        $r8 = (net.sourceforge.plantuml.ugraphic.URectangle) r3;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: void drawRectangle(double,double,net.sourceforge.plantuml.ugraphic.URectangle)>(d0, d1, $r8);

        goto label7;

     label2:
        $z2 = r3 instanceof net.sourceforge.plantuml.ugraphic.UPath;

        if $z2 == 0 goto label3;

        $r7 = (net.sourceforge.plantuml.ugraphic.UPath) r3;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: void drawPath(double,double,net.sourceforge.plantuml.ugraphic.UPath)>(d0, d1, $r7);

        goto label7;

     label3:
        $z3 = r3 instanceof net.sourceforge.plantuml.ugraphic.UPolygon;

        if $z3 == 0 goto label4;

        $r6 = (net.sourceforge.plantuml.ugraphic.UPolygon) r3;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: void drawPolygon(double,double,net.sourceforge.plantuml.ugraphic.UPolygon)>(d0, d1, $r6);

        goto label7;

     label4:
        $z4 = r3 instanceof net.sourceforge.plantuml.ugraphic.UEllipse;

        if $z4 == 0 goto label5;

        $r5 = (net.sourceforge.plantuml.ugraphic.UEllipse) r3;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: void drawEllipse(double,double,net.sourceforge.plantuml.ugraphic.UEllipse)>(d0, d1, $r5);

        goto label7;

     label5:
        $z5 = r3 instanceof net.sourceforge.plantuml.ugraphic.UText;

        if $z5 == 0 goto label6;

        r12 = (net.sourceforge.plantuml.ugraphic.UText) r3;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: void drawText(double,double,net.sourceforge.plantuml.ugraphic.UText)>(d0, d1, r12);

        goto label7;

     label6:
        $z6 = r3 instanceof net.sourceforge.plantuml.ugraphic.UEmpty;

        if $z6 == 0 goto label7;

        $r4 = (net.sourceforge.plantuml.ugraphic.UEmpty) r3;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: void drawEmpty(double,double,net.sourceforge.plantuml.ugraphic.UEmpty)>(d0, d1, $r4);

     label7:
        return;
    }

    private void drawPath(double, double, net.sourceforge.plantuml.ugraphic.UPath)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r1, $r2;
        double d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UPath r3;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        d5 := @parameter0: double;

        d0 := @parameter1: double;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.UPath;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r1 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r2 != $r1 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d6 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UPath: double getMinX()>();

        $d7 = d5 + $d6;

        $d8 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UPath: double getMaxX()>();

        $d9 = d5 + $d8;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>($d7, $d9);

        goto label2;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UPath: double getMinY()>();

        $d2 = d0 + $d1;

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UPath: double getMaxY()>();

        $d4 = d0 + $d3;

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>($d2, $d4);

     label2:
        return;
    }

    private void drawEmpty(double, double, net.sourceforge.plantuml.ugraphic.UEmpty)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r1, $r2;
        double d0, $d1, $d2, d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UEmpty r3;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        d3 := @parameter0: double;

        d0 := @parameter1: double;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.UEmpty;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r1 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r2 != $r1 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UEmpty: double getWidth()>();

        $d5 = d3 + $d4;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>(d3, $d5);

        goto label2;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UEmpty: double getHeight()>();

        $d2 = d0 + $d1;

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>(d0, $d2);

     label2:
        return;
    }

    private void drawText(double, double, net.sourceforge.plantuml.ugraphic.UText)
    {
        net.sourceforge.plantuml.ugraphic.TextLimitFinder $r0;
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        double d0, d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;
        net.sourceforge.plantuml.ugraphic.UText r6;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r7, $r8;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r9, $r10;

        r1 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r6 := @parameter2: net.sourceforge.plantuml.ugraphic.UText;

        $r0 = new net.sourceforge.plantuml.ugraphic.TextLimitFinder;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: void <init>(net.sourceforge.plantuml.graphic.StringBounder,boolean)>($r2, 0);

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d1);

        $r5 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r6);

        $r8 = r1.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r7 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r8 != $r7 goto label1;

        $r10 = r1.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d4 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: double getMinX()>();

        $d5 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: double getMaxX()>();

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>($d4, $d5);

        goto label2;

     label1:
        $r9 = r1.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d2 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: double getMinY()>();

        $d3 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextLimitFinder: double getMaxY()>();

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>($d2, $d3);

     label2:
        return;
    }

    private void drawEllipse(double, double, net.sourceforge.plantuml.ugraphic.UEllipse)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r1, $r2;
        double d0, $d1, $d2, d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UEllipse r3;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        d3 := @parameter0: double;

        d0 := @parameter1: double;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.UEllipse;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r1 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r2 != $r1 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        $d5 = d3 + $d4;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>(d3, $d5);

        goto label2;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        $d2 = d0 + $d1;

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>(d0, $d2);

     label2:
        return;
    }

    private void drawPolygon(double, double, net.sourceforge.plantuml.ugraphic.UPolygon)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0;
        net.sourceforge.plantuml.ugraphic.UPolygon r1;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r2, $r3, $r4, $r5;
        double d0, $d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        d5 := @parameter0: double;

        d0 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.ugraphic.UPolygon;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPolygon: net.sourceforge.plantuml.ugraphic.comp.CompressionMode getCompressionMode()>();

        if $r2 != $r3 goto label1;

        return;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r4 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r5 != $r4 goto label2;

        $r7 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d6 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPolygon: double getMinX()>();

        $d7 = d5 + $d6;

        $d8 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPolygon: double getMaxX()>();

        $d9 = d5 + $d8;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>($d7, $d9);

        goto label3;

     label2:
        $r6 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPolygon: double getMinY()>();

        $d2 = d0 + $d1;

        $d3 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPolygon: double getMaxY()>();

        $d4 = d0 + $d3;

        virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>($d2, $d4);

     label3:
        return;
    }

    private void drawRectangle(double, double, net.sourceforge.plantuml.ugraphic.URectangle)
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r1, $r2;
        double d0, $d1, $d2, d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.URectangle r3;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        d3 := @parameter0: double;

        d0 := @parameter1: double;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.URectangle;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r1 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r2 != $r1 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        $d5 = d3 + $d4;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>(d3, $d5);

        goto label2;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        $d2 = d0 + $d1;

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: void addSlot(double,double)>(d0, $d2);

     label2:
        return;
    }

    public net.sourceforge.plantuml.ugraphic.color.ColorMapper getColorMapper()
    {
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r0;
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        $r0 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.comp.SlotSet getSlotSet()
    {
        net.sourceforge.plantuml.ugraphic.comp.SlotFinder r0;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.SlotFinder;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.comp.SlotFinder: net.sourceforge.plantuml.ugraphic.comp.SlotSet slot>;

        return $r1;
    }
}
