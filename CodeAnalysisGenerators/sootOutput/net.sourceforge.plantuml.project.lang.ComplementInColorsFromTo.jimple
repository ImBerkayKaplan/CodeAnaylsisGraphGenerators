public class net.sourceforge.plantuml.project.lang.ComplementInColorsFromTo extends java.lang.Object implements net.sourceforge.plantuml.project.lang.Something
{

    public void <init>()
    {
        net.sourceforge.plantuml.project.lang.ComplementInColorsFromTo r0;

        r0 := @this: net.sourceforge.plantuml.project.lang.ComplementInColorsFromTo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String r3, $r5;
        net.sourceforge.plantuml.project.lang.ComplementInColorsFromTo r6;

        r6 := @this: net.sourceforge.plantuml.project.lang.ComplementInColorsFromTo;

        r3 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r5, "from[%s]+(#?\\w+)(?:/(#?\\w+))?[%s]+to[%s]+(#?\\w+)(?:/(#?\\w+))?");

        return $r0;
    }

    public net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r7, $r8, $r9, $r12, $r13, $r14, $r17, $r18, $r19;
        java.lang.String r3, $r5, r6, $r10, r11, $r15, r16, $r20, r21;
        net.sourceforge.plantuml.project.GanttDiagram r22;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r23, $r27, $r31, $r35;
        net.sourceforge.plantuml.ISkinParam $r24, $r28, $r32, $r36;
        net.sourceforge.plantuml.api.ThemeStyle $r25, $r29, $r33, $r37;
        net.sourceforge.plantuml.ugraphic.color.HColor r26, r30, r34, $r45, $r46, $r47, $r48;
        net.sourceforge.plantuml.project.lang.CenterBorderColor[] $r39;
        net.sourceforge.plantuml.project.lang.CenterBorderColor $r40, $r41;
        net.sourceforge.plantuml.project.Failable $r43;
        net.sourceforge.plantuml.project.lang.ComplementInColorsFromTo r44;

        r44 := @this: net.sourceforge.plantuml.project.lang.ComplementInColorsFromTo;

        r22 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r5, 0);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r11 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r10, 1);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r15, 2);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r20, 3);

        if r6 != null goto label1;

        $r45 = null;

        goto label2;

     label1:
        $r23 = virtualinvoke r22.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r24 = virtualinvoke r22.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r45 = virtualinvoke $r23.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r25, r6);

     label2:
        r26 = $r45;

        if r11 != null goto label3;

        $r46 = null;

        goto label4;

     label3:
        $r27 = virtualinvoke r22.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r28 = virtualinvoke r22.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r46 = virtualinvoke $r27.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r29, r11);

     label4:
        r30 = $r46;

        if r16 != null goto label5;

        $r47 = null;

        goto label6;

     label5:
        $r31 = virtualinvoke r22.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r32 = virtualinvoke r22.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r33 = interfaceinvoke $r32.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r47 = virtualinvoke $r31.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r33, r16);

     label6:
        r34 = $r47;

        if r21 != null goto label7;

        $r48 = null;

        goto label8;

     label7:
        $r35 = virtualinvoke r22.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r36 = virtualinvoke r22.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r37 = interfaceinvoke $r36.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r48 = virtualinvoke $r35.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r37, r21);

     label8:
        $r39 = newarray (net.sourceforge.plantuml.project.lang.CenterBorderColor)[2];

        $r40 = new net.sourceforge.plantuml.project.lang.CenterBorderColor;

        specialinvoke $r40.<net.sourceforge.plantuml.project.lang.CenterBorderColor: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>(r26, r30);

        $r39[0] = $r40;

        $r41 = new net.sourceforge.plantuml.project.lang.CenterBorderColor;

        specialinvoke $r41.<net.sourceforge.plantuml.project.lang.CenterBorderColor: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>(r34, $r48);

        $r39[1] = $r41;

        $r43 = staticinvoke <net.sourceforge.plantuml.project.Failable: net.sourceforge.plantuml.project.Failable ok(java.lang.Object)>($r39);

        return $r43;
    }
}
