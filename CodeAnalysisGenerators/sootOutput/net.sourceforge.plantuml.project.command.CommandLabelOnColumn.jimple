public class net.sourceforge.plantuml.project.command.CommandLabelOnColumn extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.project.command.CommandLabelOnColumn r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.project.command.CommandLabelOnColumn;

        $r1 = staticinvoke <net.sourceforge.plantuml.project.command.CommandLabelOnColumn: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r13;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        net.sourceforge.plantuml.command.regex.RegexOptional $r11;
        net.sourceforge.plantuml.command.regex.RegexConcat $r12, $r21;

        $r0 = class "Lnet/sourceforge/plantuml/project/command/CommandLabelOnColumn;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[10];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("labels?");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("on");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(first|last)");

        $r2[5] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("column");

        $r2[7] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r13 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[6];

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r13[0] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("and");

        $r13[1] = $r15;

        $r16 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r13[2] = $r16;

        $r17 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ALIGNED", "(left|right)");

        $r13[3] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r13[4] = $r18;

        $r19 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r19.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("aligned");

        $r13[5] = $r19;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r13);

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r12);

        $r2[8] = $r11;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[9] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r21;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String $r1, $r2, $r4, $r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.project.LabelPosition r3, $r13;
        net.sourceforge.plantuml.project.LabelStrategy $r7;
        net.sourceforge.plantuml.project.GanttDiagram r9;
        net.sourceforge.plantuml.command.CommandExecutionResult $r10;
        net.sourceforge.plantuml.project.command.CommandLabelOnColumn r11;
        net.sourceforge.plantuml.LineLocation r12;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r14;

        r11 := @this: net.sourceforge.plantuml.project.command.CommandLabelOnColumn;

        r9 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r12 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = "first";

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("POSITION", 0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r13 = <net.sourceforge.plantuml.project.LabelPosition: net.sourceforge.plantuml.project.LabelPosition FIRST_COLUMN>;

        goto label2;

     label1:
        $r13 = <net.sourceforge.plantuml.project.LabelPosition: net.sourceforge.plantuml.project.LabelPosition LAST_COLUMN>;

     label2:
        r3 = $r13;

        $r4 = "right";

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ALIGNED", 0);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z1 == 0 goto label3;

        $r14 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        goto label4;

     label3:
        $r14 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

     label4:
        $r7 = new net.sourceforge.plantuml.project.LabelStrategy;

        specialinvoke $r7.<net.sourceforge.plantuml.project.LabelStrategy: void <init>(net.sourceforge.plantuml.project.LabelPosition,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r3, $r14);

        virtualinvoke r9.<net.sourceforge.plantuml.project.GanttDiagram: void setLabelStrategy(net.sourceforge.plantuml.project.LabelStrategy)>($r7);

        $r10 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r10;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.project.command.CommandLabelOnColumn r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.project.GanttDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.project.command.CommandLabelOnColumn;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.project.GanttDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.project.command.CommandLabelOnColumn: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
