public final enum class net.sourceforge.plantuml.golem.TileGeometry extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.golem.TileGeometry NORTH;
    public static final enum net.sourceforge.plantuml.golem.TileGeometry SOUTH;
    public static final enum net.sourceforge.plantuml.golem.TileGeometry EAST;
    public static final enum net.sourceforge.plantuml.golem.TileGeometry WEST;
    public static final enum net.sourceforge.plantuml.golem.TileGeometry CENTER;
    private static final net.sourceforge.plantuml.golem.TileGeometry[] $VALUES;

    public static net.sourceforge.plantuml.golem.TileGeometry[] values()
    {
        net.sourceforge.plantuml.golem.TileGeometry[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.golem.TileGeometry[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.golem.TileGeometry valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.golem.TileGeometry $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/golem/TileGeometry;", r0);

        $r2 = (net.sourceforge.plantuml.golem.TileGeometry) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.golem.TileGeometry r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.golem.TileGeometry;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public net.sourceforge.plantuml.golem.TileGeometry opposite()
    {
        net.sourceforge.plantuml.golem.TileGeometry r0, $r2, $r3, $r4, $r5;
        int[] $r1;
        int $i0, $i1;
        java.lang.UnsupportedOperationException $r6;

        r0 := @this: net.sourceforge.plantuml.golem.TileGeometry;

        $r1 = <net.sourceforge.plantuml.golem.TileGeometry$1: int[] $SwitchMap$net$sourceforge$plantuml$golem$TileGeometry>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.golem.TileGeometry: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label5;
        };

     label1:
        $r5 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry SOUTH>;

        return $r5;

     label2:
        $r4 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry NORTH>;

        return $r4;

     label3:
        $r3 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry WEST>;

        return $r3;

     label4:
        $r2 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry EAST>;

        return $r2;

     label5:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;
    }

    public static net.sourceforge.plantuml.golem.TileGeometry fromString(java.lang.String)
    {
        java.lang.String r0;
        char $c0, c1;
        net.sourceforge.plantuml.golem.TileGeometry $r1, $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        c1 = staticinvoke <net.sourceforge.plantuml.StringUtils: char goUpperCase(char)>($c0);

        lookupswitch(c1)
        {
            case 69: goto label3;
            case 78: goto label1;
            case 83: goto label2;
            case 87: goto label4;
            default: goto label5;
        };

     label1:
        $r3 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry NORTH>;

        return $r3;

     label2:
        $r2 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry SOUTH>;

        return $r2;

     label3:
        $r4 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry EAST>;

        return $r4;

     label4:
        $r1 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry WEST>;

        return $r1;

     label5:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.golem.TileGeometry $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        net.sourceforge.plantuml.golem.TileGeometry[] $r5;

        $r0 = new net.sourceforge.plantuml.golem.TileGeometry;

        specialinvoke $r0.<net.sourceforge.plantuml.golem.TileGeometry: void <init>(java.lang.String,int)>("NORTH", 0);

        <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry NORTH> = $r0;

        $r1 = new net.sourceforge.plantuml.golem.TileGeometry;

        specialinvoke $r1.<net.sourceforge.plantuml.golem.TileGeometry: void <init>(java.lang.String,int)>("SOUTH", 1);

        <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry SOUTH> = $r1;

        $r2 = new net.sourceforge.plantuml.golem.TileGeometry;

        specialinvoke $r2.<net.sourceforge.plantuml.golem.TileGeometry: void <init>(java.lang.String,int)>("EAST", 2);

        <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry EAST> = $r2;

        $r3 = new net.sourceforge.plantuml.golem.TileGeometry;

        specialinvoke $r3.<net.sourceforge.plantuml.golem.TileGeometry: void <init>(java.lang.String,int)>("WEST", 3);

        <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry WEST> = $r3;

        $r4 = new net.sourceforge.plantuml.golem.TileGeometry;

        specialinvoke $r4.<net.sourceforge.plantuml.golem.TileGeometry: void <init>(java.lang.String,int)>("CENTER", 4);

        <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry CENTER> = $r4;

        $r5 = newarray (net.sourceforge.plantuml.golem.TileGeometry)[5];

        $r6 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry NORTH>;

        $r5[0] = $r6;

        $r7 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry SOUTH>;

        $r5[1] = $r7;

        $r8 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry EAST>;

        $r5[2] = $r8;

        $r9 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry WEST>;

        $r5[3] = $r9;

        $r10 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry CENTER>;

        $r5[4] = $r10;

        <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry[] $VALUES> = $r5;

        return;
    }
}
