class net.sourceforge.plantuml.graphic.USymbolStack extends net.sourceforge.plantuml.graphic.USymbol
{

    void <init>()
    {
        net.sourceforge.plantuml.graphic.USymbolStack r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolStack;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolStack r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStack;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter STACK>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolStack r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStack;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stack>;

        return $r0;
    }

    private void drawQueue(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1;
        double d1, d2, $d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, $d28, $d29;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4, $r6, $r15;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r3, $r13;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        net.sourceforge.plantuml.ugraphic.UPath $r7;
        byte $b0;
        java.awt.geom.Point2D$Double $r9, $r10, $r11, $r12;
        net.sourceforge.plantuml.ugraphic.UBackground $r14;
        net.sourceforge.plantuml.graphic.USymbolStack r16;

        r16 := @this: net.sourceforge.plantuml.graphic.USymbolStack;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d27 := @parameter3: double;

        d4 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = d1 - 30.0;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d3, d2);

        r1 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>(d4);

        $r3 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(15.0);

        $r6 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r1);

        $r7 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $b0 = d4 cmpl 0.0;

        if $b0 != 0 goto label1;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, 0.0);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, d2);

        $d28 = d1 - 15.0;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d28, d2);

        $d29 = d1 - 15.0;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d29, 0.0);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d1, 0.0);

        goto label2;

     label1:
        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        $d5 = d4 / 2.0;

        $d6 = 15.0 - $d5;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d6, 0.0);

        $r9 = new java.awt.geom.Point2D$Double;

        $d7 = d4 / 2.0;

        specialinvoke $r9.<java.awt.geom.Point2D$Double: void <init>(double,double)>(15.0, $d7);

        $d8 = d4 / 2.0;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r9, $d8, 0.0, 1.0);

        $d9 = d4 / 2.0;

        $d10 = d2 - $d9;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, $d10);

        $r10 = new java.awt.geom.Point2D$Double;

        $d11 = d4 / 2.0;

        $d12 = 15.0 + $d11;

        specialinvoke $r10.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d12, d2);

        $d13 = d4 / 2.0;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r10, $d13, 0.0, 0.0);

        $d15 = d1 - 15.0;

        $d14 = d4 / 2.0;

        $d16 = $d15 - $d14;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d16, d2);

        $r11 = new java.awt.geom.Point2D$Double;

        $d19 = d1 - 15.0;

        $d17 = d4 / 2.0;

        $d18 = d2 - $d17;

        specialinvoke $r11.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d19, $d18);

        $d20 = d4 / 2.0;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r11, $d20, 0.0, 0.0);

        $d22 = d1 - 15.0;

        $d21 = d4 / 2.0;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d22, $d21);

        $r12 = new java.awt.geom.Point2D$Double;

        $d24 = d1 - 15.0;

        $d23 = d4 / 2.0;

        $d25 = $d24 + $d23;

        specialinvoke $r12.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d25, 0.0);

        $d26 = d4 / 2.0;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(java.awt.geom.Point2D,double,double,double)>($r12, $d26, 0.0, 1.0);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d1, 0.0);

     label2:
        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPath: void setDeltaShadow(double)>(d27);

        $r13 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r15 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        interfaceinvoke $r15.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        return;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolStack r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStack;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(25.0, 25.0, 10.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolStack$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolStack r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStack;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolStack$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolStack$1: void <init>(net.sourceforge.plantuml.graphic.USymbolStack,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r2, r3, r4);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolStack$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolStack r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4;
        double d0, d1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5, r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolStack;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolStack$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolStack$2: void <init>(net.sourceforge.plantuml.graphic.USymbolStack,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,double,net.sourceforge.plantuml.graphic.TextBlock,double)>(r1, r2, r3, d0, r4, d1);

        return $r0;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolStack, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolStack r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2, d3;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolStack;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolStack: void drawQueue(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double)>(r1, d0, d1, d2, d3);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolStack)
    {
        net.sourceforge.plantuml.graphic.USymbolStack r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolStack;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolStack: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }
}
