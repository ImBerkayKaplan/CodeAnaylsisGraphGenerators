public class net.sourceforge.plantuml.sprite.RessourcesUtils extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.sprite.RessourcesUtils r0;

        r0 := @this: net.sourceforge.plantuml.sprite.RessourcesUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.Set getJarFile(java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.String r0, r2, $r3, $r4, $r8, $r9, $r14, $r15, r16, $r19, $r20, $r24, $r28, $r29, $r33, r43;
        boolean $z0, $z1, $z2, $z3, z4;
        java.lang.IllegalArgumentException $r1;
        java.util.Set $r5, $r25, $r34, $r39;
        java.lang.StringBuilder $r6, $r10, $r11, $r21, $r22, $r23, $r30, $r31, $r32;
        java.lang.Class $r7, $r12, $r35;
        java.lang.ClassLoader $r13, $r36;
        int $i0;
        java.util.jar.JarFile $r17, $r26;
        java.nio.charset.Charset $r18, $r27;
        net.sourceforge.plantuml.security.SFile $r37;
        java.net.URI $r38;
        java.net.URISyntaxException $r40;
        java.net.URL r41, r44;

        r0 := @parameter0: java.lang.String;

        z4 := @parameter1: boolean;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label2:
        r2 = staticinvoke <net.sourceforge.plantuml.sprite.RessourcesUtils: java.lang.String getProtocol()>();

        $r3 = "file";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label6;

        $r35 = class "Lnet/sourceforge/plantuml/version/Version;";

        $r36 = virtualinvoke $r35.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r41 = virtualinvoke $r36.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r0);

     label3:
        $r37 = new net.sourceforge.plantuml.security.SFile;

        $r38 = virtualinvoke r41.<java.net.URL: java.net.URI toURI()>();

        specialinvoke $r37.<net.sourceforge.plantuml.security.SFile: void <init>(java.net.URI)>($r38);

        $r39 = staticinvoke <net.sourceforge.plantuml.sprite.RessourcesUtils: java.util.Set listEntry(net.sourceforge.plantuml.security.SFile)>($r37);

     label4:
        return $r39;

     label5:
        $r40 := @caughtexception;

        virtualinvoke $r40.<java.net.URISyntaxException: void printStackTrace()>();

        return null;

     label6:
        $r4 = "jar";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label8;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = class "Lnet/sourceforge/plantuml/version/Version;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "/");

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".class");

        r43 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = class "Lnet/sourceforge/plantuml/version/Version;";

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r44 = virtualinvoke $r13.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>(r43);

        $r14 = virtualinvoke r44.<java.net.URL: java.lang.String getPath()>();

        $r15 = virtualinvoke r44.<java.net.URL: java.lang.String getPath()>();

        $i0 = virtualinvoke $r15.<java.lang.String: int indexOf(java.lang.String)>("!");

        r16 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int,int)>(5, $i0);

        if z4 == 0 goto label7;

        $r26 = new java.util.jar.JarFile;

        $r27 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r28 = virtualinvoke $r27.<java.nio.charset.Charset: java.lang.String name()>();

        $r29 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r16, $r28);

        specialinvoke $r26.<java.util.jar.JarFile: void <init>(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = staticinvoke <net.sourceforge.plantuml.sprite.RessourcesUtils: java.util.Set listFolders(java.util.jar.JarFile,java.lang.String)>($r26, $r33);

        return $r34;

     label7:
        $r17 = new java.util.jar.JarFile;

        $r18 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r19 = virtualinvoke $r18.<java.nio.charset.Charset: java.lang.String name()>();

        $r20 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r16, $r19);

        specialinvoke $r17.<java.util.jar.JarFile: void <init>(java.lang.String)>($r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = staticinvoke <net.sourceforge.plantuml.sprite.RessourcesUtils: java.util.Set listFiles(java.util.jar.JarFile,java.lang.String)>($r17, $r24);

        return $r25;

     label8:
        $r5 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r5;

        catch java.net.URISyntaxException from label3 to label4 with label5;
    }

    private static java.lang.String getProtocol()
    {
        java.lang.Class $r0;
        java.lang.ClassLoader $r1;
        java.net.URL r2;
        java.lang.String $r3;

        $r0 = class "Lnet/sourceforge/plantuml/version/Version;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r2 = virtualinvoke $r1.<java.lang.ClassLoader: java.net.URL getResource(java.lang.String)>("net/sourceforge/plantuml/version/logo.png");

        $r3 = virtualinvoke r2.<java.net.URL: java.lang.String getProtocol()>();

        return $r3;
    }

    private static java.util.Set listFiles(java.util.jar.JarFile, java.lang.String)
    {
        java.util.jar.JarFile r0;
        java.util.Enumeration r1;
        java.util.TreeSet $r2;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.util.jar.JarEntry $r5;
        java.lang.String r6, r7, $r8;
        int $i0;

        r0 := @parameter0: java.util.jar.JarFile;

        r7 := @parameter1: java.lang.String;

        r1 = virtualinvoke r0.<java.util.jar.JarFile: java.util.Enumeration entries()>();

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.util.jar.JarEntry) $r4;

        r6 = virtualinvoke $r5.<java.util.jar.JarEntry: java.lang.String getName()>();

        $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r7);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        $r8 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i0);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r8);

     label2:
        goto label1;

     label3:
        return $r2;
    }

    private static java.util.Set listFolders(java.util.jar.JarFile, java.lang.String)
    {
        java.util.jar.JarFile r0;
        java.util.Enumeration r1;
        java.util.TreeSet $r2;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.util.jar.JarEntry $r5;
        java.lang.String r6, r7, r8, $r9;
        int $i0, i1;

        r0 := @parameter0: java.util.jar.JarFile;

        r7 := @parameter1: java.lang.String;

        r1 = virtualinvoke r0.<java.util.jar.JarFile: java.util.Enumeration entries()>();

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r5 = (java.util.jar.JarEntry) $r4;

        r6 = virtualinvoke $r5.<java.util.jar.JarEntry: java.lang.String getName()>();

        $z1 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>(r7);

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        r8 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i0);

        i1 = virtualinvoke r8.<java.lang.String: int indexOf(int)>(47);

        if i1 == -1 goto label2;

        $r9 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r9);

     label2:
        goto label1;

     label3:
        return $r2;
    }

    private static java.util.Set listEntry(net.sourceforge.plantuml.security.SFile)
    {
        java.util.TreeSet $r0;
        net.sourceforge.plantuml.security.SFile r2;
        java.lang.String[] r3;
        int i0, i1;
        java.lang.String r4;

        r2 := @parameter0: net.sourceforge.plantuml.security.SFile;

        $r0 = new java.util.TreeSet;

        specialinvoke $r0.<java.util.TreeSet: void <init>()>();

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.security.SFile: java.lang.String[] list()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r4);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r0;
    }
}
