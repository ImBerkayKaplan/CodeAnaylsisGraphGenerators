public class ext.plantuml.com.ctreber.acearth.gui.PixelCanvas extends java.lang.Object implements ext.plantuml.com.ctreber.acearth.renderer.RenderTarget
{
    private final int fImageWidth;
    private final int fImageHeight;
    private final java.awt.image.BufferedImage fEarthImage2;

    public void <init>(int, int)
    {
        ext.plantuml.com.ctreber.acearth.gui.PixelCanvas r0;
        int i0, i1, $i2, $i3;
        java.awt.image.BufferedImage $r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.gui.PixelCanvas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: int fImageWidth> = i0;

        r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: int fImageHeight> = i1;

        $r1 = new java.awt.image.BufferedImage;

        $i3 = r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: int fImageWidth>;

        $i2 = r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: int fImageHeight>;

        specialinvoke $r1.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i3, $i2, 1);

        r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: java.awt.image.BufferedImage fEarthImage2> = $r1;

        return;
    }

    public java.awt.Graphics2D getGraphics2D()
    {
        ext.plantuml.com.ctreber.acearth.gui.PixelCanvas r0;
        java.awt.image.BufferedImage $r1;
        java.awt.Graphics2D $r2;

        r0 := @this: ext.plantuml.com.ctreber.acearth.gui.PixelCanvas;

        $r1 = r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: java.awt.image.BufferedImage fEarthImage2>;

        $r2 = virtualinvoke $r1.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        return $r2;
    }

    public void setPixel(int, int, int, int, int, int)
    {
        ext.plantuml.com.ctreber.acearth.gui.PixelCanvas r0;
        int i0, i1, i2, i3, i4, i5;
        java.awt.Color $r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.gui.PixelCanvas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i5 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int,int)>(i2, i3, i4, i5);

        virtualinvoke r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: void setPixel(int,int,java.awt.Color)>(i0, i1, $r1);

        return;
    }

    public void setPixel(int, int, java.awt.Color)
    {
        ext.plantuml.com.ctreber.acearth.gui.PixelCanvas r0;
        int i0, i1, $i2;
        java.awt.Color r1;
        java.awt.image.BufferedImage $r2;

        r0 := @this: ext.plantuml.com.ctreber.acearth.gui.PixelCanvas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.awt.Color;

        $r2 = r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: java.awt.image.BufferedImage fEarthImage2>;

        $i2 = virtualinvoke r1.<java.awt.Color: int getRGB()>();

        virtualinvoke $r2.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i0, i1, $i2);

        return;
    }

    public int getImageWidth()
    {
        ext.plantuml.com.ctreber.acearth.gui.PixelCanvas r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.gui.PixelCanvas;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: int fImageWidth>;

        return $i0;
    }

    public int getImageHeight()
    {
        ext.plantuml.com.ctreber.acearth.gui.PixelCanvas r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.gui.PixelCanvas;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: int fImageHeight>;

        return $i0;
    }

    public void saveToImage(java.io.OutputStream) throws java.io.IOException
    {
        ext.plantuml.com.ctreber.acearth.gui.PixelCanvas r0;
        java.io.OutputStream r1;
        java.awt.image.BufferedImage $r2;

        r0 := @this: ext.plantuml.com.ctreber.acearth.gui.PixelCanvas;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = r0.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: java.awt.image.BufferedImage fEarthImage2>;

        staticinvoke <net.sourceforge.plantuml.security.SImageIO: void write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>($r2, "png", r1);

        return;
    }
}
