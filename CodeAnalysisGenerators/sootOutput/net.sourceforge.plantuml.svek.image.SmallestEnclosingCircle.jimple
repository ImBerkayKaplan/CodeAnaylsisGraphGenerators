public class net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle extends java.lang.Object
{
    private final java.util.List all;
    private net.sourceforge.plantuml.svek.image.Circle lastSolution;

    public void <init>()
    {
        net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: java.util.List all> = $r1;

        return;
    }

    public void append(java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle r0;
        java.awt.geom.Point2D r1;
        java.util.List $r2, $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle;

        r1 := @parameter0: java.awt.geom.Point2D;

        $r2 = r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: java.util.List all>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: java.util.List all>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: net.sourceforge.plantuml.svek.image.Circle lastSolution> = null;

        return;
    }

    public net.sourceforge.plantuml.svek.image.Circle getCircle()
    {
        net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle r0;
        net.sourceforge.plantuml.svek.image.Circle $r1, $r2, $r7;
        java.util.List $r3, $r5, $r6;
        int $i0;
        java.util.ArrayList $r4;

        r0 := @this: net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: net.sourceforge.plantuml.svek.image.Circle lastSolution>;

        if $r1 != null goto label1;

        $r3 = r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: java.util.List all>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r6 = r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: java.util.List all>;

        $r4 = new java.util.ArrayList;

        $r5 = r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: java.util.List all>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r5);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: net.sourceforge.plantuml.svek.image.Circle findSec(int,java.util.List,int,java.util.List)>($i0, $r6, 0, $r4);

        r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: net.sourceforge.plantuml.svek.image.Circle lastSolution> = $r7;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: net.sourceforge.plantuml.svek.image.Circle lastSolution>;

        return $r2;
    }

    private net.sourceforge.plantuml.svek.image.Circle findSec(int, java.util.List, int, java.util.List)
    {
        net.sourceforge.plantuml.svek.image.Circle $r0, $r15, $r16, $r21, r24;
        int i0, i1, $i2, i3;
        java.util.List r1, r4;
        java.lang.Object $r2, $r5, $r9, $r11, $r13, $r17, $r19, $r22;
        java.awt.geom.Point2D $r3, $r6, $r10, $r12, $r14, $r18, $r20, $r23;
        boolean $z0;
        net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle r8;

        r8 := @this: net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle;

        i1 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        i0 := @parameter2: int;

        r4 := @parameter3: java.util.List;

        $r0 = new net.sourceforge.plantuml.svek.image.Circle;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.image.Circle: void <init>()>();

        r24 = $r0;

        if i0 != 1 goto label1;

        $r21 = new net.sourceforge.plantuml.svek.image.Circle;

        $r22 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r23 = (java.awt.geom.Point2D) $r22;

        specialinvoke $r21.<net.sourceforge.plantuml.svek.image.Circle: void <init>(java.awt.geom.Point2D)>($r23);

        r24 = $r21;

        goto label3;

     label1:
        if i0 != 2 goto label2;

        $r16 = new net.sourceforge.plantuml.svek.image.Circle;

        $r17 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r18 = (java.awt.geom.Point2D) $r17;

        $r19 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(1);

        $r20 = (java.awt.geom.Point2D) $r19;

        specialinvoke $r16.<net.sourceforge.plantuml.svek.image.Circle: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r18, $r20);

        r24 = $r16;

        goto label3;

     label2:
        if i0 != 3 goto label3;

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (java.awt.geom.Point2D) $r9;

        $r11 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(1);

        $r12 = (java.awt.geom.Point2D) $r11;

        $r13 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(2);

        $r14 = (java.awt.geom.Point2D) $r13;

        $r15 = staticinvoke <net.sourceforge.plantuml.svek.image.Circle: net.sourceforge.plantuml.svek.image.Circle getCircle(java.awt.geom.Point2D,java.awt.geom.Point2D,java.awt.geom.Point2D)>($r10, $r12, $r14);

        return $r15;

     label3:
        i3 = 0;

     label4:
        if i3 >= i1 goto label6;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r3 = (java.awt.geom.Point2D) $r2;

        $z0 = virtualinvoke r24.<net.sourceforge.plantuml.svek.image.Circle: boolean isOutside(java.awt.geom.Point2D)>($r3);

        if $z0 == 0 goto label5;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $r6 = (java.awt.geom.Point2D) $r5;

        interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, $r6);

        $i2 = i0 + 1;

        r24 = specialinvoke r8.<net.sourceforge.plantuml.svek.image.SmallestEnclosingCircle: net.sourceforge.plantuml.svek.image.Circle findSec(int,java.util.List,int,java.util.List)>(i3, r1, $i2, r4);

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return r24;
    }
}
