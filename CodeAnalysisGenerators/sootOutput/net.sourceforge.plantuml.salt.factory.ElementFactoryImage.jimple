public class net.sourceforge.plantuml.salt.factory.ElementFactoryImage extends java.lang.Object implements net.sourceforge.plantuml.salt.factory.ElementFactory
{
    private final net.sourceforge.plantuml.salt.DataSource dataSource;
    private final net.sourceforge.plantuml.salt.Dictionary dictionary;

    public void <init>(net.sourceforge.plantuml.salt.DataSource, net.sourceforge.plantuml.salt.Dictionary)
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryImage r0;
        net.sourceforge.plantuml.salt.DataSource r1;
        net.sourceforge.plantuml.salt.Dictionary r2;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryImage;

        r1 := @parameter0: net.sourceforge.plantuml.salt.DataSource;

        r2 := @parameter1: net.sourceforge.plantuml.salt.Dictionary;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: net.sourceforge.plantuml.salt.DataSource dataSource> = r1;

        r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: net.sourceforge.plantuml.salt.Dictionary dictionary> = r2;

        return;
    }

    public net.sourceforge.plantuml.salt.Terminated create()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryImage r0;
        boolean $z0, $z2;
        net.sourceforge.plantuml.salt.DataSource $r1, $r9, $r17, $r24;
        java.lang.Object $r2, $r4, $r10, $r18, $r20, $r26;
        net.sourceforge.plantuml.salt.Terminated $r3, r11, $r14, $r19, $r25;
        java.lang.String r5, r6, $r21, $r23, $r27;
        int $i0;
        java.util.ArrayList $r7;
        net.sourceforge.plantuml.salt.element.ElementImage $r12;
        net.sourceforge.plantuml.salt.Terminator $r15;
        net.sourceforge.plantuml.salt.Dictionary $r16;
        java.lang.IllegalStateException $r22;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryImage;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: boolean ready()>();

        if $z0 != 0 goto label1;

        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>()>();

        throw $r22;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        $r3 = (net.sourceforge.plantuml.salt.Terminated) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r5 = (java.lang.String) $r4;

        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 <= 2 goto label2;

        $r23 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(2);

        goto label3;

     label2:
        $r23 = null;

     label3:
        r6 = $r23;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label4:
        $r24 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r26 = virtualinvoke $r25.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        $r27 = (java.lang.String) $r26;

        $z2 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(">>");

        if $z2 != 0 goto label5;

        $r17 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        $r19 = (net.sourceforge.plantuml.salt.Terminated) $r18;

        $r20 = virtualinvoke $r19.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        $r21 = (java.lang.String) $r20;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label4;

     label5:
        $r9 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r11 = (net.sourceforge.plantuml.salt.Terminated) $r10;

        $r12 = new net.sourceforge.plantuml.salt.element.ElementImage;

        specialinvoke $r12.<net.sourceforge.plantuml.salt.element.ElementImage: void <init>(java.util.List)>($r7);

        if r6 == null goto label6;

        $r16 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: net.sourceforge.plantuml.salt.Dictionary dictionary>;

        virtualinvoke $r16.<net.sourceforge.plantuml.salt.Dictionary: void put(java.lang.String,net.sourceforge.plantuml.salt.element.Element)>(r6, $r12);

     label6:
        $r14 = new net.sourceforge.plantuml.salt.Terminated;

        $r15 = virtualinvoke r11.<net.sourceforge.plantuml.salt.Terminated: net.sourceforge.plantuml.salt.Terminator getTerminator()>();

        specialinvoke $r14.<net.sourceforge.plantuml.salt.Terminated: void <init>(java.lang.Object,net.sourceforge.plantuml.salt.Terminator)>($r12, $r15);

        return $r14;
    }

    public boolean ready()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryImage r0;
        net.sourceforge.plantuml.salt.DataSource $r1;
        net.sourceforge.plantuml.salt.Terminated $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0, $z1, $z2;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryImage;

        $r1 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryImage: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("<<");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean matches(java.lang.String)>("\\<\\<\\w+");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }
}
