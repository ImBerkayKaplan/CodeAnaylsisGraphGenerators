public final class h.ST_bezier extends smetana.core.UnsupportedStarStruct
{
    public smetana.core.CArray list;
    public int size;
    public int sflag;
    public int eflag;
    public final h.ST_pointf sp;
    public final h.ST_pointf ep;

    public void <init>()
    {
        h.ST_bezier r0;
        h.ST_pointf $r1, $r2;

        r0 := @this: h.ST_bezier;

        specialinvoke r0.<smetana.core.UnsupportedStarStruct: void <init>()>();

        $r1 = new h.ST_pointf;

        specialinvoke $r1.<h.ST_pointf: void <init>()>();

        r0.<h.ST_bezier: h.ST_pointf sp> = $r1;

        $r2 = new h.ST_pointf;

        specialinvoke $r2.<h.ST_pointf: void <init>()>();

        r0.<h.ST_bezier: h.ST_pointf ep> = $r2;

        return;
    }

    public void ___(smetana.core.__struct__)
    {
        smetana.core.__struct__ r0;
        h.ST_bezier r1, r2;
        smetana.core.CArray $r3;
        int $i0, $i1, $i2;
        h.ST_pointf $r4, $r5, $r6, $r7;

        r2 := @this: h.ST_bezier;

        r0 := @parameter0: smetana.core.__struct__;

        r1 = (h.ST_bezier) r0;

        $r3 = r1.<h.ST_bezier: smetana.core.CArray list>;

        r2.<h.ST_bezier: smetana.core.CArray list> = $r3;

        $i0 = r1.<h.ST_bezier: int size>;

        r2.<h.ST_bezier: int size> = $i0;

        $i1 = r1.<h.ST_bezier: int sflag>;

        r2.<h.ST_bezier: int sflag> = $i1;

        $i2 = r1.<h.ST_bezier: int eflag>;

        r2.<h.ST_bezier: int eflag> = $i2;

        $r5 = r2.<h.ST_bezier: h.ST_pointf sp>;

        $r4 = r1.<h.ST_bezier: h.ST_pointf sp>;

        virtualinvoke $r5.<h.ST_pointf: void ___(smetana.core.__struct__)>($r4);

        $r7 = r2.<h.ST_bezier: h.ST_pointf ep>;

        $r6 = r1.<h.ST_bezier: h.ST_pointf ep>;

        virtualinvoke $r7.<h.ST_pointf: void ___(smetana.core.__struct__)>($r6);

        return;
    }
}
