public final enum class net.sourceforge.plantuml.graphic.VerticalAlignment extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.graphic.VerticalAlignment TOP;
    public static final enum net.sourceforge.plantuml.graphic.VerticalAlignment CENTER;
    public static final enum net.sourceforge.plantuml.graphic.VerticalAlignment BOTTOM;
    private static final net.sourceforge.plantuml.graphic.VerticalAlignment[] $VALUES;

    public static net.sourceforge.plantuml.graphic.VerticalAlignment[] values()
    {
        net.sourceforge.plantuml.graphic.VerticalAlignment[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.graphic.VerticalAlignment[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.graphic.VerticalAlignment valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/graphic/VerticalAlignment;", r0);

        $r2 = (net.sourceforge.plantuml.graphic.VerticalAlignment) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.graphic.VerticalAlignment r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.graphic.VerticalAlignment;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static net.sourceforge.plantuml.graphic.VerticalAlignment fromString(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.VerticalAlignment $r0, $r3, $r5, $r6, $r7;
        java.lang.String $r1, r2, $r4;
        boolean $z0, $z1;

        r2 := @parameter0: java.lang.String;

        $r0 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment TOP>;

        $r1 = virtualinvoke $r0.<net.sourceforge.plantuml.graphic.VerticalAlignment: java.lang.String name()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $r7 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment TOP>;

        return $r7;

     label1:
        $r3 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment BOTTOM>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.VerticalAlignment: java.lang.String name()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        $r6 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment BOTTOM>;

        return $r6;

     label2:
        $r5 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment BOTTOM>;

        return $r5;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.graphic.VerticalAlignment $r0, $r1, $r2, $r4, $r5, $r6;
        net.sourceforge.plantuml.graphic.VerticalAlignment[] $r3;

        $r0 = new net.sourceforge.plantuml.graphic.VerticalAlignment;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.VerticalAlignment: void <init>(java.lang.String,int)>("TOP", 0);

        <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment TOP> = $r0;

        $r1 = new net.sourceforge.plantuml.graphic.VerticalAlignment;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.VerticalAlignment: void <init>(java.lang.String,int)>("CENTER", 1);

        <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment CENTER> = $r1;

        $r2 = new net.sourceforge.plantuml.graphic.VerticalAlignment;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.VerticalAlignment: void <init>(java.lang.String,int)>("BOTTOM", 2);

        <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment BOTTOM> = $r2;

        $r3 = newarray (net.sourceforge.plantuml.graphic.VerticalAlignment)[3];

        $r4 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment TOP>;

        $r3[0] = $r4;

        $r5 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment CENTER>;

        $r3[1] = $r5;

        $r6 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment BOTTOM>;

        $r3[2] = $r6;

        <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment[] $VALUES> = $r3;

        return;
    }
}
