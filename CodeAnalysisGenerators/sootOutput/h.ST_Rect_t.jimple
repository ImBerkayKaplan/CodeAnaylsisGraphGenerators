public final class h.ST_Rect_t extends smetana.core.UnsupportedStarStruct
{
    public final int[] boundary;

    public void <init>()
    {
        h.ST_Rect_t r0;
        int[] $r1;

        r0 := @this: h.ST_Rect_t;

        specialinvoke r0.<smetana.core.UnsupportedStarStruct: void <init>()>();

        $r1 = newarray (int)[4];

        r0.<h.ST_Rect_t: int[] boundary> = $r1;

        return;
    }

    public void ___(smetana.core.__struct__)
    {
        smetana.core.__struct__ r0;
        h.ST_Rect_t r1, r2;
        int[] $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3;

        r2 := @this: h.ST_Rect_t;

        r0 := @parameter0: smetana.core.__struct__;

        r1 = (h.ST_Rect_t) r0;

        $r4 = r2.<h.ST_Rect_t: int[] boundary>;

        $r3 = r1.<h.ST_Rect_t: int[] boundary>;

        $i0 = $r3[0];

        $r4[0] = $i0;

        $r6 = r2.<h.ST_Rect_t: int[] boundary>;

        $r5 = r1.<h.ST_Rect_t: int[] boundary>;

        $i1 = $r5[1];

        $r6[1] = $i1;

        $r8 = r2.<h.ST_Rect_t: int[] boundary>;

        $r7 = r1.<h.ST_Rect_t: int[] boundary>;

        $i2 = $r7[2];

        $r8[2] = $i2;

        $r10 = r2.<h.ST_Rect_t: int[] boundary>;

        $r9 = r1.<h.ST_Rect_t: int[] boundary>;

        $i3 = $r9[3];

        $r10[3] = $i3;

        return;
    }
}
