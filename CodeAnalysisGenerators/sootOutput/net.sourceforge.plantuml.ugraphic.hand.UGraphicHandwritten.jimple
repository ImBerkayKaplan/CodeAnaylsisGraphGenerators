public class net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten extends net.sourceforge.plantuml.graphic.UGraphicDelegator implements net.sourceforge.plantuml.ugraphic.UGraphic
{
    private final java.util.Random rnd;

    public void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        java.util.Random $r2;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        $r2 = new java.util.Random;

        specialinvoke $r2.<java.util.Random: void <init>(long)>(424242L);

        r0.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: java.util.Random rnd> = $r2;

        $z0 = r1 instanceof net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        if $z0 == 0 goto label1;

        $r3 = (net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg) r1;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void enlargeClip()>();

     label1:
        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.ugraphic.UShape r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;
        net.sourceforge.plantuml.ugraphic.UPath $r3;
        net.sourceforge.plantuml.posimo.DotPath $r4;
        net.sourceforge.plantuml.ugraphic.UEllipse $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6;
        net.sourceforge.plantuml.ugraphic.URectangle $r7;
        net.sourceforge.plantuml.ugraphic.ULine $r8;

        r1 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $z0 = r0 instanceof net.sourceforge.plantuml.ugraphic.ULine;

        if $z0 == 0 goto label1;

        $r8 = (net.sourceforge.plantuml.ugraphic.ULine) r0;

        specialinvoke r1.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: void drawHand(net.sourceforge.plantuml.ugraphic.ULine)>($r8);

        goto label7;

     label1:
        $z1 = r0 instanceof net.sourceforge.plantuml.ugraphic.URectangle;

        if $z1 == 0 goto label2;

        $r7 = (net.sourceforge.plantuml.ugraphic.URectangle) r0;

        specialinvoke r1.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: void drawHand(net.sourceforge.plantuml.ugraphic.URectangle)>($r7);

        goto label7;

     label2:
        $z2 = r0 instanceof net.sourceforge.plantuml.ugraphic.UPolygon;

        if $z2 == 0 goto label3;

        $r6 = (net.sourceforge.plantuml.ugraphic.UPolygon) r0;

        specialinvoke r1.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: void drawHand(net.sourceforge.plantuml.ugraphic.UPolygon)>($r6);

        goto label7;

     label3:
        $z3 = r0 instanceof net.sourceforge.plantuml.ugraphic.UEllipse;

        if $z3 == 0 goto label4;

        $r5 = (net.sourceforge.plantuml.ugraphic.UEllipse) r0;

        specialinvoke r1.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: void drawHand(net.sourceforge.plantuml.ugraphic.UEllipse)>($r5);

        goto label7;

     label4:
        $z4 = r0 instanceof net.sourceforge.plantuml.posimo.DotPath;

        if $z4 == 0 goto label5;

        $r4 = (net.sourceforge.plantuml.posimo.DotPath) r0;

        specialinvoke r1.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: void drawHand(net.sourceforge.plantuml.posimo.DotPath)>($r4);

        goto label7;

     label5:
        $z5 = r0 instanceof net.sourceforge.plantuml.ugraphic.UPath;

        if $z5 == 0 goto label6;

        $r3 = (net.sourceforge.plantuml.ugraphic.UPath) r0;

        specialinvoke r1.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: void drawHand(net.sourceforge.plantuml.ugraphic.UPath)>($r3);

        goto label7;

     label6:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

     label7:
        return;
    }

    private void drawHand(net.sourceforge.plantuml.ugraphic.UPath)
    {
        net.sourceforge.plantuml.ugraphic.hand.UPathHand $r0;
        net.sourceforge.plantuml.ugraphic.UPath r1, $r6;
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten r2;
        java.util.Random $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;

        r2 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UPath;

        $r0 = new net.sourceforge.plantuml.ugraphic.hand.UPathHand;

        $r3 = r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: java.util.Random rnd>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UPathHand: void <init>(net.sourceforge.plantuml.ugraphic.UPath,java.util.Random)>(r1, $r3);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UPathHand: net.sourceforge.plantuml.ugraphic.UPath getHanddrawn()>();

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }

    private void drawHand(net.sourceforge.plantuml.posimo.DotPath)
    {
        net.sourceforge.plantuml.ugraphic.hand.UDotPathHand $r0;
        net.sourceforge.plantuml.posimo.DotPath r1;
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten r2;
        java.util.Random $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;
        net.sourceforge.plantuml.ugraphic.UPath $r6;

        r2 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r1 := @parameter0: net.sourceforge.plantuml.posimo.DotPath;

        $r0 = new net.sourceforge.plantuml.ugraphic.hand.UDotPathHand;

        $r3 = r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: java.util.Random rnd>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UDotPathHand: void <init>(net.sourceforge.plantuml.posimo.DotPath,java.util.Random)>(r1, $r3);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UDotPathHand: net.sourceforge.plantuml.ugraphic.UPath getHanddrawn()>();

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }

    private void drawHand(net.sourceforge.plantuml.ugraphic.UPolygon)
    {
        net.sourceforge.plantuml.ugraphic.hand.UPolygonHand $r0;
        net.sourceforge.plantuml.ugraphic.UPolygon r1;
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten r2;
        java.util.Random $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;
        net.sourceforge.plantuml.ugraphic.Shadowable $r6;

        r2 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UPolygon;

        $r0 = new net.sourceforge.plantuml.ugraphic.hand.UPolygonHand;

        $r3 = r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: java.util.Random rnd>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UPolygonHand: void <init>(net.sourceforge.plantuml.ugraphic.UPolygon,java.util.Random)>(r1, $r3);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UPolygonHand: net.sourceforge.plantuml.ugraphic.Shadowable getHanddrawn()>();

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }

    private void drawHand(net.sourceforge.plantuml.ugraphic.URectangle)
    {
        net.sourceforge.plantuml.ugraphic.hand.URectangleHand $r0;
        net.sourceforge.plantuml.ugraphic.URectangle r1;
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten r2;
        java.util.Random $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;
        net.sourceforge.plantuml.ugraphic.Shadowable $r6;

        r2 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.URectangle;

        $r0 = new net.sourceforge.plantuml.ugraphic.hand.URectangleHand;

        $r3 = r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: java.util.Random rnd>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.URectangleHand: void <init>(net.sourceforge.plantuml.ugraphic.URectangle,java.util.Random)>(r1, $r3);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.URectangleHand: net.sourceforge.plantuml.ugraphic.Shadowable getHanddrawn()>();

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }

    private void drawHand(net.sourceforge.plantuml.ugraphic.ULine)
    {
        net.sourceforge.plantuml.ugraphic.hand.ULineHand $r0;
        net.sourceforge.plantuml.ugraphic.ULine r1;
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten r2;
        java.util.Random $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;
        net.sourceforge.plantuml.ugraphic.UPath $r6;

        r2 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ULine;

        $r0 = new net.sourceforge.plantuml.ugraphic.hand.ULineHand;

        $r3 = r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: java.util.Random rnd>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.ULineHand: void <init>(net.sourceforge.plantuml.ugraphic.ULine,java.util.Random)>(r1, $r3);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.ULineHand: net.sourceforge.plantuml.ugraphic.UPath getHanddrawn()>();

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }

    private void drawHand(net.sourceforge.plantuml.ugraphic.UEllipse)
    {
        net.sourceforge.plantuml.ugraphic.hand.UEllipseHand $r0;
        net.sourceforge.plantuml.ugraphic.UEllipse r1;
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten r2;
        java.util.Random $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;
        net.sourceforge.plantuml.ugraphic.Shadowable $r6;

        r2 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UEllipse;

        $r0 = new net.sourceforge.plantuml.ugraphic.hand.UEllipseHand;

        $r3 = r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: java.util.Random rnd>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UEllipseHand: void <init>(net.sourceforge.plantuml.ugraphic.UEllipse,java.util.Random)>(r1, $r3);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UEllipseHand: net.sourceforge.plantuml.ugraphic.Shadowable getHanddrawn()>();

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten $r0, r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2, $r4;
        net.sourceforge.plantuml.ugraphic.UChange r3;

        r1 := @this: net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $r0 = new net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.hand.UGraphicHandwritten: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>($r4);

        return $r0;
    }
}
