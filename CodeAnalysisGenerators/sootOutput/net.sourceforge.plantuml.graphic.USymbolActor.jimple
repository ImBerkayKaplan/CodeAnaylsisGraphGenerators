class net.sourceforge.plantuml.graphic.USymbolActor extends net.sourceforge.plantuml.graphic.USymbolSimpleAbstract
{
    private final net.sourceforge.plantuml.skin.ActorStyle actorStyle;

    public void <init>(net.sourceforge.plantuml.skin.ActorStyle)
    {
        net.sourceforge.plantuml.graphic.USymbolActor r0;
        net.sourceforge.plantuml.skin.ActorStyle r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolActor;

        r1 := @parameter0: net.sourceforge.plantuml.skin.ActorStyle;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolSimpleAbstract: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.USymbolActor: net.sourceforge.plantuml.skin.ActorStyle actorStyle> = r1;

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolActor r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolActor;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter ACTOR>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolActor r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolActor;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName actor>;

        return $r0;
    }

    protected net.sourceforge.plantuml.graphic.TextBlock getDrawing(net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.graphic.USymbolActor r0;
        net.sourceforge.plantuml.graphic.SymbolContext r1;
        net.sourceforge.plantuml.skin.ActorStyle $r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolActor;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.SymbolContext;

        $r2 = r0.<net.sourceforge.plantuml.graphic.USymbolActor: net.sourceforge.plantuml.skin.ActorStyle actorStyle>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.skin.ActorStyle: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.graphic.SymbolContext)>(r1);

        return $r3;
    }
}
