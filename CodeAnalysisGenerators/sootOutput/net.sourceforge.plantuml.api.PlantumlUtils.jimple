public class net.sourceforge.plantuml.api.PlantumlUtils extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.api.PlantumlUtils r0;

        r0 := @this: net.sourceforge.plantuml.api.PlantumlUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean hasCMapData(java.lang.String)
    {
        net.sourceforge.plantuml.SourceStringReader $r0, $r8;
        int $i0, $i1;
        java.lang.Object $r1;
        net.sourceforge.plantuml.BlockUml r2;
        net.sourceforge.plantuml.core.Diagram r3;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String r9, r11;
        java.util.List r10;

        r9 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.SourceStringReader;

        specialinvoke $r0.<net.sourceforge.plantuml.SourceStringReader: void <init>(java.lang.String)>(r9);

        r10 = virtualinvoke $r0.<net.sourceforge.plantuml.SourceStringReader: java.util.List getBlocks()>();

        $i0 = interfaceinvoke r10.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@startuml\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n@enduml");

        r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = new net.sourceforge.plantuml.SourceStringReader;

        specialinvoke $r8.<net.sourceforge.plantuml.SourceStringReader: void <init>(java.lang.String)>(r11);

        r10 = virtualinvoke $r8.<net.sourceforge.plantuml.SourceStringReader: java.util.List getBlocks()>();

        $i1 = interfaceinvoke r10.<java.util.List: int size()>();

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r1 = interfaceinvoke r10.<java.util.List: java.lang.Object get(int)>(0);

        r2 = (net.sourceforge.plantuml.BlockUml) $r1;

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.BlockUml: net.sourceforge.plantuml.core.Diagram getDiagram()>();

        $z0 = interfaceinvoke r3.<net.sourceforge.plantuml.core.Diagram: boolean hasUrl()>();

        return $z0;
    }
}
