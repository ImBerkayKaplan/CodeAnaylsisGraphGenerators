final enum class net.sourceforge.plantuml.oregon.MagicTable$Oc extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.oregon.MagicTable$Oc USED;
    public static final enum net.sourceforge.plantuml.oregon.MagicTable$Oc NEAR;
    private static final net.sourceforge.plantuml.oregon.MagicTable$Oc[] $VALUES;

    public static net.sourceforge.plantuml.oregon.MagicTable$Oc[] values()
    {
        net.sourceforge.plantuml.oregon.MagicTable$Oc[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.oregon.MagicTable$Oc: net.sourceforge.plantuml.oregon.MagicTable$Oc[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.oregon.MagicTable$Oc[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.oregon.MagicTable$Oc valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.oregon.MagicTable$Oc $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/oregon/MagicTable$Oc;", r0);

        $r2 = (net.sourceforge.plantuml.oregon.MagicTable$Oc) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.oregon.MagicTable$Oc r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.oregon.MagicTable$Oc;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.oregon.MagicTable$Oc $r0, $r1, $r3, $r4;
        net.sourceforge.plantuml.oregon.MagicTable$Oc[] $r2;

        $r0 = new net.sourceforge.plantuml.oregon.MagicTable$Oc;

        specialinvoke $r0.<net.sourceforge.plantuml.oregon.MagicTable$Oc: void <init>(java.lang.String,int)>("USED", 0);

        <net.sourceforge.plantuml.oregon.MagicTable$Oc: net.sourceforge.plantuml.oregon.MagicTable$Oc USED> = $r0;

        $r1 = new net.sourceforge.plantuml.oregon.MagicTable$Oc;

        specialinvoke $r1.<net.sourceforge.plantuml.oregon.MagicTable$Oc: void <init>(java.lang.String,int)>("NEAR", 1);

        <net.sourceforge.plantuml.oregon.MagicTable$Oc: net.sourceforge.plantuml.oregon.MagicTable$Oc NEAR> = $r1;

        $r2 = newarray (net.sourceforge.plantuml.oregon.MagicTable$Oc)[2];

        $r3 = <net.sourceforge.plantuml.oregon.MagicTable$Oc: net.sourceforge.plantuml.oregon.MagicTable$Oc USED>;

        $r2[0] = $r3;

        $r4 = <net.sourceforge.plantuml.oregon.MagicTable$Oc: net.sourceforge.plantuml.oregon.MagicTable$Oc NEAR>;

        $r2[1] = $r4;

        <net.sourceforge.plantuml.oregon.MagicTable$Oc: net.sourceforge.plantuml.oregon.MagicTable$Oc[] $VALUES> = $r2;

        return;
    }
}
