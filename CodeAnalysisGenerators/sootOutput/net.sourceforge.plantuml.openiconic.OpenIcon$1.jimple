class net.sourceforge.plantuml.openiconic.OpenIcon$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.ugraphic.color.HColor val$color;
    final double val$factor;
    final net.sourceforge.plantuml.openiconic.OpenIcon this$0;

    void <init>(net.sourceforge.plantuml.openiconic.OpenIcon, net.sourceforge.plantuml.ugraphic.color.HColor, double)
    {
        net.sourceforge.plantuml.openiconic.OpenIcon$1 r0;
        net.sourceforge.plantuml.openiconic.OpenIcon r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.openiconic.OpenIcon$1;

        r1 := @parameter0: net.sourceforge.plantuml.openiconic.OpenIcon;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter2: double;

        r0.<net.sourceforge.plantuml.openiconic.OpenIcon$1: net.sourceforge.plantuml.openiconic.OpenIcon this$0> = r1;

        r0.<net.sourceforge.plantuml.openiconic.OpenIcon$1: net.sourceforge.plantuml.ugraphic.color.HColor val$color> = r2;

        r0.<net.sourceforge.plantuml.openiconic.OpenIcon$1: double val$factor> = d0;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.openiconic.OpenIcon$1 r0;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r10;
        net.sourceforge.plantuml.ugraphic.UParam $r2, $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r5, r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r6;
        net.sourceforge.plantuml.openiconic.OpenIcon $r8;
        net.sourceforge.plantuml.openiconic.SvgPath $r9;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.openiconic.OpenIcon$1;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r7 = r0.<net.sourceforge.plantuml.openiconic.OpenIcon$1: net.sourceforge.plantuml.ugraphic.color.HColor val$color>;

        $z0 = r7 instanceof net.sourceforge.plantuml.ugraphic.color.HColorAutomaticLegacy;

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        if $r3 == null goto label1;

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $r6 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r5;

        r7 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColorSimple opposite()>();

     label1:
        $r8 = r0.<net.sourceforge.plantuml.openiconic.OpenIcon$1: net.sourceforge.plantuml.openiconic.OpenIcon this$0>;

        $r9 = staticinvoke <net.sourceforge.plantuml.openiconic.OpenIcon: net.sourceforge.plantuml.openiconic.SvgPath access$000(net.sourceforge.plantuml.openiconic.OpenIcon)>($r8);

        $r10 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r7);

        $d0 = r0.<net.sourceforge.plantuml.openiconic.OpenIcon$1: double val$factor>;

        virtualinvoke $r9.<net.sourceforge.plantuml.openiconic.SvgPath: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r10, $d0);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.openiconic.OpenIcon$1 r0;
        double $d0;
        net.sourceforge.plantuml.openiconic.OpenIcon $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.openiconic.OpenIcon$1;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.openiconic.OpenIcon$1: net.sourceforge.plantuml.openiconic.OpenIcon this$0>;

        $d0 = r0.<net.sourceforge.plantuml.openiconic.OpenIcon$1: double val$factor>;

        $r2 = staticinvoke <net.sourceforge.plantuml.openiconic.OpenIcon: net.sourceforge.plantuml.awt.geom.Dimension2D access$100(net.sourceforge.plantuml.openiconic.OpenIcon,double)>($r1, $d0);

        return $r2;
    }
}
