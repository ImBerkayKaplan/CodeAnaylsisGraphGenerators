class net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1 extends java.lang.Object implements net.sourceforge.plantuml.sequencediagram.graphic.Lazy
{
    final net.sourceforge.plantuml.sequencediagram.GroupingLeaf val$m;
    final net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer this$0;

    void <init>(net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer, net.sourceforge.plantuml.sequencediagram.GroupingLeaf)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer r1;
        net.sourceforge.plantuml.sequencediagram.GroupingLeaf r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer;

        r2 := @parameter1: net.sourceforge.plantuml.sequencediagram.GroupingLeaf;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer this$0> = r1;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1: net.sourceforge.plantuml.sequencediagram.GroupingLeaf val$m> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double getNow()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer $r1;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r2;
        net.sourceforge.plantuml.sequencediagram.GroupingLeaf $r3;
        net.sourceforge.plantuml.sequencediagram.Grouping $r4;
        net.sourceforge.plantuml.sequencediagram.graphic.GraphicalElement r5;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet access$000(net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer)>($r1);

        $r3 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer$1: net.sourceforge.plantuml.sequencediagram.GroupingLeaf val$m>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.GroupingLeaf: net.sourceforge.plantuml.sequencediagram.Grouping getJustAfter()>();

        r5 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.sequencediagram.graphic.GraphicalElement getEvent(net.sourceforge.plantuml.sequencediagram.Event)>($r4);

        if r5 != null goto label1;

        return 0.0;

     label1:
        $d0 = virtualinvoke r5.<net.sourceforge.plantuml.sequencediagram.graphic.GraphicalElement: double getStartingY()>();

        return $d0;
    }
}
