public class net.sourceforge.plantuml.ugraphic.color.ColorMapperTransparentWrapper extends net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper implements net.sourceforge.plantuml.ugraphic.color.ColorMapper
{
    private final net.sourceforge.plantuml.ugraphic.color.ColorMapper mapper;

    public void <init>(net.sourceforge.plantuml.ugraphic.color.ColorMapper)
    {
        net.sourceforge.plantuml.ugraphic.color.ColorMapperTransparentWrapper r0;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r1, $r3;
        java.lang.Object $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.ColorMapperTransparentWrapper;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper: void <init>()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.ugraphic.color.ColorMapper) $r2;

        r0.<net.sourceforge.plantuml.ugraphic.color.ColorMapperTransparentWrapper: net.sourceforge.plantuml.ugraphic.color.ColorMapper mapper> = $r3;

        return;
    }

    public java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0, r5;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperTransparentWrapper r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper $r2, $r6;
        java.awt.Color $r3, $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorBackground $r4;

        r1 := @this: net.sourceforge.plantuml.ugraphic.color.ColorMapperTransparentWrapper;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof net.sourceforge.plantuml.ugraphic.color.HColorBackground;

        if $z0 == 0 goto label2;

        $r4 = (net.sourceforge.plantuml.ugraphic.color.HColorBackground) r0;

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorBackground: net.sourceforge.plantuml.ugraphic.color.HColor getBack()>();

        $r6 = r1.<net.sourceforge.plantuml.ugraphic.color.ColorMapperTransparentWrapper: net.sourceforge.plantuml.ugraphic.color.ColorMapper mapper>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r5);

        return $r7;

     label2:
        $r2 = r1.<net.sourceforge.plantuml.ugraphic.color.ColorMapperTransparentWrapper: net.sourceforge.plantuml.ugraphic.color.ColorMapper mapper>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r0);

        return $r3;
    }
}
