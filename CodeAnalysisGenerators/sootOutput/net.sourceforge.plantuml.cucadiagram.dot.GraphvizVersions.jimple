public class net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions extends java.lang.Object
{
    private static final net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions singleton;
    private final java.util.Map map;

    private void <init>()
    {
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions: java.util.Map map> = $r1;

        return;
    }

    public static net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions getInstance()
    {
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions $r0;

        $r0 = <net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions: net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions singleton>;

        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersion getVersion(java.io.File)
    {
        java.io.File r0;
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions r1;
        java.util.Map $r2, $r5;
        java.lang.Object $r3;
        java.lang.String $r4;
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersion r7, r8;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions;

        r0 := @parameter0: java.io.File;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r7 = (net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersion) $r3;

        if r7 == null goto label2;

        return r7;

     label2:
        $r4 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        r8 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions: net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersion checkVersionSlow(java.lang.String)>($r4);

        $r5 = r1.<net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions: java.util.Map map>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r8);

        return r8;
    }

    static net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersion checkVersionSlow(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersionFinder $r0;
        java.io.File $r1;
        java.lang.String r2;
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersion $r4;

        r2 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersionFinder;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersionFinder: void <init>(java.io.File)>($r1);

        $r4 = virtualinvoke $r0.<net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersionFinder: net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersion getVersion()>();

        return $r4;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions $r0;

        $r0 = new net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions: void <init>()>();

        <net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions: net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersions singleton> = $r0;

        return;
    }
}
