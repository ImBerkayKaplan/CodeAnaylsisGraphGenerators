public class net.sourceforge.plantuml.creole.atom.AtomWithMargin extends net.sourceforge.plantuml.creole.atom.AbstractAtom implements net.sourceforge.plantuml.creole.atom.Atom
{
    private final double marginY1;
    private final double marginY2;
    private final net.sourceforge.plantuml.creole.atom.Atom atom;

    public void <init>(net.sourceforge.plantuml.creole.atom.Atom, double, double)
    {
        net.sourceforge.plantuml.creole.atom.AtomWithMargin r0;
        net.sourceforge.plantuml.creole.atom.Atom r1;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomWithMargin;

        r1 := @parameter0: net.sourceforge.plantuml.creole.atom.Atom;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<net.sourceforge.plantuml.creole.atom.AbstractAtom: void <init>()>();

        r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: net.sourceforge.plantuml.creole.atom.Atom atom> = r1;

        r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: double marginY1> = d0;

        r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: double marginY2> = d1;

        return;
    }

    public java.util.List splitInTwo(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.creole.atom.AtomWithMargin r2, $r10;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        double d0, d1, d2;
        net.sourceforge.plantuml.creole.atom.Atom $r4, r9;
        java.util.List r5, $r7;
        java.util.Iterator r6;
        boolean $z0;
        java.lang.Object $r8;
        int $i0, $i1, $i2, $i3;

        r2 := @this: net.sourceforge.plantuml.creole.atom.AtomWithMargin;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r4 = r2.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: net.sourceforge.plantuml.creole.atom.Atom atom>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.creole.atom.Atom: java.util.List splitInTwo(net.sourceforge.plantuml.graphic.StringBounder,double)>(r3, d0);

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (net.sourceforge.plantuml.creole.atom.Atom) $r8;

        d1 = r2.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: double marginY1>;

        d2 = r2.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: double marginY2>;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i0 != 2 goto label2;

        $i2 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i2 != 0 goto label2;

        d2 = 0.0;

     label2:
        $i3 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i3 != 2 goto label3;

        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i1 != 1 goto label3;

        d1 = 0.0;

     label3:
        $r10 = new net.sourceforge.plantuml.creole.atom.AtomWithMargin;

        specialinvoke $r10.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: void <init>(net.sourceforge.plantuml.creole.atom.Atom,double,double)>(r9, d1, d2);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label4:
        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r7;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.atom.AtomWithMargin r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.creole.atom.Atom $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3, $r4;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomWithMargin;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: net.sourceforge.plantuml.creole.atom.Atom atom>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.creole.atom.Atom: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: double marginY1>;

        $d0 = r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: double marginY2>;

        $d2 = $d1 + $d0;

        $r4 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r3, 0.0, $d2);

        return $r4;
    }

    public double getStartingAltitude(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.atom.AtomWithMargin r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.creole.atom.Atom $r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomWithMargin;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: net.sourceforge.plantuml.creole.atom.Atom atom>;

        $d0 = interfaceinvoke $r2.<net.sourceforge.plantuml.creole.atom.Atom: double getStartingAltitude(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.creole.atom.AtomWithMargin r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r4;
        double $d0;
        net.sourceforge.plantuml.creole.atom.Atom $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomWithMargin;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: net.sourceforge.plantuml.creole.atom.Atom atom>;

        $d0 = r0.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: double marginY1>;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        interfaceinvoke $r2.<net.sourceforge.plantuml.creole.atom.Atom: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r4);

        return;
    }
}
