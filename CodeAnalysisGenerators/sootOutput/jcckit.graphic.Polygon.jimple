public class jcckit.graphic.Polygon extends jcckit.graphic.BasicGraphicalElement
{
    private final java.util.Vector _points;
    private final boolean _closed;

    public void <init>(jcckit.graphic.GraphicAttributes, boolean)
    {
        jcckit.graphic.Polygon r0;
        jcckit.graphic.GraphicAttributes r1;
        java.util.Vector $r2;
        boolean z0;

        r0 := @this: jcckit.graphic.Polygon;

        r1 := @parameter0: jcckit.graphic.GraphicAttributes;

        z0 := @parameter1: boolean;

        specialinvoke r0.<jcckit.graphic.BasicGraphicalElement: void <init>(jcckit.graphic.GraphicAttributes)>(r1);

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<jcckit.graphic.Polygon: java.util.Vector _points> = $r2;

        r0.<jcckit.graphic.Polygon: boolean _closed> = z0;

        return;
    }

    public boolean isClosed()
    {
        jcckit.graphic.Polygon r0;
        boolean $z0;

        r0 := @this: jcckit.graphic.Polygon;

        $z0 = r0.<jcckit.graphic.Polygon: boolean _closed>;

        return $z0;
    }

    public int getNumberOfPoints()
    {
        jcckit.graphic.Polygon r0;
        java.util.Vector $r1;
        int $i0;

        r0 := @this: jcckit.graphic.Polygon;

        $r1 = r0.<jcckit.graphic.Polygon: java.util.Vector _points>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public jcckit.graphic.GraphPoint getPoint(int)
    {
        jcckit.graphic.Polygon r0;
        int i0;
        java.util.Vector $r1;
        java.lang.Object $r2;
        jcckit.graphic.GraphPoint $r3;

        r0 := @this: jcckit.graphic.Polygon;

        i0 := @parameter0: int;

        $r1 = r0.<jcckit.graphic.Polygon: java.util.Vector _points>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r3 = (jcckit.graphic.GraphPoint) $r2;

        return $r3;
    }

    public void addPoint(jcckit.graphic.GraphPoint)
    {
        jcckit.graphic.Polygon r0;
        jcckit.graphic.GraphPoint r1;
        java.util.Vector $r2;

        r0 := @this: jcckit.graphic.Polygon;

        r1 := @parameter0: jcckit.graphic.GraphPoint;

        $r2 = r0.<jcckit.graphic.Polygon: java.util.Vector _points>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        return;
    }

    public void removeAllPoints()
    {
        jcckit.graphic.Polygon r0;
        java.util.Vector $r1;

        r0 := @this: jcckit.graphic.Polygon;

        $r1 = r0.<jcckit.graphic.Polygon: java.util.Vector _points>;

        virtualinvoke $r1.<java.util.Vector: void removeAllElements()>();

        return;
    }

    public void replacePointAt(int, jcckit.graphic.GraphPoint)
    {
        jcckit.graphic.Polygon r0;
        jcckit.graphic.GraphPoint r1;
        int i0;
        java.util.Vector $r2;

        r0 := @this: jcckit.graphic.Polygon;

        i0 := @parameter0: int;

        r1 := @parameter1: jcckit.graphic.GraphPoint;

        $r2 = r0.<jcckit.graphic.Polygon: java.util.Vector _points>;

        virtualinvoke $r2.<java.util.Vector: void setElementAt(java.lang.Object,int)>(r1, i0);

        return;
    }

    public void renderWith(jcckit.graphic.Renderer)
    {
        jcckit.graphic.Renderer r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        jcckit.graphic.Polygon r6;
        jcckit.graphic.PolygonRenderer $r7;

        r6 := @this: jcckit.graphic.Polygon;

        r0 := @parameter0: jcckit.graphic.Renderer;

        $z0 = r0 instanceof jcckit.graphic.PolygonRenderer;

        if $z0 == 0 goto label1;

        $r7 = (jcckit.graphic.PolygonRenderer) r0;

        interfaceinvoke $r7.<jcckit.graphic.PolygonRenderer: void render(jcckit.graphic.Polygon)>(r6);

        goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not implements PolygonRenderer.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        return;
    }
}
