class ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf extends java.lang.Object
{
    private java.util.List[] fScanbuf;
    private int fLineMin;
    private int fLineMax;
    private final int fLines;
    private final int fPoints;
    private boolean fScanBufsAdded;

    public void <init>(int, int)
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf r0;
        int i0, i1, $i2, $i3, i4;
        java.util.ArrayList[] $r1;
        java.util.List[] $r2, $r4;
        java.util.ArrayList $r3;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLines> = i0;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fPoints> = i1;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMin> = 2147483647;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMax> = -2147483648;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: boolean fScanBufsAdded> = 0;

        $i2 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLines>;

        $r1 = newarray (java.util.ArrayList)[$i2];

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: java.util.List[] fScanbuf> = $r1;

        i4 = 0;

     label1:
        $r2 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: java.util.List[] fScanbuf>;

        $i3 = lengthof $r2;

        if i4 >= $i3 goto label2;

        $r4 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: java.util.List[] fScanbuf>;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4[i4] = $r3;

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public void addLine(double, double, double, double)
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9, $d10, $d11, d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23;
        byte $b0, $b1, $b6;
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf r0;
        int $i2, $i3, $i4, $i5, i7, i8, i9;
        java.util.List[] $r1;
        java.util.List $r2;
        java.lang.Double $r3;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf;

        d9 := @parameter0: double;

        d0 := @parameter1: double;

        d8 := @parameter2: double;

        d1 := @parameter3: double;

        $b0 = d0 cmpg d1;

        if $b0 >= 0 goto label1;

        $d17 = d0 - 0.5;

        $d18 = staticinvoke <java.lang.Math: double ceil(double)>($d17);

        i7 = (int) $d18;

        $d19 = d1 - 0.5;

        $d20 = staticinvoke <java.lang.Math: double floor(double)>($d19);

        i8 = (int) $d20;

        $d22 = (double) i8;

        $d21 = d1 - 0.5;

        $b6 = $d22 cmpl $d21;

        if $b6 != 0 goto label2;

        i8 = i8 + -1;

        goto label2;

     label1:
        $d2 = d1 - 0.5;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        i7 = (int) $d3;

        $d4 = d0 - 0.5;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4);

        i8 = (int) $d5;

        $d7 = (double) i8;

        $d6 = d0 - 0.5;

        $b1 = $d7 cmpl $d6;

        if $b1 != 0 goto label2;

        i8 = i8 + -1;

     label2:
        if i7 >= 0 goto label3;

        i7 = 0;

     label3:
        $i2 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLines>;

        if i8 < $i2 goto label4;

        $i5 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLines>;

        i8 = $i5 - 1;

     label4:
        if i7 <= i8 goto label5;

        return;

     label5:
        $i3 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMin>;

        if i7 >= $i3 goto label6;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMin> = i7;

     label6:
        $i4 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMax>;

        if i8 <= $i4 goto label7;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMax> = i8;

     label7:
        $d11 = d8 - d9;

        $d10 = d1 - d0;

        d12 = $d11 / $d10;

        $d13 = (double) i7;

        $d14 = $d13 + 0.5;

        $d15 = $d14 - d0;

        $d16 = d12 * $d15;

        d23 = d9 + $d16;

        i9 = i7;

     label8:
        if i9 > i8 goto label9;

        $r1 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: java.util.List[] fScanbuf>;

        $r2 = $r1[i9];

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d23);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        d23 = d23 + d12;

        i9 = i9 + 1;

        goto label8;

     label9:
        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: boolean fScanBufsAdded> = 1;

        return;
    }

    public boolean containsPoints()
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf r0;
        boolean $z0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf;

        $z0 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: boolean fScanBufsAdded>;

        return $z0;
    }

    public java.util.List getScanbits(int)
    {
        java.util.ArrayList $r0;
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf r2;
        int $i0, $i1, $i2, $i3, i4, $i5, i6, i7, i8, i9;
        java.util.List[] $r3;
        java.lang.Double[] $r4, r7;
        java.util.List $r5;
        java.lang.Object[] $r6;
        ext.plantuml.com.ctreber.aclib.sort.QuickSort $r8;
        java.lang.Double $r10, $r11;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit $r12;

        r2 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf;

        i4 := @parameter0: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i6 = r2.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMin>;

     label1:
        $i0 = r2.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMax>;

        if i6 > $i0 goto label7;

        $r3 = r2.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: java.util.List[] fScanbuf>;

        $r5 = $r3[i6];

        $r4 = newarray (java.lang.Double)[0];

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r7 = (java.lang.Double[]) $r6;

        $r8 = new ext.plantuml.com.ctreber.aclib.sort.QuickSort;

        specialinvoke $r8.<ext.plantuml.com.ctreber.aclib.sort.QuickSort: void <init>()>();

        virtualinvoke $r8.<ext.plantuml.com.ctreber.aclib.sort.CTSort: void sort(java.lang.Object[])>(r7);

        i7 = 0;

     label2:
        $i1 = lengthof r7;

        if i7 >= $i1 goto label6;

        $r10 = r7[i7];

        $d0 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        $d1 = $d0 - 0.5;

        $d2 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        i8 = (int) $d2;

        $i2 = i7 + 1;

        $r11 = r7[$i2];

        $d3 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        $d4 = $d3 - 0.5;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d4);

        i9 = (int) $d5;

        if i8 >= 0 goto label3;

        i8 = 0;

     label3:
        $i3 = r2.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fPoints>;

        if i9 < $i3 goto label4;

        $i5 = r2.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fPoints>;

        i9 = $i5 - 1;

     label4:
        if i8 > i9 goto label5;

        $r12 = new ext.plantuml.com.ctreber.acearth.scanbit.ScanBit;

        specialinvoke $r12.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: void <init>(int,int,int,int)>(i6, i8, i9, i4);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

     label5:
        i7 = i7 + 2;

        goto label2;

     label6:
        i6 = i6 + 1;

        goto label1;

     label7:
        return $r0;
    }

    public int getYMax()
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMax>;

        return $i0;
    }

    public int getYMin()
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBuf: int fLineMin>;

        return $i0;
    }
}
