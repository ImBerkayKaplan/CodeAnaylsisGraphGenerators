public final enum class net.sourceforge.plantuml.UmlDiagramType extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.UmlDiagramType SEQUENCE;
    public static final enum net.sourceforge.plantuml.UmlDiagramType STATE;
    public static final enum net.sourceforge.plantuml.UmlDiagramType CLASS;
    public static final enum net.sourceforge.plantuml.UmlDiagramType OBJECT;
    public static final enum net.sourceforge.plantuml.UmlDiagramType ACTIVITY;
    public static final enum net.sourceforge.plantuml.UmlDiagramType DESCRIPTION;
    public static final enum net.sourceforge.plantuml.UmlDiagramType COMPOSITE;
    public static final enum net.sourceforge.plantuml.UmlDiagramType FLOW;
    public static final enum net.sourceforge.plantuml.UmlDiagramType TIMING;
    public static final enum net.sourceforge.plantuml.UmlDiagramType BPM;
    public static final enum net.sourceforge.plantuml.UmlDiagramType NWDIAG;
    public static final enum net.sourceforge.plantuml.UmlDiagramType MINDMAP;
    public static final enum net.sourceforge.plantuml.UmlDiagramType WBS;
    public static final enum net.sourceforge.plantuml.UmlDiagramType WIRE;
    public static final enum net.sourceforge.plantuml.UmlDiagramType HELP;
    public static final enum net.sourceforge.plantuml.UmlDiagramType GANTT;
    public static final enum net.sourceforge.plantuml.UmlDiagramType SALT;
    public static final enum net.sourceforge.plantuml.UmlDiagramType JSON;
    public static final enum net.sourceforge.plantuml.UmlDiagramType GIT;
    public static final enum net.sourceforge.plantuml.UmlDiagramType BOARD;
    public static final enum net.sourceforge.plantuml.UmlDiagramType YAML;
    public static final enum net.sourceforge.plantuml.UmlDiagramType HCL;
    private static final net.sourceforge.plantuml.UmlDiagramType[] $VALUES;

    public static net.sourceforge.plantuml.UmlDiagramType[] values()
    {
        net.sourceforge.plantuml.UmlDiagramType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.UmlDiagramType[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.UmlDiagramType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.UmlDiagramType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/UmlDiagramType;", r0);

        $r2 = (net.sourceforge.plantuml.UmlDiagramType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.UmlDiagramType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.UmlDiagramType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public net.sourceforge.plantuml.style.SName getStyleName()
    {
        net.sourceforge.plantuml.UmlDiagramType r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16;
        net.sourceforge.plantuml.style.SName $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;

        r0 := @this: net.sourceforge.plantuml.UmlDiagramType;

        $r1 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType SEQUENCE>;

        if r0 != $r1 goto label01;

        $r33 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        return $r33;

     label01:
        $r2 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType STATE>;

        if r0 != $r2 goto label02;

        $r32 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stateDiagram>;

        return $r32;

     label02:
        $r3 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType CLASS>;

        if r0 != $r3 goto label03;

        $r31 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName classDiagram>;

        return $r31;

     label03:
        $r4 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType OBJECT>;

        if r0 != $r4 goto label04;

        $r30 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName objectDiagram>;

        return $r30;

     label04:
        $r5 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType ACTIVITY>;

        if r0 != $r5 goto label05;

        $r29 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        return $r29;

     label05:
        $r6 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType DESCRIPTION>;

        if r0 != $r6 goto label06;

        $r28 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName componentDiagram>;

        return $r28;

     label06:
        $r7 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType COMPOSITE>;

        if r0 != $r7 goto label07;

        $r27 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName componentDiagram>;

        return $r27;

     label07:
        $r8 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType MINDMAP>;

        if r0 != $r8 goto label08;

        $r26 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName mindmapDiagram>;

        return $r26;

     label08:
        $r9 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType WBS>;

        if r0 != $r9 goto label09;

        $r25 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName wbsDiagram>;

        return $r25;

     label09:
        $r10 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType GANTT>;

        if r0 != $r10 goto label10;

        $r24 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName ganttDiagram>;

        return $r24;

     label10:
        $r11 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType SALT>;

        if r0 != $r11 goto label11;

        $r23 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName saltDiagram>;

        return $r23;

     label11:
        $r12 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType YAML>;

        if r0 != $r12 goto label12;

        $r22 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName yamlDiagram>;

        return $r22;

     label12:
        $r13 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType HCL>;

        if r0 != $r13 goto label13;

        $r21 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName yamlDiagram>;

        return $r21;

     label13:
        $r14 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType JSON>;

        if r0 != $r14 goto label14;

        $r20 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName jsonDiagram>;

        return $r20;

     label14:
        $r15 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType TIMING>;

        if r0 != $r15 goto label15;

        $r19 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timingDiagram>;

        return $r19;

     label15:
        $r16 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType NWDIAG>;

        if r0 != $r16 goto label16;

        $r18 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName nwdiagDiagram>;

        return $r18;

     label16:
        $r17 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        return $r17;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.UmlDiagramType $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44;
        net.sourceforge.plantuml.UmlDiagramType[] $r22;

        $r0 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r0.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("SEQUENCE", 0);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType SEQUENCE> = $r0;

        $r1 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r1.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("STATE", 1);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType STATE> = $r1;

        $r2 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r2.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("CLASS", 2);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType CLASS> = $r2;

        $r3 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r3.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("OBJECT", 3);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType OBJECT> = $r3;

        $r4 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r4.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("ACTIVITY", 4);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType ACTIVITY> = $r4;

        $r5 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r5.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("DESCRIPTION", 5);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType DESCRIPTION> = $r5;

        $r6 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r6.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("COMPOSITE", 6);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType COMPOSITE> = $r6;

        $r7 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r7.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("FLOW", 7);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType FLOW> = $r7;

        $r8 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r8.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("TIMING", 8);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType TIMING> = $r8;

        $r9 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r9.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("BPM", 9);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType BPM> = $r9;

        $r10 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r10.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("NWDIAG", 10);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType NWDIAG> = $r10;

        $r11 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r11.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("MINDMAP", 11);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType MINDMAP> = $r11;

        $r12 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r12.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("WBS", 12);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType WBS> = $r12;

        $r13 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r13.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("WIRE", 13);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType WIRE> = $r13;

        $r14 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r14.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("HELP", 14);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType HELP> = $r14;

        $r15 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r15.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("GANTT", 15);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType GANTT> = $r15;

        $r16 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r16.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("SALT", 16);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType SALT> = $r16;

        $r17 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r17.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("JSON", 17);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType JSON> = $r17;

        $r18 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r18.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("GIT", 18);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType GIT> = $r18;

        $r19 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r19.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("BOARD", 19);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType BOARD> = $r19;

        $r20 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r20.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("YAML", 20);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType YAML> = $r20;

        $r21 = new net.sourceforge.plantuml.UmlDiagramType;

        specialinvoke $r21.<net.sourceforge.plantuml.UmlDiagramType: void <init>(java.lang.String,int)>("HCL", 21);

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType HCL> = $r21;

        $r22 = newarray (net.sourceforge.plantuml.UmlDiagramType)[22];

        $r23 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType SEQUENCE>;

        $r22[0] = $r23;

        $r24 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType STATE>;

        $r22[1] = $r24;

        $r25 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType CLASS>;

        $r22[2] = $r25;

        $r26 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType OBJECT>;

        $r22[3] = $r26;

        $r27 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType ACTIVITY>;

        $r22[4] = $r27;

        $r28 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType DESCRIPTION>;

        $r22[5] = $r28;

        $r29 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType COMPOSITE>;

        $r22[6] = $r29;

        $r30 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType FLOW>;

        $r22[7] = $r30;

        $r31 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType TIMING>;

        $r22[8] = $r31;

        $r32 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType BPM>;

        $r22[9] = $r32;

        $r33 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType NWDIAG>;

        $r22[10] = $r33;

        $r34 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType MINDMAP>;

        $r22[11] = $r34;

        $r35 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType WBS>;

        $r22[12] = $r35;

        $r36 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType WIRE>;

        $r22[13] = $r36;

        $r37 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType HELP>;

        $r22[14] = $r37;

        $r38 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType GANTT>;

        $r22[15] = $r38;

        $r39 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType SALT>;

        $r22[16] = $r39;

        $r40 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType JSON>;

        $r22[17] = $r40;

        $r41 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType GIT>;

        $r22[18] = $r41;

        $r42 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType BOARD>;

        $r22[19] = $r42;

        $r43 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType YAML>;

        $r22[20] = $r43;

        $r44 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType HCL>;

        $r22[21] = $r44;

        <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType[] $VALUES> = $r22;

        return;
    }
}
