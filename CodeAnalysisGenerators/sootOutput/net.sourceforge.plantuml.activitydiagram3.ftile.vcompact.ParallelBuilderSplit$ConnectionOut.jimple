class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection implements net.sourceforge.plantuml.activitydiagram3.ftile.ConnectionTranslatable
{
    private final double x;
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    private final double height;
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private final net.sourceforge.plantuml.ugraphic.UTranslate translate0;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double, net.sourceforge.plantuml.graphic.Rainbow, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, r3;
        net.sourceforge.plantuml.ugraphic.UTranslate r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5;
        net.sourceforge.plantuml.cucadiagram.Display $r6;
        double d0, d1;
        net.sourceforge.plantuml.graphic.Rainbow r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r2 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter4: double;

        r7 := @parameter5: net.sourceforge.plantuml.graphic.Rainbow;

        d1 := @parameter6: double;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.ugraphic.UTranslate translate0> = r4;

        $r5 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label> = $r6;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: double x> = d0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r7;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: double height> = d1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut r0;
        double $d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, $r12, $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit $r3, $r6, $r18;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ISkinParam $r7;
        net.sourceforge.plantuml.graphic.Rainbow $r8;
        net.sourceforge.plantuml.ugraphic.UPolygon $r9;
        net.sourceforge.plantuml.cucadiagram.Display $r10, $r17;
        java.awt.geom.Point2D$Double $r11, $r14;
        java.awt.geom.Point2D r13, r16;
        net.sourceforge.plantuml.graphic.TextBlock $r19;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r20;
        net.sourceforge.plantuml.ugraphic.UGraphic r21, r22;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r23;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut;

        r21 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: double x>;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        r22 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit this$0>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r23 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r7, $r8, $r9);

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label>;

        $z1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r10);

        if $z1 != 0 goto label2;

        $r18 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit this$0>;

        $r17 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r19 = virtualinvoke $r18.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>($r17);

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r23 = virtualinvoke r23.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r19, $r20);

     label2:
        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.ugraphic.UTranslate translate0>;

        $r11 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        specialinvoke $r11.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d2);

        r13 = virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r11);

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.ugraphic.UTranslate translate0>;

        $r14 = new java.awt.geom.Point2D$Double;

        $d3 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: double height>;

        specialinvoke $r14.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, $d4);

        r16 = virtualinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r14);

        virtualinvoke r23.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r13);

        virtualinvoke r23.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r16);

        interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r23);

        return;
    }

    public void drawTranslate(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, $r7, $r10, r17, r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit $r3, $r12, $r22;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r5;
        boolean $z0, $z1;
        java.awt.geom.Point2D$Double $r6, $r9;
        java.awt.geom.Point2D r8, r11, r18, r20;
        net.sourceforge.plantuml.ISkinParam $r13;
        net.sourceforge.plantuml.graphic.Rainbow $r14;
        net.sourceforge.plantuml.ugraphic.UPolygon $r15;
        net.sourceforge.plantuml.cucadiagram.Display $r16, $r21;
        net.sourceforge.plantuml.graphic.TextBlock $r23;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r24;
        net.sourceforge.plantuml.ugraphic.UGraphic r25, r26;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r27;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut;

        r25 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r17 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r19 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: double x>;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        r26 = interfaceinvoke r25.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.ugraphic.UTranslate translate0>;

        $r6 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d2);

        r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r6);

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.ugraphic.UTranslate translate0>;

        $r9 = new java.awt.geom.Point2D$Double;

        $d3 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: double height>;

        specialinvoke $r9.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, $d4);

        r11 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r9);

        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit this$0>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r14 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r15 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r27 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r13, $r14, $r15);

        $r16 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label>;

        $z1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r16);

        if $z1 != 0 goto label2;

        $r22 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit this$0>;

        $r21 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r23 = virtualinvoke $r22.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>($r21);

        $r24 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderSplit$ConnectionOut: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r27 = virtualinvoke r27.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r23, $r24);

     label2:
        r18 = virtualinvoke r17.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r8);

        r20 = virtualinvoke r19.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r11);

        $d5 = virtualinvoke r20.<java.awt.geom.Point2D: double getY()>();

        d6 = $d5 - 14.0;

        virtualinvoke r27.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r18);

        $d7 = virtualinvoke r18.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r27.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d7, d6);

        $d8 = virtualinvoke r20.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r27.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d8, d6);

        virtualinvoke r27.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r20);

        interfaceinvoke r26.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r27);

        return;
    }
}
