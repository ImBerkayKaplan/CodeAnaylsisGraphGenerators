public class net.sourceforge.plantuml.sudoku.GraphicsSudoku extends java.lang.Object
{
    private final net.sourceforge.plantuml.sudoku.ISudoku sudoku;
    private final net.sourceforge.plantuml.ugraphic.UFont numberFont;
    private final net.sourceforge.plantuml.ugraphic.UFont font;
    private final int xOffset;
    private final int yOffset;
    private final int cellWidth;
    private final int cellHeight;
    private final int numberxOffset;
    private final int numberyOffset;
    private final int textTotalHeight;
    private final int boldWidth;
    private final int sudoHeight;
    private final int sudoWidth;

    public void <init>(net.sourceforge.plantuml.sudoku.ISudoku)
    {
        net.sourceforge.plantuml.sudoku.GraphicsSudoku r0;
        net.sourceforge.plantuml.ugraphic.UFont $r1, $r2, $r3;
        net.sourceforge.plantuml.sudoku.ISudoku r4;

        r0 := @this: net.sourceforge.plantuml.sudoku.GraphicsSudoku;

        r4 := @parameter0: net.sourceforge.plantuml.sudoku.ISudoku;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int sudoWidth> = 283;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int sudoHeight> = 301;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int boldWidth> = 3;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int textTotalHeight> = 50;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int numberyOffset> = 5;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int numberxOffset> = 10;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int cellHeight> = 32;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int cellWidth> = 30;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int yOffset> = 5;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int xOffset> = 5;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(20);

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont bold()>();

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: net.sourceforge.plantuml.ugraphic.UFont numberFont> = $r2;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(11);

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: net.sourceforge.plantuml.ugraphic.UFont font> = $r3;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int xOffset> = 5;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int yOffset> = 5;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int cellWidth> = 30;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int cellHeight> = 32;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int numberxOffset> = 10;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int numberyOffset> = 5;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int textTotalHeight> = 50;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int boldWidth> = 3;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int sudoHeight> = 301;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: int sudoWidth> = 283;

        r0.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: net.sourceforge.plantuml.sudoku.ISudoku sudoku> = r4;

        return;
    }

    public net.sourceforge.plantuml.core.ImageData writeImageEps(java.io.OutputStream) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps $r0;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2;
        net.sourceforge.plantuml.FileFormat $r3;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.eps.EpsStrategy $r5;
        net.sourceforge.plantuml.sudoku.GraphicsSudoku r7;
        java.io.OutputStream r8;
        java.lang.String $r9;
        byte[] $r10;
        net.sourceforge.plantuml.core.ImageData $r11;

        r7 := @this: net.sourceforge.plantuml.sudoku.GraphicsSudoku;

        r8 := @parameter0: java.io.OutputStream;

        $r0 = new net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r1 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        $r3 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat EPS_TEXT>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder()>();

        $r5 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO_AND_TEXT>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.eps.EpsStrategy)>($r2, $r1, $r4, $r5);

        specialinvoke r7.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)>($r0);

        $r9 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: java.lang.String getEPSCode()>();

        $r10 = virtualinvoke $r9.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r8.<java.io.OutputStream: void write(byte[])>($r10);

        $r11 = staticinvoke <net.sourceforge.plantuml.api.ImageDataSimple: net.sourceforge.plantuml.core.ImageData ok()>();

        return $r11;
    }

    public net.sourceforge.plantuml.core.ImageData writeImageSvg(java.io.OutputStream) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg $r0;
        net.sourceforge.plantuml.Dimension2DDouble $r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r3;
        net.sourceforge.plantuml.FileFormat $r4;
        net.sourceforge.plantuml.graphic.StringBounder $r5;
        net.sourceforge.plantuml.svg.LengthAdjust $r6;
        net.sourceforge.plantuml.sudoku.GraphicsSudoku r8;
        java.io.OutputStream r9;
        net.sourceforge.plantuml.core.ImageData $r10;

        r8 := @this: net.sourceforge.plantuml.sudoku.GraphicsSudoku;

        r9 := @parameter0: java.io.OutputStream;

        $r0 = new net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r1 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r1.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(0.0, 0.0);

        $r3 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        $r4 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat SVG>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.svg.LengthAdjust: net.sourceforge.plantuml.svg.LengthAdjust defaultValue()>();

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,boolean,net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.ugraphic.color.ColorMapper,boolean,double,java.lang.String,java.lang.String,long,java.lang.String,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.svg.LengthAdjust,boolean)>($r2, 1, $r1, $r3, 0, 1.0, null, null, 0L, "none", $r5, $r6, 0);

        specialinvoke r8.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)>($r0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.svg.UGraphicSvg: void writeToStream(java.io.OutputStream,java.lang.String,int)>(r9, null, -1);

        $r10 = staticinvoke <net.sourceforge.plantuml.api.ImageDataSimple: net.sourceforge.plantuml.core.ImageData ok()>();

        return $r10;
    }

    public net.sourceforge.plantuml.core.ImageData writeImageLatex(java.io.OutputStream, net.sourceforge.plantuml.FileFormat) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz $r0;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2;
        net.sourceforge.plantuml.FileFormat $r3, r5, $r6;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.sudoku.GraphicsSudoku r8;
        java.io.OutputStream r9;
        net.sourceforge.plantuml.core.ImageData $r10;
        boolean $z0;

        r8 := @this: net.sourceforge.plantuml.sudoku.GraphicsSudoku;

        r9 := @parameter0: java.io.OutputStream;

        r5 := @parameter1: net.sourceforge.plantuml.FileFormat;

        $r0 = new net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r1 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        $r3 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat LATEX>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder()>();

        $r6 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat LATEX>;

        if r5 != $r6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,double,boolean)>($r2, $r1, $r4, 1.0, $z0);

        specialinvoke r8.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)>($r0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void writeToStream(java.io.OutputStream,java.lang.String,int)>(r9, null, -1);

        $r10 = staticinvoke <net.sourceforge.plantuml.api.ImageDataSimple: net.sourceforge.plantuml.core.ImageData ok()>();

        return $r10;
    }

    public net.sourceforge.plantuml.core.ImageData writeImagePng(java.io.OutputStream) throws java.io.IOException
    {
        net.sourceforge.plantuml.FileFormat $r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.EmptyImageBuilder $r2;
        java.awt.Color $r3;
        java.awt.image.BufferedImage r5;
        java.awt.Graphics2D r6;
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d $r7;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r9;
        net.sourceforge.plantuml.sudoku.GraphicsSudoku r11;
        java.io.OutputStream r12;
        net.sourceforge.plantuml.api.ImageDataSimple $r13;
        int $i0, $i1;

        r11 := @this: net.sourceforge.plantuml.sudoku.GraphicsSudoku;

        r12 := @parameter0: java.io.OutputStream;

        $r0 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        r1 = virtualinvoke $r0.<net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder()>();

        $r2 = new net.sourceforge.plantuml.EmptyImageBuilder;

        $r3 = <java.awt.Color: java.awt.Color WHITE>;

        specialinvoke $r2.<net.sourceforge.plantuml.EmptyImageBuilder: void <init>(java.lang.String,int,int,java.awt.Color,net.sourceforge.plantuml.graphic.StringBounder)>(null, 283, 351, $r3, r1);

        r5 = virtualinvoke $r2.<net.sourceforge.plantuml.EmptyImageBuilder: java.awt.image.BufferedImage getBufferedImage()>();

        r6 = virtualinvoke $r2.<net.sourceforge.plantuml.EmptyImageBuilder: java.awt.Graphics2D getGraphics2D()>();

        $r7 = new net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        $r9 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r8 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,java.awt.Graphics2D,double)>($r9, $r8, r1, r6, 1.0);

        specialinvoke r11.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

        virtualinvoke r6.<java.awt.Graphics2D: void dispose()>();

        staticinvoke <net.sourceforge.plantuml.png.PngIO: void write(java.awt.image.RenderedImage,java.io.OutputStream,int)>(r5, r12, 96);

        $r13 = new net.sourceforge.plantuml.api.ImageDataSimple;

        $i0 = virtualinvoke r5.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r5.<java.awt.image.BufferedImage: int getHeight()>();

        specialinvoke $r13.<net.sourceforge.plantuml.api.ImageDataSimple: void <init>(int,int)>($i0, $i1);

        return $r13;
    }

    private void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UTranslate $r0, $r5, $r24, $r27, $r42;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r1;
        net.sourceforge.plantuml.ugraphic.UBackground $r2;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, $r25, $r28, $r43, r44, r45, r46, r47;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r4;
        java.util.ArrayList $r6;
        java.lang.StringBuilder $r7, $r8, $r12, $r14, $r15, $r17, $r32, $r33, $r34;
        net.sourceforge.plantuml.sudoku.GraphicsSudoku r9;
        net.sourceforge.plantuml.sudoku.ISudoku $r10, $r16, $r30;
        long $l0, $l1;
        java.lang.String $r11, $r13, $r18, $r35;
        net.sourceforge.plantuml.cucadiagram.Display $r19, $r36;
        net.sourceforge.plantuml.ugraphic.UFont $r20, $r37;
        net.sourceforge.plantuml.graphic.FontConfiguration $r21, $r38;
        net.sourceforge.plantuml.SpriteContainerEmpty $r22, $r39;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r23, $r40;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i16;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.URectangle $r26, $r29;
        java.lang.CharSequence[] $r31;
        net.sourceforge.plantuml.graphic.TextBlock r41, r49;
        boolean $z3, $z5;
        byte $b14, $b17;

        r9 := @this: net.sourceforge.plantuml.sudoku.GraphicsSudoku;

        r44 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(5.0, 5.0);

        r45 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        i10 = 0;

     label01:
        if i10 >= 9 goto label05;

        i11 = 0;

     label02:
        if i11 >= 9 goto label04;

        $r30 = r9.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: net.sourceforge.plantuml.sudoku.ISudoku sudoku>;

        i12 = interfaceinvoke $r30.<net.sourceforge.plantuml.sudoku.ISudoku: int getGiven(int,int)>(i10, i11);

        if i12 <= 0 goto label03;

        $r31 = newarray (java.lang.CharSequence)[1];

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31[0] = $r35;

        $r36 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r31);

        $r37 = r9.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: net.sourceforge.plantuml.ugraphic.UFont numberFont>;

        $r38 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>($r37);

        $r40 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r39 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r39.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        r41 = virtualinvoke $r36.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r38, $r40, $r39);

        $r42 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i6 = i10 * 30;

        $i7 = 10 + $i6;

        $d5 = (double) $i7;

        $i8 = i11 * 32;

        $i9 = 5 + $i8;

        $d4 = (double) $i9;

        specialinvoke $r42.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, $d4);

        $r43 = interfaceinvoke r45.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r42);

        interfaceinvoke r41.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r43);

     label03:
        i11 = i11 + 1;

        goto label02;

     label04:
        i10 = i10 + 1;

        goto label01;

     label05:
        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r3 = interfaceinvoke r45.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        r46 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        i13 = 0;

     label06:
        if i13 >= 10 goto label11;

        $i4 = i13 % 3;

        if $i4 != 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        if $z3 == 0 goto label09;

        $b14 = 3;

        goto label10;

     label09:
        $b14 = 1;

     label10:
        $i5 = i13 * 32;

        $d2 = (double) $i5;

        $r27 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d2);

        $r28 = interfaceinvoke r46.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        $r29 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = (double) $b14;

        specialinvoke $r29.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(273.0, $d3);

        interfaceinvoke $r28.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r29);

        i13 = i13 + 1;

        goto label06;

     label11:
        i16 = 0;

     label12:
        if i16 >= 10 goto label17;

        $i2 = i16 % 3;

        if $i2 != 0 goto label13;

        $z5 = 1;

        goto label14;

     label13:
        $z5 = 0;

     label14:
        if $z5 == 0 goto label15;

        $b17 = 3;

        goto label16;

     label15:
        $b17 = 1;

     label16:
        $i3 = i16 * 30;

        $d0 = (double) $i3;

        $r24 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        $r25 = interfaceinvoke r46.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        $r26 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d1 = (double) $b17;

        specialinvoke $r26.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d1, 291.0);

        interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r26);

        i16 = i16 + 1;

        goto label12;

     label17:
        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(301.0);

        r47 = interfaceinvoke r46.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>("http://plantuml.com");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Seed ");

        $r10 = r9.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: net.sourceforge.plantuml.sudoku.ISudoku sudoku>;

        $l0 = interfaceinvoke $r10.<net.sourceforge.plantuml.sudoku.ISudoku: long getSeed()>();

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l0, 36);

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Difficulty ");

        $r16 = r9.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: net.sourceforge.plantuml.sudoku.ISudoku sudoku>;

        $l1 = interfaceinvoke $r16.<net.sourceforge.plantuml.sudoku.ISudoku: long getRatting()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r6);

        $r20 = r9.<net.sourceforge.plantuml.sudoku.GraphicsSudoku: net.sourceforge.plantuml.ugraphic.UFont font>;

        $r21 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>($r20);

        $r23 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r22 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r22.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        r49 = virtualinvoke $r19.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r21, $r23, $r22);

        interfaceinvoke r49.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r47);

        return;
    }
}
