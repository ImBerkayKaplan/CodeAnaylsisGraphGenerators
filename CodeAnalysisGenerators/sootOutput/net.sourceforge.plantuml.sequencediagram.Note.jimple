public final class net.sourceforge.plantuml.sequencediagram.Note extends net.sourceforge.plantuml.sequencediagram.AbstractEvent implements net.sourceforge.plantuml.sequencediagram.Event, net.sourceforge.plantuml.SpecificBackcolorable, net.sourceforge.plantuml.style.WithStyle
{
    private final net.sourceforge.plantuml.sequencediagram.Participant p;
    private final net.sourceforge.plantuml.sequencediagram.Participant p2;
    private final net.sourceforge.plantuml.cucadiagram.Display strings;
    private net.sourceforge.plantuml.sequencediagram.NotePosition position;
    private final net.sourceforge.plantuml.style.StyleBuilder styleBuilder;
    private net.sourceforge.plantuml.sequencediagram.NoteStyle noteStyle;
    private net.sourceforge.plantuml.graphic.color.Colors colors;
    private net.sourceforge.plantuml.Url url;
    private net.sourceforge.plantuml.style.Style style;
    private boolean parallel;

    public void temporaryProtectedUntilTeozIsStandard()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.NotePosition $r1, $r2, $r3, $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition position>;

        $r1 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition BOTTOM>;

        if $r2 == $r1 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition position>;

        $r4 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition TOP>;

        if $r5 != $r4 goto label2;

     label1:
        $r3 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition LEFT>;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition position> = $r3;

     label2:
        return;
    }

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.NoteStyle $r1;
        net.sourceforge.plantuml.style.StyleSignature $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NoteStyle noteStyle>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.NoteStyle: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition()>();

        return $r2;
    }

    public net.sourceforge.plantuml.style.Style[] getUsedStyles()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.style.Style $r1, $r3, $r6, $r7;
        net.sourceforge.plantuml.style.Style[] $r2, $r4;
        net.sourceforge.plantuml.graphic.color.Colors $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.Style style>;

        if $r1 == null goto label1;

        $r4 = newarray (net.sourceforge.plantuml.style.Style)[1];

        $r6 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.Style style>;

        $r5 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Style eventuallyOverride(net.sourceforge.plantuml.graphic.color.Colors)>($r5);

        $r4[0] = $r7;

        return $r4;

     label1:
        $r2 = newarray (net.sourceforge.plantuml.style.Style)[1];

        $r3 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.Style style>;

        $r2[0] = $r3;

        return $r2;
    }

    public void <init>(net.sourceforge.plantuml.sequencediagram.Participant, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1;
        net.sourceforge.plantuml.sequencediagram.NotePosition r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.style.StyleBuilder r4;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        r2 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter3: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.Note: void <init>(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.style.StyleBuilder)>(r1, null, r2, r3, r4);

        return;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.sequencediagram.NoteStyle, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.NotePosition r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.style.StyleBuilder r3;
        net.sourceforge.plantuml.sequencediagram.NoteStyle r4;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r4 := @parameter2: net.sourceforge.plantuml.sequencediagram.NoteStyle;

        r3 := @parameter3: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.Note: void <init>(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.style.StyleBuilder)>(null, null, r1, r2, r3);

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NoteStyle noteStyle> = r4;

        return;
    }

    public void <init>(net.sourceforge.plantuml.sequencediagram.Participant, net.sourceforge.plantuml.sequencediagram.Participant, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1, r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.style.StyleBuilder r4;
        net.sourceforge.plantuml.sequencediagram.NotePosition $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        r2 := @parameter1: net.sourceforge.plantuml.sequencediagram.Participant;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter3: net.sourceforge.plantuml.style.StyleBuilder;

        $r5 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition OVER_SEVERAL>;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.Note: void <init>(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.style.StyleBuilder)>(r1, r2, $r5, r3, r4);

        return;
    }

    private void <init>(net.sourceforge.plantuml.sequencediagram.Participant, net.sourceforge.plantuml.sequencediagram.Participant, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.NoteStyle $r1;
        net.sourceforge.plantuml.graphic.color.Colors $r2;
        net.sourceforge.plantuml.sequencediagram.Participant r3, r4;
        net.sourceforge.plantuml.style.StyleBuilder r5;
        net.sourceforge.plantuml.sequencediagram.NotePosition r6;
        net.sourceforge.plantuml.cucadiagram.Display r7;
        boolean $z0;
        net.sourceforge.plantuml.style.StyleSignature $r8;
        net.sourceforge.plantuml.style.Style $r9;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r3 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        r4 := @parameter1: net.sourceforge.plantuml.sequencediagram.Participant;

        r6 := @parameter2: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r7 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r5 := @parameter4: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.AbstractEvent: void <init>()>();

        $r1 = <net.sourceforge.plantuml.sequencediagram.NoteStyle: net.sourceforge.plantuml.sequencediagram.NoteStyle NORMAL>;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NoteStyle noteStyle> = $r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors empty()>();

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.graphic.color.Colors colors> = $r2;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: boolean parallel> = 0;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant p> = r3;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant p2> = r4;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.StyleBuilder styleBuilder> = r5;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition position> = r6;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.cucadiagram.Display strings> = r7;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r5);

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.Style style> = $r9;

     label1:
        return;
    }

    public void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.sequencediagram.Note r1;
        net.sourceforge.plantuml.style.StyleBuilder $r2, $r6;
        java.util.List r3;
        net.sourceforge.plantuml.style.StyleSignature $r4, $r5;
        net.sourceforge.plantuml.style.Style $r7;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r2 = r1.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getStyles(net.sourceforge.plantuml.style.StyleBuilder)>($r2);

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature mergeWith(java.util.List)>(r3);

        $r6 = r1.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r6);

        r1.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.Style style> = $r7;

     label1:
        return;
    }

    public net.sourceforge.plantuml.sequencediagram.Note withPosition(net.sourceforge.plantuml.sequencediagram.NotePosition)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0, $r3;
        net.sourceforge.plantuml.sequencediagram.NotePosition r1, $r2;
        net.sourceforge.plantuml.style.StyleBuilder $r4;
        net.sourceforge.plantuml.cucadiagram.Display $r5;
        net.sourceforge.plantuml.sequencediagram.Participant $r6, $r7;
        net.sourceforge.plantuml.sequencediagram.NoteStyle $r9;
        net.sourceforge.plantuml.Url $r10;
        net.sourceforge.plantuml.graphic.color.Colors $r11;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.NotePosition;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition position>;

        if $r2 != r1 goto label1;

        return r0;

     label1:
        $r3 = new net.sourceforge.plantuml.sequencediagram.Note;

        $r7 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant p>;

        $r6 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant p2>;

        $r5 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.cucadiagram.Display strings>;

        $r4 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        specialinvoke $r3.<net.sourceforge.plantuml.sequencediagram.Note: void <init>(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.style.StyleBuilder)>($r7, $r6, r1, $r5, $r4);

        $r9 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NoteStyle noteStyle>;

        $r3.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NoteStyle noteStyle> = $r9;

        $r10 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.Url url>;

        $r3.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.Url url> = $r10;

        $r11 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r3.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.graphic.color.Colors colors> = $r11;

        $z0 = r0.<net.sourceforge.plantuml.sequencediagram.Note: boolean parallel>;

        $r3.<net.sourceforge.plantuml.sequencediagram.Note: boolean parallel> = $z0;

        return $r3;
    }

    public net.sourceforge.plantuml.sequencediagram.Participant getParticipant()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.Participant $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant p>;

        return $r1;
    }

    public net.sourceforge.plantuml.sequencediagram.Participant getParticipant2()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.Participant $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant p2>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getStrings()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.cucadiagram.Display strings>;

        return $r1;
    }

    public net.sourceforge.plantuml.sequencediagram.NotePosition getPosition()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.NotePosition $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NotePosition position>;

        return $r1;
    }

    public final net.sourceforge.plantuml.graphic.color.Colors getColors()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.graphic.color.Colors $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.graphic.color.Colors colors>;

        return $r1;
    }

    public void setColors(net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.graphic.color.Colors r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.color.Colors;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.graphic.color.Colors colors> = r1;

        return;
    }

    public boolean dealWith(net.sourceforge.plantuml.sequencediagram.Participant)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1, $r2, $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant p>;

        if $r2 == r1 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.Participant p2>;

        if $r3 != r1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public net.sourceforge.plantuml.Url getUrl()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.Url $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.Url url>;

        return $r1;
    }

    public boolean hasUrl()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.Url $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.Url url>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final net.sourceforge.plantuml.sequencediagram.NoteStyle getNoteStyle()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.NoteStyle $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NoteStyle noteStyle>;

        return $r1;
    }

    public final void setNoteStyle(net.sourceforge.plantuml.sequencediagram.NoteStyle)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.sequencediagram.NoteStyle r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.NoteStyle;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.sequencediagram.NoteStyle noteStyle> = r1;

        return;
    }

    public net.sourceforge.plantuml.ISkinParam getSkinParamBackcolored(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.ISkinParam r1, $r3;
        net.sourceforge.plantuml.graphic.color.Colors $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ISkinParam mute(net.sourceforge.plantuml.ISkinParam)>(r1);

        return $r3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        net.sourceforge.plantuml.sequencediagram.Note r1;
        java.lang.String $r2, $r7;
        net.sourceforge.plantuml.cucadiagram.Display $r5;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.cucadiagram.Display strings>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void setUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        net.sourceforge.plantuml.Url r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r1 := @parameter0: net.sourceforge.plantuml.Url;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: net.sourceforge.plantuml.Url url> = r1;

        return;
    }

    public void goParallel()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        r0.<net.sourceforge.plantuml.sequencediagram.Note: boolean parallel> = 1;

        return;
    }

    public boolean isParallel()
    {
        net.sourceforge.plantuml.sequencediagram.Note r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Note;

        $z0 = r0.<net.sourceforge.plantuml.sequencediagram.Note: boolean parallel>;

        return $z0;
    }
}
