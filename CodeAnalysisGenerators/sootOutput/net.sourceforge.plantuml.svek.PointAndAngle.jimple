public class net.sourceforge.plantuml.svek.PointAndAngle extends java.lang.Object
{
    private final java.awt.geom.Point2D pt;
    private final double angle;

    public void <init>(java.awt.geom.Point2D, double)
    {
        net.sourceforge.plantuml.svek.PointAndAngle r0;
        java.awt.geom.Point2D r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.svek.PointAndAngle;

        r1 := @parameter0: java.awt.geom.Point2D;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.PointAndAngle: java.awt.geom.Point2D pt> = r1;

        r0.<net.sourceforge.plantuml.svek.PointAndAngle: double angle> = d0;

        return;
    }

    public java.awt.geom.Point2D getPt()
    {
        net.sourceforge.plantuml.svek.PointAndAngle r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.PointAndAngle;

        $r1 = r0.<net.sourceforge.plantuml.svek.PointAndAngle: java.awt.geom.Point2D pt>;

        return $r1;
    }

    public double getAngle()
    {
        net.sourceforge.plantuml.svek.PointAndAngle r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.svek.PointAndAngle;

        $d0 = r0.<net.sourceforge.plantuml.svek.PointAndAngle: double angle>;

        return $d0;
    }

    public double getX()
    {
        net.sourceforge.plantuml.svek.PointAndAngle r0;
        java.awt.geom.Point2D $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.svek.PointAndAngle;

        $r1 = r0.<net.sourceforge.plantuml.svek.PointAndAngle: java.awt.geom.Point2D pt>;

        $d0 = virtualinvoke $r1.<java.awt.geom.Point2D: double getX()>();

        return $d0;
    }

    public double getY()
    {
        net.sourceforge.plantuml.svek.PointAndAngle r0;
        java.awt.geom.Point2D $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.svek.PointAndAngle;

        $r1 = r0.<net.sourceforge.plantuml.svek.PointAndAngle: java.awt.geom.Point2D pt>;

        $d0 = virtualinvoke $r1.<java.awt.geom.Point2D: double getY()>();

        return $d0;
    }
}
