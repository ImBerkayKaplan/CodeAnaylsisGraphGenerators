public class net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart;

        $r1 = staticinvoke <net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r7, $r9, $r13;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r10, $r11, $r14, $r15, $r16, $r17, $r19, $r20;
        net.sourceforge.plantuml.command.regex.RegexOptional $r5;
        net.sourceforge.plantuml.command.regex.RegexOr $r6;
        net.sourceforge.plantuml.command.regex.RegexConcat $r8, $r12, $r21;
        net.sourceforge.plantuml.graphic.color.ColorParser $r18;

        $r0 = class "Lnet/sourceforge/plantuml/sequencediagram/command/CommandBoxStart;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[7];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("box");

        $r2[1] = $r4;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r7 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r8 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r9 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[0] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NAME1", "[%g]([^%g]+)[%g]");

        $r9[1] = $r11;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r9);

        $r7[0] = $r8;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r13 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r13[0] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NAME2", "([^#]+)");

        $r13[1] = $r15;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r13);

        $r7[1] = $r12;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r7);

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r6);

        $r2[2] = $r5;

        $r16 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[3] = $r16;

        $r17 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREO", "(\\<\\<.*\\>\\>)?");

        $r2[4] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r19 = virtualinvoke $r18.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r2[5] = $r19;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[6] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r21;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorParser color()
    {
        net.sourceforge.plantuml.graphic.color.ColorType $r0;
        net.sourceforge.plantuml.graphic.color.ColorParser $r1;

        $r0 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.ColorParser simpleColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r0);

        return $r1;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r3, $r20;
        net.sourceforge.plantuml.graphic.color.ColorParser $r4;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r5;
        net.sourceforge.plantuml.ISkinParam $r6, $r8;
        net.sourceforge.plantuml.api.ThemeStyle $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r9;
        net.sourceforge.plantuml.cucadiagram.Display $r11;
        net.sourceforge.plantuml.graphic.color.ColorType $r12;
        net.sourceforge.plantuml.ugraphic.color.HColor $r13;
        net.sourceforge.plantuml.command.CommandExecutionResult $r14;
        net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart r15;
        net.sourceforge.plantuml.LineLocation r16;
        net.sourceforge.plantuml.cucadiagram.Stereotype r17;
        net.sourceforge.plantuml.graphic.color.Colors r19;

        r15 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart;

        r5 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r16 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("NAME", 0);

        virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COLOR", 0);

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREO", 0);

        r17 = null;

        if r3 == null goto label1;

        virtualinvoke r5.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r17 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>(r3);

     label1:
        $r4 = staticinvoke <net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r8 = virtualinvoke r5.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r19 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r7, r0, $r9);

        if r1 != null goto label2;

        $r20 = "";

        goto label3;

     label2:
        $r20 = r1;

     label3:
        $r11 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r20);

        $r12 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r13 = virtualinvoke r19.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r12);

        virtualinvoke r5.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: void boxStart(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r11, $r13, r17);

        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r14;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.sequencediagram.SequenceDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.sequencediagram.SequenceDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
