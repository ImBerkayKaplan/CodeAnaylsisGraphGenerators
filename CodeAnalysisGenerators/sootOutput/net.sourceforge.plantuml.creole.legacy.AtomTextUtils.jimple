public class net.sourceforge.plantuml.creole.legacy.AtomTextUtils extends java.lang.Object
{
    protected static net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO;
    private static final java.util.regex.Pattern p;

    public void <init>()
    {
        net.sourceforge.plantuml.creole.legacy.AtomTextUtils r0;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.AtomTextUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.creole.atom.Atom createLegacy(java.lang.String, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.creole.legacy.AtomText $r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.FontConfiguration r2;
        net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble $r3, $r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        $r0 = new net.sourceforge.plantuml.creole.legacy.AtomText;

        $r4 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        $r3 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.legacy.AtomText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,boolean)>(r1, r2, null, $r4, $r3, 1);

        return $r0;
    }

    public static net.sourceforge.plantuml.creole.atom.Atom create(java.lang.String, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.creole.legacy.AtomText $r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.FontConfiguration r2;
        net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble $r3, $r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        $r0 = new net.sourceforge.plantuml.creole.legacy.AtomText;

        $r4 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        $r3 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.legacy.AtomText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,boolean)>(r1, r2, null, $r4, $r3, 0);

        return $r0;
    }

    public static net.sourceforge.plantuml.creole.atom.Atom createUrl(net.sourceforge.plantuml.Url, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.Url r0;
        java.lang.String $r1, $r3, $r13;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        int $i0;
        net.sourceforge.plantuml.ISkinSimple r4;
        net.sourceforge.plantuml.creole.atom.Atom $r5, $r14;
        java.util.ArrayList $r6;
        java.util.List $r8;
        java.util.Iterator r9;
        boolean $z0;
        net.sourceforge.plantuml.creole.atom.AtomVerticalTexts $r10;
        java.lang.Object $r11;
        java.lang.CharSequence r12;
        net.sourceforge.plantuml.graphic.FontConfiguration r15, r16;

        r0 := @parameter0: net.sourceforge.plantuml.Url;

        r15 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r16 = virtualinvoke r15.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration hyperlink()>();

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.Url: java.lang.String getLabel()>();

        r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r1);

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        if $i0 <= 1 goto label3;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r8 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.CharSequence) $r11;

        $r13 = interfaceinvoke r12.<java.lang.CharSequence: java.lang.String toString()>();

        $r14 = staticinvoke <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.atom.Atom createAtomText(java.lang.String,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple)>($r13, r0, r16, r4);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label1;

     label2:
        $r10 = new net.sourceforge.plantuml.creole.atom.AtomVerticalTexts;

        specialinvoke $r10.<net.sourceforge.plantuml.creole.atom.AtomVerticalTexts: void <init>(java.util.List)>($r6);

        return $r10;

     label3:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.Url: java.lang.String getLabel()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.atom.Atom createAtomText(java.lang.String,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple)>($r3, r0, r16, r4);

        return $r5;
    }

    private static net.sourceforge.plantuml.creole.atom.Atom createAtomText(java.lang.String, net.sourceforge.plantuml.Url, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.ISkinSimple)
    {
        java.lang.String r0, $r11, r18, r19, r20, r21, $r22, $r26, $r28, $r32;
        java.util.regex.Pattern $r1;
        java.util.regex.Matcher r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.StringBuffer $r5, $r16;
        int $i0, $i1, $i2;
        net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts $r7;
        java.lang.Object $r8;
        net.sourceforge.plantuml.creole.atom.Atom $r9, $r24;
        net.sourceforge.plantuml.creole.legacy.AtomText $r10, $r31;
        net.sourceforge.plantuml.graphic.FontConfiguration r12;
        net.sourceforge.plantuml.Url r13;
        net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble $r14, $r15, $r33, $r34;
        net.sourceforge.plantuml.graphic.ImgValign $r23;
        net.sourceforge.plantuml.ISkinSimple r25;
        net.sourceforge.plantuml.creole.atom.AtomSprite $r27;
        net.sourceforge.plantuml.creole.atom.AtomOpenIcon $r29;
        java.lang.UnsupportedOperationException $r30;
        net.sourceforge.plantuml.openiconic.OpenIcon r36;
        double d0, d1, d2;
        net.sourceforge.plantuml.sprite.Sprite r37;

        r0 := @parameter0: java.lang.String;

        r13 := @parameter1: net.sourceforge.plantuml.Url;

        r12 := @parameter2: net.sourceforge.plantuml.graphic.FontConfiguration;

        r25 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        $r1 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: java.util.regex.Pattern p>;

        r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

     label01:
        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label09;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r2.<java.util.regex.Matcher: java.util.regex.Matcher appendReplacement(java.lang.StringBuffer,java.lang.String)>($r16, "");

        $i2 = virtualinvoke $r16.<java.lang.StringBuffer: int length()>();

        if $i2 <= 0 goto label02;

        $r31 = new net.sourceforge.plantuml.creole.legacy.AtomText;

        $r32 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r34 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        $r33 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        specialinvoke $r31.<net.sourceforge.plantuml.creole.legacy.AtomText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,boolean)>($r32, r12, r13, $r34, $r33, 1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r31);

     label02:
        r18 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r19 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r20 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        r21 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(7);

        if r21 == null goto label03;

        $r30 = new java.lang.UnsupportedOperationException;

        specialinvoke $r30.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r30;

     label03:
        if r18 == null goto label05;

        r36 = staticinvoke <net.sourceforge.plantuml.openiconic.OpenIcon: net.sourceforge.plantuml.openiconic.OpenIcon retrieve(java.lang.String)>(r18);

        if r36 == null goto label04;

        $r28 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        d0 = staticinvoke <net.sourceforge.plantuml.creole.Parser: double getScale(java.lang.String,double)>($r28, 1.0);

        $r29 = new net.sourceforge.plantuml.creole.atom.AtomOpenIcon;

        specialinvoke $r29.<net.sourceforge.plantuml.creole.atom.AtomOpenIcon: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,double,net.sourceforge.plantuml.openiconic.OpenIcon,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url)>(null, d0, r36, r12, r13);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r29);

     label04:
        goto label08;

     label05:
        if r19 == null goto label07;

        r37 = interfaceinvoke r25.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.sprite.Sprite getSprite(java.lang.String)>(r19);

        if r37 == null goto label06;

        $r26 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        d1 = staticinvoke <net.sourceforge.plantuml.creole.Parser: double getScale(java.lang.String,double)>($r26, 1.0);

        $r27 = new net.sourceforge.plantuml.creole.atom.AtomSprite;

        specialinvoke $r27.<net.sourceforge.plantuml.creole.atom.AtomSprite: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,double,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.sprite.Sprite,net.sourceforge.plantuml.Url)>(null, d1, r12, r37, r13);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r27);

     label06:
        goto label08;

     label07:
        if r20 == null goto label08;

        $r22 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(6);

        d2 = staticinvoke <net.sourceforge.plantuml.creole.Parser: double getScale(java.lang.String,double)>($r22, 1.0);

        $r23 = <net.sourceforge.plantuml.graphic.ImgValign: net.sourceforge.plantuml.graphic.ImgValign TOP>;

        $r24 = staticinvoke <net.sourceforge.plantuml.creole.atom.AtomImg: net.sourceforge.plantuml.creole.atom.Atom create(java.lang.String,net.sourceforge.plantuml.graphic.ImgValign,int,double,net.sourceforge.plantuml.Url)>(r20, $r23, 0, d2, r13);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r24);

     label08:
        goto label01;

     label09:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke r2.<java.util.regex.Matcher: java.lang.StringBuffer appendTail(java.lang.StringBuffer)>($r5);

        $i0 = virtualinvoke $r5.<java.lang.StringBuffer: int length()>();

        if $i0 <= 0 goto label10;

        $r10 = new net.sourceforge.plantuml.creole.legacy.AtomText;

        $r11 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        $r14 = <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO>;

        specialinvoke $r10.<net.sourceforge.plantuml.creole.legacy.AtomText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,boolean)>($r11, r12, r13, $r15, $r14, 1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r10);

     label10:
        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 1 goto label11;

        $r8 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (net.sourceforge.plantuml.creole.atom.Atom) $r8;

        return $r9;

     label11:
        $r7 = new net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts;

        specialinvoke $r7.<net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts: void <init>(java.util.List)>($r3);

        return $r7;
    }

    public static net.sourceforge.plantuml.creole.atom.Atom createListNumber(net.sourceforge.plantuml.graphic.FontConfiguration, int, int)
    {
        net.sourceforge.plantuml.creole.legacy.AtomTextUtils$2 $r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        int i0, i1, $i2;
        net.sourceforge.plantuml.creole.legacy.AtomTextUtils$3 $r3;
        net.sourceforge.plantuml.creole.legacy.AtomText $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r0 = new net.sourceforge.plantuml.creole.legacy.AtomTextUtils$2;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.legacy.AtomTextUtils$2: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,int)>(r1, i0);

        $r3 = new net.sourceforge.plantuml.creole.legacy.AtomTextUtils$3;

        specialinvoke $r3.<net.sourceforge.plantuml.creole.legacy.AtomTextUtils$3: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration)>(r1);

        $r5 = new net.sourceforge.plantuml.creole.legacy.AtomText;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i2 = i1 + 1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<net.sourceforge.plantuml.creole.legacy.AtomText: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble,boolean)>($r10, r1, null, $r0, $r3, 1);

        return $r5;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.creole.legacy.AtomTextUtils$1 $r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5;
        java.util.regex.Pattern $r6;

        $r0 = new net.sourceforge.plantuml.creole.legacy.AtomTextUtils$1;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.legacy.AtomTextUtils$1: void <init>()>();

        <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.legacy.AtomText$DelayedDouble ZERO> = $r0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\<&([-\\w]+)([\\{,]?(?:(?:scale=|\\*)[0-9.]+)?(?:,color[= :](?:#[0-9a-fA-F]{6}|\\w+))?\\}?)?\\>|\\<\\$([-\\p{L}0-9_/]+)([\\{,]?(?:(?:scale=|\\*)[0-9.]+)?(?:,color[= :](?:#[0-9a-fA-F]{6}|\\w+))?\\}?)?\\>|\\<img[\\s:]+([^>{}]+)(\\{scale=(?:[0-9.]+)\\})?\\>|");

        $r3 = <net.sourceforge.plantuml.graphic.Splitter: java.lang.String emojiPattern>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: java.util.regex.Pattern p> = $r6;

        return;
    }
}
