public class net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn extends java.lang.Object implements net.sourceforge.plantuml.salt.factory.ElementFactory
{
    private final net.sourceforge.plantuml.salt.DataSource dataSource;
    private final net.sourceforge.plantuml.ISkinSimple spriteContainer;

    public void <init>(net.sourceforge.plantuml.salt.DataSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn r0;
        net.sourceforge.plantuml.salt.DataSource r1;
        net.sourceforge.plantuml.ISkinSimple r2;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn;

        r1 := @parameter0: net.sourceforge.plantuml.salt.DataSource;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn: net.sourceforge.plantuml.salt.DataSource dataSource> = r1;

        r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn: net.sourceforge.plantuml.ISkinSimple spriteContainer> = r2;

        return;
    }

    public net.sourceforge.plantuml.salt.Terminated create()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn r0;
        boolean $z0;
        net.sourceforge.plantuml.salt.DataSource $r1;
        java.lang.Object $r2, $r4;
        net.sourceforge.plantuml.salt.Terminated r3, $r7;
        java.lang.String r5;
        net.sourceforge.plantuml.ugraphic.UFont r6;
        net.sourceforge.plantuml.salt.element.ElementRadioCheckbox $r8;
        java.util.List $r9;
        net.sourceforge.plantuml.ISkinSimple $r10;
        net.sourceforge.plantuml.salt.Terminator $r11;
        java.lang.IllegalStateException $r12;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn: boolean ready()>();

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>()>();

        throw $r12;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.salt.Terminated) $r2;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r5 = (java.lang.String) $r4;

        r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont byDefault(int)>(12);

        $r7 = new net.sourceforge.plantuml.salt.Terminated;

        $r8 = new net.sourceforge.plantuml.salt.element.ElementRadioCheckbox;

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn: java.util.List extracted(java.lang.String)>(r5);

        $r10 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn: net.sourceforge.plantuml.ISkinSimple spriteContainer>;

        specialinvoke $r8.<net.sourceforge.plantuml.salt.element.ElementRadioCheckbox: void <init>(java.util.List,net.sourceforge.plantuml.ugraphic.UFont,boolean,boolean,net.sourceforge.plantuml.ISkinSimple)>($r9, r6, 0, 1, $r10);

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.salt.Terminated: net.sourceforge.plantuml.salt.Terminator getTerminator()>();

        specialinvoke $r7.<net.sourceforge.plantuml.salt.Terminated: void <init>(java.lang.Object,net.sourceforge.plantuml.salt.Terminator)>($r8, $r11);

        return $r7;
    }

    private java.util.List extracted(java.lang.String)
    {
        java.lang.String r0, $r2, $r3;
        int i0, $i1;
        java.lang.String[] $r1;
        java.util.List $r4;
        net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn r5;

        r5 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(93);

        $r1 = newarray (java.lang.String)[1];

        $i1 = i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r3 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r2);

        $r1[0] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        return $r4;
    }

    public boolean ready()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn r0;
        net.sourceforge.plantuml.salt.DataSource $r1;
        net.sourceforge.plantuml.salt.Terminated $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn;

        $r1 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryCheckboxOn: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("[X]");

        return $z0;
    }
}
