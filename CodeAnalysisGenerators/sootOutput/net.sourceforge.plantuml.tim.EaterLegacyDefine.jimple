public class net.sourceforge.plantuml.tim.EaterLegacyDefine extends net.sourceforge.plantuml.tim.Eater
{
    private net.sourceforge.plantuml.tim.TFunctionImpl function;

    public void <init>(net.sourceforge.plantuml.StringLocated)
    {
        net.sourceforge.plantuml.tim.EaterLegacyDefine r0;
        net.sourceforge.plantuml.StringLocated r1, $r2;

        r0 := @this: net.sourceforge.plantuml.tim.EaterLegacyDefine;

        r1 := @parameter0: net.sourceforge.plantuml.StringLocated;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        specialinvoke r0.<net.sourceforge.plantuml.tim.Eater: void <init>(net.sourceforge.plantuml.StringLocated)>($r2);

        return;
    }

    public void analyze(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory) throws net.sourceforge.plantuml.tim.EaterException, net.sourceforge.plantuml.tim.EaterExceptionLocated
    {
        net.sourceforge.plantuml.tim.EaterLegacyDefine r0;
        net.sourceforge.plantuml.tim.TContext r1;
        net.sourceforge.plantuml.tim.TMemory r2;
        net.sourceforge.plantuml.LineLocation $r3;
        net.sourceforge.plantuml.tim.TFunctionType $r4;
        net.sourceforge.plantuml.tim.TFunctionImpl $r5, $r7;
        java.lang.String r6;

        r0 := @this: net.sourceforge.plantuml.tim.EaterLegacyDefine;

        r1 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r2 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: void skipSpaces()>();

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: void checkAndEatChar(java.lang.String)>("!define");

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: void skipSpaces()>();

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: net.sourceforge.plantuml.LineLocation getLineLocation()>();

        $r4 = <net.sourceforge.plantuml.tim.TFunctionType: net.sourceforge.plantuml.tim.TFunctionType LEGACY_DEFINE>;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: net.sourceforge.plantuml.tim.TFunctionImpl eatDeclareFunction(net.sourceforge.plantuml.tim.TContext,net.sourceforge.plantuml.tim.TMemory,boolean,net.sourceforge.plantuml.LineLocation,boolean,net.sourceforge.plantuml.tim.TFunctionType)>(r1, r2, 1, $r3, 0, $r4);

        r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: net.sourceforge.plantuml.tim.TFunctionImpl function> = $r5;

        r6 = virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: java.lang.String eatAllToEnd()>();

        $r7 = r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: net.sourceforge.plantuml.tim.TFunctionImpl function>;

        virtualinvoke $r7.<net.sourceforge.plantuml.tim.TFunctionImpl: void setLegacyDefinition(java.lang.String)>(r6);

        return;
    }

    public net.sourceforge.plantuml.tim.TFunction getFunction()
    {
        net.sourceforge.plantuml.tim.EaterLegacyDefine r0;
        net.sourceforge.plantuml.tim.TFunctionImpl $r1;

        r0 := @this: net.sourceforge.plantuml.tim.EaterLegacyDefine;

        $r1 = r0.<net.sourceforge.plantuml.tim.EaterLegacyDefine: net.sourceforge.plantuml.tim.TFunctionImpl function>;

        return $r1;
    }
}
