public class gen.lib.dotgen.position__c extends java.lang.Object
{

    public void <init>()
    {
        gen.lib.dotgen.position__c r0;

        r0 := @this: gen.lib.dotgen.position__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static double largeMinlen(double)
    {
        java.lang.UnsupportedOperationException $r6;
        java.lang.Throwable $r7;
        double d0;

        d0 := @parameter0: double;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6knxbdrmgk6294aw61s2lpvvf", "largeMinlen");

     label1:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("lt6cippjix5bbvyhkcpl8g7g");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e2f0xhw6om2fpgt48xyjjg3i");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("erg9i1970wdri39osu8hx2a6e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dad2o3vzemegi5fywxl7hcezk");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dlasv24dnuygpwagcamhyg15w");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label2:
        $r7 := @caughtexception;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6knxbdrmgk6294aw61s2lpvvf", "largeMinlen");

        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label2;
    }

    public static void connectGraph(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        smetana.core.CArray $r1, r2;
        java.lang.Object $r3, $r5, $r8, $r9, $r12, $r16, $r19, $r20, $r23, $r30, $r36;
        h.ST_rank_t $r4, $r6, $r10, $r17, $r21;
        boolean $z0, z1;
        smetana.core.CArrayOfStar $r7, $r11, $r18, $r22, $r25, $r27, $r29, $r35;
        h.ST_Agnode_s r13, $r32, $r33, $r38, $r39, r42, r45, r46;
        h.ST_elist $r24, $r26, $r28, $r34;
        h.ST_Agedge_s $r31, $r37;
        java.lang.Throwable $r40;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("ccowbxkwmrj75tojopmhcmubx", "connectGraph");

     label01:
        i10 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label02:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i10 > $i0 goto label19;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        r2 = virtualinvoke $r1.<smetana.core.CArray: smetana.core.CArray plus_(int)>(i10);

        z1 = 0;

        r42 = null;

        i11 = 0;

     label03:
        $r3 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r4 = (h.ST_rank_t) $r3;

        $i1 = $r4.<h.ST_rank_t: int n>;

        if i11 >= $i1 goto label14;

        $r20 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r21 = (h.ST_rank_t) $r20;

        $r22 = $r21.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r23 = virtualinvoke $r22.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i11);

        r42 = (h.ST_Agnode_s) $r23;

        $r24 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_out(h.ST_Agnode_s)>(r42);

        $r25 = $r24.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r25 == null goto label08;

        i12 = 0;

     label04:
        $r34 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_out(h.ST_Agnode_s)>(r42);

        $r35 = $r34.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r36 = virtualinvoke $r35.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i12);

        $r37 = (h.ST_Agedge_s) $r36;

        if $r37 == null goto label07;

        $r38 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r37);

        $i8 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r38);

        if $i8 > i10 goto label05;

        $r39 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r37);

        $i9 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r39);

        if $i9 <= i10 goto label06;

     label05:
        z1 = 1;

        goto label07;

     label06:
        i12 = i12 + 1;

        goto label04;

     label07:
        if z1 == 0 goto label08;

        goto label14;

     label08:
        $r26 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_in(h.ST_Agnode_s)>(r42);

        $r27 = $r26.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r27 == null goto label13;

        i13 = 0;

     label09:
        $r28 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_in(h.ST_Agnode_s)>(r42);

        $r29 = $r28.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r30 = virtualinvoke $r29.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i13);

        $r31 = (h.ST_Agedge_s) $r30;

        if $r31 == null goto label12;

        $r32 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r31);

        $i6 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r32);

        if $i6 > i10 goto label10;

        $r33 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r31);

        $i7 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r33);

        if $i7 <= i10 goto label11;

     label10:
        z1 = 1;

        goto label12;

     label11:
        i13 = i13 + 1;

        goto label09;

     label12:
        if z1 == 0 goto label13;

        goto label14;

     label13:
        i11 = i11 + 1;

        goto label03;

     label14:
        if z1 != 0 goto label18;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>(r42);

        if $z0 == 0 goto label15;

        goto label18;

     label15:
        $r5 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r6 = (h.ST_rank_t) $r5;

        $r7 = $r6.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r8 = virtualinvoke $r7.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r45 = (h.ST_Agnode_s) $r8;

        $i2 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i10 >= $i2 goto label16;

        $r16 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r17 = (h.ST_rank_t) $r16;

        $r18 = $r17.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r19 = virtualinvoke $r18.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r46 = (h.ST_Agnode_s) $r19;

        goto label17;

     label16:
        $r9 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(-1);

        $r10 = (h.ST_rank_t) $r9;

        $r11 = $r10.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r12 = virtualinvoke $r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r46 = (h.ST_Agnode_s) $r12;

     label17:
        r13 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s virtual_node(h.ST_Agraph_s)>(r0);

        staticinvoke <smetana.core.Macro: void ND_node_type(h.ST_Agnode_s,int)>(r13, 2);

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r13, r45, 0.0, 0);

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r13, r46, 0.0, 0);

        $i3 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r45);

        $i4 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r46);

        $i5 = staticinvoke <smetana.core.Macro: int MIN(int,int)>($i3, $i4);

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r13, $i5);

     label18:
        i10 = i10 + 1;

        goto label02;

     label19:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ccowbxkwmrj75tojopmhcmubx", "connectGraph");

        goto label22;

     label20:
        $r40 := @caughtexception;

     label21:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ccowbxkwmrj75tojopmhcmubx", "connectGraph");

        throw $r40;

     label22:
        return;

        catch java.lang.Throwable from label01 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public static void dot_position(h.ST_Agraph_s, h.ST_aspect_t)
    {
        h.ST_Agraph_s r0;
        h.ST_Agnode_s $r1;
        smetana.core.Z $r2;
        boolean $z0, $z1;
        int $i0, $i1;
        h.ST_aspect_t r3;
        java.lang.Object[] $r4;
        java.lang.Throwable $r6;

        r0 := @parameter0: h.ST_Agraph_s;

        r3 := @parameter1: h.ST_aspect_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("33snzyd9z0loienur06dnily9", "dot_position");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

        if $r1 != null goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("33snzyd9z0loienur06dnily9", "dot_position");

        return;

     label3:
        staticinvoke <gen.lib.dotgen.cluster__c: void mark_lowclusters(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void set_ycoords(h.ST_Agraph_s)>(r0);

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $z0 = $r2.<smetana.core.Z: boolean Concentrate>;

        if $z0 == 0 goto label4;

        $r4 = newarray (java.lang.Object)[1];

        $r4[0] = r0;

        staticinvoke <gen.lib.dotgen.conc__c: java.lang.Object dot_concentrate(java.lang.Object[])>($r4);

     label4:
        staticinvoke <gen.lib.dotgen.position__c: void expand_leaves(h.ST_Agraph_s)>(r0);

        $z1 = staticinvoke <gen.lib.dotgen.flat__c: boolean flat_edges(h.ST_Agraph_s)>(r0);

        if $z1 == 0 goto label5;

        staticinvoke <gen.lib.dotgen.position__c: void set_ycoords(h.ST_Agraph_s)>(r0);

     label5:
        staticinvoke <gen.lib.dotgen.position__c: void create_aux_edges(h.ST_Agraph_s)>(r0);

        $i0 = staticinvoke <gen.lib.dotgen.position__c: int nsiter2(h.ST_Agraph_s)>(r0);

        $i1 = staticinvoke <gen.lib.common.ns__c: int rank(h.ST_Agraph_s,int,int)>(r0, 2, $i0);

        if $i1 == 0 goto label6;

        staticinvoke <gen.lib.dotgen.position__c: void connectGraph(h.ST_Agraph_s)>(r0);

     label6:
        staticinvoke <gen.lib.dotgen.position__c: void set_xcoords(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void set_aspect(h.ST_Agraph_s,h.ST_aspect_t)>(r0, r3);

        staticinvoke <gen.lib.dotgen.position__c: void remove_aux_edges(h.ST_Agraph_s)>(r0);

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("33snzyd9z0loienur06dnily9", "dot_position");

        goto label9;

     label8:
        $r6 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("33snzyd9z0loienur06dnily9", "dot_position");

        throw $r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label7 with label8;
    }

    public static int nsiter2(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        smetana.core.CString $r1, $r2;
        double $d0, $d1, $d2;
        int $i1, i2;
        java.lang.Throwable $r4;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("90vn63m6v0w9fn9a2dgfxxx3h", "nsiter2");

     label1:
        i2 = 2147483647;

        $r1 = new smetana.core.CString;

        specialinvoke $r1.<smetana.core.CString: void <init>(java.lang.String)>("nslimit");

        $r2 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r1);

        if $r2 == null goto label2;

        $d0 = staticinvoke <smetana.core.JUtils: double atof(smetana.core.CString)>($r2);

        $i1 = staticinvoke <gen.lib.cgraph.graph__c: int agnnodes(h.ST_Agraph_s)>(r0);

        $d1 = (double) $i1;

        $d2 = $d0 * $d1;

        i2 = (int) $d2;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("90vn63m6v0w9fn9a2dgfxxx3h", "nsiter2");

        return i2;

     label3:
        $r4 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("90vn63m6v0w9fn9a2dgfxxx3h", "nsiter2");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static boolean go(h.ST_Agnode_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, r1, $r7;
        boolean $z0, $z1;
        h.ST_elist $r2;
        smetana.core.CArrayOfStar $r3;
        java.lang.Object $r4;
        h.ST_Agedge_s $r5;
        java.lang.Throwable $r8;
        int i0;

        r0 := @parameter0: h.ST_Agnode_s;

        r1 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("5bax8ut6nnk4pr7yxdumk9chl", "go");

     label1:
        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r0, r1);

        if $z0 == 0 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5bax8ut6nnk4pr7yxdumk9chl", "go");

        return 1;

     label3:
        i0 = 0;

     label4:
        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        $r3 = $r2.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r4 = virtualinvoke $r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i0);

        $r5 = (h.ST_Agedge_s) $r4;

        if $r5 == null goto label7;

        $r7 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r5);

        $z1 = staticinvoke <gen.lib.dotgen.position__c: boolean go(h.ST_Agnode_s,h.ST_Agnode_s)>($r7, r1);

        if $z1 == 0 goto label6;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5bax8ut6nnk4pr7yxdumk9chl", "go");

        return 1;

     label6:
        i0 = i0 + 1;

        goto label4;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5bax8ut6nnk4pr7yxdumk9chl", "go");

        return 0;

     label8:
        $r8 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5bax8ut6nnk4pr7yxdumk9chl", "go");

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static boolean canreach(h.ST_Agnode_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, r1;
        boolean z0;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_Agnode_s;

        r1 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9xz8numztzj4qsq85pziahv1k", "canreach");

     label1:
        z0 = staticinvoke <gen.lib.dotgen.position__c: boolean go(h.ST_Agnode_s,h.ST_Agnode_s)>(r0, r1);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9xz8numztzj4qsq85pziahv1k", "canreach");

        return z0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9xz8numztzj4qsq85pziahv1k", "canreach");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s, h.ST_Agnode_s, double, int)
    {
        h.ST_Agedgepair_s $r0;
        h.ST_Agedge_s $r2, $r3, $r4, r7;
        h.ST_Agedgeinfo_t $r5;
        h.ST_Agobj_s $r6;
        h.ST_Agnode_s r8, r9;
        int $i0, $i2, i3;
        double $d0, d1;
        byte $b1;
        java.lang.Throwable $r12;

        r8 := @parameter0: h.ST_Agnode_s;

        r9 := @parameter1: h.ST_Agnode_s;

        d1 := @parameter2: double;

        i3 := @parameter3: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("4cvgiatny97ou6mhqoq6aqwek", "make_aux_edge");

     label1:
        $r0 = new h.ST_Agedgepair_s;

        specialinvoke $r0.<h.ST_Agedgepair_s: void <init>()>();

        $r2 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s in>;

        staticinvoke <smetana.core.Macro: void AGTYPE(h.ST_Agobj_s,int)>($r2, 3);

        $r3 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s out>;

        staticinvoke <smetana.core.Macro: void AGTYPE(h.ST_Agobj_s,int)>($r3, 2);

        $r4 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s out>;

        $r6 = $r4.<h.ST_Agedge_s: h.ST_Agobj_s base>;

        $r5 = new h.ST_Agedgeinfo_t;

        specialinvoke $r5.<h.ST_Agedgeinfo_t: void <init>()>();

        $r6.<h.ST_Agobj_s: h.ST_Agrec_s data> = $r5;

        r7 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s out>;

        staticinvoke <smetana.core.Macro: void M_agtail(h.ST_Agedge_s,h.ST_Agnode_s)>(r7, r8);

        staticinvoke <smetana.core.Macro: void M_aghead(h.ST_Agedge_s,h.ST_Agnode_s)>(r7, r9);

        $i0 = <smetana.core.JUtils: int USHRT_MAX>;

        $d0 = (double) $i0;

        $b1 = d1 cmpl $d0;

        if $b1 <= 0 goto label2;

        d1 = staticinvoke <gen.lib.dotgen.position__c: double largeMinlen(double)>(d1);

     label2:
        $i2 = staticinvoke <smetana.core.Macro: int ROUND(double)>(d1);

        staticinvoke <smetana.core.Macro: void ED_minlen(h.ST_Agedge_s,int)>(r7, $i2);

        staticinvoke <smetana.core.Macro: void ED_weight(h.ST_Agedge_s,int)>(r7, i3);

        staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s fast_edge(h.ST_Agedge_s)>(r7);

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4cvgiatny97ou6mhqoq6aqwek", "make_aux_edge");

        return r7;

     label4:
        $r12 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4cvgiatny97ou6mhqoq6aqwek", "make_aux_edge");

        throw $r12;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void allocate_aux_edges(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        h.ST_elist $r1, $r2, $r3, $r6, $r9, $r10;
        smetana.core.CArrayOfStar $r4, $r7;
        java.lang.Object $r5, $r8;
        int i0, $i1, i2, i3;
        java.lang.Throwable $r11;
        h.ST_Agnode_s r13;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("53fvij7oun7aezlb7x66vzuyb", "allocate_aux_edges");

     label01:
        r13 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label02:
        if r13 == null goto label07;

        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r13);

        staticinvoke <smetana.core.Macro: void ND_save_in(h.ST_Agnode_s,smetana.core.__struct__)>(r13, $r1);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r13);

        staticinvoke <smetana.core.Macro: void ND_save_out(h.ST_Agnode_s,smetana.core.__struct__)>(r13, $r2);

        i2 = 0;

     label03:
        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r13);

        $r4 = $r3.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r5 = virtualinvoke $r4.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i2);

        if $r5 == null goto label04;

        i2 = i2 + 1;

        goto label03;

     label04:
        i3 = 0;

     label05:
        $r6 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r13);

        $r7 = $r6.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r8 = virtualinvoke $r7.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i3);

        if $r8 == null goto label06;

        i3 = i3 + 1;

        goto label05;

     label06:
        i0 = i2 + i3;

        $i1 = i0 + 3;

        $r9 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r13);

        staticinvoke <smetana.core.Macro: void alloc_elist(int,h.ST_elist)>($i1, $r9);

        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r13);

        staticinvoke <smetana.core.Macro: void alloc_elist(int,h.ST_elist)>(3, $r10);

        r13 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r13);

        goto label02;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("53fvij7oun7aezlb7x66vzuyb", "allocate_aux_edges");

        goto label10;

     label08:
        $r11 := @caughtexception;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("53fvij7oun7aezlb7x66vzuyb", "allocate_aux_edges");

        throw $r11;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static void make_LR_constraints(h.ST_Agraph_s)
    {
        int[] r0;
        h.ST_Agraph_s r1;
        smetana.core.CArray r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, i36, $i37, i38, i39, i40, i41, i42, i43, i44, $i45, i46, i47;
        java.lang.Object $r3, $r6, $r8, $r10, $r13, $r16, $r19, $r25, $r33, $r36, $r56;
        h.ST_rank_t $r4, $r9, $r11, $r17;
        smetana.core.CArrayOfStar $r5, $r12, $r18, $r24, $r32, $r35, $r55;
        h.ST_Agnode_s $r7, r14, r20, $r26, $r27, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r50, $r51, $r58, $r59, r69, r70;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, d30, d31, d32;
        h.ST_elist $r15, $r23, $r31, $r34, $r54, $r67;
        smetana.core.__ptr__ $r21;
        h.ST_Agedge_s $r22, $r28, r53, $r57, r65, r66, r68;
        h.ST_textlabel_t $r29;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r60;

        r1 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("ah28nr6mxpjeosr85bhmzd3si", "make_LR_constraints");

     label01:
        r0 = newarray (int)[2];

        r2 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $i0 = staticinvoke <smetana.core.Macro: int GD_has_labels(h.ST_Agraph_s)>(r1);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label02;

        $i35 = staticinvoke <smetana.core.Macro: int GD_nodesep(h.ST_Agraph_s)>(r1);

        r0[0] = $i35;

        r0[1] = 5;

        goto label03;

     label02:
        $i2 = staticinvoke <smetana.core.Macro: int GD_nodesep(h.ST_Agraph_s)>(r1);

        r0[0] = $i2;

        r0[1] = $i2;

     label03:
        i36 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r1);

     label04:
        $i37 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r1);

        if i36 > $i37 goto label22;

        $r3 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(i36);

        $r4 = (h.ST_rank_t) $r3;

        $r5 = $r4.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r6 = virtualinvoke $r5.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r7 = (h.ST_Agnode_s) $r6;

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>($r7, 0);

        d30 = 0.0;

        $i3 = i36 & 1;

        i4 = r0[$i3];

        i38 = 0;

     label05:
        $r8 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(i36);

        $r9 = (h.ST_rank_t) $r8;

        $i5 = $r9.<h.ST_rank_t: int n>;

        if i38 >= $i5 goto label21;

        $r10 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(i36);

        $r11 = (h.ST_rank_t) $r10;

        $r12 = $r11.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r13 = virtualinvoke $r12.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i38);

        r14 = (h.ST_Agnode_s) $r13;

        $d0 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r14);

        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r14, $d0);

        $r15 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r14);

        $i6 = $r15.<h.ST_elist: int size>;

        if $i6 <= 0 goto label09;

        i39 = 0;

        i40 = 0;

     label06:
        $r54 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r14);

        $r55 = $r54.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r56 = virtualinvoke $r55.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i40);

        $r57 = (h.ST_Agedge_s) $r56;

        if $r57 == null goto label08;

        $r58 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r57);

        $r59 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r57);

        $z3 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r58, $r59);

        if $z3 == 0 goto label07;

        $i34 = staticinvoke <gen.lib.common.splines__c: int selfRightSpace(h.ST_Agedge_s)>($r57);

        i39 = i39 + $i34;

     label07:
        i40 = i40 + 1;

        goto label06;

     label08:
        $d27 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r14);

        $d28 = (double) i39;

        $d29 = $d27 + $d28;

        staticinvoke <smetana.core.Macro: void ND_rw(h.ST_Agnode_s,double)>(r14, $d29);

     label09:
        $r16 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>(i36);

        $r17 = (h.ST_rank_t) $r16;

        $r18 = $r17.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $i7 = i38 + 1;

        $r19 = virtualinvoke $r18.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i7);

        r20 = (h.ST_Agnode_s) $r19;

        if r20 == null goto label10;

        $d21 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r14);

        $d22 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>(r20);

        $d24 = $d21 + $d22;

        $d23 = (double) i4;

        d31 = $d24 + $d23;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r14, r20, d31, 0);

        $d25 = d30 + d31;

        $i32 = (int) $d25;

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r20, $i32);

        $d26 = d30 + d31;

        $i33 = (int) $d26;

        d30 = (double) $i33;

     label10:
        $r21 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ ND_alg(h.ST_Agnode_s)>(r14);

        $r22 = (h.ST_Agedge_s) $r21;

        if $r22 == null goto label13;

        $r31 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_out(h.ST_Agnode_s)>(r14);

        $r32 = $r31.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r33 = virtualinvoke $r32.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r65 = (h.ST_Agedge_s) $r33;

        $r34 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_out(h.ST_Agnode_s)>(r14);

        $r35 = $r34.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r36 = virtualinvoke $r35.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(1);

        r66 = (h.ST_Agedge_s) $r36;

        $r37 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r65);

        $i23 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r37);

        $r38 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $i24 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r38);

        if $i23 <= $i24 goto label11;

        r53 = r65;

        r65 = r66;

        r66 = r53;

     label11:
        $i25 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>($r22);

        $i26 = staticinvoke <smetana.core.Macro: int GD_nodesep(h.ST_Agraph_s)>(r1);

        $i27 = $i25 * $i26;

        i41 = $i27 / 2;

        $r39 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r65);

        $d13 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>($r39);

        $r40 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r65);

        $d14 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>($r40);

        $d15 = $d13 + $d14;

        $i28 = (int) $d15;

        i42 = i41 + $i28;

        $r41 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r65);

        $r42 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r65);

        $z1 = staticinvoke <gen.lib.dotgen.position__c: boolean canreach(h.ST_Agnode_s,h.ST_Agnode_s)>($r41, $r42);

        if $z1 != 0 goto label12;

        $r50 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r65);

        $r51 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r65);

        $d20 = (double) i42;

        $i31 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r22);

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>($r50, $r51, $d20, $i31);

     label12:
        $r43 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $d16 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>($r43);

        $r44 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $d17 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>($r44);

        $d18 = $d16 + $d17;

        $i29 = (int) $d18;

        i43 = i41 + $i29;

        $r45 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $r46 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $z2 = staticinvoke <gen.lib.dotgen.position__c: boolean canreach(h.ST_Agnode_s,h.ST_Agnode_s)>($r45, $r46);

        if $z2 != 0 goto label13;

        $r47 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $r48 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $d19 = (double) i43;

        $i30 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r22);

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>($r47, $r48, $d19, $i30);

     label13:
        i44 = 0;

     label14:
        $r67 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r14);

        $i45 = $r67.<h.ST_elist: int size>;

        if i44 >= $i45 goto label20;

        $r23 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r14);

        $r24 = $r23.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r25 = virtualinvoke $r24.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i44);

        r68 = (h.ST_Agedge_s) $r25;

        $r26 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r68);

        $i8 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r26);

        $r27 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r68);

        $i9 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r27);

        if $i8 >= $i9 goto label15;

        r69 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r68);

        r70 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r68);

        goto label16;

     label15:
        r69 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r68);

        r70 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r68);

     label16:
        $d1 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r69);

        $d2 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>(r70);

        d32 = $d1 + $d2;

        $i10 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>(r68);

        $i11 = staticinvoke <smetana.core.Macro: int GD_nodesep(h.ST_Agraph_s)>(r1);

        $i12 = $i10 * $i11;

        $d3 = (double) $i12;

        $d4 = $d3 + d32;

        i46 = (int) $d4;

        $r28 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s find_fast_edge(h.ST_Agnode_s,h.ST_Agnode_s)>(r69, r70);

        if $r28 == null goto label18;

        $i14 = staticinvoke <smetana.core.Macro: int GD_nodesep(h.ST_Agraph_s)>(r1);

        $d6 = (double) $i14;

        $d7 = d32 + $d6;

        $d8 = staticinvoke <smetana.core.Macro: double ED_dist(h.ST_Agedge_s)>(r68);

        $i15 = staticinvoke <smetana.core.Macro: int ROUND(double)>($d8);

        $d9 = (double) $i15;

        $d10 = $d7 + $d9;

        $i16 = (int) $d10;

        i47 = staticinvoke <smetana.core.Macro: int MAX(int,int)>(i46, $i16);

        $i17 = <smetana.core.JUtils: int USHRT_MAX>;

        if i47 <= $i17 goto label17;

        $d11 = (double) i47;

        $d12 = staticinvoke <gen.lib.dotgen.position__c: double largeMinlen(double)>($d11);

        i47 = (int) $d12;

     label17:
        $i18 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>($r28);

        $i19 = staticinvoke <smetana.core.Macro: int MAX(int,int)>($i18, i47);

        staticinvoke <smetana.core.Macro: void ED_minlen(h.ST_Agedge_s,int)>($r28, $i19);

        $i20 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r28);

        $i21 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r68);

        $i22 = staticinvoke <smetana.core.Macro: int MAX(int,int)>($i20, $i21);

        staticinvoke <smetana.core.Macro: void ED_weight(h.ST_Agedge_s,int)>($r28, $i22);

        goto label19;

     label18:
        $r29 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r68);

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r29);

        if $z0 == 0 goto label19;

        $d5 = (double) i46;

        $i13 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r68);

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r69, r70, $d5, $i13);

     label19:
        i44 = i44 + 1;

        goto label14;

     label20:
        i38 = i38 + 1;

        goto label05;

     label21:
        i36 = i36 + 1;

        goto label04;

     label22:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ah28nr6mxpjeosr85bhmzd3si", "make_LR_constraints");

        goto label25;

     label23:
        $r60 := @caughtexception;

     label24:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ah28nr6mxpjeosr85bhmzd3si", "make_LR_constraints");

        throw $r60;

     label25:
        return;

        catch java.lang.Throwable from label01 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public static void make_edge_pairs(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        h.ST_elist $r1, $r3;
        smetana.core.CArrayOfStar $r2, $r4;
        java.lang.Object $r5;
        h.ST_Agedge_s $r6;
        h.ST_Agnode_s r8, $r13, $r15, $r17, $r18, r21;
        h.ST_port $r9, $r11;
        h.ST_pointf $r10, $r12;
        double $d0, $d1, $d2, $d3, $d4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        java.lang.Throwable $r19;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6uruo8mutxgcni9fm8jcrw4cr", "make_edge_pairs");

     label01:
        r21 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label02:
        if r21 == null goto label07;

        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_out(h.ST_Agnode_s)>(r21);

        $r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r2 == null goto label06;

        i11 = 0;

     label03:
        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_out(h.ST_Agnode_s)>(r21);

        $r4 = $r3.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r5 = virtualinvoke $r4.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i11);

        $r6 = (h.ST_Agedge_s) $r5;

        if $r6 == null goto label06;

        r8 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s virtual_node(h.ST_Agraph_s)>(r0);

        staticinvoke <smetana.core.Macro: void ND_node_type(h.ST_Agnode_s,int)>(r8, 2);

        $r9 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>($r6);

        $r10 = $r9.<h.ST_port: h.ST_pointf p>;

        $d0 = $r10.<h.ST_pointf: double x>;

        $r11 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>($r6);

        $r12 = $r11.<h.ST_port: h.ST_pointf p>;

        $d1 = $r12.<h.ST_pointf: double x>;

        $d2 = $d0 - $d1;

        i12 = (int) $d2;

        if i12 <= 0 goto label04;

        i13 = 0;

        goto label05;

     label04:
        i13 = neg i12;

        i12 = 0;

     label05:
        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r6);

        $i0 = i12 + 1;

        $d3 = (double) $i0;

        $i1 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r6);

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r8, $r13, $d3, $i1);

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r6);

        $i2 = i13 + 1;

        $d4 = (double) $i2;

        $i3 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r6);

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r8, $r15, $d4, $i3);

        $r17 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r6);

        $i4 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r17);

        $i5 = $i4 - i12;

        $i6 = $i5 - 1;

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r6);

        $i7 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r18);

        $i8 = $i7 - i13;

        $i9 = $i8 - 1;

        $i10 = staticinvoke <smetana.core.Macro: int MIN(int,int)>($i6, $i9);

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r8, $i10);

        i11 = i11 + 1;

        goto label03;

     label06:
        r21 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r21);

        goto label02;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6uruo8mutxgcni9fm8jcrw4cr", "make_edge_pairs");

        goto label10;

     label08:
        $r19 := @caughtexception;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6uruo8mutxgcni9fm8jcrw4cr", "make_edge_pairs");

        throw $r19;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static void contain_clustnodes(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r1, $r4;
        boolean $z0;
        smetana.core.CArrayOfStar $r2;
        java.lang.Object $r3;
        h.ST_Agnode_s $r5, $r6, $r9, $r10;
        h.ST_Agedge_s $r7;
        int $i0, $i1, i2, $i3;
        java.lang.Throwable $r12;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("79v3omwzni0nm3h05l3onjsbz", "contain_clustnodes");

     label1:
        $r1 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>(r0, $r1);

        if $z0 == 0 goto label3;

        staticinvoke <gen.lib.dotgen.position__c: void contain_nodes(h.ST_Agraph_s)>(r0);

        $r5 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r0);

        $r6 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_rn(h.ST_Agraph_s)>(r0);

        $r7 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s find_fast_edge(h.ST_Agnode_s,h.ST_Agnode_s)>($r5, $r6);

        if $r7 == null goto label2;

        $i0 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r7);

        $i1 = $i0 + 128;

        staticinvoke <smetana.core.Macro: void ED_weight(h.ST_Agedge_s,int)>($r7, $i1);

        goto label3;

     label2:
        $r9 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r0);

        $r10 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_rn(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>($r9, $r10, 1.0, 128);

     label3:
        i2 = 1;

     label4:
        $i3 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i2 > $i3 goto label5;

        $r2 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i2);

        $r4 = (h.ST_Agraph_s) $r3;

        staticinvoke <gen.lib.dotgen.position__c: void contain_clustnodes(h.ST_Agraph_s)>($r4);

        i2 = i2 + 1;

        goto label4;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("79v3omwzni0nm3h05l3onjsbz", "contain_clustnodes");

        goto label7;

     label6:
        $r12 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("79v3omwzni0nm3h05l3onjsbz", "contain_clustnodes");

        throw $r12;

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    public static boolean vnode_not_related_to(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, $r6, $r7;
        int $i0;
        h.ST_elist $r1;
        smetana.core.CArrayOfStar $r2;
        java.lang.Object $r3;
        h.ST_Agedge_s $r4, r10;
        h.ST_Agraph_s r5;
        boolean $z0, $z1;
        java.lang.Throwable $r8;

        r5 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("24yfgklubun581fbfyx62lzsm", "vnode_not_related_to");

     label01:
        $i0 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r0);

        if $i0 == 1 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("24yfgklubun581fbfyx62lzsm", "vnode_not_related_to");

        return 0;

     label03:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_out(h.ST_Agnode_s)>(r0);

        $r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r10 = (h.ST_Agedge_s) $r3;

     label04:
        $r4 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_orig(h.ST_Agedge_s)>(r10);

        if $r4 == null goto label05;

        r10 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_orig(h.ST_Agedge_s)>(r10);

        goto label04;

     label05:
        $r6 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r10);

        $z0 = staticinvoke <gen.lib.cgraph.obj__c: boolean agcontains(h.ST_Agraph_s,h.ST_Agobj_s)>(r5, $r6);

        if $z0 == 0 goto label07;

     label06:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("24yfgklubun581fbfyx62lzsm", "vnode_not_related_to");

        return 0;

     label07:
        $r7 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r10);

        $z1 = staticinvoke <gen.lib.cgraph.obj__c: boolean agcontains(h.ST_Agraph_s,h.ST_Agobj_s)>(r5, $r7);

        if $z1 == 0 goto label09;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("24yfgklubun581fbfyx62lzsm", "vnode_not_related_to");

        return 0;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("24yfgklubun581fbfyx62lzsm", "vnode_not_related_to");

        return 1;

     label10:
        $r8 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("24yfgklubun581fbfyx62lzsm", "vnode_not_related_to");

        throw $r8;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label06 with label10;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label09 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void keepout_othernodes(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r5, $r18, $r26, $r37;
        smetana.core.Z $r1;
        h.ST_Agsym_s $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, $i12, i13;
        smetana.core.CArrayOfStar $r3, $r12, $r22, $r30;
        java.lang.Object $r4, $r7, $r10, $r13, $r16, $r20, $r23, $r28, $r31, $r39;
        smetana.core.CArray $r6, $r9, $r15, $r19, $r27, $r38;
        h.ST_rank_t $r8, $r11, $r17, $r21, $r29, $r40;
        h.ST_Agnode_s r14, $r24, $r32, r36, r41;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        boolean $z0, $z1;
        java.lang.Throwable $r34;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("73cdgjl47ohty2va766evbo4", "keepout_othernodes");

     label01:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_Agsym_s G_margin>;

        i0 = staticinvoke <gen.lib.common.utils__c: int late_int(smetana.core.__ptr__,h.ST_Agsym_s,int,int)>(r0, $r2, 8, 0);

        i9 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label02:
        $i1 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i9 > $i1 goto label13;

        $r6 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r7 = virtualinvoke $r6.<smetana.core.CArray: java.lang.Object get__(int)>(i9);

        $r8 = (h.ST_rank_t) $r7;

        $i3 = $r8.<h.ST_rank_t: int n>;

        if $i3 != 0 goto label03;

        goto label12;

     label03:
        $r9 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r10 = virtualinvoke $r9.<smetana.core.CArray: java.lang.Object get__(int)>(i9);

        $r11 = (h.ST_rank_t) $r10;

        $r12 = $r11.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r13 = virtualinvoke $r12.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r14 = (h.ST_Agnode_s) $r13;

        if r14 != null goto label04;

        goto label12;

     label04:
        $i4 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r14);

        i10 = $i4 - 1;

     label05:
        if i10 < 0 goto label08;

        $r26 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $r27 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r26);

        $r28 = virtualinvoke $r27.<smetana.core.CArray: java.lang.Object get__(int)>(i9);

        $r29 = (h.ST_rank_t) $r28;

        $r30 = $r29.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r31 = virtualinvoke $r30.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i10);

        r36 = (h.ST_Agnode_s) $r31;

        $i8 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r36);

        if $i8 == 0 goto label06;

        $z1 = staticinvoke <gen.lib.dotgen.position__c: boolean vnode_not_related_to(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r36);

        if $z1 == 0 goto label07;

     label06:
        $r32 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r0);

        $d3 = (double) i0;

        $d4 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r36);

        $d5 = $d3 + $d4;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r36, $r32, $d5, 0);

        goto label08;

     label07:
        i10 = i10 + -1;

        goto label05;

     label08:
        $i5 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r14);

        $r15 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r16 = virtualinvoke $r15.<smetana.core.CArray: java.lang.Object get__(int)>(i9);

        $r17 = (h.ST_rank_t) $r16;

        $i6 = $r17.<h.ST_rank_t: int n>;

        i11 = $i5 + $i6;

     label09:
        $r37 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $r38 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r37);

        $r39 = virtualinvoke $r38.<smetana.core.CArray: java.lang.Object get__(int)>(i9);

        $r40 = (h.ST_rank_t) $r39;

        $i12 = $r40.<h.ST_rank_t: int n>;

        if i11 >= $i12 goto label12;

        $r18 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $r19 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r18);

        $r20 = virtualinvoke $r19.<smetana.core.CArray: java.lang.Object get__(int)>(i9);

        $r21 = (h.ST_rank_t) $r20;

        $r22 = $r21.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r23 = virtualinvoke $r22.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i11);

        r41 = (h.ST_Agnode_s) $r23;

        $i7 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r41);

        if $i7 == 0 goto label10;

        $z0 = staticinvoke <gen.lib.dotgen.position__c: boolean vnode_not_related_to(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r41);

        if $z0 == 0 goto label11;

     label10:
        $r24 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_rn(h.ST_Agraph_s)>(r0);

        $d0 = (double) i0;

        $d1 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>(r41);

        $d2 = $d0 + $d1;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>($r24, r41, $d2, 0);

        goto label12;

     label11:
        i11 = i11 + 1;

        goto label09;

     label12:
        i9 = i9 + 1;

        goto label02;

     label13:
        i13 = 1;

     label14:
        $i2 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i13 > $i2 goto label15;

        $r3 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r4 = virtualinvoke $r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i13);

        $r5 = (h.ST_Agraph_s) $r4;

        staticinvoke <gen.lib.dotgen.position__c: void keepout_othernodes(h.ST_Agraph_s)>($r5);

        i13 = i13 + 1;

        goto label14;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73cdgjl47ohty2va766evbo4", "keepout_othernodes");

        goto label18;

     label16:
        $r34 := @caughtexception;

     label17:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73cdgjl47ohty2va766evbo4", "keepout_othernodes");

        throw $r34;

     label18:
        return;

        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static void contain_subclust(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, r5;
        smetana.core.Z $r1;
        h.ST_Agsym_s $r2;
        int i0, $i1, i2;
        smetana.core.CArrayOfStar $r3;
        java.lang.Object $r4;
        h.ST_Agnode_s $r6, $r7, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        h.ST_pointf[] $r8, $r13;
        h.ST_pointf $r9, $r14;
        java.lang.Throwable $r16;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("c734mx1638sfqtl7vh7itaxyx", "contain_subclust");

     label1:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_Agsym_s G_margin>;

        i0 = staticinvoke <gen.lib.common.utils__c: int late_int(smetana.core.__ptr__,h.ST_Agsym_s,int,int)>(r0, $r2, 8, 0);

        staticinvoke <gen.lib.dotgen.position__c: void make_lrvn(h.ST_Agraph_s)>(r0);

        i2 = 1;

     label2:
        $i1 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i2 > $i1 goto label3;

        $r3 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r4 = virtualinvoke $r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i2);

        r5 = (h.ST_Agraph_s) $r4;

        staticinvoke <gen.lib.dotgen.position__c: void make_lrvn(h.ST_Agraph_s)>(r5);

        $r6 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r0);

        $r7 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r5);

        $d0 = (double) i0;

        $r8 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r9 = $r8[3];

        $d1 = $r9.<h.ST_pointf: double x>;

        $d2 = $d0 + $d1;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>($r6, $r7, $d2, 0);

        $r11 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_rn(h.ST_Agraph_s)>(r5);

        $r12 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_rn(h.ST_Agraph_s)>(r0);

        $d3 = (double) i0;

        $r13 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r14 = $r13[1];

        $d4 = $r14.<h.ST_pointf: double x>;

        $d5 = $d3 + $d4;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>($r11, $r12, $d5, 0);

        staticinvoke <gen.lib.dotgen.position__c: void contain_subclust(h.ST_Agraph_s)>(r5);

        i2 = i2 + 1;

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c734mx1638sfqtl7vh7itaxyx", "contain_subclust");

        goto label6;

     label4:
        $r16 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c734mx1638sfqtl7vh7itaxyx", "contain_subclust");

        throw $r16;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void separate_subclust(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r5, r25, $r28, r31, r32, r33, r34;
        smetana.core.Z $r1;
        h.ST_Agsym_s $r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        smetana.core.CArrayOfStar $r3, $r6, $r8, $r13, $r19, $r26;
        java.lang.Object $r4, $r7, $r9, $r11, $r14, $r17, $r20, $r27;
        smetana.core.CArray $r10, $r16;
        h.ST_rank_t $r12, $r18;
        h.ST_Agnode_s $r15, $r21, $r22, $r23;
        double $d0;
        java.lang.Throwable $r29;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6oruu1p1b7kxr5moh3kmcmvr3", "separate_subclust");

     label01:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_Agsym_s G_margin>;

        i0 = staticinvoke <gen.lib.common.utils__c: int late_int(smetana.core.__ptr__,h.ST_Agsym_s,int,int)>(r0, $r2, 8, 0);

        i12 = 1;

     label02:
        $i1 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i12 > $i1 goto label03;

        $r26 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r27 = virtualinvoke $r26.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i12);

        $r28 = (h.ST_Agraph_s) $r27;

        staticinvoke <gen.lib.dotgen.position__c: void make_lrvn(h.ST_Agraph_s)>($r28);

        i12 = i12 + 1;

        goto label02;

     label03:
        i13 = 1;

     label04:
        $i2 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i13 > $i2 goto label12;

        i14 = i13 + 1;

     label05:
        $i3 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i14 > $i3 goto label11;

        $r6 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i13);

        r31 = (h.ST_Agraph_s) $r7;

        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r9 = virtualinvoke $r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i14);

        r32 = (h.ST_Agraph_s) $r9;

        $i4 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r31);

        $i5 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r32);

        if $i4 <= $i5 goto label06;

        r25 = r31;

        r31 = r32;

        r32 = r25;

     label06:
        $i6 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r31);

        $i7 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r32);

        if $i6 >= $i7 goto label07;

        goto label10;

     label07:
        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r31);

        $i8 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r32);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>($i8);

        $r12 = (h.ST_rank_t) $r11;

        $r13 = $r12.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r14 = virtualinvoke $r13.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r15 = (h.ST_Agnode_s) $r14;

        $i9 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r15);

        $r16 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r32);

        $i10 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r32);

        $r17 = virtualinvoke $r16.<smetana.core.CArray: java.lang.Object get__(int)>($i10);

        $r18 = (h.ST_rank_t) $r17;

        $r19 = $r18.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r20 = virtualinvoke $r19.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r21 = (h.ST_Agnode_s) $r20;

        $i11 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r21);

        if $i9 >= $i11 goto label08;

        r33 = r31;

        r34 = r32;

        goto label09;

     label08:
        r33 = r32;

        r34 = r31;

     label09:
        $r22 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_rn(h.ST_Agraph_s)>(r33);

        $r23 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r34);

        $d0 = (double) i0;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>($r22, $r23, $d0, 0);

     label10:
        i14 = i14 + 1;

        goto label05;

     label11:
        $r3 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r4 = virtualinvoke $r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i13);

        $r5 = (h.ST_Agraph_s) $r4;

        staticinvoke <gen.lib.dotgen.position__c: void separate_subclust(h.ST_Agraph_s)>($r5);

        i13 = i13 + 1;

        goto label04;

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6oruu1p1b7kxr5moh3kmcmvr3", "separate_subclust");

        goto label15;

     label13:
        $r29 := @caughtexception;

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6oruu1p1b7kxr5moh3kmcmvr3", "separate_subclust");

        throw $r29;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static void pos_clusters(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        int $i0;
        java.lang.Throwable $r1;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8f8gs2zivo4pnd3hmtb9g23x4", "pos_clusters");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if $i0 <= 0 goto label2;

        staticinvoke <gen.lib.dotgen.position__c: void contain_clustnodes(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void keepout_othernodes(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void contain_subclust(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void separate_subclust(h.ST_Agraph_s)>(r0);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8f8gs2zivo4pnd3hmtb9g23x4", "pos_clusters");

        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8f8gs2zivo4pnd3hmtb9g23x4", "pos_clusters");

        throw $r1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void compress_graph(h.ST_Agraph_s)
    {
        h.ST_pointf $r0;
        h.ST_Agraph_s r2;
        h.ST_layout_t $r3;
        h.EN_ratio_t $r4, $r5;
        java.lang.UnsupportedOperationException $r21;
        java.lang.Throwable $r22;

        r2 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("fywsxto7yvl5wa2dfu7u7jj1", "compress_graph");

     label1:
        $r0 = new h.ST_pointf;

        specialinvoke $r0.<h.ST_pointf: void <init>()>();

        $r3 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r2);

        $r5 = $r3.<h.ST_layout_t: h.EN_ratio_t ratio_kind>;

        $r4 = <h.EN_ratio_t: h.EN_ratio_t R_COMPRESS>;

        if $r5 == $r4 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("fywsxto7yvl5wa2dfu7u7jj1", "compress_graph");

        return;

     label3:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("79oeaf0u32si2chjcpas5whjl");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6a2ue1i6kvwvpgapb4z8l27jn");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("a7fgam0j0jm7bar0mblsv3no4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5f3k9yz6btwxc8r5t8exytqqt");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4mvbrmj6dfhaz3burnpac7zsx");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dzkztznjq2andjnjzqh8i5tij");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("div10atae09n36x269sl208r1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ddzjdkqij3y4gq9i3hikpoqvj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e1xij2jh66kyaiikenemo1qza");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5ilmnsqirjhzn5q6s3f9pkgi3");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1nhxkt9jijvhw5gsp2pluh8g8");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("795vpnc8yojryr8b46aidsu69");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dkqac1chvtsaao23vr43xqs5r");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5es2j3xrdatvha5uea2wlqcxp");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r21 = new java.lang.UnsupportedOperationException;

        specialinvoke $r21.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r21;

     label4:
        $r22 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("fywsxto7yvl5wa2dfu7u7jj1", "compress_graph");

        throw $r22;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public static void create_aux_edges(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        java.lang.Throwable $r1;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("b7y0htx4svbhaqb1a12dihlue", "create_aux_edges");

     label1:
        staticinvoke <gen.lib.dotgen.position__c: void allocate_aux_edges(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void make_LR_constraints(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void make_edge_pairs(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void pos_clusters(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.position__c: void compress_graph(h.ST_Agraph_s)>(r0);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("b7y0htx4svbhaqb1a12dihlue", "create_aux_edges");

        goto label4;

     label3:
        $r1 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("b7y0htx4svbhaqb1a12dihlue", "create_aux_edges");

        throw $r1;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void remove_aux_edges(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        h.ST_Agnode_s $r1, r2, r18, r19, r20;
        int $i0, i1;
        h.ST_Agobj_s $r3, $r14;
        h.ST_Agrec_s $r4, $r15;
        h.ST_elist $r5, $r10, $r11, $r12, $r13;
        smetana.core.CArrayOfStar $r6;
        java.lang.Object $r7;
        h.ST_Agedge_s $r8;
        java.lang.Throwable $r16;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("euzeilq92ry8a4tcrij5s52t5", "remove_aux_edges");

     label01:
        r18 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label02:
        if r18 == null goto label05;

        i1 = 0;

     label03:
        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r18);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i1);

        $r8 = (h.ST_Agedge_s) $r7;

        if $r8 == null goto label04;

        $r14 = $r8.<h.ST_Agedge_s: h.ST_Agobj_s base>;

        $r15 = $r14.<h.ST_Agobj_s: h.ST_Agrec_s data>;

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>($r15);

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label03;

     label04:
        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r18);

        staticinvoke <smetana.core.Macro: void free_list(h.ST_elist)>($r10);

        $r11 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r18);

        staticinvoke <smetana.core.Macro: void free_list(h.ST_elist)>($r11);

        $r12 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_out(h.ST_Agnode_s)>(r18);

        staticinvoke <smetana.core.Macro: void ND_out(h.ST_Agnode_s,smetana.core.__struct__)>(r18, $r12);

        $r13 = staticinvoke <smetana.core.Macro: h.ST_elist ND_save_in(h.ST_Agnode_s)>(r18);

        staticinvoke <smetana.core.Macro: void ND_in(h.ST_Agnode_s,smetana.core.__struct__)>(r18, $r13);

        r18 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r18);

        goto label02;

     label05:
        r19 = null;

        r20 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label06:
        if r20 == null goto label11;

        r2 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r20);

        $i0 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r20);

        if $i0 != 2 goto label09;

        if r19 == null goto label07;

        staticinvoke <smetana.core.Macro: void ND_next(h.ST_Agnode_s,h.ST_Agnode_s)>(r19, r2);

        goto label08;

     label07:
        staticinvoke <smetana.core.Macro: void GD_nlist(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r2);

     label08:
        $r3 = r20.<h.ST_Agnode_s: h.ST_Agobj_s base>;

        $r4 = $r3.<h.ST_Agobj_s: h.ST_Agrec_s data>;

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>($r4);

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>(r20);

        goto label10;

     label09:
        r19 = r20;

     label10:
        r20 = r2;

        goto label06;

     label11:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

        staticinvoke <smetana.core.Macro: void ND_prev(h.ST_Agnode_s,h.ST_Agnode_s)>($r1, null);

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("euzeilq92ry8a4tcrij5s52t5", "remove_aux_edges");

        goto label15;

     label13:
        $r16 := @caughtexception;

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("euzeilq92ry8a4tcrij5s52t5", "remove_aux_edges");

        throw $r16;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static void set_xcoords(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        smetana.core.CArray r1;
        int $i0, $i1, $i2, i3, i4;
        java.lang.Object $r2, $r4, $r7;
        h.ST_rank_t $r3, $r5;
        smetana.core.CArrayOfStar $r6;
        h.ST_Agnode_s r8;
        h.ST_pointf $r9;
        double $d0;
        java.lang.Throwable $r10;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1oobmglea9t819y95xeel37h8", "set_xcoords");

     label1:
        r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        i3 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i3 > $i0 goto label5;

        i4 = 0;

     label3:
        $r2 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r3 = (h.ST_rank_t) $r2;

        $i1 = $r3.<h.ST_rank_t: int n>;

        if i4 >= $i1 goto label4;

        $r4 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r5 = (h.ST_rank_t) $r4;

        $r6 = $r5.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        r8 = (h.ST_Agnode_s) $r7;

        $r9 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>(r8);

        $i2 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r8);

        $d0 = (double) $i2;

        $r9.<h.ST_pointf: double x> = $d0;

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r8, i3);

        i4 = i4 + 1;

        goto label3;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1oobmglea9t819y95xeel37h8", "set_xcoords");

        goto label8;

     label6:
        $r10 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1oobmglea9t819y95xeel37h8", "set_xcoords");

        throw $r10;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static int clust_ht(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r1, $r3, $r6, $r16, r23, $r26;
        smetana.core.CArray r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        smetana.core.Z $r4;
        h.ST_Agsym_s $r5;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, $i13;
        java.lang.Object $r7, $r9, $r11, $r13, $r22;
        h.ST_rank_t $r8, $r10, $r12, $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13;
        h.ST_textlabel_t $r15;
        h.ST_pointf[] $r17, $r19;
        h.ST_pointf $r18, $r20;
        smetana.core.CArrayOfStar $r21;
        java.lang.Throwable $r24;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("emtrqv582hdma5aajqtjd76m1", "clust_ht");

     label01:
        $r1 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        r2 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r1);

        i10 = 0;

        $r3 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r0, $r3);

        if $z0 == 0 goto label02;

        i11 = 8;

        goto label03;

     label02:
        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: h.ST_Agsym_s G_margin>;

        i11 = staticinvoke <gen.lib.common.utils__c: int late_int(smetana.core.__ptr__,h.ST_Agsym_s,int,int)>(r0, $r5, 8, 0);

     label03:
        d12 = staticinvoke <smetana.core.Macro: double GD_ht1(h.ST_Agraph_s)>(r0);

        d13 = staticinvoke <smetana.core.Macro: double GD_ht2(h.ST_Agraph_s)>(r0);

        i12 = 1;

     label04:
        $i13 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i12 > $i13 goto label07;

        $r21 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r22 = virtualinvoke $r21.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i12);

        r23 = (h.ST_Agraph_s) $r22;

        $i5 = staticinvoke <gen.lib.dotgen.position__c: int clust_ht(h.ST_Agraph_s)>(r23);

        i10 = i10 | $i5;

        $i6 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r23);

        $i7 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if $i6 != $i7 goto label05;

        $d9 = staticinvoke <smetana.core.Macro: double GD_ht1(h.ST_Agraph_s)>(r23);

        $d10 = (double) i11;

        $d11 = $d9 + $d10;

        d12 = staticinvoke <smetana.core.Macro: double MAX(double,double)>(d12, $d11);

     label05:
        $i8 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r23);

        $i9 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        if $i8 != $i9 goto label06;

        $d6 = staticinvoke <smetana.core.Macro: double GD_ht2(h.ST_Agraph_s)>(r23);

        $d7 = (double) i11;

        $d8 = $d6 + $d7;

        d13 = staticinvoke <smetana.core.Macro: double MAX(double,double)>(d13, $d8);

     label06:
        i12 = i12 + 1;

        goto label04;

     label07:
        $r6 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $z1 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>(r0, $r6);

        if $z1 == 0 goto label08;

        $r15 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t GD_label(h.ST_Agraph_s)>(r0);

        if $r15 == null goto label08;

        i10 = 1;

        $r16 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r0);

        $z2 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>($r16);

        $z3 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z2);

        if $z3 == 0 goto label08;

        $r17 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r18 = $r17[0];

        $d4 = $r18.<h.ST_pointf: double y>;

        d12 = d12 + $d4;

        $r19 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r20 = $r19[2];

        $d5 = $r20.<h.ST_pointf: double y>;

        d13 = d13 + $d5;

     label08:
        staticinvoke <smetana.core.Macro: void GD_ht1(h.ST_Agraph_s,double)>(r0, d12);

        staticinvoke <smetana.core.Macro: void GD_ht2(h.ST_Agraph_s,double)>(r0, d13);

        $r26 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $z4 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>(r0, $r26);

        if $z4 == 0 goto label09;

        $i1 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        $r7 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>($i1);

        $r8 = (h.ST_rank_t) $r7;

        $i2 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        $r9 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>($i2);

        $r10 = (h.ST_rank_t) $r9;

        $d0 = $r10.<h.ST_rank_t: double ht2>;

        $d1 = staticinvoke <smetana.core.Macro: double MAX(double,double)>($d0, d13);

        $r8.<h.ST_rank_t: double ht2> = $d1;

        $i3 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        $r11 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>($i3);

        $r12 = (h.ST_rank_t) $r11;

        $i4 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        $r13 = virtualinvoke r2.<smetana.core.CArray: java.lang.Object get__(int)>($i4);

        $r14 = (h.ST_rank_t) $r13;

        $d2 = $r14.<h.ST_rank_t: double ht1>;

        $d3 = staticinvoke <smetana.core.Macro: double MAX(double,double)>($d2, d12);

        $r12.<h.ST_rank_t: double ht1> = $d3;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("emtrqv582hdma5aajqtjd76m1", "clust_ht");

        return i10;

     label10:
        $r24 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("emtrqv582hdma5aajqtjd76m1", "clust_ht");

        throw $r24;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void set_ycoords(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r67;
        smetana.core.CArray r1;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i12, $i13, $i14, $i15, $i16, i17, i18, i19, $i20, i21, $i22;
        java.lang.Object $r2, $r5, $r8, $r11, $r14, $r33, $r35, $r37, $r39, $r41, $r43, $r46, $r49, $r52, $r55, $r57, $r60, $r63, $r65, $r71, $r73, $r75, $r77, $r81;
        h.ST_rank_t $r3, $r9, $r12, $r34, $r36, $r38, $r40, $r42, $r44, $r50, $r56, $r58, $r64, $r66, $r72, $r74, $r76, $r78;
        smetana.core.CArrayOfStar $r4, $r13, $r45, $r51, $r59, $r62, $r80;
        h.ST_Agnode_s $r6, $r15, $r47, $r53, $r84, $r85, r91, r92;
        h.ST_pointf $r7, $r10, $r16, $r48, $r54, $r88;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d29, d30;
        boolean $z0, $z1;
        h.ST_elist $r61, $r79;
        byte $b10, $b11;
        smetana.core.Z $r69;
        h.ST_Agsym_s $r70;
        h.ST_Agedge_s $r82;
        h.ST_textlabel_t $r86, $r87;
        java.lang.Throwable $r89;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bp8vmol4ncadervcfossysdtd", "set_ycoords");

     label01:
        r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        i17 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label02:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i17 > $i0 goto label14;

        i18 = 0;

     label03:
        $r55 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i17);

        $r56 = (h.ST_rank_t) $r55;

        $i9 = $r56.<h.ST_rank_t: int n>;

        if i18 >= $i9 goto label13;

        $r57 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i17);

        $r58 = (h.ST_rank_t) $r57;

        $r59 = $r58.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r60 = virtualinvoke $r59.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i18);

        r91 = (h.ST_Agnode_s) $r60;

        $d14 = staticinvoke <smetana.core.Macro: double ND_ht(h.ST_Agnode_s)>(r91);

        d29 = $d14 / 2.0;

        $r61 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r91);

        $r62 = $r61.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r62 == null goto label06;

        i19 = 0;

     label04:
        $r79 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r91);

        $r80 = $r79.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r81 = virtualinvoke $r80.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i19);

        $r82 = (h.ST_Agedge_s) $r81;

        if $r82 == null goto label06;

        $r84 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r82);

        $r85 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r82);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r84, $r85);

        if $z1 == 0 goto label05;

        $r86 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>($r82);

        if $r86 == null goto label05;

        $r87 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>($r82);

        $r88 = $r87.<h.ST_textlabel_t: h.ST_pointf dimen>;

        $d25 = $r88.<h.ST_pointf: double y>;

        $d26 = $d25 / 2.0;

        d29 = staticinvoke <smetana.core.Macro: double MAX(double,double)>(d29, $d26);

     label05:
        i19 = i19 + 1;

        goto label04;

     label06:
        $r63 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i17);

        $r64 = (h.ST_rank_t) $r63;

        $d15 = $r64.<h.ST_rank_t: double pht2>;

        $b10 = $d15 cmpg d29;

        if $b10 >= 0 goto label07;

        $r75 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i17);

        $r76 = (h.ST_rank_t) $r75;

        $r76.<h.ST_rank_t: double ht2> = d29;

        $r77 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i17);

        $r78 = (h.ST_rank_t) $r77;

        $r78.<h.ST_rank_t: double pht2> = d29;

     label07:
        $r65 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i17);

        $r66 = (h.ST_rank_t) $r65;

        $d16 = $r66.<h.ST_rank_t: double pht1>;

        $b11 = $d16 cmpg d29;

        if $b11 >= 0 goto label08;

        $r71 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i17);

        $r72 = (h.ST_rank_t) $r71;

        $r72.<h.ST_rank_t: double ht1> = d29;

        $r73 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i17);

        $r74 = (h.ST_rank_t) $r73;

        $r74.<h.ST_rank_t: double pht1> = d29;

     label08:
        $r67 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r91);

        if $r67 == null goto label12;

        if $r67 != r0 goto label09;

        $i20 = 0;

        goto label10;

     label09:
        $r69 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r70 = $r69.<smetana.core.Z: h.ST_Agsym_s G_margin>;

        $i20 = staticinvoke <gen.lib.common.utils__c: int late_int(smetana.core.__ptr__,h.ST_Agsym_s,int,int)>($r67, $r70, 8, 0);

     label10:
        i12 = $i20;

        $i13 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r91);

        $i14 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>($r67);

        if $i13 != $i14 goto label11;

        $d21 = staticinvoke <smetana.core.Macro: double GD_ht2(h.ST_Agraph_s)>($r67);

        $d22 = (double) $i20;

        $d23 = d29 + $d22;

        $d24 = staticinvoke <smetana.core.Macro: double MAX(double,double)>($d21, $d23);

        staticinvoke <smetana.core.Macro: void GD_ht2(h.ST_Agraph_s,double)>($r67, $d24);

     label11:
        $i15 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r91);

        $i16 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>($r67);

        if $i15 != $i16 goto label12;

        $d17 = staticinvoke <smetana.core.Macro: double GD_ht1(h.ST_Agraph_s)>($r67);

        $d18 = (double) i12;

        $d19 = d29 + $d18;

        $d20 = staticinvoke <smetana.core.Macro: double MAX(double,double)>($d17, $d19);

        staticinvoke <smetana.core.Macro: void GD_ht1(h.ST_Agraph_s,double)>($r67, $d20);

     label12:
        i18 = i18 + 1;

        goto label03;

     label13:
        i17 = i17 + 1;

        goto label02;

     label14:
        i1 = staticinvoke <gen.lib.dotgen.position__c: int clust_ht(h.ST_Agraph_s)>(r0);

        d30 = 0.0;

        i21 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r3 = (h.ST_rank_t) $r2;

        $r4 = $r3.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r5 = virtualinvoke $r4.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r6 = (h.ST_Agnode_s) $r5;

        $r7 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>($r6);

        $r8 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r9 = (h.ST_rank_t) $r8;

        $d0 = $r9.<h.ST_rank_t: double ht1>;

        $r7.<h.ST_pointf: double y> = $d0;

     label15:
        i21 = i21 + -1;

        $i2 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        if i21 < $i2 goto label17;

        $i4 = i21 + 1;

        $r33 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>($i4);

        $r34 = (h.ST_rank_t) $r33;

        $d2 = $r34.<h.ST_rank_t: double pht2>;

        $r35 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r36 = (h.ST_rank_t) $r35;

        $d3 = $r36.<h.ST_rank_t: double pht1>;

        $d4 = $d2 + $d3;

        $i5 = staticinvoke <smetana.core.Macro: int GD_ranksep(h.ST_Agraph_s)>(r0);

        $d5 = (double) $i5;

        d6 = $d4 + $d5;

        $i6 = i21 + 1;

        $r37 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>($i6);

        $r38 = (h.ST_rank_t) $r37;

        $d7 = $r38.<h.ST_rank_t: double ht2>;

        $r39 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r40 = (h.ST_rank_t) $r39;

        $d8 = $r40.<h.ST_rank_t: double ht1>;

        $d9 = $d7 + $d8;

        d10 = $d9 + 8.0;

        d11 = staticinvoke <smetana.core.Macro: double MAX(double,double)>(d6, d10);

        $r41 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r42 = (h.ST_rank_t) $r41;

        $i7 = $r42.<h.ST_rank_t: int n>;

        if $i7 <= 0 goto label16;

        $r43 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r44 = (h.ST_rank_t) $r43;

        $r45 = $r44.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r46 = virtualinvoke $r45.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r47 = (h.ST_Agnode_s) $r46;

        $r48 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>($r47);

        $i8 = i21 + 1;

        $r49 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>($i8);

        $r50 = (h.ST_rank_t) $r49;

        $r51 = $r50.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r52 = virtualinvoke $r51.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r53 = (h.ST_Agnode_s) $r52;

        $r54 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>($r53);

        $d12 = $r54.<h.ST_pointf: double y>;

        $d13 = $d12 + d11;

        $r48.<h.ST_pointf: double y> = $d13;

     label16:
        d30 = staticinvoke <smetana.core.Macro: double MAX(double,double)>(d30, d11);

        goto label15;

     label17:
        if i1 == 0 goto label18;

        $z0 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r0);

        if $z0 == 0 goto label18;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bxjqk5nu40mwo1156dicr9tur");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6vy9qfed3u61pmvy12724s9l4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("74f5n6u4x39ngn0gsan7fgzyr");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2pd9g1n9b0746fgt892degls3");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8dils3hlxottsbf2iuapvhqeq");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cw5accmrcan3lqfc789udgcka");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6bxo7bknt38qh9t31zr7p6kie");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("b1ta7vjm5i7swyklhfwy27w35");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("65l8hg0imd48bfdu614k2kylt");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5irf6cp6xdzi2ik033azsbauo");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

     label18:
        $i22 = staticinvoke <smetana.core.Macro: int GD_exact_ranksep(h.ST_Agraph_s)>(r0);

        if $i22 == 0 goto label19;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cyxbyjrdzywkc46nl8lkrngai");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5sd5ltavyp6llt0t2t0xmqwj5");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5zoeqpznt31feqxjcx2rg0o1f");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e6dfx5uesysjaefb0djyfp7f");

     label19:
        r92 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label20:
        if r92 == null goto label21;

        $r10 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>(r92);

        $i3 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r92);

        $r11 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>($i3);

        $r12 = (h.ST_rank_t) $r11;

        $r13 = $r12.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r14 = virtualinvoke $r13.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r15 = (h.ST_Agnode_s) $r14;

        $r16 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>($r15);

        $d1 = $r16.<h.ST_pointf: double y>;

        $r10.<h.ST_pointf: double y> = $d1;

        r92 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r92);

        goto label20;

     label21:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bp8vmol4ncadervcfossysdtd", "set_ycoords");

        goto label24;

     label22:
        $r89 := @caughtexception;

     label23:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bp8vmol4ncadervcfossysdtd", "set_ycoords");

        throw $r89;

     label24:
        return;

        catch java.lang.Throwable from label01 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    public static void dot_compute_bb(h.ST_Agraph_s, h.ST_Agraph_s)
    {
        h.ST_pointf $r0, $r2, $r15, $r22, $r24, $r26, $r31, $r36, $r46, $r52;
        h.ST_Agraph_s r4, $r5, r8, $r29, $r34;
        boolean $z0;
        h.ST_Agnode_s $r6, $r7, $r14, $r21, $r45, r65, r66;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, i11, i12, i13, i14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, d24, d25, d26;
        smetana.core.CArray $r9, $r16, $r37, $r40, $r47, $r53, $r58;
        java.lang.Object $r10, $r13, $r17, $r20, $r28, $r33, $r38, $r41, $r44, $r48, $r51, $r54, $r57, $r59, $r62;
        h.ST_rank_t $r11, $r18, $r39, $r42, $r49, $r55, $r60;
        smetana.core.CArrayOfStar $r12, $r19, $r27, $r32, $r43, $r50, $r56, $r61;
        h.ST_boxf $r23, $r25, $r30, $r35;
        java.lang.Throwable $r63;

        r4 := @parameter0: h.ST_Agraph_s;

        r8 := @parameter1: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9ay2xnnmh407i32pfokujfda5", "dot_compute_bb");

     label01:
        $r0 = new h.ST_pointf;

        specialinvoke $r0.<h.ST_pointf: void <init>()>();

        $r2 = new h.ST_pointf;

        specialinvoke $r2.<h.ST_pointf: void <init>()>();

        $r5 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r4);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r4, $r5);

        if $z0 == 0 goto label12;

        $r0.<h.ST_pointf: double x> = 2.147483647E9;

        $r2.<h.ST_pointf: double x> = -2.147483647E9;

        i11 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r4);

     label02:
        $i4 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r4);

        if i11 > $i4 goto label10;

        $r37 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r4);

        $r38 = virtualinvoke $r37.<smetana.core.CArray: java.lang.Object get__(int)>(i11);

        $r39 = (h.ST_rank_t) $r38;

        i6 = $r39.<h.ST_rank_t: int n>;

        if i6 != 0 goto label03;

        goto label09;

     label03:
        $r40 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r4);

        $r41 = virtualinvoke $r40.<smetana.core.CArray: java.lang.Object get__(int)>(i11);

        $r42 = (h.ST_rank_t) $r41;

        $r43 = $r42.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r44 = virtualinvoke $r43.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r45 = (h.ST_Agnode_s) $r44;

        r65 = $r45;

        if $r45 != null goto label04;

        goto label09;

     label04:
        i12 = 1;

     label05:
        $i7 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r65);

        if $i7 == 0 goto label06;

        if i12 >= i6 goto label06;

        $r58 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r4);

        $r59 = virtualinvoke $r58.<smetana.core.CArray: java.lang.Object get__(int)>(i11);

        $r60 = (h.ST_rank_t) $r59;

        $r61 = $r60.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r62 = virtualinvoke $r61.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i12);

        r65 = (h.ST_Agnode_s) $r62;

        i12 = i12 + 1;

        goto label05;

     label06:
        $i8 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r65);

        if $i8 != 0 goto label09;

        $r46 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>(r65);

        $d15 = $r46.<h.ST_pointf: double x>;

        $d16 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>(r65);

        d23 = $d15 - $d16;

        $d17 = $r0.<h.ST_pointf: double x>;

        $d18 = staticinvoke <smetana.core.Macro: double MIN(double,double)>($d17, d23);

        $r0.<h.ST_pointf: double x> = $d18;

        $r47 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r4);

        $r48 = virtualinvoke $r47.<smetana.core.CArray: java.lang.Object get__(int)>(i11);

        $r49 = (h.ST_rank_t) $r48;

        $r50 = $r49.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $i9 = i6 - 1;

        $r51 = virtualinvoke $r50.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i9);

        r66 = (h.ST_Agnode_s) $r51;

        i13 = i6 - 2;

     label07:
        $i10 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r66);

        if $i10 == 0 goto label08;

        $r53 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r4);

        $r54 = virtualinvoke $r53.<smetana.core.CArray: java.lang.Object get__(int)>(i11);

        $r55 = (h.ST_rank_t) $r54;

        $r56 = $r55.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r57 = virtualinvoke $r56.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i13);

        r66 = (h.ST_Agnode_s) $r57;

        i13 = i13 + -1;

        goto label07;

     label08:
        $r52 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>(r66);

        $d19 = $r52.<h.ST_pointf: double x>;

        $d20 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r66);

        d24 = $d19 + $d20;

        $d21 = $r2.<h.ST_pointf: double x>;

        $d22 = staticinvoke <smetana.core.Macro: double MAX(double,double)>($d21, d24);

        $r2.<h.ST_pointf: double x> = $d22;

     label09:
        i11 = i11 + 1;

        goto label02;

     label10:
        i14 = 1;

     label11:
        $i5 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r4);

        if i14 > $i5 goto label13;

        $r27 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r4);

        $r28 = virtualinvoke $r27.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i14);

        $r29 = (h.ST_Agraph_s) $r28;

        $r30 = staticinvoke <smetana.core.Macro: h.ST_boxf GD_bb(h.ST_Agraph_s)>($r29);

        $r31 = $r30.<h.ST_boxf: h.ST_pointf LL>;

        $d9 = $r31.<h.ST_pointf: double x>;

        d25 = $d9 - 8.0;

        $d10 = $r0.<h.ST_pointf: double x>;

        $d11 = staticinvoke <smetana.core.Macro: double MIN(double,double)>($d10, d25);

        $r0.<h.ST_pointf: double x> = $d11;

        $r32 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r4);

        $r33 = virtualinvoke $r32.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i14);

        $r34 = (h.ST_Agraph_s) $r33;

        $r35 = staticinvoke <smetana.core.Macro: h.ST_boxf GD_bb(h.ST_Agraph_s)>($r34);

        $r36 = $r35.<h.ST_boxf: h.ST_pointf UR>;

        $d12 = $r36.<h.ST_pointf: double x>;

        d26 = $d12 + 8.0;

        $d13 = $r2.<h.ST_pointf: double x>;

        $d14 = staticinvoke <smetana.core.Macro: double MAX(double,double)>($d13, d26);

        $r2.<h.ST_pointf: double x> = $d14;

        i14 = i14 + 1;

        goto label11;

     label12:
        $r6 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r4);

        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r6);

        $d0 = (double) $i0;

        $r0.<h.ST_pointf: double x> = $d0;

        $r7 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_rn(h.ST_Agraph_s)>(r4);

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r7);

        $d1 = (double) $i1;

        $r2.<h.ST_pointf: double x> = $d1;

     label13:
        $r9 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r8);

        $i2 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r4);

        $r10 = virtualinvoke $r9.<smetana.core.CArray: java.lang.Object get__(int)>($i2);

        $r11 = (h.ST_rank_t) $r10;

        $r12 = $r11.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r13 = virtualinvoke $r12.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r14 = (h.ST_Agnode_s) $r13;

        $r15 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>($r14);

        $d2 = $r15.<h.ST_pointf: double y>;

        $d3 = staticinvoke <smetana.core.Macro: double GD_ht1(h.ST_Agraph_s)>(r4);

        $d4 = $d2 - $d3;

        $r0.<h.ST_pointf: double y> = $d4;

        $r16 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r8);

        $i3 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r4);

        $r17 = virtualinvoke $r16.<smetana.core.CArray: java.lang.Object get__(int)>($i3);

        $r18 = (h.ST_rank_t) $r17;

        $r19 = $r18.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r20 = virtualinvoke $r19.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r21 = (h.ST_Agnode_s) $r20;

        $r22 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>($r21);

        $d5 = $r22.<h.ST_pointf: double y>;

        $d6 = staticinvoke <smetana.core.Macro: double GD_ht2(h.ST_Agraph_s)>(r4);

        $d7 = $d5 + $d6;

        $r2.<h.ST_pointf: double y> = $d7;

        $r23 = staticinvoke <smetana.core.Macro: h.ST_boxf GD_bb(h.ST_Agraph_s)>(r4);

        $r24 = $r23.<h.ST_boxf: h.ST_pointf LL>;

        virtualinvoke $r24.<h.ST_pointf: void ___(smetana.core.__struct__)>($r0);

        $r25 = staticinvoke <smetana.core.Macro: h.ST_boxf GD_bb(h.ST_Agraph_s)>(r4);

        $r26 = $r25.<h.ST_boxf: h.ST_pointf UR>;

        virtualinvoke $r26.<h.ST_pointf: void ___(smetana.core.__struct__)>($r2);

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9ay2xnnmh407i32pfokujfda5", "dot_compute_bb");

        goto label17;

     label15:
        $r63 := @caughtexception;

     label16:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9ay2xnnmh407i32pfokujfda5", "dot_compute_bb");

        throw $r63;

     label17:
        return;

        catch java.lang.Throwable from label01 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public static void rec_bb(h.ST_Agraph_s, h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, r1, $r4;
        int $i0, i1;
        smetana.core.CArrayOfStar $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r5;

        r0 := @parameter0: h.ST_Agraph_s;

        r1 := @parameter1: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dlbpiimh9g9ff9w7wjoabf817", "rec_bb");

     label1:
        i1 = 1;

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i1 > $i0 goto label3;

        $r2 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i1);

        $r4 = (h.ST_Agraph_s) $r3;

        staticinvoke <gen.lib.dotgen.position__c: void rec_bb(h.ST_Agraph_s,h.ST_Agraph_s)>($r4, r1);

        i1 = i1 + 1;

        goto label2;

     label3:
        staticinvoke <gen.lib.dotgen.position__c: void dot_compute_bb(h.ST_Agraph_s,h.ST_Agraph_s)>(r0, r1);

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dlbpiimh9g9ff9w7wjoabf817", "rec_bb");

        goto label6;

     label5:
        $r5 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dlbpiimh9g9ff9w7wjoabf817", "rec_bb");

        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public static transient java.lang.Object adjustAspectRatio(java.lang.Object[])
    {
        java.lang.UnsupportedOperationException $r21;
        java.lang.Object[] r22;

        r22 := @parameter0: java.lang.Object[];

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ezldb6r0csirv1fmkq5itw1v2");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("erg9i1970wdri39osu8hx2a6e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7rtldqefvdgcf4u50kulbxtvn");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cve2on8gll5i0vomy8lnwhai2");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6z0q1m3yc6o11ejsa59eghqag");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2uealcdkjdgg8ne1cijkbagpu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("96mqnzcfbfghxkxkn1x8kdh8i");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6gq7uj15zh138zyae50c8nh2z");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e1443w2cx49ogpsf5m59zy4fq");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5awa0x1pxpta5wou27bzrtvoc");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5xdo0sx20rmxgmdkrm1giaige");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("du5ztjo6nfo54ailmk1tqs05b");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1nyzbeonram6636b1w955bypn");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("757eq4638npmb5w5e39iemxfo");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2di5wqm6caczzl6bvqe35ry8y");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("29wdml7g4931q8kgah8hgwjd0");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r21 = new java.lang.UnsupportedOperationException;

        specialinvoke $r21.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r21;
    }

    public static void set_aspect(h.ST_Agraph_s, h.ST_aspect_t)
    {
        h.ST_point $r0;
        h.ST_Agraph_s r2;
        int $i0;
        h.ST_aspect_t r3;
        java.lang.Object[] $r4;
        h.ST_layout_t $r6;
        h.EN_ratio_t $r7, $r8;
        java.lang.Throwable $r76;

        r2 := @parameter0: h.ST_Agraph_s;

        r3 := @parameter1: h.ST_aspect_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7effq6z6ur101wrch6ttozr26", "set_aspect");

     label1:
        $r0 = new h.ST_point;

        specialinvoke $r0.<h.ST_point: void <init>()>();

        staticinvoke <gen.lib.dotgen.position__c: void rec_bb(h.ST_Agraph_s,h.ST_Agraph_s)>(r2, r2);

        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r2);

        if $i0 <= 0 goto label2;

        $r6 = staticinvoke <smetana.core.Macro: h.ST_layout_t GD_drawing(h.ST_Agraph_s)>(r2);

        $r8 = $r6.<h.ST_layout_t: h.EN_ratio_t ratio_kind>;

        $r7 = <h.EN_ratio_t: h.EN_ratio_t R_NONE>;

        if $r8 == $r7 goto label2;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5wbmy4x78flo2ztfabki9lyjf");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("catd6eu5oc282ln95k9zz52f3");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("21zvq2qx1j34j1i1879zyhzpj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d55uzald1tvs7xodnua67pxv6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("47s1klx0pfzda4e311w53ou7e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3tx1mj7j0rqw33y24a0gu4ali");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4ct8ztqxnsskgphsp1v3aw5ec");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8v772n1u4wqlmskqfswlzcz2o");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8mtmgag5dxj8ttlcabbpd865p");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9352ql3e58qs4fzapgjfrms2s");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bxtk5e5ls8qsd36eucvhufg9y");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2atgu691bmn6h9jvk8lve5qzc");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1zx5etcjofceqjvogfn8urkdj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7ezqjon4u21dwg4qvxssrnwfc");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dao0fnoi65upcdtr9csqhhy41");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6q044im7742qhglc4553noina");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6ifkww34s7php908n9wg0oiju");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6faiikvxwdge2ydblv90976hb");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5xkzvdrdnfd5afhhxgajbywya");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cvkvyq93xp1itpomhj1r2xlzy");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("capfpf4tncicsp81elmwvf0l");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7sdzyzqj65rbq6edfgf5x6xht");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d86r93g8nz9a1kfzgi7f8j8nh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("emwaipsi6kyqbpk2y26k3cxfw");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1s91x56ftedjsc3m32dqgspqn");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dkxvw03k2gg9anv4dbze06axd");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6eq5kf0bj692bokt0bixy1ixh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c48w89y9jw5baxqqucmiyfha7");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7ezqjon4u21dwg4qvxssrnwfc");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dao0fnoi65upcdtr9csqhhy41");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6q044im7742qhglc4553noina");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("akfs904fsk7cyl8wbv0x7fnvz");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1ewqbc4kglc2kg1n13euxrxzh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6fmkpg9ypaxceugi24gklvdra");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8mskb0mqou89myfbiihsjpbg6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("a2jzgqbpoanzqdqc7vjk32vmz");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6np8qfg5qnlaypikhw0bdx84j");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("272bmuv1row7l9tla5bhot840");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("738mi6h8ef0itznt34ngxe25o");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("b5qs3ho2fcywk3sd5cw3m88kw");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d7deewhp6akdb13j7ry364hbd");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("fpejwrlknxizaxxibhuyaxdt");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("douwz2voka0puoeooqjn8kijk");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7u9yvuqazzo19geppiphd9rfh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("apqq3m2rezfl96zbvk7lut02");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8po0oizki4figodjv9xku16gq");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("175pyfe8j8mbhdwvrbx3gmew9");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("84c3pp9xgnii11clyyxblqmy6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1tr1b9rp1b00pcafss87kadfe");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6to1esmb8qfrhzgtr7jdqleja");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("csvnhx5mo535o6ue1tg3ktjhs");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bh2d68e9s7cr7k1bl0h9fmr9a");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("b8symsgdtoq84y3j1151pv0g4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bi983gfofc0blj8r4yetj14kb");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("69pmocxfvmk0urni4fg0x4na5");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cyt895z1pa5arxz4d1kv0hqgq");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("crtcqz91ff5l8ntjbne40b5x4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("brs6nych5z9m0a75ixbe5l80o");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cpe0pjsilppgrp2ofysn4y54w");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8f0d3etdet1pk8ikvltmz5h2s");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

     label2:
        if r3 == null goto label3;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r2;

        $r4[1] = r3;

        staticinvoke <gen.lib.dotgen.position__c: java.lang.Object adjustAspectRatio(java.lang.Object[])>($r4);

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7effq6z6ur101wrch6ttozr26", "set_aspect");

        goto label6;

     label4:
        $r76 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7effq6z6ur101wrch6ttozr26", "set_aspect");

        throw $r76;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void make_leafslots(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        smetana.core.CArray $r1, $r4, $r7, $r10, $r15, $r18, $r21, $r25, $r30, $r34;
        java.lang.Object $r2, $r5, $r8, $r11, $r16, $r19, $r22, $r26, $r29, $r31, $r35, $r38;
        h.ST_rank_t $r3, $r6, $r9, $r12, $r17, $r20, $r23, $r27, $r32, $r36;
        smetana.core.CArrayOfStar $r13, $r14, $r24, $r28, $r33, $r37;
        java.lang.Throwable $r39;
        h.ST_Agnode_s r41, r42;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1lejhh3evsa10auyj7cgqj8ub", "make_leafslots");

     label01:
        i8 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label02:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i8 > $i0 goto label11;

        i9 = 0;

        i10 = 0;

     label03:
        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r3 = (h.ST_rank_t) $r2;

        $i1 = $r3.<h.ST_rank_t: int n>;

        if i10 >= $i1 goto label06;

        $r34 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r35 = virtualinvoke $r34.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r36 = (h.ST_rank_t) $r35;

        $r37 = $r36.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r38 = virtualinvoke $r37.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i10);

        r41 = (h.ST_Agnode_s) $r38;

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r41, i9);

        $i6 = staticinvoke <smetana.core.Macro: int ND_ranktype(h.ST_Agnode_s)>(r41);

        if $i6 != 6 goto label04;

        $i7 = staticinvoke <smetana.core.Macro: int ND_UF_size(h.ST_Agnode_s)>(r41);

        i9 = i9 + $i7;

        goto label05;

     label04:
        i9 = i9 + 1;

     label05:
        i10 = i10 + 1;

        goto label03;

     label06:
        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r6 = (h.ST_rank_t) $r5;

        $i2 = $r6.<h.ST_rank_t: int n>;

        if i9 > $i2 goto label07;

        goto label10;

     label07:
        $r7 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r8 = virtualinvoke $r7.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r9 = (h.ST_rank_t) $r8;

        $i3 = i9 + 1;

        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r12 = (h.ST_rank_t) $r11;

        $r13 = $r12.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r14 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar REALLOC(int,smetana.core.CArrayOfStar,java.lang.Class)>($i3, $r13, class "Lh/ST_Agnode_s;");

        $r9.<h.ST_rank_t: smetana.core.CArrayOfStar v> = $r14;

        $r15 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r16 = virtualinvoke $r15.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r17 = (h.ST_rank_t) $r16;

        $i4 = $r17.<h.ST_rank_t: int n>;

        i11 = $i4 - 1;

     label08:
        if i11 < 0 goto label09;

        $r25 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r26 = virtualinvoke $r25.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r27 = (h.ST_rank_t) $r26;

        $r28 = $r27.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r29 = virtualinvoke $r28.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i11);

        r42 = (h.ST_Agnode_s) $r29;

        $r30 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r31 = virtualinvoke $r30.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r32 = (h.ST_rank_t) $r31;

        $r33 = $r32.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $i5 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r42);

        virtualinvoke $r33.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i5, r42);

        i11 = i11 + -1;

        goto label08;

     label09:
        $r18 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r19 = virtualinvoke $r18.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r20 = (h.ST_rank_t) $r19;

        $r20.<h.ST_rank_t: int n> = i9;

        $r21 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r22 = virtualinvoke $r21.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r23 = (h.ST_rank_t) $r22;

        $r24 = $r23.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        virtualinvoke $r24.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i9, null);

     label10:
        i8 = i8 + 1;

        goto label02;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1lejhh3evsa10auyj7cgqj8ub", "make_leafslots");

        goto label14;

     label12:
        $r39 := @caughtexception;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1lejhh3evsa10auyj7cgqj8ub", "make_leafslots");

        throw $r39;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static transient java.lang.Object do_leaves(java.lang.Object[])
    {
        java.lang.UnsupportedOperationException $r34;
        java.lang.Object[] r35;

        r35 := @parameter0: java.lang.Object[];

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5nmyuqyhfqfwbmgdj5aot9fp4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("erg9i1970wdri39osu8hx2a6e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2bs0wcp6367dz1o5x166ec7l8");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4bxv0pw87c31sbbz6x6s1cq9d");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cjx5v6hayed3q8eeub1cggqca");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5gypxs09iuryx5a2eho9lgdcp");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("b9upgllg8zjx49090hr3afv91");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("a7fgam0j0jm7bar0mblsv3no4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9m0hiwybw3dr0lcxmgq833heo");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ev0phf24gpqz3xtvtueq72f7g");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("90r9xqe4faj7b1g8907ord1x3");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("66ue8mvk3axhgbkcg3xqo94tb");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9lq5udq73fgfeqyqsxw6i3pgm");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4vp9ny4udt1jcmibfgpwgrnqo");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3ml0tasns5tz6d5xc2xdb6nc");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e2y71fdc15yxylowp6ohlal9a");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ew4udmdawt257gbk5kzmi1n1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d2r94m7xk4qa9hn6s2td5nb6h");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5xk9d4ra447xucksge6c9mgos");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4dqun0n52lcyerkebva2hxh15");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6owoaz61uf3928omhuf3rqjoa");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4lbkem8hb4jy3gdg6nt3cbtl9");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4vp9ny4udt1jcmibfgpwgrnqo");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e20lm4qtccvgsfq5fzjv6sjyl");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("38a98cy0214odvsa98hgyce8q");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9j9o79r2bdc6npidu38aq0cym");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6wbwzuqqh5vxume7ga2kuejcf");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dv9vv9pfcd3cibfjn258toxyv");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r34 = new java.lang.UnsupportedOperationException;

        specialinvoke $r34.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r34;
    }

    public static boolean ports_eq(h.ST_Agedge_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, r2;
        h.ST_port $r1, $r3, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r16, $r18, $r20;
        boolean $z0, $z1, $z3, $z4, $z5;
        h.ST_pointf $r5, $r7, $r10, $r12, $r15, $r17, $r19, $r21;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        byte $b0, $b1, $b2, $b3;
        java.lang.Throwable $r22;

        r0 := @parameter0: h.ST_Agedge_s;

        r2 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("alpljm8o6nsam95ly6leelnbp", "ports_eq");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r0);

        $z0 = $r1.<h.ST_port: boolean defined>;

        $r3 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r2);

        $z1 = $r3.<h.ST_port: boolean defined>;

        if $z0 != $z1 goto label6;

        $r4 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r0);

        $r5 = $r4.<h.ST_port: h.ST_pointf p>;

        $d0 = $r5.<h.ST_pointf: double x>;

        $r6 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r2);

        $r7 = $r6.<h.ST_port: h.ST_pointf p>;

        $d1 = $r7.<h.ST_pointf: double x>;

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label2;

        $r18 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r0);

        $r19 = $r18.<h.ST_port: h.ST_pointf p>;

        $d6 = $r19.<h.ST_pointf: double y>;

        $r20 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r2);

        $r21 = $r20.<h.ST_port: h.ST_pointf p>;

        $d7 = $r21.<h.ST_pointf: double y>;

        $b3 = $d6 cmpl $d7;

        if $b3 == 0 goto label3;

     label2:
        $r8 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r0);

        $z3 = $r8.<h.ST_port: boolean defined>;

        if $z3 != 0 goto label6;

     label3:
        $r9 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r0);

        $r10 = $r9.<h.ST_port: h.ST_pointf p>;

        $d2 = $r10.<h.ST_pointf: double x>;

        $r11 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r2);

        $r12 = $r11.<h.ST_port: h.ST_pointf p>;

        $d3 = $r12.<h.ST_pointf: double x>;

        $b1 = $d2 cmpl $d3;

        if $b1 != 0 goto label4;

        $r14 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r0);

        $r15 = $r14.<h.ST_port: h.ST_pointf p>;

        $d4 = $r15.<h.ST_pointf: double y>;

        $r16 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r2);

        $r17 = $r16.<h.ST_port: h.ST_pointf p>;

        $d5 = $r17.<h.ST_pointf: double y>;

        $b2 = $d4 cmpl $d5;

        if $b2 == 0 goto label5;

     label4:
        $r13 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r0);

        $z4 = $r13.<h.ST_port: boolean defined>;

        if $z4 != 0 goto label6;

     label5:
        $z5 = 1;

        goto label7;

     label6:
        $z5 = 0;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("alpljm8o6nsam95ly6leelnbp", "ports_eq");

        return $z5;

     label8:
        $r22 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("alpljm8o6nsam95ly6leelnbp", "ports_eq");

        throw $r22;

        catch java.lang.Throwable from label1 to label7 with label8;
    }

    public static void expand_leaves(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        smetana.core.__ptr__ $r1, $r2, $r16, $r19;
        h.ST_elist $r3, $r5, $r13;
        smetana.core.CArrayOfStar $r4, $r6;
        java.lang.Object $r7;
        h.ST_Agedge_s $r8, r12;
        h.ST_Agnode_s $r10, $r11, r23;
        int $i0, $i1, $i2, i4;
        boolean $z0;
        java.lang.Object[] $r15, $r18;
        java.lang.Throwable $r21;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("cfotmdif5xv7n6oauyvzv0qwa", "expand_leaves");

     label01:
        staticinvoke <gen.lib.dotgen.position__c: void make_leafslots(h.ST_Agraph_s)>(r0);

        r23 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label02:
        if r23 == null goto label10;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ ND_inleaf(h.ST_Agnode_s)>(r23);

        if $r1 == null goto label03;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r0;

        $r19 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ ND_inleaf(h.ST_Agnode_s)>(r23);

        $r18[1] = $r19;

        staticinvoke <gen.lib.dotgen.position__c: java.lang.Object do_leaves(java.lang.Object[])>($r18);

     label03:
        $r2 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ ND_outleaf(h.ST_Agnode_s)>(r23);

        if $r2 == null goto label04;

        $r15 = newarray (java.lang.Object)[2];

        $r15[0] = r0;

        $r16 = staticinvoke <smetana.core.Macro: smetana.core.__ptr__ ND_outleaf(h.ST_Agnode_s)>(r23);

        $r15[1] = $r16;

        staticinvoke <gen.lib.dotgen.position__c: java.lang.Object do_leaves(java.lang.Object[])>($r15);

     label04:
        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r23);

        $r4 = $r3.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r4 == null goto label09;

        i4 = 0;

     label05:
        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r23);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        $r8 = (h.ST_Agedge_s) $r7;

        if $r8 == null goto label09;

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r8);

        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r10);

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r8);

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r11);

        $i2 = $i0 - $i1;

        if $i2 != 0 goto label06;

        goto label08;

     label06:
        r12 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_orig(h.ST_Agedge_s)>($r8);

        $z0 = staticinvoke <gen.lib.dotgen.position__c: boolean ports_eq(h.ST_Agedge_s,h.ST_Agedge_s)>($r8, r12);

        if $z0 != 0 goto label08;

        staticinvoke <smetana.core.Macro: void UNSURE_ABOUT(java.lang.String)>("zapinlist(&(ND_other(n)), e);");

        $r13 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r23);

        staticinvoke <gen.lib.dotgen.fastgr__c: void zapinlist(h.ST_elist,h.ST_Agedge_s)>($r13, $r8);

        if $i2 != 1 goto label07;

        staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s fast_edge(h.ST_Agedge_s)>($r8);

     label07:
        i4 = i4 + -1;

     label08:
        i4 = i4 + 1;

        goto label05;

     label09:
        r23 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r23);

        goto label02;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cfotmdif5xv7n6oauyvzv0qwa", "expand_leaves");

        goto label13;

     label11:
        $r21 := @caughtexception;

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cfotmdif5xv7n6oauyvzv0qwa", "expand_leaves");

        throw $r21;

     label13:
        return;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static void make_lrvn(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r2, $r4, $r7, $r8;
        h.ST_Agnode_s $r1, r3, r5;
        h.ST_textlabel_t $r6;
        boolean $z0, $z1, $z2;
        h.ST_pointf[] $r9, $r11;
        h.ST_pointf $r10, $r12;
        double $d0, $d1, $d2;
        int $i0, $i1, i2;
        java.lang.Throwable $r14;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("d4b57ugpwxy567pfmxn14ed8d", "make_lrvn");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r0);

        if $r1 == null goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d4b57ugpwxy567pfmxn14ed8d", "make_lrvn");

        return;

     label3:
        $r2 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        r3 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s virtual_node(h.ST_Agraph_s)>($r2);

        staticinvoke <smetana.core.Macro: void ND_node_type(h.ST_Agnode_s,int)>(r3, 2);

        $r4 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        r5 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s virtual_node(h.ST_Agraph_s)>($r4);

        staticinvoke <smetana.core.Macro: void ND_node_type(h.ST_Agnode_s,int)>(r5, 2);

        $r6 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t GD_label(h.ST_Agraph_s)>(r0);

        if $r6 == null goto label4;

        $r7 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>(r0, $r7);

        if $z0 == 0 goto label4;

        $r8 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r0);

        $z1 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>($r8);

        $z2 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z1);

        if $z2 == 0 goto label4;

        $r9 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r10 = $r9[0];

        $d0 = $r10.<h.ST_pointf: double x>;

        $i0 = (int) $d0;

        $r11 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r12 = $r11[2];

        $d1 = $r12.<h.ST_pointf: double x>;

        $i1 = (int) $d1;

        i2 = staticinvoke <smetana.core.Macro: int MAX(int,int)>($i0, $i1);

        $d2 = (double) i2;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r3, r5, $d2, 0);

     label4:
        staticinvoke <smetana.core.Macro: void GD_ln(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r3);

        staticinvoke <smetana.core.Macro: void GD_rn(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r5);

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d4b57ugpwxy567pfmxn14ed8d", "make_lrvn");

        goto label8;

     label6:
        $r14 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d4b57ugpwxy567pfmxn14ed8d", "make_lrvn");

        throw $r14;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static void contain_nodes(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        smetana.core.Z $r1;
        h.ST_Agsym_s $r2;
        int i0, $i1, $i2, $i3, $i4, i5;
        h.ST_Agnode_s r3, r4, r32, r33;
        smetana.core.CArray $r5, $r8, $r16, $r20;
        java.lang.Object $r6, $r9, $r12, $r17, $r21, $r23;
        h.ST_rank_t $r7, $r10, $r18, $r22;
        smetana.core.CArrayOfStar $r11, $r19;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        h.ST_pointf[] $r13, $r24;
        h.ST_pointf $r14, $r25;
        java.lang.Throwable $r30;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("daz786541idcxnywckcbncazb", "contain_nodes");

     label1:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_Agsym_s G_margin>;

        i0 = staticinvoke <gen.lib.common.utils__c: int late_int(smetana.core.__ptr__,h.ST_Agsym_s,int,int)>(r0, $r2, 8, 0);

        staticinvoke <gen.lib.dotgen.position__c: void make_lrvn(h.ST_Agraph_s)>(r0);

        r3 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_ln(h.ST_Agraph_s)>(r0);

        r4 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_rn(h.ST_Agraph_s)>(r0);

        i5 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label2:
        $i1 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i5 > $i1 goto label6;

        $r5 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r6 = virtualinvoke $r5.<smetana.core.CArray: java.lang.Object get__(int)>(i5);

        $r7 = (h.ST_rank_t) $r6;

        $i2 = $r7.<h.ST_rank_t: int n>;

        if $i2 != 0 goto label3;

        goto label5;

     label3:
        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r9 = virtualinvoke $r8.<smetana.core.CArray: java.lang.Object get__(int)>(i5);

        $r10 = (h.ST_rank_t) $r9;

        $r11 = $r10.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r12 = virtualinvoke $r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r32 = (h.ST_Agnode_s) $r12;

        if r32 != null goto label4;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1f2esoodtcrdhljk1cq1klyao");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7w6lv4ywtczwz2y1mg0p3jdav");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6hqli9m8yickz1ox1qfgtdbnd");

     label4:
        $d0 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>(r32);

        $d1 = (double) i0;

        $d2 = $d0 + $d1;

        $r13 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r14 = $r13[3];

        $d3 = $r14.<h.ST_pointf: double x>;

        $d4 = $d2 + $d3;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r3, r32, $d4, 0);

        $r16 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r17 = virtualinvoke $r16.<smetana.core.CArray: java.lang.Object get__(int)>(i5);

        $r18 = (h.ST_rank_t) $r17;

        $r19 = $r18.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r20 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r21 = virtualinvoke $r20.<smetana.core.CArray: java.lang.Object get__(int)>(i5);

        $r22 = (h.ST_rank_t) $r21;

        $i3 = $r22.<h.ST_rank_t: int n>;

        $i4 = $i3 - 1;

        $r23 = virtualinvoke $r19.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i4);

        r33 = (h.ST_Agnode_s) $r23;

        $d5 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r33);

        $d6 = (double) i0;

        $d7 = $d5 + $d6;

        $r24 = staticinvoke <smetana.core.Macro: h.ST_pointf[] GD_border(h.ST_Agraph_s)>(r0);

        $r25 = $r24[1];

        $d8 = $r25.<h.ST_pointf: double x>;

        $d9 = $d7 + $d8;

        staticinvoke <gen.lib.dotgen.position__c: h.ST_Agedge_s make_aux_edge(h.ST_Agnode_s,h.ST_Agnode_s,double,int)>(r33, r4, $d9, 0);

     label5:
        i5 = i5 + 1;

        goto label2;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("daz786541idcxnywckcbncazb", "contain_nodes");

        goto label9;

     label7:
        $r30 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("daz786541idcxnywckcbncazb", "contain_nodes");

        throw $r30;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
