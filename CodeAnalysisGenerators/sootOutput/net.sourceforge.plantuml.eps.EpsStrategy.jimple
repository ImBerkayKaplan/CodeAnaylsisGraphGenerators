public final enum class net.sourceforge.plantuml.eps.EpsStrategy extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.eps.EpsStrategy VERY_SIMPLE;
    public static final enum net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO;
    public static final enum net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO_AND_TEXT;
    private static final net.sourceforge.plantuml.eps.EpsStrategy[] $VALUES;

    public static net.sourceforge.plantuml.eps.EpsStrategy[] values()
    {
        net.sourceforge.plantuml.eps.EpsStrategy[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.eps.EpsStrategy[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.eps.EpsStrategy valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.eps.EpsStrategy $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/eps/EpsStrategy;", r0);

        $r2 = (net.sourceforge.plantuml.eps.EpsStrategy) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.eps.EpsStrategy r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.eps.EpsStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public net.sourceforge.plantuml.eps.EpsGraphics creatEpsGraphics()
    {
        net.sourceforge.plantuml.eps.EpsStrategy r0, $r1, $r2, $r3;
        java.lang.IllegalArgumentException $r4;
        net.sourceforge.plantuml.eps.EpsGraphicsMacroAndText $r5;
        net.sourceforge.plantuml.eps.EpsGraphicsMacro $r6;
        net.sourceforge.plantuml.eps.EpsGraphics $r7;

        r0 := @this: net.sourceforge.plantuml.eps.EpsStrategy;

        $r1 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy VERY_SIMPLE>;

        if r0 != $r1 goto label1;

        $r7 = new net.sourceforge.plantuml.eps.EpsGraphics;

        specialinvoke $r7.<net.sourceforge.plantuml.eps.EpsGraphics: void <init>()>();

        return $r7;

     label1:
        $r2 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO>;

        if r0 != $r2 goto label2;

        $r6 = new net.sourceforge.plantuml.eps.EpsGraphicsMacro;

        specialinvoke $r6.<net.sourceforge.plantuml.eps.EpsGraphicsMacro: void <init>()>();

        return $r6;

     label2:
        $r3 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO_AND_TEXT>;

        if r0 != $r3 goto label3;

        $r5 = new net.sourceforge.plantuml.eps.EpsGraphicsMacroAndText;

        specialinvoke $r5.<net.sourceforge.plantuml.eps.EpsGraphicsMacroAndText: void <init>()>();

        return $r5;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    public static net.sourceforge.plantuml.eps.EpsStrategy getDefault2()
    {
        net.sourceforge.plantuml.eps.EpsStrategy $r0;

        $r0 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO>;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.eps.EpsStrategy $r0, $r1, $r2, $r4, $r5, $r6;
        net.sourceforge.plantuml.eps.EpsStrategy[] $r3;

        $r0 = new net.sourceforge.plantuml.eps.EpsStrategy;

        specialinvoke $r0.<net.sourceforge.plantuml.eps.EpsStrategy: void <init>(java.lang.String,int)>("VERY_SIMPLE", 0);

        <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy VERY_SIMPLE> = $r0;

        $r1 = new net.sourceforge.plantuml.eps.EpsStrategy;

        specialinvoke $r1.<net.sourceforge.plantuml.eps.EpsStrategy: void <init>(java.lang.String,int)>("WITH_MACRO", 1);

        <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO> = $r1;

        $r2 = new net.sourceforge.plantuml.eps.EpsStrategy;

        specialinvoke $r2.<net.sourceforge.plantuml.eps.EpsStrategy: void <init>(java.lang.String,int)>("WITH_MACRO_AND_TEXT", 2);

        <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO_AND_TEXT> = $r2;

        $r3 = newarray (net.sourceforge.plantuml.eps.EpsStrategy)[3];

        $r4 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy VERY_SIMPLE>;

        $r3[0] = $r4;

        $r5 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO>;

        $r3[1] = $r5;

        $r6 = <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy WITH_MACRO_AND_TEXT>;

        $r3[2] = $r6;

        <net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsStrategy[] $VALUES> = $r3;

        return;
    }
}
