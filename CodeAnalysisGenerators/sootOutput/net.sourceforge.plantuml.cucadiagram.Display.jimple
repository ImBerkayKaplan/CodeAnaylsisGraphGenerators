public class net.sourceforge.plantuml.cucadiagram.Display extends java.lang.Object implements java.lang.Iterable
{
    private final java.util.List displayData;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment;
    private final boolean isNull;
    private final net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode;
    public static final net.sourceforge.plantuml.cucadiagram.Display NULL;
    public static final net.sourceforge.plantuml.command.regex.Pattern2 patternStereotype;

    public net.sourceforge.plantuml.cucadiagram.Display withoutStereotypeIfNeeded(net.sourceforge.plantuml.style.Style)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0, $r1, $r8, $r18;
        net.sourceforge.plantuml.style.Style r2;
        net.sourceforge.plantuml.style.PName $r3;
        net.sourceforge.plantuml.style.Value $r4;
        boolean z0, $z1, $z2, $z4, $z5;
        java.util.ArrayList $r5;
        java.util.List $r6, $r13;
        net.sourceforge.plantuml.creole.CreoleMode $r9;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r10;
        java.util.Iterator r12;
        java.lang.Object $r14;
        java.lang.CharSequence r15;
        net.sourceforge.plantuml.style.StyleSignature $r16;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r17;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter0: net.sourceforge.plantuml.style.Style;

        $r1 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        if r0 != $r1 goto label1;

        $r18 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        return $r18;

     label1:
        $r3 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName ShowStereotype>;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r3);

        z0 = interfaceinvoke $r4.<net.sourceforge.plantuml.style.Value: boolean asBoolean()>();

        if z0 == 0 goto label2;

        return r0;

     label2:
        $r5 = new java.util.ArrayList;

        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        $r8 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r10 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r8.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r10, $z1, $r9);

        r12 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r14 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.CharSequence) $r14;

        $z4 = r15 instanceof net.sourceforge.plantuml.cucadiagram.Stereotype;

        if $z4 == 0 goto label4;

        $r16 = virtualinvoke r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.StyleSignature getSignature()>();

        $r17 = (net.sourceforge.plantuml.cucadiagram.Stereotype) r15;

        $z5 = virtualinvoke $r16.<net.sourceforge.plantuml.style.StyleSignature: boolean match(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r17);

        if $z5 == 0 goto label4;

        interfaceinvoke r12.<java.util.Iterator: void remove()>();

     label4:
        goto label3;

     label5:
        $r13 = $r8.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        interfaceinvoke $r13.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        return $r8;
    }

    public net.sourceforge.plantuml.cucadiagram.Stereotype getStereotypeIfAny()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.CharSequence r4;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.CharSequence) $r3;

        $z1 = r4 instanceof net.sourceforge.plantuml.cucadiagram.Stereotype;

        if $z1 == 0 goto label2;

        $r5 = (net.sourceforge.plantuml.cucadiagram.Stereotype) r4;

        return $r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    public net.sourceforge.plantuml.cucadiagram.Display replaceBackslashT()
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0, r1;
        net.sourceforge.plantuml.creole.CreoleMode $r2;
        java.util.List $r4, $r5, $r9;
        int $i0, i1;
        java.lang.Object $r6;
        java.lang.CharSequence r7;
        java.lang.String $r8, $r10, $r11;
        boolean $z0;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r2);

        i1 = 0;

     label1:
        $r4 = $r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r5 = r1.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i1);

        r7 = (java.lang.CharSequence) $r6;

        $r8 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean contains(java.lang.CharSequence)>("\\t");

        if $z0 == 0 goto label2;

        $r9 = $r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r10 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\t", "\t");

        interfaceinvoke $r9.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r11);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.Display replace(java.lang.String, java.lang.String)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Display r2, $r5;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.creole.CreoleMode $r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;
        java.lang.Object $r8;
        java.lang.String $r9, r10, $r11, r12;
        java.lang.CharSequence r13;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r10 := @parameter0: java.lang.String;

        r12 := @parameter1: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.CharSequence) $r8;

        $r9 = interfaceinvoke r13.<java.lang.CharSequence: java.lang.String toString()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean contains(java.lang.CharSequence)>(r10);

        if $z2 == 0 goto label2;

        $r11 = interfaceinvoke r13.<java.lang.CharSequence: java.lang.String toString()>();

        r13 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(r10, r12);

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r13);

        goto label1;

     label3:
        $r5 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r7 = r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z1 = r2.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r6 = r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r5.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r0, $r7, $z1, $r6);

        return $r5;
    }

    public boolean isWhite()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        java.util.List $r1, $r2, $r3, $r4;
        int $i0, $i1;
        java.lang.Object $r5;
        java.lang.CharSequence $r6;
        java.lang.String $r7;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 == 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (java.lang.CharSequence) $r5;

        $r7 = interfaceinvoke $r6.<java.lang.CharSequence: java.lang.String toString()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean matches(java.lang.String)>("\\s*");

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static net.sourceforge.plantuml.cucadiagram.Display empty()
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0;
        net.sourceforge.plantuml.creole.CreoleMode $r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r2;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = (net.sourceforge.plantuml.graphic.HorizontalAlignment) null;

        $r1 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r2, 0, $r1);

        return $r0;
    }

    public static transient net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])
    {
        java.lang.CharSequence[] r0;
        java.util.List $r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;

        r0 := @parameter0: java.lang.CharSequence[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r1);

        return $r2;
    }

    public static net.sourceforge.plantuml.cucadiagram.Display createFoo(java.util.List) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        java.util.ArrayList $r0;
        java.util.List r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.StringLocated r4;
        java.lang.String $r5;
        java.util.Iterator r6;
        net.sourceforge.plantuml.cucadiagram.Display r7;

        r2 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r6 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.StringLocated) $r3;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r0);

        staticinvoke <net.sourceforge.plantuml.creole.legacy.CreoleParser: void checkColor(net.sourceforge.plantuml.cucadiagram.Display)>(r7);

        return r7;
    }

    public static net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0;
        java.util.Collection r1;
        net.sourceforge.plantuml.creole.CreoleMode $r2;

        r1 := @parameter0: java.util.Collection;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>(r1, null, 0, $r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)
    {
        net.sourceforge.plantuml.cucadiagram.Code r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Code;

        $r1 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r1);

        return $r2;
    }

    public static net.sourceforge.plantuml.cucadiagram.Display getWithNewlines2(java.lang.String) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        java.lang.String r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r0);

        staticinvoke <net.sourceforge.plantuml.creole.legacy.CreoleParser: void checkColor(net.sourceforge.plantuml.cucadiagram.Display)>(r1);

        return r1;
    }

    public static net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)
    {
        java.lang.String r0, $r5, r8, $r10, $r17;
        java.util.ArrayList $r1;
        java.lang.StringBuilder $r3;
        int $i0, $i2, $i3, $i4, i6;
        net.sourceforge.plantuml.cucadiagram.Display $r6, $r15;
        net.sourceforge.plantuml.creole.CreoleMode $r7;
        char c1, c5, $c7;
        boolean $z1, $z4, $z5, $z6, $z7, $z8, z9;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r16;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $r15 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        return $r15;

     label01:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r16 = null;

        z9 = 0;

        i6 = 0;

     label02:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i6 >= $i0 goto label17;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i6);

        $z1 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("<math>");

        if $z1 != 0 goto label03;

        $z4 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("<latex>");

        if $z4 != 0 goto label03;

        $z5 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("[[");

        if $z5 == 0 goto label04;

     label03:
        z9 = 1;

        goto label06;

     label04:
        $z6 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("</math>");

        if $z6 != 0 goto label05;

        $z7 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("</latex>");

        if $z7 != 0 goto label05;

        $z8 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("]]");

        if $z8 == 0 goto label06;

     label05:
        z9 = 0;

     label06:
        if z9 != 0 goto label14;

        if c1 != 92 goto label14;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if i6 >= $i3 goto label14;

        $i4 = i6 + 1;

        c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        i6 = i6 + 1;

        if c5 == 110 goto label07;

        if c5 == 114 goto label07;

        if c5 != 108 goto label10;

     label07:
        if c5 != 114 goto label08;

        r16 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        goto label09;

     label08:
        if c5 != 108 goto label09;

        r16 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

     label09:
        $r17 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r17);

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label13;

     label10:
        if c5 != 116 goto label11;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(9);

        goto label13;

     label11:
        if c5 != 92 goto label12;

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

        goto label13;

     label12:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

     label13:
        goto label16;

     label14:
        $c7 = staticinvoke <net.sourceforge.plantuml.BackSlash: char hiddenNewLine()>();

        if c1 != $c7 goto label15;

        $r10 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label16;

     label15:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label16:
        i6 = i6 + 1;

        goto label02;

     label17:
        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r7 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r1, r16, 0, $r7);

        return $r6;
    }

    private void <init>(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.creole.CreoleMode)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0, r1;
        net.sourceforge.plantuml.creole.CreoleMode r2;
        boolean $z0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3;
        java.util.List $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter1: net.sourceforge.plantuml.creole.CreoleMode;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z0 = r1.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r3, $z0, r2);

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        interfaceinvoke $r5.<java.util.List: boolean addAll(java.util.Collection)>($r4);

        return;
    }

    private void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment, boolean, net.sourceforge.plantuml.creole.CreoleMode)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.creole.CreoleMode r1;
        boolean z0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2, $r6;
        java.util.ArrayList $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        z0 := @parameter1: boolean;

        r1 := @parameter2: net.sourceforge.plantuml.creole.CreoleMode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull> = z0;

        if z0 == 0 goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

     label2:
        r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData> = $r5;

        if z0 == 0 goto label3;

        $r6 = null;

        goto label4;

     label3:
        $r6 = r2;

     label4:
        r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment> = $r6;

        return;
    }

    private void <init>(java.util.Collection, net.sourceforge.plantuml.graphic.HorizontalAlignment, boolean, net.sourceforge.plantuml.creole.CreoleMode)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r1;
        boolean z0;
        net.sourceforge.plantuml.creole.CreoleMode r2;
        java.util.Collection r3;
        java.util.List $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter0: java.util.Collection;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        z0 := @parameter2: boolean;

        r2 := @parameter3: net.sourceforge.plantuml.creole.CreoleMode;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>(r1, z0, r2);

        if z0 != 0 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r5 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: java.util.List manageEmbeddedDiagrams(java.util.Collection)>(r3);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r5);

     label1:
        return;
    }

    private static java.util.List manageEmbeddedDiagrams(java.util.Collection)
    {
        java.util.ArrayList $r0, $r6;
        java.util.Collection r2;
        java.util.Iterator r3;
        boolean $z0, $z3, $z6;
        java.lang.Object $r4, $r18;
        java.lang.String r5, $r11, $r15, $r20, $r21;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r14;
        net.sourceforge.plantuml.EmbeddedDiagram $r16;
        net.sourceforge.plantuml.cucadiagram.Display $r17;
        java.lang.CharSequence r19, r22;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.lang.CharSequence) $r4;

        r5 = staticinvoke <net.sourceforge.plantuml.EmbeddedDiagram: java.lang.String getEmbeddedType(java.lang.CharSequence)>(r22);

        if r5 == null goto label5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@start");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r11);

     label2:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r18 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.CharSequence) $r18;

        if r19 == null goto label3;

        $r20 = interfaceinvoke r19.<java.lang.CharSequence: java.lang.String toString()>();

        $r21 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r20);

        $z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("}}");

        if $z6 == 0 goto label3;

        goto label4;

     label3:
        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r19);

        goto label2;

     label4:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@end");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = new net.sourceforge.plantuml.EmbeddedDiagram;

        $r17 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r6);

        specialinvoke $r16.<net.sourceforge.plantuml.EmbeddedDiagram: void <init>(net.sourceforge.plantuml.cucadiagram.Display)>($r17);

        r22 = $r16;

     label5:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r22);

        goto label1;

     label6:
        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.Display manageGuillemet()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Display r2, $r5;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0, $z1, $z2, $z4, z6;
        net.sourceforge.plantuml.creole.CreoleMode $r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;
        java.lang.Object $r8;
        java.lang.CharSequence r9;
        java.lang.String r10, $r11, r12;
        net.sourceforge.plantuml.Guillemet $r13;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        z6 = 1;

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.CharSequence) $r8;

        $z2 = r9 instanceof net.sourceforge.plantuml.EmbeddedDiagram;

        if $z2 == 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label4;

     label2:
        r12 = interfaceinvoke r9.<java.lang.CharSequence: java.lang.String toString()>();

        if z6 == 0 goto label3;

        $z4 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: boolean isVisibilityCharacter(java.lang.CharSequence)>(r9);

        if $z4 == 0 goto label3;

        $r11 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int)>(1);

        r12 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

     label3:
        $r13 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet GUILLEMET>;

        r10 = virtualinvoke $r13.<net.sourceforge.plantuml.Guillemet: java.lang.String manageGuillemet(java.lang.String)>(r12);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r10);

     label4:
        z6 = 0;

        goto label1;

     label5:
        $r5 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r7 = r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z1 = r2.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r6 = r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r5.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r0, $r7, $z1, $r6);

        return $r5;
    }

    public net.sourceforge.plantuml.cucadiagram.Display withPage(int, int)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0, $r6;
        java.util.List $r1, $r4;
        java.util.ArrayList $r2;
        java.util.Iterator r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.creole.CreoleMode $r7;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r8;
        java.lang.Object $r9;
        java.lang.String $r10, $r14, $r15, $r19, r21, r22;
        java.lang.StringBuilder $r11, $r12, $r13, $r16, $r17, $r18;
        int i0, i1;
        java.lang.CharSequence r20;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.CharSequence) $r9;

        $r10 = interfaceinvoke r20.<java.lang.CharSequence: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r21 = virtualinvoke $r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%page%", $r14);

        $r15 = interfaceinvoke r21.<java.lang.CharSequence: java.lang.String toString()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r22 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("%lastpage%", $r19);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r22);

        goto label2;

     label3:
        $r6 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r2, $r8, $z1, $r7);

        return $r6;
    }

    public net.sourceforge.plantuml.cucadiagram.Display removeEndingStereotype()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0, $r12;
        java.util.List $r1, $r3, $r8;
        net.sourceforge.plantuml.command.regex.Pattern2 $r2;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;
        java.lang.CharSequence $r5;
        net.sourceforge.plantuml.command.regex.Matcher2 r6;
        boolean $z0, $z1;
        java.util.ArrayList $r7;
        java.lang.String $r10;
        net.sourceforge.plantuml.creole.CreoleMode $r13;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r14;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.command.regex.Pattern2 patternStereotype>;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (java.lang.CharSequence) $r4;

        r6 = virtualinvoke $r2.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>($r5);

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.command.regex.Matcher2: boolean matches()>();

        if $z0 == 0 goto label1;

        $r7 = new java.util.ArrayList;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r8);

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r10 = virtualinvoke r6.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        interfaceinvoke $r7.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i3, $r10);

        $r12 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r14 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r13 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r12.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r7, $r14, $z1, $r13);

        return $r12;

     label1:
        return r0;
    }

    public java.lang.String getEndingStereotype()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        java.util.List $r1, $r3;
        net.sourceforge.plantuml.command.regex.Pattern2 $r2;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.CharSequence $r5;
        net.sourceforge.plantuml.command.regex.Matcher2 r6;
        boolean $z0;
        java.lang.String $r7;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.command.regex.Pattern2 patternStereotype>;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        $r5 = (java.lang.CharSequence) $r4;

        r6 = virtualinvoke $r2.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>($r5);

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.command.regex.Matcher2: boolean matches()>();

        if $z0 == 0 goto label1;

        $r7 = virtualinvoke r6.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        return $r7;

     label1:
        return null;
    }

    public net.sourceforge.plantuml.cucadiagram.Display underlined()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Display r2, $r5;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0, $z1;
        net.sourceforge.plantuml.creole.CreoleMode $r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;
        java.lang.Object $r8;
        java.lang.CharSequence r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.CharSequence) $r8;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<u>");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r5 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r7 = r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z1 = r2.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r6 = r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r5.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r0, $r7, $z1, $r6);

        return $r5;
    }

    public net.sourceforge.plantuml.cucadiagram.Display underlinedName()
    {
        java.util.regex.Pattern r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.cucadiagram.Display r3, $r6;
        java.util.List $r4;
        java.util.Iterator r5;
        boolean $z0, $z1, $z3;
        net.sourceforge.plantuml.creole.CreoleMode $r7;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r8;
        java.lang.Object $r9;
        java.lang.CharSequence r10;
        int $i0;
        java.lang.StringBuilder $r11, $r12, $r13, $r16, $r17, $r18, $r20, $r21, $r23, $r24, $r26;
        java.lang.String $r14, $r19, $r22, $r25, $r27;
        java.util.regex.Matcher r15;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^([^:]+?)(\\s*:.+)$");

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r4 = r3.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.CharSequence) $r9;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label4;

        r15 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r10);

        $z3 = virtualinvoke r15.<java.util.regex.Matcher: boolean matches()>();

        if $z3 == 0 goto label2;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<u>");

        $r22 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</u>");

        $r25 = virtualinvoke r15.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r27);

        goto label3;

     label2:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<u>");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r19);

     label3:
        goto label5;

     label4:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<u>");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r14);

     label5:
        goto label1;

     label6:
        $r6 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r8 = r3.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z1 = r3.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r7 = r3.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r1, $r8, $z1, $r7);

        return $r6;
    }

    public net.sourceforge.plantuml.cucadiagram.Display withCreoleMode(net.sourceforge.plantuml.creole.CreoleMode)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0, $r1;
        boolean $z0;
        net.sourceforge.plantuml.creole.CreoleMode r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter0: net.sourceforge.plantuml.creole.CreoleMode;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $r1 = new net.sourceforge.plantuml.cucadiagram.Display;

        specialinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.creole.CreoleMode)>(r0, r2);

        return $r1;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        boolean $z0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        if $z0 == 0 goto label1;

        return "NULL";

     label1:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0, $r2;
        java.lang.Object r1;
        java.util.List $r3, $r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r2 = (net.sourceforge.plantuml.cucadiagram.Display) r1;

        $r3 = $r2.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public net.sourceforge.plantuml.cucadiagram.Display addAll(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0, r1, r4;
        net.sourceforge.plantuml.creole.CreoleMode $r2;
        java.util.List $r5, $r6;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r2);

        $r6 = $r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r5 = r4.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.Display addFirst(java.lang.CharSequence)
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0, r1;
        net.sourceforge.plantuml.creole.CreoleMode $r2;
        java.lang.CharSequence r4;
        java.util.List $r5;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter0: java.lang.CharSequence;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r2);

        $r5 = $r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        interfaceinvoke $r5.<java.util.List: void add(int,java.lang.Object)>(0, r4);

        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.Display add(java.lang.CharSequence)
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0, r1;
        net.sourceforge.plantuml.creole.CreoleMode $r2;
        java.lang.CharSequence r4;
        java.util.List $r5;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter0: java.lang.CharSequence;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r2);

        $r5 = $r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.Display addGeneric(java.lang.CharSequence)
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0, r1;
        net.sourceforge.plantuml.creole.CreoleMode $r2;
        java.util.List $r4, $r6, $r7, $r17;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r5, $r9, $r10, $r12, $r13, $r16, $r18, $r19, $r20;
        java.lang.Object $r8;
        java.lang.CharSequence r11;
        java.lang.String $r14, $r21;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r11 := @parameter0: java.lang.CharSequence;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r2);

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i0 != 0 goto label1;

        $r17 = $r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label2;

     label1:
        $r6 = $r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i1 = i0 - 1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = r1.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i2 = i0 - 1;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i2);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, $r14);

     label2:
        return $r0;
    }

    public int size()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        boolean $z0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.lang.CharSequence get(int)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        java.lang.CharSequence $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (java.lang.CharSequence) $r2;

        return $r3;
    }

    public java.util.ListIterator iterator()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        java.util.List $r1, $r2;
        java.util.ListIterator $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.ListIterator listIterator()>();

        return $r3;
    }

    public net.sourceforge.plantuml.cucadiagram.Display subList(int, int)
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0, r1;
        int i0, i1;
        java.util.List $r2, $r3;
        net.sourceforge.plantuml.creole.CreoleMode $r4;
        boolean $z0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>(i0, i1);

        $r5 = r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z0 = r1.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r3, $r5, $z0, $r4);

        return $r0;
    }

    public java.util.List asList()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public java.util.List as2()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.LineLocationImpl $r2, r11;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        java.util.List $r4, $r6;
        java.util.Iterator r5;
        boolean $z0;
        java.lang.Object $r7;
        java.lang.CharSequence r8;
        net.sourceforge.plantuml.StringLocated $r9;
        java.lang.String $r10;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new net.sourceforge.plantuml.LineLocationImpl;

        specialinvoke $r2.<net.sourceforge.plantuml.LineLocationImpl: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation)>("inner", null);

        r11 = $r2;

        $r4 = r3.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.CharSequence) $r7;

        r11 = virtualinvoke r11.<net.sourceforge.plantuml.LineLocationImpl: net.sourceforge.plantuml.LineLocationImpl oneLineRead()>();

        $r9 = new net.sourceforge.plantuml.StringLocated;

        $r10 = interfaceinvoke r8.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke $r9.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation)>($r10, r11);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label1;

     label2:
        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r6;
    }

    public boolean hasUrl()
    {
        net.sourceforge.plantuml.UrlBuilder $r0;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r1;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        java.util.ListIterator r4;
        boolean $z0;
        java.lang.Object $r5;
        java.lang.CharSequence r6;
        java.lang.String $r7;
        net.sourceforge.plantuml.Url $r8;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new net.sourceforge.plantuml.UrlBuilder;

        $r1 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl ANYWHERE>;

        specialinvoke $r0.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>(null, $r1);

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.CharSequence) $r5;

        $r7 = interfaceinvoke r6.<java.lang.CharSequence: java.lang.String toString()>();

        $r8 = virtualinvoke $r0.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>($r7);

        if $r8 == null goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public net.sourceforge.plantuml.graphic.HorizontalAlignment getNaturalHorizontalAlignment()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        return $r1;
    }

    public java.util.List splitMultiline(net.sourceforge.plantuml.command.regex.Pattern2)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Display $r2, r3, $r17, r21;
        net.sourceforge.plantuml.creole.CreoleMode $r4, $r18;
        boolean $z0, $z2, $z3, $z6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5, $r19;
        java.util.List $r6, $r8, $r13, $r15, $r20;
        java.util.Iterator r7;
        java.lang.Object $r9;
        java.lang.CharSequence r10, r14, r16;
        net.sourceforge.plantuml.command.regex.Pattern2 r11;
        net.sourceforge.plantuml.command.regex.Matcher2 r12;
        int $i0, $i1, $i2;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r11 := @parameter0: net.sourceforge.plantuml.command.regex.Pattern2;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r5 = r3.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z0 = r3.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r4 = r3.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r5, $z0, $r4);

        r21 = $r2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r6 = r3.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r9 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.CharSequence) $r9;

        r12 = virtualinvoke r11.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r10);

        $z3 = virtualinvoke r12.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z3 == 0 goto label2;

        $i0 = virtualinvoke r12.<net.sourceforge.plantuml.command.regex.Matcher2: int start()>();

        r14 = interfaceinvoke r10.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(0, $i0);

        $r15 = r21.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>(r14);

        $i1 = virtualinvoke r12.<net.sourceforge.plantuml.command.regex.Matcher2: int end()>();

        $i2 = interfaceinvoke r10.<java.lang.CharSequence: int length()>();

        r16 = interfaceinvoke r10.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>($i1, $i2);

        $r17 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r19 = r3.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment naturalHorizontalAlignment>;

        $z6 = r3.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        $r18 = r3.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        specialinvoke $r17.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>($r19, $z6, $r18);

        r21 = $r17;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r20 = $r17.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>(r16);

        goto label3;

     label2:
        $r13 = r21.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r10);

     label3:
        goto label1;

     label4:
        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r8;
    }

    public static boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        boolean $z0, $z1;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        if r0 == null goto label1;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean isNull>;

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.creole.CreoleMode $r4;
        net.sourceforge.plantuml.graphic.TextBlock $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create7(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r1, r2, r3, $r4);

        return $r5;
    }

    public net.sourceforge.plantuml.graphic.TextBlock createWithNiceCreoleMode(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.creole.CreoleMode $r4;
        net.sourceforge.plantuml.graphic.TextBlock $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create7(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r1, r2, r3, $r4);

        return $r5;
    }

    public net.sourceforge.plantuml.graphic.TextBlock create7(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.creole.CreoleMode)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.creole.CreoleMode r4;
        net.sourceforge.plantuml.LineBreakStrategy $r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r4 := @parameter3: net.sourceforge.plantuml.creole.CreoleMode;

        $r5 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r2, r3, $r5, r4, null, null);

        return $r6;
    }

    public net.sourceforge.plantuml.graphic.TextBlock create8(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.creole.CreoleMode, net.sourceforge.plantuml.LineBreakStrategy)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.LineBreakStrategy r4;
        net.sourceforge.plantuml.creole.CreoleMode r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r5 := @parameter3: net.sourceforge.plantuml.creole.CreoleMode;

        r4 := @parameter4: net.sourceforge.plantuml.LineBreakStrategy;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r2, r3, r4, r5, null, null);

        return $r6;
    }

    public net.sourceforge.plantuml.graphic.TextBlock create9(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.LineBreakStrategy)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.LineBreakStrategy r4;
        net.sourceforge.plantuml.creole.CreoleMode $r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r4 := @parameter3: net.sourceforge.plantuml.LineBreakStrategy;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.creole.CreoleMode defaultCreoleMode>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r2, r3, r4, $r5, null, null);

        return $r6;
    }

    public net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.LineBreakStrategy, net.sourceforge.plantuml.creole.CreoleMode, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.LineBreakStrategy r4;
        net.sourceforge.plantuml.creole.CreoleMode r5;
        net.sourceforge.plantuml.ugraphic.UFont r6;
        net.sourceforge.plantuml.ugraphic.color.HColor r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r4 := @parameter3: net.sourceforge.plantuml.LineBreakStrategy;

        r5 := @parameter4: net.sourceforge.plantuml.creole.CreoleMode;

        r6 := @parameter5: net.sourceforge.plantuml.ugraphic.UFont;

        r7 := @parameter6: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,double,double)>(r1, r2, r3, r4, r5, r6, r7, 0.0, 0.0);

        return $r8;
    }

    public net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.LineBreakStrategy, net.sourceforge.plantuml.creole.CreoleMode, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor, double, double)
    {
        net.sourceforge.plantuml.LineBreakStrategy r0;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3, r17;
        net.sourceforge.plantuml.graphic.FontConfiguration r4, r7;
        net.sourceforge.plantuml.ugraphic.UFont r5;
        net.sourceforge.plantuml.ugraphic.color.HColor r6;
        int $i0, $i1, $i2, $i3, $i4;
        net.sourceforge.plantuml.ISkinSimple r8;
        net.sourceforge.plantuml.creole.CreoleMode r9;
        double d0, d1;
        net.sourceforge.plantuml.graphic.TextBlock $r10, $r14, $r15, $r16;
        java.lang.CharSequence $r11, $r12, $r13;
        boolean $z0, $z1, $z2;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r17 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r8 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r0 := @parameter3: net.sourceforge.plantuml.LineBreakStrategy;

        r9 := @parameter4: net.sourceforge.plantuml.creole.CreoleMode;

        r5 := @parameter5: net.sourceforge.plantuml.ugraphic.UFont;

        r6 := @parameter6: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter7: double;

        d1 := @parameter8: double;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment getNaturalHorizontalAlignment()>();

        if $r3 == null goto label1;

        r17 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.HorizontalAlignment getNaturalHorizontalAlignment()>();

     label1:
        r7 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration forceFont(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r5, r6);

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        if $i0 <= 0 goto label4;

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $z0 = $r11 instanceof net.sourceforge.plantuml.cucadiagram.Stereotype;

        if $z0 == 0 goto label2;

        $r16 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock createStereotype(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.SpriteContainer,int,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,double,double)>(r4, r17, r8, 0, r5, r6, r0, r9, d0, d1);

        return $r16;

     label2:
        $i1 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        $i2 = $i1 - 1;

        $r12 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>($i2);

        $z1 = $r12 instanceof net.sourceforge.plantuml.cucadiagram.Stereotype;

        if $z1 == 0 goto label3;

        $i3 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        $i4 = $i3 - 1;

        $r15 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock createStereotype(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.SpriteContainer,int,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,double,double)>(r4, r17, r8, $i4, r5, r6, r0, r9, d0, d1);

        return $r15;

     label3:
        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $z2 = $r13 instanceof net.sourceforge.plantuml.sequencediagram.MessageNumber;

        if $z2 == 0 goto label4;

        $r14 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock createMessageNumber(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.graphic.FontConfiguration,double,double)>(r4, r17, r8, r0, r7, d0, d1);

        return $r14;

     label4:
        $r10 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock getCreole(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.graphic.FontConfiguration,double,double)>(r4, r17, r8, r0, r9, r7, d0, d1);

        return $r10;
    }

    private net.sourceforge.plantuml.graphic.TextBlock createStereotype(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.SpriteContainer, int, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.LineBreakStrategy, net.sourceforge.plantuml.creole.CreoleMode, double, double)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        int i0;
        java.lang.CharSequence $r1;
        net.sourceforge.plantuml.cucadiagram.Stereotype r2;
        boolean $z0;
        net.sourceforge.plantuml.SpriteContainer r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4, r7;
        net.sourceforge.plantuml.ugraphic.UFont r5, $r15;
        net.sourceforge.plantuml.ugraphic.color.HColor r6, $r16, $r17;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r8;
        net.sourceforge.plantuml.LineBreakStrategy r9;
        net.sourceforge.plantuml.creole.CreoleMode r10;
        double d0, d1, $d2;
        net.sourceforge.plantuml.ISkinSimple $r11;
        net.sourceforge.plantuml.graphic.TextBlock r12, r18;
        net.sourceforge.plantuml.graphic.TextBlockSprited $r13;
        net.sourceforge.plantuml.graphic.CircledCharacter $r14;
        char $c1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r8 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.SpriteContainer;

        i0 := @parameter3: int;

        r5 := @parameter4: net.sourceforge.plantuml.ugraphic.UFont;

        r6 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        r9 := @parameter6: net.sourceforge.plantuml.LineBreakStrategy;

        r10 := @parameter7: net.sourceforge.plantuml.creole.CreoleMode;

        d0 := @parameter8: double;

        d1 := @parameter9: double;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(i0);

        r2 = (net.sourceforge.plantuml.cucadiagram.Stereotype) $r1;

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: boolean isSpotted()>();

        if $z0 == 0 goto label1;

        $r14 = new net.sourceforge.plantuml.graphic.CircledCharacter;

        $c1 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: char getCharacter()>();

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: double getRadius()>();

        $r15 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.ugraphic.UFont getCircledFont()>();

        $r16 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor()>();

        $r17 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        specialinvoke $r14.<net.sourceforge.plantuml.graphic.CircledCharacter: void <init>(char,double,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($c1, $d2, $r15, $r16, null, $r17);

        r18 = $r14;

        goto label2;

     label1:
        r18 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.graphic.TextBlock getSprite(net.sourceforge.plantuml.SpriteContainer)>(r3);

     label2:
        r7 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration forceFont(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r5, r6);

        $r11 = (net.sourceforge.plantuml.ISkinSimple) r3;

        r12 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock getCreole(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.graphic.FontConfiguration,double,double)>(r4, r8, $r11, r9, r10, r7, d0, d1);

        if r18 == null goto label3;

        $r13 = new net.sourceforge.plantuml.graphic.TextBlockSprited;

        specialinvoke $r13.<net.sourceforge.plantuml.graphic.TextBlockSprited: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r18, r12);

        return $r13;

     label3:
        return r12;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getCreole(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.LineBreakStrategy, net.sourceforge.plantuml.creole.CreoleMode, net.sourceforge.plantuml.graphic.FontConfiguration, double, double)
    {
        net.sourceforge.plantuml.graphic.FontConfiguration r0, r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r1;
        net.sourceforge.plantuml.ISkinSimple r2;
        net.sourceforge.plantuml.creole.CreoleMode r3;
        net.sourceforge.plantuml.creole.SheetBuilder $r5;
        net.sourceforge.plantuml.cucadiagram.Display r6;
        net.sourceforge.plantuml.creole.Sheet r7;
        net.sourceforge.plantuml.creole.SheetBlock1 $r8;
        net.sourceforge.plantuml.LineBreakStrategy r9;
        double d1, d2, $d3;
        net.sourceforge.plantuml.creole.SheetBlock2 $r11;
        net.sourceforge.plantuml.ugraphic.UStroke $r12;

        r6 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r2 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r9 := @parameter3: net.sourceforge.plantuml.LineBreakStrategy;

        r3 := @parameter4: net.sourceforge.plantuml.creole.CreoleMode;

        r4 := @parameter5: net.sourceforge.plantuml.graphic.FontConfiguration;

        d1 := @parameter6: double;

        d2 := @parameter7: double;

        $r5 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.graphic.FontConfiguration)>(r0, r1, r2, r3, r4);

        r7 = interfaceinvoke $r5.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>(r6);

        if r2 != null goto label1;

        $d3 = 0.0;

        goto label2;

     label1:
        $d3 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinSimple: double getPadding()>();

     label2:
        $r8 = new net.sourceforge.plantuml.creole.SheetBlock1;

        specialinvoke $r8.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double,double,double)>(r7, r9, $d3, d1, d2);

        $r11 = new net.sourceforge.plantuml.creole.SheetBlock2;

        $r12 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        specialinvoke $r11.<net.sourceforge.plantuml.creole.SheetBlock2: void <init>(net.sourceforge.plantuml.creole.SheetBlock1,net.sourceforge.plantuml.creole.Stencil,net.sourceforge.plantuml.ugraphic.UStroke)>($r8, $r8, $r12);

        return $r11;
    }

    private net.sourceforge.plantuml.graphic.TextBlock createMessageNumber(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.LineBreakStrategy, net.sourceforge.plantuml.graphic.FontConfiguration, double, double)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0, $r1, $r8;
        net.sourceforge.plantuml.graphic.FontConfiguration r2, r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r3;
        net.sourceforge.plantuml.ISkinSimple r4;
        net.sourceforge.plantuml.LineBreakStrategy r5;
        double d0, d1;
        net.sourceforge.plantuml.creole.CreoleMode $r7, $r9;
        int $i0;
        net.sourceforge.plantuml.graphic.TextBlock r10, $r12, r13, r14;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r11;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r5 := @parameter3: net.sourceforge.plantuml.LineBreakStrategy;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.FontConfiguration;

        d0 := @parameter5: double;

        d1 := @parameter6: double;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display subList(int,int)>(0, 1);

        $r7 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        r13 = specialinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock getCreole(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.graphic.FontConfiguration,double,double)>(r2, r3, r4, r5, $r7, r6, d0, d1);

        r14 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double,double,double)>(r13, 0.0, 4.0, 0.0, 0.0);

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display subList(int,int)>(1, $i0);

        $r9 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        r10 = specialinvoke $r8.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock getCreole(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.graphic.FontConfiguration,double,double)>(r2, r3, r4, r5, $r9, r6, d0, d1);

        $r11 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment CENTER>;

        $r12 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock mergeLR(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.VerticalAlignment)>(r14, r10, $r11);

        return $r12;
    }

    public boolean hasSeveralGuideLines()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List displayData>;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean hasSeveralGuideLines(java.util.Collection)>($r1);

        return $z0;
    }

    public static boolean hasSeveralGuideLines(java.lang.String)
    {
        java.lang.String r0;
        java.lang.String[] $r1;
        java.util.List r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\\\n");

        r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r1);

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean hasSeveralGuideLines(java.util.Collection)>(r2);

        return $z0;
    }

    private static boolean hasSeveralGuideLines(java.util.Collection)
    {
        java.util.Collection r0;
        int $i0;
        java.util.Iterator r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r2;
        java.lang.CharSequence r3;
        java.lang.String r4;

        r0 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 > 1 goto label1;

        return 0;

     label1:
        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.CharSequence) $r2;

        r4 = interfaceinvoke r3.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("< ");

        if $z1 == 0 goto label3;

        return 1;

     label3:
        $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("> ");

        if $z2 == 0 goto label4;

        return 1;

     label4:
        $z3 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(" <");

        if $z3 == 0 goto label5;

        return 1;

     label5:
        $z4 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(" >");

        if $z4 == 0 goto label6;

        return 1;

     label6:
        goto label2;

     label7:
        return 0;
    }

    public volatile java.util.Iterator iterator()
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        java.util.ListIterator $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

        return $r1;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.cucadiagram.Display $r0;
        net.sourceforge.plantuml.creole.CreoleMode $r1;
        net.sourceforge.plantuml.command.regex.Pattern2 $r2;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: void <init>(java.util.Collection,net.sourceforge.plantuml.graphic.HorizontalAlignment,boolean,net.sourceforge.plantuml.creole.CreoleMode)>(null, null, 1, $r1);

        <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL> = $r0;

        $r2 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("^(.*?)(?:\\<\\<\\s*(.*)\\s*\\>\\>)\\s*$");

        <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.command.regex.Pattern2 patternStereotype> = $r2;

        return;
    }
}
