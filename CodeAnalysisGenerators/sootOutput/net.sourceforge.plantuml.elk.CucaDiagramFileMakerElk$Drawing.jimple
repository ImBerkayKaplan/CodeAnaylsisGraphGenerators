class net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.svek.TextBlockBackcolored
{
    private final net.sourceforge.plantuml.ugraphic.MinMax minMax;
    final net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0;

    public void <init>(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk, net.sourceforge.plantuml.ugraphic.MinMax)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk r1;
        net.sourceforge.plantuml.ugraphic.MinMax r2;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r1 := @parameter0: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.MinMax;

        r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.ugraphic.MinMax minMax> = r2;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: void drawAllClusters(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: void drawAllNodes(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: void drawAllEdges(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    private void drawAllClusters(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5, $r8, $r10;
        java.util.Map$Entry r6;
        net.sourceforge.plantuml.ugraphic.UGraphic r7;
        net.sourceforge.plantuml.cucadiagram.IGroup $r9;
        net.sourceforge.plantuml.elk.proxy.graph.ElkNode $r11;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: java.util.Map access$000(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r8;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (net.sourceforge.plantuml.elk.proxy.graph.ElkNode) $r10;

        specialinvoke r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: void drawSingleCluster(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.elk.proxy.graph.ElkNode)>(r7, $r9, $r11);

        goto label1;

     label2:
        return;
    }

    private void drawAllNodes(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5, $r8, $r10;
        java.util.Map$Entry r6;
        net.sourceforge.plantuml.ugraphic.UGraphic r7;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r9;
        net.sourceforge.plantuml.elk.proxy.graph.ElkNode $r11;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: java.util.Map access$100(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r8 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r8;

        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (net.sourceforge.plantuml.elk.proxy.graph.ElkNode) $r10;

        specialinvoke r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: void drawSingleNode(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.cucadiagram.ILeaf,net.sourceforge.plantuml.elk.proxy.graph.ElkNode)>(r7, $r9, $r11);

        goto label1;

     label2:
        return;
    }

    private void drawAllEdges(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator r4;
        java.lang.Object $r5, $r7, $r10;
        java.util.Map$Entry r6;
        net.sourceforge.plantuml.cucadiagram.Link r8;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.UGraphic r9;
        net.sourceforge.plantuml.elk.proxy.graph.ElkEdge $r11;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r9 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: java.util.Map access$200(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.util.Map$Entry) $r5;

        $r7 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getKey()>();

        r8 = (net.sourceforge.plantuml.cucadiagram.Link) $r7;

        $z0 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Link: boolean isInvis()>();

        if $z0 == 0 goto label2;

        goto label1;

     label2:
        $r10 = interfaceinvoke r6.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = (net.sourceforge.plantuml.elk.proxy.graph.ElkEdge) $r10;

        specialinvoke r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: void drawSingleEdge(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.cucadiagram.Link,net.sourceforge.plantuml.elk.proxy.graph.ElkEdge)>(r9, r8, $r11);

        goto label1;

     label3:
        return;
    }

    private void drawSingleCluster(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.cucadiagram.IGroup, net.sourceforge.plantuml.elk.proxy.graph.ElkNode)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.elk.proxy.graph.ElkNode r1;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk $r2, $r7, $r10;
        java.awt.geom.Point2D r3;
        net.sourceforge.plantuml.ugraphic.URectangle $r4;
        double $d0, $d1, $d3, $d4, d5, $d6, $d7, $d8;
        net.sourceforge.plantuml.cucadiagram.IGroup r6;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r8, $r11;
        net.sourceforge.plantuml.ISkinParam r9;
        net.sourceforge.plantuml.UmlDiagramType r12;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.graphic.USymbol $r13, $r15, $r17, $r23, $r33, $r36, $r47, $r49;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r14, $r19, $r32, $r45;
        net.sourceforge.plantuml.graphic.SkinParameter $r16, $r18, $r34;
        net.sourceforge.plantuml.graphic.TextBlock r20, r21;
        net.sourceforge.plantuml.svek.ClusterDecoration $r22;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple r25;
        net.sourceforge.plantuml.ugraphic.UGraphic r26, $r28;
        net.sourceforge.plantuml.ugraphic.UTranslate $r27;
        net.sourceforge.plantuml.AlignmentParam $r29;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r30, $r31;
        net.sourceforge.plantuml.style.SName $r35, $r46;
        net.sourceforge.plantuml.style.StyleSignature $r37;
        net.sourceforge.plantuml.style.StyleBuilder $r38;
        net.sourceforge.plantuml.style.PName $r39;
        net.sourceforge.plantuml.style.Value $r40;
        net.sourceforge.plantuml.svek.PackageStyle r41;
        net.sourceforge.plantuml.style.Style r42;
        net.sourceforge.plantuml.ugraphic.UStroke r43;
        net.sourceforge.plantuml.ugraphic.color.HColor r44, r48;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r26 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r6 := @parameter1: net.sourceforge.plantuml.cucadiagram.IGroup;

        r1 := @parameter2: net.sourceforge.plantuml.elk.proxy.graph.ElkNode;

        $r2 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        r3 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: java.awt.geom.Point2D access$300(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk,net.sourceforge.plantuml.elk.proxy.graph.ElkNode)>($r2, r1);

        $r4 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.elk.proxy.graph.ElkNode: double getWidth()>();

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.elk.proxy.graph.ElkNode: double getHeight()>();

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        r41 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.svek.PackageStyle getPackageStyle()>();

        $r7 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r8 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: net.sourceforge.plantuml.cucadiagram.CucaDiagram access$400(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk)>($r7);

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        if r41 != null goto label01;

        r41 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.svek.PackageStyle packageStyle()>();

     label01:
        $r10 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r11 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: net.sourceforge.plantuml.cucadiagram.CucaDiagram access$400(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk)>($r10);

        r12 = virtualinvoke $r11.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label02;

        $r35 = virtualinvoke r12.<net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.style.SName getStyleName()>();

        $r36 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        $r37 = staticinvoke <net.sourceforge.plantuml.svek.Cluster: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition(net.sourceforge.plantuml.style.SName,net.sourceforge.plantuml.graphic.USymbol)>($r35, $r36);

        $r38 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r42 = virtualinvoke $r37.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r38);

        $r39 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r40 = virtualinvoke r42.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r39);

        d5 = interfaceinvoke $r40.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r43 = staticinvoke <net.sourceforge.plantuml.svek.Cluster: net.sourceforge.plantuml.ugraphic.UStroke getStrokeInternal(net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>(r6, r9, r42);

        goto label09;

     label02:
        $r13 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        if $r13 != null goto label05;

        $r32 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r33 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol PACKAGE>;

        $r34 = virtualinvoke $r33.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()>();

        $z2 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinParam: boolean shadowing2(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.graphic.SkinParameter)>($r32, $r34);

        if $z2 == 0 goto label03;

        $d6 = 3.0;

        goto label04;

     label03:
        $d6 = 0.0;

     label04:
        d5 = $d6;

        goto label08;

     label05:
        $r14 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r15 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()>();

        $z1 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinParam: boolean shadowing2(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.graphic.SkinParameter)>($r14, $r16);

        if $z1 == 0 goto label06;

        $d7 = 3.0;

        goto label07;

     label06:
        $d7 = 0.0;

     label07:
        d5 = $d7;

     label08:
        r43 = staticinvoke <net.sourceforge.plantuml.svek.Cluster: net.sourceforge.plantuml.ugraphic.UStroke getStrokeInternal(net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>(r6, r9, null);

     label09:
        r44 = specialinvoke r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor(net.sourceforge.plantuml.UmlDiagramType)>(r12);

        $r45 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r46 = virtualinvoke r12.<net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.style.SName getStyleName()>();

        $r47 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        r48 = staticinvoke <net.sourceforge.plantuml.svek.Cluster: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.style.SName,net.sourceforge.plantuml.graphic.USymbol)>(r44, r9, $r45, $r46, $r47);

        $r49 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        if $r49 != null goto label10;

        $d8 = 0.0;

        goto label11;

     label10:
        $r17 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()>();

        $r19 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $d8 = virtualinvoke $r18.<net.sourceforge.plantuml.graphic.SkinParameter: double getRoundCorner(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r9, $r19);

     label11:
        r20 = specialinvoke r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.graphic.TextBlock getTitleBlock(net.sourceforge.plantuml.cucadiagram.IGroup)>(r6);

        r21 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r22 = new net.sourceforge.plantuml.svek.ClusterDecoration;

        $r23 = interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        $d3 = virtualinvoke r1.<net.sourceforge.plantuml.elk.proxy.graph.ElkNode: double getWidth()>();

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.elk.proxy.graph.ElkNode: double getHeight()>();

        specialinvoke $r22.<net.sourceforge.plantuml.svek.ClusterDecoration: void <init>(net.sourceforge.plantuml.svek.PackageStyle,net.sourceforge.plantuml.graphic.USymbol,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,double,double,double,double,net.sourceforge.plantuml.ugraphic.UStroke)>(r41, $r23, r20, r21, 0.0, 0.0, $d3, $d4, r43);

        r25 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r27 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r27.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r3);

        $r28 = interfaceinvoke r26.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        $r29 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam packageTitleAlignment>;

        $r30 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r29, null, 0, null);

        $r31 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getStereotypeAlignment()>();

        virtualinvoke $r22.<net.sourceforge.plantuml.svek.ClusterDecoration: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double,double,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r28, r48, r25, d5, $d8, $r30, $r31);

        return;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTitleBlock(net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.IGroup r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r2;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk $r3;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r4;
        net.sourceforge.plantuml.ISkinParam r5;
        net.sourceforge.plantuml.graphic.FontConfiguration r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8, $r9;

        r2 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        if r1 != null goto label1;

        $r9 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        return $r9;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r4 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: net.sourceforge.plantuml.cucadiagram.CucaDiagram access$400(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk)>($r3);

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r6 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfigurationForTitle(net.sourceforge.plantuml.ISkinParam)>(r5);

        $r7 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r6, $r7, r5);

        return $r8;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getBackColor(net.sourceforge.plantuml.UmlDiagramType)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.UmlDiagramType r1;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r1 := @parameter0: net.sourceforge.plantuml.UmlDiagramType;

        return null;
    }

    private void drawSingleNode(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.elk.proxy.graph.ElkNode)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk $r2, $r5;
        net.sourceforge.plantuml.svek.IEntityImage r3;
        net.sourceforge.plantuml.elk.proxy.graph.ElkNode r4;
        java.awt.geom.Point2D r6;
        net.sourceforge.plantuml.ugraphic.UGraphic r7, $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r4 := @parameter2: net.sourceforge.plantuml.elk.proxy.graph.ElkNode;

        $r2 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        r3 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: net.sourceforge.plantuml.svek.IEntityImage access$500(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk,net.sourceforge.plantuml.cucadiagram.ILeaf)>($r2, r1);

        $r5 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        r6 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: java.awt.geom.Point2D access$300(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk,net.sourceforge.plantuml.elk.proxy.graph.ElkNode)>($r5, r4);

        $r8 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r6);

        $r9 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke r3.<net.sourceforge.plantuml.svek.IEntityImage: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

        return;
    }

    private void drawSingleEdge(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.cucadiagram.Link, net.sourceforge.plantuml.elk.proxy.graph.ElkEdge)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.elk.proxy.graph.ElkEdge r1;
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk $r2, $r6, $r9, $r12, $r14;
        net.sourceforge.plantuml.elk.proxy.graph.ElkNode $r3;
        java.awt.geom.Point2D r4;
        net.sourceforge.plantuml.elk.ElkPath $r5;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r7;
        net.sourceforge.plantuml.cucadiagram.Link r8;
        net.sourceforge.plantuml.style.SName $r10;
        net.sourceforge.plantuml.graphic.TextBlock $r11, $r13, $r15;
        net.sourceforge.plantuml.ugraphic.UGraphic r17, $r19;
        net.sourceforge.plantuml.ugraphic.UTranslate $r18;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r17 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r8 := @parameter1: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter2: net.sourceforge.plantuml.elk.proxy.graph.ElkEdge;

        $r2 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.elk.proxy.graph.ElkEdge: net.sourceforge.plantuml.elk.proxy.graph.ElkNode getContainingNode()>();

        r4 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: java.awt.geom.Point2D access$300(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk,net.sourceforge.plantuml.elk.proxy.graph.ElkNode)>($r2, $r3);

        $r5 = new net.sourceforge.plantuml.elk.ElkPath;

        $r6 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r7 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: net.sourceforge.plantuml.cucadiagram.CucaDiagram access$400(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk)>($r6);

        $r10 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName classDiagram>;

        $r9 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r11 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: net.sourceforge.plantuml.graphic.TextBlock access$600(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk,net.sourceforge.plantuml.cucadiagram.Link)>($r9, r8);

        $r12 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r13 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: net.sourceforge.plantuml.graphic.TextBlock access$700(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk,net.sourceforge.plantuml.cucadiagram.Link,int)>($r12, r8, 1);

        $r14 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk this$0>;

        $r15 = staticinvoke <net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk: net.sourceforge.plantuml.graphic.TextBlock access$700(net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk,net.sourceforge.plantuml.cucadiagram.Link,int)>($r14, r8, 2);

        specialinvoke $r5.<net.sourceforge.plantuml.elk.ElkPath: void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram,net.sourceforge.plantuml.style.SName,net.sourceforge.plantuml.cucadiagram.Link,net.sourceforge.plantuml.elk.proxy.graph.ElkEdge,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>($r7, $r10, r8, r1, $r11, $r13, $r15);

        $r18 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r4);

        $r19 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        virtualinvoke $r5.<net.sourceforge.plantuml.elk.ElkPath: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r19);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;
        net.sourceforge.plantuml.ugraphic.MinMax $r1, $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        java.lang.UnsupportedOperationException $r4;
        net.sourceforge.plantuml.graphic.StringBounder r5;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.ugraphic.MinMax minMax>;

        if $r1 != null goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing: net.sourceforge.plantuml.ugraphic.MinMax minMax>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.awt.geom.Dimension2D getDimension()>();

        return $r3;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()
    {
        net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing r0;

        r0 := @this: net.sourceforge.plantuml.elk.CucaDiagramFileMakerElk$Drawing;

        return null;
    }
}
