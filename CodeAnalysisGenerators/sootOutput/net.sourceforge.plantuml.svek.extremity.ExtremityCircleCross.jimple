class net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private final double px;
    private final double py;
    private final java.awt.geom.Point2D dest;
    private final double radius;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor;

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: java.awt.geom.Point2D dest>;

        return $r1;
    }

    public void <init>(java.awt.geom.Point2D, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross r0;
        java.awt.geom.Point2D r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.awt.geom.Point2D$Double $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross;

        r1 := @parameter0: java.awt.geom.Point2D;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: double radius> = 7.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: double radius> = 7.0;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = $d0 - 7.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: double px> = $d1;

        $d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d3 = $d2 - 7.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: double py> = $d3;

        $r2 = new java.awt.geom.Point2D$Double;

        $d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, $d5);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: java.awt.geom.Point2D dest> = $r2;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = r3;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;
        net.sourceforge.plantuml.ugraphic.UBackground $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r4, $r8, r14, r15;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        java.awt.geom.Point2D $r6, $r7, $r10, $r11, $r12, $r13;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UEllipse $r9;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r15 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r4 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r6 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: java.awt.geom.Point2D dest>;

        $d0 = virtualinvoke $r6.<java.awt.geom.Point2D: double getX()>();

        $d1 = $d0 - 7.0;

        $r7 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: java.awt.geom.Point2D dest>;

        $d2 = virtualinvoke $r7.<java.awt.geom.Point2D: double getY()>();

        $d3 = $d2 - 7.0;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d3);

        $r8 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r9 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(14.0, 14.0);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: java.awt.geom.Point2D getPointOnCircle(double)>(0.7853981633974483);

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: java.awt.geom.Point2D getPointOnCircle(double)>(3.9269908169872414);

        staticinvoke <net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r15, 0.0, 0.0, $r10, $r11);

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: java.awt.geom.Point2D getPointOnCircle(double)>(-0.7853981633974483);

        $r13 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: java.awt.geom.Point2D getPointOnCircle(double)>(2.356194490192345);

        staticinvoke <net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r15, 0.0, 0.0, $r12, $r13);

        return;
    }

    private java.awt.geom.Point2D getPointOnCircle(double)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross r0;
        double $d0, d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, d10;
        java.awt.geom.Point2D$Double $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross;

        d1 := @parameter0: double;

        $d0 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: double px>;

        $d2 = $d0 + 7.0;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>(d1);

        $d4 = 7.0 * $d3;

        d5 = $d2 + $d4;

        $d6 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleCross: double py>;

        $d7 = $d6 + 7.0;

        $d8 = staticinvoke <java.lang.Math: double sin(double)>(d1);

        $d9 = 7.0 * $d8;

        d10 = $d7 + $d9;

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d5, d10);

        return $r1;
    }

    private static void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1;
        double $d0, $d1, d2, $d3, $d4, d5, d6, $d7, d8, $d9, $d10, $d11;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.ugraphic.ULine $r5;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d6 := @parameter1: double;

        d8 := @parameter2: double;

        r1 := @parameter3: java.awt.geom.Point2D;

        r0 := @parameter4: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        d5 = $d3 - $d4;

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d7 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d9 = d6 + $d7;

        $d10 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d11 = d8 + $d10;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d9, $d11);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.ULine;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>(d2, d5);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        return;
    }
}
