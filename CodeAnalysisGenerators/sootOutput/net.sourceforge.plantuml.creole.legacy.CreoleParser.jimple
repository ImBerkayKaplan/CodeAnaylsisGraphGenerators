public class net.sourceforge.plantuml.creole.legacy.CreoleParser extends java.lang.Object implements net.sourceforge.plantuml.creole.SheetBuilder
{
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final net.sourceforge.plantuml.ISkinSimple skinParam;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment;
    private final net.sourceforge.plantuml.creole.CreoleMode creoleMode;
    private final net.sourceforge.plantuml.graphic.FontConfiguration stereotype;

    public void <init>(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.creole.CreoleMode, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.creole.legacy.CreoleParser r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1, r3;
        net.sourceforge.plantuml.creole.CreoleMode r2;
        net.sourceforge.plantuml.ISkinSimple r4, $r6;
        java.lang.Object $r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r7;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.CreoleParser;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r7 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        r2 := @parameter3: net.sourceforge.plantuml.creole.CreoleMode;

        r1 := @parameter4: net.sourceforge.plantuml.graphic.FontConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.graphic.FontConfiguration stereotype> = r1;

        r0.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.creole.CreoleMode creoleMode> = r2;

        r0.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r3;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r6 = (net.sourceforge.plantuml.ISkinSimple) $r5;

        r0.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.ISkinSimple skinParam> = $r6;

        r0.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment> = r7;

        return;
    }

    private net.sourceforge.plantuml.creole.Stripe createStripe(java.lang.String, net.sourceforge.plantuml.creole.CreoleContext, net.sourceforge.plantuml.creole.Stripe, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.String r0, $r15;
        net.sourceforge.plantuml.creole.legacy.CreoleStripeSimpleParser $r1;
        net.sourceforge.plantuml.creole.CreoleContext r2;
        net.sourceforge.plantuml.graphic.FontConfiguration r3, $r9;
        net.sourceforge.plantuml.creole.legacy.CreoleParser r4;
        net.sourceforge.plantuml.creole.CreoleMode $r5;
        net.sourceforge.plantuml.ISkinSimple $r6, $r10, $r12, $r14;
        net.sourceforge.plantuml.creole.Stripe $r7, r16;
        net.sourceforge.plantuml.creole.legacy.StripeCode $r8, r17;
        net.sourceforge.plantuml.creole.legacy.StripeTree $r11, r19;
        net.sourceforge.plantuml.creole.legacy.StripeTable $r13, r18;

        r4 := @this: net.sourceforge.plantuml.creole.legacy.CreoleParser;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.creole.CreoleContext;

        r16 := @parameter2: net.sourceforge.plantuml.creole.Stripe;

        r3 := @parameter3: net.sourceforge.plantuml.graphic.FontConfiguration;

        $z0 = r16 instanceof net.sourceforge.plantuml.creole.legacy.StripeCode;

        if $z0 == 0 goto label2;

        r17 = (net.sourceforge.plantuml.creole.legacy.StripeCode) r16;

        $z8 = virtualinvoke r17.<net.sourceforge.plantuml.creole.legacy.StripeCode: boolean isTerminated()>();

        if $z8 == 0 goto label1;

        r16 = null;

        goto label2;

     label1:
        virtualinvoke r17.<net.sourceforge.plantuml.creole.legacy.StripeCode: boolean addAndCheckTermination(java.lang.String)>(r0);

        return null;

     label2:
        $z1 = r16 instanceof net.sourceforge.plantuml.creole.legacy.StripeTable;

        if $z1 == 0 goto label3;

        $z7 = staticinvoke <net.sourceforge.plantuml.creole.legacy.CreoleParser: boolean isTableLine(java.lang.String)>(r0);

        if $z7 == 0 goto label3;

        r18 = (net.sourceforge.plantuml.creole.legacy.StripeTable) r16;

        virtualinvoke r18.<net.sourceforge.plantuml.creole.legacy.StripeTable: void analyzeAndAddLine(java.lang.String)>(r0);

        return null;

     label3:
        $z2 = r16 instanceof net.sourceforge.plantuml.creole.legacy.StripeTree;

        if $z2 == 0 goto label4;

        $r15 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trinNoTrace(java.lang.CharSequence)>(r0);

        $z6 = staticinvoke <net.sourceforge.plantuml.creole.Parser: boolean isTreeStart(java.lang.String)>($r15);

        if $z6 == 0 goto label4;

        r19 = (net.sourceforge.plantuml.creole.legacy.StripeTree) r16;

        virtualinvoke r19.<net.sourceforge.plantuml.creole.legacy.StripeTree: void analyzeAndAdd(java.lang.String)>(r0);

        return null;

     label4:
        $z3 = staticinvoke <net.sourceforge.plantuml.creole.legacy.CreoleParser: boolean isTableLine(java.lang.String)>(r0);

        if $z3 == 0 goto label5;

        $r13 = new net.sourceforge.plantuml.creole.legacy.StripeTable;

        $r14 = r4.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.ISkinSimple skinParam>;

        specialinvoke $r13.<net.sourceforge.plantuml.creole.legacy.StripeTable: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple,java.lang.String)>(r3, $r14, r0);

        return $r13;

     label5:
        $z4 = staticinvoke <net.sourceforge.plantuml.creole.Parser: boolean isTreeStart(java.lang.String)>(r0);

        if $z4 == 0 goto label6;

        $r11 = new net.sourceforge.plantuml.creole.legacy.StripeTree;

        $r12 = r4.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.ISkinSimple skinParam>;

        specialinvoke $r11.<net.sourceforge.plantuml.creole.legacy.StripeTree: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple,java.lang.String)>(r3, $r12, r0);

        return $r11;

     label6:
        $z5 = staticinvoke <net.sourceforge.plantuml.creole.Parser: boolean isCodeStart(java.lang.String)>(r0);

        if $z5 == 0 goto label7;

        $r8 = new net.sourceforge.plantuml.creole.legacy.StripeCode;

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration changeFamily(java.lang.String)>("monospaced");

        $r10 = r4.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.ISkinSimple skinParam>;

        specialinvoke $r8.<net.sourceforge.plantuml.creole.legacy.StripeCode: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple,java.lang.String)>($r9, $r10, r0);

        return $r8;

     label7:
        $r1 = new net.sourceforge.plantuml.creole.legacy.CreoleStripeSimpleParser;

        $r6 = r4.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r5 = r4.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.creole.CreoleMode creoleMode>;

        specialinvoke $r1.<net.sourceforge.plantuml.creole.legacy.CreoleStripeSimpleParser: void <init>(java.lang.String,net.sourceforge.plantuml.creole.CreoleContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r0, r2, r3, $r6, $r5);

        $r7 = virtualinvoke $r1.<net.sourceforge.plantuml.creole.legacy.CreoleStripeSimpleParser: net.sourceforge.plantuml.creole.Stripe createStripe(net.sourceforge.plantuml.creole.CreoleContext)>(r2);

        return $r7;
    }

    public static boolean isTableLine(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean matches(java.lang.String)>("^(\\<#\\w+(,#?\\w+)?\\>)?\\|(\\=)?.*\\|$");

        return $z0;
    }

    public static boolean doesStartByColor(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean matches(java.lang.String)>("^\\=?\\s*(\\<#\\w+(,#?\\w+)?\\>).*");

        return $z0;
    }

    public net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.creole.Sheet $r0;
        net.sourceforge.plantuml.creole.legacy.CreoleParser r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r2;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.creole.CreoleContext $r5;
        java.util.ListIterator r7;
        java.lang.Object $r8, $r17;
        java.lang.CharSequence r9;
        java.lang.String $r10, r18;
        net.sourceforge.plantuml.creole.Stripe $r11, $r19, $r21, r26;
        net.sourceforge.plantuml.graphic.FontConfiguration $r12, $r20;
        net.sourceforge.plantuml.ISkinSimple $r13, $r22;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r14;
        net.sourceforge.plantuml.Guillemet $r15;
        java.util.List $r16;
        net.sourceforge.plantuml.EmbeddedDiagram $r23;
        net.sourceforge.plantuml.creole.legacy.CreoleParser$1 $r24;
        net.sourceforge.plantuml.EmbeddedDiagram$Draw r25;
        java.util.Iterator r27;

        r1 := @this: net.sourceforge.plantuml.creole.legacy.CreoleParser;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new net.sourceforge.plantuml.creole.Sheet;

        $r2 = r1.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.Sheet: void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r2);

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>(r4);

        if $z0 != 0 goto label8;

        $r5 = new net.sourceforge.plantuml.creole.CreoleContext;

        specialinvoke $r5.<net.sourceforge.plantuml.creole.CreoleContext: void <init>()>();

        r7 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label1:
        $z4 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label8;

        $r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.CharSequence) $r8;

        $z1 = r9 instanceof net.sourceforge.plantuml.EmbeddedDiagram;

        if $z1 == 0 goto label2;

        $r23 = (net.sourceforge.plantuml.EmbeddedDiagram) r9;

        $r22 = r1.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.ISkinSimple skinParam>;

        r25 = virtualinvoke $r23.<net.sourceforge.plantuml.EmbeddedDiagram: net.sourceforge.plantuml.EmbeddedDiagram$Draw asDraw(net.sourceforge.plantuml.ISkinSimple)>($r22);

        $r24 = new net.sourceforge.plantuml.creole.legacy.CreoleParser$1;

        specialinvoke $r24.<net.sourceforge.plantuml.creole.legacy.CreoleParser$1: void <init>(net.sourceforge.plantuml.creole.legacy.CreoleParser,net.sourceforge.plantuml.creole.atom.Atom)>(r1, r25);

        r26 = $r24;

        goto label6;

     label2:
        $z2 = r9 instanceof net.sourceforge.plantuml.cucadiagram.Stereotype;

        if $z2 == 0 goto label5;

        $r14 = (net.sourceforge.plantuml.cucadiagram.Stereotype) r9;

        $r13 = r1.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r15 = interfaceinvoke $r13.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.Guillemet guillemet()>();

        $r16 = virtualinvoke $r14.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getLabels(net.sourceforge.plantuml.Guillemet)>($r15);

        r27 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r17 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.lang.String) $r17;

        $r19 = virtualinvoke $r0.<net.sourceforge.plantuml.creole.Sheet: net.sourceforge.plantuml.creole.Stripe getLastStripe()>();

        $r20 = r1.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.graphic.FontConfiguration stereotype>;

        $r21 = specialinvoke r1.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.creole.Stripe createStripe(java.lang.String,net.sourceforge.plantuml.creole.CreoleContext,net.sourceforge.plantuml.creole.Stripe,net.sourceforge.plantuml.graphic.FontConfiguration)>(r18, $r5, $r19, $r20);

        virtualinvoke $r0.<net.sourceforge.plantuml.creole.Sheet: void add(net.sourceforge.plantuml.creole.Stripe)>($r21);

        goto label3;

     label4:
        goto label1;

     label5:
        $r10 = interfaceinvoke r9.<java.lang.CharSequence: java.lang.String toString()>();

        $r11 = virtualinvoke $r0.<net.sourceforge.plantuml.creole.Sheet: net.sourceforge.plantuml.creole.Stripe getLastStripe()>();

        $r12 = r1.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        r26 = specialinvoke r1.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.creole.Stripe createStripe(java.lang.String,net.sourceforge.plantuml.creole.CreoleContext,net.sourceforge.plantuml.creole.Stripe,net.sourceforge.plantuml.graphic.FontConfiguration)>($r10, $r5, $r11, $r12);

     label6:
        if r26 == null goto label7;

        virtualinvoke $r0.<net.sourceforge.plantuml.creole.Sheet: void add(net.sourceforge.plantuml.creole.Stripe)>(r26);

     label7:
        goto label1;

     label8:
        return $r0;
    }

    public static void checkColor(net.sourceforge.plantuml.cucadiagram.Display) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.ugraphic.UFont $r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        net.sourceforge.plantuml.creole.legacy.CreoleParser $r2;
        net.sourceforge.plantuml.SpriteContainerEmpty $r3;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r4;
        net.sourceforge.plantuml.creole.CreoleMode $r5;
        net.sourceforge.plantuml.cucadiagram.Display r6;
        net.sourceforge.plantuml.ugraphic.color.NoSuchColorRuntimeException $r8;
        net.sourceforge.plantuml.ugraphic.color.NoSuchColorException $r10;

        r6 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont byDefault(int)>(10);

        r1 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>($r0);

     label1:
        $r2 = new net.sourceforge.plantuml.creole.legacy.CreoleParser;

        $r4 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r3 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r3.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        $r5 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r2.<net.sourceforge.plantuml.creole.legacy.CreoleParser: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.graphic.FontConfiguration)>(r1, $r4, $r3, $r5, r1);

        virtualinvoke $r2.<net.sourceforge.plantuml.creole.legacy.CreoleParser: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>(r6);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r10 = new net.sourceforge.plantuml.ugraphic.color.NoSuchColorException;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.color.NoSuchColorException: void <init>()>();

        throw $r10;

     label4:
        return;

        catch net.sourceforge.plantuml.ugraphic.color.NoSuchColorRuntimeException from label1 to label2 with label3;
    }
}
