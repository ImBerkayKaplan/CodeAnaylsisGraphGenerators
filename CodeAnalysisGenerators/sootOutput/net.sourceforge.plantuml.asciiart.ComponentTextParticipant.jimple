public class net.sourceforge.plantuml.asciiart.ComponentTextParticipant extends net.sourceforge.plantuml.asciiart.AbstractComponentText
{
    private final net.sourceforge.plantuml.skin.ComponentType type;
    private final net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay;
    private final net.sourceforge.plantuml.FileFormat fileFormat;

    public void <init>(net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextParticipant r0;
        net.sourceforge.plantuml.skin.ComponentType r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.FileFormat r3;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextParticipant;

        r1 := @parameter0: net.sourceforge.plantuml.skin.ComponentType;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter2: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<net.sourceforge.plantuml.asciiart.AbstractComponentText: void <init>()>();

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.skin.ComponentType type> = r1;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay> = r2;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.FileFormat fileFormat> = r3;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area, net.sourceforge.plantuml.skin.Context2D)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r3;
        net.sourceforge.plantuml.asciiart.UmlCharArea r4;
        double $d0, $d1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        net.sourceforge.plantuml.asciiart.ComponentTextParticipant r5;
        net.sourceforge.plantuml.FileFormat $r6, $r7, $r21, $r22;
        net.sourceforge.plantuml.skin.ComponentType $r8, $r9, $r10, $r11, $r16, $r17, $r18, $r19;
        net.sourceforge.plantuml.cucadiagram.Display $r12, $r14;
        java.util.List $r13, $r15;
        net.sourceforge.plantuml.skin.Context2D r20;

        r5 := @this: net.sourceforge.plantuml.asciiart.ComponentTextParticipant;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r20 := @parameter2: net.sourceforge.plantuml.skin.Context2D;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r3 = (net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt) r2;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        i0 = (int) $d0;

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        i1 = (int) $d1;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void fillRect(char,int,int,int,int)>(32, 0, 0, i0, i1);

        $r7 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r6 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r7 != $r6 goto label2;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawBoxSimpleUnicode(int,int,int,int)>(0, 0, i0, i1);

        $r17 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.skin.ComponentType type>;

        $r16 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_TAIL>;

        if $r17 != $r16 goto label1;

        $i10 = i0 - 1;

        $i11 = $i10 / 2;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawChar(char,int,int)>(9524, $i11, 0);

     label1:
        $r19 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.skin.ComponentType type>;

        $r18 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_HEAD>;

        if $r19 != $r18 goto label4;

        $i7 = i0 - 1;

        $i9 = $i7 / 2;

        $i8 = i1 - 1;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawChar(char,int,int)>(9516, $i9, $i8);

        goto label4;

     label2:
        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawBoxSimple(int,int,int,int)>(0, 0, i0, i1);

        $r9 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.skin.ComponentType type>;

        $r8 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_TAIL>;

        if $r9 != $r8 goto label3;

        $i5 = i0 - 1;

        $i6 = $i5 / 2;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawChar(char,int,int)>(43, $i6, 0);

     label3:
        $r11 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.skin.ComponentType type>;

        $r10 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_HEAD>;

        if $r11 != $r10 goto label4;

        $i2 = i0 - 1;

        $i4 = $i2 / 2;

        $i3 = i1 - 1;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawChar(char,int,int)>(43, $i4, $i3);

     label4:
        $r21 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r22 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r21 != $r22 goto label5;

        $r14 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r15 = virtualinvoke $r14.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRUnicode(java.util.Collection,int,int)>($r15, 1, 1);

        goto label6;

     label5:
        $r12 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRSimple(java.util.Collection,int,int)>($r13, 1, 1);

     label6:
        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextParticipant r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        int $i0, $i1;
        double $d0;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextParticipant;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $i0 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getHeight(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        $i1 = $i0 + 2;

        $d0 = (double) $i1;

        return $d0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextParticipant r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        int $i0, $i1;
        double $d0;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextParticipant;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $i0 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getWcWidth(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        $i1 = $i0 + 2;

        $d0 = (double) $i1;

        return $d0;
    }
}
