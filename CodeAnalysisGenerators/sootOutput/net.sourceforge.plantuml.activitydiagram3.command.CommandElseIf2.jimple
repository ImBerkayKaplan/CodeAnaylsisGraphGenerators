public class net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2 extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2 r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2;

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r8, $r12, $r28, $r33, $r37;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r9, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r29, $r30, $r34, $r38, $r39, $r40, $r41, $r42, $r43;
        net.sourceforge.plantuml.command.regex.RegexOptional $r6, $r10, $r26, $r31, $r35;
        net.sourceforge.plantuml.command.regex.RegexConcat $r7, $r27, $r32, $r44;
        net.sourceforge.plantuml.command.regex.RegexOr $r11, $r36;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram3/command/CommandElseIf2;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[16];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf exp4()>();

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r8 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\(");

        $r8[0] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r12 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("->");

        $r12[0] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("INCOMING_COLOR", "-\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*(?:(?:;(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)*)*)\\]->");

        $r12[1] = $r14;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r12);

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r11);

        $r8[1] = $r10;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("INCOMING", "(.*?)");

        $r8[2] = $r15;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\)");

        $r8[3] = $r16;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r8);

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r7);

        $r2[3] = $r6;

        $r17 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r17;

        $r18 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("else");

        $r2[5] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("if");

        $r2[7] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r21;

        $r22 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r22.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\(");

        $r2[9] = $r22;

        $r23 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TEST", "(.*?)");

        $r2[10] = $r23;

        $r24 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r24.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\)");

        $r2[11] = $r24;

        $r25 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[12] = $r25;

        $r26 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r27 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r28 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r29 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r29.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("then");

        $r28[0] = $r29;

        $r30 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r28[1] = $r30;

        $r31 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r32 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r33 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r34 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r34.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\(");

        $r33[0] = $r34;

        $r35 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r36 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r37 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r38 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r38.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("->");

        $r37[0] = $r38;

        $r39 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r39.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("WHEN_COLOR", "-\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*(?:(?:;(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)*)*)\\]->");

        $r37[1] = $r39;

        specialinvoke $r36.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r37);

        specialinvoke $r35.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r36);

        $r33[1] = $r35;

        $r40 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r40.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("WHEN", "(.*?)");

        $r33[2] = $r40;

        $r41 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r41.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\)");

        $r33[3] = $r41;

        specialinvoke $r32.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r33);

        specialinvoke $r31.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r32);

        $r28[2] = $r31;

        specialinvoke $r27.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r28);

        specialinvoke $r26.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r27);

        $r2[13] = $r26;

        $r42 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r42.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(";?");

        $r2[14] = $r42;

        $r43 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[15] = $r43;

        $r44 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r44;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r15;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r2;
        net.sourceforge.plantuml.ISkinParam $r3, $r5;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4;
        net.sourceforge.plantuml.api.ThemeStyle $r6;
        net.sourceforge.plantuml.ugraphic.color.HColor r7, $r14;
        int $i0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r8, r9;
        net.sourceforge.plantuml.cucadiagram.Display $r10;
        net.sourceforge.plantuml.command.CommandExecutionResult $r11;
        net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2 r12;
        net.sourceforge.plantuml.LineLocation r13;

        r12 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r13 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COLOR", 0);

        if r1 != null goto label1;

        $r14 = null;

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r14 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r6, r1);

     label2:
        r7 = $r14;

        r15 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("TEST", 0);

        $i0 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        r15 = null;

     label3:
        r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandBackward3: net.sourceforge.plantuml.activitydiagram3.LinkRendering getBackRendering(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r2, r0, "INCOMING");

        r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandBackward3: net.sourceforge.plantuml.activitydiagram3.LinkRendering getBackRendering(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r2, r0, "WHEN");

        $r10 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r15);

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.command.CommandExecutionResult elseIf(net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.ugraphic.color.HColor)>(r8, $r10, r9, r7);

        return $r11;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2 r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
