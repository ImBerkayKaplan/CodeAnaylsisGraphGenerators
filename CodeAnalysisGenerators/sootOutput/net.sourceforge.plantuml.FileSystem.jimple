public class net.sourceforge.plantuml.FileSystem extends java.lang.Object
{
    private static final net.sourceforge.plantuml.FileSystem singleton;
    private java.lang.ThreadLocal currentDir;
    static final boolean $assertionsDisabled;

    private void <init>()
    {
        net.sourceforge.plantuml.FileSystem r0;
        java.lang.ThreadLocal $r1;

        r0 := @this: net.sourceforge.plantuml.FileSystem;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.ThreadLocal;

        specialinvoke $r1.<java.lang.ThreadLocal: void <init>()>();

        r0.<net.sourceforge.plantuml.FileSystem: java.lang.ThreadLocal currentDir> = $r1;

        virtualinvoke r0.<net.sourceforge.plantuml.FileSystem: void reset()>();

        return;
    }

    public static net.sourceforge.plantuml.FileSystem getInstance()
    {
        net.sourceforge.plantuml.FileSystem $r0;

        $r0 = <net.sourceforge.plantuml.FileSystem: net.sourceforge.plantuml.FileSystem singleton>;

        return $r0;
    }

    public void setCurrentDir(net.sourceforge.plantuml.security.SFile)
    {
        net.sourceforge.plantuml.security.SFile r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String $r3, $r5, $r8;
        net.sourceforge.plantuml.FileSystem r6;
        java.lang.ThreadLocal $r7, $r9;

        r6 := @this: net.sourceforge.plantuml.FileSystem;

        r0 := @parameter0: net.sourceforge.plantuml.security.SFile;

        if r0 != null goto label1;

        $r9 = r6.<net.sourceforge.plantuml.FileSystem: java.lang.ThreadLocal currentDir>;

        virtualinvoke $r9.<java.lang.ThreadLocal: void set(java.lang.Object)>(null);

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting current dir: ");

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.security.SFile: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r5);

        $r7 = r6.<net.sourceforge.plantuml.FileSystem: java.lang.ThreadLocal currentDir>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.security.SFile: java.lang.String getAbsolutePath()>();

        virtualinvoke $r7.<java.lang.ThreadLocal: void set(java.lang.Object)>($r8);

     label2:
        return;
    }

    public net.sourceforge.plantuml.security.SFile getCurrentDir()
    {
        net.sourceforge.plantuml.FileSystem r0;
        java.lang.ThreadLocal $r1;
        java.lang.Object $r2;
        java.lang.String r3;
        net.sourceforge.plantuml.security.SFile $r4;

        r0 := @this: net.sourceforge.plantuml.FileSystem;

        $r1 = r0.<net.sourceforge.plantuml.FileSystem: java.lang.ThreadLocal currentDir>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r3 = (java.lang.String) $r2;

        if r3 == null goto label1;

        $r4 = new net.sourceforge.plantuml.security.SFile;

        specialinvoke $r4.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>(r3);

        return $r4;

     label1:
        return null;
    }

    public net.sourceforge.plantuml.security.SFile getFile(java.lang.String) throws java.io.IOException
    {
        net.sourceforge.plantuml.FileSystem r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        net.sourceforge.plantuml.security.SFile r2, $r6, $r7, $r10, $r13, $r15, $r16, $r17, $r18, r19, r21, r22, r24, r25;
        java.util.List $r3, $r4;
        java.lang.AssertionError $r5, $r8, $r11, $r14;
        java.lang.Object $r9, $r12;
        java.util.Iterator r20, r23;

        r0 := @this: net.sourceforge.plantuml.FileSystem;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.FileSystem: boolean isAbsolute(java.lang.String)>(r1);

        if $z0 == 0 goto label01;

        $r17 = new net.sourceforge.plantuml.security.SFile;

        specialinvoke $r17.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>(r1);

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getCanonicalFile()>();

        return $r18;

     label01:
        r2 = virtualinvoke r0.<net.sourceforge.plantuml.FileSystem: net.sourceforge.plantuml.security.SFile getCurrentDir()>();

        r19 = null;

        if r2 == null goto label02;

        $r15 = virtualinvoke r2.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getAbsoluteFile()>();

        r19 = virtualinvoke $r15.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>(r1);

        $z10 = virtualinvoke r19.<net.sourceforge.plantuml.security.SFile: boolean exists()>();

        if $z10 == 0 goto label02;

        $r16 = virtualinvoke r19.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getCanonicalFile()>();

        return $r16;

     label02:
        $r3 = staticinvoke <net.sourceforge.plantuml.security.SecurityUtils: java.util.List getPath(java.lang.String)>("plantuml.include.path");

        r20 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z11 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label06;

        $r12 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (net.sourceforge.plantuml.security.SFile) $r12;

        $z7 = <net.sourceforge.plantuml.FileSystem: boolean $assertionsDisabled>;

        if $z7 != 0 goto label04;

        $z9 = virtualinvoke r21.<net.sourceforge.plantuml.security.SFile: boolean isDirectory()>();

        if $z9 != 0 goto label04;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label04:
        r22 = virtualinvoke r21.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>(r1);

        $z8 = virtualinvoke r22.<net.sourceforge.plantuml.security.SFile: boolean exists()>();

        if $z8 == 0 goto label05;

        $r13 = virtualinvoke r22.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getCanonicalFile()>();

        return $r13;

     label05:
        goto label03;

     label06:
        $r4 = staticinvoke <net.sourceforge.plantuml.security.SecurityUtils: java.util.List getPath(java.lang.String)>("java.class.path");

        r23 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r9 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r24 = (net.sourceforge.plantuml.security.SFile) $r9;

        $z4 = <net.sourceforge.plantuml.FileSystem: boolean $assertionsDisabled>;

        if $z4 != 0 goto label08;

        $z6 = virtualinvoke r24.<net.sourceforge.plantuml.security.SFile: boolean isDirectory()>();

        if $z6 != 0 goto label08;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label08:
        r25 = virtualinvoke r24.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>(r1);

        $z5 = virtualinvoke r25.<net.sourceforge.plantuml.security.SFile: boolean exists()>();

        if $z5 == 0 goto label09;

        $r10 = virtualinvoke r25.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getCanonicalFile()>();

        return $r10;

     label09:
        goto label07;

     label10:
        if r2 != null goto label12;

        $z3 = <net.sourceforge.plantuml.FileSystem: boolean $assertionsDisabled>;

        if $z3 != 0 goto label11;

        if r19 == null goto label11;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label11:
        $r6 = new net.sourceforge.plantuml.security.SFile;

        specialinvoke $r6.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getCanonicalFile()>();

        return $r7;

     label12:
        $z2 = <net.sourceforge.plantuml.FileSystem: boolean $assertionsDisabled>;

        if $z2 != 0 goto label13;

        if r19 != null goto label13;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label13:
        return r19;
    }

    private boolean isAbsolute(java.lang.String)
    {
        net.sourceforge.plantuml.security.SFile $r0;
        java.lang.String r1;
        boolean $z0;
        net.sourceforge.plantuml.FileSystem r3;

        r3 := @this: net.sourceforge.plantuml.FileSystem;

        r1 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.security.SFile;

        specialinvoke $r0.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>(r1);

        $z0 = virtualinvoke $r0.<net.sourceforge.plantuml.security.SFile: boolean isAbsolute()>();

        return $z0;
    }

    public void reset()
    {
        net.sourceforge.plantuml.FileSystem r0;
        net.sourceforge.plantuml.security.SFile $r1;

        r0 := @this: net.sourceforge.plantuml.FileSystem;

        $r1 = new net.sourceforge.plantuml.security.SFile;

        specialinvoke $r1.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>(".");

        virtualinvoke r0.<net.sourceforge.plantuml.FileSystem: void setCurrentDir(net.sourceforge.plantuml.security.SFile)>($r1);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.FileSystem $r1;

        $r0 = class "Lnet/sourceforge/plantuml/FileSystem;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.FileSystem: boolean $assertionsDisabled> = $z1;

        $r1 = new net.sourceforge.plantuml.FileSystem;

        specialinvoke $r1.<net.sourceforge.plantuml.FileSystem: void <init>()>();

        <net.sourceforge.plantuml.FileSystem: net.sourceforge.plantuml.FileSystem singleton> = $r1;

        return;
    }
}
