public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile implements net.sourceforge.plantuml.creole.Stencil, net.sourceforge.plantuml.style.Styleable
{
    private final net.sourceforge.plantuml.svek.image.Opale opale;
    private final boolean withOutPoint;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane;

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public java.util.Collection getMyChildren()
    {
        java.util.List $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1, $r2;
        java.util.Set $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2);

        return $r3;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        return $r1;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        return $r1;
    }

    public void <init>(boolean, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ISkinParam, boolean, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r2;
        boolean z0, $z1, $z2, z3;
        net.sourceforge.plantuml.skin.rose.Rose $r3;
        net.sourceforge.plantuml.ugraphic.UStroke $r5, r23;
        net.sourceforge.plantuml.ColorParam $r6, $r7;
        net.sourceforge.plantuml.cucadiagram.Display r8;
        net.sourceforge.plantuml.creole.Sheet r9;
        net.sourceforge.plantuml.style.StyleSignature $r11;
        net.sourceforge.plantuml.style.StyleBuilder $r12;
        net.sourceforge.plantuml.style.PName $r13, $r17, $r21;
        net.sourceforge.plantuml.style.Value $r14, $r18, $r22;
        net.sourceforge.plantuml.api.ThemeStyle $r15, $r19;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r16, $r20;
        net.sourceforge.plantuml.style.Style r24;
        net.sourceforge.plantuml.ugraphic.color.HColor r25, r26;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.LineBreakStrategy r27;
        net.sourceforge.plantuml.graphic.FontConfiguration $r28;
        net.sourceforge.plantuml.FontParam $r29;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r31, $r32;
        net.sourceforge.plantuml.creole.CreoleMode $r33;
        net.sourceforge.plantuml.creole.SheetBuilder $r34;
        net.sourceforge.plantuml.creole.SheetBlock2 $r35;
        net.sourceforge.plantuml.creole.SheetBlock1 $r36;
        net.sourceforge.plantuml.svek.image.Opale $r37;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        z3 := @parameter0: boolean;

        r8 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        z0 := @parameter3: boolean;

        r2 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane> = r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: boolean withOutPoint> = z0;

        $r3 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r3.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        $r5 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r23 = $r5;

        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label1;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r12 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r24 = virtualinvoke $r11.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r12);

        $r13 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r14 = virtualinvoke r24.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r13);

        $r15 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r25 = interfaceinvoke $r14.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r15, $r16);

        $r17 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r18 = virtualinvoke r24.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r17);

        $r19 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r26 = interfaceinvoke $r18.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r19, $r20);

        $r21 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r22 = virtualinvoke r24.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r21);

        d0 = interfaceinvoke $r22.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r27 = virtualinvoke r24.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        r23 = virtualinvoke r24.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label4;

     label1:
        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBackground>;

        r25 = virtualinvoke $r3.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r1, $r6);

        $r7 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        r26 = virtualinvoke $r3.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r1, $r7);

        $z2 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z2 == 0 goto label2;

        $d1 = 4.0;

        goto label3;

     label2:
        $d1 = 0.0;

     label3:
        d0 = $d1;

        r27 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

     label4:
        $r28 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r29 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        specialinvoke $r28.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r1, $r29, null);

        $r31 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r32 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r31);

        $r33 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $r34 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>($r28, $r32, r1, $r33);

        r9 = interfaceinvoke $r34.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>(r8);

        $r35 = new net.sourceforge.plantuml.creole.SheetBlock2;

        $r36 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $d2 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: double getPadding()>();

        specialinvoke $r36.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>(r9, r27, $d2);

        specialinvoke $r35.<net.sourceforge.plantuml.creole.SheetBlock2: void <init>(net.sourceforge.plantuml.creole.SheetBlock1,net.sourceforge.plantuml.creole.Stencil,net.sourceforge.plantuml.ugraphic.UStroke)>($r36, r0, r23);

        $r37 = new net.sourceforge.plantuml.svek.image.Opale;

        specialinvoke $r37.<net.sourceforge.plantuml.svek.image.Opale: void <init>(double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.TextBlock,boolean,net.sourceforge.plantuml.ugraphic.UStroke)>(d0, r26, r25, $r35, 0, r23);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.svek.image.Opale opale> = $r37;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.svek.image.Opale $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.svek.image.Opale opale>;

        virtualinvoke $r2.<net.sourceforge.plantuml.svek.image.Opale: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: boolean withOutPoint>;

        if $z0 == 0 goto label1;

        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = $d2 / 2.0;

        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double,double)>(r2, $d3, 0.0, $d4);

        return $r4;

     label1:
        $r3 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r2, $d1, 0.0);

        return $r3;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.svek.image.Opale $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.svek.image.Opale opale>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.svek.image.Opale $r1;
        int $i0, $i1;
        double $d0, d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.svek.image.Opale opale>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.svek.image.Opale: int getMarginX1()>();

        $i1 = neg $i0;

        $d0 = (double) $i1;

        return $d0;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.svek.image.Opale $r2, $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double $d0, $d1, $d2, d3;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d3 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.svek.image.Opale opale>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileNoteAlone: net.sourceforge.plantuml.svek.image.Opale opale>;

        $i0 = virtualinvoke $r4.<net.sourceforge.plantuml.svek.image.Opale: int getMarginX1()>();

        $d1 = (double) $i0;

        $d2 = $d0 - $d1;

        return $d2;
    }
}
