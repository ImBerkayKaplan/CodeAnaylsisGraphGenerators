class net.sourceforge.plantuml.argon2.algorithm.FillBlock extends java.lang.Object
{

    void <init>()
    {
        net.sourceforge.plantuml.argon2.algorithm.FillBlock r0;

        r0 := @this: net.sourceforge.plantuml.argon2.algorithm.FillBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void fillBlock(net.sourceforge.plantuml.argon2.model.Block, net.sourceforge.plantuml.argon2.model.Block, net.sourceforge.plantuml.argon2.model.Block, boolean)
    {
        net.sourceforge.plantuml.argon2.model.Block $r0, $r2, r4, r5, r6;
        boolean z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, i62, i63;

        r4 := @parameter0: net.sourceforge.plantuml.argon2.model.Block;

        r5 := @parameter1: net.sourceforge.plantuml.argon2.model.Block;

        r6 := @parameter2: net.sourceforge.plantuml.argon2.model.Block;

        z0 := @parameter3: boolean;

        $r0 = new net.sourceforge.plantuml.argon2.model.Block;

        specialinvoke $r0.<net.sourceforge.plantuml.argon2.model.Block: void <init>()>();

        $r2 = new net.sourceforge.plantuml.argon2.model.Block;

        specialinvoke $r2.<net.sourceforge.plantuml.argon2.model.Block: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.argon2.model.Block: void xor(net.sourceforge.plantuml.argon2.model.Block,net.sourceforge.plantuml.argon2.model.Block)>(r4, r5);

        virtualinvoke $r2.<net.sourceforge.plantuml.argon2.model.Block: void copyBlock(net.sourceforge.plantuml.argon2.model.Block)>($r0);

        i62 = 0;

     label1:
        if i62 >= 8 goto label2;

        $i61 = 16 * i62;

        $i31 = 16 * i62;

        $i60 = $i31 + 1;

        $i32 = 16 * i62;

        $i59 = $i32 + 2;

        $i33 = 16 * i62;

        $i58 = $i33 + 3;

        $i34 = 16 * i62;

        $i57 = $i34 + 4;

        $i35 = 16 * i62;

        $i56 = $i35 + 5;

        $i36 = 16 * i62;

        $i55 = $i36 + 6;

        $i37 = 16 * i62;

        $i54 = $i37 + 7;

        $i38 = 16 * i62;

        $i53 = $i38 + 8;

        $i39 = 16 * i62;

        $i52 = $i39 + 9;

        $i40 = 16 * i62;

        $i51 = $i40 + 10;

        $i41 = 16 * i62;

        $i50 = $i41 + 11;

        $i42 = 16 * i62;

        $i49 = $i42 + 12;

        $i43 = 16 * i62;

        $i48 = $i43 + 13;

        $i44 = 16 * i62;

        $i47 = $i44 + 14;

        $i45 = 16 * i62;

        $i46 = $i45 + 15;

        staticinvoke <net.sourceforge.plantuml.argon2.algorithm.Functions: void roundFunction(net.sourceforge.plantuml.argon2.model.Block,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>($r2, $i61, $i60, $i59, $i58, $i57, $i56, $i55, $i54, $i53, $i52, $i51, $i50, $i49, $i48, $i47, $i46);

        i62 = i62 + 1;

        goto label1;

     label2:
        i63 = 0;

     label3:
        if i63 >= 8 goto label4;

        $i30 = 2 * i63;

        $i0 = 2 * i63;

        $i29 = $i0 + 1;

        $i1 = 2 * i63;

        $i28 = $i1 + 16;

        $i2 = 2 * i63;

        $i27 = $i2 + 17;

        $i3 = 2 * i63;

        $i26 = $i3 + 32;

        $i4 = 2 * i63;

        $i25 = $i4 + 33;

        $i5 = 2 * i63;

        $i24 = $i5 + 48;

        $i6 = 2 * i63;

        $i23 = $i6 + 49;

        $i7 = 2 * i63;

        $i22 = $i7 + 64;

        $i8 = 2 * i63;

        $i21 = $i8 + 65;

        $i9 = 2 * i63;

        $i20 = $i9 + 80;

        $i10 = 2 * i63;

        $i19 = $i10 + 81;

        $i11 = 2 * i63;

        $i18 = $i11 + 96;

        $i12 = 2 * i63;

        $i17 = $i12 + 97;

        $i13 = 2 * i63;

        $i16 = $i13 + 112;

        $i14 = 2 * i63;

        $i15 = $i14 + 113;

        staticinvoke <net.sourceforge.plantuml.argon2.algorithm.Functions: void roundFunction(net.sourceforge.plantuml.argon2.model.Block,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int)>($r2, $i30, $i29, $i28, $i27, $i26, $i25, $i24, $i23, $i22, $i21, $i20, $i19, $i18, $i17, $i16, $i15);

        i63 = i63 + 1;

        goto label3;

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r6.<net.sourceforge.plantuml.argon2.model.Block: void xor(net.sourceforge.plantuml.argon2.model.Block,net.sourceforge.plantuml.argon2.model.Block,net.sourceforge.plantuml.argon2.model.Block)>($r0, $r2, r6);

        goto label6;

     label5:
        virtualinvoke r6.<net.sourceforge.plantuml.argon2.model.Block: void xor(net.sourceforge.plantuml.argon2.model.Block,net.sourceforge.plantuml.argon2.model.Block)>($r0, $r2);

     label6:
        return;
    }
}
