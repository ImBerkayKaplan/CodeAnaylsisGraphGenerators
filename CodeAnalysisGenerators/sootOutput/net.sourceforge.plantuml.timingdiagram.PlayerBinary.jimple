public class net.sourceforge.plantuml.timingdiagram.PlayerBinary extends net.sourceforge.plantuml.timingdiagram.Player
{
    private final java.util.List constraints;
    private final java.util.SortedMap values;
    private java.lang.Boolean initialState;
    private final double ymargin;

    public void <init>(java.lang.String, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.timingdiagram.TimingRuler, boolean)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.timingdiagram.TimingRuler r3;
        boolean z0;
        java.util.ArrayList $r4;
        java.util.TreeMap $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.timingdiagram.TimingRuler;

        z0 := @parameter3: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.Player: void <init>(java.lang.String,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.timingdiagram.TimingRuler,boolean)>(r1, r2, r3, z0);

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double ymargin> = 8.0;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.util.List constraints> = $r4;

        $r5 = new java.util.TreeMap;

        specialinvoke $r5.<java.util.TreeMap: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.util.SortedMap values> = $r5;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double ymargin> = 8.0;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: int suggestedHeight> = 30;

        return;
    }

    private double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r1;
        java.util.List $r2;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.util.List constraints>;

        $d0 = staticinvoke <net.sourceforge.plantuml.timingdiagram.TimeConstraint: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder,java.util.List)>(r0, $r2);

        return $d0;
    }

    public double getFullHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $i0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: int suggestedHeight>;

        $d1 = (double) $i0;

        $d2 = $d0 + $d1;

        return $d2;
    }

    protected net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r6;

        r6 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timingDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName clock>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    protected net.sourceforge.plantuml.graphic.SymbolContext getContextLegacy()
    {
        net.sourceforge.plantuml.graphic.SymbolContext $r0, $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r5;

        r5 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        $r0 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor COL_D7E0F2>;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor COL_038048>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r2, $r1);

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r4 = virtualinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r3);

        return $r4;
    }

    public net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint getTimeProjection(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.timingdiagram.TimeTick)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick r1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r2;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint $r3;
        java.awt.geom.Point2D$Double $r4, $r6;
        net.sourceforge.plantuml.graphic.StringBounder r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r1 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        d0 = virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>(r1);

        $r3 = new net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint;

        $r4 = new java.awt.geom.Point2D$Double;

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getYpos(net.sourceforge.plantuml.graphic.StringBounder,boolean)>(r5, 0);

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, $d1);

        $r6 = new java.awt.geom.Point2D$Double;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getYpos(net.sourceforge.plantuml.graphic.StringBounder,boolean)>(r5, 1);

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, $d2);

        specialinvoke $r3.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r4, $r6);

        return $r3;
    }

    public void addNote(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.command.Position)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r1;
        net.sourceforge.plantuml.timingdiagram.TimeTick r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.command.Position r4;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r2 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter2: net.sourceforge.plantuml.command.Position;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void defineState(java.lang.String, java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r1;
        java.lang.String r2, r3;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public transient void setState(net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String, net.sourceforge.plantuml.graphic.color.Colors, java.lang.String[])
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        java.lang.String[] r1;
        java.lang.String $r2, r8;
        boolean z0;
        net.sourceforge.plantuml.timingdiagram.TimeTick r3;
        java.util.SortedMap $r4;
        java.lang.Boolean $r5, $r7;
        net.sourceforge.plantuml.graphic.color.Colors r9;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r3 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r8 := @parameter1: java.lang.String;

        r9 := @parameter2: net.sourceforge.plantuml.graphic.color.Colors;

        r1 := @parameter3: java.lang.String[];

        $r2 = r1[0];

        z0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: boolean getState(java.lang.String)>($r2);

        if r3 != null goto label1;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.lang.Boolean initialState> = $r7;

        goto label2;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.util.SortedMap values>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        interfaceinvoke $r4.<java.util.SortedMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r5);

     label2:
        return;
    }

    private boolean getState(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r3;

        r3 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r0 := @parameter0: java.lang.String;

        $r1 = "1";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r2 = "high";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void createConstraint(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint $r1;
        net.sourceforge.plantuml.timingdiagram.TimeTick r2, r3;
        java.lang.String r4;
        net.sourceforge.plantuml.ISkinParam $r5;
        java.util.List $r6;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r2 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r3 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r4 := @parameter2: java.lang.String;

        $r6 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.util.List constraints>;

        $r1 = new net.sourceforge.plantuml.timingdiagram.TimeConstraint;

        $r5 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: net.sourceforge.plantuml.ISkinParam skinParam>;

        specialinvoke $r1.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: void <init>(net.sourceforge.plantuml.timingdiagram.TimeTick,net.sourceforge.plantuml.timingdiagram.TimeTick,java.lang.String,net.sourceforge.plantuml.ISkinParam)>(r2, r3, r4, $r5);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    private double getYpos(net.sourceforge.plantuml.graphic.StringBounder, boolean)
    {
        boolean z0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getYhigh(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        goto label2;

     label1:
        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getYlow(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

     label2:
        return $d0;
    }

    private double getYlow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getFullHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = $d0 - 8.0;

        return $d1;
    }

    private double getYhigh(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = 8.0 + $d0;

        return $d1;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getPart1(double, double)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary$1 $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r1;
        double d0, d1;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.timingdiagram.PlayerBinary$1;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$1: void <init>(net.sourceforge.plantuml.timingdiagram.PlayerBinary)>(r1);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.UDrawable getPart2()
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary$2 $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r1;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        $r0 = new net.sourceforge.plantuml.timingdiagram.PlayerBinary$2;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: void <init>(net.sourceforge.plantuml.timingdiagram.PlayerBinary)>(r1);

        return $r0;
    }

    private void drawConstraints(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.TimeConstraint r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r6;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.util.List constraints>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.timingdiagram.TimeConstraint) $r3;

        $r6 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.TimeConstraint: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.timingdiagram.TimingRuler)>(r5, $r6);

        goto label1;

     label2:
        return;
    }

    static java.lang.Boolean access$000(net.sourceforge.plantuml.timingdiagram.PlayerBinary)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        java.lang.Boolean $r1;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.lang.Boolean initialState>;

        return $r1;
    }

    static double access$100(net.sourceforge.plantuml.timingdiagram.PlayerBinary, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getYlow(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    static double access$200(net.sourceforge.plantuml.timingdiagram.PlayerBinary, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getYhigh(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    static java.util.SortedMap access$300(net.sourceforge.plantuml.timingdiagram.PlayerBinary)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        java.util.SortedMap $r1;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.util.SortedMap values>;

        return $r1;
    }

    static double access$400(net.sourceforge.plantuml.timingdiagram.PlayerBinary, net.sourceforge.plantuml.graphic.StringBounder, boolean)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        boolean z0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        z0 := @parameter2: boolean;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getYpos(net.sourceforge.plantuml.graphic.StringBounder,boolean)>(r1, z0);

        return $d0;
    }

    static double access$500(net.sourceforge.plantuml.timingdiagram.PlayerBinary, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: double getHeightForConstraints(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    static void access$600(net.sourceforge.plantuml.timingdiagram.PlayerBinary, net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: void drawConstraints(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }
}
