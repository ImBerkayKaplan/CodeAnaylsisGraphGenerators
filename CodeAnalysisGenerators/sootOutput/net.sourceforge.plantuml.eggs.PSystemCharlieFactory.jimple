public class net.sourceforge.plantuml.eggs.PSystemCharlieFactory extends net.sourceforge.plantuml.command.PSystemSingleLineFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.eggs.PSystemCharlieFactory r0;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemCharlieFactory;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemSingleLineFactory: void <init>()>();

        return;
    }

    protected net.sourceforge.plantuml.AbstractPSystem executeLine(net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.eggs.PSystemCharlie $r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.eggs.PSystemCharlieFactory r3;

        r3 := @this: net.sourceforge.plantuml.eggs.PSystemCharlieFactory;

        r2 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("charlie");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("jesuischarlie");

        if $z1 == 0 goto label2;

     label1:
        $r1 = new net.sourceforge.plantuml.eggs.PSystemCharlie;

        specialinvoke $r1.<net.sourceforge.plantuml.eggs.PSystemCharlie: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r2);

        return $r1;

     label2:
        return null;
    }
}
