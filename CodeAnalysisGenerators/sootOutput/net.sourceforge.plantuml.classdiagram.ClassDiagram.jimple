public class net.sourceforge.plantuml.classdiagram.ClassDiagram extends net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram
{
    private boolean allowMixing;
    private int useLayoutExplicit;

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.UmlDiagramType $r4;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType CLASS>;

        specialinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: int useLayoutExplicit> = 0;

        return;
    }

    private net.sourceforge.plantuml.cucadiagram.Code getShortName1972(net.sourceforge.plantuml.cucadiagram.Code)
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        java.lang.String $r1, r3, r5, $r6, r7, $r8;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.Code r4, $r9, $r10;
        int $i0, $i1, $i2;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Code;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespaceSeparator()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        r3 = (java.lang.String) $r2;

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespaceSeparator()>();

        r7 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespace1972(net.sourceforge.plantuml.cucadiagram.Code,java.lang.String)>(r4, $r6);

        if r7 != null goto label1;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r5);

        return $r10;

     label1:
        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        $i2 = $i0 + $i1;

        $r8 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>($i2);

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>($r8);

        return $r9;
    }

    public net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        net.sourceforge.plantuml.classdiagram.ClassDiagram r2;
        boolean $z0, $z1, $z2;
        java.lang.String $r3, $r4, $r10, $r11;
        net.sourceforge.plantuml.cucadiagram.Display $r5, $r12;
        net.sourceforge.plantuml.graphic.USymbol r6;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r7, $r8, $r9, $r14, $r16, $r18, $r19;
        net.sourceforge.plantuml.cucadiagram.LeafType $r13, $r15, $r17, r21;
        net.sourceforge.plantuml.cucadiagram.Code r20, r22, r23, r24;

        r2 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r20 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r21 := @parameter2: net.sourceforge.plantuml.cucadiagram.LeafType;

        r6 := @parameter3: net.sourceforge.plantuml.graphic.USymbol;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: boolean V1972()>();

        if $z0 == 0 goto label2;

        if r21 != null goto label1;

        r21 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

     label1:
        $r19 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r20, r21, r6);

        return $r19;

     label2:
        if r21 != null goto label5;

        r22 = interfaceinvoke r20.<net.sourceforge.plantuml.cucadiagram.Code: net.sourceforge.plantuml.cucadiagram.Code eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>("\"([:");

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespaceSeparator()>();

        if $r10 != null goto label3;

        $r17 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r22, $r17, r6);

        return $r18;

     label3:
        r23 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code getFullyQualifiedCode1972(net.sourceforge.plantuml.cucadiagram.Code)>(r22);

        $z2 = specialinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r23);

        if $z2 == 0 goto label4;

        $r15 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        $r16 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r23, $r15, r6);

        return $r16;

     label4:
        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r11);

        $r13 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        $r14 = specialinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createEntityWithNamespace1972(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r23, $r12, $r13, r6);

        return $r14;

     label5:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespaceSeparator()>();

        if $r3 != null goto label6;

        $r9 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r20, r21, r6);

        return $r9;

     label6:
        r24 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code getFullyQualifiedCode1972(net.sourceforge.plantuml.cucadiagram.Code)>(r20);

        $z1 = specialinvoke r2.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r24);

        if $z1 == 0 goto label7;

        $r8 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r24, r21, r6);

        return $r8;

     label7:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r4);

        $r7 = specialinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createEntityWithNamespace1972(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r24, $r5, r21, r6);

        return $r7;
    }

    public net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        net.sourceforge.plantuml.cucadiagram.LeafType r2, $r3, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        net.sourceforge.plantuml.classdiagram.ClassDiagram r4;
        java.lang.String $r5, $r13;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Display r6;
        net.sourceforge.plantuml.graphic.USymbol r7;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r8, $r14, $r15, $r23;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        net.sourceforge.plantuml.cucadiagram.Code r24, r25;

        r4 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r24 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r6 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter3: net.sourceforge.plantuml.cucadiagram.LeafType;

        r7 := @parameter4: net.sourceforge.plantuml.graphic.USymbol;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r3 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ABSTRACT_CLASS>;

        if r2 == $r3 goto label1;

        $r16 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ANNOTATION>;

        if r2 == $r16 goto label1;

        $r17 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        if r2 == $r17 goto label1;

        $r18 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType INTERFACE>;

        if r2 == $r18 goto label1;

        $r19 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ENUM>;

        if r2 == $r19 goto label1;

        $r20 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType LOLLIPOP_FULL>;

        if r2 == $r20 goto label1;

        $r21 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType LOLLIPOP_HALF>;

        if r2 == $r21 goto label1;

        $r22 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        if r2 == $r22 goto label1;

        $r23 = specialinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r24, r6, r2, r7);

        return $r23;

     label1:
        $z1 = virtualinvoke r4.<net.sourceforge.plantuml.classdiagram.ClassDiagram: boolean V1972()>();

        if $z1 == 0 goto label2;

        $r15 = specialinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r24, r6, r2, r7);

        return $r15;

     label2:
        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespaceSeparator()>();

        if $r5 != null goto label3;

        $r14 = specialinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r24, r6, r2, r7);

        return $r14;

     label3:
        r25 = virtualinvoke r4.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code getFullyQualifiedCode1972(net.sourceforge.plantuml.cucadiagram.Code)>(r24);

        $z0 = specialinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r25);

        if $z0 == 0 goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Already known: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r25);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label4:
        $r8 = specialinvoke r4.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createEntityWithNamespace1972(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r25, r6, r2, r7);

        return $r8;
    }

    private net.sourceforge.plantuml.cucadiagram.ILeaf createEntityWithNamespace1972(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.cucadiagram.Ident r1, r14;
        net.sourceforge.plantuml.cucadiagram.IGroup r3, $r16;
        net.sourceforge.plantuml.cucadiagram.Code r5, $r11, r19;
        java.lang.String $r6, r7, $r17;
        net.sourceforge.plantuml.cucadiagram.Display r8, $r12, r20, r21;
        net.sourceforge.plantuml.cucadiagram.LeafType r9;
        net.sourceforge.plantuml.graphic.USymbol r10;
        net.sourceforge.plantuml.creole.CreoleMode $r13;
        net.sourceforge.plantuml.cucadiagram.GroupType $r15;
        java.lang.UnsupportedOperationException $r18;
        net.sourceforge.plantuml.cucadiagram.ILeaf r22;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r5 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r8 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r9 := @parameter3: net.sourceforge.plantuml.cucadiagram.LeafType;

        r10 := @parameter4: net.sourceforge.plantuml.graphic.USymbol;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r18 = new java.lang.UnsupportedOperationException;

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r18;

     label1:
        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespaceSeparator()>();

        r7 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespace1972(net.sourceforge.plantuml.cucadiagram.Code,java.lang.String)>(r5, $r6);

        if r7 == null goto label3;

        $z1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>(r3);

        if $z1 != 0 goto label2;

        $r17 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.IGroup: java.lang.String getCodeGetName()>();

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z2 != 0 goto label3;

     label2:
        r19 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r7);

        r20 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r7);

        r14 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdentSpecial(java.lang.String)>(r7);

        $r15 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType PACKAGE>;

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()>();

        virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: void gotoGroupExternal(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup)>(r14, r19, r20, r19, $r15, $r16);

     label3:
        $z3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>(r8);

        if $z3 == 0 goto label4;

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code getShortName1972(net.sourceforge.plantuml.cucadiagram.Code)>(r5);

        $r12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>($r11);

        $r13 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        r21 = virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display withCreoleMode(net.sourceforge.plantuml.creole.CreoleMode)>($r13);

        goto label5;

     label4:
        r21 = r8;

     label5:
        r22 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeafInternal(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r5, r21, r9, r10);

        virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: void gotoThisGroup(net.sourceforge.plantuml.cucadiagram.IGroup)>(r3);

        return r22;
    }

    public final boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.cucadiagram.Code r2, $r3;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Code;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.lang.String getNamespaceSeparator()>();

        if $r1 != null goto label1;

        $z1 = specialinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r2);

        return $z1;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.Code getFullyQualifiedCode1972(net.sourceforge.plantuml.cucadiagram.Code)>(r2);

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>($r3);

        return $z0;
    }

    public void setAllowMixing(boolean)
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: boolean allowMixing> = z0;

        return;
    }

    public boolean isAllowMixing()
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        $z0 = r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: boolean allowMixing>;

        return $z0;
    }

    public void layoutNewLine()
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        $i0 = r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: int useLayoutExplicit>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: int useLayoutExplicit> = $i1;

        virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: void incRawLayout()>();

        return;
    }

    protected final net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        int $i0, i1;
        java.io.OutputStream r1;
        net.sourceforge.plantuml.FileFormatOption r2;
        net.sourceforge.plantuml.core.ImageData $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r1 := @parameter0: java.io.OutputStream;

        i1 := @parameter1: int;

        r2 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $i0 = r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: int useLayoutExplicit>;

        if $i0 == 0 goto label1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.core.ImageData exportLayoutExplicit(java.io.OutputStream,int,net.sourceforge.plantuml.FileFormatOption)>(r1, i1, r2);

        return $r4;

     label1:
        $r3 = specialinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream,int,net.sourceforge.plantuml.FileFormatOption)>(r1, i1, r2);

        return $r3;
    }

    protected final net.sourceforge.plantuml.core.ImageData exportLayoutExplicit(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.classdiagram.FullLayout $r0;
        net.sourceforge.plantuml.classdiagram.ClassDiagram r2;
        int $i0, i1, i2;
        net.sourceforge.plantuml.FileFormatOption r3;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r4, $r5, $r6;
        java.io.OutputStream r7;
        net.sourceforge.plantuml.core.ImageData $r8;
        net.sourceforge.plantuml.classdiagram.RowLayout r9;

        r2 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r7 := @parameter0: java.io.OutputStream;

        i1 := @parameter1: int;

        r3 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r0 = new net.sourceforge.plantuml.classdiagram.FullLayout;

        specialinvoke $r0.<net.sourceforge.plantuml.classdiagram.FullLayout: void <init>()>();

        i2 = 0;

     label1:
        $i0 = r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: int useLayoutExplicit>;

        if i2 > $i0 goto label2;

        r9 = specialinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.classdiagram.RowLayout getRawLayout(int)>(i2);

        virtualinvoke $r0.<net.sourceforge.plantuml.classdiagram.FullLayout: void addRowLayout(net.sourceforge.plantuml.classdiagram.RowLayout)>(r9);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r3);

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder annotations(boolean)>(0);

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r0);

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r7);

        return $r8;
    }

    private net.sourceforge.plantuml.classdiagram.RowLayout getRawLayout(int)
    {
        net.sourceforge.plantuml.classdiagram.RowLayout $r0;
        net.sourceforge.plantuml.classdiagram.ClassDiagram r2;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r3;
        java.util.Collection $r4;
        java.util.Iterator r5;
        boolean $z0;
        java.lang.Object $r6;
        net.sourceforge.plantuml.cucadiagram.ILeaf r7;
        int $i0, i1;
        net.sourceforge.plantuml.graphic.TextBlock $r8;

        r2 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        i1 := @parameter0: int;

        $r0 = new net.sourceforge.plantuml.classdiagram.RowLayout;

        specialinvoke $r0.<net.sourceforge.plantuml.classdiagram.RowLayout: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Collection leafs()>();

        r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r6;

        $i0 = interfaceinvoke r7.<net.sourceforge.plantuml.cucadiagram.ILeaf: int getRawLayout()>();

        if $i0 != i1 goto label2;

        $r8 = specialinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.graphic.TextBlock getEntityImageClass(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r7);

        virtualinvoke $r0.<net.sourceforge.plantuml.classdiagram.RowLayout: void addLeaf(net.sourceforge.plantuml.graphic.TextBlock)>($r8);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getEntityImageClass(net.sourceforge.plantuml.cucadiagram.ILeaf)
    {
        net.sourceforge.plantuml.svek.image.EntityImageClass $r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.classdiagram.ClassDiagram r2;
        net.sourceforge.plantuml.ISkinParam $r3;

        r2 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        $r0 = new net.sourceforge.plantuml.svek.image.EntityImageClass;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r0.<net.sourceforge.plantuml.svek.image.EntityImageClass: void <init>(net.sourceforge.plantuml.cucadiagram.dot.GraphvizVersion,net.sourceforge.plantuml.cucadiagram.ILeaf,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.PortionShower)>(null, r1, $r3, r2);

        return $r0;
    }

    public java.lang.String checkFinalError()
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        java.util.List $r1, $r6;
        java.util.Iterator r2, r7;
        boolean $z0, $z1, $z2;
        java.lang.String $r3;
        java.lang.Object $r4, $r8;
        net.sourceforge.plantuml.cucadiagram.Link r5, r9;
        int i0, $i1;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.util.List getLinks()>();

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.cucadiagram.Link) $r4;

        i0 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Link: int getLength()>();

        if i0 != 1 goto label4;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: java.util.List getLinks()>();

        r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (net.sourceforge.plantuml.cucadiagram.Link) $r8;

        $z2 = virtualinvoke r9.<net.sourceforge.plantuml.cucadiagram.Link: boolean sameConnections(net.sourceforge.plantuml.cucadiagram.Link)>(r5);

        if $z2 == 0 goto label3;

        $i1 = virtualinvoke r9.<net.sourceforge.plantuml.cucadiagram.Link: int getLength()>();

        if $i1 == 1 goto label3;

        virtualinvoke r9.<net.sourceforge.plantuml.cucadiagram.Link: void setLength(int)>(1);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: void applySingleStrategy()>();

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: java.lang.String checkFinalError()>();

        return $r3;
    }

    public volatile net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.classdiagram.ClassDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        net.sourceforge.plantuml.cucadiagram.Code r2;
        net.sourceforge.plantuml.cucadiagram.LeafType r3;
        net.sourceforge.plantuml.graphic.USymbol r4;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r5;

        r0 := @this: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.LeafType;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.USymbol;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.ClassDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r1, r2, r3, r4);

        return $r5;
    }
}
