public class net.sourceforge.plantuml.creole.legacy.StripeTree extends java.lang.Object implements net.sourceforge.plantuml.creole.Stripe
{
    private net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final net.sourceforge.plantuml.ISkinSimple skinParam;
    private final net.sourceforge.plantuml.creole.atom.AtomTree tree;
    private final net.sourceforge.plantuml.creole.atom.Atom marged;
    private final net.sourceforge.plantuml.creole.StripeStyle stripeStyle;

    public void <init>(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.ISkinSimple, java.lang.String)
    {
        net.sourceforge.plantuml.creole.legacy.StripeTree r0;
        net.sourceforge.plantuml.creole.StripeStyle $r1;
        net.sourceforge.plantuml.creole.StripeStyleType $r2;
        net.sourceforge.plantuml.graphic.FontConfiguration r3;
        net.sourceforge.plantuml.ISkinSimple r4;
        net.sourceforge.plantuml.creole.atom.AtomTree $r5, $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;
        net.sourceforge.plantuml.creole.atom.AtomWithMargin $r7;
        java.lang.String r9;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTree;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r4 := @parameter1: net.sourceforge.plantuml.ISkinSimple;

        r9 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.creole.StripeStyle;

        $r2 = <net.sourceforge.plantuml.creole.StripeStyleType: net.sourceforge.plantuml.creole.StripeStyleType TREE>;

        specialinvoke $r1.<net.sourceforge.plantuml.creole.StripeStyle: void <init>(net.sourceforge.plantuml.creole.StripeStyleType,int,char)>($r2, 0, 0);

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.creole.StripeStyle stripeStyle> = $r1;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r3;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.ISkinSimple skinParam> = r4;

        $r5 = new net.sourceforge.plantuml.creole.atom.AtomTree;

        $r6 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        specialinvoke $r5.<net.sourceforge.plantuml.creole.atom.AtomTree: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor)>($r6);

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.creole.atom.AtomTree tree> = $r5;

        $r7 = new net.sourceforge.plantuml.creole.atom.AtomWithMargin;

        $r8 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.creole.atom.AtomTree tree>;

        specialinvoke $r7.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: void <init>(net.sourceforge.plantuml.creole.atom.Atom,double,double)>($r8, 2.0, 2.0);

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.creole.atom.Atom marged> = $r7;

        virtualinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTree: void analyzeAndAdd(java.lang.String)>(r9);

        return;
    }

    public java.util.List getAtoms()
    {
        net.sourceforge.plantuml.creole.legacy.StripeTree r0;
        net.sourceforge.plantuml.creole.atom.Atom $r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTree;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.creole.atom.Atom marged>;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.creole.atom.Atom getLHeader()
    {
        net.sourceforge.plantuml.creole.legacy.StripeTree r0;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTree;

        return null;
    }

    public void analyzeAndAdd(java.lang.String)
    {
        java.lang.String r0, r4, r13;
        java.util.List r1, $r15;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.creole.legacy.StripeSimple $r5;
        net.sourceforge.plantuml.creole.legacy.StripeTree r6;
        net.sourceforge.plantuml.creole.CreoleContext $r7;
        net.sourceforge.plantuml.graphic.FontConfiguration $r8;
        net.sourceforge.plantuml.creole.StripeStyle $r9;
        net.sourceforge.plantuml.creole.CreoleMode $r10;
        net.sourceforge.plantuml.ISkinSimple $r11;
        int i0;
        net.sourceforge.plantuml.creole.atom.AtomTree $r14;
        net.sourceforge.plantuml.creole.atom.Atom $r16;

        r6 := @this: net.sourceforge.plantuml.creole.legacy.StripeTree;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <net.sourceforge.plantuml.creole.legacy.StripeTable: java.util.List getWithNewlinesInternal(java.lang.String)>(r0);

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = new net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r8 = r6.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r9 = r6.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.creole.StripeStyle stripeStyle>;

        $r7 = new net.sourceforge.plantuml.creole.CreoleContext;

        specialinvoke $r7.<net.sourceforge.plantuml.creole.CreoleContext: void <init>()>();

        $r11 = r6.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r10 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r5.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.creole.StripeStyle,net.sourceforge.plantuml.creole.CreoleContext,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>($r8, $r9, $r7, $r11, $r10);

        r13 = virtualinvoke r4.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("^\\s*\\|_", "");

        i0 = specialinvoke r6.<net.sourceforge.plantuml.creole.legacy.StripeTree: int computeLevel(java.lang.String)>(r4);

        virtualinvoke $r5.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void analyzeAndAdd(java.lang.String)>(r13);

        $r14 = r6.<net.sourceforge.plantuml.creole.legacy.StripeTree: net.sourceforge.plantuml.creole.atom.AtomTree tree>;

        $r15 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r5);

        $r16 = staticinvoke <net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.atom.Atom asAtom(java.util.List,double)>($r15, 0.0);

        virtualinvoke $r14.<net.sourceforge.plantuml.creole.atom.AtomTree: void addCell(net.sourceforge.plantuml.creole.atom.Atom,int)>($r16, i0);

        goto label1;

     label2:
        return;
    }

    private int computeLevel(java.lang.String)
    {
        boolean $z0, $z1;
        net.sourceforge.plantuml.creole.legacy.StripeTree r0;
        java.lang.String r1;
        int i0, $i1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTree;

        r1 := @parameter0: java.lang.String;

        i0 = 1;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i1 <= 0 goto label4;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("  ");

        if $z0 == 0 goto label2;

        i0 = i0 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(2);

        goto label1;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("\t");

        if $z1 == 0 goto label3;

        i0 = i0 + 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        goto label1;

     label3:
        return i0;

     label4:
        return i0;
    }
}
