class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r1;
        java.util.List $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;
        net.sourceforge.plantuml.graphic.Rainbow r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical)>(r1);

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r3;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(null, $r4);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r5;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical $r1, $r11, $r16;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic r3;
        net.sourceforge.plantuml.graphic.StringBounder $r4, $r7, $r17;
        net.sourceforge.plantuml.ugraphic.UTranslate r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r8, $r18;
        java.awt.geom.Point2D $r9, r10, r19;
        net.sourceforge.plantuml.ISkinParam $r12;
        net.sourceforge.plantuml.graphic.Rainbow $r13;
        net.sourceforge.plantuml.ugraphic.UPolygon $r14;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r15;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r4 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r1, $r2, $r4);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r7 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r8 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r7);

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        r10 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r9);

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r14 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r15 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r12, $r13, $r14);

        $r16 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r17 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r18 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.graphic.StringBounder)>($r16, $r17);

        r19 = virtualinvoke $r18.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r19);

        $d0 = virtualinvoke r19.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r19.<java.awt.geom.Point2D: double getY()>();

        $d2 = virtualinvoke r10.<java.awt.geom.Point2D: double getY()>();

        $d3 = $d1 + $d2;

        $d4 = $d3 / 2.0;

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d0, $d4);

        $d5 = virtualinvoke r10.<java.awt.geom.Point2D: double getX()>();

        $d6 = virtualinvoke r19.<java.awt.geom.Point2D: double getY()>();

        $d7 = virtualinvoke r10.<java.awt.geom.Point2D: double getY()>();

        $d8 = $d6 + $d7;

        $d9 = $d8 / 2.0;

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d5, $d9);

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r10);

        interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r15);

        return;
    }
}
