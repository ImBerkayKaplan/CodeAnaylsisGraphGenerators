public final class ext.plantuml.com.google.zxing.common.reedsolomon.GF256 extends java.lang.Object
{
    public static final ext.plantuml.com.google.zxing.common.reedsolomon.GF256 QR_CODE_FIELD;
    public static final ext.plantuml.com.google.zxing.common.reedsolomon.GF256 DATA_MATRIX_FIELD;
    private final int[] expTable;
    private final int[] logTable;
    private final ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly zero;
    private final ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly one;

    private void <init>(int)
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r0;
        int[] $r1, $r2, $r4, $r6, $r7, $r8, $r9;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly $r3, $r5;
        int $i0, i1, i2, i3, i4;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        i1 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[256];

        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] expTable> = $r1;

        $r2 = newarray (int)[256];

        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] logTable> = $r2;

        i2 = 1;

        i3 = 0;

     label1:
        if i3 >= 256 goto label3;

        $r9 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] expTable>;

        $r9[i3] = i2;

        i2 = i2 << 1;

        if i2 < 256 goto label2;

        i2 = i2 ^ i1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        i4 = 0;

     label4:
        if i4 >= 255 goto label5;

        $r8 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] logTable>;

        $r7 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] expTable>;

        $i0 = $r7[i4];

        $r8[$i0] = i4;

        i4 = i4 + 1;

        goto label4;

     label5:
        $r3 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r4 = newarray (int)[1];

        $r4[0] = 0;

        specialinvoke $r3.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>(r0, $r4);

        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly zero> = $r3;

        $r5 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        $r6 = newarray (int)[1];

        $r6[0] = 1;

        specialinvoke $r5.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>(r0, $r6);

        r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly one> = $r5;

        return;
    }

    ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly getZero()
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r0;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly $r1;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly zero>;

        return $r1;
    }

    ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly getOne()
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r0;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly $r1;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly one>;

        return $r1;
    }

    ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly buildMonomial(int, int)
    {
        int i0, i1, $i2;
        int[] r0;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly $r1, $r3;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r2;
        java.lang.IllegalArgumentException $r4;

        r2 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        if i1 != 0 goto label2;

        $r3 = r2.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly zero>;

        return $r3;

     label2:
        $i2 = i0 + 1;

        r0 = newarray (int)[$i2];

        r0[0] = i1;

        $r1 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly;

        specialinvoke $r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256Poly: void <init>(ext.plantuml.com.google.zxing.common.reedsolomon.GF256,int[])>(r2, r0);

        return $r1;
    }

    static int addOrSubtract(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 ^ i1;

        return $i2;
    }

    int exp(int)
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        i0 := @parameter0: int;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] expTable>;

        $i1 = $r1[i0];

        return $i1;
    }

    int log(int)
    {
        int i0, $i1;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r0;
        int[] $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] logTable>;

        $i1 = $r1[i0];

        return $i1;
    }

    int inverse(int)
    {
        int i0, $i1, $i2, $i3;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r0;
        int[] $r1, $r2;
        java.lang.ArithmeticException $r3;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r3 = new java.lang.ArithmeticException;

        specialinvoke $r3.<java.lang.ArithmeticException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] expTable>;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] logTable>;

        $i1 = $r1[i0];

        $i2 = 255 - $i1;

        $i3 = $r2[$i2];

        return $i3;
    }

    int multiply(int, int)
    {
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8;
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 r0;
        int[] $r1, $r2, $r3;

        r0 := @this: ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label1;

        if i1 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] logTable>;

        $i3 = $r1[i0];

        $r2 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] logTable>;

        $i2 = $r2[i1];

        i4 = $i3 + $i2;

        $r3 = r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: int[] expTable>;

        $i6 = i4 & 255;

        $i5 = i4 >>> 8;

        $i7 = $i6 + $i5;

        $i8 = $r3[$i7];

        return $i8;
    }

    static void <clinit>()
    {
        ext.plantuml.com.google.zxing.common.reedsolomon.GF256 $r0, $r1;

        $r0 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        specialinvoke $r0.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: void <init>(int)>(285);

        <ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 QR_CODE_FIELD> = $r0;

        $r1 = new ext.plantuml.com.google.zxing.common.reedsolomon.GF256;

        specialinvoke $r1.<ext.plantuml.com.google.zxing.common.reedsolomon.GF256: void <init>(int)>(301);

        <ext.plantuml.com.google.zxing.common.reedsolomon.GF256: ext.plantuml.com.google.zxing.common.reedsolomon.GF256 DATA_MATRIX_FIELD> = $r1;

        return;
    }
}
