public class net.sourceforge.plantuml.braille.BrailleDrawer extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final net.sourceforge.plantuml.braille.BrailleGrid grid;
    private final double step;
    private final double spotSize;

    public void <init>(net.sourceforge.plantuml.braille.BrailleGrid)
    {
        net.sourceforge.plantuml.braille.BrailleDrawer r0;
        net.sourceforge.plantuml.braille.BrailleGrid r1;

        r0 := @this: net.sourceforge.plantuml.braille.BrailleDrawer;

        r1 := @parameter0: net.sourceforge.plantuml.braille.BrailleGrid;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.braille.BrailleDrawer: double spotSize> = 5.0;

        r0.<net.sourceforge.plantuml.braille.BrailleDrawer: double step> = 9.0;

        r0.<net.sourceforge.plantuml.braille.BrailleDrawer: double step> = 9.0;

        r0.<net.sourceforge.plantuml.braille.BrailleDrawer: double spotSize> = 5.0;

        r0.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid> = r1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r0;
        net.sourceforge.plantuml.api.ThemeStyle $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.braille.BrailleDrawer r3;
        net.sourceforge.plantuml.braille.BrailleGrid $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16, $r19, $r20, $r24, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r8, $r10;
        net.sourceforge.plantuml.ugraphic.UGraphic $r9, $r18, $r23, r27, r28, r29;
        net.sourceforge.plantuml.ugraphic.UBackground $r11;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r17, $r22;
        net.sourceforge.plantuml.ugraphic.ULine $r21, $r26;

        r3 := @this: net.sourceforge.plantuml.braille.BrailleDrawer;

        r27 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        $r1 = <net.sourceforge.plantuml.api.ThemeStyle: net.sourceforge.plantuml.api.ThemeStyle LIGHT_REGULAR>;

        $r2 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r1, "#F0F0F0");

        r28 = interfaceinvoke r27.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        i10 = virtualinvoke $r4.<net.sourceforge.plantuml.braille.BrailleGrid: int getMinX()>();

     label1:
        $r5 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $i0 = virtualinvoke $r5.<net.sourceforge.plantuml.braille.BrailleGrid: int getMaxX()>();

        if i10 > $i0 goto label2;

        $d6 = (double) i10;

        $d7 = $d6 * 9.0;

        $d8 = $d7 + 5.0;

        $d9 = $d8 + 1.0;

        $r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d9);

        $r23 = interfaceinvoke r28.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        $r24 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $i7 = virtualinvoke $r24.<net.sourceforge.plantuml.braille.BrailleGrid: int getMaxY()>();

        $r25 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $i8 = virtualinvoke $r25.<net.sourceforge.plantuml.braille.BrailleGrid: int getMinY()>();

        $i9 = $i7 - $i8;

        $d10 = (double) $i9;

        $d11 = $d10 * 9.0;

        $r26 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d11);

        interfaceinvoke $r23.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r26);

        i10 = i10 + 1;

        goto label1;

     label2:
        $r6 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        i11 = virtualinvoke $r6.<net.sourceforge.plantuml.braille.BrailleGrid: int getMinY()>();

     label3:
        $r7 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $i1 = virtualinvoke $r7.<net.sourceforge.plantuml.braille.BrailleGrid: int getMaxY()>();

        if i11 > $i1 goto label4;

        $d0 = (double) i11;

        $d1 = $d0 * 9.0;

        $d2 = $d1 + 5.0;

        $d3 = $d2 + 1.0;

        $r17 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d3);

        $r18 = interfaceinvoke r28.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        $r19 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $i4 = virtualinvoke $r19.<net.sourceforge.plantuml.braille.BrailleGrid: int getMaxX()>();

        $r20 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $i5 = virtualinvoke $r20.<net.sourceforge.plantuml.braille.BrailleGrid: int getMinX()>();

        $i6 = $i4 - $i5;

        $d4 = (double) $i6;

        $d5 = $d4 * 9.0;

        $r21 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d5);

        interfaceinvoke $r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r21);

        i11 = i11 + 1;

        goto label3;

     label4:
        $r8 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r9 = interfaceinvoke r28.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r29 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        $r12 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        i12 = virtualinvoke $r12.<net.sourceforge.plantuml.braille.BrailleGrid: int getMinX()>();

     label5:
        $r13 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $i2 = virtualinvoke $r13.<net.sourceforge.plantuml.braille.BrailleGrid: int getMaxX()>();

        if i12 > $i2 goto label9;

        $r14 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        i13 = virtualinvoke $r14.<net.sourceforge.plantuml.braille.BrailleGrid: int getMinY()>();

     label6:
        $r15 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $i3 = virtualinvoke $r15.<net.sourceforge.plantuml.braille.BrailleGrid: int getMaxY()>();

        if i13 > $i3 goto label8;

        $r16 = r3.<net.sourceforge.plantuml.braille.BrailleDrawer: net.sourceforge.plantuml.braille.BrailleGrid grid>;

        $z0 = virtualinvoke $r16.<net.sourceforge.plantuml.braille.BrailleGrid: boolean getState(int,int)>(i12, i13);

        if $z0 == 0 goto label7;

        specialinvoke r3.<net.sourceforge.plantuml.braille.BrailleDrawer: void drawCircle(net.sourceforge.plantuml.ugraphic.UGraphic,int,int)>(r29, i12, i13);

     label7:
        i13 = i13 + 1;

        goto label6;

     label8:
        i12 = i12 + 1;

        goto label5;

     label9:
        return;
    }

    private void drawCircle(net.sourceforge.plantuml.ugraphic.UGraphic, int, int)
    {
        int i0, i1;
        double $d0, d1, $d2, d3;
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        net.sourceforge.plantuml.ugraphic.UEllipse $r3;
        net.sourceforge.plantuml.braille.BrailleDrawer r4;

        r4 := @this: net.sourceforge.plantuml.braille.BrailleDrawer;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $d0 = (double) i0;

        d1 = $d0 * 9.0;

        $d2 = (double) i1;

        d3 = $d2 * 9.0;

        $r1 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d1, d3);

        $r2 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r3 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(5.0, 5.0);

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        return;
    }
}
