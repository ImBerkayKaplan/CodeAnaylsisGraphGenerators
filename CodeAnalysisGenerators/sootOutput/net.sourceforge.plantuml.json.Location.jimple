public class net.sourceforge.plantuml.json.Location extends java.lang.Object
{
    public final int offset;
    public final int line;
    public final int column;

    void <init>(int, int, int)
    {
        net.sourceforge.plantuml.json.Location r0;
        int i0, i1, i2;

        r0 := @this: net.sourceforge.plantuml.json.Location;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.json.Location: int offset> = i0;

        r0.<net.sourceforge.plantuml.json.Location: int column> = i1;

        r0.<net.sourceforge.plantuml.json.Location: int line> = i2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r4;
        net.sourceforge.plantuml.json.Location r1;
        int $i0, $i1;
        java.lang.String $r5;

        r1 := @this: net.sourceforge.plantuml.json.Location;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = r1.<net.sourceforge.plantuml.json.Location: int line>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i1 = r1.<net.sourceforge.plantuml.json.Location: int column>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.json.Location r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.json.Location;

        $i0 = r0.<net.sourceforge.plantuml.json.Location: int offset>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        net.sourceforge.plantuml.json.Location r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.json.Location;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (net.sourceforge.plantuml.json.Location) r1;

        $i1 = r0.<net.sourceforge.plantuml.json.Location: int offset>;

        $i0 = r4.<net.sourceforge.plantuml.json.Location: int offset>;

        if $i1 != $i0 goto label4;

        $i3 = r0.<net.sourceforge.plantuml.json.Location: int column>;

        $i2 = r4.<net.sourceforge.plantuml.json.Location: int column>;

        if $i3 != $i2 goto label4;

        $i5 = r0.<net.sourceforge.plantuml.json.Location: int line>;

        $i4 = r4.<net.sourceforge.plantuml.json.Location: int line>;

        if $i5 != $i4 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }
}
