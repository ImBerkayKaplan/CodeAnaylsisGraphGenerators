public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile;
    private final double margin1;
    private final double margin2;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: double margin1> = d0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: double margin2> = d1;

        return;
    }

    public java.util.Collection getMyChildren()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        return $r2;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: double margin1>;

        $d3 = $d0 + $d1;

        $d2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: double margin2>;

        $d4 = $d3 + $d2;

        $d5 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d6 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d7 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: double margin1>;

        $d8 = $d6 + $d7;

        $d9 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d10 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double,double)>($d4, $d5, $d8, $d9, $d10);

        return $r4;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r2, $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r1;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r6, r7, r8;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        if r0 != $r2 goto label1;

        $r6 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        return $r6;

     label1:
        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        r7 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r3);

        $r5 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        r8 = virtualinvoke r7.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r5);

        return r8;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r0;
        double $d0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: double margin1>;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        return $r1;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        return;
    }
}
