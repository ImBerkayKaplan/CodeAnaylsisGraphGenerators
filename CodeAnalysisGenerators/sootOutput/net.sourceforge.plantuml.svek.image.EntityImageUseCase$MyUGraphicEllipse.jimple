class net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse extends net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine
{
    private final double startingX;
    private final double yTheoricalPosition;
    private final net.sourceforge.plantuml.ugraphic.UEllipse ellipse;

    protected net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine copy(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse $r0, r2;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.ugraphic.UEllipse $r3;
        double $d0, $d1;

        r2 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        $d1 = r2.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double startingX>;

        $d0 = r2.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double yTheoricalPosition>;

        $r3 = r2.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: net.sourceforge.plantuml.ugraphic.UEllipse ellipse>;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,net.sourceforge.plantuml.ugraphic.UEllipse)>(r1, $d1, $d0, $r3);

        return $r0;
    }

    void <init>(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, net.sourceforge.plantuml.ugraphic.UEllipse)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.UEllipse r2;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double startingX> = d0;

        r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: net.sourceforge.plantuml.ugraphic.UEllipse ellipse> = r2;

        r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double yTheoricalPosition> = d1;

        return;
    }

    private double getNormalized(double)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r0;
        double $d0, $d1, $d2, d3, d4;
        byte $b0, $b1;
        net.sourceforge.plantuml.ugraphic.UEllipse $r1;
        java.lang.IllegalArgumentException $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        d3 := @parameter0: double;

        $d0 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double yTheoricalPosition>;

        $b0 = d3 cmpg $d0;

        if $b0 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $d1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double yTheoricalPosition>;

        d4 = d3 - $d1;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: net.sourceforge.plantuml.ugraphic.UEllipse ellipse>;

        $d2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        $b1 = d4 cmpl $d2;

        if $b1 <= 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        return d4;
    }

    private double getStartingXInternal(double)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r0;
        double d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.ugraphic.UEllipse $r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        d0 := @parameter0: double;

        $d1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double startingX>;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: net.sourceforge.plantuml.ugraphic.UEllipse ellipse>;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double getNormalized(double)>(d0);

        $d3 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UEllipse: double getStartingX(double)>($d2);

        $d4 = $d1 + $d3;

        return $d4;
    }

    private double getEndingXInternal(double)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r0;
        double d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.ugraphic.UEllipse $r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        d0 := @parameter0: double;

        $d1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double startingX>;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: net.sourceforge.plantuml.ugraphic.UEllipse ellipse>;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double getNormalized(double)>(d0);

        $d3 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UEllipse: double getEndingX(double)>($d2);

        $d4 = $d1 + $d3;

        return $d4;
    }

    private net.sourceforge.plantuml.creole.Stencil getStencil2(net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.UTranslate r0;
        double d0;
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1 $r1;
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r2;

        r2 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UTranslate;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $r1 = new net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1;

        specialinvoke $r1.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse$1: void <init>(net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse,double)>(r2, d0);

        return $r1;
    }

    protected void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UHorizontalLine, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.UStroke $r0;
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r2;
        net.sourceforge.plantuml.ugraphic.UGraphic r3, $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate r4;
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r6;
        net.sourceforge.plantuml.creole.Stencil $r7;

        r6 := @this: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r4 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        $r0 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r4);

        $r7 = specialinvoke r6.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: net.sourceforge.plantuml.creole.Stencil getStencil2(net.sourceforge.plantuml.ugraphic.UTranslate)>(r4);

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawLineInternal(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.creole.Stencil,double,net.sourceforge.plantuml.ugraphic.UStroke)>($r5, $r7, 0.0, $r0);

        return;
    }

    static double access$000(net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse, double)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r0;
        double d0, $d1;

        r0 := @parameter0: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        d0 := @parameter1: double;

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double getStartingXInternal(double)>(d0);

        return $d1;
    }

    static double access$100(net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse, double)
    {
        net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse r0;
        double d0, $d1;

        r0 := @parameter0: net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse;

        d0 := @parameter1: double;

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageUseCase$MyUGraphicEllipse: double getEndingXInternal(double)>(d0);

        return $d1;
    }
}
