class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final double ySeparation;
    private final double marginy1;
    private final java.util.List tiles;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2;
    private final java.util.List diamonds;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile lastDiamond;
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;

    public java.util.Collection getMyChildren()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r1;
        java.util.List $r2, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r5;
    }

    private void <init>(java.util.List, java.util.List, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        java.util.List r1, r5;
        java.lang.Object $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, r6, r7;
        net.sourceforge.plantuml.ISkinParam $r4;
        int $i0, $i1;
        java.util.ArrayList $r8, $r9;
        net.sourceforge.plantuml.graphic.Rainbow r10;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r5 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        r7 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r10 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r6 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r4);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double marginy1> = 30.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double ySeparation> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double ySeparation> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double marginy1> = 30.0;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 == $i1 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r11;

     label1:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile lastDiamond> = r6;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2> = r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>(java.util.Collection)>(r5);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds> = $r8;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles> = $r9;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r10;

        return;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3, $r12;
        java.util.List $r4;
        java.util.Iterator r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r6, r10;
        java.util.Set $r7, $r8, $r11;
        java.lang.Object $r9;
        boolean $z3;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        if $r3 == null goto label1;

        $r12 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label1:
        $r4 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r9;

        $r11 = interfaceinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r11);

        goto label2;

     label3:
        $r6 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

        $r8 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r8;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r4;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r1;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory, net.sourceforge.plantuml.svek.ConditionStyle, java.util.List, net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        java.util.ArrayList $r0, $r3, $r16;
        java.util.List r2;
        boolean $z0, $z1, $z7, $z12;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond $r4;
        java.lang.Object $r5, $r19, $r36, $r38, $r42, $r44, $r50, $r51, $r52, $r61, $r64;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r6, $r13, $r20, $r33, $r37, $r43, $r45, $r63, r97, r98;
        net.sourceforge.plantuml.ISkinParam $r7, $r28, $r48, $r67, $r69, $r72, $r74, $r78;
        net.sourceforge.plantuml.ugraphic.color.HColor r8, r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered $r11;
        net.sourceforge.plantuml.activitydiagram3.Branch r12, $r53, r84, r92, r100;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical $r14;
        net.sourceforge.plantuml.graphic.Rainbow r15, r54, $r99, r102;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut $r17;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r21, r82;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn $r22;
        net.sourceforge.plantuml.cucadiagram.Display $r24, $r39, $r46, $r65, $r68, $r75, $r76;
        net.sourceforge.plantuml.graphic.FontConfiguration r25;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r26;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r27, $r47, $r66, $r70, $r71, $r77;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElse $r29;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut $r31;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOutConnect $r34;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical $r40;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVerticalIn $r55;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest $r62;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 $r73, r88;
        net.sourceforge.plantuml.graphic.StringBounder $r79;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r80;
        double $d0, d1;
        net.sourceforge.plantuml.svek.ConditionStyle r81;
        java.util.Iterator r83, r91;
        net.sourceforge.plantuml.graphic.TextBlock r85, r86, r89, r101, r103;

        r10 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r9 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r8 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r15 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r26 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r81 := @parameter5: net.sourceforge.plantuml.svek.ConditionStyle;

        r2 := @parameter6: java.util.List;

        r12 := @parameter7: net.sourceforge.plantuml.activitydiagram3.Branch;

        r25 := @parameter8: net.sourceforge.plantuml.graphic.FontConfiguration;

        r21 := @parameter9: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r82 := @parameter10: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        d1 = 10.0;

        r83 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r83.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r64 = interfaceinvoke r83.<java.util.Iterator: java.lang.Object next()>();

        r84 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r64;

        $r65 = virtualinvoke r84.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getDisplayPositive()>();

        $r66 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r67 = interfaceinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r85 = virtualinvoke $r65.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r25, $r66, $r67);

        $r68 = virtualinvoke r84.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getLabelTest()>();

        $r69 = interfaceinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r70 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r71 = interfaceinvoke $r69.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r70);

        $r72 = interfaceinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r86 = virtualinvoke $r68.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r25, $r71, $r72);

        $r73 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2;

        $r74 = virtualinvoke r84.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r73.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r86, $r74, r8, r9, r10);

        r88 = virtualinvoke $r73.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside2 withEast(net.sourceforge.plantuml.graphic.TextBlock)>(r85);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r88);

        $r75 = virtualinvoke r84.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getInlabel()>();

        $z12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r75);

        if $z12 != 0 goto label02;

        $r76 = virtualinvoke r84.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getInlabel()>();

        $r77 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r78 = interfaceinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r89 = virtualinvoke $r76.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r25, $r77, $r78);

        $r79 = interfaceinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r80 = interfaceinvoke r89.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r79);

        $d0 = virtualinvoke $r80.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

     label02:
        goto label01;

     label03:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r91 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r61 = interfaceinvoke r91.<java.util.Iterator: java.lang.Object next()>();

        r92 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r61;

        $r62 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest;

        $r63 = virtualinvoke r92.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r62.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r63, d1);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r62);

        goto label04;

     label05:
        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        $r5 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r5;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r7, r8, r9, r10);

        $r11 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r13 = virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r13, 30.0);

        $r14 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        specialinvoke $r14.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: void <init>(java.util.List,java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r0, $r3, $r11, r15, $r4);

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        i6 = 0;

     label06:
        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if i6 >= $i0 goto label09;

        $r50 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i6);

        r97 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r50;

        $r51 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i6);

        r98 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r51;

        $r52 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i6);

        $r53 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r52;

        r54 = virtualinvoke $r53.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getInColor(net.sourceforge.plantuml.graphic.Rainbow)>(r15);

        $r55 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVerticalIn;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r14);

        if r54 != null goto label07;

        $r99 = r15;

        goto label08;

     label07:
        $r99 = r54;

     label08:
        specialinvoke $r55.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVerticalIn: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>($r14, r98, r97, $r99);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r55);

        i6 = i6 + 1;

        goto label06;

     label09:
        i7 = 0;

     label10:
        $i1 = interfaceinvoke $r0.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i7 >= $i2 goto label12;

        $i4 = i7 + 1;

        $r38 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>($i4);

        r100 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r38;

        r101 = null;

        $r39 = virtualinvoke r100.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getInlabel()>();

        $z7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r39);

        if $z7 != 0 goto label11;

        $r46 = virtualinvoke r100.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getInlabel()>();

        $r47 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r48 = interfaceinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r101 = virtualinvoke $r46.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r25, $r47, $r48);

     label11:
        $r40 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r14);

        $r42 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i7);

        $r43 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r42;

        $i5 = i7 + 1;

        $r44 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>($i5);

        $r45 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r44;

        specialinvoke $r40.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionVertical: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.graphic.TextBlock)>($r14, $r43, $r45, r15, r101);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r40);

        i7 = i7 + 1;

        goto label10;

     label12:
        $r17 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r14);

        $r19 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r20 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r19;

        specialinvoke $r17.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOut: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>($r14, $r20, r15);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r17);

        i8 = 1;

     label13:
        $i3 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i8 >= $i3 goto label14;

        $r34 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOutConnect;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r14);

        $r36 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i8);

        $r37 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r36;

        specialinvoke $r34.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionThenOutConnect: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow)>($r14, $r37, r15);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r34);

        i8 = i8 + 1;

        goto label13;

     label14:
        r102 = virtualinvoke r21.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r15);

        $r22 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r14);

        specialinvoke $r22.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionIn: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.graphic.Rainbow)>($r14, r102);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r24 = virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getDisplayPositive()>();

        $r27 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r28 = interfaceinvoke r26.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r103 = virtualinvoke $r24.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r25, $r27, $r28);

        $r29 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElse;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r14);

        specialinvoke $r29.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElse: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.graphic.TextBlock)>($r14, r102, r103);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r29);

        $r31 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r14);

        specialinvoke $r31.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.graphic.Rainbow)>($r14, r15);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r33 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>($r14, $r16);

        return $r33;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r2, $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r1;
        java.util.List $r4, $r5;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r6;
        net.sourceforge.plantuml.graphic.StringBounder r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8, $r9, $r10, $r11;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r7 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        if r0 != $r2 goto label1;

        $r11 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        return $r11;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile lastDiamond>;

        if r0 != $r3 goto label2;

        $r10 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateLastDiamond(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        return $r10;

     label2:
        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 == 0 goto label3;

        $r9 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r7);

        return $r9;

     label3:
        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds>;

        $z1 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z1 == 0 goto label4;

        $r8 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r0, r7);

        return $r8;

     label4:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0, d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2;
        java.util.List $r3;
        int i0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        d0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double allDiamondsWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds>;

        i0 = interfaceinvoke $r3.<java.util.List: int indexOf(java.lang.Object)>(r2);

        if i0 != -1 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        d1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double getTranslateDy(int,net.sourceforge.plantuml.graphic.StringBounder)>(i0, r1);

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r5 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d3 = d0 - $d2;

        $d4 = $d3 / 2.0;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, d1);

        return $r4;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateLastDiamond(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile lastDiamond>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d2 = $d0 - $d1;

        d3 = $d2 / 2.0;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d6 = $d4 - $d5;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, $d6);

        return $r5;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, $r6;
        java.util.List $r2, $r4;
        int i0;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9;
        java.lang.Object $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r7, r8, r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;
        java.lang.IllegalArgumentException $r11;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>(r1);

        if i0 != -1 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r11;

     label1:
        d0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double getTranslateDy(int,net.sourceforge.plantuml.graphic.StringBounder)>(i0, r3);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        $r6 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r5;

        r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r8 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r9 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        d1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double allDiamondsWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d2 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d3 = $d2 - d1;

        $d4 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d5 = $d3 - $d4;

        $d6 = $d5 / 2.0;

        d7 = d1 + $d6;

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d8 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d9 = d0 + $d8;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d7, $d9);

        return $r10;
    }

    private double getTranslateDy(int, net.sourceforge.plantuml.graphic.StringBounder)
    {
        int i0, i1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        java.util.List $r1, $r6;
        java.lang.Object $r2, $r7;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r5, r9;
        double $d0, $d1, $d2, $d3, d4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        i0 := @parameter0: int;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        d4 = 30.0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r7;

        r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d0 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d1 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d2 = $d0 + $d1;

        $d3 = $d2 + 20.0;

        d4 = d4 + $d3;

        i1 = i1 + 1;

        goto label1;

     label2:
        return d4;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        java.util.List $r1;
        int $i0;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double d0, $d1, $d2, $d3, d4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4, r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        d0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: double getTranslateDy(int,net.sourceforge.plantuml.graphic.StringBounder)>($i0, r2);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d3 = $d1 - $d2;

        d4 = $d3 / 2.0;

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d4, d0);

        return $r6;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r6, $r9, $r13, $r16;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r2;
        java.util.List $r3, $r4;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r8, $r12, $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r7, $r10, r18, r20;
        java.lang.Object $r11, $r14;
        java.util.Iterator r17, r19;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        r17 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r18 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r14;

        $r15 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r18, r1);

        $r16 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r18);

        goto label1;

     label2:
        $r4 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds>;

        r19 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r11;

        $r12 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r20, r1);

        $r13 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r20);

        goto label3;

     label4:
        $r5 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        $r8 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateLastDiamond(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r9 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile lastDiamond>;

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        return;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        java.util.List $r1, $r8, $r10, $r14;
        int $i0, $i1, i2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2, r5, r7, $r9, r13, r17, r19, r20;
        double $d0, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, d15, d16, d17;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4, $r6, $r12, $r16;
        java.lang.Object $r11, $r15;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d14 = 0.0;

        d15 = 0.0;

        d16 = 30.0;

        i2 = 0;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if i2 >= $i0 goto label2;

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i2);

        $r12 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r11;

        r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r14 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(i2);

        $r16 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r15;

        r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d9 = virtualinvoke r17.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d10 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d11 = $d9 + $d10;

        d16 = d16 + $d11;

        $d12 = virtualinvoke r17.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d14 = staticinvoke <java.lang.Math: double max(double,double)>(d14, $d12);

        $d13 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d15 = staticinvoke <java.lang.Math: double max(double,double)>(d15, $d13);

        i2 = i2 + 1;

        goto label1;

     label2:
        d17 = d14 + d15;

        $r2 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d0 = d17 / 2.0;

        specialinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double)>(d17, d16, $d0, 0.0);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r19 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry appendBottom(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry)>(r5);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile lastDiamond>;

        r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        $i1 = interfaceinvoke $r8.<java.util.List: int size()>();

        $d2 = (double) $i1;

        $d3 = 20.0 * $d2;

        $d4 = $d3 + 40.0;

        $d5 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d6 = $d4 + $d5;

        r20 = virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry addDim(double,double)>(0.0, $d6);

        $r9 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d7 = virtualinvoke r20.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d8 = $d7 / 2.0;

        specialinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r20, $d8, 0.0);

        return $r9;
    }

    private double allDiamondsWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r4;
        net.sourceforge.plantuml.graphic.StringBounder r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r3;

        $r6 = interfaceinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r5);

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, $r8, $r11, $r12;
        java.util.ArrayList $r3;
        java.util.List $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r6, r10;
        java.util.Iterator r7;
        boolean $z1, $z2;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Object $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = new java.util.ArrayList;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List tiles>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r6);

        r7 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r9;

        $r11 = interfaceinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z2 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z2 == 0 goto label2;

        $r12 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = $d2 / 2.0;

        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double,double)>(r2, $d3, 0.0, $d4);

        return $r12;

     label2:
        goto label1;

     label3:
        $r8 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r2, $d1, 0.0);

        return $r8;
    }

    static java.util.List access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        java.util.List $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: java.util.List diamonds>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r1 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        return $r3;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r1 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        return $r3;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile lastDiamond>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateLastDiamond(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }
}
