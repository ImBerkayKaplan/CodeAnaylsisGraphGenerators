public final class net.sourceforge.plantuml.api.CountRate extends java.lang.Object
{
    private final net.sourceforge.plantuml.api.MagicArray lastMinute;
    private final net.sourceforge.plantuml.api.MagicArray lastHour;
    private final net.sourceforge.plantuml.api.MagicArray lastDay;

    public void <init>()
    {
        net.sourceforge.plantuml.api.CountRate r0;
        net.sourceforge.plantuml.api.MagicArray $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.api.MagicArray;

        specialinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: void <init>(int)>(60);

        r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastMinute> = $r1;

        $r2 = new net.sourceforge.plantuml.api.MagicArray;

        specialinvoke $r2.<net.sourceforge.plantuml.api.MagicArray: void <init>(int)>(60);

        r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastHour> = $r2;

        $r3 = new net.sourceforge.plantuml.api.MagicArray;

        specialinvoke $r3.<net.sourceforge.plantuml.api.MagicArray: void <init>(int)>(140);

        r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastDay> = $r3;

        return;
    }

    public void increment()
    {
        long l0, $l1, $l2, $l3;
        net.sourceforge.plantuml.api.CountRate r0;
        net.sourceforge.plantuml.api.MagicArray $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastMinute>;

        $l1 = l0 / 1000L;

        virtualinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: void incKey(long)>($l1);

        $r2 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastHour>;

        $l2 = l0 / 60000L;

        virtualinvoke $r2.<net.sourceforge.plantuml.api.MagicArray: void incKey(long)>($l2);

        $r3 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastDay>;

        $l3 = l0 / 600000L;

        virtualinvoke $r3.<net.sourceforge.plantuml.api.MagicArray: void incKey(long)>($l3);

        return;
    }

    public void increment(int)
    {
        long l0, $l2, $l3, $l4;
        net.sourceforge.plantuml.api.CountRate r0;
        int i1;
        net.sourceforge.plantuml.api.MagicArray $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        i1 := @parameter0: int;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r1 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastMinute>;

        $l2 = l0 / 1000L;

        virtualinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: void incKey(long,int)>($l2, i1);

        $r2 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastHour>;

        $l3 = l0 / 60000L;

        virtualinvoke $r2.<net.sourceforge.plantuml.api.MagicArray: void incKey(long,int)>($l3, i1);

        $r3 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastDay>;

        $l4 = l0 / 600000L;

        virtualinvoke $r3.<net.sourceforge.plantuml.api.MagicArray: void incKey(long,int)>($l4, i1);

        return;
    }

    public long perMinute()
    {
        net.sourceforge.plantuml.api.CountRate r0;
        net.sourceforge.plantuml.api.MagicArray $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        $r1 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastMinute>;

        $l0 = virtualinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: long getSum()>();

        return $l0;
    }

    public long perHour()
    {
        net.sourceforge.plantuml.api.CountRate r0;
        net.sourceforge.plantuml.api.MagicArray $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        $r1 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastHour>;

        $l0 = virtualinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: long getSum()>();

        return $l0;
    }

    public long perDay()
    {
        net.sourceforge.plantuml.api.CountRate r0;
        net.sourceforge.plantuml.api.MagicArray $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        $r1 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastDay>;

        $l0 = virtualinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: long getSum()>();

        return $l0;
    }

    public long perMinuteMax()
    {
        net.sourceforge.plantuml.api.CountRate r0;
        net.sourceforge.plantuml.api.MagicArray $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        $r1 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastMinute>;

        $l0 = virtualinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: long getMaxSum()>();

        return $l0;
    }

    public long perHourMax()
    {
        net.sourceforge.plantuml.api.CountRate r0;
        net.sourceforge.plantuml.api.MagicArray $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        $r1 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastHour>;

        $l0 = virtualinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: long getMaxSum()>();

        return $l0;
    }

    public long perDayMax()
    {
        net.sourceforge.plantuml.api.CountRate r0;
        net.sourceforge.plantuml.api.MagicArray $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.api.CountRate;

        $r1 = r0.<net.sourceforge.plantuml.api.CountRate: net.sourceforge.plantuml.api.MagicArray lastDay>;

        $l0 = virtualinvoke $r1.<net.sourceforge.plantuml.api.MagicArray: long getMaxSum()>();

        return $l0;
    }
}
