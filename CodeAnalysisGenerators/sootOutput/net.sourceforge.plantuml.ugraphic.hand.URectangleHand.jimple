public class net.sourceforge.plantuml.ugraphic.hand.URectangleHand extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.UPolygon poly;

    public void <init>(net.sourceforge.plantuml.ugraphic.URectangle, java.util.Random)
    {
        net.sourceforge.plantuml.ugraphic.hand.URectangleHand r0;
        net.sourceforge.plantuml.ugraphic.URectangle r1;
        double d0, d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        byte $b0, $b1;
        net.sourceforge.plantuml.ugraphic.hand.HandJiggle $r2, $r4, r5;
        java.util.Random r3;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.hand.URectangleHand;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.URectangle;

        r3 := @parameter1: java.util.Random;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        d0 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        d1 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        $d2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getRx()>();

        $d4 = $d2 / 2.0;

        $d3 = d0 / 2.0;

        d5 = staticinvoke <java.lang.Math: double min(double,double)>($d4, $d3);

        $d6 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getRy()>();

        $d8 = $d6 / 2.0;

        $d7 = d1 / 2.0;

        d9 = staticinvoke <java.lang.Math: double min(double,double)>($d8, $d7);

        $b0 = d5 cmpl 0.0;

        if $b0 != 0 goto label1;

        $b1 = d9 cmpl 0.0;

        if $b1 != 0 goto label1;

        $r4 = new net.sourceforge.plantuml.ugraphic.hand.HandJiggle;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void <init>(double,double,double,java.util.Random)>(0.0, 0.0, 1.5, r3);

        r5 = $r4;

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>(d0, 0.0);

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>(d0, d1);

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>(0.0, d1);

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>(0.0, 0.0);

        goto label2;

     label1:
        $r2 = new net.sourceforge.plantuml.ugraphic.hand.HandJiggle;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void <init>(double,double,double,java.util.Random)>(d5, 0.0, 1.5, r3);

        r5 = $r2;

        $d10 = d0 - d5;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>($d10, 0.0);

        $d11 = d0 - d5;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void arcTo(double,double,double,double,double,double)>(-1.5707963267948966, 0.0, $d11, d9, d5, d9);

        $d12 = d1 - d9;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>(d0, $d12);

        $d14 = d0 - d5;

        $d13 = d1 - d9;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void arcTo(double,double,double,double,double,double)>(0.0, 1.5707963267948966, $d14, $d13, d5, d9);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>(d5, d1);

        $d15 = d1 - d9;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void arcTo(double,double,double,double,double,double)>(1.5707963267948966, 3.141592653589793, d5, $d15, d5, d9);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void lineTo(double,double)>(0.0, d9);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: void arcTo(double,double,double,double,double,double)>(3.141592653589793, 4.71238898038469, d5, d9, d5, d9);

     label2:
        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.hand.HandJiggle: net.sourceforge.plantuml.ugraphic.UPolygon toUPolygon()>();

        r0.<net.sourceforge.plantuml.ugraphic.hand.URectangleHand: net.sourceforge.plantuml.ugraphic.UPolygon poly> = $r6;

        $r7 = r0.<net.sourceforge.plantuml.ugraphic.hand.URectangleHand: net.sourceforge.plantuml.ugraphic.UPolygon poly>;

        $d16 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getDeltaShadow()>();

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void setDeltaShadow(double)>($d16);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.Shadowable getHanddrawn()
    {
        net.sourceforge.plantuml.ugraphic.hand.URectangleHand r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.hand.URectangleHand;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.hand.URectangleHand: net.sourceforge.plantuml.ugraphic.UPolygon poly>;

        return $r1;
    }
}
