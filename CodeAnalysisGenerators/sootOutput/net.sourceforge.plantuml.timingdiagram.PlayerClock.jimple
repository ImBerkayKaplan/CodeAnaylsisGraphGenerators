public class net.sourceforge.plantuml.timingdiagram.PlayerClock extends net.sourceforge.plantuml.timingdiagram.Player
{
    private final int period;
    private final int pulse;
    private final int offset;
    private final double ymargin;
    private final boolean displayTitle;

    public void <init>(java.lang.String, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.timingdiagram.TimingRuler, int, int, int, boolean)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.timingdiagram.TimingRuler r3;
        boolean z0, $z1;
        int $i0, i1, i2, i3;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.timingdiagram.TimingRuler;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        z0 := @parameter6: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.Player: void <init>(java.lang.String,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.timingdiagram.TimingRuler,boolean)>(r1, r2, r3, z0);

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: double ymargin> = 8.0;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: double ymargin> = 8.0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: boolean displayTitle> = $z1;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int period> = i1;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int pulse> = i2;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int offset> = i3;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int suggestedHeight> = 30;

        return;
    }

    public double getFullHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        int $i0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $i0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int suggestedHeight>;

        $d0 = (double) $i0;

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: double getTitleHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = $d0 + $d1;

        return $d2;
    }

    private double getLineHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        int $i0;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $i0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int suggestedHeight>;

        $d0 = (double) $i0;

        $d1 = $d0 - 16.0;

        return $d1;
    }

    private double getTitleHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        boolean $z0;
        net.sourceforge.plantuml.graphic.TextBlock $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $z0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: boolean displayTitle>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: net.sourceforge.plantuml.graphic.TextBlock getTitle()>();

        $r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        return $d0;

     label1:
        return 0.0;
    }

    protected net.sourceforge.plantuml.graphic.SymbolContext getContextLegacy()
    {
        net.sourceforge.plantuml.graphic.SymbolContext $r0, $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r5;

        r5 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        $r0 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor COL_D7E0F2>;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor COL_038048>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r2, $r1);

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r4 = virtualinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r3);

        return $r4;
    }

    protected net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r6;

        r6 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timingDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName clock>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint getTimeProjection(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.timingdiagram.TimeTick)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.timingdiagram.TimeTick r3;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void addNote(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.command.Position)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r1;
        net.sourceforge.plantuml.timingdiagram.TimeTick r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.command.Position r4;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r2 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter2: net.sourceforge.plantuml.command.Position;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void defineState(java.lang.String, java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r1;
        java.lang.String r2, r3;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public transient void setState(net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String, net.sourceforge.plantuml.graphic.color.Colors, java.lang.String[])
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r1;
        net.sourceforge.plantuml.timingdiagram.TimeTick r2;
        java.lang.String r3;
        net.sourceforge.plantuml.graphic.color.Colors r4;
        java.lang.String[] r5;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r2 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.color.Colors;

        r5 := @parameter3: java.lang.String[];

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void createConstraint(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r1;
        net.sourceforge.plantuml.timingdiagram.TimeTick r2, r3;
        java.lang.String r4;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r2 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r3 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r4 := @parameter2: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public final int getPeriod()
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        $i0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int period>;

        return $i0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getPart1(double, double)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        boolean $z0;
        net.sourceforge.plantuml.graphic.TextBlock $r1;
        net.sourceforge.plantuml.timingdiagram.PlayerClock$1 $r2;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $z0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: boolean displayTitle>;

        if $z0 == 0 goto label1;

        $r2 = new net.sourceforge.plantuml.timingdiagram.PlayerClock$1;

        specialinvoke $r2.<net.sourceforge.plantuml.timingdiagram.PlayerClock$1: void <init>(net.sourceforge.plantuml.timingdiagram.PlayerClock)>(r0);

        return $r2;

     label1:
        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        return $r1;
    }

    public net.sourceforge.plantuml.graphic.UDrawable getPart2()
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock$2 $r0;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r1;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        $r0 = new net.sourceforge.plantuml.timingdiagram.PlayerClock$2;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock$2: void <init>(net.sourceforge.plantuml.timingdiagram.PlayerClock)>(r1);

        return $r0;
    }

    static double access$000(net.sourceforge.plantuml.timingdiagram.PlayerClock, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: double getTitleHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    static double access$100(net.sourceforge.plantuml.timingdiagram.PlayerClock, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: double getLineHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    static int access$200(net.sourceforge.plantuml.timingdiagram.PlayerClock)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        int $i0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        $i0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int offset>;

        return $i0;
    }

    static int access$300(net.sourceforge.plantuml.timingdiagram.PlayerClock)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        int $i0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        $i0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int pulse>;

        return $i0;
    }

    static int access$400(net.sourceforge.plantuml.timingdiagram.PlayerClock)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock r0;
        int $i0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerClock;

        $i0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int period>;

        return $i0;
    }
}
