public class net.sourceforge.plantuml.project.lang.ComplementDates extends java.lang.Object implements net.sourceforge.plantuml.project.lang.Something
{

    public void <init>()
    {
        net.sourceforge.plantuml.project.lang.ComplementDates r0;

        r0 := @this: net.sourceforge.plantuml.project.lang.ComplementDates;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexOr $r0;
        net.sourceforge.plantuml.command.regex.IRegex[] $r1;
        net.sourceforge.plantuml.project.lang.ComplementDates r2;
        java.lang.String r3;
        net.sourceforge.plantuml.command.regex.IRegex $r4, $r5;

        r2 := @this: net.sourceforge.plantuml.project.lang.ComplementDates;

        r3 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r1 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r4 = specialinvoke r2.<net.sourceforge.plantuml.project.lang.ComplementDates: net.sourceforge.plantuml.command.regex.IRegex toRegexB(java.lang.String)>(r3);

        $r1[0] = $r4;

        $r5 = specialinvoke r2.<net.sourceforge.plantuml.project.lang.ComplementDates: net.sourceforge.plantuml.command.regex.IRegex toRegexE(java.lang.String)>(r3);

        $r1[1] = $r5;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r1);

        return $r0;
    }

    private net.sourceforge.plantuml.command.regex.IRegex toRegexB(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexConcat $r0;
        net.sourceforge.plantuml.command.regex.IRegex[] $r1;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r2, $r8, $r9, $r14, $r15, $r20, $r21, $r22, $r23, $r28, $r29, $r34, $r35;
        java.lang.StringBuilder $r3, $r4, $r6, $r10, $r11, $r12, $r16, $r17, $r18, $r24, $r25, $r26, $r30, $r31, $r32, $r36, $r37, $r38;
        java.lang.String r5, $r7, $r13, $r19, $r27, $r33, $r39;
        net.sourceforge.plantuml.project.lang.ComplementDates r40;

        r40 := @this: net.sourceforge.plantuml.project.lang.ComplementDates;

        r5 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r1 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[13];

        $r2 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYEAR1");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r7, "([\\d]{4})");

        $r1[0] = $r2;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\D");

        $r1[1] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BMONTH1");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r13, "([\\d]{1,2})");

        $r1[2] = $r9;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\D");

        $r1[3] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BDAY1");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r19, "([\\d]{1,2})");

        $r1[4] = $r15;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[5] = $r20;

        $r21 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r21.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("to");

        $r1[6] = $r21;

        $r22 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[7] = $r22;

        $r23 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYEAR2");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r27, "([\\d]{4})");

        $r1[8] = $r23;

        $r28 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r28.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\D");

        $r1[9] = $r28;

        $r29 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BMONTH2");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r33, "([\\d]{1,2})");

        $r1[10] = $r29;

        $r34 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r34.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\D");

        $r1[11] = $r34;

        $r35 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BDAY2");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r39, "([\\d]{1,2})");

        $r1[12] = $r35;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r1);

        return $r0;
    }

    private net.sourceforge.plantuml.command.regex.IRegex toRegexE(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexConcat $r0;
        net.sourceforge.plantuml.command.regex.IRegex[] $r1;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r2, $r3, $r9, $r10, $r11, $r12, $r13;
        java.lang.StringBuilder $r4, $r5, $r7, $r14, $r15, $r16;
        java.lang.String r6, $r8, $r17;
        net.sourceforge.plantuml.project.lang.ComplementDates r18;

        r18 := @this: net.sourceforge.plantuml.project.lang.ComplementDates;

        r6 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r1 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[7];

        $r2 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r2.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("[dD]\\+");

        $r1[0] = $r2;

        $r3 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ECOUNT1");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r8, "([\\d]+)");

        $r1[1] = $r3;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[2] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("to");

        $r1[3] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[4] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("[dD]\\+");

        $r1[5] = $r12;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ECOUNT2");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r17, "([\\d]+)");

        $r1[6] = $r13;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r1);

        return $r0;
    }

    public net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r7, $r8, $r9;
        java.lang.String r3, $r5, $r6, $r10, $r11;
        java.lang.IllegalStateException $r12;
        net.sourceforge.plantuml.project.lang.ComplementDates r13;
        net.sourceforge.plantuml.project.GanttDiagram r14;
        net.sourceforge.plantuml.project.DaysAsDates $r15, $r17;
        net.sourceforge.plantuml.project.Failable $r16, $r18;

        r13 := @this: net.sourceforge.plantuml.project.lang.ComplementDates;

        r14 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BDAY1");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r5, 0);

        if $r6 == null goto label1;

        $r17 = specialinvoke r13.<net.sourceforge.plantuml.project.lang.ComplementDates: net.sourceforge.plantuml.project.DaysAsDates resultB(net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r0, r3);

        $r18 = staticinvoke <net.sourceforge.plantuml.project.Failable: net.sourceforge.plantuml.project.Failable ok(java.lang.Object)>($r17);

        return $r18;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ECOUNT1");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r10, 0);

        if $r11 == null goto label2;

        $r15 = specialinvoke r13.<net.sourceforge.plantuml.project.lang.ComplementDates: net.sourceforge.plantuml.project.DaysAsDates resultE(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r14, r0, r3);

        $r16 = staticinvoke <net.sourceforge.plantuml.project.Failable: net.sourceforge.plantuml.project.Failable ok(java.lang.Object)>($r15);

        return $r16;

     label2:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>()>();

        throw $r12;
    }

    private net.sourceforge.plantuml.project.DaysAsDates resultB(net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r7, $r8, $r9, $r12, $r13, $r14, $r18, $r19, $r20, $r23, $r24, $r25, $r28, $r29, $r30;
        java.lang.String r3, $r5, $r6, $r10, $r11, $r15, $r16, $r21, $r22, $r26, $r27, $r31, $r32;
        int i0, i1, i2, i3, i4, i5;
        net.sourceforge.plantuml.project.time.Day r17, r33;
        net.sourceforge.plantuml.project.DaysAsDates $r34;
        net.sourceforge.plantuml.project.lang.ComplementDates r35;

        r35 := @this: net.sourceforge.plantuml.project.lang.ComplementDates;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BDAY1");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r5, 0);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BMONTH1");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r10, 0);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYEAR1");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r15, 0);

        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r16);

        r17 = staticinvoke <net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day create(int,int,int)>(i2, i1, i0);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BDAY2");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r21, 0);

        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BMONTH2");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r26, 0);

        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYEAR2");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r31, 0);

        i5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r32);

        r33 = staticinvoke <net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day create(int,int,int)>(i5, i4, i3);

        $r34 = new net.sourceforge.plantuml.project.DaysAsDates;

        specialinvoke $r34.<net.sourceforge.plantuml.project.DaysAsDates: void <init>(net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.time.Day)>(r17, r33);

        return $r34;
    }

    private net.sourceforge.plantuml.project.DaysAsDates resultE(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r10, $r11, $r12;
        java.lang.String r3, $r5, $r6, $r13, $r14;
        int i0, i1;
        net.sourceforge.plantuml.project.GanttDiagram r7;
        net.sourceforge.plantuml.project.time.Day $r8, r9, $r15, r16;
        net.sourceforge.plantuml.project.DaysAsDates $r17;
        net.sourceforge.plantuml.project.lang.ComplementDates r18;

        r18 := @this: net.sourceforge.plantuml.project.lang.ComplementDates;

        r7 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ECOUNT1");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r5, 0);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r8 = virtualinvoke r7.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.project.time.Day getStartingDate()>();

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day addDays(int)>(i0);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ECOUNT2");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r13, 0);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r14);

        $r15 = virtualinvoke r7.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.project.time.Day getStartingDate()>();

        r16 = virtualinvoke $r15.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day addDays(int)>(i1);

        $r17 = new net.sourceforge.plantuml.project.DaysAsDates;

        specialinvoke $r17.<net.sourceforge.plantuml.project.DaysAsDates: void <init>(net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.time.Day)>(r9, r16);

        return $r17;
    }
}
