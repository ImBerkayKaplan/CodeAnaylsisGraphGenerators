public class net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside extends net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile
{
    protected final net.sourceforge.plantuml.ugraphic.color.HColor backColor;
    protected final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    protected final net.sourceforge.plantuml.graphic.TextBlock label;
    protected final net.sourceforge.plantuml.awt.geom.Dimension2D dimLabel;
    protected final double shadowing;

    public final net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.style.StyleSignature $r6;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside r7;

        r7 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName diamond>;

        $r0[4] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r6;
    }

    public net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled withEastLabel(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled $r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled;

        $r4 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        $r3 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled: void <init>(net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, $r4, r2, $r3);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled withWestLabel(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled $r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled;

        $r4 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        $r3 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled: void <init>(net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, $r4, $r3, r2);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtileRoot withSouthLabel(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled $r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled;

        $r4 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        $r3 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInsideLabelled: void <init>(net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r2, $r4, $r3);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ISkinParam r2, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r3;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.color.HColor r4, r5, $r16, $r21;
        net.sourceforge.plantuml.graphic.TextBlock r7;
        net.sourceforge.plantuml.style.StyleSignature $r9;
        net.sourceforge.plantuml.style.StyleBuilder $r10;
        net.sourceforge.plantuml.style.Style r11;
        net.sourceforge.plantuml.style.PName $r12, $r17, $r22;
        net.sourceforge.plantuml.style.Value $r13, $r18, $r23;
        net.sourceforge.plantuml.api.ThemeStyle $r14, $r19;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r15, $r20;
        double $d0, $d1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r24;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r7 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r5 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter5: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, r2, r3);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition()>();

        $r10 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r11 = virtualinvoke $r9.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r10);

        $r12 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r13 = virtualinvoke r11.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r12);

        $r14 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r16 = interfaceinvoke $r13.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r14, $r15);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = $r16;

        $r17 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r18 = virtualinvoke r11.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r17);

        $r19 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r21 = interfaceinvoke $r18.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r19, $r20);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = $r21;

        $r22 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r23 = virtualinvoke r11.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r22);

        $d0 = interfaceinvoke $r23.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: double shadowing> = $d0;

        goto label4;

     label1:
        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = r5;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $z1 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z1 == 0 goto label2;

        $d1 = 3.0;

        goto label3;

     label2:
        $d1 = 0.0;

     label3:
        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: double shadowing> = $d1;

     label4:
        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.graphic.TextBlock label> = r7;

        $r24 = interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.awt.geom.Dimension2D dimLabel> = $r24;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r1, $r3, $r4, $r5, r7;
        double $d0, $d1;
        byte $b0, $b1;
        net.sourceforge.plantuml.Dimension2DDouble $r2;
        net.sourceforge.plantuml.graphic.StringBounder r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.awt.geom.Dimension2D dimLabel>;

        $d0 = virtualinvoke $r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.awt.geom.Dimension2D dimLabel>;

        $d1 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b1 = $d1 cmpl 0.0;

        if $b1 != 0 goto label2;

     label1:
        $r2 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r2.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(24.0, 24.0);

        r7 = $r2;

        goto label3;

     label2:
        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.awt.geom.Dimension2D dimLabel>;

        $r5 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D atLeast(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r4, 24.0, 24.0);

        r7 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r5, 24.0, 0.0);

     label3:
        return r7;
    }

    protected void drawUInternal(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, $r10, $r11;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r7;
        net.sourceforge.plantuml.ugraphic.UGraphic $r4, $r6, $r14, r15, r16;
        net.sourceforge.plantuml.ugraphic.UStroke $r5;
        net.sourceforge.plantuml.ugraphic.UBackground $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, d10;
        net.sourceforge.plantuml.ugraphic.UPolygon $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r12;
        net.sourceforge.plantuml.graphic.TextBlock $r13;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside;

        r15 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r4 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.UStroke getThickness()>();

        $r6 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r16 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $d0 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: double shadowing>;

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon: net.sourceforge.plantuml.ugraphic.UPolygon asPolygon(double,double,double)>($d0, $d1, $d2);

        interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

        $d3 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r10 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.awt.geom.Dimension2D dimLabel>;

        $d4 = virtualinvoke $r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = $d3 - $d4;

        d6 = $d5 / 2.0;

        $d7 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r11 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.awt.geom.Dimension2D dimLabel>;

        $d8 = virtualinvoke $r11.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d9 = $d7 - $d8;

        d10 = $d9 / 2.0;

        $r13 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileHexagonInside: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d6, d10);

        $r14 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r13.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r14);

        return;
    }
}
