public class net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal extends net.sourceforge.plantuml.activitydiagram3.gtile.GAbstractConnection
{
    private final net.sourceforge.plantuml.graphic.TextBlock textBlock;
    private final net.sourceforge.plantuml.ugraphic.UTranslate pos1;
    private final net.sourceforge.plantuml.ugraphic.UTranslate pos2;

    public void <init>(net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.activitydiagram3.gtile.GPoint, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.activitydiagram3.gtile.GPoint, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GPoint r1, r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;
        net.sourceforge.plantuml.ugraphic.UTranslate r4, r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UTranslate;

        r1 := @parameter1: net.sourceforge.plantuml.activitydiagram3.gtile.GPoint;

        r5 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        r2 := @parameter3: net.sourceforge.plantuml.activitydiagram3.gtile.GPoint;

        r3 := @parameter4: net.sourceforge.plantuml.graphic.TextBlock;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GAbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.gtile.GPoint,net.sourceforge.plantuml.activitydiagram3.gtile.GPoint)>(r1, r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.graphic.TextBlock textBlock> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate pos1> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate pos2> = r5;

        return;
    }

    public void drawTranslate(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GPoint $r1, $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r6, r10, r12;
        java.awt.geom.Point2D $r3, r4, $r7, r8, r11, r13;
        net.sourceforge.plantuml.Direction r9, r14;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, d25, d26;
        byte $b0, $b1, $b2, $b3, $b4;
        net.sourceforge.plantuml.ugraphic.UPolygon r15, $r36;
        java.awt.geom.Point2D$Double $r16, $r26;
        net.sourceforge.plantuml.ISkinParam $r17, $r22, $r27, $r31;
        net.sourceforge.plantuml.graphic.Rainbow $r18, $r23, $r28, $r32;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r19, $r24, $r29, $r33, r35, r38, r40, r41;
        net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy $r20, $r25, $r30, $r34;
        net.sourceforge.plantuml.ugraphic.UGraphic r21;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal;

        r21 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r10 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r12 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate pos1>;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.activitydiagram3.gtile.GPoint gpoint1>;

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GPoint: java.awt.geom.Point2D getPoint2D()>();

        r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r3);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate pos2>;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.activitydiagram3.gtile.GPoint gpoint2>;

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.gtile.GPoint: java.awt.geom.Point2D getPoint2D()>();

        r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        r9 = staticinvoke <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction leftOrRight(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r4, r8);

        d0 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        d1 = virtualinvoke r8.<java.awt.geom.Point2D: double getX()>();

        r11 = virtualinvoke r10.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r4);

        r13 = virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r8);

        r14 = staticinvoke <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction leftOrRight(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r11, r13);

        $b0 = d1 cmpl d0;

        if $b0 <= 0 goto label1;

        $r36 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToRight()>();

        goto label2;

     label1:
        $r36 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()>();

     label2:
        r15 = $r36;

        if r9 != r14 goto label5;

        $b2 = d1 cmpl d0;

        if $b2 <= 0 goto label3;

        $b3 = -1;

        goto label4;

     label3:
        $b3 = 1;

     label4:
        $d12 = (double) $b3;

        $d13 = $d12 * 1.5;

        d24 = $d13 * 12.0;

        $r26 = new java.awt.geom.Point2D$Double;

        $d14 = virtualinvoke r13.<java.awt.geom.Point2D: double getX()>();

        $d15 = $d14 + d24;

        $d16 = virtualinvoke r13.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r26.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d15, $d16);

        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r28 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.graphic.Rainbow getInLinkRenderingColor()>();

        $r29 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r27, $r28);

        $r30 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy LIMITED>;

        r38 = virtualinvoke $r29.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r30);

        $d17 = virtualinvoke r11.<java.awt.geom.Point2D: double getY()>();

        $d18 = virtualinvoke r13.<java.awt.geom.Point2D: double getY()>();

        $d19 = $d17 + $d18;

        d25 = $d19 / 2.0;

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r11);

        $d20 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d20, d25);

        $d21 = virtualinvoke $r26.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d21, d25);

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r26);

        interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r38);

        $r31 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.graphic.Rainbow getInLinkRenderingColor()>();

        $r33 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r31, $r32, r15);

        $r34 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy LIMITED>;

        r35 = virtualinvoke $r33.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r34);

        virtualinvoke r35.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r26);

        $d22 = virtualinvoke $r26.<java.awt.geom.Point2D: double getX()>();

        $d23 = virtualinvoke r13.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r35.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d22, $d23);

        virtualinvoke r35.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r13);

        interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r35);

        goto label8;

     label5:
        $b1 = d1 cmpl d0;

        if $b1 <= 0 goto label6;

        $b4 = -1;

        goto label7;

     label6:
        $b4 = 1;

     label7:
        $d2 = (double) $b4;

        $d3 = $d2 * 1.5;

        d26 = $d3 * 12.0;

        $r16 = new java.awt.geom.Point2D$Double;

        $d4 = virtualinvoke r13.<java.awt.geom.Point2D: double getX()>();

        $d5 = $d4 + d26;

        $d6 = virtualinvoke r13.<java.awt.geom.Point2D: double getY()>();

        $d7 = $d6 - 18.0;

        specialinvoke $r16.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d5, $d7);

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.graphic.Rainbow getInLinkRenderingColor()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r17, $r18);

        $r20 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy LIMITED>;

        r40 = virtualinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r20);

        virtualinvoke r40.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r11);

        $d8 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        $d9 = virtualinvoke $r16.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r40.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d8, $d9);

        virtualinvoke r40.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r16);

        interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r40);

        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.graphic.Rainbow getInLinkRenderingColor()>();

        $r24 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r22, $r23, r15);

        $r25 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy LIMITED>;

        r41 = virtualinvoke $r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r25);

        virtualinvoke r41.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r16);

        $d10 = virtualinvoke $r16.<java.awt.geom.Point2D: double getX()>();

        $d11 = virtualinvoke r13.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r41.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d10, $d11);

        virtualinvoke r41.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r13);

        interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r41);

     label8:
        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.GPoint $r1, $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r6;
        java.awt.geom.Point2D $r3, r4, $r7, r8;
        double $d0, $d1, $d2, $d3;
        byte $b0;
        net.sourceforge.plantuml.ISkinParam $r10;
        net.sourceforge.plantuml.graphic.Rainbow $r11;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r12, r15;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r13;
        net.sourceforge.plantuml.graphic.TextBlock $r14;
        java.awt.geom.Point2D$Double $r16;
        net.sourceforge.plantuml.ugraphic.UGraphic r17;
        net.sourceforge.plantuml.ugraphic.UPolygon $r18;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal;

        r17 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate pos1>;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.activitydiagram3.gtile.GPoint gpoint1>;

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GPoint: java.awt.geom.Point2D getPoint2D()>();

        r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r3);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate pos2>;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.activitydiagram3.gtile.GPoint gpoint2>;

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.gtile.GPoint: java.awt.geom.Point2D getPoint2D()>();

        r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        $d0 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r8.<java.awt.geom.Point2D: double getX()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        $r18 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToRight()>();

        goto label2;

     label1:
        $r18 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()>();

     label2:
        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.graphic.Rainbow getInLinkRenderingColor()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r10, $r11, $r18);

        $r14 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GConnectionVerticalDownThenHorizontal: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $r13 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        r15 = virtualinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r14, $r13);

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r4);

        $r16 = new java.awt.geom.Point2D$Double;

        $d2 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r8.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r16.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d2, $d3);

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r16);

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r8);

        interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r15);

        return;
    }
}
