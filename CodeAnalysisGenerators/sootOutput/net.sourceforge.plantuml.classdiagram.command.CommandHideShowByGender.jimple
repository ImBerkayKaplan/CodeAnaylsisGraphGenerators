public class net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        $r1 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r9;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r10, $r11, $r12, $r13;
        net.sourceforge.plantuml.command.regex.RegexOptional $r7;
        net.sourceforge.plantuml.command.regex.RegexConcat $r8, $r14;

        $r0 = class "Lnet/sourceforge/plantuml/classdiagram/command/CommandHideShowByGender;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[7];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("COMMAND", "(hide|show)");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("GENDER", "(?:(class|object|interface|enum|annotation|abstract|[%pLN_.]+|[%g][^%g]+[%g]|\\<\\<.*\\>\\>)[%s]+)*?");

        $r2[3] = $r6;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r9 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("EMPTY", "(empty)");

        $r9[0] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[1] = $r11;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r9);

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r8);

        $r2[4] = $r7;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("PORTION", "(members?|attributes?|fields?|methods?|circles?|circled?|stereotypes?)");

        $r2[5] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[6] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r14;
    }

    private final net.sourceforge.plantuml.cucadiagram.EntityGender emptyByGender(net.sourceforge.plantuml.cucadiagram.EntityPortion)
    {
        net.sourceforge.plantuml.cucadiagram.EntityPortion r0, $r1, $r2, $r3;
        net.sourceforge.plantuml.cucadiagram.EntityGender $r4, $r6, $r7;
        java.lang.IllegalArgumentException $r5;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender r8;

        r8 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.EntityPortion;

        $r1 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        if r0 != $r1 goto label1;

        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender emptyMethods()>();

        return $r7;

     label1:
        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        if r0 != $r2 goto label2;

        $r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender emptyFields()>();

        return $r6;

     label2:
        $r3 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r0 != $r3 goto label3;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label3:
        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender all()>();

        return $r4;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.UmlDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.UmlDiagram r0;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r1, $r5, $r7, $r9;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r4;
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram $r6;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram $r8;
        net.sourceforge.plantuml.LineLocation r10;

        r2 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        r0 := @parameter0: net.sourceforge.plantuml.UmlDiagram;

        r10 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $z0 = r0 instanceof net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        if $z0 == 0 goto label1;

        $r8 = (net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram) r0;

        $r9 = specialinvoke r2.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.command.CommandExecutionResult executeClassDiagram(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>($r8, r3);

        return $r9;

     label1:
        $z1 = r0 instanceof net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        if $z1 == 0 goto label2;

        $r6 = (net.sourceforge.plantuml.descdiagram.DescriptionDiagram) r0;

        $r7 = specialinvoke r2.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.command.CommandExecutionResult executeDescriptionDiagram(net.sourceforge.plantuml.descdiagram.DescriptionDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>($r6, r3);

        return $r7;

     label2:
        $z2 = r0 instanceof net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        if $z2 == 0 goto label3;

        $r4 = (net.sourceforge.plantuml.sequencediagram.SequenceDiagram) r0;

        $r5 = specialinvoke r2.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.command.CommandExecutionResult executeSequenceDiagram(net.sourceforge.plantuml.sequencediagram.SequenceDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r3);

        return $r5;

     label3:
        $r1 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r1;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeSequenceDiagram(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, $r6;
        net.sourceforge.plantuml.cucadiagram.EntityPortion r3;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r4;
        java.util.Set $r5;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r7;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        r4 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("PORTION", 0);

        r3 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.cucadiagram.EntityPortion getEntityPortion(java.lang.String)>($r2);

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.EntityPortion: java.util.Set asSet()>();

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COMMAND", 0);

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("show");

        virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: void hideOrShow(java.util.Set,boolean)>($r5, $z0);

        $r7 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r7;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeDescriptionDiagram(net.sourceforge.plantuml.descdiagram.DescriptionDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, r4, $r16;
        net.sourceforge.plantuml.cucadiagram.EntityPortion r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        net.sourceforge.plantuml.descdiagram.DescriptionDiagram r5;
        net.sourceforge.plantuml.cucadiagram.Ident $r6;
        net.sourceforge.plantuml.cucadiagram.Code $r7;
        net.sourceforge.plantuml.cucadiagram.ILeaf r8;
        net.sourceforge.plantuml.cucadiagram.LeafType $r9, $r10, $r11, $r12, $r13, $r14;
        net.sourceforge.plantuml.cucadiagram.EntityGender r15;
        net.sourceforge.plantuml.command.CommandExecutionResult $r17;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        r5 := @parameter0: net.sourceforge.plantuml.descdiagram.DescriptionDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("PORTION", 0);

        r3 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.cucadiagram.EntityPortion getEntityPortion(java.lang.String)>($r2);

        r4 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("GENDER", 0);

        if r4 != null goto label1;

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender all()>();

        goto label9;

     label1:
        $z0 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("class");

        if $z0 == 0 goto label2;

        $r14 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r14);

        goto label9;

     label2:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("object");

        if $z1 == 0 goto label3;

        $r13 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType OBJECT>;

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r13);

        goto label9;

     label3:
        $z2 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("interface");

        if $z2 == 0 goto label4;

        $r12 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType INTERFACE>;

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r12);

        goto label9;

     label4:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("enum");

        if $z3 == 0 goto label5;

        $r11 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ENUM>;

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r11);

        goto label9;

     label5:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("abstract");

        if $z4 == 0 goto label6;

        $r10 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ABSTRACT_CLASS>;

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r10);

        goto label9;

     label6:
        $z5 = virtualinvoke r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("annotation");

        if $z5 == 0 goto label7;

        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ANNOTATION>;

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r9);

        goto label9;

     label7:
        $z6 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("<<");

        if $z6 == 0 goto label8;

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byStereotype(java.lang.String)>(r4);

        goto label9;

     label8:
        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r4);

        $r7 = virtualinvoke r5.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r4);

        r8 = virtualinvoke r5.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>($r6, $r7, null, null);

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityAlone(net.sourceforge.plantuml.cucadiagram.IEntity)>(r8);

     label9:
        $r16 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COMMAND", 0);

        $z7 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("show");

        virtualinvoke r5.<net.sourceforge.plantuml.descdiagram.DescriptionDiagram: void hideOrShow(net.sourceforge.plantuml.cucadiagram.EntityGender,net.sourceforge.plantuml.cucadiagram.EntityPortion,boolean)>(r15, r3, $z7);

        $r17 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r17;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeClassDiagram(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, $r6, $r7, $r12, $r17, r28, r30;
        net.sourceforge.plantuml.cucadiagram.EntityPortion r3, $r8, $r11, $r13, $r16, $r21;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, $z13, z14, $z15;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r4;
        net.sourceforge.plantuml.cucadiagram.IEntity r5;
        net.sourceforge.plantuml.cucadiagram.EntityGender $r9, $r10, $r14, $r15, $r19, $r20, r29;
        net.sourceforge.plantuml.cucadiagram.IGroup $r18, $r34;
        net.sourceforge.plantuml.cucadiagram.LeafType $r22, $r23, $r24, $r25, $r26, $r27;
        net.sourceforge.plantuml.cucadiagram.Ident r31;
        net.sourceforge.plantuml.cucadiagram.Code $r32;
        net.sourceforge.plantuml.command.CommandExecutionResult $r35;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        r4 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("PORTION", 0);

        r3 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.cucadiagram.EntityPortion getEntityPortion(java.lang.String)>($r2);

        r28 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("GENDER", 0);

        if r28 != null goto label01;

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender all()>();

        goto label11;

     label01:
        $z0 = virtualinvoke r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("class");

        if $z0 == 0 goto label02;

        $r27 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r27);

        goto label11;

     label02:
        $z1 = virtualinvoke r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("object");

        if $z1 == 0 goto label03;

        $r26 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType OBJECT>;

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r26);

        goto label11;

     label03:
        $z2 = virtualinvoke r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("interface");

        if $z2 == 0 goto label04;

        $r25 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType INTERFACE>;

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r25);

        goto label11;

     label04:
        $z3 = virtualinvoke r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("enum");

        if $z3 == 0 goto label05;

        $r24 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ENUM>;

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r24);

        goto label11;

     label05:
        $z4 = virtualinvoke r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("abstract");

        if $z4 == 0 goto label06;

        $r23 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ABSTRACT_CLASS>;

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r23);

        goto label11;

     label06:
        $z5 = virtualinvoke r28.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("annotation");

        if $z5 == 0 goto label07;

        $r22 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ANNOTATION>;

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityType(net.sourceforge.plantuml.cucadiagram.LeafType)>($r22);

        goto label11;

     label07:
        $z6 = virtualinvoke r28.<java.lang.String: boolean startsWith(java.lang.String)>("<<");

        if $z6 == 0 goto label08;

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byStereotype(java.lang.String)>(r28);

        goto label11;

     label08:
        r30 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>(r28);

        r31 = virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r30);

        $z7 = virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z7 == 0 goto label09;

        $r32 = r31;

        goto label10;

     label09:
        $r32 = virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r30);

     label10:
        r5 = virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r31, $r32, null, null);

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byEntityAlone(net.sourceforge.plantuml.cucadiagram.IEntity)>(r5);

     label11:
        if r29 == null goto label19;

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("EMPTY", 0);

        if $r6 == null goto label12;

        $z11 = 1;

        goto label13;

     label12:
        $z11 = 0;

     label13:
        z12 = $z11;

        if $z11 == 0 goto label14;

        $r21 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r3 != $r21 goto label14;

        $z13 = 1;

        goto label15;

     label14:
        $z13 = 0;

     label15:
        z14 = $z13;

        if z12 != 1 goto label16;

        if $z13 != 0 goto label16;

        $r20 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.cucadiagram.EntityGender emptyByGender(net.sourceforge.plantuml.cucadiagram.EntityPortion)>(r3);

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender and(net.sourceforge.plantuml.cucadiagram.EntityGender,net.sourceforge.plantuml.cucadiagram.EntityGender)>(r29, $r20);

     label16:
        $r34 = virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $z15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean groupRoot(net.sourceforge.plantuml.cucadiagram.IGroup)>($r34);

        if $z15 != 0 goto label17;

        $r18 = virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender byPackage(net.sourceforge.plantuml.cucadiagram.IGroup)>($r18);

        r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender and(net.sourceforge.plantuml.cucadiagram.EntityGender,net.sourceforge.plantuml.cucadiagram.EntityGender)>(r29, $r19);

     label17:
        if z14 == 0 goto label18;

        $r8 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.cucadiagram.EntityGender emptyByGender(net.sourceforge.plantuml.cucadiagram.EntityPortion)>($r8);

        $r10 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender and(net.sourceforge.plantuml.cucadiagram.EntityGender,net.sourceforge.plantuml.cucadiagram.EntityGender)>(r29, $r9);

        $r11 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COMMAND", 0);

        $z9 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("show");

        virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: void hideOrShow(net.sourceforge.plantuml.cucadiagram.EntityGender,net.sourceforge.plantuml.cucadiagram.EntityPortion,boolean)>($r10, $r11, $z9);

        $r13 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        $r14 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.cucadiagram.EntityGender emptyByGender(net.sourceforge.plantuml.cucadiagram.EntityPortion)>($r13);

        $r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityGenderUtils: net.sourceforge.plantuml.cucadiagram.EntityGender and(net.sourceforge.plantuml.cucadiagram.EntityGender,net.sourceforge.plantuml.cucadiagram.EntityGender)>(r29, $r14);

        $r16 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        $r17 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COMMAND", 0);

        $z10 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("show");

        virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: void hideOrShow(net.sourceforge.plantuml.cucadiagram.EntityGender,net.sourceforge.plantuml.cucadiagram.EntityPortion,boolean)>($r15, $r16, $z10);

        goto label19;

     label18:
        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COMMAND", 0);

        $z8 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("show");

        virtualinvoke r4.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: void hideOrShow(net.sourceforge.plantuml.cucadiagram.EntityGender,net.sourceforge.plantuml.cucadiagram.EntityPortion,boolean)>(r29, r3, $z8);

     label19:
        $r35 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r35;
    }

    private net.sourceforge.plantuml.cucadiagram.EntityPortion getEntityPortion(java.lang.String)
    {
        java.lang.String r0, $r1, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.cucadiagram.EntityPortion $r3, $r5, $r6, $r7, $r8;
        java.lang.IllegalArgumentException $r4;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender r9;

        r9 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goLowerCase(java.lang.String)>($r1);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("met");

        if $z0 == 0 goto label1;

        $r8 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        return $r8;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("mem");

        if $z1 == 0 goto label2;

        $r7 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        return $r7;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("att");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("fie");

        if $z3 == 0 goto label4;

     label3:
        $r3 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        return $r3;

     label4:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("cir");

        if $z4 == 0 goto label5;

        $r6 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion CIRCLED_CHARACTER>;

        return $r6;

     label5:
        $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("ste");

        if $z5 == 0 goto label6;

        $r5 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion STEREOTYPE>;

        return $r5;

     label6:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.UmlDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.UmlDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.UmlDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
