public abstract class net.sourceforge.plantuml.sequencediagram.Grouping extends java.lang.Object implements net.sourceforge.plantuml.sequencediagram.Event, net.sourceforge.plantuml.style.WithStyle
{
    private final java.lang.String title;
    private final net.sourceforge.plantuml.sequencediagram.GroupingType type;
    private final java.lang.String comment;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backColorElement;
    private final net.sourceforge.plantuml.style.Style style;
    private final net.sourceforge.plantuml.style.Style styleHeader;

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.sequencediagram.Grouping r6;

        r6 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName group>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private net.sourceforge.plantuml.style.StyleSignature getHeaderStyleDefinition()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.sequencediagram.Grouping r6;

        r6 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName groupHeader>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public net.sourceforge.plantuml.style.Style[] getUsedStyles()
    {
        net.sourceforge.plantuml.style.Style[] $r0;
        net.sourceforge.plantuml.sequencediagram.Grouping r1;
        net.sourceforge.plantuml.style.Style $r2, $r3, $r6, $r9, $r10, $r11;
        net.sourceforge.plantuml.style.PName $r4, $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r7;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        $r0 = newarray (net.sourceforge.plantuml.style.Style)[2];

        $r2 = r1.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.style.Style style>;

        if $r2 != null goto label1;

        $r10 = null;

        goto label2;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.style.Style style>;

        $r4 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.ugraphic.color.HColor getBackColorGeneral()>();

        $r10 = virtualinvoke $r3.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Style eventuallyOverride(net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.ugraphic.color.HColor)>($r4, $r5);

     label2:
        $r0[0] = $r10;

        $r6 = r1.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.style.Style styleHeader>;

        if $r6 != null goto label3;

        $r11 = null;

        goto label4;

     label3:
        $r9 = r1.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.style.Style styleHeader>;

        $r8 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r7 = r1.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.ugraphic.color.HColor backColorElement>;

        $r11 = virtualinvoke $r9.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Style eventuallyOverride(net.sourceforge.plantuml.style.PName,net.sourceforge.plantuml.ugraphic.color.HColor)>($r8, $r7);

     label4:
        $r0[1] = $r11;

        return $r0;
    }

    public void <init>(java.lang.String, java.lang.String, net.sourceforge.plantuml.sequencediagram.GroupingType, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.sequencediagram.Grouping r0;
        java.lang.String r1, r2;
        net.sourceforge.plantuml.sequencediagram.GroupingType r3;
        net.sourceforge.plantuml.ugraphic.color.HColor r4;
        net.sourceforge.plantuml.style.StyleSignature $r5, $r8;
        net.sourceforge.plantuml.style.StyleBuilder r6;
        net.sourceforge.plantuml.style.Style $r7, $r9;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: net.sourceforge.plantuml.sequencediagram.GroupingType;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r6 := @parameter4: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.sequencediagram.Grouping: java.lang.String title> = r1;

        r0.<net.sourceforge.plantuml.sequencediagram.Grouping: java.lang.String comment> = r2;

        r0.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.sequencediagram.GroupingType type> = r3;

        r0.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.ugraphic.color.HColor backColorElement> = r4;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r6);

        r0.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.style.Style style> = $r7;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.style.StyleSignature getHeaderStyleDefinition()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r6);

        r0.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.style.Style styleHeader> = $r9;

        return;
    }

    public final java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9;
        net.sourceforge.plantuml.sequencediagram.Grouping r1;
        java.lang.String $r2, $r8, $r10;
        net.sourceforge.plantuml.sequencediagram.GroupingType $r5;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.sequencediagram.GroupingType type>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r1.<net.sourceforge.plantuml.sequencediagram.Grouping: java.lang.String title>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public final java.lang.String getTitle()
    {
        net.sourceforge.plantuml.sequencediagram.Grouping r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Grouping: java.lang.String title>;

        return $r1;
    }

    public final net.sourceforge.plantuml.sequencediagram.GroupingType getType()
    {
        net.sourceforge.plantuml.sequencediagram.Grouping r0;
        net.sourceforge.plantuml.sequencediagram.GroupingType $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.sequencediagram.GroupingType type>;

        return $r1;
    }

    public abstract int getLevel();

    public abstract net.sourceforge.plantuml.ugraphic.color.HColor getBackColorGeneral();

    public final java.lang.String getComment()
    {
        net.sourceforge.plantuml.sequencediagram.Grouping r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Grouping: java.lang.String comment>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getBackColorElement()
    {
        net.sourceforge.plantuml.sequencediagram.Grouping r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Grouping;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Grouping: net.sourceforge.plantuml.ugraphic.color.HColor backColorElement>;

        return $r1;
    }

    public abstract boolean isParallel();
}
