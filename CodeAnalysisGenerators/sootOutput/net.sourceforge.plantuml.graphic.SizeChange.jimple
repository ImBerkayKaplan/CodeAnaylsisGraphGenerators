class net.sourceforge.plantuml.graphic.SizeChange extends java.lang.Object implements net.sourceforge.plantuml.graphic.FontChange
{
    private static final net.sourceforge.plantuml.command.regex.Pattern2 sizePattern;
    private final java.lang.Integer size;

    void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.SizeChange r0;
        java.lang.String r1, $r4;
        net.sourceforge.plantuml.command.regex.Pattern2 $r2;
        net.sourceforge.plantuml.command.regex.Matcher2 r3;
        boolean $z0;
        java.lang.Integer $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: net.sourceforge.plantuml.graphic.SizeChange;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <net.sourceforge.plantuml.graphic.SizeChange: net.sourceforge.plantuml.command.regex.Pattern2 sizePattern>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r4);

        r0.<net.sourceforge.plantuml.graphic.SizeChange: java.lang.Integer size> = $r5;

        return;
    }

    java.lang.Integer getSize()
    {
        net.sourceforge.plantuml.graphic.SizeChange r0;
        java.lang.Integer $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.SizeChange;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SizeChange: java.lang.Integer size>;

        return $r1;
    }

    public net.sourceforge.plantuml.graphic.FontConfiguration apply(net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.graphic.FontConfiguration r0, $r3;
        net.sourceforge.plantuml.graphic.SizeChange r1;
        java.lang.Integer $r2;
        int $i0;
        float $f0;

        r1 := @this: net.sourceforge.plantuml.graphic.SizeChange;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        $r2 = r1.<net.sourceforge.plantuml.graphic.SizeChange: java.lang.Integer size>;

        $i0 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $f0 = (float) $i0;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration changeSize(float)>($f0);

        return $r3;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.command.regex.Pattern2 $r0;

        $r0 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("\\<size[\\s:]+(\\d+)[%s]*\\>");

        <net.sourceforge.plantuml.graphic.SizeChange: net.sourceforge.plantuml.command.regex.Pattern2 sizePattern> = $r0;

        return;
    }
}
