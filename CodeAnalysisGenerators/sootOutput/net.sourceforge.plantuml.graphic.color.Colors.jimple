public class net.sourceforge.plantuml.graphic.color.Colors extends java.lang.Object
{
    private final java.util.Map map;
    private net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle;
    private java.lang.Boolean shadowing;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        net.sourceforge.plantuml.graphic.color.Colors r1;
        java.util.Map $r2;
        java.lang.String $r3, $r8;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r6;

        r1 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r1.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static net.sourceforge.plantuml.graphic.color.Colors empty()
    {
        net.sourceforge.plantuml.graphic.color.Colors $r0;

        $r0 = new net.sourceforge.plantuml.graphic.color.Colors;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.color.Colors: void <init>()>();

        return $r0;
    }

    public boolean isEmpty()
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        $r1 = r0.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    private net.sourceforge.plantuml.graphic.color.Colors copy()
    {
        net.sourceforge.plantuml.graphic.color.Colors $r0, r2;
        java.util.Map $r3, $r4;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r5;

        r2 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        $r0 = new net.sourceforge.plantuml.graphic.color.Colors;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.color.Colors: void <init>()>();

        $r4 = $r0.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        $r3 = r2.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r3);

        $r5 = r2.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        $r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle> = $r5;

        return $r0;
    }

    private void <init>()
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        java.util.EnumMap $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.EnumMap;

        specialinvoke $r1.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lnet/sourceforge/plantuml/graphic/color/ColorType;");

        r0.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map> = $r1;

        r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle> = null;

        r0.<net.sourceforge.plantuml.graphic.color.Colors: java.lang.Boolean shadowing> = null;

        return;
    }

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, java.lang.String, net.sourceforge.plantuml.ugraphic.color.HColorSet, net.sourceforge.plantuml.graphic.color.ColorType) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        java.util.EnumMap $r1;
        java.util.StringTokenizer $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r4, $r5, $r6;
        java.lang.String r7, r8, r9, r21, r22;
        int i0, $i1;
        net.sourceforge.plantuml.graphic.color.ColorType r10, r17;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r11;
        net.sourceforge.plantuml.api.ThemeStyle r12;
        net.sourceforge.plantuml.ugraphic.color.HColor r13, $r19;
        java.util.Map $r14, $r18;
        java.lang.Boolean $r16;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r12 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r21 := @parameter1: java.lang.String;

        r11 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        r17 := @parameter3: net.sourceforge.plantuml.graphic.color.ColorType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.EnumMap;

        specialinvoke $r1.<java.util.EnumMap: void <init>(java.lang.Class)>(class "Lnet/sourceforge/plantuml/graphic/color/ColorType;");

        r0.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map> = $r1;

        r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle> = null;

        r0.<net.sourceforge.plantuml.graphic.color.Colors: java.lang.Boolean shadowing> = null;

        r22 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goLowerCase(java.lang.String)>(r21);

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r22, "#;");

     label1:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label5;

        r7 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        i0 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(58);

        if i0 != -1 goto label2;

        $z6 = virtualinvoke r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z6 != 0 goto label4;

        $r18 = r0.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        $r19 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>(r12, r7);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r17, $r19);

        goto label4;

     label2:
        r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $z4 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("shadowing");

        if $z4 == 0 goto label3;

        $z5 = virtualinvoke r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("true");

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        r0.<net.sourceforge.plantuml.graphic.color.Colors: java.lang.Boolean shadowing> = $r16;

        goto label4;

     label3:
        r10 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType getType(java.lang.String)>(r8);

        r13 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>(r12, r9);

        $r14 = r0.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, r13);

     label4:
        goto label1;

     label5:
        $z1 = virtualinvoke r22.<java.lang.String: boolean contains(java.lang.CharSequence)>("line.dashed");

        if $z1 == 0 goto label6;

        $r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.LinkStyle: net.sourceforge.plantuml.cucadiagram.LinkStyle DASHED()>();

        r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle> = $r6;

        goto label8;

     label6:
        $z2 = virtualinvoke r22.<java.lang.String: boolean contains(java.lang.CharSequence)>("line.dotted");

        if $z2 == 0 goto label7;

        $r5 = staticinvoke <net.sourceforge.plantuml.cucadiagram.LinkStyle: net.sourceforge.plantuml.cucadiagram.LinkStyle DOTTED()>();

        r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle> = $r5;

        goto label8;

     label7:
        $z3 = virtualinvoke r22.<java.lang.String: boolean contains(java.lang.CharSequence)>("line.bold");

        if $z3 == 0 goto label8;

        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.LinkStyle: net.sourceforge.plantuml.cucadiagram.LinkStyle BOLD()>();

        r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle> = $r4;

     label8:
        return;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        net.sourceforge.plantuml.graphic.color.ColorType r1;
        java.util.Map $r2;
        java.lang.Object $r3, $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.color.ColorType;

        $r2 = r0.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (net.sourceforge.plantuml.ugraphic.color.HColor) $r4;

        return $r5;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType, net.sourceforge.plantuml.graphic.color.ColorType)
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        net.sourceforge.plantuml.graphic.color.ColorType r1, r3;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r4;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.color.ColorType;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.color.ColorType;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>(r3);

        return $r4;
    }

    public net.sourceforge.plantuml.ugraphic.UStroke getSpecificLineStroke()
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r1, $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        $r1 = r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.LinkStyle: net.sourceforge.plantuml.ugraphic.UStroke getStroke3()>();

        return $r3;
    }

    public net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0;
        net.sourceforge.plantuml.graphic.color.Colors r1, r2;
        net.sourceforge.plantuml.graphic.color.ColorType r3;
        java.util.Map $r4;

        r1 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.color.ColorType;

        r0 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r0 != null goto label1;

        return r1;

     label1:
        r2 = specialinvoke r1.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors copy()>();

        $r4 = r2.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r0);

        return r2;
    }

    private net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.graphic.color.Colors r0, r1, r2;
        java.util.Map $r3, $r4;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r5, $r6;
        net.sourceforge.plantuml.graphic.color.ColorType r7;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r7 := @parameter0: net.sourceforge.plantuml.graphic.color.ColorType;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.color.Colors;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors copy()>();

        $r4 = r1.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        $r3 = r2.<net.sourceforge.plantuml.graphic.color.Colors: java.util.Map map>;

        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r3);

        $r5 = r2.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        if $r5 == null goto label1;

        $r6 = r2.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        r1.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle> = $r6;

     label1:
        return r1;
    }

    public final net.sourceforge.plantuml.cucadiagram.LinkStyle getLineStyle()
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        $r1 = r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        return $r1;
    }

    public net.sourceforge.plantuml.ISkinParam mute(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.SkinParamColors $r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.color.Colors r2;

        r2 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $r0 = new net.sourceforge.plantuml.SkinParamColors;

        specialinvoke $r0.<net.sourceforge.plantuml.SkinParamColors: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.color.Colors)>(r1, r2);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.color.Colors addLegacyStroke(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.color.Colors r0, r1;
        java.lang.String r2, $r4, $r5;
        java.lang.Object $r3;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r6;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r2 := @parameter0: java.lang.String;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors copy()>();

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goUpperCase(java.lang.String)>($r4);

        $r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.LinkStyle: net.sourceforge.plantuml.cucadiagram.LinkStyle fromString1(java.lang.String)>($r5);

        r1.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle> = $r6;

        return r1;
    }

    public static net.sourceforge.plantuml.ugraphic.UGraphic applyStroke(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r1, $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r5;
        net.sourceforge.plantuml.ugraphic.UStroke $r4;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.graphic.color.Colors;

        if r0 != null goto label1;

        return r2;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        if $r1 != null goto label2;

        return r2;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.LinkStyle: net.sourceforge.plantuml.ugraphic.UStroke getStroke3()>();

        $r5 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        return $r5;
    }

    public net.sourceforge.plantuml.graphic.color.Colors applyStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ColorParam) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.ColorParam r2, $r4;
        java.lang.Object $r3, $r6;
        net.sourceforge.plantuml.graphic.color.ColorType $r5, r7;
        net.sourceforge.plantuml.graphic.color.Colors r8, r11, $r12;
        net.sourceforge.plantuml.ugraphic.color.HColor $r9;
        net.sourceforge.plantuml.ISkinParam r10;

        r8 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r10 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter2: net.sourceforge.plantuml.ColorParam;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (net.sourceforge.plantuml.ColorParam) $r3;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.graphic.color.ColorType getColorType()>();

        $r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r5);

        r7 = (net.sourceforge.plantuml.graphic.color.ColorType) $r6;

        $r9 = virtualinvoke r8.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>(r7);

        if $r9 == null goto label1;

        return r8;

     label1:
        r11 = interfaceinvoke r10.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.color.Colors getColors(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r2, r0);

        $r12 = specialinvoke r8.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.graphic.color.Colors)>(r7, r11);

        return $r12;
    }

    private net.sourceforge.plantuml.graphic.color.Colors applyFontParamStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.FontParam)
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.FontParam r2;
        net.sourceforge.plantuml.graphic.color.ColorType r3;
        net.sourceforge.plantuml.graphic.color.Colors r4, $r9;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, r8;
        boolean $z0;
        net.sourceforge.plantuml.ISkinParam r6;
        net.sourceforge.plantuml.FontParam[] $r7;

        r4 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r6 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter2: net.sourceforge.plantuml.FontParam;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        if r2 != null goto label1;

        return r4;

     label1:
        r3 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType TEXT>;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>(r3);

        if $r5 == null goto label2;

        return r4;

     label2:
        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label3;

        return r4;

     label3:
        $r7 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r7[0] = r2;

        r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getFontHtmlColor(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.FontParam[])>(r0, $r7);

        $r9 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>(r3, r8);

        return $r9;
    }

    public transient net.sourceforge.plantuml.graphic.color.Colors applyStereotypeForNote(net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.FontParam, net.sourceforge.plantuml.ColorParam[]) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.graphic.color.Colors r2, r10, r11;
        net.sourceforge.plantuml.ColorParam[] r3, r5;
        java.lang.Object $r4;
        int i0, i1;
        net.sourceforge.plantuml.ISkinParam r6;
        net.sourceforge.plantuml.FontParam r7;
        boolean $z0;
        java.lang.Boolean $r8;
        net.sourceforge.plantuml.ColorParam r9;

        r2 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r6 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r7 := @parameter2: net.sourceforge.plantuml.FontParam;

        r3 := @parameter3: net.sourceforge.plantuml.ColorParam[];

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        r10 = r2;

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        r5 = (net.sourceforge.plantuml.ColorParam[]) $r4;

        i0 = lengthof r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r9 = r5[i1];

        r10 = virtualinvoke r10.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors applyStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r0, r6, r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        r11 = specialinvoke r10.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors applyFontParamStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r0, r6, r7);

        $z0 = interfaceinvoke r6.<net.sourceforge.plantuml.ISkinParam: boolean shadowingForNote(net.sourceforge.plantuml.cucadiagram.Stereotype)>(r0);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r11.<net.sourceforge.plantuml.graphic.color.Colors: java.lang.Boolean shadowing> = $r8;

        return r11;
    }

    public java.lang.Boolean getShadowing()
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        java.lang.Boolean $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        $r1 = r0.<net.sourceforge.plantuml.graphic.color.Colors: java.lang.Boolean shadowing>;

        return $r1;
    }

    public net.sourceforge.plantuml.ugraphic.UStroke muteStroke(net.sourceforge.plantuml.ugraphic.UStroke)
    {
        net.sourceforge.plantuml.graphic.color.Colors r0;
        net.sourceforge.plantuml.cucadiagram.LinkStyle $r1, $r3;
        net.sourceforge.plantuml.ugraphic.UStroke r2, $r4;

        r0 := @this: net.sourceforge.plantuml.graphic.color.Colors;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UStroke;

        $r1 = r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        if $r1 != null goto label1;

        return r2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.cucadiagram.LinkStyle lineStyle>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.LinkStyle: net.sourceforge.plantuml.ugraphic.UStroke muteStroke(net.sourceforge.plantuml.ugraphic.UStroke)>(r2);

        return $r4;
    }
}
