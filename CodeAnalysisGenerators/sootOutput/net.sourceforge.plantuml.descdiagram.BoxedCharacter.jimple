public class net.sourceforge.plantuml.descdiagram.BoxedCharacter extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final java.lang.String c;
    private final net.sourceforge.plantuml.ugraphic.UFont font;
    private final net.sourceforge.plantuml.ugraphic.color.HColor innerCircle;
    private final net.sourceforge.plantuml.ugraphic.color.HColor circle;
    private final net.sourceforge.plantuml.ugraphic.color.HColor fontColor;
    private final double radius;

    public void <init>(char, double, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.descdiagram.BoxedCharacter r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        char c0;
        java.lang.String $r4;
        net.sourceforge.plantuml.ugraphic.UFont r5;
        net.sourceforge.plantuml.ugraphic.color.HColor r6, r7, r8;
        double d0;

        r0 := @this: net.sourceforge.plantuml.descdiagram.BoxedCharacter;

        c0 := @parameter0: char;

        d0 := @parameter1: double;

        r5 := @parameter2: net.sourceforge.plantuml.ugraphic.UFont;

        r6 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r7 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        r8 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: java.lang.String c> = $r4;

        r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.UFont font> = r5;

        r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.color.HColor innerCircle> = r6;

        r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.color.HColor circle> = r7;

        r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.color.HColor fontColor> = r8;

        r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double radius> = d0;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.descdiagram.BoxedCharacter r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2, $r3, $r6, $r13;
        net.sourceforge.plantuml.ugraphic.UBackground $r4, $r12;
        net.sourceforge.plantuml.ugraphic.URectangle $r5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        net.sourceforge.plantuml.ugraphic.UCenteredCharacter $r8;
        java.lang.String $r9;
        char $c0;
        net.sourceforge.plantuml.ugraphic.UFont $r10;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r11;
        net.sourceforge.plantuml.ugraphic.UGraphic r14, r15, r16, r17;

        r0 := @this: net.sourceforge.plantuml.descdiagram.BoxedCharacter;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.color.HColor circle>;

        if $r1 == null goto label1;

        $r13 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.color.HColor circle>;

        r14 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

     label1:
        $r2 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.color.HColor innerCircle>;

        if $r2 != null goto label2;

        $r11 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r15 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        goto label3;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.color.HColor innerCircle>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r15 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

     label3:
        $r5 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double radius>;

        $d3 = 2.0 * $d0;

        $d1 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double radius>;

        $d2 = 2.0 * $d1;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d3, $d2);

        interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        $r6 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.color.HColor fontColor>;

        r16 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double radius>;

        $d4 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double radius>;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, $d4);

        r17 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r8 = new net.sourceforge.plantuml.ugraphic.UCenteredCharacter;

        $r9 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: java.lang.String c>;

        $c0 = virtualinvoke $r9.<java.lang.String: char charAt(int)>(0);

        $r10 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: net.sourceforge.plantuml.ugraphic.UFont font>;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UCenteredCharacter: void <init>(char,net.sourceforge.plantuml.ugraphic.UFont)>($c0, $r10);

        interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        return;
    }

    public final double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.descdiagram.BoxedCharacter r0;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.descdiagram.BoxedCharacter;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double radius>;

        $d1 = 2.0 * $d0;

        return $d1;
    }

    public final double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.descdiagram.BoxedCharacter r0;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.descdiagram.BoxedCharacter;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = r0.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double radius>;

        $d1 = 2.0 * $d0;

        return $d1;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.descdiagram.BoxedCharacter r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double $d0, $d1;

        r1 := @this: net.sourceforge.plantuml.descdiagram.BoxedCharacter;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.descdiagram.BoxedCharacter: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d0, $d1);

        return $r0;
    }
}
