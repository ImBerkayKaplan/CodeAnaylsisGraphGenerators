public class net.sourceforge.plantuml.ErrorUml extends java.lang.Object
{
    private final java.lang.String error;
    private final net.sourceforge.plantuml.ErrorUmlType type;
    private final net.sourceforge.plantuml.LineLocation lineLocation;
    private final int score;

    public void <init>(net.sourceforge.plantuml.ErrorUmlType, java.lang.String, int, net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.ErrorUml r0;
        int i0;
        java.lang.String r1, $r3;
        java.lang.Object $r2, $r5;
        net.sourceforge.plantuml.ErrorUmlType r4, $r6;
        net.sourceforge.plantuml.LineLocation r7;

        r0 := @this: net.sourceforge.plantuml.ErrorUml;

        r4 := @parameter0: net.sourceforge.plantuml.ErrorUmlType;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r7 := @parameter3: net.sourceforge.plantuml.LineLocation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ErrorUml: int score> = i0;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (java.lang.String) $r2;

        r0.<net.sourceforge.plantuml.ErrorUml: java.lang.String error> = $r3;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r6 = (net.sourceforge.plantuml.ErrorUmlType) $r5;

        r0.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.ErrorUmlType type> = $r6;

        r0.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.LineLocation lineLocation> = r7;

        return;
    }

    public int score()
    {
        net.sourceforge.plantuml.ErrorUml r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.ErrorUml;

        $i0 = r0.<net.sourceforge.plantuml.ErrorUml: int score>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.ErrorUml r1, r2;
        net.sourceforge.plantuml.ErrorUmlType $r3, $r4;
        int $i0, $i1;
        java.lang.String $r5, $r6;
        boolean $z0, $z1;

        r2 := @this: net.sourceforge.plantuml.ErrorUml;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.ErrorUml) r0;

        $r4 = r2.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.ErrorUmlType type>;

        $r3 = r1.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.ErrorUmlType type>;

        if $r4 != $r3 goto label1;

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.ErrorUml: int getPosition()>();

        $i1 = virtualinvoke r1.<net.sourceforge.plantuml.ErrorUml: int getPosition()>();

        if $i0 != $i1 goto label1;

        $r6 = r2.<net.sourceforge.plantuml.ErrorUml: java.lang.String error>;

        $r5 = r1.<net.sourceforge.plantuml.ErrorUml: java.lang.String error>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.ErrorUml r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4;
        net.sourceforge.plantuml.ErrorUmlType $r2;

        r0 := @this: net.sourceforge.plantuml.ErrorUml;

        $r1 = r0.<net.sourceforge.plantuml.ErrorUml: java.lang.String error>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        $r2 = r0.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.ErrorUmlType type>;

        $i1 = virtualinvoke $r2.<net.sourceforge.plantuml.ErrorUmlType: int hashCode()>();

        $i2 = $i0 + $i1;

        $i3 = virtualinvoke r0.<net.sourceforge.plantuml.ErrorUml: int getPosition()>();

        $i4 = $i2 + $i3;

        return $i4;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r6, $r7, $r9;
        net.sourceforge.plantuml.ErrorUml r1;
        net.sourceforge.plantuml.ErrorUmlType $r2;
        java.lang.String $r3, $r8, $r10;
        int $i0;

        r1 := @this: net.sourceforge.plantuml.ErrorUml;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.ErrorUmlType type>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ErrorUmlType: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.ErrorUml: int getPosition()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r1.<net.sourceforge.plantuml.ErrorUml: java.lang.String error>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public final java.lang.String getError()
    {
        net.sourceforge.plantuml.ErrorUml r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.ErrorUml;

        $r1 = r0.<net.sourceforge.plantuml.ErrorUml: java.lang.String error>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ErrorUmlType getType()
    {
        net.sourceforge.plantuml.ErrorUml r0;
        net.sourceforge.plantuml.ErrorUmlType $r1;

        r0 := @this: net.sourceforge.plantuml.ErrorUml;

        $r1 = r0.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.ErrorUmlType type>;

        return $r1;
    }

    public final int getPosition()
    {
        net.sourceforge.plantuml.ErrorUml r0;
        net.sourceforge.plantuml.LineLocation $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.ErrorUml;

        $r1 = r0.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.LineLocation lineLocation>;

        $i0 = interfaceinvoke $r1.<net.sourceforge.plantuml.LineLocation: int getPosition()>();

        return $i0;
    }

    public final net.sourceforge.plantuml.LineLocation getLineLocation()
    {
        net.sourceforge.plantuml.ErrorUml r0;
        net.sourceforge.plantuml.LineLocation $r1;

        r0 := @this: net.sourceforge.plantuml.ErrorUml;

        $r1 = r0.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.LineLocation lineLocation>;

        return $r1;
    }
}
