class net.sourceforge.plantuml.timingdiagram.PlayerBinary$2 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0;

    void <init>(net.sourceforge.plantuml.timingdiagram.PlayerBinary)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary$2 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary$2;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary$2 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerBinary $r1, $r3, $r5, $r8, $r9, $r11, $r16, $r18, $r21, $r22, $r28, $r33, $r41;
        net.sourceforge.plantuml.graphic.SymbolContext $r2;
        java.lang.Boolean $r4, $r6, $r37, $r39;
        net.sourceforge.plantuml.graphic.StringBounder r7, $r23;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, d11;
        net.sourceforge.plantuml.ugraphic.ULine r10, $r20, $r35;
        java.util.SortedMap $r12;
        java.util.Set $r13;
        java.util.Iterator r14;
        net.sourceforge.plantuml.ugraphic.UTranslate $r15, $r24, $r32, $r40;
        net.sourceforge.plantuml.ugraphic.UGraphic $r17, $r25, $r34, $r42, r43, r44;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r19, $r29;
        java.lang.Object $r26, $r30, $r36, $r38;
        java.util.Map$Entry r27;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r31;
        boolean $z0, $z1, z2, $z3;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerBinary$2;

        r43 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: net.sourceforge.plantuml.graphic.SymbolContext getContext()>();

        r44 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r43);

        d11 = 0.0;

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r4 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.lang.Boolean access$000(net.sourceforge.plantuml.timingdiagram.PlayerBinary)>($r3);

        if $r4 != null goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.lang.Boolean access$000(net.sourceforge.plantuml.timingdiagram.PlayerBinary)>($r5);

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        z2 = $z1;

        r7 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r8 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $d0 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: double access$100(net.sourceforge.plantuml.timingdiagram.PlayerBinary,net.sourceforge.plantuml.graphic.StringBounder)>($r8, r7);

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $d1 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: double access$200(net.sourceforge.plantuml.timingdiagram.PlayerBinary,net.sourceforge.plantuml.graphic.StringBounder)>($r9, r7);

        $d2 = $d0 - $d1;

        r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d2);

        $r11 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r12 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: java.util.SortedMap access$300(net.sourceforge.plantuml.timingdiagram.PlayerBinary)>($r11);

        $r13 = interfaceinvoke $r12.<java.util.SortedMap: java.util.Set entrySet()>();

        r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r26 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r27 = (java.util.Map$Entry) $r26;

        $r28 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r29 = $r28.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r30 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r31 = (net.sourceforge.plantuml.timingdiagram.TimeTick) $r30;

        d7 = virtualinvoke $r29.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r31);

        $r32 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r33 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $d8 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: double access$400(net.sourceforge.plantuml.timingdiagram.PlayerBinary,net.sourceforge.plantuml.graphic.StringBounder,boolean)>($r33, r7, z2);

        specialinvoke $r32.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d11, $d8);

        $r34 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r32);

        $d9 = d7 - d11;

        $r35 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d9);

        interfaceinvoke $r34.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r35);

        $r36 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r37 = (java.lang.Boolean) $r36;

        $z0 = virtualinvoke $r37.<java.lang.Boolean: boolean booleanValue()>();

        if z2 == $z0 goto label4;

        $r40 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r41 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $d10 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: double access$200(net.sourceforge.plantuml.timingdiagram.PlayerBinary,net.sourceforge.plantuml.graphic.StringBounder)>($r41, r7);

        specialinvoke $r40.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d7, $d10);

        $r42 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r40);

        interfaceinvoke $r42.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r10);

     label4:
        d11 = d7;

        $r38 = interfaceinvoke r27.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r39 = (java.lang.Boolean) $r38;

        z2 = virtualinvoke $r39.<java.lang.Boolean: boolean booleanValue()>();

        goto label3;

     label5:
        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r16 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $d3 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: double access$400(net.sourceforge.plantuml.timingdiagram.PlayerBinary,net.sourceforge.plantuml.graphic.StringBounder,boolean)>($r16, r7, z2);

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d11, $d3);

        $r17 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r18 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r19 = $r18.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d4 = virtualinvoke $r19.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $d5 = $d4 - d11;

        $r20 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d5);

        interfaceinvoke $r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r20);

        $r21 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r22 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary$2: net.sourceforge.plantuml.timingdiagram.PlayerBinary this$0>;

        $r23 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d6 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: double access$500(net.sourceforge.plantuml.timingdiagram.PlayerBinary,net.sourceforge.plantuml.graphic.StringBounder)>($r22, $r23);

        $r24 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d6);

        $r25 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerBinary: void access$600(net.sourceforge.plantuml.timingdiagram.PlayerBinary,net.sourceforge.plantuml.ugraphic.UGraphic)>($r21, $r25);

        return;
    }
}
