public class h.ST_dtlink_s extends smetana.core.UnsupportedStarStruct
{
    public h.ST_dtlink_s right;
    public h.ST_dtlink_s _left;
    private final smetana.core.__ptr__ container;

    public void ___(smetana.core.__struct__)
    {
        smetana.core.__struct__ r0;
        h.ST_dtlink_s r1, r2, $r3, $r4;

        r2 := @this: h.ST_dtlink_s;

        r0 := @parameter0: smetana.core.__struct__;

        r1 = (h.ST_dtlink_s) r0;

        $r3 = r1.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        r2.<h.ST_dtlink_s: h.ST_dtlink_s right> = $r3;

        $r4 = r1.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        r2.<h.ST_dtlink_s: h.ST_dtlink_s _left> = $r4;

        return;
    }

    public void <init>()
    {
        h.ST_dtlink_s r0;

        r0 := @this: h.ST_dtlink_s;

        specialinvoke r0.<h.ST_dtlink_s: void <init>(smetana.core.__ptr__)>(null);

        return;
    }

    public void <init>(smetana.core.__ptr__)
    {
        h.ST_dtlink_s r0;
        smetana.core.__ptr__ r1;

        r0 := @this: h.ST_dtlink_s;

        r1 := @parameter0: smetana.core.__ptr__;

        specialinvoke r0.<smetana.core.UnsupportedStarStruct: void <init>()>();

        r0.<h.ST_dtlink_s: smetana.core.__ptr__ container> = r1;

        return;
    }

    public smetana.core.__ptr__ getParent()
    {
        h.ST_dtlink_s r0;
        smetana.core.__ptr__ $r1;

        r0 := @this: h.ST_dtlink_s;

        $r1 = r0.<h.ST_dtlink_s: smetana.core.__ptr__ container>;

        return $r1;
    }

    public smetana.core.__ptr__ castTo(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;
        java.lang.String $r5;
        h.ST_dtlink_s r6;
        smetana.core.__ptr__ $r7, $r8, $r9;
        boolean $z0;
        h.ST_dthold_s $r10;

        r6 := @this: h.ST_dtlink_s;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Lh/ST_dtlink_s;" goto label1;

        return r6;

     label1:
        if r0 != class "Lh/ST_dthold_s;" goto label2;

        $r8 = virtualinvoke r6.<h.ST_dtlink_s: smetana.core.__ptr__ getParent()>();

        $z0 = $r8 instanceof h.ST_dthold_s;

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r6.<h.ST_dtlink_s: smetana.core.__ptr__ getParent()>();

        $r10 = (h.ST_dthold_s) $r9;

        return $r10;

     label2:
        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dest=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r7 = specialinvoke r6.<smetana.core.UnsupportedStarStruct: smetana.core.__ptr__ castTo(java.lang.Class)>(r0);

        return $r7;
    }

    public java.lang.Object getTheField(smetana.core.OFFSET)
    {
        h.ST_dtlink_s r0;
        int $i0;
        java.lang.String $r1;
        boolean $z0, $z1;
        smetana.core.__ptr__ $r2, $r3, $r4;
        h.ST_refstr_t $r5;
        smetana.core.CString $r6;
        smetana.core.OFFSET r7;

        r0 := @this: h.ST_dtlink_s;

        r7 := @parameter0: smetana.core.OFFSET;

        if r7 == null goto label1;

        $i0 = virtualinvoke r7.<smetana.core.OFFSET: int getSign()>();

        if $i0 != 0 goto label2;

     label1:
        return r0;

     label2:
        $r1 = virtualinvoke r7.<smetana.core.OFFSET: java.lang.String getField()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("s");

        if $z0 == 0 goto label3;

        $r3 = r0.<h.ST_dtlink_s: smetana.core.__ptr__ container>;

        $z1 = $r3 instanceof h.ST_refstr_t;

        if $z1 == 0 goto label3;

        $r4 = r0.<h.ST_dtlink_s: smetana.core.__ptr__ container>;

        $r5 = (h.ST_refstr_t) $r4;

        $r6 = $r5.<h.ST_refstr_t: smetana.core.CString s>;

        return $r6;

     label3:
        virtualinvoke r7.<smetana.core.OFFSET: smetana.core.OFFSET negative()>();

        $r2 = r0.<h.ST_dtlink_s: smetana.core.__ptr__ container>;

        return $r2;
    }
}
