public class net.sourceforge.plantuml.command.CommandFooter extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.command.CommandFooter r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.command.CommandFooter;

        $r1 = staticinvoke <net.sourceforge.plantuml.command.CommandFooter: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r9, $r11, $r17;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r18, $r19, $r20;
        net.sourceforge.plantuml.command.regex.RegexOptional $r4;
        net.sourceforge.plantuml.command.regex.RegexOr $r8, $r16;
        net.sourceforge.plantuml.command.regex.RegexConcat $r10, $r21;

        $r0 = class "Lnet/sourceforge/plantuml/command/CommandFooter;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[7];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(left|right|center)");

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r5);

        $r2[1] = $r4;

        $r6 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r6;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("footer");

        $r2[3] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r9 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r10 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r11 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r12 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r11[0] = $r12;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(":");

        $r11[1] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r11[2] = $r14;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r11);

        $r9[0] = $r10;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[1] = $r15;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r9);

        $r2[4] = $r8;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r17 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r18 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL1", "[%g](.*)[%g]");

        $r17[0] = $r18;

        $r19 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r19.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL2", "(.*[%pLN_.].*)");

        $r17[1] = $r19;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r17);

        $r2[5] = $r16;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[6] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r21;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.TitledDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, $r12;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r2, r11;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.TitledDiagram r4;
        net.sourceforge.plantuml.FontParam $r5;
        net.sourceforge.plantuml.style.StyleSignature $r6;
        net.sourceforge.plantuml.style.StyleBuilder $r7;
        net.sourceforge.plantuml.style.Style $r8;
        net.sourceforge.plantuml.command.CommandFooter r9;
        net.sourceforge.plantuml.LineLocation r10;
        net.sourceforge.plantuml.cucadiagram.DisplaySection $r13;
        net.sourceforge.plantuml.command.CommandExecutionResult $r14;

        r9 := @this: net.sourceforge.plantuml.command.CommandFooter;

        r4 := @parameter0: net.sourceforge.plantuml.TitledDiagram;

        r10 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("POSITION", 0);

        $r2 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        r11 = staticinvoke <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment fromString(java.lang.String,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r1, $r2);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        if r1 != null goto label1;

        $r5 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam FOOTER>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.style.StyleSignature getStyleDefinition(net.sourceforge.plantuml.style.SName)>(null);

        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.TitledDiagram: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r7);

        r11 = virtualinvoke $r8.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

     label1:
        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("LABEL", 0);

        r3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r12);

        $r13 = virtualinvoke r4.<net.sourceforge.plantuml.TitledDiagram: net.sourceforge.plantuml.cucadiagram.DisplaySection getFooter()>();

        virtualinvoke $r13.<net.sourceforge.plantuml.cucadiagram.DisplaySection: void putDisplay(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r3, r11);

        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r14;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.CommandFooter r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.TitledDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.command.CommandFooter;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.TitledDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.command.CommandFooter: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.TitledDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
