public class net.sourceforge.plantuml.skin.rose.ComponentRoseDivider extends net.sourceforge.plantuml.skin.AbstractTextualComponent
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor background;
    private final boolean empty;
    private final boolean withShadow;
    private final double shadow;
    private final net.sourceforge.plantuml.ugraphic.UStroke stroke;
    private final double roundCorner;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ISkinSimple, boolean, net.sourceforge.plantuml.ugraphic.UStroke, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseDivider r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.graphic.FontConfiguration r3;
        net.sourceforge.plantuml.ISkinSimple r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.LineBreakStrategy $r6;
        boolean $z0, z1, $z2;
        net.sourceforge.plantuml.ugraphic.color.HColor r7, r8, $r16, $r21;
        net.sourceforge.plantuml.ugraphic.UStroke r9, $r22;
        java.lang.CharSequence $r10;
        int $i0, $i1;
        net.sourceforge.plantuml.style.PName $r12, $r17, $r23, $r25;
        net.sourceforge.plantuml.style.Value $r13, $r18, $r24, $r26;
        net.sourceforge.plantuml.api.ThemeStyle $r14, $r19;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r15, $r20;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseDivider;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        r7 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter4: net.sourceforge.plantuml.ISkinSimple;

        z1 := @parameter5: boolean;

        r9 := @parameter6: net.sourceforge.plantuml.ugraphic.UStroke;

        r8 := @parameter7: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r6 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, $r6, r2, r3, $r5, 4, 4, 4, r4, 0, null, null);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r12 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r13 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r12);

        $r14 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r16 = interfaceinvoke $r13.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r14, $r15);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColor background> = $r16;

        $r17 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r18 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r17);

        $r19 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r21 = interfaceinvoke $r18.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r19, $r20);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = $r21;

        $r22 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.UStroke stroke> = $r22;

        $r23 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r24 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r23);

        $i1 = interfaceinvoke $r24.<net.sourceforge.plantuml.style.Value: int asInt()>();

        $d0 = (double) $i1;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double roundCorner> = $d0;

        $r25 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r26 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r25);

        $d1 = interfaceinvoke $r26.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double shadow> = $d1;

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double shadow> = 0.0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColor background> = r7;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = r8;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.UStroke stroke> = r9;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double roundCorner> = 0.0;

     label2:
        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $i0 = interfaceinvoke $r10.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: boolean empty> = $z2;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: boolean withShadow> = z1;

        return;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.skin.rose.ComponentRoseDivider r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r9;
        net.sourceforge.plantuml.ugraphic.UBackground $r4;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.graphic.TextBlock r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        double d0, d1, $d3, $d4, $d5, d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r13, $r19, $r21;
        net.sourceforge.plantuml.ugraphic.UGraphic $r8, $r14, r15, r16, r17, r18, $r20, $r22;
        net.sourceforge.plantuml.ugraphic.UStroke $r10;
        net.sourceforge.plantuml.ugraphic.URectangle $r11, r12;
        int $i0;

        r2 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseDivider;

        r15 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r3 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r16 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $z0 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: boolean empty>;

        if $z0 == 0 goto label1;

        $d16 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d17 = $d16 / 2.0;

        $r13 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d17);

        $r14 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        $d18 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        specialinvoke r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: void drawSep(net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r14, $d18);

        goto label4;

     label1:
        r5 = virtualinvoke r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        r6 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = virtualinvoke r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        d1 = virtualinvoke r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d3 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = $d3 - d0;

        $d5 = $d4 - 6.0;

        d6 = $d5 / 2.0;

        $d7 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d8 = $d7 - d1;

        d9 = $d8 / 2.0;

        $d10 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d11 = $d10 / 2.0;

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d11);

        $r8 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $d12 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        specialinvoke r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: void drawSep(net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r8, $d12);

        $r9 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        r17 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r10 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        r18 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r11 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d13 = d0 + 6.0;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d13, d1);

        $d14 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double roundCorner>;

        r12 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d14);

        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label2;

        $d15 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double shadow>;

        virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>($d15);

        goto label3;

     label2:
        $z2 = r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: boolean withShadow>;

        if $z2 == 0 goto label3;

        virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(4.0);

     label3:
        $r19 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d6, d9);

        $r20 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke $r20.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r12);

        $r21 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d19 = d6 + 6.0;

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: int getMarginY()>();

        $d20 = (double) $i0;

        $d21 = d9 + $d20;

        specialinvoke $r21.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d19, $d21);

        $r22 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        interfaceinvoke r5.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r22);

     label4:
        return;
    }

    private void drawSep(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseDivider r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, r4, r5;
        double d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseDivider;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(-1.0);

        $r3 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: void drawRectLong(net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r3, d0);

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: void drawDoubleLine(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r5, d0);

        return;
    }

    private void drawRectLong(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r2;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.skin.rose.ComponentRoseDivider r1;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.UGraphic r3, r5;
        net.sourceforge.plantuml.ugraphic.UStroke $r4;

        r1 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseDivider;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d0, 3.0);

        $d1 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double roundCorner>;

        r2 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d1);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $d2 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double shadow>;

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>($d2);

        goto label2;

     label1:
        $z1 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: boolean withShadow>;

        if $z1 == 0 goto label2;

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(2.0);

     label2:
        $r4 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r2);

        return;
    }

    private void drawDoubleLine(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.ugraphic.UStroke $r0, $r2;
        net.sourceforge.plantuml.skin.rose.ComponentRoseDivider r1;
        double $d0, $d1, d2;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, $r7, $r9, r10, r11;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;
        net.sourceforge.plantuml.ugraphic.ULine r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r8;

        r1 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseDivider;

        r10 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d2 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UStroke;

        $r2 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>($d1);

        $r3 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r4 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        r11 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(d2);

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(-1.0);

        $r7 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r5);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(2.0);

        $r9 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r5);

        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseDivider r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseDivider;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = $d0 + 20.0;

        return $d1;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseDivider r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseDivider;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = $d0 + 30.0;

        return $d1;
    }
}
