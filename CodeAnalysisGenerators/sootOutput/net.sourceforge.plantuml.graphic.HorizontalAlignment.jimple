public final enum class net.sourceforge.plantuml.graphic.HorizontalAlignment extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT;
    public static final enum net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER;
    public static final enum net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT;
    private static final net.sourceforge.plantuml.graphic.HorizontalAlignment[] $VALUES;

    public static net.sourceforge.plantuml.graphic.HorizontalAlignment[] values()
    {
        net.sourceforge.plantuml.graphic.HorizontalAlignment[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.graphic.HorizontalAlignment[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.graphic.HorizontalAlignment valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/graphic/HorizontalAlignment;", r0);

        $r2 = (net.sourceforge.plantuml.graphic.HorizontalAlignment) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.graphic.HorizontalAlignment r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static net.sourceforge.plantuml.graphic.HorizontalAlignment fromString(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r0, $r3, $r5, $r7, $r8, $r9;
        java.lang.String $r1, r2, $r4, $r6;
        boolean $z0, $z1, $z2;

        r2 := @parameter0: java.lang.String;

        $r0 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r1 = virtualinvoke $r0.<net.sourceforge.plantuml.graphic.HorizontalAlignment: java.lang.String name()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        $r9 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        return $r9;

     label1:
        $r3 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.HorizontalAlignment: java.lang.String name()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        $r8 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        return $r8;

     label2:
        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.HorizontalAlignment: java.lang.String name()>();

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label3;

        $r7 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        return $r7;

     label3:
        return null;
    }

    public static net.sourceforge.plantuml.graphic.HorizontalAlignment fromString(java.lang.String, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.HorizontalAlignment r0, r2;
        java.lang.String r3, r4;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        if r3 != null goto label1;

        return r0;

     label1:
        r4 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goUpperCase(java.lang.String)>(r3);

        r2 = staticinvoke <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment fromString(java.lang.String)>(r4);

        if r2 != null goto label2;

        return r0;

     label2:
        return r2;
    }

    public java.lang.String getGraphVizValue()
    {
        net.sourceforge.plantuml.graphic.HorizontalAlignment r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.HorizontalAlignment: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        return $r3;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.graphic.TextBlock, double, double)
    {
        net.sourceforge.plantuml.graphic.HorizontalAlignment r0, $r1, $r2, $r3;
        net.sourceforge.plantuml.graphic.TextBlock r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, $r8, $r11, $r13;
        net.sourceforge.plantuml.graphic.StringBounder $r6, $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r10, $r12;
        double d0, $d1, $d2, d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r14, r15;

        r0 := @this: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        d3 := @parameter2: double;

        d0 := @parameter3: double;

        $r1 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        if r0 != $r1 goto label1;

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d3);

        $r13 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r13);

        goto label3;

     label1:
        $r2 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if r0 != $r2 goto label2;

        $r9 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r14 = interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r9);

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = virtualinvoke r14.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = d0 - $d5;

        $d7 = $d6 - d3;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, d3);

        $r11 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r11);

        goto label3;

     label2:
        $r3 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if r0 != $r3 goto label3;

        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r15 = interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r6);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d1 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = d0 - $d1;

        $d4 = $d2 / 2.0;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, d3);

        $r8 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r8);

     label3:
        return;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r0, $r1, $r2, $r4, $r5, $r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment[] $r3;

        $r0 = new net.sourceforge.plantuml.graphic.HorizontalAlignment;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.HorizontalAlignment: void <init>(java.lang.String,int)>("LEFT", 0);

        <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT> = $r0;

        $r1 = new net.sourceforge.plantuml.graphic.HorizontalAlignment;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.HorizontalAlignment: void <init>(java.lang.String,int)>("CENTER", 1);

        <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER> = $r1;

        $r2 = new net.sourceforge.plantuml.graphic.HorizontalAlignment;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.HorizontalAlignment: void <init>(java.lang.String,int)>("RIGHT", 2);

        <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT> = $r2;

        $r3 = newarray (net.sourceforge.plantuml.graphic.HorizontalAlignment)[3];

        $r4 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r3[0] = $r4;

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r3[1] = $r5;

        $r6 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        $r3[2] = $r6;

        <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment[] $VALUES> = $r3;

        return;
    }
}
