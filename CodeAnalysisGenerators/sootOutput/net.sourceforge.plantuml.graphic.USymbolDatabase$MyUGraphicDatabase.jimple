class net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase extends net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine
{
    private final double endingX;
    final net.sourceforge.plantuml.graphic.USymbolDatabase this$0;

    protected net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine copy(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase $r0, r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double $d0;
        net.sourceforge.plantuml.graphic.USymbolDatabase $r3;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase;

        $r3 = r1.<net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase: net.sourceforge.plantuml.graphic.USymbolDatabase this$0>;

        $d0 = r1.<net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase: double endingX>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase: void <init>(net.sourceforge.plantuml.graphic.USymbolDatabase,net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r3, r2, $d0);

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.graphic.USymbolDatabase, net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase r0;
        net.sourceforge.plantuml.graphic.USymbolDatabase r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.USymbolDatabase;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        r0.<net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase: net.sourceforge.plantuml.graphic.USymbolDatabase this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphicHorizontalLine: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

        r0.<net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase: double endingX> = d0;

        return;
    }

    protected void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UHorizontalLine, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase r0;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.USymbolDatabase $r1;
        net.sourceforge.plantuml.ugraphic.UPath r2;
        net.sourceforge.plantuml.ugraphic.UTranslate r3, $r10, $r17;
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r4;
        net.sourceforge.plantuml.ugraphic.UStroke $r5, $r12;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, $r9, $r11, $r13, $r16, $r18, r19, r20;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r7, $r14;
        net.sourceforge.plantuml.ugraphic.UBackground $r8, $r15;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase;

        r19 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        $r1 = r0.<net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase: net.sourceforge.plantuml.graphic.USymbolDatabase this$0>;

        $d0 = r0.<net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase: double endingX>;

        r2 = staticinvoke <net.sourceforge.plantuml.graphic.USymbolDatabase: net.sourceforge.plantuml.ugraphic.UPath access$000(net.sourceforge.plantuml.graphic.USymbolDatabase,double)>($r1, $d0);

        r20 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r6 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r9 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(-15.0);

        $r11 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r2);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: boolean isDouble()>();

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r13 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r14 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r15 = virtualinvoke $r14.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r16 = interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r17 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(-13.0);

        $r18 = interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        interfaceinvoke $r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r2);

     label1:
        $d1 = r0.<net.sourceforge.plantuml.graphic.USymbolDatabase$MyUGraphicDatabase: double endingX>;

        virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawTitleInternal(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,boolean)>(r20, 0.0, $d1, 0.0, 1);

        return;
    }
}
