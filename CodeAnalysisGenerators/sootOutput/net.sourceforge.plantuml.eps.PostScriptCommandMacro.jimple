public class net.sourceforge.plantuml.eps.PostScriptCommandMacro extends java.lang.Object implements net.sourceforge.plantuml.eps.PostScriptCommand
{
    private final java.lang.String name;
    private final net.sourceforge.plantuml.eps.PostScriptData data;

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.eps.PostScriptCommandMacro r0;
        net.sourceforge.plantuml.eps.PostScriptData $r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.eps.PostScriptCommandMacro;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.eps.PostScriptData;

        specialinvoke $r1.<net.sourceforge.plantuml.eps.PostScriptData: void <init>()>();

        r0.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: net.sourceforge.plantuml.eps.PostScriptData data> = $r1;

        r0.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: java.lang.String name> = r2;

        return;
    }

    public java.lang.String getName()
    {
        net.sourceforge.plantuml.eps.PostScriptCommandMacro r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.eps.PostScriptCommandMacro;

        $r1 = r0.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: java.lang.String name>;

        return $r1;
    }

    public void add(net.sourceforge.plantuml.eps.PostScriptCommand)
    {
        net.sourceforge.plantuml.eps.PostScriptCommandMacro r0;
        net.sourceforge.plantuml.eps.PostScriptCommand r1;
        net.sourceforge.plantuml.eps.PostScriptData $r2;

        r0 := @this: net.sourceforge.plantuml.eps.PostScriptCommandMacro;

        r1 := @parameter0: net.sourceforge.plantuml.eps.PostScriptCommand;

        $r2 = r0.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: net.sourceforge.plantuml.eps.PostScriptData data>;

        virtualinvoke $r2.<net.sourceforge.plantuml.eps.PostScriptData: void add(net.sourceforge.plantuml.eps.PostScriptCommand)>(r1);

        return;
    }

    public java.lang.String toPostString()
    {
        net.sourceforge.plantuml.eps.PostScriptCommandMacro r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.eps.PostScriptCommandMacro;

        $r1 = r0.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getPostStringDefinition()
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r6, $r7;
        net.sourceforge.plantuml.eps.PostScriptCommandMacro r4;
        java.lang.String $r5, $r8, $r11, $r14;
        net.sourceforge.plantuml.eps.PostScriptData $r10;

        r4 := @this: net.sourceforge.plantuml.eps.PostScriptCommandMacro;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r4.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: java.lang.String name>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = r4.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: net.sourceforge.plantuml.eps.PostScriptData data>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.eps.PostScriptData: java.lang.String toPostString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} def\n");

        $r14 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.eps.PostScriptCommandMacro r0;
        net.sourceforge.plantuml.eps.PostScriptData $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.eps.PostScriptCommandMacro;

        $r1 = r0.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: net.sourceforge.plantuml.eps.PostScriptData data>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.eps.PostScriptData: java.lang.String toPostString()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.eps.PostScriptCommandMacro r1, r2;
        net.sourceforge.plantuml.eps.PostScriptData $r3, $r5;
        java.lang.String $r4, $r6;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.eps.PostScriptCommandMacro;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.eps.PostScriptCommandMacro) r0;

        $r3 = r2.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: net.sourceforge.plantuml.eps.PostScriptData data>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.eps.PostScriptData: java.lang.String toPostString()>();

        $r5 = r1.<net.sourceforge.plantuml.eps.PostScriptCommandMacro: net.sourceforge.plantuml.eps.PostScriptData data>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.eps.PostScriptData: java.lang.String toPostString()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        return $z0;
    }
}
