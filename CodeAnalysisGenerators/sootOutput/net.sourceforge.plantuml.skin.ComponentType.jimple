public final enum class net.sourceforge.plantuml.skin.ComponentType extends java.lang.Enum implements net.sourceforge.plantuml.style.Styleable
{
    public static final enum net.sourceforge.plantuml.skin.ComponentType ARROW;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ACTOR_HEAD;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ACTOR_TAIL;
    public static final enum net.sourceforge.plantuml.skin.ComponentType BOUNDARY_HEAD;
    public static final enum net.sourceforge.plantuml.skin.ComponentType BOUNDARY_TAIL;
    public static final enum net.sourceforge.plantuml.skin.ComponentType CONTROL_HEAD;
    public static final enum net.sourceforge.plantuml.skin.ComponentType CONTROL_TAIL;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ENTITY_HEAD;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ENTITY_TAIL;
    public static final enum net.sourceforge.plantuml.skin.ComponentType QUEUE_HEAD;
    public static final enum net.sourceforge.plantuml.skin.ComponentType QUEUE_TAIL;
    public static final enum net.sourceforge.plantuml.skin.ComponentType DATABASE_HEAD;
    public static final enum net.sourceforge.plantuml.skin.ComponentType DATABASE_TAIL;
    public static final enum net.sourceforge.plantuml.skin.ComponentType COLLECTIONS_HEAD;
    public static final enum net.sourceforge.plantuml.skin.ComponentType COLLECTIONS_TAIL;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_CLOSE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_OPEN;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_CLOSE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN;
    public static final enum net.sourceforge.plantuml.skin.ComponentType DELAY_TEXT;
    public static final enum net.sourceforge.plantuml.skin.ComponentType DESTROY;
    public static final enum net.sourceforge.plantuml.skin.ComponentType DELAY_LINE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_LINE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType CONTINUE_LINE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType GROUPING_ELSE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType GROUPING_HEADER;
    public static final enum net.sourceforge.plantuml.skin.ComponentType GROUPING_SPACE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType NEWPAGE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType NOTE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType NOTE_HEXAGONAL;
    public static final enum net.sourceforge.plantuml.skin.ComponentType NOTE_BOX;
    public static final enum net.sourceforge.plantuml.skin.ComponentType DIVIDER;
    public static final enum net.sourceforge.plantuml.skin.ComponentType REFERENCE;
    public static final enum net.sourceforge.plantuml.skin.ComponentType ENGLOBER;
    public static final enum net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_HEAD;
    public static final enum net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_TAIL;
    private static final net.sourceforge.plantuml.skin.ComponentType[] $VALUES;

    public static net.sourceforge.plantuml.skin.ComponentType[] values()
    {
        net.sourceforge.plantuml.skin.ComponentType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.skin.ComponentType[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.skin.ComponentType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.skin.ComponentType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/skin/ComponentType;", r0);

        $r2 = (net.sourceforge.plantuml.skin.ComponentType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.skin.ComponentType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.skin.ComponentType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public boolean isArrow()
    {
        net.sourceforge.plantuml.skin.ComponentType r0, $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.skin.ComponentType;

        $r1 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ARROW>;

        if r0 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.skin.ComponentType r0, $r1, $r8, $r9, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        net.sourceforge.plantuml.style.SName[] $r2, $r10, $r27, $r32, $r38, $r44, $r50, $r56, $r62, $r68;
        net.sourceforge.plantuml.style.SName $r3, $r4, $r5, $r6, $r11, $r12, $r13, $r14, $r28, $r33, $r34, $r35, $r36, $r39, $r40, $r41, $r42, $r45, $r46, $r47, $r48, $r51, $r52, $r53, $r54, $r57, $r58, $r59, $r60, $r63, $r64, $r65, $r66, $r69, $r70, $r71, $r72;
        net.sourceforge.plantuml.style.StyleSignature $r7, $r15, $r29, $r37, $r43, $r49, $r55, $r61, $r67, $r73;
        boolean $z0;
        java.lang.UnsupportedOperationException $r30;
        java.lang.String $r31;

        r0 := @this: net.sourceforge.plantuml.skin.ComponentType;

        $r1 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_HEAD>;

        if r0 == $r1 goto label01;

        $r8 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_TAIL>;

        if r0 != $r8 goto label02;

     label01:
        $r2 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r2[0] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r2[1] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r2[2] = $r5;

        $r6 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName participant>;

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r2);

        return $r7;

     label02:
        $r9 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_LINE>;

        if r0 == $r9 goto label03;

        $r16 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTINUE_LINE>;

        if r0 != $r16 goto label04;

     label03:
        $r10 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r11 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r10[0] = $r11;

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r10[1] = $r12;

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r10[2] = $r13;

        $r14 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName lifeLine>;

        $r10[3] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r10);

        return $r15;

     label04:
        $r17 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_CLOSE>;

        if r0 == $r17 goto label05;

        $r18 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_OPEN>;

        if r0 == $r18 goto label05;

        $r19 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_CLOSE>;

        if r0 == $r19 goto label05;

        $r20 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN>;

        if r0 != $r20 goto label06;

     label05:
        $r68 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r69 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r68[0] = $r69;

        $r70 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r68[1] = $r70;

        $r71 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r68[2] = $r71;

        $r72 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName lifeLine>;

        $r68[3] = $r72;

        $r73 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r68);

        return $r73;

     label06:
        $r21 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DESTROY>;

        if r0 != $r21 goto label07;

        $r62 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r63 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r62[0] = $r63;

        $r64 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r62[1] = $r64;

        $r65 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r62[2] = $r65;

        $r66 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName lifeLine>;

        $r62[3] = $r66;

        $r67 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r62);

        return $r67;

     label07:
        $r22 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DIVIDER>;

        if r0 != $r22 goto label08;

        $r56 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r57 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r56[0] = $r57;

        $r58 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r56[1] = $r58;

        $r59 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r56[2] = $r59;

        $r60 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName separator>;

        $r56[3] = $r60;

        $r61 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r56);

        return $r61;

     label08:
        $r23 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENGLOBER>;

        if r0 != $r23 goto label09;

        $r50 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r51 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r50[0] = $r51;

        $r52 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r50[1] = $r52;

        $r53 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r50[2] = $r53;

        $r54 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName box>;

        $r50[3] = $r54;

        $r55 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r50);

        return $r55;

     label09:
        $r24 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE>;

        if r0 != $r24 goto label10;

        $r44 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r45 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r44[0] = $r45;

        $r46 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r44[1] = $r46;

        $r47 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r44[2] = $r47;

        $r48 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r44[3] = $r48;

        $r49 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r44);

        return $r49;

     label10:
        $r25 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_TEXT>;

        if r0 != $r25 goto label11;

        $r38 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r39 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r38[0] = $r39;

        $r40 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r38[1] = $r40;

        $r41 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r38[2] = $r41;

        $r42 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName delay>;

        $r38[3] = $r42;

        $r43 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r38);

        return $r43;

     label11:
        $r26 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_LINE>;

        if r0 != $r26 goto label12;

        $r32 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r33 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r32[0] = $r33;

        $r34 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r32[1] = $r34;

        $r35 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r32[2] = $r35;

        $r36 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName delay>;

        $r32[3] = $r36;

        $r37 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r32);

        return $r37;

     label12:
        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label13;

        $r30 = new java.lang.UnsupportedOperationException;

        $r31 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ComponentType: java.lang.String toString()>();

        specialinvoke $r30.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r31);

        throw $r30;

     label13:
        $r27 = newarray (net.sourceforge.plantuml.style.SName)[1];

        $r28 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r27[0] = $r28;

        $r29 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r27);

        return $r29;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.skin.ComponentType $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72;
        net.sourceforge.plantuml.skin.ComponentType[] $r36;

        $r0 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ARROW", 0);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ARROW> = $r0;

        $r1 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r1.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ACTOR_HEAD", 1);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_HEAD> = $r1;

        $r2 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r2.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ACTOR_TAIL", 2);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_TAIL> = $r2;

        $r3 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r3.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("BOUNDARY_HEAD", 3);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType BOUNDARY_HEAD> = $r3;

        $r4 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r4.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("BOUNDARY_TAIL", 4);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType BOUNDARY_TAIL> = $r4;

        $r5 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r5.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("CONTROL_HEAD", 5);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTROL_HEAD> = $r5;

        $r6 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r6.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("CONTROL_TAIL", 6);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTROL_TAIL> = $r6;

        $r7 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r7.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ENTITY_HEAD", 7);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENTITY_HEAD> = $r7;

        $r8 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r8.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ENTITY_TAIL", 8);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENTITY_TAIL> = $r8;

        $r9 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r9.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("QUEUE_HEAD", 9);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType QUEUE_HEAD> = $r9;

        $r10 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r10.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("QUEUE_TAIL", 10);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType QUEUE_TAIL> = $r10;

        $r11 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r11.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("DATABASE_HEAD", 11);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DATABASE_HEAD> = $r11;

        $r12 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r12.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("DATABASE_TAIL", 12);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DATABASE_TAIL> = $r12;

        $r13 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r13.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("COLLECTIONS_HEAD", 13);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType COLLECTIONS_HEAD> = $r13;

        $r14 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r14.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("COLLECTIONS_TAIL", 14);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType COLLECTIONS_TAIL> = $r14;

        $r15 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r15.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ALIVE_BOX_CLOSE_CLOSE", 15);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_CLOSE> = $r15;

        $r16 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r16.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ALIVE_BOX_CLOSE_OPEN", 16);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_OPEN> = $r16;

        $r17 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r17.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ALIVE_BOX_OPEN_CLOSE", 17);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_CLOSE> = $r17;

        $r18 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r18.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ALIVE_BOX_OPEN_OPEN", 18);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN> = $r18;

        $r19 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r19.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("DELAY_TEXT", 19);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_TEXT> = $r19;

        $r20 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r20.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("DESTROY", 20);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DESTROY> = $r20;

        $r21 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r21.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("DELAY_LINE", 21);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_LINE> = $r21;

        $r22 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r22.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("PARTICIPANT_LINE", 22);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_LINE> = $r22;

        $r23 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r23.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("CONTINUE_LINE", 23);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTINUE_LINE> = $r23;

        $r24 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r24.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("GROUPING_ELSE", 24);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_ELSE> = $r24;

        $r25 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r25.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("GROUPING_HEADER", 25);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_HEADER> = $r25;

        $r26 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r26.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("GROUPING_SPACE", 26);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_SPACE> = $r26;

        $r27 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r27.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("NEWPAGE", 27);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NEWPAGE> = $r27;

        $r28 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r28.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("NOTE", 28);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE> = $r28;

        $r29 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r29.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("NOTE_HEXAGONAL", 29);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_HEXAGONAL> = $r29;

        $r30 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r30.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("NOTE_BOX", 30);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_BOX> = $r30;

        $r31 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r31.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("DIVIDER", 31);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DIVIDER> = $r31;

        $r32 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r32.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("REFERENCE", 32);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType REFERENCE> = $r32;

        $r33 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r33.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("ENGLOBER", 33);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENGLOBER> = $r33;

        $r34 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r34.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("PARTICIPANT_HEAD", 34);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_HEAD> = $r34;

        $r35 = new net.sourceforge.plantuml.skin.ComponentType;

        specialinvoke $r35.<net.sourceforge.plantuml.skin.ComponentType: void <init>(java.lang.String,int)>("PARTICIPANT_TAIL", 35);

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_TAIL> = $r35;

        $r36 = newarray (net.sourceforge.plantuml.skin.ComponentType)[36];

        $r37 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ARROW>;

        $r36[0] = $r37;

        $r38 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_HEAD>;

        $r36[1] = $r38;

        $r39 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_TAIL>;

        $r36[2] = $r39;

        $r40 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType BOUNDARY_HEAD>;

        $r36[3] = $r40;

        $r41 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType BOUNDARY_TAIL>;

        $r36[4] = $r41;

        $r42 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTROL_HEAD>;

        $r36[5] = $r42;

        $r43 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTROL_TAIL>;

        $r36[6] = $r43;

        $r44 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENTITY_HEAD>;

        $r36[7] = $r44;

        $r45 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENTITY_TAIL>;

        $r36[8] = $r45;

        $r46 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType QUEUE_HEAD>;

        $r36[9] = $r46;

        $r47 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType QUEUE_TAIL>;

        $r36[10] = $r47;

        $r48 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DATABASE_HEAD>;

        $r36[11] = $r48;

        $r49 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DATABASE_TAIL>;

        $r36[12] = $r49;

        $r50 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType COLLECTIONS_HEAD>;

        $r36[13] = $r50;

        $r51 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType COLLECTIONS_TAIL>;

        $r36[14] = $r51;

        $r52 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_CLOSE>;

        $r36[15] = $r52;

        $r53 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_OPEN>;

        $r36[16] = $r53;

        $r54 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_CLOSE>;

        $r36[17] = $r54;

        $r55 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN>;

        $r36[18] = $r55;

        $r56 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_TEXT>;

        $r36[19] = $r56;

        $r57 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DESTROY>;

        $r36[20] = $r57;

        $r58 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_LINE>;

        $r36[21] = $r58;

        $r59 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_LINE>;

        $r36[22] = $r59;

        $r60 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTINUE_LINE>;

        $r36[23] = $r60;

        $r61 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_ELSE>;

        $r36[24] = $r61;

        $r62 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_HEADER>;

        $r36[25] = $r62;

        $r63 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_SPACE>;

        $r36[26] = $r63;

        $r64 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NEWPAGE>;

        $r36[27] = $r64;

        $r65 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE>;

        $r36[28] = $r65;

        $r66 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_HEXAGONAL>;

        $r36[29] = $r66;

        $r67 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_BOX>;

        $r36[30] = $r67;

        $r68 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DIVIDER>;

        $r36[31] = $r68;

        $r69 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType REFERENCE>;

        $r36[32] = $r69;

        $r70 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENGLOBER>;

        $r36[33] = $r70;

        $r71 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_HEAD>;

        $r36[34] = $r71;

        $r72 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_TAIL>;

        $r36[35] = $r72;

        <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType[] $VALUES> = $r36;

        return;
    }
}
