public class net.sourceforge.plantuml.preproc.ReadLineReader extends java.lang.Object implements net.sourceforge.plantuml.preproc.ReadLine
{
    private final java.io.BufferedReader br;
    private net.sourceforge.plantuml.LineLocationImpl location;
    private final java.lang.String description;

    private void <init>(java.io.Reader, java.lang.String, net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.preproc.ReadLineReader r0;
        java.io.BufferedReader $r1;
        java.io.Reader r2;
        net.sourceforge.plantuml.LineLocationImpl $r3;
        net.sourceforge.plantuml.LineLocation r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8, r9;

        r0 := @this: net.sourceforge.plantuml.preproc.ReadLineReader;

        r2 := @parameter0: java.io.Reader;

        r9 := @parameter1: java.lang.String;

        r4 := @parameter2: net.sourceforge.plantuml.LineLocation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r9 != null goto label1;

        r9 = "?";

     label1:
        $r1 = new java.io.BufferedReader;

        specialinvoke $r1.<java.io.BufferedReader: void <init>(java.io.Reader)>(r2);

        r0.<net.sourceforge.plantuml.preproc.ReadLineReader: java.io.BufferedReader br> = $r1;

        $r3 = new net.sourceforge.plantuml.LineLocationImpl;

        specialinvoke $r3.<net.sourceforge.plantuml.LineLocationImpl: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation)>(r9, r4);

        r0.<net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.LineLocationImpl location> = $r3;

        r0.<net.sourceforge.plantuml.preproc.ReadLineReader: java.lang.String description> = r9;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reading from ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r8);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        net.sourceforge.plantuml.preproc.ReadLineReader r1;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: net.sourceforge.plantuml.preproc.ReadLineReader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.preproc.ReadLineReader: java.lang.String description>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private void <init>(java.io.Reader, java.lang.String)
    {
        net.sourceforge.plantuml.preproc.ReadLineReader r0;
        java.io.Reader r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.preproc.ReadLineReader;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.preproc.ReadLineReader: void <init>(java.io.Reader,java.lang.String,net.sourceforge.plantuml.LineLocation)>(r1, r2, null);

        return;
    }

    public static net.sourceforge.plantuml.preproc.ReadLine create(java.io.Reader, java.lang.String)
    {
        net.sourceforge.plantuml.preproc.ReadLineReader $r0;
        java.io.Reader r1;
        java.lang.String r2;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        $r0 = new net.sourceforge.plantuml.preproc.ReadLineReader;

        specialinvoke $r0.<net.sourceforge.plantuml.preproc.ReadLineReader: void <init>(java.io.Reader,java.lang.String,net.sourceforge.plantuml.LineLocation)>(r1, r2, null);

        return $r0;
    }

    public static net.sourceforge.plantuml.preproc.ReadLine create(java.io.Reader, java.lang.String, net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.preproc.ReadLineReader $r0;
        java.io.Reader r1;
        java.lang.String r2;
        net.sourceforge.plantuml.LineLocation r3;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: net.sourceforge.plantuml.LineLocation;

        $r0 = new net.sourceforge.plantuml.preproc.ReadLineReader;

        specialinvoke $r0.<net.sourceforge.plantuml.preproc.ReadLineReader: void <init>(java.io.Reader,java.lang.String,net.sourceforge.plantuml.LineLocation)>(r1, r2, r3);

        return $r0;
    }

    public net.sourceforge.plantuml.StringLocated readLine() throws java.io.IOException
    {
        net.sourceforge.plantuml.preproc.ReadLineReader r0;
        java.io.BufferedReader $r1;
        net.sourceforge.plantuml.LineLocationImpl $r2, $r3, $r5;
        boolean $z0;
        net.sourceforge.plantuml.StringLocated $r4;
        java.lang.String r6, r7;

        r0 := @this: net.sourceforge.plantuml.preproc.ReadLineReader;

        $r1 = r0.<net.sourceforge.plantuml.preproc.ReadLineReader: java.io.BufferedReader br>;

        r6 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r2 = r0.<net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.LineLocationImpl location>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.LineLocationImpl: net.sourceforge.plantuml.LineLocationImpl oneLineRead()>();

        r0.<net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.LineLocationImpl location> = $r3;

        if r6 != null goto label1;

        return null;

     label1:
        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("\ufeff");

        if $z0 == 0 goto label2;

        r6 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>(1);

     label2:
        r7 = virtualinvoke r6.<java.lang.String: java.lang.String replace(char,char)>(8211, 45);

        $r4 = new net.sourceforge.plantuml.StringLocated;

        $r5 = r0.<net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.LineLocationImpl location>;

        specialinvoke $r4.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation)>(r7, $r5);

        return $r4;
    }

    public void close() throws java.io.IOException
    {
        net.sourceforge.plantuml.preproc.ReadLineReader r0;
        java.io.BufferedReader $r1;

        r0 := @this: net.sourceforge.plantuml.preproc.ReadLineReader;

        $r1 = r0.<net.sourceforge.plantuml.preproc.ReadLineReader: java.io.BufferedReader br>;

        virtualinvoke $r1.<java.io.BufferedReader: void close()>();

        return;
    }
}
