public class net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.EnsureVisible visible;
    private final double dpiFactor;

    public void <init>(double, net.sourceforge.plantuml.EnsureVisible)
    {
        net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d r0;
        net.sourceforge.plantuml.EnsureVisible r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d;

        d0 := @parameter0: double;

        r1 := @parameter1: net.sourceforge.plantuml.EnsureVisible;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: net.sourceforge.plantuml.EnsureVisible visible> = r1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: double dpiFactor> = d0;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UImage, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.awt.Graphics2D)
    {
        net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        net.sourceforge.plantuml.EnsureVisible $r1, $r3;
        net.sourceforge.plantuml.ugraphic.UImage r2;
        int $i0, $i1, $i3, $i4, $i5, $i6;
        byte $b2;
        java.awt.Graphics2D r4;
        java.awt.geom.AffineTransform r5;
        java.awt.image.BufferedImage $r6, $r7;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r8;
        net.sourceforge.plantuml.ugraphic.UParam r9;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UImage;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r8 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r9 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.awt.Graphics2D;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: net.sourceforge.plantuml.EnsureVisible visible>;

        interfaceinvoke $r1.<net.sourceforge.plantuml.EnsureVisible: void ensureVisible(double,double)>(d0, d1);

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: net.sourceforge.plantuml.EnsureVisible visible>;

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UImage: int getWidth()>();

        $d2 = (double) $i0;

        $d3 = d0 + $d2;

        $i1 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UImage: int getHeight()>();

        $d4 = (double) $i1;

        $d5 = d1 + $d4;

        interfaceinvoke $r3.<net.sourceforge.plantuml.EnsureVisible: void ensureVisible(double,double)>($d3, $d5);

        $d6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: double dpiFactor>;

        $b2 = $d6 cmpl 1.0;

        if $b2 != 0 goto label1;

        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UImage: java.awt.image.BufferedImage getImage(double)>(1.0);

        $i6 = (int) d0;

        $i5 = (int) d1;

        virtualinvoke r4.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r7, $i6, $i5, null);

        goto label2;

     label1:
        r5 = virtualinvoke r4.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        $d7 = r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: double dpiFactor>;

        $d10 = 1.0 / $d7;

        $d8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: double dpiFactor>;

        $d9 = 1.0 / $d8;

        virtualinvoke r4.<java.awt.Graphics2D: void scale(double,double)>($d10, $d9);

        $d11 = r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: double dpiFactor>;

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UImage: java.awt.image.BufferedImage getImage(double)>($d11);

        $d12 = r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: double dpiFactor>;

        $d13 = d0 * $d12;

        $i4 = (int) $d13;

        $d14 = r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: double dpiFactor>;

        $d15 = d1 * $d14;

        $i3 = (int) $d15;

        virtualinvoke r4.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>($r6, $i4, $i3, null);

        virtualinvoke r4.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>(r5);

     label2:
        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        java.awt.Graphics2D $r5;
        net.sourceforge.plantuml.ugraphic.UImage $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UImage) r1;

        $r5 = (java.awt.Graphics2D) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: void draw(net.sourceforge.plantuml.ugraphic.UImage,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,java.awt.Graphics2D)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
