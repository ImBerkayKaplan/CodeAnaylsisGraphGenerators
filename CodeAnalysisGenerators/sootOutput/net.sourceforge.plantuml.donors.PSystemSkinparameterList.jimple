public class net.sourceforge.plantuml.donors.PSystemSkinparameterList extends net.sourceforge.plantuml.PlainDiagram
{

    public void <init>(net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.donors.PSystemSkinparameterList r0;
        net.sourceforge.plantuml.core.UmlSource r1;

        r0 := @this: net.sourceforge.plantuml.donors.PSystemSkinparameterList;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        specialinvoke r0.<net.sourceforge.plantuml.PlainDiagram: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        return;
    }

    protected net.sourceforge.plantuml.graphic.UDrawable getRootDrawable(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.donors.PSystemSkinparameterList r0;
        java.util.List $r1, r2;
        net.sourceforge.plantuml.donors.PSystemSkinparameterList$1 $r3;
        net.sourceforge.plantuml.FileFormatOption r4;

        r0 := @this: net.sourceforge.plantuml.donors.PSystemSkinparameterList;

        r4 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.donors.PSystemSkinparameterList: java.util.List getDonors()>();

        r2 = staticinvoke <net.sourceforge.plantuml.donors.PSystemSkinparameterList: java.util.List getCols(java.util.List,int)>($r1, 5);

        $r3 = new net.sourceforge.plantuml.donors.PSystemSkinparameterList$1;

        specialinvoke $r3.<net.sourceforge.plantuml.donors.PSystemSkinparameterList$1: void <init>(net.sourceforge.plantuml.donors.PSystemSkinparameterList,java.util.List)>(r0, r2);

        return $r3;
    }

    public static java.util.List getCols(java.util.List, int) throws java.io.IOException
    {
        java.util.ArrayList $r0;
        java.util.List r2, r3;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r4;

        r2 := @parameter0: java.util.List;

        i1 := @parameter1: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = i1 - 1;

        $i3 = $i0 + $i2;

        i4 = $i3 / i1;

        i9 = 0;

     label1:
        $i5 = interfaceinvoke r2.<java.util.List: int size()>();

        if i9 >= $i5 goto label2;

        $i6 = interfaceinvoke r2.<java.util.List: int size()>();

        $i7 = i9 + i4;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i7);

        r3 = interfaceinvoke r2.<java.util.List: java.util.List subList(int,int)>(i9, $i8);

        $r4 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.svek.TextBlockBackcolored createBlackOnWhite(java.util.List)>(r3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        i9 = i9 + i4;

        goto label1;

     label2:
        return $r0;
    }

    private java.util.List getDonors() throws java.io.IOException
    {
        java.util.ArrayList $r0;
        java.util.Collection $r1;
        net.sourceforge.plantuml.donors.PSystemSkinparameterList r3;

        r3 := @this: net.sourceforge.plantuml.donors.PSystemSkinparameterList;

        $r0 = new java.util.ArrayList;

        $r1 = staticinvoke <net.sourceforge.plantuml.SkinParam: java.util.Collection getPossibleValues()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1);

        return $r0;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.donors.PSystemSkinparameterList r1;

        r1 := @this: net.sourceforge.plantuml.donors.PSystemSkinparameterList;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Parameters)");

        return $r0;
    }

    public static net.sourceforge.plantuml.donors.PSystemSkinparameterList create(net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.donors.PSystemSkinparameterList $r0;
        net.sourceforge.plantuml.core.UmlSource r1;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        $r0 = new net.sourceforge.plantuml.donors.PSystemSkinparameterList;

        specialinvoke $r0.<net.sourceforge.plantuml.donors.PSystemSkinparameterList: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        return $r0;
    }
}
