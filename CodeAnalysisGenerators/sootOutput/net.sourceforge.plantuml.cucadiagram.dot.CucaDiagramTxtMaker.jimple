public final class net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker extends java.lang.Object
{
    private final net.sourceforge.plantuml.FileFormat fileFormat;
    private final net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt globalUg;
    private final net.sourceforge.plantuml.cucadiagram.PortionShower portionShower;

    private static double getXPixelPerChar()
    {
        return 5.0;
    }

    private static double getYPixelPerChar()
    {
        return 10.0;
    }

    private boolean showMember(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker r0;
        net.sourceforge.plantuml.cucadiagram.IEntity r1;
        net.sourceforge.plantuml.cucadiagram.EntityPortion $r2, $r4;
        net.sourceforge.plantuml.cucadiagram.PortionShower $r3, $r5;
        boolean z0, z1, $z2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.cucadiagram.PortionShower portionShower>;

        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        z0 = interfaceinvoke $r3.<net.sourceforge.plantuml.cucadiagram.PortionShower: boolean showPortion(net.sourceforge.plantuml.cucadiagram.EntityPortion,net.sourceforge.plantuml.cucadiagram.IEntity)>($r2, r1);

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.cucadiagram.PortionShower portionShower>;

        $r4 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        z1 = interfaceinvoke $r5.<net.sourceforge.plantuml.cucadiagram.PortionShower: boolean showPortion(net.sourceforge.plantuml.cucadiagram.EntityPortion,net.sourceforge.plantuml.cucadiagram.IEntity)>($r4, r1);

        if z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram, net.sourceforge.plantuml.FileFormat) throws java.io.IOException
    {
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker r0;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r1, $r17, $r19, $r22;
        net.sourceforge.plantuml.FileFormat r2;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r3;
        net.sourceforge.plantuml.posimo.Cluster $r4;
        java.util.HashMap $r6;
        java.util.Collection $r8, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        net.sourceforge.plantuml.posimo.GraphvizSolverB $r9;
        java.util.ArrayList $r10;
        java.util.List $r11;
        java.lang.Object $r14, $r15, $r20, $r24, $r26, $r28, $r30;
        net.sourceforge.plantuml.ugraphic.UTranslate $r16;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13;
        net.sourceforge.plantuml.ugraphic.UGraphic $r18;
        net.sourceforge.plantuml.posimo.DotPath $r21;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r23;
        net.sourceforge.plantuml.cucadiagram.IEntity $r25, $r27, r35, r45;
        net.sourceforge.plantuml.posimo.Path $r29, r43;
        int $i0, $i1, $i2, $i3, i4;
        net.sourceforge.plantuml.posimo.Block $r31, r40, r41, r46;
        java.util.Iterator r34, r38, r42, r44;
        net.sourceforge.plantuml.cucadiagram.Link r39;
        java.awt.geom.Point2D r47;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker;

        r3 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r2 := @parameter1: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt globalUg> = $r1;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.FileFormat fileFormat> = r2;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.cucadiagram.PortionShower portionShower> = r3;

        $r4 = new net.sourceforge.plantuml.posimo.Cluster;

        specialinvoke $r4.<net.sourceforge.plantuml.posimo.Cluster: void <init>(net.sourceforge.plantuml.posimo.Cluster,double,double)>(null, 0.0, 0.0);

        i4 = 0;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        $r8 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.util.Collection getLeafsvalues()>();

        r34 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r30 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (net.sourceforge.plantuml.cucadiagram.IEntity) $r30;

        $i1 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: int getWidth(net.sourceforge.plantuml.cucadiagram.IEntity)>(r35);

        $d8 = (double) $i1;

        $d9 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: double getXPixelPerChar()>();

        d12 = $d8 * $d9;

        $i2 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: int getHeight(net.sourceforge.plantuml.cucadiagram.IEntity)>(r35);

        $d10 = (double) $i2;

        $d11 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: double getYPixelPerChar()>();

        d13 = $d10 * $d11;

        $r31 = new net.sourceforge.plantuml.posimo.Block;

        $i3 = i4;

        i4 = i4 + 1;

        specialinvoke $r31.<net.sourceforge.plantuml.posimo.Block: void <init>(int,double,double,net.sourceforge.plantuml.posimo.Cluster)>($i3, d12, d13, null);

        virtualinvoke $r4.<net.sourceforge.plantuml.posimo.Cluster: void addBloc(net.sourceforge.plantuml.posimo.Block)>($r31);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r35, $r31);

        goto label1;

     label2:
        $r9 = new net.sourceforge.plantuml.posimo.GraphvizSolverB;

        specialinvoke $r9.<net.sourceforge.plantuml.posimo.GraphvizSolverB: void <init>()>();

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.util.List getLinks()>();

        r38 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r24 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (net.sourceforge.plantuml.cucadiagram.Link) $r24;

        $r25 = virtualinvoke r39.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r26 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);

        r40 = (net.sourceforge.plantuml.posimo.Block) $r26;

        $r27 = virtualinvoke r39.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r28 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27);

        r41 = (net.sourceforge.plantuml.posimo.Block) $r28;

        $r29 = new net.sourceforge.plantuml.posimo.Path;

        $i0 = virtualinvoke r39.<net.sourceforge.plantuml.cucadiagram.Link: int getLength()>();

        $z4 = virtualinvoke r39.<net.sourceforge.plantuml.cucadiagram.Link: boolean isInvis()>();

        specialinvoke $r29.<net.sourceforge.plantuml.posimo.Path: void <init>(net.sourceforge.plantuml.posimo.Block,net.sourceforge.plantuml.posimo.Block,net.sourceforge.plantuml.posimo.Label,int,boolean)>(r40, r41, null, $i0, $z4);

        interfaceinvoke $r10.<java.util.Collection: boolean add(java.lang.Object)>($r29);

        goto label3;

     label4:
        virtualinvoke $r9.<net.sourceforge.plantuml.posimo.GraphvizSolverB: net.sourceforge.plantuml.awt.geom.Dimension2D solve(net.sourceforge.plantuml.posimo.Cluster,java.util.Collection)>($r4, $r10);

        r42 = interfaceinvoke $r10.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z6 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label7;

        $r20 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r43 = (net.sourceforge.plantuml.posimo.Path) $r20;

        $z3 = virtualinvoke r43.<net.sourceforge.plantuml.posimo.Path: boolean isInvis()>();

        if $z3 == 0 goto label6;

        goto label5;

     label6:
        $r21 = virtualinvoke r43.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.DotPath getDotPath()>();

        $r22 = r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt globalUg>;

        $r23 = virtualinvoke $r22.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $d6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: double getXPixelPerChar()>();

        $d7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: double getYPixelPerChar()>();

        virtualinvoke $r21.<net.sourceforge.plantuml.posimo.DotPath: void draw(net.sourceforge.plantuml.asciiart.BasicCharArea,double,double)>($r23, $d6, $d7);

        goto label5;

     label7:
        $r13 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.util.Collection getLeafsvalues()>();

        r44 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label8:
        $z2 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r14 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (net.sourceforge.plantuml.cucadiagram.IEntity) $r14;

        $r15 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r45);

        r46 = (net.sourceforge.plantuml.posimo.Block) $r15;

        r47 = virtualinvoke r46.<net.sourceforge.plantuml.posimo.Block: java.awt.geom.Point2D getPosition()>();

        $r17 = r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt globalUg>;

        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r47.<java.awt.geom.Point2D: double getX()>();

        $d1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: double getXPixelPerChar()>();

        $d2 = $d0 / $d1;

        $d3 = virtualinvoke r47.<java.awt.geom.Point2D: double getY()>();

        $d4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: double getYPixelPerChar()>();

        $d5 = $d3 / $d4;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d2, $d5);

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        $r19 = (net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt) $r18;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: void printClass(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt)>(r45, $r19);

        goto label8;

     label9:
        return;
    }

    private void printClass(net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt)
    {
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker r0;
        net.sourceforge.plantuml.cucadiagram.IEntity r1;
        int i0, i1, $i2, $i3, i5;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt r2;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r3, $r4, $r7, $r15;
        net.sourceforge.plantuml.cucadiagram.Display $r5;
        java.util.List $r6, $r9, r14;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Bodier $r8;
        java.util.Iterator r10;
        java.lang.Object $r11;
        java.lang.CharSequence r12;
        java.lang.String $r13;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt;

        i0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: int getWidth(net.sourceforge.plantuml.cucadiagram.IEntity)>(r1);

        i1 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: int getHeight(net.sourceforge.plantuml.cucadiagram.IEntity)>(r1);

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        interfaceinvoke $r3.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawBoxSimple(int,int,int,int)>(0, 0, i0, i1);

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        interfaceinvoke $r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRSimple(java.util.Collection,int,int)>($r6, 1, 1);

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: boolean showMember(net.sourceforge.plantuml.cucadiagram.IEntity)>(r1);

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $i2 = i0 - 1;

        interfaceinvoke $r7.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawHLine(char,int,int,int)>(45, 2, 1, $i2);

        i5 = 2 + 1;

        $r8 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Bodier getBodier()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.cucadiagram.Bodier: java.util.List getRawBody()>();

        r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.CharSequence) $r11;

        $r13 = interfaceinvoke r12.<java.lang.CharSequence: java.lang.String toString()>();

        r14 = staticinvoke <net.sourceforge.plantuml.BackSlash: java.util.List getWithNewlines(java.lang.CharSequence)>($r13);

        $r15 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        interfaceinvoke $r15.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRSimple(java.util.Collection,int,int)>(r14, 1, i5);

        $i3 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getHeight(java.util.List)>(r14);

        i5 = i5 + $i3;

        goto label1;

     label2:
        return;
    }

    public java.util.List createFiles(net.sourceforge.plantuml.security.SFile) throws java.io.IOException
    {
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker r0;
        net.sourceforge.plantuml.FileFormat $r1, $r2;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r3, $r8;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r4, $r9;
        net.sourceforge.plantuml.security.SFile r5;
        java.io.PrintStream $r6, $r11;
        java.util.List $r7;
        java.nio.charset.Charset $r10;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker;

        r5 := @parameter0: net.sourceforge.plantuml.security.SFile;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r1 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r2 != $r1 goto label1;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt globalUg>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $r10 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r11 = virtualinvoke r5.<net.sourceforge.plantuml.security.SFile: java.io.PrintStream createPrintStream(java.nio.charset.Charset)>($r10);

        interfaceinvoke $r9.<net.sourceforge.plantuml.asciiart.UmlCharArea: void print(java.io.PrintStream)>($r11);

        goto label2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt globalUg>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.security.SFile: java.io.PrintStream createPrintStream()>();

        interfaceinvoke $r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void print(java.io.PrintStream)>($r6);

     label2:
        $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r5);

        return $r7;
    }

    private int getHeight(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.IEntity r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r9;
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker r2;
        boolean $z0, $z1;
        int $i0, $i1, i2;
        net.sourceforge.plantuml.cucadiagram.Bodier $r3;
        java.util.List $r4;
        java.util.Iterator r5;
        java.lang.Object $r6;
        java.lang.CharSequence r7;
        java.lang.String $r8;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r1 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        i2 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getHeight(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        $z0 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: boolean showMember(net.sourceforge.plantuml.cucadiagram.IEntity)>(r0);

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Bodier getBodier()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.cucadiagram.Bodier: java.util.List getRawBody()>();

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.CharSequence) $r6;

        $r8 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r8);

        $i1 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getHeight(net.sourceforge.plantuml.cucadiagram.Display)>($r9);

        i2 = i2 + $i1;

        goto label1;

     label2:
        $i0 = i2 + 3;

        return $i0;
    }

    private int getWidth(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.IEntity r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r9;
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker r2;
        boolean $z0, $z1;
        int $i0, i1, i2;
        net.sourceforge.plantuml.cucadiagram.Bodier $r3;
        java.util.List $r4;
        java.util.Iterator r5;
        java.lang.Object $r6;
        java.lang.CharSequence r7;
        java.lang.String $r8;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r1 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        i2 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getWcWidth(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        $z0 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: boolean showMember(net.sourceforge.plantuml.cucadiagram.IEntity)>(r0);

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Bodier getBodier()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.cucadiagram.Bodier: java.util.List getRawBody()>();

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.CharSequence) $r6;

        $r8 = interfaceinvoke r7.<java.lang.CharSequence: java.lang.String toString()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r8);

        i1 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getWcWidth(net.sourceforge.plantuml.cucadiagram.Display)>($r9);

        if i1 <= i2 goto label2;

        i2 = i1;

     label2:
        goto label1;

     label3:
        $i0 = i2 + 2;

        return $i0;
    }

    public void createFiles(java.io.OutputStream, int)
    {
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker r0;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r1;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r2;
        java.io.OutputStream r3;
        java.io.PrintStream $r4;
        int i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker;

        r3 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramTxtMaker: net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt globalUg>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.security.SecurityUtils: java.io.PrintStream createPrintStream(java.io.OutputStream)>(r3);

        interfaceinvoke $r2.<net.sourceforge.plantuml.asciiart.UmlCharArea: void print(java.io.PrintStream)>($r4);

        return;
    }
}
