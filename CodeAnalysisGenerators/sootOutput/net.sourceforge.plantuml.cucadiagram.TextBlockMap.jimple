public class net.sourceforge.plantuml.cucadiagram.TextBlockMap extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.svek.WithPorts
{
    private final net.sourceforge.plantuml.FontParam fontParam;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final java.util.Map blocksMap;
    private final java.util.List keys;
    private double totalWidth;

    public void <init>(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.FontParam, net.sourceforge.plantuml.ISkinParam, java.util.Map)
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r0;
        java.util.LinkedHashMap $r1;
        java.util.ArrayList $r2;
        net.sourceforge.plantuml.FontParam r3;
        net.sourceforge.plantuml.ISkinParam r4;
        net.sourceforge.plantuml.graphic.FontConfiguration r5;
        java.util.Map r6, $r18;
        java.util.Set $r7;
        java.util.Iterator r8;
        boolean $z0;
        java.lang.Object $r9, $r11, $r14;
        java.util.Map$Entry r10;
        java.lang.String r12, r15;
        java.util.List $r13;
        net.sourceforge.plantuml.graphic.TextBlock r16, r17;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter1: net.sourceforge.plantuml.FontParam;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r6 := @parameter3: java.util.Map;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.Map blocksMap> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.List keys> = $r2;

        r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.FontParam fontParam> = r3;

        r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.ISkinParam skinParam> = r4;

        r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r5;

        $r7 = interfaceinvoke r6.<java.util.Map: java.util.Set entrySet()>();

        r8 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getKey()>();

        r12 = (java.lang.String) $r11;

        $r13 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.List keys>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r12);

        $r14 = interfaceinvoke r10.<java.util.Map$Entry: java.lang.Object getValue()>();

        r15 = (java.lang.String) $r14;

        r16 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String)>(r12);

        r17 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String)>(r15);

        $r18 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.Map blocksMap>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r17);

        goto label1;

     label2:
        return;
    }

    public net.sourceforge.plantuml.svek.Ports getPorts(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.Ports $r0;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r2;
        java.util.Map $r3;
        java.util.Set $r4;
        java.util.Iterator r5;
        boolean $z0;
        java.lang.Object $r6, $r8, $r10, $r14;
        java.util.Map$Entry r7;
        net.sourceforge.plantuml.graphic.TextBlock r9, r11;
        net.sourceforge.plantuml.graphic.StringBounder r12;
        double d0, d1;
        java.util.List $r13;
        java.lang.String $r15;
        int i0;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r12 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.svek.Ports;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.Ports: void <init>()>();

        i0 = 0;

        d1 = 0.0;

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.Map blocksMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (net.sourceforge.plantuml.graphic.TextBlock) $r8;

        $r10 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r11 = (net.sourceforge.plantuml.graphic.TextBlock) $r10;

        d0 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getHeightOfRow(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r12, r9, r11);

        $r13 = r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.List keys>;

        $r14 = interfaceinvoke $r13.<java.util.List: java.lang.Object get(int)>(i0);

        $r15 = (java.lang.String) $r14;

        virtualinvoke $r0.<net.sourceforge.plantuml.svek.Ports: void add(java.lang.String,int,double,double)>($r15, 100, d1, d0);

        d1 = d1 + d0;

        i0 = i0 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double $d0, $d1, $d2, $d3;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = specialinvoke r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getWidthColA(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d1 = specialinvoke r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getWidthColB(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d2 = $d0 + $d1;

        $d3 = specialinvoke r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getTotalHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d2, $d3);

        return $r0;
    }

    private double getWidthColA(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        java.util.Map $r2;
        java.util.Set $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.Map blocksMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getMaxWidth(net.sourceforge.plantuml.graphic.StringBounder,java.util.Collection)>(r1, $r3);

        return $d0;
    }

    private double getWidthColB(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.Map blocksMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getMaxWidth(net.sourceforge.plantuml.graphic.StringBounder,java.util.Collection)>(r1, $r3);

        return $d0;
    }

    private double getMaxWidth(net.sourceforge.plantuml.graphic.StringBounder, java.util.Collection)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5;
        double $d0, d1;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r6;

        r6 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r0 := @parameter1: java.util.Collection;

        d1 = 0.0;

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.graphic.TextBlock) $r2;

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, r14, $r18, $r20, $r22, $r26;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r16, $r24;
        double $d0, $d1, d2, d3, d5, $d6, $d7, $d8, $d9, d10, d11, d12;
        java.util.Map $r4;
        java.util.Set $r5;
        java.util.Iterator r6;
        boolean $z0, $z1;
        java.lang.Object $r7, $r9, $r11;
        java.util.Map$Entry r8;
        net.sourceforge.plantuml.graphic.TextBlock r10, r12;
        net.sourceforge.plantuml.ugraphic.UTranslate $r13, $r17, $r19, $r21, $r25;
        net.sourceforge.plantuml.ugraphic.ULine $r15, $r23;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double totalWidth>;

        d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        d3 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getWidthColA(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getWidthColB(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d10 = 0.0;

        $r4 = r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.Map blocksMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r9 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r10 = (net.sourceforge.plantuml.graphic.TextBlock) $r9;

        $r11 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r12 = (net.sourceforge.plantuml.graphic.TextBlock) $r11;

        $r13 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d10);

        r14 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        $r15 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(d2);

        interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r15);

        d5 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getHeightOfRow(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r1, r10, r12);

        $z1 = r12 instanceof net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point;

        if $z1 == 0 goto label2;

        $r24 = interfaceinvoke r10.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d8 = virtualinvoke $r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d9 = d2 - $d8;

        d11 = $d9 / 2.0;

        $r25 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d11);

        $r26 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r25);

        interfaceinvoke r10.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r26);

        goto label3;

     label2:
        $r16 = interfaceinvoke r10.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d6 = virtualinvoke $r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d7 = d3 - $d6;

        d12 = $d7 / 2.0;

        $r17 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d12);

        $r18 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        interfaceinvoke r10.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r18);

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d3);

        $r20 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke r12.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r20);

        $r21 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d3);

        $r22 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        $r23 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(d5);

        interfaceinvoke $r22.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r23);

     label3:
        d10 = d10 + d5;

        goto label1;

     label4:
        return;
    }

    private double getTotalHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r4, $r6, $r8;
        java.util.Map$Entry r5;
        net.sourceforge.plantuml.graphic.TextBlock r7, r9;
        net.sourceforge.plantuml.graphic.StringBounder r10;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r10 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: java.util.Map blocksMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        r7 = (net.sourceforge.plantuml.graphic.TextBlock) $r6;

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (net.sourceforge.plantuml.graphic.TextBlock) $r8;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double getHeightOfRow(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock)>(r10, r7, r9);

        d1 = d1 + $d0;

        goto label1;

     label2:
        return d1;
    }

    private double getHeightOfRow(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0, r3;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2, $r4;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r5;

        r5 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r0 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        $r2 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r4 = interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        return $d2;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3, $r7;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point $r6;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8;
        net.sourceforge.plantuml.graphic.TextBlock r9, r10;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("\u0000");

        if $z0 == 0 goto label1;

        $r6 = new net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point;

        $r7 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor)>($r8);

        return $r6;

     label1:
        r1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r0);

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r4 = r2.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.ISkinParam skinParam>;

        r9 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r3, $r5, $r4);

        r10 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r9, 5.0, 2.0);

        return r10;
    }

    private net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1, $r2, $r3;
        net.sourceforge.plantuml.FontParam $r4;
        net.sourceforge.plantuml.ISkinParam $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        if $r1 != null goto label1;

        $r3 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.FontParam fontParam>;

        specialinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r5, $r4, null);

        return $r3;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        return $r2;
    }

    public void setTotalWidth(double)
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        d0 := @parameter0: double;

        r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: double totalWidth> = d0;

        return;
    }
}
