public final enum class net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation LARGER;
    public static final enum net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation SMALLER;
    private static final net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation[] $VALUES;
    static final boolean $assertionsDisabled;

    public static net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation[] values()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/sequencediagram/graphic/LifeSegmentVariation;", r0);

        $r2 = (net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public int apply(int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation r0, $r1, $r2;
        boolean $z0;
        int i0, $i1, $i2;
        java.lang.AssertionError $r3;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation;

        i0 := @parameter0: int;

        $r1 = <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation LARGER>;

        if r0 != $r1 goto label1;

        $i2 = i0 + 1;

        return $i2;

     label1:
        $z0 = <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r2 = <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation SMALLER>;

        if r0 == $r2 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        if i0 != 0 goto label3;

        return 0;

     label3:
        $i1 = i0 - 1;

        return $i1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation $r1, $r2, $r4, $r5;
        net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation[] $r3;

        $r0 = class "Lnet/sourceforge/plantuml/sequencediagram/graphic/LifeSegmentVariation;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: boolean $assertionsDisabled> = $z1;

        $r1 = new net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation;

        specialinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: void <init>(java.lang.String,int)>("LARGER", 0);

        <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation LARGER> = $r1;

        $r2 = new net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation;

        specialinvoke $r2.<net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: void <init>(java.lang.String,int)>("SMALLER", 1);

        <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation SMALLER> = $r2;

        $r3 = newarray (net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation)[2];

        $r4 = <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation LARGER>;

        $r3[0] = $r4;

        $r5 = <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation SMALLER>;

        $r3[1] = $r5;

        <net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation: net.sourceforge.plantuml.sequencediagram.graphic.LifeSegmentVariation[] $VALUES> = $r3;

        return;
    }
}
