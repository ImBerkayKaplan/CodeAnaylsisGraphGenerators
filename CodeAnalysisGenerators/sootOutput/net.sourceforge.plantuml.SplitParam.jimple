public class net.sourceforge.plantuml.SplitParam extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor externalColor;
    private final int externalMargin;

    public void <init>()
    {
        net.sourceforge.plantuml.SplitParam r0;

        r0 := @this: net.sourceforge.plantuml.SplitParam;

        specialinvoke r0.<net.sourceforge.plantuml.SplitParam: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,int)>(null, null, 0);

        return;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, int)
    {
        net.sourceforge.plantuml.SplitParam r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, r2;
        int i0;

        r0 := @this: net.sourceforge.plantuml.SplitParam;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 == null goto label1;

        if i0 != 0 goto label1;

        i0 = 1;

     label1:
        r0.<net.sourceforge.plantuml.SplitParam: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = r1;

        r0.<net.sourceforge.plantuml.SplitParam: net.sourceforge.plantuml.ugraphic.color.HColor externalColor> = r2;

        r0.<net.sourceforge.plantuml.SplitParam: int externalMargin> = i0;

        return;
    }

    public boolean isSet()
    {
        net.sourceforge.plantuml.SplitParam r0;
        int $i0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.SplitParam;

        $i0 = r0.<net.sourceforge.plantuml.SplitParam: int externalMargin>;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getExternalMargin()
    {
        net.sourceforge.plantuml.SplitParam r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.SplitParam;

        $i0 = r0.<net.sourceforge.plantuml.SplitParam: int externalMargin>;

        return $i0;
    }

    public java.awt.Color getBorderColor()
    {
        net.sourceforge.plantuml.SplitParam r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r3;
        java.awt.Color $r4;

        r0 := @this: net.sourceforge.plantuml.SplitParam;

        $r1 = r0.<net.sourceforge.plantuml.SplitParam: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.SplitParam: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r3 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: java.awt.Color getColor999()>();

        return $r4;
    }

    public java.awt.Color getExternalColor()
    {
        net.sourceforge.plantuml.SplitParam r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r3;
        java.awt.Color $r4;

        r0 := @this: net.sourceforge.plantuml.SplitParam;

        $r1 = r0.<net.sourceforge.plantuml.SplitParam: net.sourceforge.plantuml.ugraphic.color.HColor externalColor>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.SplitParam: net.sourceforge.plantuml.ugraphic.color.HColor externalColor>;

        $r3 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: java.awt.Color getColor999()>();

        return $r4;
    }
}
