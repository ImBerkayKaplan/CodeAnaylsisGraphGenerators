public class net.sourceforge.plantuml.preproc.UncommentReadLine extends java.lang.Object implements net.sourceforge.plantuml.preproc.ReadLine
{
    private static final net.sourceforge.plantuml.command.regex.Pattern2 unpause;
    private final net.sourceforge.plantuml.preproc.ReadLine raw;
    private java.lang.String headerToRemove;
    private boolean paused;

    public void <init>(net.sourceforge.plantuml.preproc.ReadLine)
    {
        net.sourceforge.plantuml.preproc.UncommentReadLine r0;
        net.sourceforge.plantuml.preproc.ReadLine r1;

        r0 := @this: net.sourceforge.plantuml.preproc.UncommentReadLine;

        r1 := @parameter0: net.sourceforge.plantuml.preproc.ReadLine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: net.sourceforge.plantuml.preproc.ReadLine raw> = r1;

        return;
    }

    public net.sourceforge.plantuml.StringLocated readLine() throws java.io.IOException
    {
        net.sourceforge.plantuml.preproc.UncommentReadLine r0;
        net.sourceforge.plantuml.preproc.ReadLine $r1;
        net.sourceforge.plantuml.StringLocated r2, $r10, $r13;
        java.lang.String $r3, r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r16, $r18, $r19;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        net.sourceforge.plantuml.LineLocation $r14;
        net.sourceforge.plantuml.command.regex.Pattern2 $r15;
        net.sourceforge.plantuml.command.regex.Matcher2 r17;

        r0 := @this: net.sourceforge.plantuml.preproc.UncommentReadLine;

        $r1 = r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: net.sourceforge.plantuml.preproc.ReadLine raw>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.preproc.ReadLine: net.sourceforge.plantuml.StringLocated readLine()>();

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r4 = staticinvoke <net.sourceforge.plantuml.utils.StartUtils: java.lang.String beforeStartUml(java.lang.String)>($r3);

        if r4 == null goto label2;

        r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: java.lang.String headerToRemove> = r4;

     label2:
        $z0 = r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: boolean paused>;

        if $z0 == 0 goto label3;

        $r15 = <net.sourceforge.plantuml.preproc.UncommentReadLine: net.sourceforge.plantuml.command.regex.Pattern2 unpause>;

        $r16 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r17 = virtualinvoke $r15.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>($r16);

        $z3 = virtualinvoke r17.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z3 == 0 goto label3;

        $r18 = virtualinvoke r17.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: java.lang.String headerToRemove> = $r18;

     label3:
        $r19 = r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: java.lang.String headerToRemove>;

        if $r19 == null goto label4;

        $r11 = r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: java.lang.String headerToRemove>;

        $r12 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>($r12);

        if $z2 == 0 goto label4;

        $r13 = new net.sourceforge.plantuml.StringLocated;

        $r14 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation getLocation()>();

        specialinvoke $r13.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation)>("", $r14);

        return $r13;

     label4:
        $r5 = r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: java.lang.String headerToRemove>;

        if $r5 == null goto label5;

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r7 = r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: java.lang.String headerToRemove>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>($r7);

        if $z1 == 0 goto label5;

        $r8 = r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: java.lang.String headerToRemove>;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated substring(int,int)>($i0, $i1);

        return $r10;

     label5:
        return r2;
    }

    public void close() throws java.io.IOException
    {
        net.sourceforge.plantuml.preproc.UncommentReadLine r0;
        net.sourceforge.plantuml.preproc.ReadLine $r1;

        r0 := @this: net.sourceforge.plantuml.preproc.UncommentReadLine;

        $r1 = r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: net.sourceforge.plantuml.preproc.ReadLine raw>;

        interfaceinvoke $r1.<net.sourceforge.plantuml.preproc.ReadLine: void close()>();

        return;
    }

    public void setPaused(boolean)
    {
        net.sourceforge.plantuml.preproc.UncommentReadLine r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.preproc.UncommentReadLine;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.preproc.UncommentReadLine: boolean paused> = z0;

        return;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.command.regex.Pattern2 $r0;

        $r0 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("((?:\\W|\\<[^<>]*\\>)*)[@\\\\]unpause");

        <net.sourceforge.plantuml.preproc.UncommentReadLine: net.sourceforge.plantuml.command.regex.Pattern2 unpause> = $r0;

        return;
    }
}
