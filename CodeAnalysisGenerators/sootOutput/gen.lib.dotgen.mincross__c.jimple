public class gen.lib.dotgen.mincross__c extends java.lang.Object
{
    public static smetana.core.CFunction ordercmpf;
    public static smetana.core.CFunction nodeposcmpf;
    private static int[][] table;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        gen.lib.dotgen.mincross__c r0;

        r0 := @this: gen.lib.dotgen.mincross__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void dot_mincross(h.ST_Agraph_s, boolean)
    {
        h.ST_Agraph_s r0, $r8;
        h.ST_nlist_t $r1;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        smetana.core.CString $r2, $r3;
        boolean $z0, z1, $z2;
        smetana.core.Z $r5;
        smetana.core.CArrayOfStar $r6;
        java.lang.Object $r7;
        java.lang.Throwable $r9;

        r0 := @parameter0: h.ST_Agraph_s;

        z1 := @parameter1: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("e876vp4hgkzshluz6qk77cjwk", "dot_mincross");

     label01:
        staticinvoke <gen.lib.dotgen.mincross__c: void init_mincross(h.ST_Agraph_s)>(r0);

        i5 = 0;

        i6 = 0;

     label02:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $i0 = $r1.<h.ST_nlist_t: int size>;

        if i5 >= $i0 goto label03;

        staticinvoke <gen.lib.dotgen.mincross__c: void init_mccomp(h.ST_Agraph_s,int)>(r0, i5);

        $i4 = staticinvoke <gen.lib.dotgen.mincross__c: int mincross_(h.ST_Agraph_s,int,int,boolean)>(r0, 0, 2, z1);

        i6 = i6 + $i4;

        i5 = i5 + 1;

        goto label02;

     label03:
        staticinvoke <gen.lib.dotgen.mincross__c: void merge2(h.ST_Agraph_s)>(r0);

        i7 = 1;

     label04:
        $i1 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i7 > $i1 goto label05;

        $r6 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i7);

        $r8 = (h.ST_Agraph_s) $r7;

        $i3 = staticinvoke <gen.lib.dotgen.mincross__c: int mincross_clust(h.ST_Agraph_s,h.ST_Agraph_s,boolean)>(r0, $r8, z1);

        i6 = i6 + $i3;

        i7 = i7 + 1;

        goto label04;

     label05:
        $i2 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if $i2 <= 0 goto label07;

        $r2 = new smetana.core.CString;

        specialinvoke $r2.<smetana.core.CString: void <init>(java.lang.String)>("remincross");

        $r3 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r0, $r2);

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r3);

        if $z0 != 0 goto label06;

        $z2 = staticinvoke <gen.lib.common.utils__c: boolean mapbool(smetana.core.CString)>($r3);

        if $z2 == 0 goto label07;

     label06:
        staticinvoke <gen.lib.dotgen.cluster__c: void mark_lowclusters(h.ST_Agraph_s)>(r0);

        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5.<smetana.core.Z: boolean ReMincross> = 1;

        i6 = staticinvoke <gen.lib.dotgen.mincross__c: int mincross_(h.ST_Agraph_s,int,int,boolean)>(r0, 2, 2, z1);

     label07:
        staticinvoke <gen.lib.dotgen.mincross__c: void cleanup2(h.ST_Agraph_s,int)>(r0, i6);

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("e876vp4hgkzshluz6qk77cjwk", "dot_mincross");

        goto label11;

     label09:
        $r9 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("e876vp4hgkzshluz6qk77cjwk", "dot_mincross");

        throw $r9;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static h.ST_adjmatrix_t new_matrix(int, int)
    {
        h.ST_adjmatrix_t $r0;
        int i0, i1;
        int[][] $r2;
        java.lang.Throwable $r4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("756bre1tpxb1tq68p7xhkrxkc", "new_matrix");

     label1:
        $r0 = new h.ST_adjmatrix_t;

        specialinvoke $r0.<h.ST_adjmatrix_t: void <init>()>();

        $r0.<h.ST_adjmatrix_t: int nrows> = i0;

        $r0.<h.ST_adjmatrix_t: int ncols> = i1;

        $r2 = newmultiarray (int)[i0][i1];

        $r0.<h.ST_adjmatrix_t: int[][] data> = $r2;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("756bre1tpxb1tq68p7xhkrxkc", "new_matrix");

        return $r0;

     label3:
        $r4 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("756bre1tpxb1tq68p7xhkrxkc", "new_matrix");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void free_matrix(h.ST_adjmatrix_t)
    {
        h.ST_adjmatrix_t r0;
        int[][] $r1;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_adjmatrix_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1n1e0k0wtlbugwm3cb4na6av6", "free_matrix");

     label1:
        if r0 == null goto label2;

        $r1 = r0.<h.ST_adjmatrix_t: int[][] data>;

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>($r1);

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>(r0);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1n1e0k0wtlbugwm3cb4na6av6", "free_matrix");

        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1n1e0k0wtlbugwm3cb4na6av6", "free_matrix");

        throw $r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void init_mccomp(h.ST_Agraph_s, int)
    {
        h.ST_Agraph_s r0;
        h.ST_nlist_t $r1;
        int i0, $i1, $i2, i3;
        smetana.core.CArrayOfStar $r2, $r11, $r15;
        java.lang.Object $r3, $r6, $r9, $r13, $r17;
        h.ST_Agnode_s $r4;
        smetana.core.CArray $r5, $r8, $r12, $r16;
        h.ST_rank_t $r7, $r10, $r14, $r18;
        java.lang.Throwable $r19;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("49vw7fkn99wbojtfksugvuruh", "init_mccomp");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $r2 = $r1.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i0);

        $r4 = (h.ST_Agnode_s) $r3;

        staticinvoke <smetana.core.Macro: void GD_nlist(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, $r4);

        if i0 <= 0 goto label3;

        i3 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label2:
        $i1 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i3 > $i1 goto label3;

        $r5 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r6 = virtualinvoke $r5.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r7 = (h.ST_rank_t) $r6;

        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r9 = virtualinvoke $r8.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r10 = (h.ST_rank_t) $r9;

        $r11 = $r10.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r14 = (h.ST_rank_t) $r13;

        $i2 = $r14.<h.ST_rank_t: int n>;

        $r15 = virtualinvoke $r11.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>($i2);

        $r7.<h.ST_rank_t: smetana.core.CArrayOfStar v> = $r15;

        $r16 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r17 = virtualinvoke $r16.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r18 = (h.ST_rank_t) $r17;

        $r18.<h.ST_rank_t: int n> = 0;

        i3 = i3 + 1;

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("49vw7fkn99wbojtfksugvuruh", "init_mccomp");

        goto label5;

     label4:
        $r19 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("49vw7fkn99wbojtfksugvuruh", "init_mccomp");

        throw $r19;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void ordered_edges(h.ST_Agraph_s)
    {
        smetana.core.Z $r0, $r22;
        h.ST_Agsym_s $r1, $r23;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r21;
        java.lang.Throwable $r24;
        h.ST_Agraph_s r26;

        r26 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("hzoz2czb672i0nbjvjhbc3na", "ordered_edges");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_Agsym_s G_ordering>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r1);

        if $z0 == 0 goto label3;

        $r22 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r23 = $r22.<smetana.core.Z: h.ST_Agsym_s N_ordering>;

        $z1 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r23);

        if $z1 == 0 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("hzoz2czb672i0nbjvjhbc3na", "ordered_edges");

        return;

     label3:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("98iqppixxkdndoz210i5ejppy");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("lhhw62wj3on36enoy6ug6u1p");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ctbadiyd3jjtlt2f5t9p94au7");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("259y9uhqwc8w6jhrpm1eaa7hf");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("312ij4z5d42rye9s30l9io097");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("25yw5chxmy54pmo88tre1w2ir");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5ugg9zy8378pijqru97mxmen5");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("div10atae09n36x269sl208r1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6ld19omy1z68vprfzbhrjqr2z");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("50itbchatjp61haxvg3xnhvoo");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("evzjoqkm2xukapjvpccu2f23e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1016hqxaexp4j33vmkzvdpq80");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7ah0zlu96u6g6cquxebenj4z3");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7sqzaehh40dvpm11hlxhef6cw");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("h2b3ao18r091ie7yk9v20pqq");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r21 = new java.lang.UnsupportedOperationException;

        specialinvoke $r21.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r21;

     label4:
        $r24 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("hzoz2czb672i0nbjvjhbc3na", "ordered_edges");

        throw $r24;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label5 with label4;
    }

    public static int mincross_clust(h.ST_Agraph_s, h.ST_Agraph_s, boolean)
    {
        h.ST_Agraph_s r0, $r3, r6;
        boolean z0;
        int $i0, $i2, i3, i4;
        smetana.core.CArrayOfStar $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r4;

        r6 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agraph_s;

        z0 := @parameter2: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("crwc5qe7fmrpgcqh1a80toyvo", "mincross_clust");

     label1:
        staticinvoke <gen.lib.dotgen.cluster__c: void expand_cluster(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.mincross__c: void ordered_edges(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.mincross__c: void flat_breakcycles(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.mincross__c: void flat_reorder(h.ST_Agraph_s)>(r0);

        i3 = staticinvoke <gen.lib.dotgen.mincross__c: int mincross_(h.ST_Agraph_s,int,int,boolean)>(r0, 2, 2, z0);

        i4 = 1;

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i4 > $i0 goto label3;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        $r3 = (h.ST_Agraph_s) $r2;

        $i2 = staticinvoke <gen.lib.dotgen.mincross__c: int mincross_clust(h.ST_Agraph_s,h.ST_Agraph_s,boolean)>(r0, $r3, z0);

        i3 = i3 + $i2;

        i4 = i4 + 1;

        goto label2;

     label3:
        staticinvoke <gen.lib.dotgen.mincross__c: void save_vlist(h.ST_Agraph_s)>(r0);

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("crwc5qe7fmrpgcqh1a80toyvo", "mincross_clust");

        return i3;

     label5:
        $r4 := @caughtexception;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("crwc5qe7fmrpgcqh1a80toyvo", "mincross_clust");

        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean left2right(h.ST_Agraph_s, h.ST_Agnode_s, h.ST_Agnode_s)
    {
        smetana.core.Z $r0;
        boolean $z0, $z1, $z2, $z3, z8, z9, $z10;
        h.ST_Agraph_s $r1, $r2, r3, $r7, $r8, $r9, $r10;
        h.ST_adjmatrix_t r4;
        int[][] $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        int[] $r6;
        java.lang.Throwable $r11;
        h.ST_Agnode_s r13, r14, r18;
        smetana.core.CArray $r15;
        java.lang.Object $r16;
        h.ST_rank_t $r17;

        r3 := @parameter0: h.ST_Agraph_s;

        r13 := @parameter1: h.ST_Agnode_s;

        r14 := @parameter2: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("657v773m21j5w3g3v94o7464t", "left2right");

     label01:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $z0 = $r0.<smetana.core.Z: boolean ReMincross>;

        if $z0 != 0 goto label06;

        $r7 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r13);

        $r8 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r14);

        $z3 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z3 == 0 goto label08;

        $r9 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r13);

        if $r9 == null goto label08;

        $r10 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r14);

        if $r10 == null goto label08;

        $i3 = staticinvoke <smetana.core.Macro: int ND_ranktype(h.ST_Agnode_s)>(r13);

        if $i3 != 7 goto label03;

        $i6 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r13);

        if $i6 != 1 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("657v773m21j5w3g3v94o7464t", "left2right");

        return 0;

     label03:
        $i4 = staticinvoke <smetana.core.Macro: int ND_ranktype(h.ST_Agnode_s)>(r14);

        if $i4 != 7 goto label05;

        $i5 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r14);

        if $i5 != 1 goto label05;

     label04:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("657v773m21j5w3g3v94o7464t", "left2right");

        return 0;

     label05:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("657v773m21j5w3g3v94o7464t", "left2right");

        return 1;

     label06:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r13);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r14);

        $z1 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r1, $r2);

        if $z1 == 0 goto label08;

        z8 = staticinvoke <smetana.core.Macro: boolean NOT(int)>(0);

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("657v773m21j5w3g3v94o7464t", "left2right");

        return z8;

     label08:
        $r15 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r3);

        $i7 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r13);

        $r16 = virtualinvoke $r15.<smetana.core.CArray: java.lang.Object get__(int)>($i7);

        $r17 = (h.ST_rank_t) $r16;

        r4 = $r17.<h.ST_rank_t: h.ST_adjmatrix_t flat>;

        if r4 != null goto label09;

        z9 = 0;

        goto label13;

     label09:
        $z2 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r3);

        if $z2 == 0 goto label10;

        r18 = r13;

        r13 = r14;

        r14 = r18;

     label10:
        $r5 = r4.<h.ST_adjmatrix_t: int[][] data>;

        $i0 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>(r13);

        $r6 = $r5[$i0];

        $i1 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>(r14);

        $i2 = $r6[$i1];

        if $i2 == 0 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        z9 = $z10;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("657v773m21j5w3g3v94o7464t", "left2right");

        return z9;

     label14:
        $r11 := @caughtexception;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("657v773m21j5w3g3v94o7464t", "left2right");

        throw $r11;

        catch java.lang.Throwable from label01 to label02 with label14;
        catch java.lang.Throwable from label03 to label04 with label14;
        catch java.lang.Throwable from label05 to label05 with label14;
        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public static int in_cross(h.ST_Agnode_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, $r8, r9, $r15;
        h.ST_elist $r1, $r10;
        smetana.core.CArrayOfStar r2, r11;
        java.lang.Object $r3, $r4, $r6, $r12, $r13, $r16, $r18, $r22;
        h.ST_Agedge_s $r5, $r7, $r14, $r17, $r19, $r23;
        int i0, i1, $i2, i3, $i4, $i5, i7, i8, i9;
        h.ST_port $r20, $r24;
        h.ST_pointf $r21, $r25;
        double $d0, $d1;
        byte $b6;
        java.lang.Throwable $r26;

        r9 := @parameter0: h.ST_Agnode_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("daknncpjy7g5peiicolbmh55i", "in_cross");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r0);

        r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        i7 = 0;

        i8 = 0;

     label2:
        $r3 = virtualinvoke r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        if $r3 == null goto label7;

        $r4 = virtualinvoke r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r5 = (h.ST_Agedge_s) $r4;

        i0 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>($r5);

        $r6 = virtualinvoke r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r7 = (h.ST_Agedge_s) $r6;

        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r7);

        i1 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r8);

        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r9);

        r11 = $r10.<h.ST_elist: smetana.core.CArrayOfStar list>;

        i9 = 0;

     label3:
        $r12 = virtualinvoke r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        if $r12 == null goto label6;

        $r13 = virtualinvoke r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r14 = (h.ST_Agedge_s) $r13;

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r14);

        $i2 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r15);

        i3 = $i2 - i1;

        if i3 > 0 goto label4;

        if i3 != 0 goto label5;

        $r18 = virtualinvoke r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r19 = (h.ST_Agedge_s) $r18;

        $r20 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>($r19);

        $r21 = $r20.<h.ST_port: h.ST_pointf p>;

        $d0 = $r21.<h.ST_pointf: double x>;

        $r22 = virtualinvoke r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r23 = (h.ST_Agedge_s) $r22;

        $r24 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>($r23);

        $r25 = $r24.<h.ST_port: h.ST_pointf p>;

        $d1 = $r25.<h.ST_pointf: double x>;

        $b6 = $d0 cmpl $d1;

        if $b6 <= 0 goto label5;

     label4:
        $r16 = virtualinvoke r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r17 = (h.ST_Agedge_s) $r16;

        $i4 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>($r17);

        $i5 = $i4 * i0;

        i7 = i7 + $i5;

     label5:
        i9 = i9 + 1;

        goto label3;

     label6:
        i8 = i8 + 1;

        goto label2;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("daknncpjy7g5peiicolbmh55i", "in_cross");

        return i7;

     label8:
        $r26 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("daknncpjy7g5peiicolbmh55i", "in_cross");

        throw $r26;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static int out_cross(h.ST_Agnode_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, $r8, r9, $r15;
        h.ST_elist $r1, $r10;
        smetana.core.CArrayOfStar r2, r11;
        java.lang.Object $r3, $r4, $r6, $r12, $r13, $r16, $r18, $r22;
        h.ST_Agedge_s $r5, $r17, $r19, $r23;
        int i0, i1, $i2, i3, $i4, $i5, i7, i8, i9;
        smetana.core.__ptr__ $r7, $r14;
        h.ST_port $r20, $r24;
        h.ST_pointf $r21, $r25;
        double $d0, $d1;
        byte $b6;
        java.lang.Throwable $r26;

        r9 := @parameter0: h.ST_Agnode_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("b7mf74np8ewrgzwd5u0o8fqod", "out_cross");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        r2 = $r1.<h.ST_elist: smetana.core.CArrayOfStar list>;

        i7 = 0;

        i8 = 0;

     label2:
        $r3 = virtualinvoke r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        if $r3 == null goto label7;

        $r4 = virtualinvoke r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r5 = (h.ST_Agedge_s) $r4;

        i0 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>($r5);

        $r6 = virtualinvoke r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r7 = (smetana.core.__ptr__) $r6;

        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r7);

        i1 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r8);

        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r9);

        r11 = $r10.<h.ST_elist: smetana.core.CArrayOfStar list>;

        i9 = 0;

     label3:
        $r12 = virtualinvoke r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        if $r12 == null goto label6;

        $r13 = virtualinvoke r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r14 = (smetana.core.__ptr__) $r13;

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r14);

        $i2 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r15);

        i3 = $i2 - i1;

        if i3 > 0 goto label4;

        if i3 != 0 goto label5;

        $r18 = virtualinvoke r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r19 = (h.ST_Agedge_s) $r18;

        $r20 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>($r19);

        $r21 = $r20.<h.ST_port: h.ST_pointf p>;

        $d0 = $r21.<h.ST_pointf: double x>;

        $r22 = virtualinvoke r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r23 = (h.ST_Agedge_s) $r22;

        $r24 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>($r23);

        $r25 = $r24.<h.ST_port: h.ST_pointf p>;

        $d1 = $r25.<h.ST_pointf: double x>;

        $b6 = $d0 cmpl $d1;

        if $b6 <= 0 goto label5;

     label4:
        $r16 = virtualinvoke r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r17 = (h.ST_Agedge_s) $r16;

        $i4 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>($r17);

        $i5 = $i4 * i0;

        i7 = i7 + $i5;

     label5:
        i9 = i9 + 1;

        goto label3;

     label6:
        i8 = i8 + 1;

        goto label2;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("b7mf74np8ewrgzwd5u0o8fqod", "out_cross");

        return i7;

     label8:
        $r26 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("b7mf74np8ewrgzwd5u0o8fqod", "out_cross");

        throw $r26;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static void exchange(h.ST_Agnode_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, r1;
        int i0, i1, i2;
        smetana.core.Z $r2, $r8;
        h.ST_Agraph_s $r3, $r9;
        smetana.core.CArray $r4, $r10;
        java.lang.Object $r5, $r11;
        h.ST_rank_t $r6, $r12;
        smetana.core.CArrayOfStar $r7, $r13;
        java.lang.Throwable $r14;

        r0 := @parameter0: h.ST_Agnode_s;

        r1 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("ba4tbr57wips1dzpgxzx3b6ja", "exchange");

     label1:
        i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r0);

        i1 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r0);

        i2 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r1);

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r0, i2);

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r3);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r6 = (h.ST_rank_t) $r5;

        $r7 = $r6.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        virtualinvoke $r7.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i2, r0);

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r1, i1);

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r9);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r12 = (h.ST_rank_t) $r11;

        $r13 = $r12.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        virtualinvoke $r13.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i1, r1);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ba4tbr57wips1dzpgxzx3b6ja", "exchange");

        goto label5;

     label3:
        $r14 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ba4tbr57wips1dzpgxzx3b6ja", "exchange");

        throw $r14;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static transient java.lang.Object balance(java.lang.Object[])
    {
        java.lang.UnsupportedOperationException $r30;
        java.lang.Object[] r31;

        r31 := @parameter0: java.lang.Object[];

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4223t6rekw3qd8eksvz9kjcqh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("erg9i1970wdri39osu8hx2a6e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("970giwpms1ljmt0px5djlqs0z");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8xqnhjfdqnlwlyld1ep6hpnmb");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("p6jnh7nvcpnl3zbz636pskbs");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("yy0fwjrmxw3jbi85mvwrka7f");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9ey19t6tw2srzaedeng4sq96z");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2nlemgjbnd1ygry42bcbuwo9y");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("91gzxbmcoy5xbvf8nlhmlj4eh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("5ekdr3i8niy7x2ohi7ftgmjke");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("efwyjm6j3e7byt6z83lrhgd1r");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8ey6umhtefcrb61ncgis82hw6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ddkyq74d5rjfcofczt4hmkxsj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6hyelvzskqfqa07xtgjtvg2is");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cdpfb5fmlhe0831jf96pjp9s0");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3l676z6ajeugxvie4r957jap3");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ennnd5cl9xhh55j2bni58iuxv");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bk4dl2r7nw7j8xvkpg7g7x0z9");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("f0ordylgf44hx2l90eof067yo");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d945airzpo5xbu0fz68ylmgql");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("e6ez0uwca50uwo7i7i4vak4f2");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("884yfwkgyw57w5ivpfrggmq15");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c2sevxb1gtyc2olq8akmvs40u");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("v7vqc9l7ge2bfdwnw11z7rzi");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r30 = new java.lang.UnsupportedOperationException;

        specialinvoke $r30.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r30;
    }

    public static int transpose_step(h.ST_Agraph_s, int, boolean)
    {
        h.ST_Agraph_s r0, $r23, $r31, $r39;
        smetana.core.CArray $r1, $r4, $r7, $r13, $r19, $r24, $r27, $r32, $r35, $r40, $r43;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20, i21;
        java.lang.Object $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r25, $r28, $r33, $r36, $r41, $r44;
        h.ST_rank_t $r3, $r6, $r9, $r15, $r21, $r26, $r29, $r34, $r37, $r42, $r45;
        smetana.core.CArrayOfStar $r10, $r16;
        h.ST_Agnode_s r12, r18;
        boolean $z0, z1;
        smetana.core.Z $r22, $r30, $r38;
        java.lang.Throwable $r46;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bxwzx4m9ejausu58u7abr6fm0", "transpose_step");

     label01:
        i18 = 0;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r3 = (h.ST_rank_t) $r2;

        $r3.<h.ST_rank_t: boolean candidate> = 0;

        i19 = 0;

     label02:
        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r6 = (h.ST_rank_t) $r5;

        $i1 = $r6.<h.ST_rank_t: int n>;

        $i2 = $i1 - 1;

        if i19 >= $i2 goto label09;

        $r7 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r8 = virtualinvoke $r7.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r9 = (h.ST_rank_t) $r8;

        $r10 = $r9.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r11 = virtualinvoke $r10.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i19);

        r12 = (h.ST_Agnode_s) $r11;

        $r13 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r14 = virtualinvoke $r13.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r15 = (h.ST_rank_t) $r14;

        $r16 = $r15.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $i4 = i19 + 1;

        $r17 = virtualinvoke $r16.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i4);

        r18 = (h.ST_Agnode_s) $r17;

        $z0 = staticinvoke <gen.lib.dotgen.mincross__c: boolean left2right(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agnode_s)>(r0, r12, r18);

        if $z0 == 0 goto label03;

        goto label08;

     label03:
        i20 = 0;

        i21 = 0;

        if i0 <= 0 goto label04;

        $i16 = staticinvoke <gen.lib.dotgen.mincross__c: int in_cross(h.ST_Agnode_s,h.ST_Agnode_s)>(r12, r18);

        i21 = 0 + $i16;

        $i17 = staticinvoke <gen.lib.dotgen.mincross__c: int in_cross(h.ST_Agnode_s,h.ST_Agnode_s)>(r18, r12);

        i20 = 0 + $i17;

     label04:
        $r19 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $i5 = i0 + 1;

        $r20 = virtualinvoke $r19.<smetana.core.CArray: java.lang.Object get__(int)>($i5);

        $r21 = (h.ST_rank_t) $r20;

        $i6 = $r21.<h.ST_rank_t: int n>;

        if $i6 <= 0 goto label05;

        $i14 = staticinvoke <gen.lib.dotgen.mincross__c: int out_cross(h.ST_Agnode_s,h.ST_Agnode_s)>(r12, r18);

        i21 = i21 + $i14;

        $i15 = staticinvoke <gen.lib.dotgen.mincross__c: int out_cross(h.ST_Agnode_s,h.ST_Agnode_s)>(r18, r12);

        i20 = i20 + $i15;

     label05:
        if i20 < i21 goto label06;

        if i21 <= 0 goto label08;

        if z1 == 0 goto label08;

        if i20 != i21 goto label08;

     label06:
        staticinvoke <gen.lib.dotgen.mincross__c: void exchange(h.ST_Agnode_s,h.ST_Agnode_s)>(r12, r18);

        $i7 = i21 - i20;

        i18 = i18 + $i7;

        $r22 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r23 = $r22.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r24 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r23);

        $r25 = virtualinvoke $r24.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r26 = (h.ST_rank_t) $r25;

        $r26.<h.ST_rank_t: int valid> = 0;

        $r27 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r28 = virtualinvoke $r27.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r29 = (h.ST_rank_t) $r28;

        $r29.<h.ST_rank_t: boolean candidate> = 1;

        $i8 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        if i0 <= $i8 goto label07;

        $r38 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r39 = $r38.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r40 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r39);

        $i12 = i0 - 1;

        $r41 = virtualinvoke $r40.<smetana.core.CArray: java.lang.Object get__(int)>($i12);

        $r42 = (h.ST_rank_t) $r41;

        $r42.<h.ST_rank_t: int valid> = 0;

        $r43 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $i13 = i0 - 1;

        $r44 = virtualinvoke $r43.<smetana.core.CArray: java.lang.Object get__(int)>($i13);

        $r45 = (h.ST_rank_t) $r44;

        $r45.<h.ST_rank_t: boolean candidate> = 1;

     label07:
        $i9 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i0 >= $i9 goto label08;

        $r30 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r31 = $r30.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r32 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r31);

        $i10 = i0 + 1;

        $r33 = virtualinvoke $r32.<smetana.core.CArray: java.lang.Object get__(int)>($i10);

        $r34 = (h.ST_rank_t) $r33;

        $r34.<h.ST_rank_t: int valid> = 0;

        $r35 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $i11 = i0 + 1;

        $r36 = virtualinvoke $r35.<smetana.core.CArray: java.lang.Object get__(int)>($i11);

        $r37 = (h.ST_rank_t) $r36;

        $r37.<h.ST_rank_t: boolean candidate> = 1;

     label08:
        i19 = i19 + 1;

        goto label02;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bxwzx4m9ejausu58u7abr6fm0", "transpose_step");

        return i18;

     label10:
        $r46 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bxwzx4m9ejausu58u7abr6fm0", "transpose_step");

        throw $r46;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void transpose(h.ST_Agraph_s, boolean)
    {
        h.ST_Agraph_s r0;
        int $i0, $i1, i2, i3, i4, $i5;
        smetana.core.CArray $r1, $r4;
        java.lang.Object $r2, $r5;
        h.ST_rank_t $r3, $r6;
        boolean $z0, z1;
        java.lang.Throwable $r7;

        r0 := @parameter0: h.ST_Agraph_s;

        z1 := @parameter1: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2i22bxgg5y7v5c5d40k5zppky", "transpose");

     label01:
        i2 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label02:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i2 > $i0 goto label03;

        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i2);

        $r6 = (h.ST_rank_t) $r5;

        $r6.<h.ST_rank_t: boolean candidate> = 1;

        i2 = i2 + 1;

        goto label02;

     label03:
        i3 = 0;

        i4 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label04:
        $i5 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i4 > $i5 goto label06;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i4);

        $r3 = (h.ST_rank_t) $r2;

        $z0 = $r3.<h.ST_rank_t: boolean candidate>;

        if $z0 == 0 goto label05;

        $i1 = staticinvoke <gen.lib.dotgen.mincross__c: int transpose_step(h.ST_Agraph_s,int,boolean)>(r0, i4, z1);

        i3 = i3 + $i1;

     label05:
        i4 = i4 + 1;

        goto label04;

     label06:
        if i3 >= 1 goto label03;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2i22bxgg5y7v5c5d40k5zppky", "transpose");

        goto label10;

     label08:
        $r7 := @caughtexception;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2i22bxgg5y7v5c5d40k5zppky", "transpose");

        throw $r7;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static int mincross_(h.ST_Agraph_s, int, int, boolean)
    {
        int i0, i1, $i3, $i4, $i5, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16;
        boolean z0, $z1;
        java.lang.Object[] $r0;
        h.ST_Agraph_s r1, $r7;
        smetana.core.Z $r3, $r4, $r5, $r6;
        double $d0, $d1, $d2, $d3;
        byte $b6;
        java.lang.Throwable $r8;

        r1 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7lrk2rxqnwwdau8cx85oqkpmv", "mincross_");

     label01:
        i10 = 0;

        if i0 <= 1 goto label02;

        $i9 = staticinvoke <gen.lib.dotgen.mincross__c: int ncross(h.ST_Agraph_s)>(r1);

        i11 = $i9;

        i12 = $i9;

        staticinvoke <gen.lib.dotgen.mincross__c: void save_best(h.ST_Agraph_s)>(r1);

        goto label03;

     label02:
        i11 = 2147483647;

        i12 = 2147483647;

     label03:
        i13 = i0;

     label04:
        if i13 > i1 goto label18;

        if i13 > 1 goto label08;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i7 = $r6.<smetana.core.Z: int MaxIter>;

        i10 = staticinvoke <smetana.core.Macro: int MIN(int,int)>(4, $i7);

        $r7 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r1);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r1, $r7);

        if $z1 == 0 goto label05;

        staticinvoke <gen.lib.dotgen.mincross__c: void build_ranks(h.ST_Agraph_s,int)>(r1, i13);

     label05:
        if i13 != 0 goto label06;

        staticinvoke <gen.lib.dotgen.mincross__c: void flat_breakcycles(h.ST_Agraph_s)>(r1);

     label06:
        staticinvoke <gen.lib.dotgen.mincross__c: void flat_reorder(h.ST_Agraph_s)>(r1);

        $i8 = staticinvoke <gen.lib.dotgen.mincross__c: int ncross(h.ST_Agraph_s)>(r1);

        i12 = $i8;

        if $i8 > i11 goto label07;

        staticinvoke <gen.lib.dotgen.mincross__c: void save_best(h.ST_Agraph_s)>(r1);

        i11 = $i8;

     label07:
        goto label10;

     label08:
        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        i10 = $r3.<smetana.core.Z: int MaxIter>;

        if i12 <= i11 goto label09;

        staticinvoke <gen.lib.dotgen.mincross__c: void restore_best(h.ST_Agraph_s)>(r1);

     label09:
        i12 = i11;

     label10:
        i14 = 0;

        i15 = 0;

     label11:
        if i15 >= i10 goto label16;

        $i3 = i14;

        i14 = i14 + 1;

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i4 = $r4.<smetana.core.Z: int MinQuit>;

        if $i3 < $i4 goto label12;

        goto label16;

     label12:
        if i12 != 0 goto label13;

        goto label16;

     label13:
        staticinvoke <gen.lib.dotgen.mincross__c: void mincross_step(h.ST_Agraph_s,int)>(r1, i15);

        $i5 = staticinvoke <gen.lib.dotgen.mincross__c: int ncross(h.ST_Agraph_s)>(r1);

        i12 = $i5;

        if $i5 > i11 goto label15;

        staticinvoke <gen.lib.dotgen.mincross__c: void save_best(h.ST_Agraph_s)>(r1);

        $d0 = (double) $i5;

        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $d2 = $r5.<smetana.core.Z: double Convergence>;

        $d1 = (double) i11;

        $d3 = $d2 * $d1;

        $b6 = $d0 cmpg $d3;

        if $b6 >= 0 goto label14;

        i14 = 0;

     label14:
        i11 = $i5;

     label15:
        i15 = i15 + 1;

        goto label11;

     label16:
        if i12 != 0 goto label17;

        goto label18;

     label17:
        i13 = i13 + 1;

        goto label04;

     label18:
        if i12 <= i11 goto label19;

        staticinvoke <gen.lib.dotgen.mincross__c: void restore_best(h.ST_Agraph_s)>(r1);

     label19:
        if i11 <= 0 goto label20;

        staticinvoke <gen.lib.dotgen.mincross__c: void transpose(h.ST_Agraph_s,boolean)>(r1, 0);

        i11 = staticinvoke <gen.lib.dotgen.mincross__c: int ncross(h.ST_Agraph_s)>(r1);

     label20:
        if z0 == 0 goto label22;

        i16 = 0;

     label21:
        if i16 >= i10 goto label22;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        staticinvoke <gen.lib.dotgen.mincross__c: java.lang.Object balance(java.lang.Object[])>($r0);

        i16 = i16 + 1;

        goto label21;

     label22:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7lrk2rxqnwwdau8cx85oqkpmv", "mincross_");

        return i11;

     label23:
        $r8 := @caughtexception;

     label24:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7lrk2rxqnwwdau8cx85oqkpmv", "mincross_");

        throw $r8;

        catch java.lang.Throwable from label01 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public static void restore_best(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r2;
        int $i0, $i1, $i2, i3;
        smetana.core.Z $r1;
        smetana.core.CArray $r3, $r6, $r10;
        java.lang.Object $r4, $r7, $r11;
        h.ST_rank_t $r5, $r8, $r12;
        smetana.core.CArrayOfStar $r9;
        smetana.core.CFunction $r13;
        h.ST_pointf $r14;
        double $d0;
        java.lang.Throwable $r15;
        h.ST_Agnode_s r17;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("520049zkz9mafaeklgvm6s8e5", "restore_best");

     label1:
        r17 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label2:
        if r17 == null goto label3;

        $r14 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>(r17);

        $d0 = $r14.<h.ST_pointf: double x>;

        $i2 = (int) $d0;

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r17, $i2);

        r17 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r17);

        goto label2;

     label3:
        i3 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label4:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i3 > $i0 goto label5;

        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r3 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r2);

        $r4 = virtualinvoke $r3.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r5 = (h.ST_rank_t) $r4;

        $r5.<h.ST_rank_t: int valid> = 0;

        $r6 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r7 = virtualinvoke $r6.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r8 = (h.ST_rank_t) $r7;

        $r9 = $r8.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r12 = (h.ST_rank_t) $r11;

        $i1 = $r12.<h.ST_rank_t: int n>;

        $r13 = <gen.lib.dotgen.mincross__c: smetana.core.CFunction nodeposcmpf>;

        staticinvoke <smetana.core.JUtils: void qsort1(smetana.core.CArrayOfStar,int,smetana.core.CFunction)>($r9, $i1, $r13);

        i3 = i3 + 1;

        goto label4;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("520049zkz9mafaeklgvm6s8e5", "restore_best");

        goto label7;

     label6:
        $r15 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("520049zkz9mafaeklgvm6s8e5", "restore_best");

        throw $r15;

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    public static void save_best(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        h.ST_pointf $r1;
        int $i0;
        double $d0;
        java.lang.Throwable $r2;
        h.ST_Agnode_s r4;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8uyqc48j0oul206l3np85wj9p", "save_best");

     label1:
        r4 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label2:
        if r4 == null goto label3;

        $r1 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>(r4);

        $i0 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r4);

        $d0 = (double) $i0;

        $r1.<h.ST_pointf: double x> = $d0;

        r4 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r4);

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8uyqc48j0oul206l3np85wj9p", "save_best");

        goto label5;

     label4:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8uyqc48j0oul206l3np85wj9p", "save_best");

        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void merge_components(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        h.ST_nlist_t $r1, $r2, $r3, $r4, $r10;
        int $i0, $i1, $i2, $i3, i4;
        smetana.core.CArrayOfStar $r5, $r11;
        java.lang.Object $r6, $r12;
        h.ST_Agnode_s $r7, r15, r16, $r17;
        smetana.core.Z $r8, $r9;
        java.lang.Throwable $r13;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6d08fwi4dsk6ikk5d0gy6rq2h", "merge_components");

     label01:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $i0 = $r1.<h.ST_nlist_t: int size>;

        if $i0 > 1 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6d08fwi4dsk6ikk5d0gy6rq2h", "merge_components");

        return;

     label03:
        r15 = null;

        i4 = 0;

     label04:
        $r2 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $i1 = $r2.<h.ST_nlist_t: int size>;

        if i4 >= $i1 goto label08;

        $r10 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $r11 = $r10.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r12 = virtualinvoke $r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        r16 = (h.ST_Agnode_s) $r12;

        if r15 == null goto label05;

        staticinvoke <smetana.core.Macro: void ND_next(h.ST_Agnode_s,h.ST_Agnode_s)>(r15, r16);

     label05:
        staticinvoke <smetana.core.Macro: void ND_prev(h.ST_Agnode_s,h.ST_Agnode_s)>(r16, r15);

     label06:
        $r17 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r16);

        if $r17 == null goto label07;

        r16 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r16);

        goto label06;

     label07:
        r15 = r16;

        i4 = i4 + 1;

        goto label04;

     label08:
        $r3 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $r3.<h.ST_nlist_t: int size> = 1;

        $r4 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $r5 = $r4.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r6 = virtualinvoke $r5.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r7 = (h.ST_Agnode_s) $r6;

        staticinvoke <smetana.core.Macro: void GD_nlist(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, $r7);

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i2 = $r8.<smetana.core.Z: int GlobalMinRank>;

        staticinvoke <smetana.core.Macro: void GD_minrank(h.ST_Agraph_s,int)>(r0, $i2);

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i3 = $r9.<smetana.core.Z: int GlobalMaxRank>;

        staticinvoke <smetana.core.Macro: void GD_maxrank(h.ST_Agraph_s,int)>(r0, $i3);

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6d08fwi4dsk6ikk5d0gy6rq2h", "merge_components");

        goto label12;

     label10:
        $r13 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6d08fwi4dsk6ikk5d0gy6rq2h", "merge_components");

        throw $r13;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void merge2(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        int $i0, $i1, $i2, i3, i4;
        smetana.core.CArray $r1, $r4, $r7, $r10, $r14, $r17, $r23;
        java.lang.Object $r2, $r5, $r8, $r11, $r15, $r18, $r21, $r24;
        h.ST_rank_t $r3, $r6, $r9, $r12, $r16, $r19, $r25;
        smetana.core.CArrayOfStar $r13, $r20;
        h.ST_Agnode_s r22;
        java.lang.Throwable $r26;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("91vebcdl3q3y0uyxef0iw71n9", "merge2");

     label1:
        staticinvoke <gen.lib.dotgen.mincross__c: void merge_components(h.ST_Agraph_s)>(r0);

        i3 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i3 > $i0 goto label6;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r3 = (h.ST_rank_t) $r2;

        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r6 = (h.ST_rank_t) $r5;

        $i1 = $r6.<h.ST_rank_t: int an>;

        $r3.<h.ST_rank_t: int n> = $i1;

        $r7 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r8 = virtualinvoke $r7.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r9 = (h.ST_rank_t) $r8;

        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r12 = (h.ST_rank_t) $r11;

        $r13 = $r12.<h.ST_rank_t: smetana.core.CArrayOfStar av>;

        $r9.<h.ST_rank_t: smetana.core.CArrayOfStar v> = $r13;

        i4 = 0;

     label3:
        $r14 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r15 = virtualinvoke $r14.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r16 = (h.ST_rank_t) $r15;

        $i2 = $r16.<h.ST_rank_t: int n>;

        if i4 >= $i2 goto label5;

        $r17 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r18 = virtualinvoke $r17.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r19 = (h.ST_rank_t) $r18;

        $r20 = $r19.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r21 = virtualinvoke $r20.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        r22 = (h.ST_Agnode_s) $r21;

        if r22 != null goto label4;

        $r23 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r24 = virtualinvoke $r23.<smetana.core.CArray: java.lang.Object get__(int)>(i3);

        $r25 = (h.ST_rank_t) $r24;

        $r25.<h.ST_rank_t: int n> = i4;

        goto label5;

     label4:
        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r22, i4);

        i4 = i4 + 1;

        goto label3;

     label5:
        i3 = i3 + 1;

        goto label2;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("91vebcdl3q3y0uyxef0iw71n9", "merge2");

        goto label9;

     label7:
        $r26 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("91vebcdl3q3y0uyxef0iw71n9", "merge2");

        throw $r26;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static void cleanup2(h.ST_Agraph_s, int)
    {
        smetana.core.Z $r0, $r2, $r30, $r32, $r33, $r35;
        int[] $r1, $r34;
        smetana.core.CArrayOfStar $r3, $r15, $r19, $r21, $r27, $r31;
        h.ST_Agraph_s r4, $r29;
        int $i0, $i1, $i2, i3, i4, $i5, i6, i7, i8;
        smetana.core.CArray $r5, $r8, $r12;
        java.lang.Object $r6, $r9, $r13, $r16, $r22, $r28;
        h.ST_rank_t $r7, $r10, $r14;
        h.ST_adjmatrix_t $r11;
        h.ST_Agnode_s r17;
        h.ST_elist $r18, $r20;
        h.ST_Agedge_s $r23;
        h.ST_Agobj_s $r25;
        h.ST_Agrec_s $r26;
        java.lang.Throwable $r36;

        r4 := @parameter0: h.ST_Agraph_s;

        i3 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3cwiyyk1d1jkoo9iqwb5bge4x", "cleanup2");

     label01:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: int[] TI_list>;

        if $r1 == null goto label02;

        $r33 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r34 = $r33.<smetana.core.Z: int[] TI_list>;

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>($r34);

        $r35 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r35.<smetana.core.Z: int[] TI_list> = null;

     label02:
        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r3 = $r2.<smetana.core.Z: smetana.core.CArrayOfStar TE_list>;

        if $r3 == null goto label03;

        $r30 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r31 = $r30.<smetana.core.Z: smetana.core.CArrayOfStar TE_list>;

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>($r31);

        $r32 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r32.<smetana.core.Z: smetana.core.CArrayOfStar TE_list> = null;

     label03:
        i4 = 1;

     label04:
        $i5 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r4);

        if i4 > $i5 goto label05;

        $r27 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r4);

        $r28 = virtualinvoke $r27.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        $r29 = (h.ST_Agraph_s) $r28;

        staticinvoke <gen.lib.dotgen.mincross__c: void rec_reset_vlists(h.ST_Agraph_s)>($r29);

        i4 = i4 + 1;

        goto label04;

     label05:
        i6 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r4);

     label06:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r4);

        if i6 > $i0 goto label12;

        i7 = 0;

     label07:
        $r5 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r4);

        $r6 = virtualinvoke $r5.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r7 = (h.ST_rank_t) $r6;

        $i1 = $r7.<h.ST_rank_t: int n>;

        if i7 >= $i1 goto label11;

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r4);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r14 = (h.ST_rank_t) $r13;

        $r15 = $r14.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r16 = virtualinvoke $r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i7);

        r17 = (h.ST_Agnode_s) $r16;

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r17, i7);

        $r18 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r17);

        $r19 = $r18.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r19 == null goto label10;

        i8 = 0;

     label08:
        $r20 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r17);

        $r21 = $r20.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r22 = virtualinvoke $r21.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r23 = (h.ST_Agedge_s) $r22;

        if $r23 == null goto label10;

        $i2 = staticinvoke <smetana.core.Macro: int ED_edge_type(h.ST_Agedge_s)>($r23);

        if $i2 != 4 goto label09;

        staticinvoke <gen.lib.dotgen.fastgr__c: void delete_flat_edge(h.ST_Agedge_s)>($r23);

        $r25 = $r23.<h.ST_Agedge_s: h.ST_Agobj_s base>;

        $r26 = $r25.<h.ST_Agobj_s: h.ST_Agrec_s data>;

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>($r26);

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>($r23);

        i8 = i8 + -1;

     label09:
        i8 = i8 + 1;

        goto label08;

     label10:
        i7 = i7 + 1;

        goto label07;

     label11:
        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r4);

        $r9 = virtualinvoke $r8.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r10 = (h.ST_rank_t) $r9;

        $r11 = $r10.<h.ST_rank_t: h.ST_adjmatrix_t flat>;

        staticinvoke <gen.lib.dotgen.mincross__c: void free_matrix(h.ST_adjmatrix_t)>($r11);

        i6 = i6 + 1;

        goto label06;

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3cwiyyk1d1jkoo9iqwb5bge4x", "cleanup2");

        goto label15;

     label13:
        $r36 := @caughtexception;

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3cwiyyk1d1jkoo9iqwb5bge4x", "cleanup2");

        throw $r36;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static h.ST_Agnode_s neighbor(h.ST_Agnode_s, int)
    {
        boolean $z0, $z1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        smetana.core.Z $r0, $r10;
        h.ST_Agraph_s $r1, $r11;
        smetana.core.CArray $r2, $r12;
        h.ST_Agnode_s r3, r20;
        java.lang.Object $r4, $r7, $r13, $r16;
        h.ST_rank_t $r5, $r14;
        smetana.core.CArrayOfStar $r6, $r15;
        java.lang.AssertionError $r9, $r17;
        java.lang.Throwable $r18;

        r3 := @parameter0: h.ST_Agnode_s;

        i0 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("arax68kzcf86dr2xu0gp962gq", "neighbor");

     label1:
        r20 = null;

        $z0 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r3 != null goto label2;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>()>();

        throw $r17;

     label2:
        if i0 >= 0 goto label3;

        $i8 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r3);

        if $i8 <= 0 goto label4;

        $r10 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r11 = $r10.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r11);

        $i9 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r3);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>($i9);

        $r14 = (h.ST_rank_t) $r13;

        $r15 = $r14.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $i10 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r3);

        $i11 = $i10 - 1;

        $r16 = virtualinvoke $r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i11);

        r20 = (h.ST_Agnode_s) $r16;

        goto label4;

     label3:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1 = $r0.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r2 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r1);

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r3);

        $r4 = virtualinvoke $r2.<smetana.core.CArray: java.lang.Object get__(int)>($i1);

        $r5 = (h.ST_rank_t) $r4;

        $r6 = $r5.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $i2 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r3);

        $i3 = $i2 + 1;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i3);

        r20 = (h.ST_Agnode_s) $r7;

     label4:
        $z1 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z1 != 0 goto label5;

        if r20 == null goto label5;

        $i4 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r20);

        $i5 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r3);

        $i6 = $i4 - $i5;

        $i7 = $i6 * i0;

        if $i7 > 0 goto label5;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("arax68kzcf86dr2xu0gp962gq", "neighbor");

        return r20;

     label6:
        $r18 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("arax68kzcf86dr2xu0gp962gq", "neighbor");

        throw $r18;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static boolean is_a_normal_node_of(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0;
        int $i0;
        h.ST_Agraph_s r1;
        boolean $z1, $z2;
        java.lang.Throwable $r2;

        r1 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1waqm8z71hi389dt1wqh0bmhr", "is_a_normal_node_of");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r0);

        if $i0 != 0 goto label2;

        $z1 = staticinvoke <gen.lib.cgraph.obj__c: boolean agcontains(h.ST_Agraph_s,h.ST_Agobj_s)>(r1, r0);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1waqm8z71hi389dt1wqh0bmhr", "is_a_normal_node_of");

        return $z2;

     label4:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1waqm8z71hi389dt1wqh0bmhr", "is_a_normal_node_of");

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static boolean is_a_vnode_of_an_edge_of(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0;
        int $i0, $i1, $i2, $i3;
        h.ST_elist $r1, $r2, $r3;
        smetana.core.CArrayOfStar $r4;
        java.lang.Object $r5;
        h.ST_Agraph_s r6;
        boolean $z0;
        java.lang.Throwable $r7;
        h.ST_Agedge_s r9;

        r6 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9f8atyi1unmleplge3rijdt4s", "is_a_vnode_of_an_edge_of");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r0);

        if $i0 != 1 goto label5;

        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r0);

        $i1 = $r1.<h.ST_elist: int size>;

        if $i1 != 1 goto label5;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        $i2 = $r2.<h.ST_elist: int size>;

        if $i2 != 1 goto label5;

        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        $r4 = $r3.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r5 = virtualinvoke $r4.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r9 = (h.ST_Agedge_s) $r5;

     label2:
        $i3 = staticinvoke <smetana.core.Macro: int ED_edge_type(h.ST_Agedge_s)>(r9);

        if $i3 == 0 goto label3;

        r9 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_orig(h.ST_Agedge_s)>(r9);

        goto label2;

     label3:
        $z0 = staticinvoke <gen.lib.cgraph.obj__c: boolean agcontains(h.ST_Agraph_s,h.ST_Agobj_s)>(r6, r9);

        if $z0 == 0 goto label5;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9f8atyi1unmleplge3rijdt4s", "is_a_vnode_of_an_edge_of");

        return 1;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9f8atyi1unmleplge3rijdt4s", "is_a_vnode_of_an_edge_of");

        return 0;

     label6:
        $r7 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9f8atyi1unmleplge3rijdt4s", "is_a_vnode_of_an_edge_of");

        throw $r7;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label5 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static boolean inside_cluster(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agraph_s r0;
        h.ST_Agnode_s r1;
        boolean $z0, $z1, z2;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_Agraph_s;

        r1 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("eo7ulc8vwmoaig0j479yapve2", "inside_cluster");

     label1:
        $z0 = staticinvoke <gen.lib.dotgen.mincross__c: boolean is_a_normal_node_of(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r1);

        $z1 = staticinvoke <gen.lib.dotgen.mincross__c: boolean is_a_vnode_of_an_edge_of(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r1);

        z2 = $z0 | $z1;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("eo7ulc8vwmoaig0j479yapve2", "inside_cluster");

        return z2;

     label3:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("eo7ulc8vwmoaig0j479yapve2", "inside_cluster");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static h.ST_Agnode_s furthestnode(h.ST_Agraph_s, h.ST_Agnode_s, int)
    {
        h.ST_Agnode_s r0, r5, r6, $r7;
        int i0;
        h.ST_Agraph_s r2;
        boolean $z0, $z1;
        java.lang.Throwable $r3;

        r2 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        i0 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8xkmkt4r6gfqj8gk0mokszoz0", "furthestnode");

     label1:
        r5 = r0;

        r6 = r0;

     label2:
        $r7 = staticinvoke <gen.lib.dotgen.mincross__c: h.ST_Agnode_s neighbor(h.ST_Agnode_s,int)>(r5, i0);

        r5 = $r7;

        if $r7 == null goto label4;

        $z0 = staticinvoke <gen.lib.dotgen.mincross__c: boolean is_a_normal_node_of(h.ST_Agraph_s,h.ST_Agnode_s)>(r2, $r7);

        if $z0 == 0 goto label3;

        r6 = $r7;

        goto label2;

     label3:
        $z1 = staticinvoke <gen.lib.dotgen.mincross__c: boolean is_a_vnode_of_an_edge_of(h.ST_Agraph_s,h.ST_Agnode_s)>(r2, $r7);

        if $z1 == 0 goto label2;

        r6 = $r7;

        goto label2;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8xkmkt4r6gfqj8gk0mokszoz0", "furthestnode");

        return r6;

     label5:
        $r3 := @caughtexception;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8xkmkt4r6gfqj8gk0mokszoz0", "furthestnode");

        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void save_vlist(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        smetana.core.CArrayOfStar $r1, $r2, $r6;
        int $i0, i1;
        smetana.core.CArray $r3;
        java.lang.Object $r4, $r7;
        h.ST_rank_t $r5;
        h.ST_Agnode_s $r8;
        java.lang.Throwable $r9;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bwmu2hkwud40601oq5vgo2f1h", "save_vlist");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_rankleader(h.ST_Agraph_s)>(r0);

        if $r1 == null goto label3;

        i1 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i1 > $i0 goto label3;

        $r2 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_rankleader(h.ST_Agraph_s)>(r0);

        $r3 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r4 = virtualinvoke $r3.<smetana.core.CArray: java.lang.Object get__(int)>(i1);

        $r5 = (h.ST_rank_t) $r4;

        $r6 = $r5.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r8 = (h.ST_Agnode_s) $r7;

        virtualinvoke $r2.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i1, $r8);

        i1 = i1 + 1;

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bwmu2hkwud40601oq5vgo2f1h", "save_vlist");

        goto label5;

     label4:
        $r9 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bwmu2hkwud40601oq5vgo2f1h", "save_vlist");

        throw $r9;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void rec_save_vlists(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r3;
        int $i0, i1;
        smetana.core.CArrayOfStar $r1;
        java.lang.Object $r2;
        java.lang.Throwable $r4;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("hwdxg97sefkuyd25x2q4pgzg", "rec_save_vlists");

     label1:
        staticinvoke <gen.lib.dotgen.mincross__c: void save_vlist(h.ST_Agraph_s)>(r0);

        i1 = 1;

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i1 > $i0 goto label3;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i1);

        $r3 = (h.ST_Agraph_s) $r2;

        staticinvoke <gen.lib.dotgen.mincross__c: void rec_save_vlists(h.ST_Agraph_s)>($r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("hwdxg97sefkuyd25x2q4pgzg", "rec_save_vlists");

        goto label5;

     label4:
        $r4 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("hwdxg97sefkuyd25x2q4pgzg", "rec_save_vlists");

        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void rec_reset_vlists(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r11, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8;
        smetana.core.CArrayOfStar $r1, $r2, $r7, $r15, $r16, $r20;
        java.lang.Object $r3, $r9, $r13, $r18, $r21;
        h.ST_Agnode_s r4, r5, r6;
        smetana.core.CArray $r8, $r12, $r17;
        h.ST_rank_t $r10, $r14, $r19;
        java.lang.Throwable $r23;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("f3b4wat4uxn5oil720i5mwq4v", "rec_reset_vlists");

     label1:
        i7 = 1;

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i7 > $i0 goto label3;

        $r20 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r21 = virtualinvoke $r20.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i7);

        $r22 = (h.ST_Agraph_s) $r21;

        staticinvoke <gen.lib.dotgen.mincross__c: void rec_reset_vlists(h.ST_Agraph_s)>($r22);

        i7 = i7 + 1;

        goto label2;

     label3:
        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_rankleader(h.ST_Agraph_s)>(r0);

        if $r1 == null goto label5;

        i8 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label4:
        $i1 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i8 > $i1 goto label5;

        $r2 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_rankleader(h.ST_Agraph_s)>(r0);

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        r4 = (h.ST_Agnode_s) $r3;

        r5 = staticinvoke <gen.lib.dotgen.mincross__c: h.ST_Agnode_s furthestnode(h.ST_Agraph_s,h.ST_Agnode_s,int)>(r0, r4, -1);

        r6 = staticinvoke <gen.lib.dotgen.mincross__c: h.ST_Agnode_s furthestnode(h.ST_Agraph_s,h.ST_Agnode_s,int)>(r0, r4, 1);

        $r7 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_rankleader(h.ST_Agraph_s)>(r0);

        virtualinvoke $r7.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i8, r5);

        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r9 = virtualinvoke $r8.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r10 = (h.ST_rank_t) $r9;

        $r11 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r11);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r14 = (h.ST_rank_t) $r13;

        $r15 = $r14.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $i2 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r5);

        $r16 = virtualinvoke $r15.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>($i2);

        $r10.<h.ST_rank_t: smetana.core.CArrayOfStar v> = $r16;

        $r17 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r18 = virtualinvoke $r17.<smetana.core.CArray: java.lang.Object get__(int)>(i8);

        $r19 = (h.ST_rank_t) $r18;

        $i3 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r6);

        $i4 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r5);

        $i5 = $i3 - $i4;

        $i6 = $i5 + 1;

        $r19.<h.ST_rank_t: int n> = $i6;

        i8 = i8 + 1;

        goto label4;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("f3b4wat4uxn5oil720i5mwq4v", "rec_reset_vlists");

        goto label8;

     label6:
        $r23 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("f3b4wat4uxn5oil720i5mwq4v", "rec_reset_vlists");

        throw $r23;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static h.ST_Agraph_s realFillRanks(h.ST_Agraph_s, int[], int, h.ST_Agraph_s)
    {
        java.lang.UnsupportedOperationException $r36;
        java.lang.Throwable $r37;
        h.ST_Agraph_s r39, r41;
        int[] r40;
        int i0;

        r39 := @parameter0: h.ST_Agraph_s;

        r40 := @parameter1: int[];

        i0 := @parameter2: int;

        r41 := @parameter3: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("pv0rbbdopo4hmkbl5916qys1", "realFillRanks");

     label1:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("2o2sf6xi2aumo5k0vglp4ik2y");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3pmsfb0uhqmy5u141c932dtn1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("erg9i1970wdri39osu8hx2a6e");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("apiu3v3f9zs9yrq8e25nd2rti");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6yramhpyls8c6kexupyqip8oq");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("ci2zh69w6nhi0q816i1ixuy9k");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7z5fb6iyowsosn1hiz7opeoc6");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("wqxqmv4he79njsw6r7sludv");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8htor72y55gsejjdeh0e8gdrs");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bjae04ek2s3o50399zti5a1jh");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bqfhaopbxlwv8h4zfae1lhx6s");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7wq24g054kmx3aw25vk5ksj4");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("do7v5atqor4gnpwgo18ibgjha");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9fo44dng5uojukw2kj0z8vvdu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("emlgvc6yzuboae72y6vxpn8z7");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d3fd9x50ix980jjw3old2jrcr");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7gfo0rr0un3w2026kt6ipknty");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6mjvdb94lywg8d7ui6873f18p");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8g0zxrf8w2zly4wln02j3lbnb");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("eqx93butvb7swnxbz9j29winp");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6t98dcecgbvbvtpycwiq2ynnj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9h7suegjozc071a939rh9apw1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8kclviftszfxkowsmlqq31u8");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8wiry1vcdwy6bzdp98nmxss7c");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dy16sxtk3jj6127wavfcdx4yw");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("6jr3li9af4sp0uxnpnoe8dqh8");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c47fetnb62mx46qzuk9ag3qmu");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("899cyghezv8oxs0iomu58zncj");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("btfqtg58rqwdh7o4cc0gbaaai");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9zap4z819hsiogrgmekh15f00");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("flupwh3kosf3fkhkxllllt1");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("dvgyxsnyeqqnyzq696k3vskib");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1jw141gg4omv8r72xcbl5ln0o");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("c24nfmv9i7o5eoqaymbibp7m7");

        $r36 = new java.lang.UnsupportedOperationException;

        specialinvoke $r36.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r36;

     label2:
        $r37 := @caughtexception;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("pv0rbbdopo4hmkbl5916qys1", "realFillRanks");

        throw $r37;

        catch java.lang.Throwable from label1 to label3 with label2;
    }

    public static void fillRanks(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        int $i0, i1;
        int[] r1;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1qy9bupreg1pax62owznr98k", "fillRanks");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        i1 = $i0 + 2;

        r1 = newarray (int)[i1];

        staticinvoke <gen.lib.dotgen.mincross__c: h.ST_Agraph_s realFillRanks(h.ST_Agraph_s,int[],int,h.ST_Agraph_s)>(r0, r1, i1, null);

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>(r1);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1qy9bupreg1pax62owznr98k", "fillRanks");

        goto label5;

     label3:
        $r3 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1qy9bupreg1pax62owznr98k", "fillRanks");

        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void init_mincross(h.ST_Agraph_s)
    {
        smetana.core.Z $r0, $r1, $r4, $r6, $r8, $r9;
        h.ST_Agraph_s r2, $r3;
        int $i0, i1, $i2, $i3, $i4, $i5;
        smetana.core.CArrayOfStar $r5;
        int[] $r7;
        java.lang.Throwable $r10;

        r2 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7fy4chyk12o7bgp1rv3h27yl3", "init_mincross");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r0.<smetana.core.Z: boolean ReMincross> = 0;

        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1.<smetana.core.Z: h.ST_Agraph_s Root> = r2;

        $r3 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r2);

        $i0 = staticinvoke <gen.lib.cgraph.graph__c: int agnedges(h.ST_Agraph_s)>($r3);

        i1 = $i0 + 1;

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar ALLOC(int,java.lang.Class)>(i1, class "Lh/ST_Agedge_s;");

        $r4.<smetana.core.Z: smetana.core.CArrayOfStar TE_list> = $r5;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r7 = newarray (int)[i1];

        $r6.<smetana.core.Z: int[] TI_list> = $r7;

        staticinvoke <gen.lib.dotgen.mincross__c: void mincross_options(h.ST_Agraph_s)>(r2);

        $i2 = staticinvoke <smetana.core.Macro: int GD_flags(h.ST_Agraph_s)>(r2);

        $i3 = $i2 & 16;

        if $i3 == 0 goto label2;

        staticinvoke <gen.lib.dotgen.mincross__c: void fillRanks(h.ST_Agraph_s)>(r2);

     label2:
        staticinvoke <gen.lib.dotgen.class2__c: void class2(h.ST_Agraph_s)>(r2);

        staticinvoke <gen.lib.dotgen.decomp__c: void decompose(h.ST_Agraph_s,int)>(r2, 1);

        staticinvoke <gen.lib.dotgen.mincross__c: void allocate_ranks(h.ST_Agraph_s)>(r2);

        staticinvoke <gen.lib.dotgen.mincross__c: void ordered_edges(h.ST_Agraph_s)>(r2);

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i4 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r2);

        $r8.<smetana.core.Z: int GlobalMinRank> = $i4;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i5 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r2);

        $r9.<smetana.core.Z: int GlobalMaxRank> = $i5;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7fy4chyk12o7bgp1rv3h27yl3", "init_mincross");

        goto label5;

     label4:
        $r10 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7fy4chyk12o7bgp1rv3h27yl3", "init_mincross");

        throw $r10;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void flat_rev(h.ST_Agraph_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, $r8, $r13, $r14, r19, r22;
        h.ST_Agnode_s $r1, $r4, $r9, $r10, $r15, $r16, $r20;
        h.ST_elist $r2, $r5, $r21;
        smetana.core.CArrayOfStar $r3, $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        int $i0, $i1, i2;
        h.ST_textlabel_t $r11;
        h.ST_Agraph_s r12;
        java.lang.Throwable $r17;

        r12 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6fprrp93vmz0jn3l4ro0iropp", "flat_rev");

     label01:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>($r1);

        $r3 = $r2.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r3);

        if $z0 == 0 goto label02;

        r19 = null;

        goto label05;

     label02:
        i2 = 0;

     label03:
        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>($r4);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r7 = virtualinvoke $r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i2);

        $r8 = (h.ST_Agedge_s) $r7;

        r19 = $r8;

        if $r8 == null goto label05;

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r8);

        $r16 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r15, $r16);

        if $z1 == 0 goto label04;

        goto label05;

     label04:
        i2 = i2 + 1;

        goto label03;

     label05:
        if r19 == null goto label08;

        staticinvoke <gen.lib.dotgen.fastgr__c: void merge_oneway(h.ST_Agedge_s,h.ST_Agedge_s)>(r0, r19);

        $r13 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r0);

        if $r13 != null goto label06;

        staticinvoke <smetana.core.Macro: void ED_to_virt(h.ST_Agedge_s,h.ST_Agedge_s)>(r0, r19);

     label06:
        $i1 = staticinvoke <smetana.core.Macro: int ED_edge_type(h.ST_Agedge_s)>(r19);

        if $i1 != 4 goto label07;

        $r14 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_orig(h.ST_Agedge_s)>(r19);

        if $r14 != null goto label07;

        staticinvoke <smetana.core.Macro: void ED_to_orig(h.ST_Agedge_s,h.ST_Agedge_s)>(r19, r0);

     label07:
        $r20 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r21 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>($r20);

        staticinvoke <smetana.core.Macro: void elist_append(h.ST_Agedge_s,h.ST_elist)>(r0, $r21);

        goto label11;

     label08:
        $r9 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        r22 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s new_virtual_edge(h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>($r9, $r10, r0);

        $i0 = staticinvoke <smetana.core.Macro: int ED_edge_type(h.ST_Agedge_s)>(r0);

        if $i0 != 4 goto label09;

        staticinvoke <smetana.core.Macro: void ED_edge_type(h.ST_Agedge_s,int)>(r22, 4);

        goto label10;

     label09:
        staticinvoke <smetana.core.Macro: void ED_edge_type(h.ST_Agedge_s,int)>(r22, 3);

     label10:
        $r11 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r0);

        staticinvoke <smetana.core.Macro: void ED_label(h.ST_Agedge_s,h.ST_textlabel_t)>(r22, $r11);

        staticinvoke <gen.lib.dotgen.fastgr__c: void flat_edge(h.ST_Agraph_s,h.ST_Agedge_s)>(r12, r22);

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6fprrp93vmz0jn3l4ro0iropp", "flat_rev");

        goto label14;

     label12:
        $r17 := @caughtexception;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6fprrp93vmz0jn3l4ro0iropp", "flat_rev");

        throw $r17;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static void flat_search(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agraph_s r0, $r6;
        smetana.core.CArray $r1;
        h.ST_Agnode_s r2, $r14, $r16, $r18, $r19, $r20, $r21, $r23, $r26, $r28, $r29, $r31, $r33, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        java.lang.Object $r3, $r11;
        h.ST_rank_t $r4;
        h.ST_adjmatrix_t r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        h.ST_elist $r7, $r9;
        smetana.core.CArrayOfStar $r8, $r10;
        h.ST_Agedge_s $r12;
        int[][] $r15, $r25;
        int[] $r17, $r27;
        java.lang.AssertionError $r22, $r24, $r30, $r32;
        java.lang.Throwable $r35;

        r0 := @parameter0: h.ST_Agraph_s;

        r2 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("63ol0ch6cgln1nvl5oiz6n1v0", "flat_search");

     label01:
        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r2);

        $r3 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>($i0);

        $r4 = (h.ST_rank_t) $r3;

        r5 = $r4.<h.ST_rank_t: h.ST_adjmatrix_t flat>;

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,boolean)>(r2, 1);

        staticinvoke <smetana.core.Macro: void ND_onstack(h.ST_Agnode_s,boolean)>(r2, 1);

        $r6 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $i1 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>($r6);

        if $i1 <= 0 goto label02;

        $z8 = 1;

        goto label03;

     label02:
        $z8 = 0;

     label03:
        z0 = $z8;

        $r7 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r2);

        $r8 = $r7.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r8 == null goto label16;

        i17 = 0;

     label04:
        $r9 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r2);

        $r10 = $r9.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r11 = virtualinvoke $r10.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i17);

        $r12 = (h.ST_Agedge_s) $r11;

        if $r12 == null goto label16;

        if z0 == 0 goto label07;

        $r33 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r12);

        $z6 = staticinvoke <gen.lib.cgraph.obj__c: boolean agcontains(h.ST_Agraph_s,h.ST_Agobj_s)>(r0, $r33);

        if $z6 == 0 goto label05;

        $r34 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r12);

        $z7 = staticinvoke <gen.lib.cgraph.obj__c: boolean agcontains(h.ST_Agraph_s,h.ST_Agobj_s)>(r0, $r34);

        if $z7 == 0 goto label05;

        $z9 = 1;

        goto label06;

     label05:
        $z9 = 0;

     label06:
        $z10 = staticinvoke <smetana.core.Macro: boolean NOT(boolean)>($z9);

        if $z10 == 0 goto label07;

        goto label15;

     label07:
        $i2 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>($r12);

        if $i2 != 0 goto label08;

        goto label15;

     label08:
        $r14 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r12);

        $z1 = staticinvoke <smetana.core.Macro: boolean ND_onstack(h.ST_Agnode_s)>($r14);

        if $z1 != 1 goto label12;

        $z4 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z4 != 0 goto label09;

        $r31 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r12);

        $i15 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>($r31);

        $i16 = r5.<h.ST_adjmatrix_t: int nrows>;

        if $i15 < $i16 goto label09;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label09:
        $z5 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z5 != 0 goto label10;

        $r29 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r12);

        $i13 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>($r29);

        $i14 = r5.<h.ST_adjmatrix_t: int ncols>;

        if $i13 < $i14 goto label10;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label10:
        $r25 = r5.<h.ST_adjmatrix_t: int[][] data>;

        $r26 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r12);

        $i10 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>($r26);

        $r27 = $r25[$i10];

        $r28 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r12);

        $i11 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>($r28);

        $r27[$i11] = 1;

        staticinvoke <gen.lib.dotgen.fastgr__c: void delete_flat_edge(h.ST_Agedge_s)>($r12);

        i17 = i17 + -1;

        $i12 = staticinvoke <smetana.core.Macro: int ED_edge_type(h.ST_Agedge_s)>($r12);

        if $i12 != 4 goto label11;

        goto label15;

     label11:
        staticinvoke <gen.lib.dotgen.mincross__c: void flat_rev(h.ST_Agraph_s,h.ST_Agedge_s)>(r0, $r12);

        goto label15;

     label12:
        $z2 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z2 != 0 goto label13;

        $r23 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r12);

        $i8 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>($r23);

        $i9 = r5.<h.ST_adjmatrix_t: int nrows>;

        if $i8 < $i9 goto label13;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label13:
        $z3 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z3 != 0 goto label14;

        $r21 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r12);

        $i6 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>($r21);

        $i7 = r5.<h.ST_adjmatrix_t: int ncols>;

        if $i6 < $i7 goto label14;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label14:
        $r15 = r5.<h.ST_adjmatrix_t: int[][] data>;

        $r16 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r12);

        $i3 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>($r16);

        $r17 = $r15[$i3];

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r12);

        $i4 = staticinvoke <smetana.core.Macro: int ND_low(h.ST_Agnode_s)>($r18);

        $r17[$i4] = 1;

        $r19 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r12);

        $i5 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r19);

        if $i5 != 0 goto label15;

        $r20 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r12);

        staticinvoke <gen.lib.dotgen.mincross__c: void flat_search(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, $r20);

     label15:
        i17 = i17 + 1;

        goto label04;

     label16:
        staticinvoke <smetana.core.Macro: void ND_onstack(h.ST_Agnode_s,int)>(r2, 0);

     label17:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("63ol0ch6cgln1nvl5oiz6n1v0", "flat_search");

        goto label20;

     label18:
        $r35 := @caughtexception;

     label19:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("63ol0ch6cgln1nvl5oiz6n1v0", "flat_search");

        throw $r35;

     label20:
        return;

        catch java.lang.Throwable from label01 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public static void flat_breakcycles(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        smetana.core.CArray $r1, $r4, $r7, $r12, $r18, $r21, $r24;
        java.lang.Object $r2, $r5, $r8, $r11, $r13, $r16, $r19, $r22, $r25;
        h.ST_rank_t $r3, $r6, $r9, $r14, $r20, $r23, $r26;
        smetana.core.CArrayOfStar $r10, $r15;
        h.ST_elist $r17;
        h.ST_adjmatrix_t $r27;
        java.lang.Throwable $r28;
        boolean z0;
        h.ST_Agnode_s r30, r31;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3v5h7z4vqivibvpt913lg8at0", "flat_breakcycles");

     label01:
        i7 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label02:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i7 > $i0 goto label09;

        z0 = 0;

        i8 = 0;

     label03:
        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r3 = (h.ST_rank_t) $r2;

        $i1 = $r3.<h.ST_rank_t: int n>;

        if i8 >= $i1 goto label05;

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r14 = (h.ST_rank_t) $r13;

        $r15 = $r14.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r16 = virtualinvoke $r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        r30 = (h.ST_Agnode_s) $r16;

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r30, 0);

        staticinvoke <smetana.core.Macro: void ND_onstack(h.ST_Agnode_s,int)>(r30, 0);

        staticinvoke <smetana.core.Macro: void flatindex(h.ST_Agnode_s,int)>(r30, i8);

        $r17 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r30);

        $i4 = $r17.<h.ST_elist: int size>;

        if $i4 <= 0 goto label04;

        if z0 != 0 goto label04;

        $r18 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r19 = virtualinvoke $r18.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r20 = (h.ST_rank_t) $r19;

        $r21 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r22 = virtualinvoke $r21.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r23 = (h.ST_rank_t) $r22;

        $i5 = $r23.<h.ST_rank_t: int n>;

        $r24 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r25 = virtualinvoke $r24.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r26 = (h.ST_rank_t) $r25;

        $i6 = $r26.<h.ST_rank_t: int n>;

        $r27 = staticinvoke <gen.lib.dotgen.mincross__c: h.ST_adjmatrix_t new_matrix(int,int)>($i5, $i6);

        $r20.<h.ST_rank_t: h.ST_adjmatrix_t flat> = $r27;

        z0 = 1;

     label04:
        i8 = i8 + 1;

        goto label03;

     label05:
        if z0 == 0 goto label08;

        i9 = 0;

     label06:
        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r6 = (h.ST_rank_t) $r5;

        $i2 = $r6.<h.ST_rank_t: int n>;

        if i9 >= $i2 goto label08;

        $r7 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r8 = virtualinvoke $r7.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r9 = (h.ST_rank_t) $r8;

        $r10 = $r9.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r11 = virtualinvoke $r10.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        r31 = (h.ST_Agnode_s) $r11;

        $i3 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>(r31);

        if $i3 != 0 goto label07;

        staticinvoke <gen.lib.dotgen.mincross__c: void flat_search(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r31);

     label07:
        i9 = i9 + 1;

        goto label06;

     label08:
        i7 = i7 + 1;

        goto label02;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3v5h7z4vqivibvpt913lg8at0", "flat_breakcycles");

        goto label12;

     label10:
        $r28 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3v5h7z4vqivibvpt913lg8at0", "flat_breakcycles");

        throw $r28;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void allocate_ranks(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18;
        int[] r1;
        smetana.core.CArray $r2, $r3, $r6, $r9, $r12;
        java.lang.Object $r4, $r7, $r10, $r13;
        h.ST_rank_t $r5, $r8, $r11, $r14;
        h.ST_Agnode_s $r15, $r16, r19;
        java.lang.Throwable $r17;
        h.ST_Agedge_s r20;
        smetana.core.CArrayOfStar r21;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("d5vb6jiw8mhkaa8gjwn4eqfyn", "allocate_ranks");

     label01:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        $i1 = $i0 + 2;

        r1 = newarray (int)[$i1];

        r19 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agfstnode(h.ST_Agraph_s)>(r0);

     label02:
        if r19 == null goto label08;

        $i9 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r19);

        $i10 = r1[$i9];

        $i11 = $i10 + 1;

        r1[$i9] = $i11;

        r20 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agedge_s agfstout(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r19);

     label03:
        if r20 == null goto label07;

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r20);

        i14 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r15);

        $r16 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r20);

        i15 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r16);

        if i14 <= i15 goto label04;

        i16 = i14;

        i14 = i15;

        i15 = i16;

     label04:
        i17 = i14 + 1;

     label05:
        if i17 >= i15 goto label06;

        $i12 = r1[i17];

        $i13 = $i12 + 1;

        r1[i17] = $i13;

        i17 = i17 + 1;

        goto label05;

     label06:
        r20 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agedge_s agnxtout(h.ST_Agraph_s,h.ST_Agedge_s)>(r0, r20);

        goto label03;

     label07:
        r19 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agnxtnode(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r19);

        goto label02;

     label08:
        $i2 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        $i3 = $i2 + 2;

        $r2 = staticinvoke <smetana.core.CArray: smetana.core.CArray ALLOC__(int,java.lang.Class)>($i3, class "Lh/ST_rank_t;");

        staticinvoke <smetana.core.Macro: void GD_rank(h.ST_Agraph_s,smetana.core.CArray)>(r0, $r2);

        i18 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label09:
        $i4 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i18 > $i4 goto label10;

        $r3 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r4 = virtualinvoke $r3.<smetana.core.CArray: java.lang.Object get__(int)>(i18);

        $r5 = (h.ST_rank_t) $r4;

        $i5 = r1[i18];

        $r5.<h.ST_rank_t: int n> = $i5;

        $r6 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r7 = virtualinvoke $r6.<smetana.core.CArray: java.lang.Object get__(int)>(i18);

        $r8 = (h.ST_rank_t) $r7;

        $i6 = r1[i18];

        $r8.<h.ST_rank_t: int an> = $i6;

        $i7 = r1[i18];

        $i8 = $i7 + 1;

        r21 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar ALLOC(int,java.lang.Class)>($i8, class "Lh/ST_Agnode_s;");

        $r9 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r10 = virtualinvoke $r9.<smetana.core.CArray: java.lang.Object get__(int)>(i18);

        $r11 = (h.ST_rank_t) $r10;

        $r11.<h.ST_rank_t: smetana.core.CArrayOfStar v> = r21;

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(i18);

        $r14 = (h.ST_rank_t) $r13;

        $r14.<h.ST_rank_t: smetana.core.CArrayOfStar av> = r21;

        i18 = i18 + 1;

        goto label09;

     label10:
        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>(r1);

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d5vb6jiw8mhkaa8gjwn4eqfyn", "allocate_ranks");

        goto label14;

     label12:
        $r17 := @caughtexception;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d5vb6jiw8mhkaa8gjwn4eqfyn", "allocate_ranks");

        throw $r17;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static void install_in_rank(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        h.ST_Agraph_s r1, $r16, $r32;
        smetana.core.CArray $r2, $r5, $r8, $r12, $r17, $r22, $r27, $r33, $r41, $r44;
        java.lang.Object $r3, $r6, $r9, $r13, $r18, $r23, $r28, $r34, $r42, $r45;
        h.ST_rank_t $r4, $r7, $r10, $r14, $r19, $r24, $r29, $r35, $r43, $r46;
        smetana.core.CArrayOfStar $r11, $r25, $r26, $r30, $r36;
        boolean $z0;
        smetana.core.Z $r15, $r31;
        java.lang.AssertionError $r47;
        java.lang.Throwable $r50;

        r1 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3lxoqxhiri9fgt20zc5jz3aa5", "install_in_rank");

     label01:
        i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $r3 = virtualinvoke $r2.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r4 = (h.ST_rank_t) $r3;

        i1 = $r4.<h.ST_rank_t: int n>;

        $r5 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $r6 = virtualinvoke $r5.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r7 = (h.ST_rank_t) $r6;

        $i2 = $r7.<h.ST_rank_t: int an>;

        if $i2 > 0 goto label03;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8qk1xhvvb994zhv9aq10k4v12");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("53h8d82ax23hys2k21hjswp72");

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3lxoqxhiri9fgt20zc5jz3aa5", "install_in_rank");

        return;

     label03:
        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $r9 = virtualinvoke $r8.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r10 = (h.ST_rank_t) $r9;

        $r11 = $r10.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        virtualinvoke $r11.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i1, r0);

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r0, i1);

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r14 = (h.ST_rank_t) $r13;

        $i3 = $r14.<h.ST_rank_t: int n>;

        $i4 = $i3 + 1;

        $r14.<h.ST_rank_t: int n> = $i4;

        $z0 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z0 != 0 goto label04;

        $r41 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $r42 = virtualinvoke $r41.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r43 = (h.ST_rank_t) $r42;

        $i12 = $r43.<h.ST_rank_t: int n>;

        $r44 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $r45 = virtualinvoke $r44.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r46 = (h.ST_rank_t) $r45;

        $i13 = $r46.<h.ST_rank_t: int an>;

        if $i12 <= $i13 goto label04;

        $r47 = new java.lang.AssertionError;

        specialinvoke $r47.<java.lang.AssertionError: void <init>()>();

        throw $r47;

     label04:
        $i5 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r0);

        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r16 = $r15.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r17 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r16);

        $r18 = virtualinvoke $r17.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r19 = (h.ST_rank_t) $r18;

        $i6 = $r19.<h.ST_rank_t: int an>;

        if $i5 <= $i6 goto label06;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("399szcw1txekt1xssyw7s2x07");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("9puojrmsk6vb1qc0jtr8ge4g8");

     label05:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3lxoqxhiri9fgt20zc5jz3aa5", "install_in_rank");

        return;

     label06:
        $i7 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r1);

        if i0 < $i7 goto label07;

        $i8 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r1);

        if i0 <= $i8 goto label09;

     label07:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("7o1thnqda767wqpe2lh9mj03t");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("d2ugluzf7bmj7osicgitgy3sr");

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3lxoqxhiri9fgt20zc5jz3aa5", "install_in_rank");

        return;

     label09:
        $r22 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $r23 = virtualinvoke $r22.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r24 = (h.ST_rank_t) $r23;

        $r25 = $r24.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $i9 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r0);

        $r26 = virtualinvoke $r25.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>($i9);

        $r27 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r1);

        $r28 = virtualinvoke $r27.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r29 = (h.ST_rank_t) $r28;

        $r30 = $r29.<h.ST_rank_t: smetana.core.CArrayOfStar av>;

        $r31 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r32 = $r31.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r33 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r32);

        $r34 = virtualinvoke $r33.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r35 = (h.ST_rank_t) $r34;

        $i10 = $r35.<h.ST_rank_t: int an>;

        $r36 = virtualinvoke $r30.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>($i10);

        $i11 = virtualinvoke $r26.<smetana.core.CArrayOfStar: int comparePointer_(smetana.core.CArrayOfStar)>($r36);

        if $i11 <= 0 goto label11;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3eb32nc5czs5auwzz5p5mtl04");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("3qe3qpw5h6vse39xs1ca9sjmo");

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3lxoqxhiri9fgt20zc5jz3aa5", "install_in_rank");

        return;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3lxoqxhiri9fgt20zc5jz3aa5", "install_in_rank");

        goto label14;

     label12:
        $r50 := @caughtexception;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3lxoqxhiri9fgt20zc5jz3aa5", "install_in_rank");

        throw $r50;

     label14:
        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label05 with label12;
        catch java.lang.Throwable from label06 to label08 with label12;
        catch java.lang.Throwable from label09 to label10 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static void build_ranks(h.ST_Agraph_s, int)
    {
        h.ST_Agraph_s r0, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7, i8, $i9, $i10, i11, i12, $i13, i14;
        h.ST_nodequeue r1;
        h.ST_Agnode_s $r2, $r20, $r22, r32, r33, $r35;
        boolean $z0, $z1;
        smetana.core.Z $r4;
        smetana.core.CArray $r6, $r9, $r12, $r16, $r27;
        java.lang.Object $r7, $r10, $r13, $r17, $r19, $r21, $r25, $r28;
        h.ST_rank_t $r8, $r11, $r14, $r18, $r29;
        smetana.core.CArrayOfStar r15, $r34;
        h.ST_elist $r23, $r26;
        java.lang.Throwable $r30;

        r0 := @parameter0: h.ST_Agraph_s;

        i8 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7t49bz6lfcbd9v63ds2x3518z", "build_ranks");

     label01:
        $i0 = staticinvoke <smetana.core.Macro: int GD_n_nodes(h.ST_Agraph_s)>(r0);

        r1 = staticinvoke <gen.lib.common.utils__c: h.ST_nodequeue new_queue(int)>($i0);

        r32 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label02:
        if r32 == null goto label03;

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r32, 0);

        r32 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r32);

        goto label02;

     label03:
        i11 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label04:
        $i1 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i11 > $i1 goto label05;

        $r27 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r28 = virtualinvoke $r27.<smetana.core.CArray: java.lang.Object get__(int)>(i11);

        $r29 = (h.ST_rank_t) $r28;

        $r29.<h.ST_rank_t: int n> = 0;

        i11 = i11 + 1;

        goto label04;

     label05:
        r33 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label06:
        if r33 == null goto label13;

        if i8 != 0 goto label07;

        $r26 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r33);

        $r34 = $r26.<h.ST_elist: smetana.core.CArrayOfStar list>;

        goto label08;

     label07:
        $r23 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r33);

        $r34 = $r23.<h.ST_elist: smetana.core.CArrayOfStar list>;

     label08:
        $r25 = virtualinvoke $r34.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        if $r25 == null goto label09;

        goto label12;

     label09:
        $i9 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>(r33);

        if $i9 != 0 goto label12;

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>(r33, 1);

        staticinvoke <gen.lib.common.utils__c: void enqueue(h.ST_nodequeue,h.ST_Agnode_s)>(r1, r33);

     label10:
        $r35 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s dequeue(h.ST_nodequeue)>(r1);

        if $r35 == null goto label12;

        $i10 = staticinvoke <smetana.core.Macro: int ND_ranktype(h.ST_Agnode_s)>($r35);

        if $i10 == 7 goto label11;

        staticinvoke <gen.lib.dotgen.mincross__c: void install_in_rank(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, $r35);

        staticinvoke <gen.lib.dotgen.mincross__c: void enqueue_neighbors(h.ST_nodequeue,h.ST_Agnode_s,int)>(r1, $r35, i8);

        goto label10;

     label11:
        staticinvoke <gen.lib.dotgen.cluster__c: void install_cluster(h.ST_Agraph_s,h.ST_Agnode_s,int,h.ST_nodequeue)>(r0, $r35, i8, r1);

        goto label10;

     label12:
        r33 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r33);

        goto label06;

     label13:
        $r2 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s dequeue(h.ST_nodequeue)>(r1);

        if $r2 == null goto label14;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1b3hbd5artrq77i58q2o9kgz3");

     label14:
        i12 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label15:
        $i13 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i12 > $i13 goto label18;

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r6 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r5);

        $r7 = virtualinvoke $r6.<smetana.core.CArray: java.lang.Object get__(int)>(i12);

        $r8 = (h.ST_rank_t) $r7;

        $r8.<h.ST_rank_t: int valid> = 0;

        $z1 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r0);

        if $z1 == 0 goto label17;

        $r9 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r10 = virtualinvoke $r9.<smetana.core.CArray: java.lang.Object get__(int)>(i12);

        $r11 = (h.ST_rank_t) $r10;

        $i3 = $r11.<h.ST_rank_t: int n>;

        if $i3 <= 0 goto label17;

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(i12);

        $r14 = (h.ST_rank_t) $r13;

        r15 = $r14.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r16 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r17 = virtualinvoke $r16.<smetana.core.CArray: java.lang.Object get__(int)>(i12);

        $r18 = (h.ST_rank_t) $r17;

        $i4 = $r18.<h.ST_rank_t: int n>;

        i5 = $i4 - 1;

        i6 = i5 / 2;

        i14 = 0;

     label16:
        if i14 > i6 goto label17;

        $r19 = virtualinvoke r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i14);

        $r20 = (h.ST_Agnode_s) $r19;

        $i7 = i5 - i14;

        $r21 = virtualinvoke r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i7);

        $r22 = (h.ST_Agnode_s) $r21;

        staticinvoke <gen.lib.dotgen.mincross__c: void exchange(h.ST_Agnode_s,h.ST_Agnode_s)>($r20, $r22);

        i14 = i14 + 1;

        goto label16;

     label17:
        i12 = i12 + 1;

        goto label15;

     label18:
        $r3 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r0, $r3);

        if $z0 == 0 goto label19;

        $i2 = staticinvoke <gen.lib.dotgen.mincross__c: int ncross(h.ST_Agraph_s)>(r0);

        if $i2 <= 0 goto label19;

        staticinvoke <gen.lib.dotgen.mincross__c: void transpose(h.ST_Agraph_s,boolean)>(r0, 0);

     label19:
        staticinvoke <gen.lib.common.utils__c: void free_queue(h.ST_nodequeue)>(r1);

     label20:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7t49bz6lfcbd9v63ds2x3518z", "build_ranks");

        goto label23;

     label21:
        $r30 := @caughtexception;

     label22:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7t49bz6lfcbd9v63ds2x3518z", "build_ranks");

        throw $r30;

     label23:
        return;

        catch java.lang.Throwable from label01 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public static void enqueue_neighbors(h.ST_nodequeue, h.ST_Agnode_s, int)
    {
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        h.ST_Agnode_s r0, $r5, $r6, $r8, $r13, $r14, $r15;
        h.ST_elist $r1, $r2, $r9, $r10;
        smetana.core.CArrayOfStar $r3, $r11;
        java.lang.Object $r4, $r12;
        h.ST_nodequeue r7;
        java.lang.Throwable $r16;
        h.ST_Agedge_s r18, r19;

        r7 := @parameter0: h.ST_nodequeue;

        r0 := @parameter1: h.ST_Agnode_s;

        i0 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bmjlneqxex6a9silzkkidkx6s", "enqueue_neighbors");

     label01:
        if i0 != 0 goto label04;

        i5 = 0;

     label02:
        $r9 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        $i3 = $r9.<h.ST_elist: int size>;

        if i5 >= $i3 goto label07;

        $r10 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        $r11 = $r10.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r12 = virtualinvoke $r11.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i5);

        r18 = (h.ST_Agedge_s) $r12;

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r18);

        $i4 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r13);

        if $i4 != 0 goto label03;

        $r14 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r18);

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>($r14, 1);

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r18);

        staticinvoke <gen.lib.common.utils__c: void enqueue(h.ST_nodequeue,h.ST_Agnode_s)>(r7, $r15);

     label03:
        i5 = i5 + 1;

        goto label02;

     label04:
        i6 = 0;

     label05:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r0);

        $i1 = $r1.<h.ST_elist: int size>;

        if i6 >= $i1 goto label07;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r0);

        $r3 = $r2.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r4 = virtualinvoke $r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i6);

        r19 = (h.ST_Agedge_s) $r4;

        $r5 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r19);

        $i2 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r5);

        if $i2 != 0 goto label06;

        $r6 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r19);

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>($r6, 1);

        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r19);

        staticinvoke <gen.lib.common.utils__c: void enqueue(h.ST_nodequeue,h.ST_Agnode_s)>(r7, $r8);

     label06:
        i6 = i6 + 1;

        goto label05;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bmjlneqxex6a9silzkkidkx6s", "enqueue_neighbors");

        goto label10;

     label08:
        $r16 := @caughtexception;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bmjlneqxex6a9silzkkidkx6s", "enqueue_neighbors");

        throw $r16;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static boolean constraining_flat_edge(h.ST_Agraph_s, h.ST_Agnode_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        int $i0;
        h.ST_Agraph_s r1;
        h.ST_Agnode_s $r2, $r3, r6;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Throwable $r4;

        r1 := @parameter0: h.ST_Agraph_s;

        r6 := @parameter1: h.ST_Agnode_s;

        r0 := @parameter2: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("c8nqj0v20api63pikohsbx92u", "constraining_flat_edge");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r0);

        if $i0 != 0 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c8nqj0v20api63pikohsbx92u", "constraining_flat_edge");

        return 0;

     label3:
        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $z0 = staticinvoke <gen.lib.dotgen.mincross__c: boolean inside_cluster(h.ST_Agraph_s,h.ST_Agnode_s)>(r1, $r2);

        $z1 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z0);

        if $z1 == 0 goto label5;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c8nqj0v20api63pikohsbx92u", "constraining_flat_edge");

        return 0;

     label5:
        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $z2 = staticinvoke <gen.lib.dotgen.mincross__c: boolean inside_cluster(h.ST_Agraph_s,h.ST_Agnode_s)>(r1, $r3);

        $z3 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z2);

        if $z3 == 0 goto label7;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c8nqj0v20api63pikohsbx92u", "constraining_flat_edge");

        return 0;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c8nqj0v20api63pikohsbx92u", "constraining_flat_edge");

        return 1;

     label8:
        $r4 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c8nqj0v20api63pikohsbx92u", "constraining_flat_edge");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label8;
        catch java.lang.Throwable from label3 to label4 with label8;
        catch java.lang.Throwable from label5 to label6 with label8;
        catch java.lang.Throwable from label7 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static int postorder(h.ST_Agraph_s, h.ST_Agnode_s, smetana.core.CArrayOfStar, int)
    {
        h.ST_Agnode_s r0, $r10, $r11;
        h.ST_elist $r1, $r4;
        int $i0, $i2, i3, $i4, $i5, i6, i7, i8;
        boolean $z0, $z1, $z2;
        smetana.core.CArrayOfStar r2, $r5, $r12;
        java.lang.AssertionError $r3;
        java.lang.Object $r6;
        h.ST_Agedge_s $r7;
        h.ST_Agraph_s r9;
        java.lang.Throwable $r13;

        r9 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        r2 := @parameter2: smetana.core.CArrayOfStar;

        i3 := @parameter3: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("46to0pkk188af2dlkik2ab7e3", "postorder");

     label1:
        i6 = 0;

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,boolean)>(r0, 1);

        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r0);

        $i0 = $r1.<h.ST_elist: int size>;

        if $i0 <= 0 goto label5;

        i7 = 0;

     label2:
        $r4 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r0);

        $r5 = $r4.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r6 = virtualinvoke $r5.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i7);

        $r7 = (h.ST_Agedge_s) $r6;

        if $r7 == null goto label5;

        $z1 = staticinvoke <gen.lib.dotgen.mincross__c: boolean constraining_flat_edge(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r9, r0, $r7);

        $z2 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z1);

        if $z2 == 0 goto label3;

        goto label4;

     label3:
        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r7);

        $i4 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>($r10);

        if $i4 != 0 goto label4;

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r7);

        $r12 = virtualinvoke r2.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>(i6);

        $i5 = staticinvoke <gen.lib.dotgen.mincross__c: int postorder(h.ST_Agraph_s,h.ST_Agnode_s,smetana.core.CArrayOfStar,int)>(r9, $r11, $r12, i3);

        i6 = i6 + $i5;

     label4:
        i7 = i7 + 1;

        goto label2;

     label5:
        $z0 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z0 != 0 goto label6;

        $i2 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r0);

        if $i2 == i3 goto label6;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label6:
        i8 = i6 + 1;

        virtualinvoke r2.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i6, r0);

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("46to0pkk188af2dlkik2ab7e3", "postorder");

        return i8;

     label8:
        $r13 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("46to0pkk188af2dlkik2ab7e3", "postorder");

        throw $r13;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static void flat_reorder(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r17;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, i23, i24, i25, i26, i27, i28, i29, $i30, i31, i32, $i33, i34, i35;
        smetana.core.CArray $r1, $r4, $r10, $r13, $r18, $r21, $r24, $r42, $r50, $r54, $r65, $r70, $r86;
        java.lang.Object $r2, $r5, $r8, $r11, $r14, $r19, $r22, $r25, $r28, $r33, $r41, $r43, $r46, $r48, $r51, $r55, $r57, $r61, $r64, $r66, $r69, $r71, $r74, $r87;
        h.ST_rank_t $r3, $r6, $r12, $r15, $r20, $r23, $r26, $r44, $r52, $r56, $r67, $r72, $r88;
        smetana.core.CArrayOfStar $r7, $r27, $r30, $r32, $r45, $r53, $r60, $r63, $r68, $r73, r78, r83, r84, r85;
        h.ST_Agnode_s $r9, $r36, $r37, $r39, $r40, r47, $r49, $r75, r79, r89, r90;
        smetana.core.Z $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        h.ST_elist $r29, $r31, $r58, $r59, $r62, $r80;
        h.ST_Agedge_s $r34, r81, r82;
        java.lang.AssertionError $r38;
        java.lang.Throwable $r76;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("zuxoswju917kyl08a5f0gtp6", "flat_reorder");

     label01:
        r78 = null;

        $i0 = staticinvoke <smetana.core.Macro: int GD_has_flat_edges(h.ST_Agraph_s)>(r0);

        if $i0 != 0 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("zuxoswju917kyl08a5f0gtp6", "flat_reorder");

        return;

     label03:
        i23 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

     label04:
        $i1 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        if i23 > $i1 goto label33;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r3 = (h.ST_rank_t) $r2;

        $i2 = $r3.<h.ST_rank_t: int n>;

        if $i2 != 0 goto label05;

        goto label32;

     label05:
        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r6 = (h.ST_rank_t) $r5;

        $r7 = $r6.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r8 = virtualinvoke $r7.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r9 = (h.ST_Agnode_s) $r8;

        i3 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r9);

        i24 = 0;

     label06:
        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r12 = (h.ST_rank_t) $r11;

        $i4 = $r12.<h.ST_rank_t: int n>;

        if i24 >= $i4 goto label07;

        $r70 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r71 = virtualinvoke $r70.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r72 = (h.ST_rank_t) $r71;

        $r73 = $r72.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r74 = virtualinvoke $r73.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i24);

        $r75 = (h.ST_Agnode_s) $r74;

        staticinvoke <smetana.core.Macro: void ND_mark(h.ST_Agnode_s,int)>($r75, 0);

        i24 = i24 + 1;

        goto label06;

     label07:
        $i5 = i24 + 1;

        r78 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar REALLOC(int,smetana.core.CArrayOfStar,java.lang.Class)>($i5, r78, class "Lh/ST_Agnode_s;");

        i25 = 0;

        i26 = 0;

     label08:
        $r13 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r14 = virtualinvoke $r13.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r15 = (h.ST_rank_t) $r14;

        $i6 = $r15.<h.ST_rank_t: int n>;

        if i26 >= $i6 goto label19;

        $z5 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r0);

        if $z5 == 0 goto label09;

        $r65 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r66 = virtualinvoke $r65.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r67 = (h.ST_rank_t) $r66;

        $r68 = $r67.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r69 = virtualinvoke $r68.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i26);

        r79 = (h.ST_Agnode_s) $r69;

        goto label10;

     label09:
        $r50 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r51 = virtualinvoke $r50.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r52 = (h.ST_rank_t) $r51;

        $r53 = $r52.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r54 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r55 = virtualinvoke $r54.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r56 = (h.ST_rank_t) $r55;

        $i15 = $r56.<h.ST_rank_t: int n>;

        $i16 = $i15 - i26;

        $i17 = $i16 - 1;

        $r57 = virtualinvoke $r53.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i17);

        r79 = (h.ST_Agnode_s) $r57;

     label10:
        i27 = 0;

        i28 = 0;

        i29 = 0;

     label11:
        $r80 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_in(h.ST_Agnode_s)>(r79);

        $i30 = $r80.<h.ST_elist: int size>;

        if i29 >= $i30 goto label13;

        $r62 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_in(h.ST_Agnode_s)>(r79);

        $r63 = $r62.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r64 = virtualinvoke $r63.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i29);

        r81 = (h.ST_Agedge_s) $r64;

        $z7 = staticinvoke <gen.lib.dotgen.mincross__c: boolean constraining_flat_edge(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, r79, r81);

        if $z7 == 0 goto label12;

        i28 = i28 + 1;

     label12:
        i29 = i29 + 1;

        goto label11;

     label13:
        i31 = 0;

     label14:
        $r58 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r79);

        $i18 = $r58.<h.ST_elist: int size>;

        if i31 >= $i18 goto label16;

        $r59 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r79);

        $r60 = $r59.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r61 = virtualinvoke $r60.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i31);

        r82 = (h.ST_Agedge_s) $r61;

        $z6 = staticinvoke <gen.lib.dotgen.mincross__c: boolean constraining_flat_edge(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, r79, r82);

        if $z6 == 0 goto label15;

        i27 = i27 + 1;

     label15:
        i31 = i31 + 1;

        goto label14;

     label16:
        if i28 != 0 goto label17;

        if i27 != 0 goto label17;

        $i21 = i25;

        i25 = i25 + 1;

        virtualinvoke r78.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i21, r79);

        goto label18;

     label17:
        $i19 = staticinvoke <smetana.core.Macro: int ND_mark(h.ST_Agnode_s)>(r79);

        if $i19 != 0 goto label18;

        if i28 != 0 goto label18;

        r83 = virtualinvoke r78.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>(i25);

        i20 = staticinvoke <gen.lib.dotgen.mincross__c: int postorder(h.ST_Agraph_s,h.ST_Agnode_s,smetana.core.CArrayOfStar,int)>(r0, r79, r83, i23);

        i25 = i25 + i20;

     label18:
        i26 = i26 + 1;

        goto label08;

     label19:
        if i25 == 0 goto label31;

        $z0 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r0);

        if $z0 != 0 goto label21;

        r84 = r78;

        $i13 = i25 - 1;

        r85 = virtualinvoke r78.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>($i13);

     label20:
        $i14 = virtualinvoke r84.<smetana.core.CArrayOfStar: int comparePointer_(smetana.core.CArrayOfStar)>(r85);

        if $i14 >= 0 goto label21;

        $r46 = virtualinvoke r84.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r47 = (h.ST_Agnode_s) $r46;

        $r48 = virtualinvoke r85.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r49 = (h.ST_Agnode_s) $r48;

        virtualinvoke r84.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(0, $r49);

        virtualinvoke r85.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(0, r47);

        r84 = virtualinvoke r84.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>(1);

        r85 = virtualinvoke r85.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>(-1);

        goto label20;

     label21:
        i32 = 0;

     label22:
        $r86 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r87 = virtualinvoke $r86.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r88 = (h.ST_rank_t) $r87;

        $i33 = $r88.<h.ST_rank_t: int n>;

        if i32 >= $i33 goto label23;

        $r41 = virtualinvoke r78.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i32);

        r89 = (h.ST_Agnode_s) $r41;

        $r42 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r43 = virtualinvoke $r42.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r44 = (h.ST_rank_t) $r43;

        $r45 = $r44.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        virtualinvoke $r45.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i32, r89);

        $i12 = i32 + i3;

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r89, $i12);

        i32 = i32 + 1;

        goto label22;

     label23:
        i34 = 0;

     label24:
        $r21 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r22 = virtualinvoke $r21.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r23 = (h.ST_rank_t) $r22;

        $i7 = $r23.<h.ST_rank_t: int n>;

        if i34 >= $i7 goto label31;

        $r24 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r25 = virtualinvoke $r24.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r26 = (h.ST_rank_t) $r25;

        $r27 = $r26.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r28 = virtualinvoke $r27.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i34);

        r90 = (h.ST_Agnode_s) $r28;

        $r29 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r90);

        $r30 = $r29.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r30 == null goto label30;

        i35 = 0;

     label25:
        $r31 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r90);

        $r32 = $r31.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r33 = virtualinvoke $r32.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i35);

        $r34 = (h.ST_Agedge_s) $r33;

        if $r34 == null goto label30;

        $z1 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r0);

        if $z1 != 0 goto label26;

        $r39 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r34);

        $i10 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r39);

        $r40 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r34);

        $i11 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r40);

        if $i10 < $i11 goto label27;

     label26:
        $z2 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r0);

        if $z2 == 0 goto label29;

        $r36 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r34);

        $i8 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r36);

        $r37 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r34);

        $i9 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r37);

        if $i8 <= $i9 goto label29;

     label27:
        $z3 = <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled>;

        if $z3 != 0 goto label28;

        $z4 = staticinvoke <gen.lib.dotgen.mincross__c: boolean constraining_flat_edge(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, r90, $r34);

        if $z4 == 0 goto label28;

        $r38 = new java.lang.AssertionError;

        specialinvoke $r38.<java.lang.AssertionError: void <init>()>();

        throw $r38;

     label28:
        staticinvoke <gen.lib.dotgen.fastgr__c: void delete_flat_edge(h.ST_Agedge_s)>($r34);

        i35 = i35 + -1;

        staticinvoke <gen.lib.dotgen.mincross__c: void flat_rev(h.ST_Agraph_s,h.ST_Agedge_s)>(r0, $r34);

     label29:
        i35 = i35 + 1;

        goto label25;

     label30:
        i34 = i34 + 1;

        goto label24;

     label31:
        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r17 = $r16.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r18 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r17);

        $r19 = virtualinvoke $r18.<smetana.core.CArray: java.lang.Object get__(int)>(i23);

        $r20 = (h.ST_rank_t) $r19;

        $r20.<h.ST_rank_t: int valid> = 0;

     label32:
        i23 = i23 + 1;

        goto label04;

     label33:
        if r78 == null goto label34;

        staticinvoke <smetana.core.Memory: void free(java.lang.Object)>(r78);

     label34:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("zuxoswju917kyl08a5f0gtp6", "flat_reorder");

        goto label37;

     label35:
        $r76 := @caughtexception;

     label36:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("zuxoswju917kyl08a5f0gtp6", "flat_reorder");

        throw $r76;

     label37:
        return;

        catch java.lang.Throwable from label01 to label02 with label35;
        catch java.lang.Throwable from label03 to label34 with label35;
        catch java.lang.Throwable from label35 to label36 with label35;
    }

    public static void reorder(h.ST_Agraph_s, int, boolean, boolean)
    {
        h.ST_Agraph_s r0, $r12, $r17, $r37, $r40;
        smetana.core.CArray $r1, $r5, $r8, $r13, $r18;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i12, $i13;
        java.lang.Object $r2, $r6, $r9, $r14, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r38, $r41;
        h.ST_rank_t $r3, $r7, $r10, $r15, $r20;
        smetana.core.CArrayOfStar r4, r45, r46, r47;
        smetana.core.Z $r11, $r16;
        boolean z0, z1, $z2, z3, z4, z5;
        h.ST_Agnode_s $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r39, $r42;
        double $d0, $d1, $d2, $d3;
        byte $b10, $b11;
        java.lang.Throwable $r43;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("inv6wazjcnh4xkzzphsdcmg4", "reorder");

     label01:
        z3 = 0;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r3 = (h.ST_rank_t) $r2;

        r4 = $r3.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r5 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r6 = virtualinvoke $r5.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r7 = (h.ST_rank_t) $r6;

        $i1 = $r7.<h.ST_rank_t: int n>;

        r45 = virtualinvoke r4.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>($i1);

        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r9 = virtualinvoke $r8.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r10 = (h.ST_rank_t) $r9;

        $i2 = $r10.<h.ST_rank_t: int n>;

        i12 = $i2 - 1;

     label02:
        if i12 < 0 goto label18;

        r46 = r4;

     label03:
        $i4 = virtualinvoke r46.<smetana.core.CArrayOfStar: int comparePointer_(smetana.core.CArrayOfStar)>(r45);

        if $i4 >= 0 goto label16;

     label04:
        $i5 = virtualinvoke r46.<smetana.core.CArrayOfStar: int comparePointer_(smetana.core.CArrayOfStar)>(r45);

        if $i5 >= 0 goto label05;

        $r41 = virtualinvoke r46.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r42 = (h.ST_Agnode_s) $r41;

        $d3 = staticinvoke <smetana.core.Macro: double ND_mval(h.ST_Agnode_s)>($r42);

        $b11 = $d3 cmpg 0.0;

        if $b11 >= 0 goto label05;

        r46 = virtualinvoke r46.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>(1);

        goto label04;

     label05:
        $i6 = virtualinvoke r46.<smetana.core.CArrayOfStar: int comparePointer_(smetana.core.CArrayOfStar)>(r45);

        if $i6 < 0 goto label06;

        goto label16;

     label06:
        z4 = 0;

        z5 = 0;

        r47 = virtualinvoke r46.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>(1);

     label07:
        $i7 = virtualinvoke r47.<smetana.core.CArrayOfStar: int comparePointer_(smetana.core.CArrayOfStar)>(r45);

        if $i7 >= 0 goto label12;

        if z5 == 0 goto label08;

        $r38 = virtualinvoke r47.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r39 = (h.ST_Agnode_s) $r38;

        $r40 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>($r39);

        if $r40 == null goto label08;

        goto label11;

     label08:
        $r29 = virtualinvoke r46.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r30 = (h.ST_Agnode_s) $r29;

        $r31 = virtualinvoke r47.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r32 = (h.ST_Agnode_s) $r31;

        $z2 = staticinvoke <gen.lib.dotgen.mincross__c: boolean left2right(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agnode_s)>(r0, $r30, $r32);

        if $z2 == 0 goto label09;

        z4 = 1;

        goto label12;

     label09:
        $r33 = virtualinvoke r47.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r34 = (h.ST_Agnode_s) $r33;

        $d2 = staticinvoke <smetana.core.Macro: double ND_mval(h.ST_Agnode_s)>($r34);

        $b10 = $d2 cmpl 0.0;

        if $b10 < 0 goto label10;

        goto label12;

     label10:
        $r35 = virtualinvoke r47.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r36 = (h.ST_Agnode_s) $r35;

        $r37 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>($r36);

        if $r37 == null goto label11;

        z5 = 1;

     label11:
        r47 = virtualinvoke r47.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>(1);

        goto label07;

     label12:
        $i13 = virtualinvoke r47.<smetana.core.CArrayOfStar: int comparePointer_(smetana.core.CArrayOfStar)>(r45);

        if $i13 < 0 goto label13;

        goto label16;

     label13:
        if z4 != 0 goto label15;

        $r21 = virtualinvoke r46.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r22 = (h.ST_Agnode_s) $r21;

        $d0 = staticinvoke <smetana.core.Macro: double ND_mval(h.ST_Agnode_s)>($r22);

        i8 = (int) $d0;

        $r23 = virtualinvoke r47.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r24 = (h.ST_Agnode_s) $r23;

        $d1 = staticinvoke <smetana.core.Macro: double ND_mval(h.ST_Agnode_s)>($r24);

        i9 = (int) $d1;

        if i8 > i9 goto label14;

        if i8 != i9 goto label15;

        if z1 == 0 goto label15;

     label14:
        $r25 = virtualinvoke r46.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r26 = (h.ST_Agnode_s) $r25;

        $r27 = virtualinvoke r47.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r28 = (h.ST_Agnode_s) $r27;

        staticinvoke <gen.lib.dotgen.mincross__c: void exchange(h.ST_Agnode_s,h.ST_Agnode_s)>($r26, $r28);

        z3 = 1;

     label15:
        r46 = r47;

        goto label03;

     label16:
        if z0 != 0 goto label17;

        if z1 != 0 goto label17;

        r45 = virtualinvoke r45.<smetana.core.CArrayOfStar: smetana.core.CArrayOfStar plus_(int)>(-1);

     label17:
        i12 = i12 + -1;

        goto label02;

     label18:
        if z3 == 0 goto label19;

        $r11 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r12 = $r11.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r13 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r12);

        $r14 = virtualinvoke $r13.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r15 = (h.ST_rank_t) $r14;

        $r15.<h.ST_rank_t: int valid> = 0;

        if i0 <= 0 goto label19;

        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r17 = $r16.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r18 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r17);

        $i3 = i0 - 1;

        $r19 = virtualinvoke $r18.<smetana.core.CArray: java.lang.Object get__(int)>($i3);

        $r20 = (h.ST_rank_t) $r19;

        $r20.<h.ST_rank_t: int valid> = 0;

     label19:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("inv6wazjcnh4xkzzphsdcmg4", "reorder");

        goto label22;

     label20:
        $r43 := @caughtexception;

     label21:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("inv6wazjcnh4xkzzphsdcmg4", "reorder");

        throw $r43;

     label22:
        return;

        catch java.lang.Throwable from label01 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public static void mincross_step(h.ST_Agraph_s, int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, i14, i15, i17, $i18;
        h.ST_Agraph_s r0, $r2, $r4;
        smetana.core.Z $r1, $r3;
        boolean $z0, z1, z2;
        java.lang.Throwable $r5;
        byte b16;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("14t80owwvm7io4ou6czb9ba9", "mincross_step");

     label01:
        $i1 = i0 % 4;

        if $i1 >= 2 goto label02;

        z2 = 1;

        goto label03;

     label02:
        z2 = 0;

     label03:
        $i2 = i0 % 2;

        if $i2 == 0 goto label04;

        staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        goto label04;

     label04:
        $i3 = i0 % 2;

        if $i3 != 0 goto label06;

        $i8 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        i14 = $i8 + 1;

        $i9 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = $r3.<smetana.core.Z: h.ST_Agraph_s Root>;

        $i10 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>($r4);

        if $i9 <= $i10 goto label05;

        i14 = i14 + -1;

     label05:
        i15 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        b16 = 1;

        goto label08;

     label06:
        $i4 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        i14 = $i4 - 1;

        i15 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        $i5 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_Agraph_s Root>;

        $i6 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>($r2);

        if $i5 >= $i6 goto label07;

        i14 = i14 + 1;

     label07:
        b16 = -1;

     label08:
        i17 = i14;

     label09:
        $i18 = i15 + b16;

        if i17 == $i18 goto label10;

        i7 = i17 - b16;

        z1 = staticinvoke <gen.lib.dotgen.mincross__c: boolean medians(h.ST_Agraph_s,int,int)>(r0, i17, i7);

        staticinvoke <gen.lib.dotgen.mincross__c: void reorder(h.ST_Agraph_s,int,boolean,boolean)>(r0, i17, z2, z1);

        i17 = i17 + b16;

        goto label09;

     label10:
        $z0 = staticinvoke <smetana.core.Macro: boolean NOT(boolean)>(z2);

        staticinvoke <gen.lib.dotgen.mincross__c: void transpose(h.ST_Agraph_s,boolean)>(r0, $z0);

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("14t80owwvm7io4ou6czb9ba9", "mincross_step");

        goto label14;

     label12:
        $r5 := @caughtexception;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("14t80owwvm7io4ou6czb9ba9", "mincross_step");

        throw $r5;

     label14:
        return;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static int local_cross(h.ST_elist, int)
    {
        h.ST_elist r0, $r1;
        int i0, $i1;

        r0 := @parameter0: h.ST_elist;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<h.ST_elist: h.ST_elist copy()>();

        $i1 = staticinvoke <gen.lib.dotgen.mincross__c: int local_cross_w_(h.ST_elist,int)>($r1, i0);

        return $i1;
    }

    private static int local_cross_w_(h.ST_elist, int)
    {
        int i1, $i3, $i4, $i5, i7, i8, i9;
        h.ST_elist r0;
        smetana.core.CArrayOfStar $r2, $r8, $r20;
        java.lang.Object $r3, $r9, $r21;
        h.ST_Agedge_s $r4, $r10, $r22;
        h.ST_Agnode_s $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4;
        h.ST_port $r13, $r15;
        h.ST_pointf $r14, $r16;
        byte $b6;
        java.lang.Throwable $r18;
        boolean z1;

        r0 := @parameter0: h.ST_elist;

        i1 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("aq18oa4k4grixvfjx7r2qnl6r", "local_cross");

     label01:
        if i1 <= 0 goto label02;

        z1 = 1;

        goto label03;

     label02:
        z1 = 0;

     label03:
        i7 = 0;

     label04:
        $r20 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r21 = virtualinvoke $r20.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i7);

        $r22 = (h.ST_Agedge_s) $r21;

        if $r22 == null goto label10;

        if z1 == 0 goto label07;

        i8 = i7 + 1;

     label05:
        $r8 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r9 = virtualinvoke $r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r10 = (h.ST_Agedge_s) $r9;

        if $r10 == null goto label09;

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r10);

        $i3 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r11);

        $r12 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r22);

        $i4 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r12);

        $i5 = $i3 - $i4;

        $d0 = (double) $i5;

        $r13 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>($r10);

        $r14 = $r13.<h.ST_port: h.ST_pointf p>;

        $d1 = $r14.<h.ST_pointf: double x>;

        $r15 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>($r22);

        $r16 = $r15.<h.ST_port: h.ST_pointf p>;

        $d2 = $r16.<h.ST_pointf: double x>;

        $d3 = $d1 - $d2;

        $d4 = $d0 * $d3;

        $b6 = $d4 cmpg 0.0;

        if $b6 >= 0 goto label06;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bw8rwv11yqzss88pad7ljil8a");

     label06:
        i8 = i8 + 1;

        goto label05;

     label07:
        i9 = i7 + 1;

     label08:
        $r2 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r4 = (h.ST_Agedge_s) $r3;

        if $r4 == null goto label09;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bza83c6rmihrkzyllwf0jm4tn");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("csrxg0y1azmvde7t833lm13sp");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("bw8rwv11yqzss88pad7ljil8a");

        i9 = i9 + 1;

        goto label08;

     label09:
        i7 = i7 + 1;

        goto label04;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aq18oa4k4grixvfjx7r2qnl6r", "local_cross");

        return 0;

     label11:
        $r18 := @caughtexception;

     label12:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("aq18oa4k4grixvfjx7r2qnl6r", "local_cross");

        throw $r18;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static int rcross(h.ST_Agraph_s, int)
    {
        h.ST_Agraph_s r0, $r7, $r48;
        smetana.core.CArray $r1, $r8, $r11, $r14, $r17, $r20, $r26, $r49, $r59;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, $i27, $i28, i29, i30, i31, i32, i33, i34;
        java.lang.Object $r2, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r35, $r39, $r50, $r60, $r63, $r67;
        h.ST_rank_t $r3, $r10, $r13, $r16, $r19, $r22, $r28, $r51, $r61;
        smetana.core.CArrayOfStar r4, $r23, $r29, $r38, $r66;
        smetana.core.Z $r5, $r6, $r33, $r42, $r44, $r46, $r47, $r52, $r53, $r54;
        boolean $z0, $z1;
        h.ST_elist $r25, $r31, $r37, $r65;
        h.ST_Agnode_s $r32, $r36, $r41, $r64, r70, r71;
        int[] $r34, $r43, $r45, $r55, $r56;
        h.ST_Agedge_s $r40, $r68;
        java.lang.Throwable $r57;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bk5nklhfqgg0uwkv7tv6dn8r2", "rcross");

     label01:
        i24 = 0;

        i25 = 0;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r3 = (h.ST_rank_t) $r2;

        r4 = $r3.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r5.<smetana.core.Z: int C>;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r7 = $r6.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r7);

        $i2 = i0 + 1;

        $r9 = virtualinvoke $r8.<smetana.core.CArray: java.lang.Object get__(int)>($i2);

        $r10 = (h.ST_rank_t) $r9;

        $i3 = $r10.<h.ST_rank_t: int n>;

        if $i1 > $i3 goto label02;

        $r46 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r47 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r48 = $r47.<smetana.core.Z: h.ST_Agraph_s Root>;

        $r49 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r48);

        $i20 = i0 + 1;

        $r50 = virtualinvoke $r49.<smetana.core.CArray: java.lang.Object get__(int)>($i20);

        $r51 = (h.ST_rank_t) $r50;

        $i21 = $r51.<h.ST_rank_t: int n>;

        $i22 = $i21 + 1;

        $r46.<smetana.core.Z: int C> = $i22;

        $r52 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r53 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i23 = $r53.<smetana.core.Z: int C>;

        $r54 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r55 = $r54.<smetana.core.Z: int[] Count>;

        $r56 = staticinvoke <smetana.core.Macro: int[] ALLOC_INT(int,int[])>($i23, $r55);

        $r52.<smetana.core.Z: int[] Count> = $r56;

     label02:
        i26 = 0;

     label03:
        $r59 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $i27 = i0 + 1;

        $r60 = virtualinvoke $r59.<smetana.core.CArray: java.lang.Object get__(int)>($i27);

        $r61 = (h.ST_rank_t) $r60;

        $i28 = $r61.<h.ST_rank_t: int n>;

        if i26 >= $i28 goto label04;

        $r44 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r45 = $r44.<smetana.core.Z: int[] Count>;

        $r45[i26] = 0;

        i26 = i26 + 1;

        goto label03;

     label04:
        i29 = 0;

     label05:
        $r11 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r12 = virtualinvoke $r11.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r13 = (h.ST_rank_t) $r12;

        $i4 = $r13.<h.ST_rank_t: int n>;

        if i29 >= $i4 goto label13;

        if i25 <= 0 goto label09;

        i30 = 0;

     label06:
        $r35 = virtualinvoke r4.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i29);

        $r36 = (h.ST_Agnode_s) $r35;

        $r37 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>($r36);

        $r38 = $r37.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r39 = virtualinvoke $r38.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i30);

        $r40 = (h.ST_Agedge_s) $r39;

        if $r40 == null goto label09;

        $r41 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r40);

        $i16 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r41);

        i31 = $i16 + 1;

     label07:
        if i31 > i25 goto label08;

        $r42 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r43 = $r42.<smetana.core.Z: int[] Count>;

        $i17 = $r43[i31];

        $i18 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>($r40);

        $i19 = $i17 * $i18;

        i24 = i24 + $i19;

        i31 = i31 + 1;

        goto label07;

     label08:
        i30 = i30 + 1;

        goto label06;

     label09:
        i32 = 0;

     label10:
        $r63 = virtualinvoke r4.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i29);

        $r64 = (h.ST_Agnode_s) $r63;

        $r65 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>($r64);

        $r66 = $r65.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r67 = virtualinvoke $r66.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i32);

        $r68 = (h.ST_Agedge_s) $r67;

        if $r68 == null goto label12;

        $r32 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r68);

        i11 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r32);

        if i11 <= i25 goto label11;

        i25 = i11;

     label11:
        $r33 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r34 = $r33.<smetana.core.Z: int[] Count>;

        $i12 = $r34[i11];

        $i13 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>($r68);

        $i14 = $i12 + $i13;

        $r34[i11] = $i14;

        i32 = i32 + 1;

        goto label10;

     label12:
        i29 = i29 + 1;

        goto label05;

     label13:
        i33 = 0;

     label14:
        $r14 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r15 = virtualinvoke $r14.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r16 = (h.ST_rank_t) $r15;

        $i5 = $r16.<h.ST_rank_t: int n>;

        if i33 >= $i5 goto label16;

        $r26 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r27 = virtualinvoke $r26.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r28 = (h.ST_rank_t) $r27;

        $r29 = $r28.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r30 = virtualinvoke $r29.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i33);

        r70 = (h.ST_Agnode_s) $r30;

        $z1 = staticinvoke <smetana.core.Macro: boolean ND_has_port(h.ST_Agnode_s)>(r70);

        if $z1 == 0 goto label15;

        $r31 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r70);

        $i10 = staticinvoke <gen.lib.dotgen.mincross__c: int local_cross(h.ST_elist,int)>($r31, 1);

        i24 = i24 + $i10;

     label15:
        i33 = i33 + 1;

        goto label14;

     label16:
        i34 = 0;

     label17:
        $r17 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $i6 = i0 + 1;

        $r18 = virtualinvoke $r17.<smetana.core.CArray: java.lang.Object get__(int)>($i6);

        $r19 = (h.ST_rank_t) $r18;

        $i7 = $r19.<h.ST_rank_t: int n>;

        if i34 >= $i7 goto label19;

        $r20 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $i8 = i0 + 1;

        $r21 = virtualinvoke $r20.<smetana.core.CArray: java.lang.Object get__(int)>($i8);

        $r22 = (h.ST_rank_t) $r21;

        $r23 = $r22.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r24 = virtualinvoke $r23.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i34);

        r71 = (h.ST_Agnode_s) $r24;

        $z0 = staticinvoke <smetana.core.Macro: boolean ND_has_port(h.ST_Agnode_s)>(r71);

        if $z0 == 0 goto label18;

        $r25 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r71);

        $i9 = staticinvoke <gen.lib.dotgen.mincross__c: int local_cross(h.ST_elist,int)>($r25, -1);

        i24 = i24 + $i9;

     label18:
        i34 = i34 + 1;

        goto label17;

     label19:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bk5nklhfqgg0uwkv7tv6dn8r2", "rcross");

        return i24;

     label20:
        $r57 := @caughtexception;

     label21:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bk5nklhfqgg0uwkv7tv6dn8r2", "rcross");

        throw $r57;

        catch java.lang.Throwable from label01 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public static int ncross(h.ST_Agraph_s)
    {
        smetana.core.Z $r0;
        int $i0, $i2, i3, $i4, i5, i6;
        smetana.core.CArray $r1, $r4, $r7, $r10;
        java.lang.Object $r2, $r5, $r8, $r11;
        h.ST_rank_t $r3, $r6, $r9, $r12;
        java.lang.Throwable $r13;
        h.ST_Agraph_s r15, r16;

        r15 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dbjmz2tnii2pn9sxg26ap6w5r", "ncross");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        r16 = $r0.<smetana.core.Z: h.ST_Agraph_s Root>;

        i5 = 0;

        i6 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r16);

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r16);

        if i6 >= $i0 goto label5;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r16);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r3 = (h.ST_rank_t) $r2;

        $i2 = $r3.<h.ST_rank_t: int valid>;

        if $i2 == 0 goto label3;

        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r16);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r12 = (h.ST_rank_t) $r11;

        $i4 = $r12.<h.ST_rank_t: int cache_nc>;

        i5 = i5 + $i4;

        goto label4;

     label3:
        i3 = staticinvoke <gen.lib.dotgen.mincross__c: int rcross(h.ST_Agraph_s,int)>(r16, i6);

        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r16);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r6 = (h.ST_rank_t) $r5;

        $r6.<h.ST_rank_t: int cache_nc> = i3;

        i5 = i5 + i3;

        $r7 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r16);

        $r8 = virtualinvoke $r7.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r9 = (h.ST_rank_t) $r8;

        $r9.<h.ST_rank_t: int valid> = 1;

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dbjmz2tnii2pn9sxg26ap6w5r", "ncross");

        return i5;

     label6:
        $r13 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dbjmz2tnii2pn9sxg26ap6w5r", "ncross");

        throw $r13;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static int ordercmpf(java.lang.Integer, java.lang.Integer)
    {
        java.lang.Integer r0, r1;
        int $i0, $i1, i2;
        java.lang.Throwable $r2;

        r0 := @parameter0: java.lang.Integer;

        r1 := @parameter1: java.lang.Integer;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8wrsq8a2vooekcm3cdtv5x3ke", "ordercmpf");

     label1:
        $i0 = virtualinvoke r0.<java.lang.Integer: int intValue()>();

        $i1 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        i2 = $i0 - $i1;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8wrsq8a2vooekcm3cdtv5x3ke", "ordercmpf");

        return i2;

     label3:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8wrsq8a2vooekcm3cdtv5x3ke", "ordercmpf");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean flat_mval(h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, $r8, $r14, r18, r21;
        h.ST_elist $r1, $r2, $r3, $r9;
        int $i0, $i1, $i3, $i4, $i6, $i7, i8, i9;
        java.lang.Object $r4, $r6, $r10, $r12;
        smetana.core.__ptr__ $r5;
        h.ST_Agedge_s $r7, $r11, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        byte $b2, $b5;
        java.lang.Throwable $r15;
        smetana.core.CArrayOfStar r17, r20;

        r0 := @parameter0: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7397kynkpqf2m1jkpmi8pgf0n", "flat_mval");

     label01:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_in(h.ST_Agnode_s)>(r0);

        $i0 = $r1.<h.ST_elist: int size>;

        if $i0 <= 0 goto label06;

        $r9 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_in(h.ST_Agnode_s)>(r0);

        r17 = $r9.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r10 = virtualinvoke r17.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r11 = (h.ST_Agedge_s) $r10;

        r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r11);

        i8 = 1;

     label02:
        $r12 = virtualinvoke r17.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i8);

        $r13 = (h.ST_Agedge_s) $r12;

        if $r13 == null goto label04;

        $r14 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r13);

        $i6 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r14);

        $i7 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r18);

        if $i6 <= $i7 goto label03;

        r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r13);

     label03:
        i8 = i8 + 1;

        goto label02;

     label04:
        $d3 = staticinvoke <smetana.core.Macro: double ND_mval(h.ST_Agnode_s)>(r18);

        $b5 = $d3 cmpl 0.0;

        if $b5 < 0 goto label11;

        $d4 = staticinvoke <smetana.core.Macro: double ND_mval(h.ST_Agnode_s)>(r18);

        $d5 = $d4 + 1.0;

        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r0, $d5);

     label05:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7397kynkpqf2m1jkpmi8pgf0n", "flat_mval");

        return 0;

     label06:
        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r0);

        $i1 = $r2.<h.ST_elist: int size>;

        if $i1 <= 0 goto label11;

        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r0);

        r20 = $r3.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r4 = virtualinvoke r20.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r5 = (smetana.core.__ptr__) $r4;

        r21 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r5);

        i9 = 1;

     label07:
        $r6 = virtualinvoke r20.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r7 = (h.ST_Agedge_s) $r6;

        if $r7 == null goto label09;

        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r7);

        $i3 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r8);

        $i4 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r21);

        if $i3 >= $i4 goto label08;

        r21 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r7);

     label08:
        i9 = i9 + 1;

        goto label07;

     label09:
        $d0 = staticinvoke <smetana.core.Macro: double ND_mval(h.ST_Agnode_s)>(r21);

        $b2 = $d0 cmpl 0.0;

        if $b2 <= 0 goto label11;

        $d1 = staticinvoke <smetana.core.Macro: double ND_mval(h.ST_Agnode_s)>(r21);

        $d2 = $d1 - 1.0;

        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r0, $d2);

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7397kynkpqf2m1jkpmi8pgf0n", "flat_mval");

        return 0;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7397kynkpqf2m1jkpmi8pgf0n", "flat_mval");

        return 1;

     label12:
        $r15 := @caughtexception;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7397kynkpqf2m1jkpmi8pgf0n", "flat_mval");

        throw $r15;

        catch java.lang.Throwable from label01 to label05 with label12;
        catch java.lang.Throwable from label06 to label10 with label12;
        catch java.lang.Throwable from label11 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static boolean medians(h.ST_Agraph_s, int, int)
    {
        smetana.core.Z $r0;
        int[] r1;
        h.ST_Agraph_s r2;
        smetana.core.CArray $r3, $r7, $r10;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14, $i15, $i16, i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, i45, i46, i47, i48, i49, i50;
        java.lang.Object $r4, $r8, $r11, $r13, $r16, $r19, $r26;
        h.ST_rank_t $r5, $r9, $r12;
        smetana.core.CArrayOfStar r6, $r18, $r25;
        h.ST_elist $r14, $r15, $r17, $r24;
        boolean $z0, z1;
        h.ST_Agedge_s $r20, $r27;
        double $d0, $d1, $d2, $d3, $d4;
        smetana.core.CFunction $r21;
        h.ST_Agnode_s $r22, $r28, r32, r35;
        h.ST_port $r23, $r29;
        java.lang.Throwable $r30;

        r2 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        i5 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("azvdpixwwxspl31wp7f4k4fmh", "medians");

     label01:
        z1 = 0;

        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        r1 = $r0.<smetana.core.Z: int[] TI_list>;

        $r3 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r2);

        $r4 = virtualinvoke $r3.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r5 = (h.ST_rank_t) $r4;

        r6 = $r5.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        i45 = 0;

     label02:
        $r7 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r2);

        $r8 = virtualinvoke $r7.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r9 = (h.ST_rank_t) $r8;

        $i1 = $r9.<h.ST_rank_t: int n>;

        if i45 >= $i1 goto label16;

        $r16 = virtualinvoke r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i45);

        r32 = (h.ST_Agnode_s) $r16;

        i46 = 0;

        if i5 <= i0 goto label05;

        i47 = 0;

     label03:
        $r24 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r32);

        $r25 = $r24.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r26 = virtualinvoke $r25.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i47);

        $r27 = (h.ST_Agedge_s) $r26;

        if $r27 == null goto label08;

        $i39 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>($r27);

        if $i39 <= 0 goto label04;

        $i40 = i46;

        i46 = i46 + 1;

        $r28 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r27);

        $i41 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r28);

        $i42 = 256 * $i41;

        $r29 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>($r27);

        $i43 = $r29.<h.ST_port: int order>;

        $i44 = $i42 + $i43;

        r1[$i40] = $i44;

     label04:
        i47 = i47 + 1;

        goto label03;

     label05:
        i48 = 0;

     label06:
        $r17 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r32);

        $r18 = $r17.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r19 = virtualinvoke $r18.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i48);

        $r20 = (h.ST_Agedge_s) $r19;

        if $r20 == null goto label08;

        $i33 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>($r20);

        if $i33 <= 0 goto label07;

        $i34 = i46;

        i46 = i46 + 1;

        $r22 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r20);

        $i35 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r22);

        $i36 = 256 * $i35;

        $r23 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>($r20);

        $i37 = $r23.<h.ST_port: int order>;

        $i38 = $i36 + $i37;

        r1[$i34] = $i38;

     label07:
        i48 = i48 + 1;

        goto label06;

     label08:
        tableswitch(i46)
        {
            case 0: goto label09;
            case 1: goto label10;
            case 2: goto label11;
            default: goto label12;
        };

     label09:
        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r32, -1.0);

        goto label15;

     label10:
        $i10 = r1[0];

        $d1 = (double) $i10;

        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r32, $d1);

        goto label15;

     label11:
        $i7 = r1[0];

        $i6 = r1[1];

        $i8 = $i7 + $i6;

        $i9 = $i8 / 2;

        $d0 = (double) $i9;

        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r32, $d0);

        goto label15;

     label12:
        $r21 = <gen.lib.dotgen.mincross__c: smetana.core.CFunction ordercmpf>;

        staticinvoke <smetana.core.JUtils: void qsort2(int[],int,smetana.core.CFunction)>(r1, i46, $r21);

        $i11 = i46 % 2;

        if $i11 == 0 goto label13;

        $i31 = i46 / 2;

        $i32 = r1[$i31];

        $d4 = (double) $i32;

        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r32, $d4);

        goto label15;

     label13:
        i12 = i46 / 2;

        i13 = i12 - 1;

        $i14 = i46 - 1;

        $i16 = r1[$i14];

        $i15 = r1[i12];

        i17 = $i16 - $i15;

        $i19 = r1[i13];

        $i18 = r1[0];

        i20 = $i19 - $i18;

        if i20 != i17 goto label14;

        $i28 = r1[i13];

        $i27 = r1[i12];

        $i29 = $i28 + $i27;

        $i30 = $i29 / 2;

        $d3 = (double) $i30;

        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r32, $d3);

        goto label15;

     label14:
        $i21 = r1[i13];

        $i24 = $i21 * i17;

        $i22 = r1[i12];

        $i23 = $i22 * i20;

        i49 = $i24 + $i23;

        $i25 = i20 + i17;

        $i26 = i49 / $i25;

        $d2 = (double) $i26;

        staticinvoke <smetana.core.Macro: void ND_mval(h.ST_Agnode_s,double)>(r32, $d2);

     label15:
        i45 = i45 + 1;

        goto label02;

     label16:
        i50 = 0;

     label17:
        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r2);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r12 = (h.ST_rank_t) $r11;

        $i2 = $r12.<h.ST_rank_t: int n>;

        if i50 >= $i2 goto label19;

        $r13 = virtualinvoke r6.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i50);

        r35 = (h.ST_Agnode_s) $r13;

        $r14 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r35);

        $i3 = $r14.<h.ST_elist: int size>;

        if $i3 != 0 goto label18;

        $r15 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r35);

        $i4 = $r15.<h.ST_elist: int size>;

        if $i4 != 0 goto label18;

        $z0 = staticinvoke <gen.lib.dotgen.mincross__c: boolean flat_mval(h.ST_Agnode_s)>(r35);

        z1 = z1 | $z0;

     label18:
        i50 = i50 + 1;

        goto label17;

     label19:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("azvdpixwwxspl31wp7f4k4fmh", "medians");

        return z1;

     label20:
        $r30 := @caughtexception;

     label21:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("azvdpixwwxspl31wp7f4k4fmh", "medians");

        throw $r30;

        catch java.lang.Throwable from label01 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public static java.lang.Object nodeposcmpf(smetana.core.CArrayOfStar, smetana.core.CArrayOfStar)
    {
        smetana.core.CArrayOfStar r0, r3;
        java.lang.Object $r1, $r4;
        h.ST_Agnode_s $r2, $r5;
        int $i0, $i1, $i2;
        java.lang.Integer r6;
        java.lang.Throwable $r7;

        r0 := @parameter0: smetana.core.CArrayOfStar;

        r3 := @parameter1: smetana.core.CArrayOfStar;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2vdhpcykq508ma83aif8sxcbd", "nodeposcmpf");

     label1:
        $r1 = virtualinvoke r0.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r2 = (h.ST_Agnode_s) $r1;

        $i0 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r2);

        $r4 = virtualinvoke r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r5 = (h.ST_Agnode_s) $r4;

        $i1 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r5);

        $i2 = $i0 - $i1;

        r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2vdhpcykq508ma83aif8sxcbd", "nodeposcmpf");

        return r6;

     label3:
        $r7 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2vdhpcykq508ma83aif8sxcbd", "nodeposcmpf");

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static int endpoint_class(h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0;
        int $i0, $i1;
        java.lang.Throwable $r1;

        r0 := @parameter0: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7j638prioxd97f74v1v4adbsf", "endpoint_class");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r0);

        if $i0 != 1 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7j638prioxd97f74v1v4adbsf", "endpoint_class");

        return 2;

     label3:
        $i1 = staticinvoke <smetana.core.Macro: int ND_weight_class(h.ST_Agnode_s)>(r0);

        if $i1 > 1 goto label5;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7j638prioxd97f74v1v4adbsf", "endpoint_class");

        return 1;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7j638prioxd97f74v1v4adbsf", "endpoint_class");

        return 0;

     label6:
        $r1 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7j638prioxd97f74v1v4adbsf", "endpoint_class");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label5 to label5 with label6;
    }

    public static void virtual_weight(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        int[][] $r1;
        h.ST_Agnode_s $r2, $r4;
        int $i0, $i1, i2, $i3, $i4;
        int[] $r3;
        java.lang.Throwable $r5;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("es57bn7ga4wc9tqtcixpn0451", "virtual_weight");

     label1:
        $r1 = <gen.lib.dotgen.mincross__c: int[][] table>;

        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $i0 = staticinvoke <gen.lib.dotgen.mincross__c: int endpoint_class(h.ST_Agnode_s)>($r2);

        $r3 = $r1[$i0];

        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $i1 = staticinvoke <gen.lib.dotgen.mincross__c: int endpoint_class(h.ST_Agnode_s)>($r4);

        i2 = $r3[$i1];

        $i3 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r0);

        $i4 = $i3 * i2;

        staticinvoke <smetana.core.Macro: void ED_weight(h.ST_Agedge_s,int)>(r0, $i4);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("es57bn7ga4wc9tqtcixpn0451", "virtual_weight");

        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("es57bn7ga4wc9tqtcixpn0451", "virtual_weight");

        throw $r5;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void mincross_options(h.ST_Agraph_s)
    {
        smetana.core.Z $r0, $r1, $r2;
        h.ST_Agraph_s r3;
        smetana.core.CString $r4, r5;
        double $d0;
        byte $b0;
        java.lang.Throwable $r8;

        r3 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7ru09oqbudpeofsthzveig2m2", "mincross_options");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r0.<smetana.core.Z: int MinQuit> = 8;

        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r1.<smetana.core.Z: int MaxIter> = 24;

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2.<smetana.core.Z: double Convergence> = 0.995;

        $r4 = new smetana.core.CString;

        specialinvoke $r4.<smetana.core.CString: void <init>(java.lang.String)>("mclimit");

        r5 = staticinvoke <gen.lib.cgraph.attr__c: smetana.core.CString agget(smetana.core.__ptr__,smetana.core.CString)>(r3, $r4);

        if r5 == null goto label2;

        $d0 = staticinvoke <smetana.core.JUtils: double atof(smetana.core.CString)>(r5);

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label2;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("4iu53eiz077u6joqgwawca8ya");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("38po81l36cibw6jc3qlsscpcu");

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7ru09oqbudpeofsthzveig2m2", "mincross_options");

        goto label5;

     label3:
        $r8 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7ru09oqbudpeofsthzveig2m2", "mincross_options");

        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        gen.lib.dotgen.mincross__c$1 $r1;
        gen.lib.dotgen.mincross__c$2 $r2;
        int[][] $r3;
        int[] $r4, $r5, $r6;

        $r0 = class "Lgen/lib/dotgen/mincross__c;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <gen.lib.dotgen.mincross__c: boolean $assertionsDisabled> = $z1;

        $r1 = new gen.lib.dotgen.mincross__c$1;

        specialinvoke $r1.<gen.lib.dotgen.mincross__c$1: void <init>(java.lang.String)>("ordercmpf");

        <gen.lib.dotgen.mincross__c: smetana.core.CFunction ordercmpf> = $r1;

        $r2 = new gen.lib.dotgen.mincross__c$2;

        specialinvoke $r2.<gen.lib.dotgen.mincross__c$2: void <init>(java.lang.String)>("nodeposcmpf");

        <gen.lib.dotgen.mincross__c: smetana.core.CFunction nodeposcmpf> = $r2;

        $r3 = newarray (int[])[3];

        $r4 = newarray (int)[3];

        $r4[0] = 1;

        $r4[1] = 1;

        $r4[2] = 1;

        $r3[0] = $r4;

        $r5 = newarray (int)[3];

        $r5[0] = 1;

        $r5[1] = 2;

        $r5[2] = 2;

        $r3[1] = $r5;

        $r6 = newarray (int)[3];

        $r6[0] = 1;

        $r6[1] = 2;

        $r6[2] = 4;

        $r3[2] = $r6;

        <gen.lib.dotgen.mincross__c: int[][] table> = $r3;

        return;
    }
}
