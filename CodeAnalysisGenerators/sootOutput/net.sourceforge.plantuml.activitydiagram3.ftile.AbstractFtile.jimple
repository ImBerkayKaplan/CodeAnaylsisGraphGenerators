public abstract class net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.activitydiagram3.ftile.Ftile
{
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cachedGeometry;

    public void <init>(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r0;
        net.sourceforge.plantuml.ISkinParam r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.ISkinParam skinParam> = r1;

        return;
    }

    public final net.sourceforge.plantuml.ISkinParam skinParam()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r0;
        net.sourceforge.plantuml.ISkinParam $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.ISkinParam skinParam>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.ISkinParam skinParam>;

        return $r2;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r0;
        net.sourceforge.plantuml.ISkinParam $r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        $r0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        $r0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        return $r0;
    }

    public java.util.Collection getInnerConnections()
    {
        java.util.List $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r3;
        java.lang.Class $r4;
        java.lang.String $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r7;
        net.sourceforge.plantuml.graphic.StringBounder r8;

        r3 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        r7 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r8 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    public final net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.style.Style)
    {
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r0;
        net.sourceforge.plantuml.LineParam $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3, $r5, r6;
        net.sourceforge.plantuml.style.Style r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        r4 := @parameter0: net.sourceforge.plantuml.style.Style;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        return $r5;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r1 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam activityBorder>;

        r6 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.LineParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r1, null);

        if r6 != null goto label2;

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        r6 = $r3;

     label2:
        return r6;
    }

    public java.util.List getWeldingPoints()
    {
        java.util.List $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public java.util.Collection getMyChildren()
    {
        java.lang.UnsupportedOperationException $r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r3;
        java.lang.Class $r4;
        java.lang.String $r6;

        r3 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        $r0 = new java.lang.UnsupportedOperationException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r0;
    }

    public net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r0;
        net.sourceforge.plantuml.AlignmentParam $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r1 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam arrowMessageAlignment>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r1, null, 0, null);

        return $r3;
    }

    public final net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r1, $r2, $r4;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cachedGeometry>;

        if $r1 != null goto label1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cachedGeometry> = $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cachedGeometry>;

        return $r2;
    }

    protected abstract net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder);

    public final net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }
}
