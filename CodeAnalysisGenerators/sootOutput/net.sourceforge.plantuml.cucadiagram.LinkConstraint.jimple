public class net.sourceforge.plantuml.cucadiagram.LinkConstraint extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.Link link1;
    private final net.sourceforge.plantuml.cucadiagram.Link link2;
    private final net.sourceforge.plantuml.cucadiagram.Display display;
    private double x1;
    private double y1;
    private double x2;
    private double y2;

    public void <init>(net.sourceforge.plantuml.cucadiagram.Link, net.sourceforge.plantuml.cucadiagram.Link, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.LinkConstraint r0;
        net.sourceforge.plantuml.cucadiagram.Link r1, r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.LinkConstraint;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Link;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Link;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: net.sourceforge.plantuml.cucadiagram.Link link1> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: net.sourceforge.plantuml.cucadiagram.Link link2> = r2;

        r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: net.sourceforge.plantuml.cucadiagram.Display display> = r3;

        return;
    }

    public void setPosition(net.sourceforge.plantuml.cucadiagram.Link, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0, $r2, $r3;
        net.sourceforge.plantuml.cucadiagram.LinkConstraint r1;
        java.lang.IllegalArgumentException $r4;
        java.awt.geom.Point2D r5;
        double $d0, $d1, $d2, $d3;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.LinkConstraint;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Link;

        r5 := @parameter1: java.awt.geom.Point2D;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: net.sourceforge.plantuml.cucadiagram.Link link1>;

        if r0 != $r2 goto label1;

        $d2 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        r1.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x1> = $d2;

        $d3 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>();

        r1.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y1> = $d3;

        goto label3;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: net.sourceforge.plantuml.cucadiagram.Link link2>;

        if r0 != $r3 goto label2;

        $d0 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        r1.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x2> = $d0;

        $d1 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>();

        r1.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y2> = $d1;

        goto label3;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label3:
        return;
    }

    public void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.cucadiagram.LinkConstraint r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, $d17, $d18, $d19, $d20, $d21, $d22, d23, $d24, $d25;
        byte $b0, $b1, $b2, $b3;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r1;
        net.sourceforge.plantuml.ugraphic.ULine $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r15;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, $r16, r17, r18, r19;
        net.sourceforge.plantuml.graphic.FontConfiguration $r7;
        net.sourceforge.plantuml.ISkinParam r8;
        net.sourceforge.plantuml.FontParam $r9;
        net.sourceforge.plantuml.cucadiagram.Display $r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r11;
        net.sourceforge.plantuml.graphic.TextBlock r12;
        net.sourceforge.plantuml.graphic.StringBounder $r13;
        net.sourceforge.plantuml.awt.geom.Dimension2D r14;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.LinkConstraint;

        r17 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r8 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        $d0 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x1>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $d25 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y1>;

        $b3 = $d25 cmpl 0.0;

        if $b3 != 0 goto label1;

        return;

     label1:
        $d1 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x2>;

        $b1 = $d1 cmpl 0.0;

        if $b1 != 0 goto label2;

        $d24 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y2>;

        $b2 = $d24 cmpl 0.0;

        if $b2 != 0 goto label2;

        return;

     label2:
        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        r18 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d3 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x2>;

        $d2 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x1>;

        $d7 = $d3 - $d2;

        $d5 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y2>;

        $d4 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y1>;

        $d6 = $d5 - $d4;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d7, $d6);

        $r4 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double,double,double)>(3.0, 3.0, 1.0);

        r19 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d9 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x1>;

        $d8 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y1>;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d9, $d8);

        $r6 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

        $r10 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r7 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r9 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ARROW>;

        specialinvoke $r7.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r8, $r9, null);

        $r11 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        r12 = virtualinvoke $r10.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r7, $r11, r8);

        $r13 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r14 = interfaceinvoke r12.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r13);

        $d11 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x1>;

        $d10 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double x2>;

        $d12 = $d11 + $d10;

        $d13 = $d12 / 2.0;

        $d14 = virtualinvoke r14.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d15 = $d14 / 2.0;

        d16 = $d13 - $d15;

        $d18 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y1>;

        $d17 = r0.<net.sourceforge.plantuml.cucadiagram.LinkConstraint: double y2>;

        $d19 = $d18 + $d17;

        $d20 = $d19 / 2.0;

        $d21 = virtualinvoke r14.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d22 = $d21 / 2.0;

        d23 = $d20 - $d22;

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d16, d23);

        $r16 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        interfaceinvoke r12.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r16);

        return;
    }
}
