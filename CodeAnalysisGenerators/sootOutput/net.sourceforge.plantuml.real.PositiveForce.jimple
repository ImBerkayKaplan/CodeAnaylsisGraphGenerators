class net.sourceforge.plantuml.real.PositiveForce extends java.lang.Object
{
    private final net.sourceforge.plantuml.real.Real fixedPoint;
    private final net.sourceforge.plantuml.real.RealMoveable movingPoint;
    private final double minimunDistance;
    private final boolean trace;
    private final java.lang.Throwable creationPoint;

    public void <init>(net.sourceforge.plantuml.real.Real, net.sourceforge.plantuml.real.RealMoveable, double)
    {
        net.sourceforge.plantuml.real.PositiveForce r0;
        net.sourceforge.plantuml.real.Real r1;
        net.sourceforge.plantuml.real.RealMoveable r2;
        double d0;
        java.lang.Throwable $r3, $r4;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: net.sourceforge.plantuml.real.PositiveForce;

        r1 := @parameter0: net.sourceforge.plantuml.real.Real;

        r2 := @parameter1: net.sourceforge.plantuml.real.RealMoveable;

        d0 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.real.PositiveForce: boolean trace> = 0;

        r0.<net.sourceforge.plantuml.real.PositiveForce: boolean trace> = 0;

        if r1 != r2 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        r0.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.Real fixedPoint> = r1;

        r0.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.RealMoveable movingPoint> = r2;

        r0.<net.sourceforge.plantuml.real.PositiveForce: double minimunDistance> = d0;

        $r3 = new java.lang.Throwable;

        specialinvoke $r3.<java.lang.Throwable: void <init>()>();

        r0.<net.sourceforge.plantuml.real.PositiveForce: java.lang.Throwable creationPoint> = $r3;

        $r4 = r0.<net.sourceforge.plantuml.real.PositiveForce: java.lang.Throwable creationPoint>;

        virtualinvoke $r4.<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r9;
        net.sourceforge.plantuml.real.PositiveForce r2;
        net.sourceforge.plantuml.real.Real $r3;
        net.sourceforge.plantuml.real.RealMoveable $r6;
        double $d0;
        java.lang.String $r10;

        r2 := @this: net.sourceforge.plantuml.real.PositiveForce;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PositiveForce fixed=");

        $r3 = r2.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.Real fixedPoint>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" moving=");

        $r6 = r2.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.RealMoveable movingPoint>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min=");

        $d0 = r2.<net.sourceforge.plantuml.real.PositiveForce: double minimunDistance>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public boolean apply()
    {
        net.sourceforge.plantuml.real.PositiveForce r0;
        net.sourceforge.plantuml.real.RealMoveable $r1, $r3;
        double d0, d1, $d2, d3, $d4, d5;
        net.sourceforge.plantuml.real.Real $r2, $r15, $r18;
        byte $b0;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r12, $r14, $r16;
        java.io.PrintStream $r6, $r10, $r13;
        java.lang.String $r9, $r17;
        java.lang.Throwable $r11;

        r0 := @this: net.sourceforge.plantuml.real.PositiveForce;

        $r1 = r0.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.RealMoveable movingPoint>;

        d0 = virtualinvoke $r1.<net.sourceforge.plantuml.real.RealMoveable: double getCurrentValue()>();

     label1:
        $r2 = r0.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.Real fixedPoint>;

        d1 = interfaceinvoke $r2.<net.sourceforge.plantuml.real.Real: double getCurrentValue()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pb with force ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("This force has been created here:");

        $r11 = r0.<net.sourceforge.plantuml.real.PositiveForce: java.lang.Throwable creationPoint>;

        virtualinvoke $r11.<java.lang.Throwable: void printStackTrace()>();

        $r13 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The fixed point has been created here: ");

        $r15 = r0.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.Real fixedPoint>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r18 = r0.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.Real fixedPoint>;

        interfaceinvoke $r18.<net.sourceforge.plantuml.real.Real: void printCreationStackTrace()>();

        throw $r4;

     label4:
        d5 = d0 - d1;

        $d2 = r0.<net.sourceforge.plantuml.real.PositiveForce: double minimunDistance>;

        d3 = d5 - $d2;

        $b0 = d3 cmpl 0.0;

        if $b0 < 0 goto label5;

        return 0;

     label5:
        $r3 = r0.<net.sourceforge.plantuml.real.PositiveForce: net.sourceforge.plantuml.real.RealMoveable movingPoint>;

        $d4 = neg d3;

        virtualinvoke $r3.<net.sourceforge.plantuml.real.RealMoveable: void move(double)>($d4);

        return 1;

        catch java.lang.IllegalStateException from label1 to label2 with label3;
    }
}
