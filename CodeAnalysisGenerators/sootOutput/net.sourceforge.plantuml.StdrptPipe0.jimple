public class net.sourceforge.plantuml.StdrptPipe0 extends java.lang.Object implements net.sourceforge.plantuml.Stdrpt
{

    public void <init>()
    {
        net.sourceforge.plantuml.StdrptPipe0 r0;

        r0 := @this: net.sourceforge.plantuml.StdrptPipe0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void printInfo(java.io.PrintStream, net.sourceforge.plantuml.core.Diagram)
    {
        net.sourceforge.plantuml.core.Diagram r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.error.PSystemError r1;
        java.io.PrintStream r2;
        net.sourceforge.plantuml.LineLocation $r3;
        int $i0;
        java.util.Collection $r4;
        java.util.Iterator r5;
        java.lang.Object $r6;
        net.sourceforge.plantuml.ErrorUml r7;
        java.lang.String $r8;
        net.sourceforge.plantuml.StdrptPipe0 r9;

        r9 := @this: net.sourceforge.plantuml.StdrptPipe0;

        r2 := @parameter0: java.io.PrintStream;

        r0 := @parameter1: net.sourceforge.plantuml.core.Diagram;

        $z0 = r0 instanceof net.sourceforge.plantuml.error.PSystemError;

        if $z0 == 0 goto label3;

        r1 = (net.sourceforge.plantuml.error.PSystemError) r0;

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>("ERROR");

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.error.PSystemError: net.sourceforge.plantuml.LineLocation getLineLocation()>();

        $i0 = interfaceinvoke $r3.<net.sourceforge.plantuml.LineLocation: int getPosition()>();

        virtualinvoke r2.<java.io.PrintStream: void println(int)>($i0);

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.error.PSystemError: java.util.Collection getErrorsUml()>();

        r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.ErrorUml) $r6;

        $r8 = virtualinvoke r7.<net.sourceforge.plantuml.ErrorUml: java.lang.String getError()>();

        virtualinvoke r2.<java.io.PrintStream: void println(java.lang.String)>($r8);

        goto label1;

     label2:
        virtualinvoke r2.<java.io.PrintStream: void flush()>();

     label3:
        return;
    }

    public void finalMessage(net.sourceforge.plantuml.ErrorStatus)
    {
        net.sourceforge.plantuml.ErrorStatus r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.StdrptPipe0 r1;

        r1 := @this: net.sourceforge.plantuml.StdrptPipe0;

        r0 := @parameter0: net.sourceforge.plantuml.ErrorStatus;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.ErrorStatus: boolean hasError()>();

        if $z0 == 0 goto label1;

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>("Some diagram description contains errors");

     label1:
        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.ErrorStatus: boolean isNoData()>();

        if $z1 == 0 goto label2;

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>("No diagram found");

     label2:
        return;
    }

    public void errorLine(int, java.io.File)
    {
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r6;
        int i0, $i1;
        java.io.File r4;
        java.lang.String $r5, $r7;
        net.sourceforge.plantuml.StdrptPipe0 r8;

        r8 := @this: net.sourceforge.plantuml.StdrptPipe0;

        i0 := @parameter0: int;

        r4 := @parameter1: java.io.File;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error line ");

        $i1 = i0 + 1;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in file: ");

        $r5 = virtualinvoke r4.<java.io.File: java.lang.String getPath()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r7);

        return;
    }
}
