public class net.sourceforge.plantuml.posimo.Cluster extends java.lang.Object implements net.sourceforge.plantuml.posimo.Clusterable
{
    private static int CPT;
    private final net.sourceforge.plantuml.posimo.Cluster parent;
    private final java.util.Collection blocs;
    private final java.util.Collection children;
    private final int uid;
    private double x;
    private double y;
    private double width;
    private double height;
    private final double titleWidth;
    private final double titleHeight;

    public void <init>(net.sourceforge.plantuml.posimo.Cluster, double, double)
    {
        net.sourceforge.plantuml.posimo.Cluster r0, r3;
        java.util.ArrayList $r1, $r2;
        int $i0, $i1;
        double d0, d1;
        java.util.Collection $r4;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        r3 := @parameter0: net.sourceforge.plantuml.posimo.Cluster;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection blocs> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection children> = $r2;

        $i0 = <net.sourceforge.plantuml.posimo.Cluster: int CPT>;

        $i1 = $i0 + 1;

        <net.sourceforge.plantuml.posimo.Cluster: int CPT> = $i1;

        r0.<net.sourceforge.plantuml.posimo.Cluster: int uid> = $i0;

        r0.<net.sourceforge.plantuml.posimo.Cluster: net.sourceforge.plantuml.posimo.Cluster parent> = r3;

        r0.<net.sourceforge.plantuml.posimo.Cluster: double titleWidth> = d0;

        r0.<net.sourceforge.plantuml.posimo.Cluster: double titleHeight> = d1;

        if r3 == null goto label1;

        $r4 = r3.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection children>;

        interfaceinvoke $r4.<java.util.Collection: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    public java.util.Collection getSubClusters()
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        java.util.Collection $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection children>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public java.util.Collection getRecursiveContents()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.posimo.Cluster r2;
        java.util.Collection $r3;

        r2 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        specialinvoke r2.<net.sourceforge.plantuml.posimo.Cluster: void addContentRecurse(java.util.Collection)>($r0);

        $r3 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r0);

        return $r3;
    }

    private void addContentRecurse(java.util.Collection)
    {
        java.util.Collection r0, $r2, $r3;
        net.sourceforge.plantuml.posimo.Cluster r1, r6;
        java.util.Iterator r4;
        boolean $z1;
        java.lang.Object $r5;

        r1 := @this: net.sourceforge.plantuml.posimo.Cluster;

        r0 := @parameter0: java.util.Collection;

        $r2 = r1.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection blocs>;

        interfaceinvoke r0.<java.util.Collection: boolean addAll(java.util.Collection)>($r2);

        $r3 = r1.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection children>;

        r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.posimo.Cluster) $r5;

        specialinvoke r6.<net.sourceforge.plantuml.posimo.Cluster: void addContentRecurse(java.util.Collection)>(r0);

        goto label1;

     label2:
        return;
    }

    public int getUid()
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $i0 = r0.<net.sourceforge.plantuml.posimo.Cluster: int uid>;

        return $i0;
    }

    public void addBloc(net.sourceforge.plantuml.posimo.Block)
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        net.sourceforge.plantuml.posimo.Block r1;
        java.util.Collection $r2;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        r1 := @parameter0: net.sourceforge.plantuml.posimo.Block;

        $r2 = r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection blocs>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return;
    }

    public net.sourceforge.plantuml.posimo.Cluster getParent()
    {
        net.sourceforge.plantuml.posimo.Cluster r0, $r1;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Cluster: net.sourceforge.plantuml.posimo.Cluster parent>;

        return $r1;
    }

    public java.util.Collection getContents()
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        java.util.Collection $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection blocs>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.posimo.Block getBlock(int)
    {
        net.sourceforge.plantuml.posimo.Cluster r0, r9;
        java.util.Collection $r1, $r2;
        boolean $z0, $z1;
        java.lang.Object $r3, $r5;
        int i0, $i1;
        net.sourceforge.plantuml.posimo.Block r4, r7;
        java.util.Iterator r6, r8;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection blocs>;

        r6 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.posimo.Block) $r5;

        $i1 = virtualinvoke r7.<net.sourceforge.plantuml.posimo.Block: int getUid()>();

        if $i1 != i0 goto label2;

        return r7;

     label2:
        goto label1;

     label3:
        $r2 = r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection children>;

        r8 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r3 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r9 = (net.sourceforge.plantuml.posimo.Cluster) $r3;

        r4 = virtualinvoke r9.<net.sourceforge.plantuml.posimo.Cluster: net.sourceforge.plantuml.posimo.Block getBlock(int)>(i0);

        if r4 == null goto label5;

        return r4;

     label5:
        goto label4;

     label6:
        return null;
    }

    public java.awt.geom.Point2D getPosition()
    {
        java.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.posimo.Cluster r1;
        double $d0, $d1;

        r1 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $r0 = new java.awt.geom.Point2D$Double;

        $d1 = r1.<net.sourceforge.plantuml.posimo.Cluster: double x>;

        $d0 = r1.<net.sourceforge.plantuml.posimo.Cluster: double y>;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getSize()
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.posimo.Cluster r1;
        double $d0, $d1;

        r1 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = r1.<net.sourceforge.plantuml.posimo.Cluster: double width>;

        $d0 = r1.<net.sourceforge.plantuml.posimo.Cluster: double height>;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    public final void setX(double)
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        d0 := @parameter0: double;

        r0.<net.sourceforge.plantuml.posimo.Cluster: double x> = d0;

        return;
    }

    public final void setY(double)
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        d0 := @parameter0: double;

        r0.<net.sourceforge.plantuml.posimo.Cluster: double y> = d0;

        return;
    }

    public final void setWidth(double)
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        d0 := @parameter0: double;

        r0.<net.sourceforge.plantuml.posimo.Cluster: double width> = d0;

        return;
    }

    public final void setHeight(double)
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        d0 := @parameter0: double;

        r0.<net.sourceforge.plantuml.posimo.Cluster: double height> = d0;

        return;
    }

    public final double getTitleWidth()
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $d0 = r0.<net.sourceforge.plantuml.posimo.Cluster: double titleWidth>;

        return $d0;
    }

    public final double getTitleHeight()
    {
        net.sourceforge.plantuml.posimo.Cluster r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.posimo.Cluster;

        $d0 = r0.<net.sourceforge.plantuml.posimo.Cluster: double titleHeight>;

        return $d0;
    }

    public void moveSvek(double, double)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.posimo.Cluster r1;
        double d0, d1;

        r1 := @this: net.sourceforge.plantuml.posimo.Cluster;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    static void <clinit>()
    {
        <net.sourceforge.plantuml.posimo.Cluster: int CPT> = 1;

        return;
    }
}
