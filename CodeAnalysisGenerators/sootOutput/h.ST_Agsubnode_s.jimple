public final class h.ST_Agsubnode_s extends smetana.core.UnsupportedStarStruct
{
    public final h.ST_dtlink_s seq_link;
    public final h.ST_dtlink_s id_link;
    public h.ST_Agnode_s node;
    public h.ST_dtlink_s in_id;
    public h.ST_dtlink_s out_id;
    public h.ST_dtlink_s in_seq;
    public h.ST_dtlink_s out_seq;

    public void <init>()
    {
        h.ST_Agsubnode_s r0;
        h.ST_dtlink_s $r1, $r2;

        r0 := @this: h.ST_Agsubnode_s;

        specialinvoke r0.<smetana.core.UnsupportedStarStruct: void <init>()>();

        $r1 = new h.ST_dtlink_s;

        specialinvoke $r1.<h.ST_dtlink_s: void <init>(smetana.core.__ptr__)>(r0);

        r0.<h.ST_Agsubnode_s: h.ST_dtlink_s seq_link> = $r1;

        $r2 = new h.ST_dtlink_s;

        specialinvoke $r2.<h.ST_dtlink_s: void <init>(smetana.core.__ptr__)>(r0);

        r0.<h.ST_Agsubnode_s: h.ST_dtlink_s id_link> = $r2;

        return;
    }

    public smetana.core.CStarStar in_id_AMP()
    {
        h.ST_Agsubnode_s$1 $r0;
        h.ST_Agsubnode_s r1;
        smetana.core.CStarStar $r2;

        r1 := @this: h.ST_Agsubnode_s;

        $r0 = new h.ST_Agsubnode_s$1;

        specialinvoke $r0.<h.ST_Agsubnode_s$1: void <init>(h.ST_Agsubnode_s)>(r1);

        $r2 = staticinvoke <smetana.core.CStarStar: smetana.core.CStarStar BUILD(smetana.core.ACCESS)>($r0);

        return $r2;
    }

    public smetana.core.CStarStar out_id_AMP()
    {
        h.ST_Agsubnode_s$2 $r0;
        h.ST_Agsubnode_s r1;
        smetana.core.CStarStar $r2;

        r1 := @this: h.ST_Agsubnode_s;

        $r0 = new h.ST_Agsubnode_s$2;

        specialinvoke $r0.<h.ST_Agsubnode_s$2: void <init>(h.ST_Agsubnode_s)>(r1);

        $r2 = staticinvoke <smetana.core.CStarStar: smetana.core.CStarStar BUILD(smetana.core.ACCESS)>($r0);

        return $r2;
    }

    public smetana.core.CStarStar in_seq_AMP()
    {
        h.ST_Agsubnode_s$3 $r0;
        h.ST_Agsubnode_s r1;
        smetana.core.CStarStar $r2;

        r1 := @this: h.ST_Agsubnode_s;

        $r0 = new h.ST_Agsubnode_s$3;

        specialinvoke $r0.<h.ST_Agsubnode_s$3: void <init>(h.ST_Agsubnode_s)>(r1);

        $r2 = staticinvoke <smetana.core.CStarStar: smetana.core.CStarStar BUILD(smetana.core.ACCESS)>($r0);

        return $r2;
    }

    public smetana.core.CStarStar out_seq_AMP()
    {
        h.ST_Agsubnode_s$4 $r0;
        h.ST_Agsubnode_s r1;
        smetana.core.CStarStar $r2;

        r1 := @this: h.ST_Agsubnode_s;

        $r0 = new h.ST_Agsubnode_s$4;

        specialinvoke $r0.<h.ST_Agsubnode_s$4: void <init>(h.ST_Agsubnode_s)>(r1);

        $r2 = staticinvoke <smetana.core.CStarStar: smetana.core.CStarStar BUILD(smetana.core.ACCESS)>($r0);

        return $r2;
    }

    public boolean isSameThan(smetana.core.__ptr__)
    {
        h.ST_Agsubnode_s r0, $r2;
        smetana.core.__ptr__ r1;
        boolean $z0;

        r0 := @this: h.ST_Agsubnode_s;

        r1 := @parameter0: smetana.core.__ptr__;

        $r2 = (h.ST_Agsubnode_s) r1;

        if r0 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object getTheField(smetana.core.OFFSET)
    {
        smetana.core.OFFSET r0;
        h.ST_Agsubnode_s r1;
        int $i0;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r4;
        h.ST_dtlink_s $r5, $r6;

        r1 := @this: h.ST_Agsubnode_s;

        r0 := @parameter0: smetana.core.OFFSET;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<smetana.core.OFFSET: int getSign()>();

        if $i0 != 0 goto label2;

     label1:
        return r1;

     label2:
        $r2 = virtualinvoke r0.<smetana.core.OFFSET: java.lang.String getField()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("id_link");

        if $z0 == 0 goto label3;

        $r6 = r1.<h.ST_Agsubnode_s: h.ST_dtlink_s id_link>;

        return $r6;

     label3:
        $r3 = virtualinvoke r0.<smetana.core.OFFSET: java.lang.String getField()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("seq_link");

        if $z1 == 0 goto label4;

        $r5 = r1.<h.ST_Agsubnode_s: h.ST_dtlink_s seq_link>;

        return $r5;

     label4:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public smetana.core.__ptr__ castTo(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.io.PrintStream $r2;
        java.lang.String $r5;
        h.ST_Agsubnode_s r6;
        smetana.core.__ptr__ $r7;

        r6 := @this: h.ST_Agsubnode_s;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Lh/ST_Agsubnode_s;" goto label1;

        return r6;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dest=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r7 = specialinvoke r6.<smetana.core.UnsupportedStarStruct: smetana.core.__ptr__ castTo(java.lang.Class)>(r0);

        return $r7;
    }
}
