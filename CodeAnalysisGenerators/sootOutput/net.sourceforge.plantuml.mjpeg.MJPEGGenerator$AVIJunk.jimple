class net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk extends java.lang.Object
{
    public byte[] fcc;
    public int size;
    public byte[] data;
    final net.sourceforge.plantuml.mjpeg.MJPEGGenerator this$0;

    public void <init>(net.sourceforge.plantuml.mjpeg.MJPEGGenerator)
    {
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk r0;
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator r1;
        byte[] $r2, $r3, $r4;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk;

        r1 := @parameter0: net.sourceforge.plantuml.mjpeg.MJPEGGenerator;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: net.sourceforge.plantuml.mjpeg.MJPEGGenerator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[4];

        $r2[0] = 74;

        $r2[1] = 85;

        $r2[2] = 78;

        $r2[3] = 75;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: byte[] fcc> = $r2;

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: int size> = 1808;

        $i0 = r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: int size>;

        $r3 = newarray (byte)[$i0];

        r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: byte[] data> = $r3;

        $r4 = r0.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: byte[] data>;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>($r4, 0);

        return;
    }

    public byte[] toBytes() throws java.io.IOException
    {
        java.io.ByteArrayOutputStream $r0;
        net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk r2;
        byte[] $r3, $r4, $r5, $r6;
        int $i0, $i1;

        r2 := @this: net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: byte[] fcc>;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r3);

        $i0 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: int size>;

        $i1 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: int swapInt(int)>($i0);

        $r4 = staticinvoke <net.sourceforge.plantuml.mjpeg.MJPEGGenerator: byte[] intBytes(int)>($i1);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r4);

        $r5 = r2.<net.sourceforge.plantuml.mjpeg.MJPEGGenerator$AVIJunk: byte[] data>;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[])>($r5);

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void close()>();

        $r6 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r6;
    }
}
