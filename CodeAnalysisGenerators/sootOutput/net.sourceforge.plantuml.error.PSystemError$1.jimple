class net.sourceforge.plantuml.error.PSystemError$1 extends java.lang.Object implements net.sourceforge.plantuml.svek.TextBlockBackcolored
{
    final java.awt.image.BufferedImage val$qrcode;
    final net.sourceforge.plantuml.ugraphic.UImage val$message;
    final double val$imHeight;
    final double val$imWidth;
    final net.sourceforge.plantuml.ugraphic.color.HColor val$backColor;
    final net.sourceforge.plantuml.error.PSystemError this$0;

    void <init>(net.sourceforge.plantuml.error.PSystemError, java.awt.image.BufferedImage, net.sourceforge.plantuml.ugraphic.UImage, double, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.error.PSystemError$1 r0;
        net.sourceforge.plantuml.error.PSystemError r1;
        java.awt.image.BufferedImage r2;
        net.sourceforge.plantuml.ugraphic.UImage r3;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.HColor r4;

        r0 := @this: net.sourceforge.plantuml.error.PSystemError$1;

        r1 := @parameter0: net.sourceforge.plantuml.error.PSystemError;

        r2 := @parameter1: java.awt.image.BufferedImage;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.UImage;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r4 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        r0.<net.sourceforge.plantuml.error.PSystemError$1: net.sourceforge.plantuml.error.PSystemError this$0> = r1;

        r0.<net.sourceforge.plantuml.error.PSystemError$1: java.awt.image.BufferedImage val$qrcode> = r2;

        r0.<net.sourceforge.plantuml.error.PSystemError$1: net.sourceforge.plantuml.ugraphic.UImage val$message> = r3;

        r0.<net.sourceforge.plantuml.error.PSystemError$1: double val$imHeight> = d0;

        r0.<net.sourceforge.plantuml.error.PSystemError$1: double val$imWidth> = d1;

        r0.<net.sourceforge.plantuml.error.PSystemError$1: net.sourceforge.plantuml.ugraphic.color.HColor val$backColor> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.error.PSystemError$1 r0;
        java.awt.image.BufferedImage $r1, $r5;
        net.sourceforge.plantuml.ugraphic.UImage $r2, r6, $r9, $r11, $r13, $r17;
        net.sourceforge.plantuml.ugraphic.PixelImage $r3;
        net.sourceforge.plantuml.ugraphic.AffineTransformType $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r7, $r10, $r14, $r16;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8, $r12, $r15;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.sourceforge.plantuml.error.PSystemError$1;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.error.PSystemError$1: java.awt.image.BufferedImage val$qrcode>;

        if $r1 != null goto label1;

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(1.0, 1.0);

        $r16 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r17 = r0.<net.sourceforge.plantuml.error.PSystemError$1: net.sourceforge.plantuml.ugraphic.UImage val$message>;

        interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r17);

        goto label2;

     label1:
        $r2 = new net.sourceforge.plantuml.ugraphic.UImage;

        $r3 = new net.sourceforge.plantuml.ugraphic.PixelImage;

        $r5 = r0.<net.sourceforge.plantuml.error.PSystemError$1: java.awt.image.BufferedImage val$qrcode>;

        $r4 = <net.sourceforge.plantuml.ugraphic.AffineTransformType: net.sourceforge.plantuml.ugraphic.AffineTransformType TYPE_NEAREST_NEIGHBOR>;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.PixelImage: void <init>(java.awt.image.BufferedImage,net.sourceforge.plantuml.ugraphic.AffineTransformType)>($r5, $r4);

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UImage: void <init>(net.sourceforge.plantuml.ugraphic.MutableImage)>($r3);

        r6 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UImage: net.sourceforge.plantuml.ugraphic.UImage scale(double)>(2.0);

        $r8 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = r0.<net.sourceforge.plantuml.error.PSystemError$1: double val$imHeight>;

        $r9 = r0.<net.sourceforge.plantuml.error.PSystemError$1: net.sourceforge.plantuml.ugraphic.UImage val$message>;

        $i0 = virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UImage: int getHeight()>();

        $d1 = (double) $i0;

        $d2 = $d0 - $d1;

        $d3 = $d2 / 2.0;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(1.0, $d3);

        $r10 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r11 = r0.<net.sourceforge.plantuml.error.PSystemError$1: net.sourceforge.plantuml.ugraphic.UImage val$message>;

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r11);

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r13 = r0.<net.sourceforge.plantuml.error.PSystemError$1: net.sourceforge.plantuml.ugraphic.UImage val$message>;

        $i1 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.UImage: int getWidth()>();

        $i2 = 1 + $i1;

        $d4 = (double) $i2;

        $d5 = r0.<net.sourceforge.plantuml.error.PSystemError$1: double val$imHeight>;

        $i3 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UImage: int getHeight()>();

        $d6 = (double) $i3;

        $d7 = $d5 - $d6;

        $d8 = $d7 / 2.0;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, $d8);

        $r14 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r6);

     label2:
        return;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.error.PSystemError$1 r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.InnerStrategy r3;

        r0 := @this: net.sourceforge.plantuml.error.PSystemError$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        return null;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.error.PSystemError$1 r1;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.error.PSystemError$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = r1.<net.sourceforge.plantuml.error.PSystemError$1: double val$imWidth>;

        $d3 = $d0 + 1.0;

        $d1 = r1.<net.sourceforge.plantuml.error.PSystemError$1: double val$imHeight>;

        $d2 = $d1 + 1.0;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d3, $d2);

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.error.PSystemError$1 r0;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.MinMax $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.error.PSystemError$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = r0.<net.sourceforge.plantuml.error.PSystemError$1: double val$imWidth>;

        $d3 = $d0 + 1.0;

        $d1 = r0.<net.sourceforge.plantuml.error.PSystemError$1: double val$imHeight>;

        $d2 = $d1 + 1.0;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax fromMax(double,double)>($d3, $d2);

        return $r1;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()
    {
        net.sourceforge.plantuml.error.PSystemError$1 r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.error.PSystemError$1;

        $r1 = r0.<net.sourceforge.plantuml.error.PSystemError$1: net.sourceforge.plantuml.ugraphic.color.HColor val$backColor>;

        return $r1;
    }
}
