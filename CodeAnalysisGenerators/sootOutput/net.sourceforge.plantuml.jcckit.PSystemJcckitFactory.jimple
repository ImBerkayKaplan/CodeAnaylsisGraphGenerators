public class net.sourceforge.plantuml.jcckit.PSystemJcckitFactory extends net.sourceforge.plantuml.command.PSystemBasicFactory
{
    private java.lang.StringBuilder data;
    private int width;
    private int height;

    public void <init>(net.sourceforge.plantuml.core.DiagramType)
    {
        net.sourceforge.plantuml.jcckit.PSystemJcckitFactory r0;
        net.sourceforge.plantuml.core.DiagramType r1;

        r0 := @this: net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;

        r1 := @parameter0: net.sourceforge.plantuml.core.DiagramType;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemBasicFactory: void <init>(net.sourceforge.plantuml.core.DiagramType)>(r1);

        return;
    }

    public net.sourceforge.plantuml.jcckit.PSystemJcckit initDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.jcckit.PSystemJcckitFactory r0;
        net.sourceforge.plantuml.core.DiagramType $r1, $r2, $r3, $r4, $r6;
        java.lang.IllegalStateException $r5;
        java.lang.String $r7, r8;
        java.lang.StringBuilder $r9;
        net.sourceforge.plantuml.core.UmlSource r10;
        net.sourceforge.plantuml.jcckit.PSystemJcckit $r11;
        net.sourceforge.plantuml.api.ThemeStyle r12;

        r0 := @this: net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;

        r12 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r10 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r8 := @parameter2: java.lang.String;

        r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: java.lang.StringBuilder data> = null;

        r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: int width> = 640;

        r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: int height> = 400;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: net.sourceforge.plantuml.core.DiagramType getDiagramType()>();

        $r2 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType UML>;

        if $r1 != $r2 goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: net.sourceforge.plantuml.core.DiagramType getDiagramType()>();

        $r4 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType JCCKIT>;

        if $r3 != $r4 goto label2;

        specialinvoke r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: void extractDimension(java.lang.String)>(r8);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: java.lang.StringBuilder data> = $r9;

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: net.sourceforge.plantuml.jcckit.PSystemJcckit createSystem(net.sourceforge.plantuml.core.UmlSource)>(r10);

        return $r11;

     label2:
        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: net.sourceforge.plantuml.core.DiagramType getDiagramType()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.core.DiagramType: java.lang.String name()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r5;
    }

    private void extractDimension(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.Pattern2 r0;
        java.lang.String r1, $r4, $r5;
        net.sourceforge.plantuml.command.regex.Matcher2 r2;
        boolean z0;
        net.sourceforge.plantuml.jcckit.PSystemJcckitFactory r3;
        int $i0, $i1;

        r3 := @this: net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;

        r1 := @parameter0: java.lang.String;

        r0 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("\\((\\d+),(\\d+)\\)");

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r1);

        z0 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r3.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: int width> = $i0;

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        r3.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: int height> = $i1;

     label1:
        return;
    }

    java.lang.String getDimension()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5;
        net.sourceforge.plantuml.jcckit.PSystemJcckitFactory r2;
        int $i0, $i1;
        java.lang.String $r6;

        r2 := @this: net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = r2.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: int width>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $i1 = r2.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: int height>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private net.sourceforge.plantuml.jcckit.PSystemJcckit createSystem(net.sourceforge.plantuml.core.UmlSource)
    {
        java.util.Properties $r0;
        java.io.StringReader $r2;
        net.sourceforge.plantuml.jcckit.PSystemJcckitFactory r3;
        java.lang.StringBuilder $r4, $r10, $r11, $r12;
        java.lang.String $r5, $r13;
        net.sourceforge.plantuml.jcckit.PSystemJcckit $r6;
        net.sourceforge.plantuml.core.UmlSource r7;
        int $i0, $i1;
        java.io.IOException $r8;

        r3 := @this: net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;

        r7 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

     label1:
        $r2 = new java.io.StringReader;

        $r4 = r3.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: java.lang.StringBuilder data>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.StringReader: void <init>(java.lang.String)>($r5);

        virtualinvoke $r0.<java.util.Properties: void load(java.io.Reader)>($r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r13);

        virtualinvoke $r8.<java.io.IOException: void printStackTrace()>();

        return null;

     label4:
        $r6 = new net.sourceforge.plantuml.jcckit.PSystemJcckit;

        $i1 = r3.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: int width>;

        $i0 = r3.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: int height>;

        specialinvoke $r6.<net.sourceforge.plantuml.jcckit.PSystemJcckit: void <init>(net.sourceforge.plantuml.core.UmlSource,java.util.Properties,int,int)>(r7, $r0, $i1, $i0);

        return $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public net.sourceforge.plantuml.jcckit.PSystemJcckit executeLine(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.jcckit.PSystemJcckit, java.lang.String)
    {
        net.sourceforge.plantuml.jcckit.PSystemJcckit r0, $r10, $r12;
        net.sourceforge.plantuml.jcckit.PSystemJcckitFactory r1;
        java.lang.StringBuilder $r2, $r4, $r7, $r11;
        java.lang.String r3, $r5;
        net.sourceforge.plantuml.core.UmlSource r9;
        boolean $z0;
        net.sourceforge.plantuml.api.ThemeStyle r13;

        r1 := @this: net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;

        r13 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r9 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r0 := @parameter2: net.sourceforge.plantuml.jcckit.PSystemJcckit;

        r3 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("jcckit");

        if $z0 == 0 goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        r1.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: java.lang.StringBuilder data> = $r11;

        specialinvoke r1.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: void extractDimension(java.lang.String)>(r3);

        $r12 = specialinvoke r1.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: net.sourceforge.plantuml.jcckit.PSystemJcckit createSystem(net.sourceforge.plantuml.core.UmlSource)>(r9);

        return $r12;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: java.lang.StringBuilder data>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r4 = r1.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: java.lang.StringBuilder data>;

        $r5 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>(r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = r1.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: java.lang.StringBuilder data>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r10 = specialinvoke r1.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: net.sourceforge.plantuml.jcckit.PSystemJcckit createSystem(net.sourceforge.plantuml.core.UmlSource)>(r9);

        return $r10;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem initDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.jcckit.PSystemJcckitFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        java.lang.String r3;
        net.sourceforge.plantuml.jcckit.PSystemJcckit $r4;

        r0 := @this: net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: net.sourceforge.plantuml.jcckit.PSystemJcckit initDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem executeLine(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.AbstractPSystem, java.lang.String)
    {
        net.sourceforge.plantuml.jcckit.PSystemJcckitFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.AbstractPSystem r3;
        java.lang.String r4;
        net.sourceforge.plantuml.jcckit.PSystemJcckit $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.jcckit.PSystemJcckitFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.AbstractPSystem;

        r4 := @parameter3: java.lang.String;

        $r5 = (net.sourceforge.plantuml.jcckit.PSystemJcckit) r3;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.jcckit.PSystemJcckitFactory: net.sourceforge.plantuml.jcckit.PSystemJcckit executeLine(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.jcckit.PSystemJcckit,java.lang.String)>(r1, r2, $r5, r4);

        return $r6;
    }
}
