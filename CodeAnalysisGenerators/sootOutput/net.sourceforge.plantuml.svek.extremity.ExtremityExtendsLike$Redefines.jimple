class net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines extends net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike
{
    private static final double XSUFFIX;
    private final net.sourceforge.plantuml.ugraphic.UStroke barStroke;
    private final net.sourceforge.plantuml.ugraphic.UTranslate pos;
    private final net.sourceforge.plantuml.ugraphic.ULine bar;

    public void <init>(java.awt.geom.Point2D, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines r0;
        java.awt.geom.Point2D r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point $r4, $r6;
        net.sourceforge.plantuml.ugraphic.ULine $r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines;

        r1 := @parameter0: java.awt.geom.Point2D;

        d0 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike: void <init>(java.awt.geom.Point2D,double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$1)>(r1, d0, r2, null);

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(2.0);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: net.sourceforge.plantuml.ugraphic.UStroke barStroke> = $r3;

        $r4 = new net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point;

        specialinvoke $r4.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: void <init>(double,double)>(-22.8, -7.0);

        $r6 = new net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point;

        specialinvoke $r6.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: void <init>(double,double)>(-22.8, 7.0);

        virtualinvoke $r4.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: void rotate(double)>(d0);

        virtualinvoke $r6.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: void rotate(double)>(d0);

        $r8 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d2 = $r6.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: double x>;

        $d1 = $r4.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: double x>;

        $d6 = $d2 - $d1;

        $d4 = $r6.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: double y>;

        $d3 = $r4.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: double y>;

        $d5 = $d4 - $d3;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d6, $d5);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: net.sourceforge.plantuml.ugraphic.ULine bar> = $r8;

        $r9 = virtualinvoke $r4.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: net.sourceforge.plantuml.ugraphic.UTranslate getPos(java.awt.geom.Point2D)>(r1);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: net.sourceforge.plantuml.ugraphic.UTranslate pos> = $r9;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3, $r5;
        net.sourceforge.plantuml.ugraphic.UStroke $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.ugraphic.ULine $r6;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        $r2 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: net.sourceforge.plantuml.ugraphic.UStroke barStroke>;

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: net.sourceforge.plantuml.ugraphic.UTranslate pos>;

        $r5 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r6 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: net.sourceforge.plantuml.ugraphic.ULine bar>;

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: double XSUFFIX> = -22.8;

        return;
    }
}
