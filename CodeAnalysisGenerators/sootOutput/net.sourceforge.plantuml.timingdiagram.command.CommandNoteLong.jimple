public class net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong extends net.sourceforge.plantuml.command.CommandMultilines2
{

    public void <init>()
    {
        net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.command.MultilinesStrategy $r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong;

        $r1 = staticinvoke <net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        $r2 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy REMOVE_STARTING_QUOTE>;

        specialinvoke r0.<net.sourceforge.plantuml.command.CommandMultilines2: void <init>(net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy)>($r1, $r2);

        return;
    }

    public java.lang.String getPatternEnd()
    {
        net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong r0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong;

        return "^end[%s]?note$";
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.timingdiagram.TimingDiagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        net.sourceforge.plantuml.StringLocated $r2, $r3;
        java.lang.String $r4, r6, $r11, $r18;
        net.sourceforge.plantuml.command.regex.RegexResult r5;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r7;
        net.sourceforge.plantuml.timingdiagram.Player r8;
        net.sourceforge.plantuml.cucadiagram.Display r9;
        net.sourceforge.plantuml.timingdiagram.TimeTick r10;
        net.sourceforge.plantuml.command.Position $r12;
        net.sourceforge.plantuml.command.CommandExecutionResult $r13, $r19;
        java.lang.StringBuilder $r14, $r15, $r16, $r17;
        net.sourceforge.plantuml.command.BlocLines r20, r21, r22;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong;

        r7 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r20 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong: net.sourceforge.plantuml.command.regex.IRegex getStartingPattern()>();

        $r2 = virtualinvoke r20.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.StringLocated getFirst()>();

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r5 = interfaceinvoke $r1.<net.sourceforge.plantuml.command.regex.IRegex: net.sourceforge.plantuml.command.regex.RegexResult matcher(java.lang.String)>($r4);

        r21 = virtualinvoke r20.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines subExtract(int,int)>(1, 1);

        r22 = virtualinvoke r21.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines removeEmptyColumns()>();

        r6 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("CODE", 0);

        r8 = virtualinvoke r7.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.Player getPlayer(java.lang.String)>(r6);

        if r8 != null goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unkown \"");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r18);

        return $r19;

     label1:
        r9 = virtualinvoke r22.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        r10 = virtualinvoke r7.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimeTick getNow()>();

        $r11 = virtualinvoke r5.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("POSITION", 0);

        $r12 = staticinvoke <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position fromString(java.lang.String)>($r11);

        virtualinvoke r8.<net.sourceforge.plantuml.timingdiagram.Player: void addNote(net.sourceforge.plantuml.timingdiagram.TimeTick,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.command.Position)>(r10, r9, $r12);

        $r13 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r13;
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        net.sourceforge.plantuml.command.regex.RegexConcat $r14;

        $r0 = class "Lnet/sourceforge/plantuml/timingdiagram/command/CommandNoteLong;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[11];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[1] = $r4;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("note");

        $r2[2] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[3] = $r6;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(top|bottom)");

        $r2[4] = $r7;

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[5] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("of");

        $r2[6] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[7] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE", "([\\p{L}_][%pLN_.]*)");

        $r2[8] = $r11;

        $r12 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[9] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[10] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r14;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r3 = (net.sourceforge.plantuml.timingdiagram.TimingDiagram) r1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.command.CommandNoteLong: net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.timingdiagram.TimingDiagram,net.sourceforge.plantuml.command.BlocLines)>($r3, r2);

        return $r4;
    }
}
