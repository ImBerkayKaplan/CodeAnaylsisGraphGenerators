public final enum class net.sourceforge.plantuml.ComponentStyle extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.ComponentStyle UML1;
    public static final enum net.sourceforge.plantuml.ComponentStyle UML2;
    public static final enum net.sourceforge.plantuml.ComponentStyle RECTANGLE;
    private static final net.sourceforge.plantuml.ComponentStyle[] $VALUES;

    public static net.sourceforge.plantuml.ComponentStyle[] values()
    {
        net.sourceforge.plantuml.ComponentStyle[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.ComponentStyle[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.ComponentStyle valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.ComponentStyle $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/ComponentStyle;", r0);

        $r2 = (net.sourceforge.plantuml.ComponentStyle) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.ComponentStyle r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.ComponentStyle;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public net.sourceforge.plantuml.graphic.USymbol toUSymbol()
    {
        net.sourceforge.plantuml.ComponentStyle r0;
        int[] $r1;
        int $i0, $i1;
        net.sourceforge.plantuml.graphic.USymbol $r2, $r3, $r4;
        java.lang.AssertionError $r5;

        r0 := @this: net.sourceforge.plantuml.ComponentStyle;

        $r1 = <net.sourceforge.plantuml.ComponentStyle$1: int[] $SwitchMap$net$sourceforge$plantuml$ComponentStyle>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.ComponentStyle: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r4 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol COMPONENT1>;

        return $r4;

     label2:
        $r3 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol COMPONENT2>;

        return $r3;

     label3:
        $r2 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol RECTANGLE>;

        return $r2;

     label4:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.ComponentStyle $r0, $r1, $r2, $r4, $r5, $r6;
        net.sourceforge.plantuml.ComponentStyle[] $r3;

        $r0 = new net.sourceforge.plantuml.ComponentStyle;

        specialinvoke $r0.<net.sourceforge.plantuml.ComponentStyle: void <init>(java.lang.String,int)>("UML1", 0);

        <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle UML1> = $r0;

        $r1 = new net.sourceforge.plantuml.ComponentStyle;

        specialinvoke $r1.<net.sourceforge.plantuml.ComponentStyle: void <init>(java.lang.String,int)>("UML2", 1);

        <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle UML2> = $r1;

        $r2 = new net.sourceforge.plantuml.ComponentStyle;

        specialinvoke $r2.<net.sourceforge.plantuml.ComponentStyle: void <init>(java.lang.String,int)>("RECTANGLE", 2);

        <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle RECTANGLE> = $r2;

        $r3 = newarray (net.sourceforge.plantuml.ComponentStyle)[3];

        $r4 = <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle UML1>;

        $r3[0] = $r4;

        $r5 = <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle UML2>;

        $r3[1] = $r5;

        $r6 = <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle RECTANGLE>;

        $r3[2] = $r6;

        <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle[] $VALUES> = $r3;

        return;
    }
}
