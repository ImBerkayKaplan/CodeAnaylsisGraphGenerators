class net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil extends java.lang.Object implements net.sourceforge.plantuml.creole.Stencil
{
    final net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox this$0;

    void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox $r1;
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft $r2;
        double $d0, $d1, d2;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox)>($r1);

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getLeft()>();

        $d1 = neg $d0;

        return $d1;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox $r2, $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        double $d0, $d1, $d2, d3;
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d3 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox this$0>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox$MyStencil: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox)>($r4);

        $d1 = virtualinvoke $r5.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getRight()>();

        $d2 = $d0 - $d1;

        return $d2;
    }
}
