public class net.sourceforge.plantuml.svek.DirectionalTextBlock extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final net.sourceforge.plantuml.graphic.TextBlock right;
    private final net.sourceforge.plantuml.graphic.TextBlock left;
    private final net.sourceforge.plantuml.graphic.TextBlock up;
    private final net.sourceforge.plantuml.graphic.TextBlock down;
    private final net.sourceforge.plantuml.svek.GuideLine guideline;

    public void <init>(net.sourceforge.plantuml.svek.GuideLine, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.svek.DirectionalTextBlock r0;
        net.sourceforge.plantuml.graphic.TextBlock r1, r2, r3, r4;
        net.sourceforge.plantuml.svek.GuideLine r5;

        r0 := @this: net.sourceforge.plantuml.svek.DirectionalTextBlock;

        r5 := @parameter0: net.sourceforge.plantuml.svek.GuideLine;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter4: net.sourceforge.plantuml.graphic.TextBlock;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock right> = r1;

        r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock left> = r2;

        r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock up> = r3;

        r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock down> = r4;

        r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.svek.GuideLine guideline> = r5;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.DirectionalTextBlock r0;
        net.sourceforge.plantuml.svek.GuideLine $r1;
        net.sourceforge.plantuml.Direction r2;
        int[] $r3;
        int $i0, $i1;
        net.sourceforge.plantuml.ugraphic.UGraphic r4;
        net.sourceforge.plantuml.graphic.TextBlock $r5, $r6, $r7, $r8;
        java.lang.UnsupportedOperationException $r9;

        r0 := @this: net.sourceforge.plantuml.svek.DirectionalTextBlock;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.svek.GuideLine guideline>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.svek.GuideLine: net.sourceforge.plantuml.Direction getArrowDirection()>();

        $r3 = <net.sourceforge.plantuml.svek.DirectionalTextBlock$1: int[] $SwitchMap$net$sourceforge$plantuml$Direction>;

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.Direction: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r8 = r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock right>;

        interfaceinvoke $r8.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r4);

        goto label6;

     label2:
        $r7 = r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock left>;

        interfaceinvoke $r7.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r4);

        goto label6;

     label3:
        $r6 = r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock up>;

        interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r4);

        goto label6;

     label4:
        $r5 = r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock down>;

        interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r4);

        goto label6;

     label5:
        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r9;

     label6:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.DirectionalTextBlock r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.svek.DirectionalTextBlock;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.svek.DirectionalTextBlock: net.sourceforge.plantuml.graphic.TextBlock right>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }
}
