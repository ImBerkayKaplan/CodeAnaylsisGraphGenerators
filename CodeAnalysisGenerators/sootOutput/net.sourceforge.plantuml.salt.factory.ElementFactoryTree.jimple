public class net.sourceforge.plantuml.salt.factory.ElementFactoryTree extends net.sourceforge.plantuml.salt.factory.AbstractElementFactoryComplex
{

    public void <init>(net.sourceforge.plantuml.salt.DataSource, net.sourceforge.plantuml.salt.Dictionary)
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryTree r0;
        net.sourceforge.plantuml.salt.DataSource r1;
        net.sourceforge.plantuml.salt.Dictionary r2;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryTree;

        r1 := @parameter0: net.sourceforge.plantuml.salt.DataSource;

        r2 := @parameter1: net.sourceforge.plantuml.salt.Dictionary;

        specialinvoke r0.<net.sourceforge.plantuml.salt.factory.AbstractElementFactoryComplex: void <init>(net.sourceforge.plantuml.salt.DataSource,net.sourceforge.plantuml.salt.Dictionary)>(r1, r2);

        return;
    }

    public net.sourceforge.plantuml.salt.Terminated create()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryTree r0;
        boolean $z0, z1, $z2, $z3;
        net.sourceforge.plantuml.salt.DataSource $r1, $r6, $r15, $r19, $r27;
        java.lang.Object $r2, $r4, $r7, $r9, $r16, $r20, $r22, $r29;
        net.sourceforge.plantuml.salt.Terminated $r3, $r8, $r17, $r28, r31, r32;
        java.lang.String r5, r10, r23, $r30;
        int $i0;
        net.sourceforge.plantuml.ugraphic.UFont r11;
        net.sourceforge.plantuml.salt.element.ElementTree $r12;
        net.sourceforge.plantuml.salt.Dictionary $r13;
        net.sourceforge.plantuml.salt.Terminator $r18, r21, $r24;
        char $c1;
        java.lang.IllegalStateException $r25;
        net.sourceforge.plantuml.salt.element.TableStrategy r26;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryTree;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: boolean ready()>();

        if $z0 != 0 goto label1;

        $r25 = new java.lang.IllegalStateException;

        specialinvoke $r25.<java.lang.IllegalStateException: void <init>()>();

        throw $r25;

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        $r3 = (net.sourceforge.plantuml.salt.Terminated) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r5 = (java.lang.String) $r4;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        $r8 = (net.sourceforge.plantuml.salt.Terminated) $r7;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r10 = (java.lang.String) $r9;

        r26 = <net.sourceforge.plantuml.salt.element.TableStrategy: net.sourceforge.plantuml.salt.element.TableStrategy DRAW_NONE>;

        $i0 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i0 != 2 goto label2;

        $c1 = virtualinvoke r10.<java.lang.String: char charAt(int)>(1);

        r26 = staticinvoke <net.sourceforge.plantuml.salt.element.TableStrategy: net.sourceforge.plantuml.salt.element.TableStrategy fromChar(char)>($c1);

     label2:
        r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont byDefault(int)>(12);

        $r12 = new net.sourceforge.plantuml.salt.element.ElementTree;

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: net.sourceforge.plantuml.salt.Dictionary getDictionary()>();

        specialinvoke $r12.<net.sourceforge.plantuml.salt.element.ElementTree: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.salt.element.TableStrategy)>(r11, $r13, r26);

        z1 = 1;

     label3:
        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r29 = virtualinvoke $r28.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        $r30 = (java.lang.String) $r29;

        $z2 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("}");

        if $z2 != 0 goto label8;

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r31 = (net.sourceforge.plantuml.salt.Terminated) $r20;

        r21 = virtualinvoke r31.<net.sourceforge.plantuml.salt.Terminated: net.sourceforge.plantuml.salt.Terminator getTerminator()>();

        $r22 = virtualinvoke r31.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r23 = (java.lang.String) $r22;

        if z1 == 0 goto label4;

        virtualinvoke $r12.<net.sourceforge.plantuml.salt.element.ElementTree: void addEntry(java.lang.String)>(r23);

        goto label5;

     label4:
        virtualinvoke $r12.<net.sourceforge.plantuml.salt.element.ElementTree: void addCellToEntry(java.lang.String)>(r23);

     label5:
        $r24 = <net.sourceforge.plantuml.salt.Terminator: net.sourceforge.plantuml.salt.Terminator NEWLINE>;

        if r21 != $r24 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        z1 = $z3;

        goto label3;

     label8:
        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r32 = (net.sourceforge.plantuml.salt.Terminated) $r16;

        $r17 = new net.sourceforge.plantuml.salt.Terminated;

        $r18 = virtualinvoke r32.<net.sourceforge.plantuml.salt.Terminated: net.sourceforge.plantuml.salt.Terminator getTerminator()>();

        specialinvoke $r17.<net.sourceforge.plantuml.salt.Terminated: void <init>(java.lang.Object,net.sourceforge.plantuml.salt.Terminator)>($r12, $r18);

        return $r17;
    }

    public boolean ready()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryTree r0;
        net.sourceforge.plantuml.salt.DataSource $r1, $r5;
        net.sourceforge.plantuml.salt.Terminated $r2, $r6;
        java.lang.Object $r3, $r7;
        java.lang.String r4, r8;
        boolean $z0, $z1, $z2, $z3;
        int $i0;
        char c1;
        net.sourceforge.plantuml.salt.element.TableStrategy $r9;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryTree;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("{");

        if $z0 == 0 goto label5;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryTree: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(1);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r8 = (java.lang.String) $r7;

        $z1 = virtualinvoke r8.<java.lang.String: boolean equals(java.lang.Object)>("T");

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $i0 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i0 != 2 goto label4;

        $z2 = virtualinvoke r8.<java.lang.String: boolean startsWith(java.lang.String)>("T");

        if $z2 == 0 goto label4;

        c1 = virtualinvoke r8.<java.lang.String: char charAt(int)>(1);

        $r9 = staticinvoke <net.sourceforge.plantuml.salt.element.TableStrategy: net.sourceforge.plantuml.salt.element.TableStrategy fromChar(char)>(c1);

        if $r9 == null goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;

     label5:
        return 0;
    }
}
