class net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic extends net.sourceforge.plantuml.ugraphic.UGraphicNo
{
    private final java.util.List all;
    final net.sourceforge.plantuml.svek.image.Footprint this$0;

    public void <init>(net.sourceforge.plantuml.svek.image.Footprint)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        net.sourceforge.plantuml.svek.image.Footprint r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        java.util.ArrayList $r3;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        r1 := @parameter0: net.sourceforge.plantuml.svek.image.Footprint;

        r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: net.sourceforge.plantuml.svek.image.Footprint this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.svek.image.Footprint: net.sourceforge.plantuml.graphic.StringBounder access$000(net.sourceforge.plantuml.svek.image.Footprint)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphicNo: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: java.util.List all> = $r3;

        return;
    }

    private void <init>(net.sourceforge.plantuml.svek.image.Footprint, net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic, net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0, r2;
        net.sourceforge.plantuml.svek.image.Footprint r1;
        net.sourceforge.plantuml.ugraphic.UChange r3;
        java.lang.Class[] $r4;
        boolean $z0;
        java.util.List $r5;
        java.lang.UnsupportedOperationException $r6;
        java.lang.Class $r7;
        java.lang.String $r8;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        r1 := @parameter0: net.sourceforge.plantuml.svek.image.Footprint;

        r2 := @parameter1: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.UChange;

        r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: net.sourceforge.plantuml.svek.image.Footprint this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphicNo: void <init>(net.sourceforge.plantuml.ugraphic.UGraphicNo,net.sourceforge.plantuml.ugraphic.UChange)>(r2, r3);

        $r4 = newarray (java.lang.Class)[4];

        $r4[0] = class "Lnet/sourceforge/plantuml/ugraphic/UBackground;";

        $r4[1] = class "Lnet/sourceforge/plantuml/ugraphic/color/HColor;";

        $r4[2] = class "Lnet/sourceforge/plantuml/ugraphic/UStroke;";

        $r4[3] = class "Lnet/sourceforge/plantuml/ugraphic/UTranslate;";

        $z0 = staticinvoke <net.sourceforge.plantuml.utils.ObjectUtils: boolean instanceOfAny(java.lang.Object,java.lang.Class[])>(r3, $r4);

        if $z0 != 0 goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label1:
        $r5 = r2.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: java.util.List all>;

        r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: java.util.List all> = $r5;

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic $r0, r1;
        net.sourceforge.plantuml.ugraphic.UChange r2;
        net.sourceforge.plantuml.svek.image.Footprint $r3;

        r1 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $r0 = new net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        $r3 = r1.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: net.sourceforge.plantuml.svek.image.Footprint this$0>;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void <init>(net.sourceforge.plantuml.svek.image.Footprint,net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic,net.sourceforge.plantuml.ugraphic.UChange)>($r3, r1, r2);

        return $r0;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, $r2;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.UShape r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.UnsupportedOperationException $r4;
        java.lang.Class $r5;
        java.lang.String $r6;
        net.sourceforge.plantuml.ugraphic.UEmpty $r7;
        net.sourceforge.plantuml.ugraphic.URectangle $r8;
        net.sourceforge.plantuml.ugraphic.UPath $r9;
        net.sourceforge.plantuml.ugraphic.UImage $r10;
        net.sourceforge.plantuml.ugraphic.UText $r11;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        d0 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate()>();

        d1 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $z0 = r3 instanceof net.sourceforge.plantuml.ugraphic.UText;

        if $z0 == 0 goto label1;

        $r11 = (net.sourceforge.plantuml.ugraphic.UText) r3;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void drawText(double,double,net.sourceforge.plantuml.ugraphic.UText)>(d0, d1, $r11);

        goto label8;

     label1:
        $z1 = r3 instanceof net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        if $z1 == 0 goto label2;

        goto label8;

     label2:
        $z2 = r3 instanceof net.sourceforge.plantuml.ugraphic.ULine;

        if $z2 == 0 goto label3;

        goto label8;

     label3:
        $z3 = r3 instanceof net.sourceforge.plantuml.ugraphic.UImage;

        if $z3 == 0 goto label4;

        $r10 = (net.sourceforge.plantuml.ugraphic.UImage) r3;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void drawImage(double,double,net.sourceforge.plantuml.ugraphic.UImage)>(d0, d1, $r10);

        goto label8;

     label4:
        $z4 = r3 instanceof net.sourceforge.plantuml.ugraphic.UPath;

        if $z4 == 0 goto label5;

        $r9 = (net.sourceforge.plantuml.ugraphic.UPath) r3;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void drawPath(double,double,net.sourceforge.plantuml.ugraphic.UPath)>(d0, d1, $r9);

        goto label8;

     label5:
        $z5 = r3 instanceof net.sourceforge.plantuml.ugraphic.URectangle;

        if $z5 == 0 goto label6;

        $r8 = (net.sourceforge.plantuml.ugraphic.URectangle) r3;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void drawRectangle(double,double,net.sourceforge.plantuml.ugraphic.URectangle)>(d0, d1, $r8);

        goto label8;

     label6:
        $z6 = r3 instanceof net.sourceforge.plantuml.ugraphic.UEmpty;

        if $z6 == 0 goto label7;

        $r7 = (net.sourceforge.plantuml.ugraphic.UEmpty) r3;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void drawEmpty(double,double,net.sourceforge.plantuml.ugraphic.UEmpty)>(d0, d1, $r7);

        goto label8;

     label7:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label8:
        return;
    }

    public net.sourceforge.plantuml.ugraphic.color.ColorMapper getColorMapper()
    {
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r0;
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r1;

        r1 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        return $r0;
    }

    private void addPoint(double, double)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        java.awt.geom.Point2D$Double $r1;
        double d0, d1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: java.util.List all>;

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, d1);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    private void drawText(double, double, net.sourceforge.plantuml.ugraphic.UText)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1;
        net.sourceforge.plantuml.ugraphic.UText r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.ugraphic.UFont $r4;
        java.lang.String $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        d2 := @parameter0: double;

        d11 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.UText;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UText: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UText: java.lang.String getText()>();

        r6 = interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.StringBounder: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r4, $r5);

        $d0 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = $d0 - 1.5;

        d12 = d11 - $d1;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>(d2, d12);

        $d3 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = d12 + $d3;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>(d2, $d4);

        $d5 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = d2 + $d5;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>($d6, d12);

        $d7 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d8 = d2 + $d7;

        $d9 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d10 = d12 + $d9;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>($d8, $d10);

        return;
    }

    private void drawImage(double, double, net.sourceforge.plantuml.ugraphic.UImage)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UImage r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.ugraphic.UImage;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>(d0, d1);

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UImage: int getHeight()>();

        $d2 = (double) $i0;

        $d3 = d1 + $d2;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>(d0, $d3);

        $i1 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UImage: int getWidth()>();

        $d4 = (double) $i1;

        $d5 = d0 + $d4;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>($d5, d1);

        $i2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UImage: int getWidth()>();

        $d6 = (double) $i2;

        $d7 = d0 + $d6;

        $i3 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UImage: int getHeight()>();

        $d8 = (double) $i3;

        $d9 = d1 + $d8;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>($d7, $d9);

        return;
    }

    private void drawPath(double, double, net.sourceforge.plantuml.ugraphic.UPath)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        double d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UPath r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.ugraphic.UPath;

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPath: double getMinX()>();

        $d3 = d0 + $d1;

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPath: double getMinY()>();

        $d5 = d2 + $d4;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>($d3, $d5);

        $d6 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPath: double getMaxX()>();

        $d7 = d0 + $d6;

        $d8 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UPath: double getMaxY()>();

        $d9 = d2 + $d8;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>($d7, $d9);

        return;
    }

    private void drawRectangle(double, double, net.sourceforge.plantuml.ugraphic.URectangle)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        double d0, d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.URectangle r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>(d0, d1);

        $d2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        $d3 = d0 + $d2;

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        $d5 = d1 + $d4;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>($d3, $d5);

        return;
    }

    private void drawEmpty(double, double, net.sourceforge.plantuml.ugraphic.UEmpty)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        double d0, d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UEmpty r1;

        r0 := @this: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.ugraphic.UEmpty;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>(d0, d1);

        $d2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UEmpty: double getWidth()>();

        $d3 = d0 + $d2;

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UEmpty: double getHeight()>();

        $d5 = d1 + $d4;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: void addPoint(double,double)>($d3, $d5);

        return;
    }

    static java.util.List access$100(net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic)
    {
        net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic r0;
        java.util.List $r1;

        r0 := @parameter0: net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.Footprint$MyUGraphic: java.util.List all>;

        return $r1;
    }
}
