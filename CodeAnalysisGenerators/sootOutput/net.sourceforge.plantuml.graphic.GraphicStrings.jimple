public class net.sourceforge.plantuml.graphic.GraphicStrings extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.svek.IEntityImage
{
    private final double margin;
    private final net.sourceforge.plantuml.ugraphic.color.HColor background;
    private static final net.sourceforge.plantuml.ugraphic.color.HColor hyperlinkColor;
    private static final boolean useUnderlineForHyperlink;
    private final java.util.List strings;
    private final java.awt.image.BufferedImage image;
    private final double imagePadding;
    private final net.sourceforge.plantuml.graphic.GraphicPosition position;
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final net.sourceforge.plantuml.creole.CreoleMode mode;

    public static net.sourceforge.plantuml.svek.IEntityImage createForError(java.util.List, boolean)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings $r0;
        java.util.List r1;
        boolean z0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r5;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3, $r4;
        net.sourceforge.plantuml.creole.CreoleMode $r6;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $r0 = new net.sourceforge.plantuml.graphic.GraphicStrings;

        $r2 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.ugraphic.color.HColor getForeColor(boolean)>(z0);

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration sansSerif14(net.sourceforge.plantuml.ugraphic.color.HColor)>($r2);

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration bold()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor(boolean)>(z0);

        $r6 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode NO_CREOLE>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.GraphicStrings: void <init>(java.util.List,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ugraphic.color.HColor,java.awt.image.BufferedImage,net.sourceforge.plantuml.graphic.GraphicPosition,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r4, $r5, null, null, $r6);

        return $r0;
    }

    private static net.sourceforge.plantuml.ugraphic.color.HColor getForeColor(boolean)
    {
        boolean z0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r0;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r1;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        return $r1;

     label1:
        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor MY_GREEN>;

        return $r0;
    }

    private static net.sourceforge.plantuml.ugraphic.color.HColor getBackColor(boolean)
    {
        boolean z0;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor RED_LIGHT>;

        return $r1;

     label1:
        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        return $r0;
    }

    public static net.sourceforge.plantuml.svek.TextBlockBackcolored createGreenOnBlackMonospaced(java.util.List)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings $r0;
        java.util.List r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.creole.CreoleMode $r4;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r5;

        r1 := @parameter0: java.util.List;

        $r0 = new net.sourceforge.plantuml.graphic.GraphicStrings;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor GREEN>;

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration monospaced14(net.sourceforge.plantuml.ugraphic.color.HColor)>($r2);

        $r5 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r4 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.GraphicStrings: void <init>(java.util.List,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ugraphic.color.HColor,java.awt.image.BufferedImage,net.sourceforge.plantuml.graphic.GraphicPosition,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r3, $r5, null, null, $r4);

        return $r0;
    }

    public static net.sourceforge.plantuml.svek.TextBlockBackcolored createBlackOnWhite(java.util.List)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings $r0;
        java.util.List r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2, $r5;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.creole.CreoleMode $r4;

        r1 := @parameter0: java.util.List;

        $r0 = new net.sourceforge.plantuml.graphic.GraphicStrings;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration sansSerif12(net.sourceforge.plantuml.ugraphic.color.HColor)>($r2);

        $r5 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r4 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.GraphicStrings: void <init>(java.util.List,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ugraphic.color.HColor,java.awt.image.BufferedImage,net.sourceforge.plantuml.graphic.GraphicPosition,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r3, $r5, null, null, $r4);

        return $r0;
    }

    public static net.sourceforge.plantuml.svek.TextBlockBackcolored createBlackOnWhiteMonospaced(java.util.List)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings $r0;
        java.util.List r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2, $r5;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.creole.CreoleMode $r4;

        r1 := @parameter0: java.util.List;

        $r0 = new net.sourceforge.plantuml.graphic.GraphicStrings;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration monospaced14(net.sourceforge.plantuml.ugraphic.color.HColor)>($r2);

        $r5 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r4 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.GraphicStrings: void <init>(java.util.List,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ugraphic.color.HColor,java.awt.image.BufferedImage,net.sourceforge.plantuml.graphic.GraphicPosition,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r3, $r5, null, null, $r4);

        return $r0;
    }

    public static net.sourceforge.plantuml.svek.TextBlockBackcolored createBlackOnWhite(java.util.List, java.awt.image.BufferedImage, net.sourceforge.plantuml.graphic.GraphicPosition)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings $r0;
        java.util.List r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2, $r7;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        java.awt.image.BufferedImage r4;
        net.sourceforge.plantuml.graphic.GraphicPosition r5;
        net.sourceforge.plantuml.creole.CreoleMode $r6;

        r1 := @parameter0: java.util.List;

        r4 := @parameter1: java.awt.image.BufferedImage;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.GraphicPosition;

        $r0 = new net.sourceforge.plantuml.graphic.GraphicStrings;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration sansSerif12(net.sourceforge.plantuml.ugraphic.color.HColor)>($r2);

        $r7 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r6 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.GraphicStrings: void <init>(java.util.List,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ugraphic.color.HColor,java.awt.image.BufferedImage,net.sourceforge.plantuml.graphic.GraphicPosition,net.sourceforge.plantuml.creole.CreoleMode)>(r1, $r3, $r7, r4, r5, $r6);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.FontConfiguration sansSerif12(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.FontConfiguration $r0;
        net.sourceforge.plantuml.ugraphic.UFont $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r3;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(12);

        $r3 = <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.ugraphic.color.HColor hyperlinkColor>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>($r1, r2, $r3, 1);

        return $r0;
    }

    public static net.sourceforge.plantuml.graphic.FontConfiguration sansSerif14(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.FontConfiguration $r0;
        net.sourceforge.plantuml.ugraphic.UFont $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r3;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(14);

        $r3 = <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.ugraphic.color.HColor hyperlinkColor>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>($r1, r2, $r3, 1);

        return $r0;
    }

    private static net.sourceforge.plantuml.graphic.FontConfiguration monospaced14(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.FontConfiguration $r0;
        net.sourceforge.plantuml.ugraphic.UFont $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r3;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont monospaced(int)>(14);

        $r3 = <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.ugraphic.color.HColor hyperlinkColor>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>($r1, r2, $r3, 1);

        return $r0;
    }

    private void <init>(java.util.List, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.ugraphic.color.HColor, java.awt.image.BufferedImage, net.sourceforge.plantuml.graphic.GraphicPosition, net.sourceforge.plantuml.creole.CreoleMode)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings r0;
        java.util.List r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        java.awt.image.BufferedImage r3;
        net.sourceforge.plantuml.graphic.GraphicPosition r4;
        net.sourceforge.plantuml.creole.CreoleMode r5;
        net.sourceforge.plantuml.graphic.FontConfiguration r6;

        r0 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        r1 := @parameter0: java.util.List;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter3: java.awt.image.BufferedImage;

        r4 := @parameter4: net.sourceforge.plantuml.graphic.GraphicPosition;

        r5 := @parameter5: net.sourceforge.plantuml.creole.CreoleMode;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: double imagePadding> = 30.0;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: double margin> = 5.0;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: double margin> = 5.0;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: double imagePadding> = 30.0;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: java.util.List strings> = r1;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.ugraphic.color.HColor background> = r2;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image> = r3;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.GraphicPosition position> = r4;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.creole.CreoleMode mode> = r5;

        r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r6;

        return;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTextBlock()
    {
        net.sourceforge.plantuml.graphic.GraphicStrings r0;
        java.util.List $r1, $r12;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.creole.CreoleMode $r3, $r4, $r8;
        net.sourceforge.plantuml.SpriteContainerEmpty $r5;
        net.sourceforge.plantuml.graphic.FontConfiguration $r6, $r11;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r9;
        net.sourceforge.plantuml.graphic.TextBlockRaw $r10;

        r0 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        $r1 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: java.util.List strings>;

        r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r1);

        $r4 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.creole.CreoleMode mode>;

        $r3 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode NO_CREOLE>;

        if $r4 != $r3 goto label1;

        $r10 = new net.sourceforge.plantuml.graphic.TextBlockRaw;

        $r12 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: java.util.List strings>;

        $r11 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        specialinvoke $r10.<net.sourceforge.plantuml.graphic.TextBlockRaw: void <init>(java.util.List,net.sourceforge.plantuml.graphic.FontConfiguration)>($r12, $r11);

        return $r10;

     label1:
        $r6 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r7 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r5 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r5.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        $r8 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.creole.CreoleMode mode>;

        $r9 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create7(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>($r6, $r7, $r5, $r8);

        return $r9;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UTranslate $r0, $r15, $r22, $r30;
        net.sourceforge.plantuml.graphic.GraphicStrings r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic $r7, $r17, $r25, $r33, r38, r39;
        java.awt.image.BufferedImage $r8, $r16, $r21, $r23, $r24, $r29, $r31, $r32, $r37;
        net.sourceforge.plantuml.graphic.GraphicPosition $r9, $r10, $r11, $r12, $r13, $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        int $i0, $i1, $i2, $i3, $i4;
        net.sourceforge.plantuml.ugraphic.UImage $r18, $r26, $r34;
        net.sourceforge.plantuml.ugraphic.PixelImage $r19, $r27, $r35;
        net.sourceforge.plantuml.ugraphic.AffineTransformType $r20, $r28, $r36;

        r1 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        r38 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(5.0, 5.0);

        r39 = interfaceinvoke r38.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r2 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r1.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r4 = specialinvoke r1.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r5 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r7 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

        $r8 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        if $r8 == null goto label3;

        $r10 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.GraphicPosition position>;

        $r9 = <net.sourceforge.plantuml.graphic.GraphicPosition: net.sourceforge.plantuml.graphic.GraphicPosition BOTTOM>;

        if $r10 != $r9 goto label1;

        $r30 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d10 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r31 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $i3 = virtualinvoke $r31.<java.awt.image.BufferedImage: int getWidth()>();

        $d11 = (double) $i3;

        $d12 = $d10 - $d11;

        $d13 = $d12 / 2.0;

        $d14 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r32 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $i4 = virtualinvoke $r32.<java.awt.image.BufferedImage: int getHeight()>();

        $d15 = (double) $i4;

        $d16 = $d14 - $d15;

        specialinvoke $r30.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d13, $d16);

        $r33 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r30);

        $r34 = new net.sourceforge.plantuml.ugraphic.UImage;

        $r35 = new net.sourceforge.plantuml.ugraphic.PixelImage;

        $r37 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $r36 = <net.sourceforge.plantuml.ugraphic.AffineTransformType: net.sourceforge.plantuml.ugraphic.AffineTransformType TYPE_BILINEAR>;

        specialinvoke $r35.<net.sourceforge.plantuml.ugraphic.PixelImage: void <init>(java.awt.image.BufferedImage,net.sourceforge.plantuml.ugraphic.AffineTransformType)>($r37, $r36);

        specialinvoke $r34.<net.sourceforge.plantuml.ugraphic.UImage: void <init>(net.sourceforge.plantuml.ugraphic.MutableImage)>($r35);

        interfaceinvoke $r33.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r34);

        goto label3;

     label1:
        $r12 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.GraphicPosition position>;

        $r11 = <net.sourceforge.plantuml.graphic.GraphicPosition: net.sourceforge.plantuml.graphic.GraphicPosition BACKGROUND_CORNER_BOTTOM_RIGHT>;

        if $r12 != $r11 goto label2;

        $r22 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r23 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $i1 = virtualinvoke $r23.<java.awt.image.BufferedImage: int getWidth()>();

        $d5 = (double) $i1;

        $d6 = $d4 - $d5;

        $d7 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r24 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $i2 = virtualinvoke $r24.<java.awt.image.BufferedImage: int getHeight()>();

        $d8 = (double) $i2;

        $d9 = $d7 - $d8;

        specialinvoke $r22.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d6, $d9);

        $r25 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        $r26 = new net.sourceforge.plantuml.ugraphic.UImage;

        $r27 = new net.sourceforge.plantuml.ugraphic.PixelImage;

        $r29 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $r28 = <net.sourceforge.plantuml.ugraphic.AffineTransformType: net.sourceforge.plantuml.ugraphic.AffineTransformType TYPE_BILINEAR>;

        specialinvoke $r27.<net.sourceforge.plantuml.ugraphic.PixelImage: void <init>(java.awt.image.BufferedImage,net.sourceforge.plantuml.ugraphic.AffineTransformType)>($r29, $r28);

        specialinvoke $r26.<net.sourceforge.plantuml.ugraphic.UImage: void <init>(net.sourceforge.plantuml.ugraphic.MutableImage)>($r27);

        interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r26);

        goto label3;

     label2:
        $r14 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.GraphicPosition position>;

        $r13 = <net.sourceforge.plantuml.graphic.GraphicPosition: net.sourceforge.plantuml.graphic.GraphicPosition BACKGROUND_CORNER_TOP_RIGHT>;

        if $r14 != $r13 goto label3;

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r16 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $i0 = virtualinvoke $r16.<java.awt.image.BufferedImage: int getWidth()>();

        $d1 = (double) $i0;

        $d2 = $d0 - $d1;

        $d3 = $d2 - 1.0;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, 1.0);

        $r17 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r18 = new net.sourceforge.plantuml.ugraphic.UImage;

        $r19 = new net.sourceforge.plantuml.ugraphic.PixelImage;

        $r21 = r1.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $r20 = <net.sourceforge.plantuml.ugraphic.AffineTransformType: net.sourceforge.plantuml.ugraphic.AffineTransformType TYPE_BILINEAR>;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.PixelImage: void <init>(java.awt.image.BufferedImage,net.sourceforge.plantuml.ugraphic.AffineTransformType)>($r21, $r20);

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UImage: void <init>(net.sourceforge.plantuml.ugraphic.MutableImage)>($r19);

        interfaceinvoke $r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r18);

     label3:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double)>($r2, 10.0);

        return $r3;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        java.awt.image.BufferedImage $r3, $r11, $r13, $r15;
        net.sourceforge.plantuml.graphic.GraphicPosition $r4, $r5, $r6, $r7, $r8, $r9;
        net.sourceforge.plantuml.Dimension2DDouble $r10, $r12, $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        int $i0, $i1, $i2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r16;

        r0 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        r16 = interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r3 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        if $r3 == null goto label3;

        $r5 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.GraphicPosition position>;

        $r4 = <net.sourceforge.plantuml.graphic.GraphicPosition: net.sourceforge.plantuml.graphic.GraphicPosition BOTTOM>;

        if $r5 != $r4 goto label1;

        $r14 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d10 = virtualinvoke r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d11 = virtualinvoke r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r15 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $i2 = virtualinvoke $r15.<java.awt.image.BufferedImage: int getHeight()>();

        $d12 = (double) $i2;

        $d13 = $d11 + $d12;

        specialinvoke $r14.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d10, $d13);

        r16 = $r14;

        goto label3;

     label1:
        $r7 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.GraphicPosition position>;

        $r6 = <net.sourceforge.plantuml.graphic.GraphicPosition: net.sourceforge.plantuml.graphic.GraphicPosition BACKGROUND_CORNER_BOTTOM_RIGHT>;

        if $r7 != $r6 goto label2;

        $r12 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d5 = virtualinvoke r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = $d5 + 30.0;

        $r13 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $i1 = virtualinvoke $r13.<java.awt.image.BufferedImage: int getWidth()>();

        $d7 = (double) $i1;

        $d8 = $d6 + $d7;

        $d9 = virtualinvoke r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r12.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d8, $d9);

        r16 = $r12;

        goto label3;

     label2:
        $r9 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.graphic.GraphicPosition position>;

        $r8 = <net.sourceforge.plantuml.graphic.GraphicPosition: net.sourceforge.plantuml.graphic.GraphicPosition BACKGROUND_CORNER_TOP_RIGHT>;

        if $r9 != $r8 goto label3;

        $r10 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = virtualinvoke r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 + 30.0;

        $r11 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: java.awt.image.BufferedImage image>;

        $i0 = virtualinvoke $r11.<java.awt.image.BufferedImage: int getWidth()>();

        $d2 = (double) $i0;

        $d3 = $d1 + $d2;

        $d4 = virtualinvoke r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r10.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d3, $d4);

        r16 = $r10;

     label3:
        return r16;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.graphic.GraphicStrings r1;

        r1 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE>;

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()
    {
        net.sourceforge.plantuml.graphic.GraphicStrings r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        $r1 = r0.<net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        return $r1;
    }

    public net.sourceforge.plantuml.svek.Margins getShield(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.Margins $r0;
        net.sourceforge.plantuml.graphic.GraphicStrings r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = <net.sourceforge.plantuml.svek.Margins: net.sourceforge.plantuml.svek.Margins NONE>;

        return $r0;
    }

    public boolean isHidden()
    {
        net.sourceforge.plantuml.graphic.GraphicStrings r0;

        r0 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        return 0;
    }

    public double getOverscanX(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.GraphicStrings r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.graphic.GraphicStrings;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 0.0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.ugraphic.color.HColor $r0;

        <net.sourceforge.plantuml.graphic.GraphicStrings: boolean useUnderlineForHyperlink> = 1;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor BLUE>;

        <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.ugraphic.color.HColor hyperlinkColor> = $r0;

        return;
    }
}
