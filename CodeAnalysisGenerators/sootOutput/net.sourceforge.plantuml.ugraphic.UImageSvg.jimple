public class net.sourceforge.plantuml.ugraphic.UImageSvg extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UShape
{
    private final java.lang.String svg;
    private final double scale;

    public void <init>(java.lang.String, double)
    {
        net.sourceforge.plantuml.ugraphic.UImageSvg r0;
        java.lang.String r1, $r3;
        java.lang.Object $r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (java.lang.String) $r2;

        r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: java.lang.String svg> = $r3;

        r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: double scale> = d0;

        return;
    }

    public java.lang.String getMD5Hex()
    {
        net.sourceforge.plantuml.ugraphic.UImageSvg r0;
        java.lang.String $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: java.lang.String svg>;

        $r2 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String getMD5Hex(java.lang.String)>($r1);

        return $r2;
    }

    public java.lang.String getSvg(boolean)
    {
        net.sourceforge.plantuml.ugraphic.UImageSvg r0;
        boolean z0, $z1, $z2, $z3;
        java.lang.IllegalArgumentException $r1;
        java.lang.String r2, $r9, $r12, r14, r15;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13;
        int $i0, i1, i2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        z0 := @parameter0: boolean;

        r14 = r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: java.lang.String svg>;

        if z0 == 0 goto label1;

        return r14;

     label1:
        $z1 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>("<?xml");

        if $z1 == 0 goto label2;

        i1 = virtualinvoke r14.<java.lang.String: int indexOf(java.lang.String)>("<svg");

        r14 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>(i1);

     label2:
        $z2 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>("<svg");

        if $z2 == 0 goto label3;

        i2 = virtualinvoke r14.<java.lang.String: int indexOf(java.lang.String)>(">");

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<svg>");

        $i0 = i2 + 1;

        $r12 = virtualinvoke r14.<java.lang.String: java.lang.String substring(int)>($i0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        r15 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: java.lang.String extractSvgStyle()>();

        if r15 == null goto label4;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: java.lang.String extractBackground(java.lang.String)>(r15);

        if r2 == null goto label4;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<g><rect fill=\"");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" style=\"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" /> ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r14 = virtualinvoke r14.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("<g>", $r9);

     label4:
        $z3 = virtualinvoke r14.<java.lang.String: boolean startsWith(java.lang.String)>("<svg>");

        if $z3 != 0 goto label5;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label5:
        return r14;
    }

    private java.lang.String extractBackground(java.lang.String)
    {
        java.util.regex.Pattern r0;
        java.lang.String r1, $r3;
        java.util.regex.Matcher r2;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UImageSvg r4;

        r4 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        r1 := @parameter0: java.lang.String;

        r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("background:([^;]+)");

        r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        return $r3;

     label1:
        return null;
    }

    private java.lang.String extractSvgStyle()
    {
        java.util.regex.Pattern r0;
        net.sourceforge.plantuml.ugraphic.UImageSvg r1;
        java.lang.String $r2, $r4;
        java.util.regex.Matcher r3;
        boolean $z0;

        r1 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(?i)\\<svg[^>]+style=\"([^\">]+)\"");

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.UImageSvg: java.lang.String svg>;

        r3 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r2);

        $z0 = virtualinvoke r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        return $r4;

     label1:
        return null;
    }

    public int getData(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r13, $r14, $r15;
        java.lang.String r2, $r5, $r8, $r10, $r16, $r17, $r18, r19, r21, r22;
        java.util.regex.Pattern r6, r20;
        net.sourceforge.plantuml.ugraphic.UImageSvg r7;
        java.util.regex.Matcher r9, r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.IllegalStateException $r12;
        double $d0, $d1;
        int $i0, i1, i2;

        r7 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?i)<svg[^>]+");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\W+(\\d+)");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r5);

        $r8 = r7.<net.sourceforge.plantuml.ugraphic.UImageSvg: java.lang.String svg>;

        r9 = virtualinvoke r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r8);

        $z0 = virtualinvoke r9.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        r19 = virtualinvoke r9.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r19);

        return $i0;

     label1:
        r20 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("viewBox[= \"\']+([0-9.]+)[\\s,]+([0-9.]+)[\\s,]+([0-9.]+)[\\s,]+([0-9.]+)");

        $r10 = r7.<net.sourceforge.plantuml.ugraphic.UImageSvg: java.lang.String svg>;

        r11 = virtualinvoke r20.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r10);

        $z1 = virtualinvoke r11.<java.util.regex.Matcher: boolean find()>();

        if $z1 == 0 goto label3;

        $r17 = "width";

        $z2 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label2;

        r21 = virtualinvoke r11.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r21);

        i1 = (int) $d1;

        return i1;

     label2:
        $r18 = "height";

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z3 == 0 goto label3;

        r22 = virtualinvoke r11.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r22);

        i2 = (int) $d0;

        return i2;

     label3:
        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16);

        throw $r12;
    }

    public int getHeight()
    {
        net.sourceforge.plantuml.ugraphic.UImageSvg r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: int getData(java.lang.String)>("height");

        return $i0;
    }

    public int getWidth()
    {
        net.sourceforge.plantuml.ugraphic.UImageSvg r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: int getData(java.lang.String)>("width");

        return $i0;
    }

    public double getScale()
    {
        net.sourceforge.plantuml.ugraphic.UImageSvg r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UImageSvg;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.UImageSvg: double scale>;

        return $d0;
    }
}
