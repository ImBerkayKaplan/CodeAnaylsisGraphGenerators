public class net.sourceforge.plantuml.project.lang.ComplementWithColorLink extends java.lang.Object implements net.sourceforge.plantuml.project.lang.Something
{

    public void <init>()
    {
        net.sourceforge.plantuml.project.lang.ComplementWithColorLink r0;

        r0 := @this: net.sourceforge.plantuml.project.lang.ComplementWithColorLink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String r4, $r6;
        net.sourceforge.plantuml.project.lang.ComplementWithColorLink r7;

        r7 := @this: net.sourceforge.plantuml.project.lang.ComplementWithColorLink;

        r4 := @parameter0: java.lang.String;

        $r1 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>($r6, "with[%s]+(?:(dotted|bold|dashed)[%s]+)?(#?\\w+)[%s]+(?:(dotted|bold|dashed)[%s]+)?link");

        return $r1;
    }

    public net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r7, $r8, $r9, $r12, $r13, $r14;
        java.lang.String r3, $r5, r6, $r10, r11, $r15, r16, $r27;
        net.sourceforge.plantuml.project.GanttDiagram r17;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r18;
        net.sourceforge.plantuml.ISkinParam $r19;
        net.sourceforge.plantuml.api.ThemeStyle $r20;
        net.sourceforge.plantuml.ugraphic.color.HColor r21, $r26;
        net.sourceforge.plantuml.project.lang.CenterBorderColor $r23;
        net.sourceforge.plantuml.project.Failable $r24;
        net.sourceforge.plantuml.project.lang.ComplementWithColorLink r25;

        r25 := @this: net.sourceforge.plantuml.project.lang.ComplementWithColorLink;

        r17 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r5, 0);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r11 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r10, 1);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMPLEMENT");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r15, 2);

        if r11 != null goto label1;

        $r26 = null;

        goto label2;

     label1:
        $r18 = virtualinvoke r17.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r19 = virtualinvoke r17.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r26 = virtualinvoke $r18.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r20, r11);

     label2:
        r21 = $r26;

        if r6 != null goto label3;

        $r27 = r16;

        goto label4;

     label3:
        $r27 = r6;

     label4:
        $r23 = new net.sourceforge.plantuml.project.lang.CenterBorderColor;

        specialinvoke $r23.<net.sourceforge.plantuml.project.lang.CenterBorderColor: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,java.lang.String)>(r21, r21, $r27);

        $r24 = staticinvoke <net.sourceforge.plantuml.project.Failable: net.sourceforge.plantuml.project.Failable ok(java.lang.Object)>($r23);

        return $r24;
    }
}
