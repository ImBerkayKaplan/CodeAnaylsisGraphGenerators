class net.sourceforge.plantuml.timingdiagram.TimingRuler$1 extends java.lang.Object implements java.util.Comparator
{
    final net.sourceforge.plantuml.timingdiagram.TimingRuler this$0;

    void <init>(net.sourceforge.plantuml.timingdiagram.TimingRuler)
    {
        net.sourceforge.plantuml.timingdiagram.TimingRuler$1 r0;
        net.sourceforge.plantuml.timingdiagram.TimingRuler r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingRuler$1;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingRuler;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingRuler$1: net.sourceforge.plantuml.timingdiagram.TimingRuler this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Long, java.lang.Long)
    {
        java.lang.Long r0, r1;
        int $i0;
        net.sourceforge.plantuml.timingdiagram.TimingRuler$1 r2;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.TimingRuler$1;

        r1 := @parameter0: java.lang.Long;

        r0 := @parameter1: java.lang.Long;

        $i0 = virtualinvoke r0.<java.lang.Long: int compareTo(java.lang.Long)>(r1);

        return $i0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        net.sourceforge.plantuml.timingdiagram.TimingRuler$1 r0;
        java.lang.Object r1, r2;
        java.lang.Long $r3, $r4;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingRuler$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.Long) r1;

        $r3 = (java.lang.Long) r2;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingRuler$1: int compare(java.lang.Long,java.lang.Long)>($r4, $r3);

        return $i0;
    }
}
