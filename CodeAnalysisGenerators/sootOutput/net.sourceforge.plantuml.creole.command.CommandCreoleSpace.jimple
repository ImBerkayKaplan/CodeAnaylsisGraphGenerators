public class net.sourceforge.plantuml.creole.command.CommandCreoleSpace extends java.lang.Object implements net.sourceforge.plantuml.creole.command.Command
{
    private static final net.sourceforge.plantuml.command.regex.Pattern2 pattern;

    public java.lang.String startingChars()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleSpace r0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleSpace;

        return "<";
    }

    private void <init>()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleSpace r0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleSpace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.creole.command.Command create()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleSpace $r0;

        $r0 = new net.sourceforge.plantuml.creole.command.CommandCreoleSpace;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.command.CommandCreoleSpace: void <init>()>();

        return $r0;
    }

    public int matchingSize(java.lang.String)
    {
        java.lang.String r0, $r3;
        net.sourceforge.plantuml.command.regex.Pattern2 $r1;
        net.sourceforge.plantuml.command.regex.Matcher2 r2;
        boolean $z0;
        int $i0;
        net.sourceforge.plantuml.creole.command.CommandCreoleSpace r4;

        r4 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleSpace;

        r0 := @parameter0: java.lang.String;

        $r1 = <net.sourceforge.plantuml.creole.command.CommandCreoleSpace: net.sourceforge.plantuml.command.regex.Pattern2 pattern>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        return $i0;
    }

    public java.lang.String executeAndGetRemaining(java.lang.String, net.sourceforge.plantuml.creole.legacy.StripeSimple)
    {
        java.lang.String r0, $r3, $r5, $r6;
        net.sourceforge.plantuml.command.regex.Pattern2 $r1;
        net.sourceforge.plantuml.command.regex.Matcher2 r2;
        boolean $z0;
        int i0, $i1;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r4;
        java.lang.IllegalStateException $r7;
        net.sourceforge.plantuml.creole.command.CommandCreoleSpace r8;

        r8 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleSpace;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r1 = <net.sourceforge.plantuml.creole.command.CommandCreoleSpace: net.sourceforge.plantuml.command.regex.Pattern2 pattern>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        virtualinvoke r4.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addSpace(int)>(i0);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i1 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r6;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.command.regex.Pattern2 $r0;

        $r0 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("^(\\<space:(\\d+)/?\\>)");

        <net.sourceforge.plantuml.creole.command.CommandCreoleSpace: net.sourceforge.plantuml.command.regex.Pattern2 pattern> = $r0;

        return;
    }
}
