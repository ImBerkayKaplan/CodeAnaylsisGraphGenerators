public final class h.ST_Agraph_s extends h.ST_Agobj_s
{
    public final h.ST_Agobj_s base;
    public final h.ST_Agdesc_s desc;
    public final h.ST_dtlink_s link;
    public h.ST_dt_s n_seq;
    public h.ST_dt_s n_id;
    public h.ST_dt_s e_seq;
    public h.ST_dt_s e_id;
    public h.ST_dt_s g_dict;
    public h.ST_Agraph_s parent;
    public h.ST_Agraph_s root;
    public h.ST_Agclos_s clos;
    public java.lang.String NAME;
    private static int CPT;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        h.ST_Agraph_s r1;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: h.ST_Agraph_s;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<h.ST_Agraph_s: java.lang.String NAME>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void <init>()
    {
        h.ST_Agraph_s r0;
        h.ST_Agdesc_s $r1;
        h.ST_dtlink_s $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r7, $r8, $r9;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r10;

        r0 := @this: h.ST_Agraph_s;

        specialinvoke r0.<h.ST_Agobj_s: void <init>()>();

        r0.<h.ST_Agraph_s: h.ST_Agobj_s base> = r0;

        $r1 = new h.ST_Agdesc_s;

        specialinvoke $r1.<h.ST_Agdesc_s: void <init>()>();

        r0.<h.ST_Agraph_s: h.ST_Agdesc_s desc> = $r1;

        $r2 = new h.ST_dtlink_s;

        specialinvoke $r2.<h.ST_dtlink_s: void <init>(smetana.core.__ptr__)>(r0);

        r0.<h.ST_Agraph_s: h.ST_dtlink_s link> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("G");

        $i0 = <h.ST_Agraph_s: int CPT>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<h.ST_Agraph_s: java.lang.String NAME> = $r6;

        $i1 = <h.ST_Agraph_s: int CPT>;

        $i2 = $i1 + 1;

        <h.ST_Agraph_s: int CPT> = $i2;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creation ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r10);

        return;
    }

    public java.lang.Object getTheField(smetana.core.OFFSET)
    {
        smetana.core.OFFSET r0;
        h.ST_Agraph_s r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;
        java.lang.UnsupportedOperationException $r3;
        h.ST_dtlink_s $r4;

        r1 := @this: h.ST_Agraph_s;

        r0 := @parameter0: smetana.core.OFFSET;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<smetana.core.OFFSET: int getSign()>();

        if $i0 != 0 goto label2;

     label1:
        return r1;

     label2:
        $r2 = virtualinvoke r0.<smetana.core.OFFSET: java.lang.String getField()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("link");

        if $z0 == 0 goto label3;

        $r4 = r1.<h.ST_Agraph_s: h.ST_dtlink_s link>;

        return $r4;

     label3:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    public void ___(smetana.core.__struct__)
    {
        java.lang.UnsupportedOperationException $r0;
        h.ST_Agraph_s r1;
        smetana.core.__struct__ r2;

        r1 := @this: h.ST_Agraph_s;

        r2 := @parameter0: smetana.core.__struct__;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean isSameThan(smetana.core.__ptr__)
    {
        smetana.core.__ptr__ r0;
        h.ST_Agraph_s r1, r2;
        boolean $z0;

        r2 := @this: h.ST_Agraph_s;

        r0 := @parameter0: smetana.core.__ptr__;

        r1 = (h.ST_Agraph_s) r0;

        if r2 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        <h.ST_Agraph_s: int CPT> = 0;

        return;
    }
}
