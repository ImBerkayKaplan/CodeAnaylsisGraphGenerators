public class net.sourceforge.plantuml.cucadiagram.HideOrShow2 extends java.lang.Object
{
    private final java.lang.String what;
    private final boolean show;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6;
        net.sourceforge.plantuml.cucadiagram.HideOrShow2 r1;
        java.lang.String $r2, $r7;
        boolean $z0;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.HideOrShow2;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $z0 = r1.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean show>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private boolean isApplyable(net.sourceforge.plantuml.cucadiagram.ILeaf)
    {
        net.sourceforge.plantuml.cucadiagram.HideOrShow2 r0;
        java.lang.String $r1, $r2, $r3, r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        net.sourceforge.plantuml.cucadiagram.ILeaf r4;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.HideOrShow2;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("$");

        if $z0 == 0 goto label1;

        $r12 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int)>(1);

        $z7 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean isApplyableTag(net.sourceforge.plantuml.cucadiagram.ILeaf,java.lang.String)>(r4, $r13);

        return $z7;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("<<");

        if $z1 == 0 goto label2;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $z5 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>(">>");

        if $z5 == 0 goto label2;

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $i1 = $i0 - 2;

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int,int)>(2, $i1);

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $z6 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean isApplyableStereotype(net.sourceforge.plantuml.cucadiagram.ILeaf,java.lang.String)>(r4, $r11);

        return $z6;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("@unlinked");

        if $z2 == 0 goto label3;

        $z4 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean isApplyableUnlinked(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r4);

        return $z4;

     label3:
        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.cucadiagram.ILeaf: java.lang.String getCodeGetName()>();

        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what>;

        $z3 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean match(java.lang.String,java.lang.String)>(r5, $r6);

        return $z3;
    }

    private boolean isApplyableUnlinked(net.sourceforge.plantuml.cucadiagram.ILeaf)
    {
        net.sourceforge.plantuml.cucadiagram.ILeaf r0;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.HideOrShow2 r1;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.HideOrShow2;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        $z0 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.ILeaf: boolean isAloneAndUnlinked()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean isApplyableStereotype(net.sourceforge.plantuml.cucadiagram.ILeaf, java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.ILeaf r0;
        net.sourceforge.plantuml.cucadiagram.Stereotype r1;
        java.util.List $r2;
        java.util.Iterator r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        java.lang.String r5, r7;
        net.sourceforge.plantuml.cucadiagram.HideOrShow2 r6;

        r6 := @this: net.sourceforge.plantuml.cucadiagram.HideOrShow2;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r7 := @parameter1: java.lang.String;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getMultipleLabels()>();

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z1 = specialinvoke r6.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean match(java.lang.String,java.lang.String)>(r5, r7);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    private boolean isApplyableTag(net.sourceforge.plantuml.cucadiagram.ILeaf, java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.ILeaf r0;
        java.util.Set $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.cucadiagram.Stereotag r4;
        net.sourceforge.plantuml.cucadiagram.HideOrShow2 r5;
        java.lang.String $r6, r7;

        r5 := @this: net.sourceforge.plantuml.cucadiagram.HideOrShow2;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r7 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.ILeaf: java.util.Set stereotags()>();

        r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.cucadiagram.Stereotag) $r3;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.Stereotag: java.lang.String getName()>();

        $z1 = specialinvoke r5.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean match(java.lang.String,java.lang.String)>($r6, r7);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    private boolean match(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r4, r7;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        net.sourceforge.plantuml.cucadiagram.HideOrShow2 r8;

        r8 := @this: net.sourceforge.plantuml.cucadiagram.HideOrShow2;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("*", ".*");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$");

        r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z2 = virtualinvoke r1.<java.lang.String: boolean matches(java.lang.String)>(r7);

        return $z2;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        return $z1;
    }

    public void <init>(java.lang.String, boolean)
    {
        net.sourceforge.plantuml.cucadiagram.HideOrShow2 r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.HideOrShow2;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: java.lang.String what> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean show> = z0;

        return;
    }

    public boolean apply(boolean, net.sourceforge.plantuml.cucadiagram.ILeaf)
    {
        net.sourceforge.plantuml.cucadiagram.HideOrShow2 r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        boolean $z0, z1, $z2, $z3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.HideOrShow2;

        z1 := @parameter0: boolean;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.ILeaf;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean isApplyable(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r1);

        if $z0 == 0 goto label3;

        $z2 = r0.<net.sourceforge.plantuml.cucadiagram.HideOrShow2: boolean show>;

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return z1;
    }
}
