public class net.sourceforge.plantuml.board.BoardDiagram extends net.sourceforge.plantuml.UmlDiagram
{
    private final java.util.List activities;

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.board.BoardDiagram r1;

        r1 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("Board");

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.board.BoardDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.UmlDiagramType $r3;
        java.util.ArrayList $r4;

        r0 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        $r3 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType BOARD>;

        specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType)>(r1, r2, $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.board.BoardDiagram: java.util.List activities> = $r4;

        return;
    }

    protected net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.board.BoardDiagram r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r4;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r3;
        java.io.OutputStream r5;
        net.sourceforge.plantuml.core.ImageData $r6;
        int i0;

        r0 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        r5 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r1 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.board.BoardDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.board.BoardDiagram: net.sourceforge.plantuml.svek.TextBlockBackcolored getTextBlock()>();

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r3);

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r5);

        return $r6;
    }

    private net.sourceforge.plantuml.svek.TextBlockBackcolored getTextBlock()
    {
        net.sourceforge.plantuml.board.BoardDiagram$1 $r0;
        net.sourceforge.plantuml.board.BoardDiagram r1;

        r1 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        $r0 = new net.sourceforge.plantuml.board.BoardDiagram$1;

        specialinvoke $r0.<net.sourceforge.plantuml.board.BoardDiagram$1: void <init>(net.sourceforge.plantuml.board.BoardDiagram)>(r1);

        return $r0;
    }

    private void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r4, $r6, $r8, r11;
        net.sourceforge.plantuml.board.BoardDiagram r1;
        java.util.List $r2;
        boolean $z0;
        double $d0, $d1, $d2, $d3, d4, $d5;
        int $i0, $i1, i2;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r3;
        net.sourceforge.plantuml.ugraphic.UStroke $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r10;
        java.lang.Object $r9;
        java.util.Iterator r12;
        net.sourceforge.plantuml.board.Activity r13;
        net.sourceforge.plantuml.ugraphic.ULine r14;

        r1 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r11 = r0;

        $r2 = r1.<net.sourceforge.plantuml.board.BoardDiagram: java.util.List activities>;

        r12 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (net.sourceforge.plantuml.board.Activity) $r9;

        virtualinvoke r13.<net.sourceforge.plantuml.board.Activity: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>(r11);

        $d5 = virtualinvoke r13.<net.sourceforge.plantuml.board.Activity: double getFullWidth()>();

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d5);

        r11 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        goto label1;

     label2:
        $d0 = specialinvoke r1.<net.sourceforge.plantuml.board.BoardDiagram: double getFullWidth()>();

        r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d0);

        i2 = 0;

     label3:
        $i0 = specialinvoke r1.<net.sourceforge.plantuml.board.BoardDiagram: int getMaxStage()>();

        if i2 >= $i0 goto label4;

        $i1 = i2 + 1;

        $d1 = (double) $i1;

        $d2 = staticinvoke <net.sourceforge.plantuml.board.PostIt: double getHeight()>();

        $d3 = $d1 * $d2;

        d4 = $d3 - 10.0;

        $r3 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double,double,double)>(5.0, 5.0, 0.5);

        $r6 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d4);

        $r8 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r14);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    private double getFullWidth()
    {
        net.sourceforge.plantuml.board.BoardDiagram r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.board.Activity r4;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.board.BoardDiagram: java.util.List activities>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.board.Activity) $r3;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.board.Activity: double getFullWidth()>();

        d1 = d1 + $d0;

        goto label1;

     label2:
        return d1;
    }

    private int getMaxStage()
    {
        net.sourceforge.plantuml.board.BoardDiagram r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.board.Activity r4;
        int $i0, i1;

        r0 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        i1 = 0;

        $r1 = r0.<net.sourceforge.plantuml.board.BoardDiagram: java.util.List activities>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.board.Activity) $r3;

        $i0 = virtualinvoke r4.<net.sourceforge.plantuml.board.Activity: int getMaxStage()>();

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(i1, $i0);

        goto label1;

     label2:
        return i1;
    }

    private net.sourceforge.plantuml.board.Activity getLastActivity()
    {
        net.sourceforge.plantuml.board.BoardDiagram r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.board.Activity $r4;

        r0 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        $r2 = r0.<net.sourceforge.plantuml.board.BoardDiagram: java.util.List activities>;

        $r1 = r0.<net.sourceforge.plantuml.board.BoardDiagram: java.util.List activities>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (net.sourceforge.plantuml.board.Activity) $r3;

        return $r4;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addLine(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r3;
        int $i0, $i1;
        net.sourceforge.plantuml.board.BoardDiagram r1;
        net.sourceforge.plantuml.board.Activity $r2, $r5;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4, $r9;
        net.sourceforge.plantuml.ISkinParam $r6;
        java.util.List $r8;

        r1 := @this: net.sourceforge.plantuml.board.BoardDiagram;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r5 = new net.sourceforge.plantuml.board.Activity;

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.board.BoardDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r5.<net.sourceforge.plantuml.board.Activity: void <init>(net.sourceforge.plantuml.board.BoardDiagram,java.lang.String,net.sourceforge.plantuml.ISkinParam)>(r1, r3, $r6);

        $r8 = r1.<net.sourceforge.plantuml.board.BoardDiagram: java.util.List activities>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r9;

     label1:
        $r2 = specialinvoke r1.<net.sourceforge.plantuml.board.BoardDiagram: net.sourceforge.plantuml.board.Activity getLastActivity()>();

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        virtualinvoke $r2.<net.sourceforge.plantuml.board.Activity: void addRelease(int,java.lang.String)>($i1, r3);

        $r4 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r4;
    }

    static void access$000(net.sourceforge.plantuml.board.BoardDiagram, net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.board.BoardDiagram r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @parameter0: net.sourceforge.plantuml.board.BoardDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.board.BoardDiagram: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }
}
