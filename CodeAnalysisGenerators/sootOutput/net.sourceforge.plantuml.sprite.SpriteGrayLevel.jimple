public final enum class net.sourceforge.plantuml.sprite.SpriteGrayLevel extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_16;
    public static final enum net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_8;
    public static final enum net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_4;
    private final int nbColor;
    private static final net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome mono;
    private static final net.sourceforge.plantuml.sprite.SpriteGrayLevel[] $VALUES;
    static final boolean $assertionsDisabled;

    public static net.sourceforge.plantuml.sprite.SpriteGrayLevel[] values()
    {
        net.sourceforge.plantuml.sprite.SpriteGrayLevel[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.sprite.SpriteGrayLevel[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.sprite.SpriteGrayLevel valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/sprite/SpriteGrayLevel;", r0);

        $r2 = (net.sourceforge.plantuml.sprite.SpriteGrayLevel) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, int)
    {
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r0;
        java.lang.String r1;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int nbColor> = i1;

        return;
    }

    public static net.sourceforge.plantuml.sprite.SpriteGrayLevel get(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel $r1, $r2, $r3;

        i0 := @parameter0: int;

        if i0 != 4 goto label1;

        $r3 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_4>;

        return $r3;

     label1:
        if i0 != 8 goto label2;

        $r2 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_8>;

        return $r2;

     label2:
        if i0 != 16 goto label3;

        $r1 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_16>;

        return $r1;

     label3:
        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int getNbColor()
    {
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        $i0 = r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int nbColor>;

        return $i0;
    }

    public java.util.List encode(java.awt.image.BufferedImage)
    {
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r0, $r1, $r2, $r3;
        java.lang.UnsupportedOperationException $r4;
        java.awt.image.BufferedImage r5;
        java.util.List $r6, $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r5 := @parameter0: java.awt.image.BufferedImage;

        $r1 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_16>;

        if r0 != $r1 goto label1;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: java.util.List encode16(java.awt.image.BufferedImage)>(r5);

        return $r8;

     label1:
        $r2 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_8>;

        if r0 != $r2 goto label2;

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: java.util.List encode8(java.awt.image.BufferedImage)>(r5);

        return $r7;

     label2:
        $r3 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_4>;

        if r0 != $r3 goto label3;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: java.util.List encode4(java.awt.image.BufferedImage)>(r5);

        return $r6;

     label3:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    private java.util.List encode16(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r0;
        int i0, i1, i2, i4, i5;
        java.util.ArrayList $r1;
        java.util.List $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6, $r8;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r7;
        char c3;

        r7 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r0 := @parameter0: java.awt.image.BufferedImage;

        i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label1:
        if i4 >= i1 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i5 = 0;

     label2:
        if i5 >= i0 goto label3;

        i2 = specialinvoke r7.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int getGrayOn16(java.awt.image.BufferedImage,int,int)>(r0, i5, i4);

        $r8 = "0123456789ABCDEF";

        c3 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i2);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

        i5 = i5 + 1;

        goto label2;

     label3:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        i4 = i4 + 1;

        goto label1;

     label4:
        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r3;
    }

    private java.util.List encode8(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r0;
        int i0, i1, $i2, i3, $i4, $i5, i6, $i7, i8, i11, i12;
        java.util.ArrayList $r1;
        java.util.List $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r7;
        boolean $z1, $z2;
        byte $b9;
        char $c10;
        java.lang.AssertionError $r9, $r10;

        r7 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r0 := @parameter0: java.awt.image.BufferedImage;

        i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i11 = 0;

     label1:
        if i11 >= i1 goto label8;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i12 = 0;

     label2:
        if i12 >= i0 goto label7;

        $i2 = specialinvoke r7.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int getGrayOn16(java.awt.image.BufferedImage,int,int)>(r0, i12, i11);

        i3 = $i2 / 2;

        $z1 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        if i3 < 0 goto label3;

        if i3 <= 7 goto label4;

     label3:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label4:
        $i4 = i11 + 1;

        $i5 = specialinvoke r7.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int getGrayOn16(java.awt.image.BufferedImage,int,int)>(r0, i12, $i4);

        i6 = $i5 / 2;

        $z2 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: boolean $assertionsDisabled>;

        if $z2 != 0 goto label6;

        if i6 < 0 goto label5;

        if i6 <= 7 goto label6;

     label5:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label6:
        $i7 = i3 * 8;

        i8 = $i7 + i6;

        $b9 = (byte) i8;

        $c10 = staticinvoke <net.sourceforge.plantuml.code.AsciiEncoder: char encode6bit(byte)>($b9);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        i12 = i12 + 1;

        goto label2;

     label7:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        i11 = i11 + 2;

        goto label1;

     label8:
        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r3;
    }

    private java.util.List encode4(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r0;
        int i0, i1, $i2, i3, $i4, $i5, i6, $i7, $i8, i9, $i10, $i11, $i12, i13, i16, i17;
        java.util.ArrayList $r1;
        java.util.List $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r6;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r7;
        boolean $z1, $z2, $z3;
        byte $b14;
        char $c15;
        java.lang.AssertionError $r9, $r10, $r11;

        r7 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r0 := @parameter0: java.awt.image.BufferedImage;

        i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        i16 = 0;

     label01:
        if i16 >= i1 goto label10;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i17 = 0;

     label02:
        if i17 >= i0 goto label09;

        $i2 = specialinvoke r7.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int getGrayOn16(java.awt.image.BufferedImage,int,int)>(r0, i17, i16);

        i3 = $i2 / 4;

        $z1 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        if i3 < 0 goto label03;

        if i3 <= 3 goto label04;

     label03:
        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label04:
        $i4 = i16 + 1;

        $i5 = specialinvoke r7.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int getGrayOn16(java.awt.image.BufferedImage,int,int)>(r0, i17, $i4);

        i6 = $i5 / 4;

        $z2 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: boolean $assertionsDisabled>;

        if $z2 != 0 goto label06;

        if i6 < 0 goto label05;

        if i6 <= 3 goto label06;

     label05:
        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label06:
        $i7 = i16 + 2;

        $i8 = specialinvoke r7.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int getGrayOn16(java.awt.image.BufferedImage,int,int)>(r0, i17, $i7);

        i9 = $i8 / 4;

        $z3 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: boolean $assertionsDisabled>;

        if $z3 != 0 goto label08;

        if i9 < 0 goto label07;

        if i9 <= 3 goto label08;

     label07:
        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label08:
        $i11 = i3 * 16;

        $i10 = i6 * 4;

        $i12 = $i11 + $i10;

        i13 = $i12 + i9;

        $b14 = (byte) i13;

        $c15 = staticinvoke <net.sourceforge.plantuml.code.AsciiEncoder: char encode6bit(byte)>($b14);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c15);

        i17 = i17 + 1;

        goto label02;

     label09:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r6);

        i16 = i16 + 3;

        goto label01;

     label10:
        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r3;
    }

    private int getGrayOn16(java.awt.image.BufferedImage, int, int)
    {
        int i0, $i1, i2, $i3, $i4, $i5, i6, $i7;
        java.awt.image.BufferedImage r0;
        java.awt.Color $r1, r3;
        net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome $r2;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r4;

        r4 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r0 := @parameter0: java.awt.image.BufferedImage;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        if i0 < $i1 goto label1;

        return 0;

     label1:
        $i3 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        if i2 < $i3 goto label2;

        return 0;

     label2:
        $r2 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome mono>;

        $r1 = new java.awt.Color;

        $i4 = virtualinvoke r0.<java.awt.image.BufferedImage: int getRGB(int,int)>(i0, i2);

        specialinvoke $r1.<java.awt.Color: void <init>(int)>($i4);

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome: java.awt.Color getChangedColor(java.awt.Color)>($r1);

        $i5 = virtualinvoke r3.<java.awt.Color: int getRed()>();

        i6 = 255 - $i5;

        $i7 = i6 / 16;

        return $i7;
    }

    public net.sourceforge.plantuml.sprite.Sprite buildSprite(int, int, java.util.List)
    {
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r0, $r1, $r2, $r3;
        java.lang.UnsupportedOperationException $r4;
        java.lang.String $r5;
        int i0, i1;
        java.util.List r6;
        net.sourceforge.plantuml.sprite.Sprite $r7, $r8, $r9;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r6 := @parameter2: java.util.List;

        $r1 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_16>;

        if r0 != $r1 goto label1;

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.Sprite buildSprite16(java.util.List)>(r6);

        return $r9;

     label1:
        $r2 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_8>;

        if r0 != $r2 goto label2;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.Sprite buildSprite8(int,int,java.util.List)>(i0, i1, r6);

        return $r8;

     label2:
        $r3 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_4>;

        if r0 != $r3 goto label3;

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.Sprite buildSprite4(int,int,java.util.List)>(i0, i1, r6);

        return $r7;

     label3:
        $r4 = new java.lang.UnsupportedOperationException;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r5);

        throw $r4;
    }

    private net.sourceforge.plantuml.sprite.Sprite buildSprite16(java.util.List)
    {
        net.sourceforge.plantuml.sprite.SpriteMonochrome $r0;
        java.util.List r1;
        java.lang.Object $r2, $r5, $r7, $r11;
        java.lang.String $r3, $r6, $r8, $r12, r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, i7, i8, i9;
        char $c5, $c6;
        java.lang.StringBuilder $r9, $r10, $r13;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r16;

        r16 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r1 := @parameter0: java.util.List;

        $r0 = new net.sourceforge.plantuml.sprite.SpriteMonochrome;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void <init>(int,int,int)>($i0, $i1, 16);

        i8 = 0;

     label1:
        $i2 = virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: int getWidth()>();

        if i8 >= $i2 goto label6;

        i9 = 0;

     label2:
        $i3 = virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: int getHeight()>();

        if i9 >= $i3 goto label5;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i9);

        $r6 = (java.lang.String) $r5;

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        if i8 < $i4 goto label3;

        goto label4;

     label3:
        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i9);

        $r8 = (java.lang.String) $r7;

        $c5 = virtualinvoke $r8.<java.lang.String: char charAt(int)>(i8);

        if $c5 == 48 goto label4;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i9);

        $r12 = (java.lang.String) $r11;

        $c6 = virtualinvoke $r12.<java.lang.String: char charAt(int)>(i8);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6);

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goUpperCase(java.lang.String)>(r14);

        i7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r15, 16);

        virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void setGray(int,int,int)>(i8, i9, i7);

     label4:
        i9 = i9 + 1;

        goto label2;

     label5:
        i8 = i8 + 1;

        goto label1;

     label6:
        return $r0;
    }

    private net.sourceforge.plantuml.sprite.Sprite buildSprite8(int, int, java.util.List)
    {
        net.sourceforge.plantuml.sprite.SpriteMonochrome $r0;
        int i0, i1, $i2, $i3, $i4, i6, i7, i8, $i9, $i10, $i11, i12, i13;
        java.util.List r2;
        java.lang.Object $r3, $r5;
        java.lang.String $r4, $r6;
        char $c5;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r7;

        r7 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        $r0 = new net.sourceforge.plantuml.sprite.SpriteMonochrome;

        specialinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void <init>(int,int,int)>(i0, i1, 8);

        i12 = 0;

     label1:
        $i2 = virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: int getWidth()>();

        if i12 >= $i2 goto label6;

        i13 = 0;

     label2:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if i13 >= $i3 goto label5;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i13);

        $r4 = (java.lang.String) $r3;

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i12 < $i4 goto label3;

        goto label4;

     label3:
        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i13);

        $r6 = (java.lang.String) $r5;

        $c5 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(i12);

        i6 = staticinvoke <net.sourceforge.plantuml.code.AsciiEncoder: int decode6bit(char)>($c5);

        i7 = i6 / 8;

        i8 = i6 % 8;

        $i9 = i13 * 2;

        virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void setGray(int,int,int)>(i12, $i9, i7);

        $i10 = i13 * 2;

        $i11 = $i10 + 1;

        virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void setGray(int,int,int)>(i12, $i11, i8);

     label4:
        i13 = i13 + 1;

        goto label2;

     label5:
        i12 = i12 + 1;

        goto label1;

     label6:
        return $r0;
    }

    private net.sourceforge.plantuml.sprite.Sprite buildSprite4(int, int, java.util.List)
    {
        net.sourceforge.plantuml.sprite.SpriteMonochrome $r0;
        int i0, i1, $i2, $i3, $i4, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17;
        java.util.List r2;
        java.lang.Object $r3, $r5;
        java.lang.String $r4, $r6;
        char $c5;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r7;

        r7 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        $r0 = new net.sourceforge.plantuml.sprite.SpriteMonochrome;

        specialinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void <init>(int,int,int)>(i0, i1, 4);

        i14 = 0;

     label1:
        $i2 = virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: int getWidth()>();

        if i14 >= $i2 goto label6;

        i15 = 0;

     label2:
        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if i15 >= $i3 goto label5;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i15);

        $r4 = (java.lang.String) $r3;

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        if i14 < $i4 goto label3;

        goto label4;

     label3:
        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i15);

        $r6 = (java.lang.String) $r5;

        $c5 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(i14);

        i16 = staticinvoke <net.sourceforge.plantuml.code.AsciiEncoder: int decode6bit(char)>($c5);

        i6 = i16 / 16;

        i17 = i16 % 16;

        i7 = i17 / 4;

        i8 = i17 % 4;

        $i9 = i15 * 3;

        virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void setGray(int,int,int)>(i14, $i9, i6);

        $i10 = i15 * 3;

        $i11 = $i10 + 1;

        virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void setGray(int,int,int)>(i14, $i11, i7);

        $i12 = i15 * 3;

        $i13 = $i12 + 2;

        virtualinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void setGray(int,int,int)>(i14, $i13, i8);

     label4:
        i15 = i15 + 1;

        goto label2;

     label5:
        i14 = i14 + 1;

        goto label1;

     label6:
        return $r0;
    }

    public java.util.List encodeZ(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r0;
        int i0, i1, $i2, $i3, i4, $i5, i6, $i7, i9, i10, i11;
        byte[] r1, r7;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r2;
        net.sourceforge.plantuml.code.CompressionZopfliZlib $r3;
        net.sourceforge.plantuml.code.AsciiEncoderFinalZeros $r4;
        java.lang.String $r5;
        java.util.List $r6;
        byte $b8;

        r2 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r0 := @parameter0: java.awt.image.BufferedImage;

        i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $i2 = i0 * i1;

        r1 = newarray (byte)[$i2];

        i9 = 0;

        $i3 = r2.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int nbColor>;

        i4 = 16 / $i3;

        i10 = 0;

     label1:
        if i10 >= i1 goto label4;

        i11 = 0;

     label2:
        if i11 >= i0 goto label3;

        $i5 = specialinvoke r2.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int getGrayOn16(java.awt.image.BufferedImage,int,int)>(r0, i11, i10);

        i6 = $i5 / i4;

        $i7 = i9;

        i9 = i9 + 1;

        $b8 = (byte) i6;

        r1[$i7] = $b8;

        i11 = i11 + 1;

        goto label2;

     label3:
        i10 = i10 + 1;

        goto label1;

     label4:
        $r3 = new net.sourceforge.plantuml.code.CompressionZopfliZlib;

        specialinvoke $r3.<net.sourceforge.plantuml.code.CompressionZopfliZlib: void <init>()>();

        r7 = virtualinvoke $r3.<net.sourceforge.plantuml.code.CompressionZopfliZlib: byte[] compress(byte[])>(r1);

        $r4 = new net.sourceforge.plantuml.code.AsciiEncoderFinalZeros;

        specialinvoke $r4.<net.sourceforge.plantuml.code.AsciiEncoderFinalZeros: void <init>()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.code.AsciiEncoderFinalZeros: java.lang.String encode(byte[])>(r7);

        $r6 = specialinvoke r2.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: java.util.List cut(java.lang.String)>($r5);

        return $r6;
    }

    private java.util.List encodeZSpiral(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage r0;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, i9, i11;
        byte[] r1, r10;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r2;
        net.sourceforge.plantuml.code.SpiralOnRectangle $r3;
        net.sourceforge.plantuml.code.CompressionZopfliZlib $r5;
        net.sourceforge.plantuml.code.AsciiEncoderFinalZeros $r6;
        java.lang.String $r7;
        java.util.List $r8;
        net.sourceforge.plantuml.code.PairInt r9;
        byte $b10;

        r2 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r0 := @parameter0: java.awt.image.BufferedImage;

        i0 = virtualinvoke r0.<java.awt.image.BufferedImage: int getWidth()>();

        i1 = virtualinvoke r0.<java.awt.image.BufferedImage: int getHeight()>();

        $i2 = i0 * i1;

        r1 = newarray (byte)[$i2];

        $i3 = r2.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int nbColor>;

        i4 = 16 / $i3;

        $r3 = new net.sourceforge.plantuml.code.SpiralOnRectangle;

        specialinvoke $r3.<net.sourceforge.plantuml.code.SpiralOnRectangle: void <init>(int,int)>(i0, i1);

        i11 = 0;

     label1:
        $i5 = i0 * i1;

        if i11 >= $i5 goto label2;

        r9 = virtualinvoke $r3.<net.sourceforge.plantuml.code.SpiralOnRectangle: net.sourceforge.plantuml.code.PairInt nextPoint()>();

        $i6 = virtualinvoke r9.<net.sourceforge.plantuml.code.PairInt: int getX()>();

        $i7 = virtualinvoke r9.<net.sourceforge.plantuml.code.PairInt: int getY()>();

        $i8 = specialinvoke r2.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int getGrayOn16(java.awt.image.BufferedImage,int,int)>(r0, $i6, $i7);

        i9 = $i8 / i4;

        $b10 = (byte) i9;

        r1[i11] = $b10;

        i11 = i11 + 1;

        goto label1;

     label2:
        $r5 = new net.sourceforge.plantuml.code.CompressionZopfliZlib;

        specialinvoke $r5.<net.sourceforge.plantuml.code.CompressionZopfliZlib: void <init>()>();

        r10 = virtualinvoke $r5.<net.sourceforge.plantuml.code.CompressionZopfliZlib: byte[] compress(byte[])>(r1);

        $r6 = new net.sourceforge.plantuml.code.AsciiEncoderFinalZeros;

        specialinvoke $r6.<net.sourceforge.plantuml.code.AsciiEncoderFinalZeros: void <init>()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.code.AsciiEncoderFinalZeros: java.lang.String encode(byte[])>(r10);

        $r8 = specialinvoke r2.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: java.util.List cut(java.lang.String)>($r7);

        return $r8;
    }

    private java.util.List cut(java.lang.String)
    {
        java.util.ArrayList $r0;
        java.lang.String r2, $r4;
        int $i0, $i1, $i2, i3, i4;
        java.util.List $r3;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r5;

        r5 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i4 = 0;

     label1:
        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if i4 >= $i0 goto label2;

        $i1 = i4 + 120;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        $r4 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i4, i3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        i4 = i4 + 120;

        goto label1;

     label2:
        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r3;
    }

    public net.sourceforge.plantuml.sprite.Sprite buildSpriteZ(int, int, java.lang.String)
    {
        net.sourceforge.plantuml.code.AsciiEncoder $r0;
        java.lang.String r1;
        byte[] r2;
        net.sourceforge.plantuml.code.CompressionZlib $r3;
        net.sourceforge.plantuml.sprite.SpriteMonochrome $r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel r5;
        net.sourceforge.plantuml.code.NoPlantumlCompressionException $r7;
        net.sourceforge.plantuml.code.ByteArray r8;

        r5 := @this: net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r0 = new net.sourceforge.plantuml.code.AsciiEncoder;

        specialinvoke $r0.<net.sourceforge.plantuml.code.AsciiEncoder: void <init>()>();

        r2 = virtualinvoke $r0.<net.sourceforge.plantuml.code.AsciiEncoder: byte[] decode(java.lang.String)>(r1);

     label1:
        $r3 = new net.sourceforge.plantuml.code.CompressionZlib;

        specialinvoke $r3.<net.sourceforge.plantuml.code.CompressionZlib: void <init>()>();

        r8 = virtualinvoke $r3.<net.sourceforge.plantuml.code.CompressionZlib: net.sourceforge.plantuml.code.ByteArray decompress(byte[])>(r2);

        $r4 = new net.sourceforge.plantuml.sprite.SpriteMonochrome;

        $i2 = r5.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: int nbColor>;

        specialinvoke $r4.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void <init>(int,int,int)>(i0, i1, $i2);

        i7 = 0;

        i8 = 0;

     label2:
        $i3 = virtualinvoke $r4.<net.sourceforge.plantuml.sprite.SpriteMonochrome: int getHeight()>();

        if i8 >= $i3 goto label5;

        i9 = 0;

     label3:
        $i4 = virtualinvoke $r4.<net.sourceforge.plantuml.sprite.SpriteMonochrome: int getWidth()>();

        if i9 >= $i4 goto label4;

        $i5 = i7;

        i7 = i7 + 1;

        $i6 = virtualinvoke r8.<net.sourceforge.plantuml.code.ByteArray: int getByteAt(int)>($i5);

        virtualinvoke $r4.<net.sourceforge.plantuml.sprite.SpriteMonochrome: void setGray(int,int,int)>(i9, i8, $i6);

        i9 = i9 + 1;

        goto label3;

     label4:
        i8 = i8 + 1;

        goto label2;

     label5:
        return $r4;

     label6:
        $r7 := @caughtexception;

        virtualinvoke $r7.<net.sourceforge.plantuml.code.NoPlantumlCompressionException: void printStackTrace()>();

        return null;

        catch net.sourceforge.plantuml.code.NoPlantumlCompressionException from label1 to label5 with label6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel $r1, $r2, $r3, $r5, $r6, $r7;
        net.sourceforge.plantuml.sprite.SpriteGrayLevel[] $r4;
        net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome $r8;

        $r0 = class "Lnet/sourceforge/plantuml/sprite/SpriteGrayLevel;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.sprite.SpriteGrayLevel: boolean $assertionsDisabled> = $z1;

        $r1 = new net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        specialinvoke $r1.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: void <init>(java.lang.String,int,int)>("GRAY_16", 0, 16);

        <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_16> = $r1;

        $r2 = new net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        specialinvoke $r2.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: void <init>(java.lang.String,int,int)>("GRAY_8", 1, 8);

        <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_8> = $r2;

        $r3 = new net.sourceforge.plantuml.sprite.SpriteGrayLevel;

        specialinvoke $r3.<net.sourceforge.plantuml.sprite.SpriteGrayLevel: void <init>(java.lang.String,int,int)>("GRAY_4", 2, 4);

        <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_4> = $r3;

        $r4 = newarray (net.sourceforge.plantuml.sprite.SpriteGrayLevel)[3];

        $r5 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_16>;

        $r4[0] = $r5;

        $r6 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_8>;

        $r4[1] = $r6;

        $r7 = <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel GRAY_4>;

        $r4[2] = $r7;

        <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.sprite.SpriteGrayLevel[] $VALUES> = $r4;

        $r8 = new net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome: void <init>()>();

        <net.sourceforge.plantuml.sprite.SpriteGrayLevel: net.sourceforge.plantuml.ugraphic.color.ColorChangerMonochrome mono> = $r8;

        return;
    }
}
