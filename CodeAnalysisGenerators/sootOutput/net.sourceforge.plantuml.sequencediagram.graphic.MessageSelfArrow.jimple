class net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow extends net.sourceforge.plantuml.sequencediagram.graphic.Arrow
{
    private final net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox p1;
    private final double deltaX;
    private final double deltaY;

    public void <init>(double, net.sourceforge.plantuml.skin.rose.Rose, net.sourceforge.plantuml.skin.ArrowComponent, net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox, double, net.sourceforge.plantuml.Url, double)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        double d0, d1, d2;
        net.sourceforge.plantuml.skin.rose.Rose r1;
        net.sourceforge.plantuml.skin.ArrowComponent r2;
        net.sourceforge.plantuml.Url r3;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox r4;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        d0 := @parameter0: double;

        r1 := @parameter1: net.sourceforge.plantuml.skin.rose.Rose;

        r2 := @parameter2: net.sourceforge.plantuml.skin.ArrowComponent;

        r4 := @parameter3: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox;

        d1 := @parameter4: double;

        r3 := @parameter5: net.sourceforge.plantuml.Url;

        d2 := @parameter6: double;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Arrow: void <init>(double,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.skin.ArrowComponent,net.sourceforge.plantuml.Url)>(d0, r1, r2, r3);

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox p1> = r4;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double deltaY> = d1;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double deltaX> = d2;

        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.skin.ArrowComponent $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.skin.ArrowComponent getArrowComponent()>();

        $d0 = interfaceinvoke $r1.<net.sourceforge.plantuml.skin.ArrowComponent: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        return $d0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.skin.ArrowComponent $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.skin.ArrowComponent getArrowComponent()>();

        $d0 = interfaceinvoke $r1.<net.sourceforge.plantuml.skin.ArrowComponent: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        return $d0;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.skin.Context2D)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;
        net.sourceforge.plantuml.skin.Area $r3;
        net.sourceforge.plantuml.Dimension2DDouble $r4;
        net.sourceforge.plantuml.skin.ArrowComponent $r6;
        net.sourceforge.plantuml.skin.Context2D r7;
        net.sourceforge.plantuml.ugraphic.UGraphic r8, r9;

        r2 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r8 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d7 := @parameter1: double;

        r7 := @parameter2: net.sourceforge.plantuml.skin.Context2D;

        r0 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r1 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getStartingX(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getStartingY()>();

        $d2 = r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double deltaY>;

        $d3 = $d1 + $d2;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d0, $d3);

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r3 = new net.sourceforge.plantuml.skin.Area;

        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d5 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d4, $d5);

        specialinvoke $r3.<net.sourceforge.plantuml.skin.Area: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>($r4);

        $d6 = r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double deltaY>;

        virtualinvoke $r3.<net.sourceforge.plantuml.skin.Area: void setDeltaX1(double)>($d6);

        virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: void startUrl(net.sourceforge.plantuml.ugraphic.UGraphic)>(r9);

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.skin.ArrowComponent getArrowComponent()>();

        interfaceinvoke $r6.<net.sourceforge.plantuml.skin.ArrowComponent: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.skin.Area,net.sourceforge.plantuml.skin.Context2D)>(r9, $r3, r7);

        virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: void endUrl(net.sourceforge.plantuml.ugraphic.UGraphic)>(r9);

        return;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r2;
        double $d0, d1, $d2, $d3;
        net.sourceforge.plantuml.sequencediagram.graphic.SegmentColored $r3;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment $r4;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox p1>;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getArrowYStartLevel(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox: net.sourceforge.plantuml.sequencediagram.graphic.SegmentColored getLiveThicknessAt(net.sourceforge.plantuml.graphic.StringBounder,double)>(r1, $d0);

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.graphic.SegmentColored: net.sourceforge.plantuml.sequencediagram.graphic.Segment getSegment()>();

        d1 = virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos2()>();

        $d2 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double deltaX>;

        $d3 = d1 + $d2;

        return $d3;
    }

    public int getDirection(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 1;
    }

    public double getArrowYStartLevel(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.skin.ArrowComponent $r1, r2;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.Dimension2DDouble $r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        java.awt.geom.Point2D $r6;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.skin.ArrowComponent getArrowComponent()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.skin.ArrowComponent;

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.skin.ArrowComponent getArrowComponent()>();

        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = interfaceinvoke r2.<net.sourceforge.plantuml.skin.ArrowComponent: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d2 = interfaceinvoke r2.<net.sourceforge.plantuml.skin.ArrowComponent: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d1, $d2);

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getStartingY()>();

        $r6 = interfaceinvoke r2.<net.sourceforge.plantuml.skin.ArrowComponent: java.awt.geom.Point2D getStartPoint(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r4, $r3);

        $d4 = virtualinvoke $r6.<java.awt.geom.Point2D: double getY()>();

        $d5 = $d3 + $d4;

        return $d5;

     label1:
        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getStartingY()>();

        return $d0;
    }

    public double getArrowYEndLevel(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.skin.ArrowComponent $r1, $r2, r4;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.Dimension2DDouble $r5;
        java.awt.geom.Point2D $r7;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.skin.ArrowComponent getArrowComponent()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.skin.ArrowComponent;

        if $z0 == 0 goto label1;

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.skin.ArrowComponent getArrowComponent()>();

        $r5 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d3 = interfaceinvoke r4.<net.sourceforge.plantuml.skin.ArrowComponent: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d4 = interfaceinvoke r4.<net.sourceforge.plantuml.skin.ArrowComponent: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        specialinvoke $r5.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d3, $d4);

        $d5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getStartingY()>();

        $r7 = interfaceinvoke r4.<net.sourceforge.plantuml.skin.ArrowComponent: java.awt.geom.Point2D getEndPoint(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r3, $r5);

        $d6 = virtualinvoke $r7.<java.awt.geom.Point2D: double getY()>();

        $d7 = $d5 + $d6;

        return $d7;

     label1:
        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getStartingY()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.skin.ArrowComponent getArrowComponent()>();

        $d1 = interfaceinvoke $r2.<net.sourceforge.plantuml.skin.ArrowComponent: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d2 = $d0 + $d1;

        return $d2;
    }

    public double getMaxX(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getStartingX(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = $d0 + $d1;

        return $d2;
    }

    public double getMinX(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getStartingX(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    public java.lang.String toString(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox getParticipantAt(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.sequencediagram.NotePosition)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.sequencediagram.NotePosition r3;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: net.sourceforge.plantuml.sequencediagram.graphic.LivingParticipantBox p1>;

        return $r1;
    }

    public double getActualWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.MessageSelfArrow: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }
}
