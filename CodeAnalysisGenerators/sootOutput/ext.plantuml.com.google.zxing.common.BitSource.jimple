public final class ext.plantuml.com.google.zxing.common.BitSource extends java.lang.Object
{
    private final byte[] bytes;
    private int byteOffset;
    private int bitOffset;

    public void <init>(byte[])
    {
        ext.plantuml.com.google.zxing.common.BitSource r0;
        byte[] r1;

        r0 := @this: ext.plantuml.com.google.zxing.common.BitSource;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.google.zxing.common.BitSource: byte[] bytes> = r1;

        return;
    }

    public int readBits(int)
    {
        java.lang.IllegalArgumentException $r0;
        ext.plantuml.com.google.zxing.common.BitSource r1;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, i16, $i17, $i18, i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, $i31, i33, i34;
        byte[] $r2, $r3, $r4;
        byte $b3, $b10, $b21;

        r1 := @this: ext.plantuml.com.google.zxing.common.BitSource;

        i28 := @parameter0: int;

        if i28 < 1 goto label1;

        if i28 <= 32 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        i29 = 0;

        $i0 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset>;

        if $i0 <= 0 goto label5;

        $i15 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset>;

        i30 = 8 - $i15;

        if i28 >= i30 goto label3;

        $i31 = i28;

        goto label4;

     label3:
        $i31 = i30;

     label4:
        i16 = i30 - $i31;

        $i17 = 8 - $i31;

        $i18 = 255 >> $i17;

        i19 = $i18 << i16;

        $r4 = r1.<ext.plantuml.com.google.zxing.common.BitSource: byte[] bytes>;

        $i20 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int byteOffset>;

        $b21 = $r4[$i20];

        $i22 = $b21 & i19;

        i29 = $i22 >> i16;

        i28 = i28 - $i31;

        $i23 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset>;

        $i24 = $i23 + $i31;

        r1.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset> = $i24;

        $i25 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset>;

        if $i25 != 8 goto label5;

        r1.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset> = 0;

        $i26 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int byteOffset>;

        $i27 = $i26 + 1;

        r1.<ext.plantuml.com.google.zxing.common.BitSource: int byteOffset> = $i27;

     label5:
        if i28 <= 0 goto label8;

     label6:
        if i28 < 8 goto label7;

        $i12 = i29 << 8;

        $r3 = r1.<ext.plantuml.com.google.zxing.common.BitSource: byte[] bytes>;

        $i9 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int byteOffset>;

        $b10 = $r3[$i9];

        $i11 = $b10 & 255;

        i29 = $i12 | $i11;

        $i13 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int byteOffset>;

        $i14 = $i13 + 1;

        r1.<ext.plantuml.com.google.zxing.common.BitSource: int byteOffset> = $i14;

        i28 = i28 + -8;

        goto label6;

     label7:
        if i28 <= 0 goto label8;

        i33 = 8 - i28;

        $i1 = 255 >> i33;

        i34 = $i1 << i33;

        $i6 = i29 << i28;

        $r2 = r1.<ext.plantuml.com.google.zxing.common.BitSource: byte[] bytes>;

        $i2 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int byteOffset>;

        $b3 = $r2[$i2];

        $i4 = $b3 & i34;

        $i5 = $i4 >> i33;

        i29 = $i6 | $i5;

        $i7 = r1.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset>;

        $i8 = $i7 + i28;

        r1.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset> = $i8;

     label8:
        return i29;
    }

    public int available()
    {
        ext.plantuml.com.google.zxing.common.BitSource r0;
        byte[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: ext.plantuml.com.google.zxing.common.BitSource;

        $r1 = r0.<ext.plantuml.com.google.zxing.common.BitSource: byte[] bytes>;

        $i1 = lengthof $r1;

        $i0 = r0.<ext.plantuml.com.google.zxing.common.BitSource: int byteOffset>;

        $i2 = $i1 - $i0;

        $i4 = 8 * $i2;

        $i3 = r0.<ext.plantuml.com.google.zxing.common.BitSource: int bitOffset>;

        $i5 = $i4 - $i3;

        return $i5;
    }
}
