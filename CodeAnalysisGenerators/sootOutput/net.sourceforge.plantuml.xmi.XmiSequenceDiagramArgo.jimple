public class net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo extends net.sourceforge.plantuml.xmi.XmiSequenceDiagram
{

    public void <init>(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, org.w3c.dom.Document)
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r1;
        org.w3c.dom.Document r2;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r2 := @parameter1: org.w3c.dom.Document;

        specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagram: void <init>(net.sourceforge.plantuml.sequencediagram.SequenceDiagram,org.w3c.dom.Document)>(r1, r2);

        return;
    }

    public void build()
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        org.w3c.dom.Document $r1, $r3, $r5, $r8, $r11, $r22;
        org.w3c.dom.Element r2, r6, r9, r12, r15, r23, $r32;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r14, $r27;
        java.lang.StringBuilder $r16, $r17, $r19;
        java.lang.String $r18, $r20;
        org.w3c.dom.Node $r25;
        java.util.Collection $r28;
        java.util.Iterator r29;
        boolean $z0;
        java.lang.Object $r30;
        net.sourceforge.plantuml.sequencediagram.Participant r31;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        $r1 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("XMI");

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("xmi.version", "1.2");

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("xmlns:UML", "href://org.omg/UML/1.3");

        $r3 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r2);

        $r5 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        r6 = interfaceinvoke $r5.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("XMI.header");

        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r6);

        $r8 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        r9 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("XMI.metamodel");

        interfaceinvoke r9.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("xmi.name", "UML");

        interfaceinvoke r9.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("xmi.version", "1.4");

        interfaceinvoke r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r9);

        $r11 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        r12 = interfaceinvoke $r11.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("XMI.content");

        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r12);

        $r14 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        r15 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createElement(java.lang.Object,java.lang.String)>($r14, "UML:Model");

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PlantUML ");

        $r18 = staticinvoke <net.sourceforge.plantuml.version.Version: java.lang.String versionString()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r15.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("name", $r20);

        interfaceinvoke r12.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r15);

        $r22 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        r23 = interfaceinvoke $r22.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Namespace.ownedElement");

        interfaceinvoke r15.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r23);

        $r25 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Node createCollaborationElement()>();

        interfaceinvoke r23.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r25);

        $r27 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r28 = virtualinvoke $r27.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.util.Collection participants()>();

        r29 = interfaceinvoke $r28.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r30 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r31 = (net.sourceforge.plantuml.sequencediagram.Participant) $r30;

        $r32 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createActorElement(net.sourceforge.plantuml.sequencediagram.Participant)>(r31);

        interfaceinvoke r23.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r32);

        goto label1;

     label2:
        return;
    }

    private org.w3c.dom.Element createActorElement(net.sourceforge.plantuml.sequencediagram.Participant)
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1;
        org.w3c.dom.Element r2;
        net.sourceforge.plantuml.cucadiagram.Display $r3;
        java.util.List $r4;
        java.lang.String $r5;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createElement(java.lang.Object,java.lang.String)>(r1, "UML:Actor");

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.Participant: net.sourceforge.plantuml.cucadiagram.Display getDisplay(boolean)>(0);

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        $r5 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(" ", $r4);

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("name", $r5);

        return r2;
    }

    private org.w3c.dom.Node createCollaborationElement()
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        org.w3c.dom.Document $r1, $r3, $r8, $r11, $r14;
        org.w3c.dom.Element r2, r4, $r9, $r12, $r15, $r22, $r27;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r5, $r16;
        java.util.Collection $r6;
        boolean $z0, $z1, $z2;
        org.w3c.dom.Node $r10, $r13, $r24, r31;
        java.util.List $r17;
        java.util.Iterator r18, r29;
        java.lang.Object $r19, $r26;
        net.sourceforge.plantuml.sequencediagram.Event r20;
        net.sourceforge.plantuml.sequencediagram.Message r21, r32;
        net.sourceforge.plantuml.sequencediagram.Participant r30;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        $r1 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Collaboration");

        $r3 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Namespace.ownedElement");

        $r5 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.util.Collection participants()>();

        r29 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r26 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (net.sourceforge.plantuml.sequencediagram.Participant) $r26;

        $r27 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createClassifierRole(net.sourceforge.plantuml.sequencediagram.Participant)>(r30);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r27);

        goto label1;

     label2:
        interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r4);

        $r8 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Collaboration.interaction");

        $r10 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        $r11 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r12 = interfaceinvoke $r11.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Interaction");

        $r13 = interfaceinvoke $r10.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        $r14 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r15 = interfaceinvoke $r14.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Interaction.message");

        r31 = interfaceinvoke $r13.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r15);

        r32 = null;

        $r16 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.util.List events()>();

        r18 = interfaceinvoke $r17.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r19 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r20 = (net.sourceforge.plantuml.sequencediagram.Event) $r19;

        $z2 = r20 instanceof net.sourceforge.plantuml.sequencediagram.Message;

        if $z2 == 0 goto label4;

        r21 = (net.sourceforge.plantuml.sequencediagram.Message) r20;

        $r22 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createMessage(net.sourceforge.plantuml.sequencediagram.Message,net.sourceforge.plantuml.sequencediagram.Message)>(r21, r32);

        interfaceinvoke r31.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r22);

        $r24 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Node createSendAction(net.sourceforge.plantuml.sequencediagram.Message)>(r21);

        interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r24);

        r32 = r21;

     label4:
        goto label3;

     label5:
        return r2;
    }

    private org.w3c.dom.Node createSendAction(net.sourceforge.plantuml.sequencediagram.Message)
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        net.sourceforge.plantuml.sequencediagram.Message r1;
        org.w3c.dom.Element r2, $r4, $r12;
        org.w3c.dom.Document $r3;
        org.w3c.dom.Node $r5;
        java.lang.String[][] $r6;
        java.lang.String[] $r7, $r9;
        java.lang.String $r8, $r11;
        net.sourceforge.plantuml.cucadiagram.Display $r10;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Message;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createElement(java.lang.Object,java.lang.String)>(r1, "UML:SendAction");

        $r3 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Action.script");

        $r5 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        $r6 = newarray (java.lang.String[])[2];

        $r7 = newarray (java.lang.String)[2];

        $r7[0] = "xmi.id";

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: java.lang.String getXmiId(java.lang.String,java.lang.Object)>("UML:ActionExpression", r1);

        $r7[1] = $r8;

        $r6[0] = $r7;

        $r9 = newarray (java.lang.String)[2];

        $r9[0] = "body";

        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.cucadiagram.Display getLabel()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: java.lang.String getDisplayString(net.sourceforge.plantuml.cucadiagram.Display)>($r10);

        $r9[1] = $r11;

        $r6[1] = $r9;

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createElement(java.lang.String,java.lang.String[][])>("UML:ActionExpression", $r6);

        interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r12);

        return r2;
    }

    private org.w3c.dom.Element createElement(java.lang.Object, java.lang.String)
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        java.lang.String r1, $r5;
        java.lang.String[][] $r2;
        java.lang.String[] $r3;
        java.lang.Object r4;
        org.w3c.dom.Element $r6;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        r4 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.String;

        $r2 = newarray (java.lang.String[])[1];

        $r3 = newarray (java.lang.String)[2];

        $r3[0] = "xmi.id";

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: java.lang.String getXmiId(java.lang.String,java.lang.Object)>("UML:ActionExpression", r4);

        $r3[1] = $r5;

        $r2[0] = $r3;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createElement(java.lang.String,java.lang.String[][])>(r1, $r2);

        return $r6;
    }

    private org.w3c.dom.Node createRef(java.lang.String, java.lang.Object)
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        java.lang.String r1, $r5;
        org.w3c.dom.Document $r2;
        org.w3c.dom.Element r3;
        java.lang.Object r4;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        r3 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>(r1);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: java.lang.String getXmiId(java.lang.String,java.lang.Object)>(r1, r4);

        interfaceinvoke r3.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("xmi.idref", $r5);

        return r3;
    }

    private org.w3c.dom.Element createClassifierRole(net.sourceforge.plantuml.sequencediagram.Participant)
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1;
        org.w3c.dom.Element r2, $r5;
        java.lang.String $r3;
        org.w3c.dom.Document $r4;
        org.w3c.dom.Node $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createElement(java.lang.Object,java.lang.String)>(r1, "UML:ClassifierRole");

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.Participant: java.lang.String getCode()>();

        interfaceinvoke r2.<org.w3c.dom.Element: void setAttribute(java.lang.String,java.lang.String)>("name", $r3);

        $r4 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r5 = interfaceinvoke $r4.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:ClassifierRole.base");

        $r6 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Node createRef(java.lang.String,java.lang.Object)>("UML:Actor", r1);

        interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        return r2;
    }

    private org.w3c.dom.Element createMessage(net.sourceforge.plantuml.sequencediagram.Message, net.sourceforge.plantuml.sequencediagram.Message)
    {
        net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo r0;
        net.sourceforge.plantuml.sequencediagram.Message r1, r20;
        org.w3c.dom.Element r2, $r4, $r10, $r16, $r22;
        org.w3c.dom.Document $r3, $r9, $r15, $r21;
        org.w3c.dom.Node $r5, $r7, $r11, $r13, $r17, $r18, $r23, $r24;
        net.sourceforge.plantuml.sequencediagram.Participant $r6, $r12;

        r0 := @this: net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Message;

        r20 := @parameter1: net.sourceforge.plantuml.sequencediagram.Message;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Element createElement(java.lang.Object,java.lang.String)>(r1, "UML:Message");

        $r3 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Message.sender");

        $r5 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant getParticipant1()>();

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Node createRef(java.lang.String,java.lang.Object)>("UML:ClassifierRole", $r6);

        interfaceinvoke $r5.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        $r9 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Message.receiver");

        $r11 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.Message: net.sourceforge.plantuml.sequencediagram.Participant getParticipant2()>();

        $r13 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Node createRef(java.lang.String,java.lang.Object)>("UML:ClassifierRole", $r12);

        interfaceinvoke $r11.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r13);

        $r15 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r16 = interfaceinvoke $r15.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Message.action");

        $r17 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r16);

        $r18 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Node createRef(java.lang.String,java.lang.Object)>("UML:SendAction", r1);

        interfaceinvoke $r17.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r18);

        if r20 == null goto label1;

        $r21 = r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Document document>;

        $r22 = interfaceinvoke $r21.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>("UML:Message.predecessor");

        $r23 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r22);

        $r24 = specialinvoke r0.<net.sourceforge.plantuml.xmi.XmiSequenceDiagramArgo: org.w3c.dom.Node createRef(java.lang.String,java.lang.Object)>("UML:Message", r20);

        interfaceinvoke $r23.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r24);

     label1:
        return r2;
    }
}
