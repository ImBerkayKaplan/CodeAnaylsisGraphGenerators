class net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private net.sourceforge.plantuml.ugraphic.UPolygon polygon;
    private final java.awt.geom.Point2D contact;
    private final java.awt.geom.Point2D dest;
    private final double radius;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor;

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: java.awt.geom.Point2D contact>;

        return $r1;
    }

    public void <init>(java.awt.geom.Point2D, double, java.awt.geom.Point2D, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1, $r2, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;
        java.awt.geom.Point2D$Double $r4, $r13;
        java.awt.geom.Point2D r5, r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle;

        r5 := @parameter0: java.awt.geom.Point2D;

        d21 := @parameter1: double;

        r14 := @parameter2: java.awt.geom.Point2D;

        r3 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: double radius> = 5.0;

        $r1 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r1;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: double radius> = 5.0;

        d22 = virtualinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: double manageround(double)>(d21);

        $r2 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = r3;

        $r4 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: java.awt.geom.Point2D dest> = $r4;

        $r6 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-9.0, -4.0);

        $r7 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-5.0, 0.0);

        $r8 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-9.0, 4.0);

        $r9 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $r10 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d2 = d22 + 1.5707963267948966;

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>($d2);

        $r11 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d3 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        $d4 = staticinvoke <java.lang.Math: double sin(double)>(d22);

        $d5 = 5.0 * $d4;

        $d6 = $d3 + $d5;

        $d7 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>();

        $d8 = staticinvoke <java.lang.Math: double cos(double)>(d22);

        $d9 = 5.0 * $d8;

        $d10 = $d7 - $d9;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UPolygon: net.sourceforge.plantuml.ugraphic.UPolygon translate(double,double)>($d6, $d10);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r12;

        $r13 = new java.awt.geom.Point2D$Double;

        $d11 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        $d12 = d22 + 1.5707963267948966;

        $d13 = staticinvoke <java.lang.Math: double cos(double)>($d12);

        $d14 = 5.0 * $d13;

        $d15 = $d11 - $d14;

        $d16 = virtualinvoke r5.<java.awt.geom.Point2D: double getY()>();

        $d17 = d22 + 1.5707963267948966;

        $d18 = staticinvoke <java.lang.Math: double sin(double)>($d17);

        $d19 = 5.0 * $d18;

        $d20 = $d16 - $d19;

        specialinvoke $r13.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d15, $d20);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: java.awt.geom.Point2D contact> = $r13;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r2, $r6, $r9, $r13;
        net.sourceforge.plantuml.ugraphic.UChange $r1;
        net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle r3;
        net.sourceforge.plantuml.ugraphic.UPolygon $r4;
        net.sourceforge.plantuml.ugraphic.UStroke $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r7;
        net.sourceforge.plantuml.ugraphic.UBackground $r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;
        java.awt.geom.Point2D $r11, $r12;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UEllipse $r14;

        r3 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.UChange changeBack(net.sourceforge.plantuml.ugraphic.UGraphic)>(r0);

        $r2 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r4 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r6 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r9 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r11 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: java.awt.geom.Point2D dest>;

        $d0 = virtualinvoke $r11.<java.awt.geom.Point2D: double getX()>();

        $d1 = $d0 - 5.0;

        $r12 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrowAndCircle: java.awt.geom.Point2D dest>;

        $d2 = virtualinvoke $r12.<java.awt.geom.Point2D: double getY()>();

        $d3 = $d2 - 5.0;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d3);

        $r13 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r14 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(10.0, 10.0);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r14);

        return;
    }
}
