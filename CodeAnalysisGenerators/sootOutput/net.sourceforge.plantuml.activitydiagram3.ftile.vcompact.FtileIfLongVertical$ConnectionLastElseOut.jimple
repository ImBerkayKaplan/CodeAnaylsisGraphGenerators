class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r11;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4, $r12;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical $r5, $r9, $r15;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r10;
        java.awt.geom.Point2D $r7, r8, $r13, r14;
        net.sourceforge.plantuml.ISkinParam $r16;
        net.sourceforge.plantuml.graphic.Rainbow $r17;
        net.sourceforge.plantuml.ugraphic.UPolygon $r18;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r19;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r1);

        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        $r9 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r10 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ugraphic.UTranslate access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical,net.sourceforge.plantuml.graphic.StringBounder)>($r9, r1);

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        r14 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r13);

        $r15 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical this$0>;

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r17 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongVertical$ConnectionLastElseOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r18 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r16, $r17, $r18);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r8);

        $d0 = virtualinvoke r8.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r14.<java.awt.geom.Point2D: double getY()>();

        $d2 = $d1 - 15.0;

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d0, $d2);

        $d3 = virtualinvoke r14.<java.awt.geom.Point2D: double getX()>();

        $d4 = virtualinvoke r14.<java.awt.geom.Point2D: double getY()>();

        $d5 = $d4 - 15.0;

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d3, $d5);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r14);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r19);

        return;
    }
}
