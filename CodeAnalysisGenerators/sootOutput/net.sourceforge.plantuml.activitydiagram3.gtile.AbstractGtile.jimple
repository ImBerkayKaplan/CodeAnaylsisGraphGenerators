public abstract class net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile extends net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtileRoot implements net.sourceforge.plantuml.activitydiagram3.gtile.Gtile
{
    protected final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane singleSwimlane;
    private static final net.sourceforge.plantuml.skin.rose.Rose rose;

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtileRoot: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane singleSwimlane> = r3;

        return;
    }

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ISkinParam r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, r2, null);

        return;
    }

    protected net.sourceforge.plantuml.ugraphic.UTranslate getCoordImpl(java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        java.lang.String r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.UnsupportedOperationException $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r6, $r7, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r1);

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("NORTH_HOOK");

        if $z0 == 0 goto label1;

        $r8 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d8 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d9 = $d8 / 2.0;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d9, 0.0);

        return $r8;

     label1:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("SOUTH_HOOK");

        if $z1 == 0 goto label2;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = $d5 / 2.0;

        $d7 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d6, $d7);

        return $r7;

     label2:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("WEST_HOOK");

        if $z2 == 0 goto label3;

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = $d3 / 2.0;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(0.0, $d4);

        return $r6;

     label3:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("EAST_HOOK");

        if $z3 == 0 goto label4;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = $d1 / 2.0;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d0, $d2);

        return $r5;

     label4:
        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r4;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1, $r2;
        java.util.Set $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane singleSwimlane>;

        if $r1 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        return $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane singleSwimlane>;

        $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2);

        return $r3;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlane(java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane singleSwimlane>;

        return $r1;
    }

    public java.util.Collection getInnerConnections()
    {
        java.util.List $r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public final net.sourceforge.plantuml.ugraphic.UStroke getThickness()
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile r0;
        net.sourceforge.plantuml.ISkinParam $r1;
        net.sourceforge.plantuml.LineParam $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3, r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r2 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam activityBorder>;

        r4 = interfaceinvoke $r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.LineParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r2, null);

        if r4 != null goto label1;

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        r4 = $r3;

     label1:
        return r4;
    }

    protected final net.sourceforge.plantuml.skin.rose.Rose getRose()
    {
        net.sourceforge.plantuml.skin.rose.Rose $r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile;

        $r0 = <net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.skin.rose.Rose rose>;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.skin.rose.Rose $r0;

        $r0 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r0.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        <net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.skin.rose.Rose rose> = $r0;

        return;
    }
}
