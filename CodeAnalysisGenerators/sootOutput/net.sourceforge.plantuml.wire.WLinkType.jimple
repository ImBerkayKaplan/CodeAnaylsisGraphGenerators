public final enum class net.sourceforge.plantuml.wire.WLinkType extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.wire.WLinkType NORMAL;
    public static final enum net.sourceforge.plantuml.wire.WLinkType BUS;
    private static final net.sourceforge.plantuml.wire.WLinkType[] $VALUES;

    public static net.sourceforge.plantuml.wire.WLinkType[] values()
    {
        net.sourceforge.plantuml.wire.WLinkType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.wire.WLinkType[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.wire.WLinkType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.wire.WLinkType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/wire/WLinkType;", r0);

        $r2 = (net.sourceforge.plantuml.wire.WLinkType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.wire.WLinkType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.wire.WLinkType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static net.sourceforge.plantuml.wire.WLinkType 'from'(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r1;
        net.sourceforge.plantuml.wire.WLinkType $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("-");

        if $z0 == 0 goto label1;

        $r3 = <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType NORMAL>;

        return $r3;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("=");

        if $z1 == 0 goto label2;

        $r2 = <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType BUS>;

        return $r2;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;
    }

    public double spaceForNext()
    {
        net.sourceforge.plantuml.wire.WLinkType r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: net.sourceforge.plantuml.wire.WLinkType;

        $r1 = <net.sourceforge.plantuml.wire.WLinkType$1: int[] $SwitchMap$net$sourceforge$plantuml$wire$WLinkType>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.wire.WLinkType: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        return 15.0;

     label2:
        return 25.0;

     label3:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.wire.WLinkType $r0, $r1, $r3, $r4;
        net.sourceforge.plantuml.wire.WLinkType[] $r2;

        $r0 = new net.sourceforge.plantuml.wire.WLinkType;

        specialinvoke $r0.<net.sourceforge.plantuml.wire.WLinkType: void <init>(java.lang.String,int)>("NORMAL", 0);

        <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType NORMAL> = $r0;

        $r1 = new net.sourceforge.plantuml.wire.WLinkType;

        specialinvoke $r1.<net.sourceforge.plantuml.wire.WLinkType: void <init>(java.lang.String,int)>("BUS", 1);

        <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType BUS> = $r1;

        $r2 = newarray (net.sourceforge.plantuml.wire.WLinkType)[2];

        $r3 = <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType NORMAL>;

        $r2[0] = $r3;

        $r4 = <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType BUS>;

        $r2[1] = $r4;

        <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType[] $VALUES> = $r2;

        return;
    }
}
