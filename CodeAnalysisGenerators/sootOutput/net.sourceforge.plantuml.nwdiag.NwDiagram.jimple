public class net.sourceforge.plantuml.nwdiag.NwDiagram extends net.sourceforge.plantuml.UmlDiagram
{
    private boolean initDone;
    private final java.util.Map servers;
    private final java.util.List networks;
    private final java.util.List groups;
    private net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup;
    private final net.sourceforge.plantuml.nwdiag.next.NPlayField playField;
    private final java.util.List stack;
    private final double margin;
    static final boolean $assertionsDisabled;

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.nwdiag.NwDiagram r1;

        r1 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Nwdiag)");

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.UmlDiagramType $r3;
        java.util.LinkedHashMap $r4;
        java.util.ArrayList $r5, $r6, $r8;
        net.sourceforge.plantuml.nwdiag.next.NPlayField $r7;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        $r3 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType NWDIAG>;

        specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType)>(r1, r2, $r3);

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: double margin> = 5.0;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List groups> = $r6;

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup> = null;

        $r7 = new net.sourceforge.plantuml.nwdiag.next.NPlayField;

        specialinvoke $r7.<net.sourceforge.plantuml.nwdiag.next.NPlayField: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.next.NPlayField playField> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack> = $r8;

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: double margin> = 5.0;

        return;
    }

    public void init()
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: boolean initDone> = 1;

        return;
    }

    private net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        net.sourceforge.plantuml.nwdiag.core.Network $r5;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (net.sourceforge.plantuml.nwdiag.core.Network) $r4;

        return $r5;
    }

    private net.sourceforge.plantuml.nwdiag.core.Network stackedNetwork()
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.nwdiag.core.NStackable r4;
        net.sourceforge.plantuml.nwdiag.core.Network $r5;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.nwdiag.core.NStackable) $r3;

        $z1 = r4 instanceof net.sourceforge.plantuml.nwdiag.core.Network;

        if $z1 == 0 goto label2;

        $r5 = (net.sourceforge.plantuml.nwdiag.core.Network) r4;

        return $r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    private net.sourceforge.plantuml.nwdiag.core.NwGroup stakedGroup()
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.nwdiag.core.NStackable r4;
        net.sourceforge.plantuml.nwdiag.core.NwGroup $r5;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.nwdiag.core.NStackable) $r3;

        $z1 = r4 instanceof net.sourceforge.plantuml.nwdiag.core.NwGroup;

        if $z1 == 0 goto label2;

        $r5 = (net.sourceforge.plantuml.nwdiag.core.NwGroup) r4;

        return $r5;

     label2:
        goto label1;

     label3:
        return null;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult openGroup(java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        boolean $z0, $z1, $z3;
        java.util.List $r1, $r4, $r5;
        net.sourceforge.plantuml.nwdiag.core.NwGroup $r2;
        java.lang.String r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r6, $r9, $r10;
        java.lang.Object $r7;
        net.sourceforge.plantuml.nwdiag.core.NStackable r8;
        java.util.Iterator r11;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r3 := @parameter0: java.lang.String;

        $z0 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: boolean initDone>;

        if $z0 != 0 goto label1;

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.command.CommandExecutionResult errorNoInit()>();

        return $r10;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack>;

        r11 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.nwdiag.core.NStackable) $r7;

        $z3 = r8 instanceof net.sourceforge.plantuml.nwdiag.core.NwGroup;

        if $z3 == 0 goto label3;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot nest group");

        return $r9;

     label3:
        goto label2;

     label4:
        $r2 = new net.sourceforge.plantuml.nwdiag.core.NwGroup;

        specialinvoke $r2.<net.sourceforge.plantuml.nwdiag.core.NwGroup: void <init>(java.lang.String)>(r3);

        $r4 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack>;

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>(0, $r2);

        $r5 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List groups>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup> = $r2;

        $r6 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r6;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult openNetwork(java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        boolean $z0, $z1, $z2;
        java.util.List $r1, $r3;
        java.lang.String r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4, $r7, $r8;
        java.lang.Object $r5;
        net.sourceforge.plantuml.nwdiag.core.NStackable r6;
        java.util.Iterator r9;
        net.sourceforge.plantuml.nwdiag.core.Network r10;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r2 := @parameter0: java.lang.String;

        $z0 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: boolean initDone>;

        if $z0 != 0 goto label1;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.command.CommandExecutionResult errorNoInit()>();

        return $r8;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack>;

        r9 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.nwdiag.core.NStackable) $r5;

        $z2 = r6 instanceof net.sourceforge.plantuml.nwdiag.core.Network;

        if $z2 == 0 goto label3;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot nest network");

        return $r7;

     label3:
        goto label2;

     label4:
        r10 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network createNetwork(java.lang.String)>(r2);

        $r3 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack>;

        interfaceinvoke $r3.<java.util.List: void add(int,java.lang.Object)>(0, r10);

        $r4 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r4;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult closeSomething()
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        boolean $z0;
        java.util.List $r1, $r3;
        int $i0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r5;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        $z0 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: boolean initDone>;

        if $z0 != 0 goto label1;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.command.CommandExecutionResult errorNoInit()>();

        return $r5;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $r3 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List stack>;

        interfaceinvoke $r3.<java.util.List: java.lang.Object remove(int)>(0);

     label2:
        r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup> = null;

        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r2;
    }

    private net.sourceforge.plantuml.nwdiag.core.Network createNetwork(java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.core.Network $r0;
        net.sourceforge.plantuml.nwdiag.NwDiagram r1;
        net.sourceforge.plantuml.nwdiag.next.NPlayField $r2, $r4;
        net.sourceforge.plantuml.nwdiag.next.NStage $r3, $r5;
        java.lang.String r6;
        java.util.List $r8;

        r1 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r6 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.nwdiag.core.Network;

        $r2 = r1.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.next.NPlayField playField>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.nwdiag.next.NPlayField: net.sourceforge.plantuml.nwdiag.next.NStage getLast()>();

        $r4 = r1.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.next.NPlayField playField>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.nwdiag.next.NPlayField: net.sourceforge.plantuml.nwdiag.next.NStage createNewStage()>();

        specialinvoke $r0.<net.sourceforge.plantuml.nwdiag.core.Network: void <init>(net.sourceforge.plantuml.nwdiag.next.NStage,net.sourceforge.plantuml.nwdiag.next.NStage,java.lang.String)>($r3, $r5, r6);

        $r8 = r1.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult link(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        boolean $z0;
        net.sourceforge.plantuml.nwdiag.core.Network $r1, r6, $r11, $r17;
        java.lang.String r2, r8;
        java.util.Map $r3, $r16;
        java.lang.Object $r4;
        net.sourceforge.plantuml.nwdiag.core.NServer r5, $r7, $r13, r15;
        net.sourceforge.plantuml.nwdiag.next.NBar $r9, $r19;
        net.sourceforge.plantuml.command.CommandExecutionResult $r14, $r20;
        net.sourceforge.plantuml.nwdiag.next.NPlayField $r18;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r2 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $z0 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: boolean initDone>;

        if $z0 != 0 goto label1;

        $r14 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.command.CommandExecutionResult errorNoInit()>();

        return $r14;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        if $r1 != null goto label2;

        specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network createNetwork(java.lang.String)>(r2);

        $r13 = new net.sourceforge.plantuml.nwdiag.core.NServer;

        specialinvoke $r13.<net.sourceforge.plantuml.nwdiag.core.NServer: void <init>(java.lang.String)>(r8);

        r15 = $r13;

        goto label4;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (net.sourceforge.plantuml.nwdiag.core.NServer) $r4;

        r6 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network createNetwork(java.lang.String)>("");

        virtualinvoke r6.<net.sourceforge.plantuml.nwdiag.core.Network: void goInvisible()>();

        if r5 == null goto label3;

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        virtualinvoke r5.<net.sourceforge.plantuml.nwdiag.core.NServer: void connectTo(net.sourceforge.plantuml.nwdiag.core.Network)>($r11);

     label3:
        $r7 = new net.sourceforge.plantuml.nwdiag.core.NServer;

        $r9 = virtualinvoke r5.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        specialinvoke $r7.<net.sourceforge.plantuml.nwdiag.core.NServer: void <init>(java.lang.String,net.sourceforge.plantuml.nwdiag.next.NBar)>(r8, $r9);

        r15 = $r7;

     label4:
        $r16 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers>;

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r8, r15);

        $r17 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        virtualinvoke r15.<net.sourceforge.plantuml.nwdiag.core.NServer: void connectTo(net.sourceforge.plantuml.nwdiag.core.Network)>($r17);

        $r18 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.next.NPlayField playField>;

        $r19 = virtualinvoke r15.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        virtualinvoke $r18.<net.sourceforge.plantuml.nwdiag.next.NPlayField: void addInPlayfield(net.sourceforge.plantuml.nwdiag.next.NBar)>($r19);

        $r20 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r20;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addElement(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.nwdiag.core.NwGroup $r1, $r9, $r12, $r15;
        net.sourceforge.plantuml.nwdiag.core.Network $r2, r17, $r20;
        java.lang.String r3, r6, $r22;
        java.util.Map $r4, $r8, $r11, r19;
        java.lang.Object $r5, $r21;
        net.sourceforge.plantuml.nwdiag.core.NServer $r7, $r10, r18;
        java.lang.AssertionError $r13;
        net.sourceforge.plantuml.command.CommandExecutionResult $r14, $r16, $r25;
        net.sourceforge.plantuml.nwdiag.next.NPlayField $r23;
        net.sourceforge.plantuml.nwdiag.next.NBar $r24;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        $z0 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: boolean initDone>;

        if $z0 != 0 goto label1;

        $r16 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.command.CommandExecutionResult errorNoInit()>();

        return $r16;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup>;

        if $r1 == null goto label2;

        $r15 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup>;

        virtualinvoke $r15.<net.sourceforge.plantuml.nwdiag.core.NwGroup: void addName(java.lang.String)>(r3);

     label2:
        $r2 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        if $r2 != null goto label5;

        $r9 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup>;

        if $r9 == null goto label3;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r14;

     label3:
        $z1 = <net.sourceforge.plantuml.nwdiag.NwDiagram: boolean $assertionsDisabled>;

        if $z1 != 0 goto label4;

        $r12 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup>;

        if $r12 == null goto label4;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label4:
        r17 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network createNetwork(java.lang.String)>("");

        virtualinvoke r17.<net.sourceforge.plantuml.nwdiag.core.Network: void goInvisible()>();

        $r10 = new net.sourceforge.plantuml.nwdiag.core.NServer;

        specialinvoke $r10.<net.sourceforge.plantuml.nwdiag.core.NServer: void <init>(java.lang.String)>(r3);

        r18 = $r10;

        $r11 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r10);

        virtualinvoke $r10.<net.sourceforge.plantuml.nwdiag.core.NServer: void doNotPrintFirstLink()>();

        goto label6;

     label5:
        $r4 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r18 = (net.sourceforge.plantuml.nwdiag.core.NServer) $r5;

        if r18 != null goto label6;

        $r7 = new net.sourceforge.plantuml.nwdiag.core.NServer;

        specialinvoke $r7.<net.sourceforge.plantuml.nwdiag.core.NServer: void <init>(java.lang.String)>(r3);

        r18 = $r7;

        $r8 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r7);

     label6:
        r19 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map toSet(java.lang.String)>(r6);

        $r20 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        $r21 = interfaceinvoke r19.<java.util.Map: java.lang.Object get(java.lang.Object)>("address");

        $r22 = (java.lang.String) $r21;

        virtualinvoke r18.<net.sourceforge.plantuml.nwdiag.core.NServer: void connectTo(net.sourceforge.plantuml.nwdiag.core.Network,java.lang.String)>($r20, $r22);

        virtualinvoke r18.<net.sourceforge.plantuml.nwdiag.core.NServer: void updateProperties(java.util.Map)>(r19);

        $r23 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.next.NPlayField playField>;

        $r24 = virtualinvoke r18.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        virtualinvoke $r23.<net.sourceforge.plantuml.nwdiag.next.NPlayField: void addInPlayfield(net.sourceforge.plantuml.nwdiag.next.NBar)>($r24);

        $r25 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r25;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult errorNoInit()
    {
        net.sourceforge.plantuml.command.CommandExecutionResult $r0;
        net.sourceforge.plantuml.nwdiag.NwDiagram r1;

        r1 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        $r0 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Maybe you forget \'nwdiag {\' in your diagram ?");

        return $r0;
    }

    private java.util.Map toSet(java.lang.String)
    {
        java.util.HashMap $r0;
        java.lang.String r2, r5, $r6, $r10;
        java.util.regex.Pattern r3;
        java.util.regex.Matcher r4;
        boolean $z0;
        net.sourceforge.plantuml.nwdiag.NwDiagram r9;

        r9 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        if r2 != null goto label1;

        return $r0;

     label1:
        r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*(\\w+)\\s*=\\s*(\"([^\"]*)\"|[^\\s,]+)");

        r4 = virtualinvoke r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r2);

     label2:
        $z0 = virtualinvoke r4.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label5;

        r5 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r6 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        if $r6 != null goto label3;

        $r10 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        goto label4;

     label3:
        $r10 = virtualinvoke r4.<java.util.regex.Matcher: java.lang.String group(int)>(3);

     label4:
        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r10);

        goto label2;

     label5:
        return $r0;
    }

    protected net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r4;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r3;
        java.io.OutputStream r5;
        net.sourceforge.plantuml.core.ImageData $r6;
        int i0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r5 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r1 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.svek.TextBlockBackcolored getTextBlock()>();

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r3);

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r5);

        return $r6;
    }

    private net.sourceforge.plantuml.svek.TextBlockBackcolored getTextBlock()
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram$1 $r0;
        net.sourceforge.plantuml.nwdiag.NwDiagram r1;

        r1 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        $r0 = new net.sourceforge.plantuml.nwdiag.NwDiagram$1;

        specialinvoke $r0.<net.sourceforge.plantuml.nwdiag.NwDiagram$1: void <init>(net.sourceforge.plantuml.nwdiag.NwDiagram)>(r1);

        return $r0;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleDefinitionNetwork(net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.nwdiag.NwDiagram r6;

        r6 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r4 := @parameter0: net.sourceforge.plantuml.style.SName;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName nwdiagDiagram>;

        $r0[2] = $r3;

        $r0[3] = r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private net.sourceforge.plantuml.graphic.TextBlock toTextBlockForNetworkName(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r20;
        net.sourceforge.plantuml.nwdiag.NwDiagram r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r7, $r9;
        net.sourceforge.plantuml.style.StyleBuilder r3;
        net.sourceforge.plantuml.style.SName $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.style.Style r6;
        net.sourceforge.plantuml.api.ThemeStyle $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r10;
        net.sourceforge.plantuml.graphic.FontConfiguration r11;
        net.sourceforge.plantuml.cucadiagram.Display $r12;
        net.sourceforge.plantuml.SpriteContainerEmpty $r13;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r14;
        net.sourceforge.plantuml.graphic.TextBlock $r15;
        java.lang.StringBuilder $r16, $r17, $r18, $r19;

        r1 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r20 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName network>;

        $r5 = specialinvoke r1.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.style.StyleSignature getStyleDefinitionNetwork(net.sourceforge.plantuml.style.SName)>($r4);

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r3);

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r11 = virtualinvoke r6.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r8, $r10);

        $r12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r20);

        $r14 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        $r13 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r13.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        $r15 = virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r11, $r14, $r13);

        return $r15;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D getTotalDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram$2 $r0;
        net.sourceforge.plantuml.nwdiag.NwDiagram r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ugraphic.MinMax $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;

        r1 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.nwdiag.NwDiagram$2;

        specialinvoke $r0.<net.sourceforge.plantuml.nwdiag.NwDiagram$2: void <init>(net.sourceforge.plantuml.nwdiag.NwDiagram)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.UDrawable,net.sourceforge.plantuml.graphic.StringBounder,boolean)>($r0, r2, 1);

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.awt.geom.Dimension2D getDimension()>();

        return $r4;
    }

    private void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UTranslate $r0, $r6, $r8, $r16;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.nwdiag.NwDiagram r2;
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r3;
        java.util.List $r4, $r5, $r11, $r18;
        int $i0, $i1, i2, i3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r7, $r9, $r17, r22, r23;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12, d13, d14, d15;
        net.sourceforge.plantuml.ugraphic.UEmpty $r10;
        java.lang.Object $r12, $r19;
        java.lang.String $r13, $r21, r24, r28;
        net.sourceforge.plantuml.graphic.TextBlock r14, r25;
        net.sourceforge.plantuml.awt.geom.Dimension2D r15, r26, r29;
        net.sourceforge.plantuml.nwdiag.core.Network r20, r27;

        r2 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r22 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(5.0, 5.0);

        r23 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        r1 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d12 = 0.0;

        d13 = 0.0;

        r3 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated buildGrid(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        i2 = 0;

     label1:
        $r4 = r2.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i2 >= $i0 goto label3;

        $r18 = r2.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.lang.Object get(int)>(i2);

        r20 = (net.sourceforge.plantuml.nwdiag.core.Network) $r19;

        r24 = virtualinvoke r20.<net.sourceforge.plantuml.nwdiag.core.Network: java.lang.String getOwnAdress()>();

        $r21 = virtualinvoke r20.<net.sourceforge.plantuml.nwdiag.core.Network: java.lang.String getDisplayName()>();

        r25 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.graphic.TextBlock toTextBlockForNetworkName(java.lang.String,java.lang.String)>($r21, r24);

        r26 = interfaceinvoke r25.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        if i2 != 0 goto label2;

        $d10 = virtualinvoke r26.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d11 = $d10 - 5.0;

        d13 = $d11 / 2.0;

     label2:
        $d9 = virtualinvoke r26.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d12 = staticinvoke <java.lang.Math: double max(double,double)>(d12, $d9);

        i2 = i2 + 1;

        goto label1;

     label3:
        d14 = 0.0;

        i3 = 0;

     label4:
        $r5 = r2.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i3 >= $i1 goto label5;

        $r11 = r2.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i3);

        r27 = (net.sourceforge.plantuml.nwdiag.core.Network) $r12;

        r28 = virtualinvoke r27.<net.sourceforge.plantuml.nwdiag.core.Network: java.lang.String getOwnAdress()>();

        $r13 = virtualinvoke r27.<net.sourceforge.plantuml.nwdiag.core.Network: java.lang.String getDisplayName()>();

        r14 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.graphic.TextBlock toTextBlockForNetworkName(java.lang.String,java.lang.String)>($r13, r28);

        r15 = interfaceinvoke r14.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d6 = virtualinvoke r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d7 = d12 - $d6;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, d14);

        $r17 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke r14.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r17);

        $d8 = virtualinvoke r3.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: double lineHeight(net.sourceforge.plantuml.graphic.StringBounder,int)>(r1, i3);

        d14 = d14 + $d8;

        i3 = i3 + 1;

        goto label4;

     label5:
        d15 = d12 + 5.0;

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d15, d13);

        $r7 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        virtualinvoke r3.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

        r29 = virtualinvoke r3.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r29.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 + d15;

        $d2 = $d1 + 5.0;

        $d3 = virtualinvoke r29.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = $d3 + d13;

        $d5 = $d4 + 5.0;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d2, $d5);

        $r9 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>(1.0, 1.0);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        return;
    }

    private java.util.Map getLinks(net.sourceforge.plantuml.nwdiag.core.NServer)
    {
        java.util.LinkedHashMap $r0;
        net.sourceforge.plantuml.nwdiag.NwDiagram r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.nwdiag.core.Network r6;
        net.sourceforge.plantuml.nwdiag.core.NServer r7;
        java.lang.String r8;

        r2 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r7 := @parameter0: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.nwdiag.core.Network) $r5;

        r8 = virtualinvoke r7.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String getAdress(net.sourceforge.plantuml.nwdiag.core.Network)>(r6);

        if r8 == null goto label2;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, r8);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    private net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated buildGrid(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        java.util.Map $r1, $r7, r13, $r18, r26;
        net.sourceforge.plantuml.nwdiag.next.NPlayField $r2, $r12;
        java.util.List $r3, $r6, $r8, $r9, $r14, $r15, $r31;
        java.util.Collection $r4;
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated $r5;
        int $i0, $i1, $i2, i3, i4;
        net.sourceforge.plantuml.ISkinParam $r10, $r32, $r35;
        java.lang.Object $r16, $r21, $r23, $r28;
        net.sourceforge.plantuml.nwdiag.core.Network r17, $r25;
        java.util.Set $r19;
        java.util.Iterator r20;
        boolean $z0;
        java.util.Map$Entry r22;
        net.sourceforge.plantuml.nwdiag.core.NServer r24;
        net.sourceforge.plantuml.nwdiag.next.NBar $r27;
        java.lang.Integer $r29;
        net.sourceforge.plantuml.nwdiag.core.NwGroup r30;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement $r33;
        net.sourceforge.plantuml.graphic.StringBounder r34;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r34 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.next.NPlayField playField>;

        $r3 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List groups>;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers>;

        $r4 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        virtualinvoke $r2.<net.sourceforge.plantuml.nwdiag.next.NPlayField: void fixGroups(java.util.List,java.util.Collection)>($r3, $r4);

        $r5 = new net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        $r6 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers>;

        $i1 = interfaceinvoke $r7.<java.util.Map: int size()>();

        $r8 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List groups>;

        $r9 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r5.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: void <init>(int,int,java.util.List,java.util.List,net.sourceforge.plantuml.ISkinParam)>($i0, $i1, $r8, $r9, $r10);

        $r12 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.next.NPlayField playField>;

        r13 = virtualinvoke $r12.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.Map doLayout()>();

        i4 = 0;

     label1:
        $r14 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $i2 = interfaceinvoke $r14.<java.util.List: int size()>();

        if i4 >= $i2 goto label6;

        $r15 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i4);

        r17 = (net.sourceforge.plantuml.nwdiag.core.Network) $r16;

        $r18 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map servers>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Set entrySet()>();

        r20 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r21 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r21;

        $r23 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        r24 = (net.sourceforge.plantuml.nwdiag.core.NServer) $r23;

        $r25 = virtualinvoke r24.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.core.Network getMainNetworkNext()>();

        if $r25 != r17 goto label4;

        r26 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.Map getLinks(net.sourceforge.plantuml.nwdiag.core.NServer)>(r24);

        $r27 = virtualinvoke r24.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        $r28 = interfaceinvoke r13.<java.util.Map: java.lang.Object get(java.lang.Object)>($r27);

        $r29 = (java.lang.Integer) $r28;

        i3 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();

        d1 = 15.0;

        r30 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup getGroupOf(net.sourceforge.plantuml.nwdiag.core.NServer)>(r24);

        if r30 == null goto label3;

        $r35 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $d0 = virtualinvoke r30.<net.sourceforge.plantuml.nwdiag.core.NwGroup: double getTopHeaderHeight(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam)>(r34, $r35);

        d1 = 15.0 + $d0;

     label3:
        $r31 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List networks>;

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r33 = virtualinvoke r24.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.LinkedElement getLinkedElement(double,java.util.Map,java.util.List,net.sourceforge.plantuml.ISkinParam)>(d1, r26, $r31, $r32);

        virtualinvoke $r5.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: void add(int,int,net.sourceforge.plantuml.nwdiag.next.LinkedElement)>(i4, i3, $r33);

     label4:
        goto label2;

     label5:
        i4 = i4 + 1;

        goto label1;

     label6:
        return $r5;
    }

    private net.sourceforge.plantuml.nwdiag.core.NwGroup getGroupOf(net.sourceforge.plantuml.nwdiag.core.NServer)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.nwdiag.core.NwGroup r4;
        net.sourceforge.plantuml.nwdiag.core.NServer r5;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r5 := @parameter0: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: java.util.List groups>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.nwdiag.core.NwGroup) $r3;

        $z1 = virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.NwGroup: boolean contains(net.sourceforge.plantuml.nwdiag.core.NServer)>(r5);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult setProperty(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String r1, $r2, r4, $r18, $r22, $r23, $r25;
        net.sourceforge.plantuml.nwdiag.core.NwGroup $r3, $r5, $r12, $r15;
        net.sourceforge.plantuml.nwdiag.core.Network $r6, $r13, $r14, $r16, $r17, $r19, $r20;
        net.sourceforge.plantuml.ISkinParam $r7, $r9;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r8;
        net.sourceforge.plantuml.api.ThemeStyle $r10;
        net.sourceforge.plantuml.command.CommandExecutionResult $r21, $r26;
        net.sourceforge.plantuml.ugraphic.color.HColor $r24;

        r0 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $z0 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: boolean initDone>;

        if $z0 != 0 goto label1;

        $r21 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.command.CommandExecutionResult errorNoInit()>();

        return $r21;

     label1:
        $r2 = "address";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

        $r19 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        if $r19 == null goto label2;

        $r20 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        virtualinvoke $r20.<net.sourceforge.plantuml.nwdiag.core.Network: void setOwnAdress(java.lang.String)>(r4);

     label2:
        $r22 = "width";

        $z3 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z3 == 0 goto label3;

        $r16 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        if $r16 == null goto label3;

        $r17 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        $r18 = "full";

        $z2 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        virtualinvoke $r17.<net.sourceforge.plantuml.nwdiag.core.Network: void setFullWidth(boolean)>($z2);

     label3:
        $r23 = "color";

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z4 == 0 goto label7;

        if r4 != null goto label4;

        $r24 = null;

        goto label5;

     label4:
        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r24 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r10, r4);

     label5:
        $r12 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup>;

        if $r12 == null goto label6;

        $r15 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup>;

        virtualinvoke $r15.<net.sourceforge.plantuml.nwdiag.core.NwGroup: void setColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r24);

        goto label7;

     label6:
        $r13 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        if $r13 == null goto label7;

        $r14 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        virtualinvoke $r14.<net.sourceforge.plantuml.nwdiag.core.Network: void setColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r24);

     label7:
        $r25 = "description";

        $z5 = virtualinvoke $r25.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z5 == 0 goto label9;

        $r3 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup>;

        if $r3 != null goto label8;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.Network lastNetwork()>();

        virtualinvoke $r6.<net.sourceforge.plantuml.nwdiag.core.Network: void setDescription(java.lang.String)>(r4);

        goto label9;

     label8:
        $r5 = r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.nwdiag.core.NwGroup currentGroup>;

        virtualinvoke $r5.<net.sourceforge.plantuml.nwdiag.core.NwGroup: void setDescription(java.lang.String)>(r4);

     label9:
        $r26 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r26;
    }

    public net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft getDefaultMargins()
    {
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft $r0;
        net.sourceforge.plantuml.nwdiag.NwDiagram r1;

        r1 := @this: net.sourceforge.plantuml.nwdiag.NwDiagram;

        $r0 = staticinvoke <net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft none()>();

        return $r0;
    }

    static void access$000(net.sourceforge.plantuml.nwdiag.NwDiagram, net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @parameter0: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    static net.sourceforge.plantuml.awt.geom.Dimension2D access$100(net.sourceforge.plantuml.nwdiag.NwDiagram, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.nwdiag.NwDiagram r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;

        r0 := @parameter0: net.sourceforge.plantuml.nwdiag.NwDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.NwDiagram: net.sourceforge.plantuml.awt.geom.Dimension2D getTotalDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/nwdiag/NwDiagram;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.nwdiag.NwDiagram: boolean $assertionsDisabled> = $z1;

        return;
    }
}
