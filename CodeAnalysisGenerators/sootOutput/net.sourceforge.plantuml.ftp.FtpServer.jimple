public class net.sourceforge.plantuml.ftp.FtpServer extends java.lang.Object
{
    private final java.util.Map datas;
    private final java.util.concurrent.ExecutorService exeImage;
    private final int listenPort;
    private int portFree;
    private java.lang.String ip;
    private final net.sourceforge.plantuml.FileFormat defaultfileFormat;

    public void <init>(int, net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.ftp.FtpServer r0;
        java.util.TreeMap $r1;
        java.util.concurrent.ExecutorService $r2;
        int i0;
        net.sourceforge.plantuml.FileFormat r3, $r5;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpServer;

        i0 := @parameter0: int;

        r3 := @parameter1: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<net.sourceforge.plantuml.ftp.FtpServer: java.util.Map datas> = $r1;

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newFixedThreadPool(int)>(2);

        r0.<net.sourceforge.plantuml.ftp.FtpServer: java.util.concurrent.ExecutorService exeImage> = $r2;

        r0.<net.sourceforge.plantuml.ftp.FtpServer: int portFree> = 10042;

        r0.<net.sourceforge.plantuml.ftp.FtpServer: int listenPort> = i0;

        if r3 != null goto label1;

        $r5 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        goto label2;

     label1:
        $r5 = r3;

     label2:
        r0.<net.sourceforge.plantuml.ftp.FtpServer: net.sourceforge.plantuml.FileFormat defaultfileFormat> = $r5;

        return;
    }

    public synchronized int getFreePort()
    {
        net.sourceforge.plantuml.ftp.FtpServer r0;
        int $i0, $i1, $i2;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpServer;

        $i0 = r0.<net.sourceforge.plantuml.ftp.FtpServer: int portFree>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.ftp.FtpServer: int portFree> = $i1;

        $i2 = r0.<net.sourceforge.plantuml.ftp.FtpServer: int portFree>;

        return $i2;
    }

    public void go() throws java.io.IOException
    {
        java.net.ServerSocket $r0;
        net.sourceforge.plantuml.ftp.FtpServer r1;
        int $i0;
        java.util.concurrent.ExecutorService r3;
        java.net.Socket r4;
        java.net.InetAddress $r5, $r10;
        java.lang.String $r6, $r11, $r14;
        java.lang.StringBuilder $r7, $r9, $r12, $r13;
        java.io.PrintStream $r8;
        net.sourceforge.plantuml.ftp.FtpLoop $r15;

        r1 := @this: net.sourceforge.plantuml.ftp.FtpServer;

        $r0 = new java.net.ServerSocket;

        $i0 = r1.<net.sourceforge.plantuml.ftp.FtpServer: int listenPort>;

        specialinvoke $r0.<java.net.ServerSocket: void <init>(int)>($i0);

        r3 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

     label1:
        r4 = virtualinvoke $r0.<java.net.ServerSocket: java.net.Socket accept()>();

        $r5 = virtualinvoke r4.<java.net.Socket: java.net.InetAddress getLocalAddress()>();

        $r6 = virtualinvoke $r5.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r1.<net.sourceforge.plantuml.ftp.FtpServer: java.lang.String ip> = $r6;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New Client Connected from ");

        $r10 = virtualinvoke r4.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $r11 = virtualinvoke $r10.<java.net.InetAddress: java.lang.String getHostName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("... ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r15 = new net.sourceforge.plantuml.ftp.FtpLoop;

        specialinvoke $r15.<net.sourceforge.plantuml.ftp.FtpLoop: void <init>(java.net.Socket,net.sourceforge.plantuml.ftp.FtpServer)>(r4, r1);

        interfaceinvoke r3.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r15);

        goto label1;
    }

    public java.lang.String getIpServer()
    {
        net.sourceforge.plantuml.ftp.FtpServer r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpServer;

        $r1 = r0.<net.sourceforge.plantuml.ftp.FtpServer: java.lang.String ip>;

        return $r1;
    }

    public synchronized net.sourceforge.plantuml.ftp.FtpConnexion getFtpConnexion(java.lang.String)
    {
        net.sourceforge.plantuml.ftp.FtpServer r0;
        java.lang.String r1;
        java.util.Map $r2, $r7;
        java.lang.Object $r3, $r4;
        net.sourceforge.plantuml.ftp.FtpConnexion $r5, r9;
        net.sourceforge.plantuml.FileFormat $r6;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpServer;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.ftp.FtpServer: java.util.Map datas>;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r9 = (net.sourceforge.plantuml.ftp.FtpConnexion) $r4;

        if r9 != null goto label1;

        $r5 = new net.sourceforge.plantuml.ftp.FtpConnexion;

        $r6 = r0.<net.sourceforge.plantuml.ftp.FtpServer: net.sourceforge.plantuml.FileFormat defaultfileFormat>;

        specialinvoke $r5.<net.sourceforge.plantuml.ftp.FtpConnexion: void <init>(java.lang.String,net.sourceforge.plantuml.FileFormat)>(r1, $r6);

        r9 = $r5;

        $r7 = r0.<net.sourceforge.plantuml.ftp.FtpServer: java.util.Map datas>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r5);

     label1:
        return r9;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.io.PrintStream $r0, $r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.ftp.FtpServer $r6;
        net.sourceforge.plantuml.FileFormat $r7;
        java.lang.String[] r8;

        r8 := @parameter0: java.lang.String[];

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("****************************** ************************************************** ");

        $r1 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>("****************************** FTP SERVER***********************************");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("****************************** ************************************************** ");

        $r3 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>("Server Started...");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Waiting for connections...");

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>(" ");

        $r6 = new net.sourceforge.plantuml.ftp.FtpServer;

        $r7 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        specialinvoke $r6.<net.sourceforge.plantuml.ftp.FtpServer: void <init>(int,net.sourceforge.plantuml.FileFormat)>(4242, $r7);

        virtualinvoke $r6.<net.sourceforge.plantuml.ftp.FtpServer: void go()>();

        return;
    }

    public void processImage(net.sourceforge.plantuml.ftp.FtpConnexion, java.lang.String)
    {
        net.sourceforge.plantuml.ftp.FtpServer r0;
        net.sourceforge.plantuml.ftp.FtpServer$1 $r1;
        net.sourceforge.plantuml.ftp.FtpConnexion r2;
        java.lang.String r3;
        java.util.concurrent.ExecutorService $r4;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpServer;

        r2 := @parameter0: net.sourceforge.plantuml.ftp.FtpConnexion;

        r3 := @parameter1: java.lang.String;

        $r4 = r0.<net.sourceforge.plantuml.ftp.FtpServer: java.util.concurrent.ExecutorService exeImage>;

        $r1 = new net.sourceforge.plantuml.ftp.FtpServer$1;

        specialinvoke $r1.<net.sourceforge.plantuml.ftp.FtpServer$1: void <init>(net.sourceforge.plantuml.ftp.FtpServer,net.sourceforge.plantuml.ftp.FtpConnexion,java.lang.String)>(r0, r2, r3);

        interfaceinvoke $r4.<java.util.concurrent.ExecutorService: java.util.concurrent.Future submit(java.lang.Runnable)>($r1);

        return;
    }

    public final java.lang.String getCharset()
    {
        java.nio.charset.Charset $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.ftp.FtpServer r2;

        r2 := @this: net.sourceforge.plantuml.ftp.FtpServer;

        $r0 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r1 = virtualinvoke $r0.<java.nio.charset.Charset: java.lang.String name()>();

        return $r1;
    }
}
