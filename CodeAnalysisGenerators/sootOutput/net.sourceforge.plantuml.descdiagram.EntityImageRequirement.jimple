public class net.sourceforge.plantuml.descdiagram.EntityImageRequirement extends net.sourceforge.plantuml.svek.AbstractEntityImage
{
    private final net.sourceforge.plantuml.graphic.TextBlock desc;
    private final net.sourceforge.plantuml.Url url;

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.descdiagram.EntityImageRequirement r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2, $r12, $r17;
        net.sourceforge.plantuml.cucadiagram.Stereotype r3;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r4, $r5, $r19, $r21;
        net.sourceforge.plantuml.cucadiagram.Display $r6, $r15;
        net.sourceforge.plantuml.FontParam $r7, $r18;
        net.sourceforge.plantuml.graphic.TextBlock r8, r20, $r22;
        net.sourceforge.plantuml.Url $r9;
        net.sourceforge.plantuml.Guillemet $r10, $r13;
        java.lang.String $r11, $r14;
        net.sourceforge.plantuml.graphic.FontConfiguration $r16;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageRequirement;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractEntityImage: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        r3 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r4 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r5 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r4);

        $r6 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r7 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam REQUIREMENT>;

        r8 = staticinvoke <net.sourceforge.plantuml.cucadiagram.BodyFactory: net.sourceforge.plantuml.graphic.TextBlock create2(net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.cucadiagram.ILeaf,net.sourceforge.plantuml.style.Style)>($r5, $r6, $r7, r2, r3, r1, null);

        if r3 == null goto label1;

        $r10 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet DOUBLE_COMPARATOR>;

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)>($r10);

        if $r11 != null goto label2;

     label1:
        r0.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.graphic.TextBlock desc> = r8;

        goto label3;

     label2:
        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.Guillemet guillemet()>();

        $r14 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)>($r13);

        $r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r14);

        $r16 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r18 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam REQUIREMENT_STEREOTYPE>;

        specialinvoke $r16.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r17, $r18, r3);

        $r19 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        r20 = virtualinvoke $r15.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r16, $r19, r2);

        $r21 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r22 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r20, r8, $r21);

        r0.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.graphic.TextBlock desc> = $r22;

     label3:
        $r9 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.Url getUrl99()>();

        r0.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.Url url> = $r9;

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UStroke getStroke()
    {
        net.sourceforge.plantuml.descdiagram.EntityImageRequirement r0;
        net.sourceforge.plantuml.ISkinParam $r1;
        net.sourceforge.plantuml.LineParam $r2;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r3;
        net.sourceforge.plantuml.ugraphic.UStroke $r4, r5;

        r0 := @this: net.sourceforge.plantuml.descdiagram.EntityImageRequirement;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r2 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam requirementBorder>;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        r5 = interfaceinvoke $r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.LineParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r2, $r3);

        if r5 != null goto label1;

        $r4 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double,double,double)>(7.0, 7.0, 1.5);

        r5 = $r4;

     label1:
        return r5;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.ugraphic.TextBlockInEllipse $r0;
        net.sourceforge.plantuml.descdiagram.EntityImageRequirement r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;

        r1 := @this: net.sourceforge.plantuml.descdiagram.EntityImageRequirement;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.ugraphic.TextBlockInEllipse;

        $r3 = r1.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.graphic.TextBlock desc>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextBlockInEllipse: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.StringBounder)>($r3, r2);

        $r4 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.TextBlockInEllipse: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        return $r4;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.ugraphic.TextBlockInEllipse $r1;
        net.sourceforge.plantuml.descdiagram.EntityImageRequirement r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        net.sourceforge.plantuml.ISkinParam $r5, $r21, $r25;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r6, $r22, $r26;
        net.sourceforge.plantuml.graphic.SkinParameter $r7;
        boolean $z0;
        net.sourceforge.plantuml.Url $r8, $r20, $r29;
        net.sourceforge.plantuml.ugraphic.UStroke $r9;
        net.sourceforge.plantuml.cucadiagram.IEntity $r10, $r13;
        net.sourceforge.plantuml.graphic.color.Colors $r11, $r14;
        net.sourceforge.plantuml.graphic.color.ColorType $r12, $r15;
        net.sourceforge.plantuml.ugraphic.UBackground $r16;
        net.sourceforge.plantuml.descdiagram.EntityImageRequirement$MyUGraphicEllipse $r17;
        net.sourceforge.plantuml.ugraphic.UEllipse $r18;
        net.sourceforge.plantuml.ColorParam[] $r23, $r27;
        net.sourceforge.plantuml.ColorParam $r24, $r28;
        net.sourceforge.plantuml.ugraphic.UGraphic r30, r31, r33, r35;
        net.sourceforge.plantuml.ugraphic.color.HColor r32, r34;

        r2 := @this: net.sourceforge.plantuml.descdiagram.EntityImageRequirement;

        r30 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r1 = new net.sourceforge.plantuml.ugraphic.TextBlockInEllipse;

        $r3 = r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.graphic.TextBlock desc>;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.TextBlockInEllipse: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.StringBounder)>($r3, r0);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r7 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter USECASE>;

        $z0 = interfaceinvoke $r5.<net.sourceforge.plantuml.ISkinParam: boolean shadowing2(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.graphic.SkinParameter)>($r6, $r7);

        if $z0 == 0 goto label1;

        virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.TextBlockInEllipse: void setDeltaShadow(double)>(3.0);

     label1:
        $r8 = r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.Url url>;

        if $r8 == null goto label2;

        $r29 = r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.Url url>;

        interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: void startUrl(net.sourceforge.plantuml.Url)>($r29);

     label2:
        $r9 = specialinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        r31 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r12 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        r32 = virtualinvoke $r11.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r12);

        if r32 != null goto label3;

        $r25 = virtualinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r26 = virtualinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r27 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r28 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam requirementBorder>;

        $r27[0] = $r28;

        r32 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r25, $r26, $r27);

     label3:
        r33 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r32);

        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r15 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r34 = virtualinvoke $r14.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r15);

        if r34 != null goto label4;

        $r21 = virtualinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r22 = virtualinvoke r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r23 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r24 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam requirementBackground>;

        $r23[0] = $r24;

        r34 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r21, $r22, $r23);

     label4:
        $r16 = interfaceinvoke r34.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r35 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        $r17 = new net.sourceforge.plantuml.descdiagram.EntityImageRequirement$MyUGraphicEllipse;

        $r18 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.TextBlockInEllipse: net.sourceforge.plantuml.ugraphic.UEllipse getUEllipse()>();

        specialinvoke $r17.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement$MyUGraphicEllipse: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,net.sourceforge.plantuml.ugraphic.UEllipse)>(r35, 0.0, 0.0, $r18);

        virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.TextBlockInEllipse: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r17);

        $r20 = r2.<net.sourceforge.plantuml.descdiagram.EntityImageRequirement: net.sourceforge.plantuml.Url url>;

        if $r20 == null goto label5;

        interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeUrl()>();

     label5:
        return;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.descdiagram.EntityImageRequirement r1;

        r1 := @this: net.sourceforge.plantuml.descdiagram.EntityImageRequirement;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType OVAL>;

        return $r0;
    }
}
