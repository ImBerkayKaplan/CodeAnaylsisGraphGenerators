public class net.sourceforge.plantuml.graphic.TextBlockArrow2 extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final double size;
    private final net.sourceforge.plantuml.svek.GuideLine angle;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;

    public void <init>(net.sourceforge.plantuml.svek.GuideLine, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.graphic.TextBlockArrow2 r0;
        net.sourceforge.plantuml.svek.GuideLine r1, $r3;
        java.lang.Object $r2;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        net.sourceforge.plantuml.ugraphic.UFont $r5;
        double $d0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockArrow2;

        r1 := @parameter0: net.sourceforge.plantuml.svek.GuideLine;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.svek.GuideLine) $r2;

        r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: net.sourceforge.plantuml.svek.GuideLine angle> = $r3;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UFont: double getSize2D()>();

        r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: double size> = $d0;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: net.sourceforge.plantuml.ugraphic.color.HColor color> = $r6;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.TextBlockArrow2 r0;
        double $d0, $d1, $d2, $d3, $d4, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        int i0, $i1, $i2, $i3, $i4, $i5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2;
        net.sourceforge.plantuml.ugraphic.UBackground $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.ugraphic.UPolygon $r5;
        net.sourceforge.plantuml.svek.GuideLine $r7, $r9, $r11, $r13;
        java.awt.geom.Point2D $r8, $r10, $r12, $r14;
        net.sourceforge.plantuml.ugraphic.UGraphic r15, r16, r17, r18;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockArrow2;

        r15 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $d0 = r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: double size>;

        $d1 = $d0 * 0.8;

        i0 = (int) $d1;

        $r1 = r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        r16 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r17 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i1 = i0 / 2;

        $d4 = (double) $i1;

        $d2 = r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: double size>;

        $d3 = $d2 / 2.0;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, $d3);

        r18 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        $i2 = i0 / 2;

        $d6 = (double) $i2;

        $r7 = r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: net.sourceforge.plantuml.svek.GuideLine angle>;

        $d7 = interfaceinvoke $r7.<net.sourceforge.plantuml.svek.GuideLine: double getArrowDirection2()>();

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: java.awt.geom.Point2D getPoint(double,double)>($d6, $d7);

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(java.awt.geom.Point2D)>($r8);

        $i3 = i0 / 2;

        $d8 = (double) $i3;

        $r9 = r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: net.sourceforge.plantuml.svek.GuideLine angle>;

        $d9 = interfaceinvoke $r9.<net.sourceforge.plantuml.svek.GuideLine: double getArrowDirection2()>();

        $d10 = $d9 + 2.5132741228718345;

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: java.awt.geom.Point2D getPoint(double,double)>($d8, $d10);

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(java.awt.geom.Point2D)>($r10);

        $i4 = i0 / 2;

        $d11 = (double) $i4;

        $r11 = r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: net.sourceforge.plantuml.svek.GuideLine angle>;

        $d12 = interfaceinvoke $r11.<net.sourceforge.plantuml.svek.GuideLine: double getArrowDirection2()>();

        $d13 = $d12 - 2.5132741228718345;

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: java.awt.geom.Point2D getPoint(double,double)>($d11, $d13);

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(java.awt.geom.Point2D)>($r12);

        $i5 = i0 / 2;

        $d14 = (double) $i5;

        $r13 = r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: net.sourceforge.plantuml.svek.GuideLine angle>;

        $d15 = interfaceinvoke $r13.<net.sourceforge.plantuml.svek.GuideLine: double getArrowDirection2()>();

        $r14 = specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockArrow2: java.awt.geom.Point2D getPoint(double,double)>($d14, $d15);

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(java.awt.geom.Point2D)>($r14);

        interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        return;
    }

    private java.awt.geom.Point2D getPoint(double, double)
    {
        double d0, d1, $d2, d3, $d4, d5;
        java.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.graphic.TextBlockArrow2 r1;

        r1 := @this: net.sourceforge.plantuml.graphic.TextBlockArrow2;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = staticinvoke <java.lang.Math: double sin(double)>(d1);

        d3 = d0 * $d2;

        $d4 = staticinvoke <java.lang.Math: double cos(double)>(d1);

        d5 = d0 * $d4;

        $r0 = new java.awt.geom.Point2D$Double;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d3, d5);

        return $r0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.graphic.TextBlockArrow2 r1;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.graphic.TextBlockArrow2;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = r1.<net.sourceforge.plantuml.graphic.TextBlockArrow2: double size>;

        $d0 = r1.<net.sourceforge.plantuml.graphic.TextBlockArrow2: double size>;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d1, $d0);

        return $r0;
    }
}
