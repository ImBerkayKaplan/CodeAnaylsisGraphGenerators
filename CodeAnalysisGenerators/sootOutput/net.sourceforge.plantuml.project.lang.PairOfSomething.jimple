public class net.sourceforge.plantuml.project.lang.PairOfSomething extends java.lang.Object implements net.sourceforge.plantuml.project.lang.Something
{
    private final net.sourceforge.plantuml.project.lang.Something complement1;
    private final net.sourceforge.plantuml.project.lang.Something complement2;

    public void <init>(net.sourceforge.plantuml.project.lang.Something, net.sourceforge.plantuml.project.lang.Something)
    {
        net.sourceforge.plantuml.project.lang.PairOfSomething r0;
        net.sourceforge.plantuml.project.lang.Something r1, r2;

        r0 := @this: net.sourceforge.plantuml.project.lang.PairOfSomething;

        r1 := @parameter0: net.sourceforge.plantuml.project.lang.Something;

        r2 := @parameter1: net.sourceforge.plantuml.project.lang.Something;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.lang.PairOfSomething: net.sourceforge.plantuml.project.lang.Something complement1> = r1;

        r0.<net.sourceforge.plantuml.project.lang.PairOfSomething: net.sourceforge.plantuml.project.lang.Something complement2> = r2;

        return;
    }

    public net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.project.lang.PairOfSomething r0;
        net.sourceforge.plantuml.project.GanttDiagram r1;
        net.sourceforge.plantuml.command.regex.RegexResult r2;
        java.lang.StringBuilder $r3, $r5, $r7, $r10, $r12, $r13;
        net.sourceforge.plantuml.project.lang.Something $r4, $r11;
        java.lang.String r6, $r8, $r14;
        net.sourceforge.plantuml.project.Failable r9, r15, $r20;
        boolean $z0, $z1;
        java.lang.Object[] $r16;
        java.lang.Object $r17, $r18;

        r0 := @this: net.sourceforge.plantuml.project.lang.PairOfSomething;

        r1 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r6 := @parameter2: java.lang.String;

        $r4 = r0.<net.sourceforge.plantuml.project.lang.PairOfSomething: net.sourceforge.plantuml.project.lang.Something complement1>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r9 = interfaceinvoke $r4.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r1, r2, $r8);

        $r11 = r0.<net.sourceforge.plantuml.project.lang.PairOfSomething: net.sourceforge.plantuml.project.lang.Something complement2>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r15 = interfaceinvoke $r11.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r1, r2, $r14);

        $z0 = virtualinvoke r9.<net.sourceforge.plantuml.project.Failable: boolean isFail()>();

        if $z0 == 0 goto label1;

        return r9;

     label1:
        $z1 = virtualinvoke r15.<net.sourceforge.plantuml.project.Failable: boolean isFail()>();

        if $z1 == 0 goto label2;

        return r15;

     label2:
        $r16 = newarray (java.lang.Object)[2];

        $r17 = virtualinvoke r9.<net.sourceforge.plantuml.project.Failable: java.lang.Object get()>();

        $r16[0] = $r17;

        $r18 = virtualinvoke r15.<net.sourceforge.plantuml.project.Failable: java.lang.Object get()>();

        $r16[1] = $r18;

        $r20 = staticinvoke <net.sourceforge.plantuml.project.Failable: net.sourceforge.plantuml.project.Failable ok(java.lang.Object)>($r16);

        return $r20;
    }

    public net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)
    {
        net.sourceforge.plantuml.project.lang.PairOfSomething r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r8, $r10, $r11;
        net.sourceforge.plantuml.project.lang.Something $r2, $r9;
        java.lang.String r4, $r6, $r12;
        net.sourceforge.plantuml.command.regex.IRegex r7, r13;
        net.sourceforge.plantuml.command.regex.RegexConcat $r14;
        net.sourceforge.plantuml.command.regex.IRegex[] $r15;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r16;

        r0 := @this: net.sourceforge.plantuml.project.lang.PairOfSomething;

        r4 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.project.lang.PairOfSomething: net.sourceforge.plantuml.project.lang.Something complement1>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("A");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)>($r6);

        $r9 = r0.<net.sourceforge.plantuml.project.lang.PairOfSomething: net.sourceforge.plantuml.project.lang.Something complement2>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r13 = interfaceinvoke $r9.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)>($r12);

        $r14 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r15 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r15[0] = r7;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("[%s]+");

        $r15[1] = $r16;

        $r15[2] = r13;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r15);

        return $r14;
    }
}
