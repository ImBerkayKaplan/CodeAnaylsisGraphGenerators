public class net.sourceforge.plantuml.command.regex.RegexOptional extends net.sourceforge.plantuml.command.regex.RegexComposed implements net.sourceforge.plantuml.command.regex.IRegex
{

    public void <init>(net.sourceforge.plantuml.command.regex.IRegex)
    {
        net.sourceforge.plantuml.command.regex.RegexOptional r0;
        net.sourceforge.plantuml.command.regex.IRegex[] $r1;
        net.sourceforge.plantuml.command.regex.IRegex r2;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexOptional;

        r2 := @parameter0: net.sourceforge.plantuml.command.regex.IRegex;

        $r1 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[1];

        $r1[0] = r2;

        specialinvoke r0.<net.sourceforge.plantuml.command.regex.RegexComposed: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r1);

        return;
    }

    protected java.lang.String getFullSlow()
    {
        java.lang.StringBuilder $r0;
        net.sourceforge.plantuml.command.regex.RegexOptional r2;
        java.util.List $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.command.regex.IRegex $r5;
        java.lang.String $r6, $r9;

        r2 := @this: net.sourceforge.plantuml.command.regex.RegexOptional;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("(?:");

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.RegexOptional: java.util.List partials()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (net.sourceforge.plantuml.command.regex.IRegex) $r4;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.command.regex.IRegex: java.lang.String getPattern()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public boolean match(net.sourceforge.plantuml.StringLocated)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.command.regex.RegexOptional r1;
        net.sourceforge.plantuml.StringLocated r2;

        r1 := @this: net.sourceforge.plantuml.command.regex.RegexOptional;

        r2 := @parameter0: net.sourceforge.plantuml.StringLocated;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
