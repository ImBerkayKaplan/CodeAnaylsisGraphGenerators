public class net.sourceforge.plantuml.ugraphic.USegment extends java.lang.Object
{
    private final double[] coord;
    private final net.sourceforge.plantuml.ugraphic.USegmentType pathType;

    public void <init>(double[], net.sourceforge.plantuml.ugraphic.USegmentType)
    {
        net.sourceforge.plantuml.ugraphic.USegment r0;
        double[] r1, $r3;
        java.lang.Object $r2;
        net.sourceforge.plantuml.ugraphic.USegmentType r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.USegment;

        r1 := @parameter0: double[];

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.USegmentType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (double[]) $r2;

        r0.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord> = $r3;

        r0.<net.sourceforge.plantuml.ugraphic.USegment: net.sourceforge.plantuml.ugraphic.USegmentType pathType> = r4;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r8;
        net.sourceforge.plantuml.ugraphic.USegment r1;
        net.sourceforge.plantuml.ugraphic.USegmentType $r2;
        java.lang.String $r3, $r7, $r9;
        double[] $r6;

        r1 := @this: net.sourceforge.plantuml.ugraphic.USegment;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.USegment: net.sourceforge.plantuml.ugraphic.USegmentType pathType>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.USegmentType: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r1.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord>;

        $r7 = staticinvoke <java.util.Arrays: java.lang.String toString(double[])>($r6);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public final double[] getCoord()
    {
        net.sourceforge.plantuml.ugraphic.USegment r0;
        double[] $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.USegment;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ugraphic.USegmentType getSegmentType()
    {
        net.sourceforge.plantuml.ugraphic.USegment r0;
        net.sourceforge.plantuml.ugraphic.USegmentType $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.USegment;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.USegment: net.sourceforge.plantuml.ugraphic.USegmentType pathType>;

        return $r1;
    }

    public net.sourceforge.plantuml.ugraphic.USegment translate(double, double)
    {
        net.sourceforge.plantuml.ugraphic.USegment r0, $r6;
        double[] $r1, $r3, $r4, $r7;
        int $i0;
        java.awt.geom.Point2D$Double $r2;
        double d0, $d1, d2, $d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.USegmentType $r8;
        java.lang.UnsupportedOperationException $r9;

        r0 := @this: net.sourceforge.plantuml.ugraphic.USegment;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord>;

        $i0 = lengthof $r1;

        if $i0 == 2 goto label1;

        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r9;

     label1:
        $r2 = new java.awt.geom.Point2D$Double;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord>;

        $d1 = $r3[0];

        $d5 = $d1 + d0;

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord>;

        $d3 = $r4[1];

        $d4 = $d3 + d2;

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d5, $d4);

        $r6 = new net.sourceforge.plantuml.ugraphic.USegment;

        $r7 = newarray (double)[2];

        $d6 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $r7[0] = $d6;

        $d7 = virtualinvoke $r2.<java.awt.geom.Point2D: double getY()>();

        $r7[1] = $d7;

        $r8 = r0.<net.sourceforge.plantuml.ugraphic.USegment: net.sourceforge.plantuml.ugraphic.USegmentType pathType>;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.USegment: void <init>(double[],net.sourceforge.plantuml.ugraphic.USegmentType)>($r7, $r8);

        return $r6;
    }

    public net.sourceforge.plantuml.ugraphic.USegment rotate(double)
    {
        net.sourceforge.plantuml.ugraphic.USegment r0, $r8;
        double[] $r1, $r3, $r4, $r9;
        int $i0;
        java.awt.geom.Point2D$Double $r2;
        double $d0, $d1, d2, $d3, $d4;
        java.awt.geom.AffineTransform r6;
        net.sourceforge.plantuml.ugraphic.USegmentType $r10;
        java.lang.UnsupportedOperationException $r11;

        r0 := @this: net.sourceforge.plantuml.ugraphic.USegment;

        d2 := @parameter0: double;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord>;

        $i0 = lengthof $r1;

        if $i0 == 2 goto label1;

        $r11 = new java.lang.UnsupportedOperationException;

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r11;

     label1:
        $r2 = new java.awt.geom.Point2D$Double;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord>;

        $d1 = $r3[0];

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.USegment: double[] coord>;

        $d0 = $r4[1];

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        r6 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double)>(d2);

        virtualinvoke r6.<java.awt.geom.AffineTransform: java.awt.geom.Point2D transform(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r2, $r2);

        $r8 = new net.sourceforge.plantuml.ugraphic.USegment;

        $r9 = newarray (double)[2];

        $d3 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $r9[0] = $d3;

        $d4 = virtualinvoke $r2.<java.awt.geom.Point2D: double getY()>();

        $r9[1] = $d4;

        $r10 = r0.<net.sourceforge.plantuml.ugraphic.USegment: net.sourceforge.plantuml.ugraphic.USegmentType pathType>;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.USegment: void <init>(double[],net.sourceforge.plantuml.ugraphic.USegmentType)>($r9, $r10);

        return $r8;
    }
}
