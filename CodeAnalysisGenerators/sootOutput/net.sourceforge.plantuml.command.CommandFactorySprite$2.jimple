class net.sourceforge.plantuml.command.CommandFactorySprite$2 extends net.sourceforge.plantuml.command.CommandMultilines2
{
    final net.sourceforge.plantuml.command.CommandFactorySprite this$0;

    void <init>(net.sourceforge.plantuml.command.CommandFactorySprite, net.sourceforge.plantuml.command.regex.IRegex, net.sourceforge.plantuml.command.MultilinesStrategy)
    {
        net.sourceforge.plantuml.command.CommandFactorySprite$2 r0;
        net.sourceforge.plantuml.command.CommandFactorySprite r1;
        net.sourceforge.plantuml.command.regex.IRegex r2;
        net.sourceforge.plantuml.command.MultilinesStrategy r3;

        r0 := @this: net.sourceforge.plantuml.command.CommandFactorySprite$2;

        r1 := @parameter0: net.sourceforge.plantuml.command.CommandFactorySprite;

        r2 := @parameter1: net.sourceforge.plantuml.command.regex.IRegex;

        r3 := @parameter2: net.sourceforge.plantuml.command.MultilinesStrategy;

        r0.<net.sourceforge.plantuml.command.CommandFactorySprite$2: net.sourceforge.plantuml.command.CommandFactorySprite this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.command.CommandMultilines2: void <init>(net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy)>(r2, r3);

        return;
    }

    public java.lang.String getPatternEnd()
    {
        net.sourceforge.plantuml.command.CommandFactorySprite$2 r0;

        r0 := @this: net.sourceforge.plantuml.command.CommandFactorySprite$2;

        return "^end[%s]?sprite|\\}$";
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.WithSprite, net.sourceforge.plantuml.command.BlocLines)
    {
        net.sourceforge.plantuml.command.BlocLines $r0, r12, r13, r14, r15;
        net.sourceforge.plantuml.command.CommandFactorySprite$2 r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2;
        net.sourceforge.plantuml.StringLocated $r3, $r4;
        java.lang.String $r5;
        net.sourceforge.plantuml.command.regex.RegexResult r6;
        int $i0;
        net.sourceforge.plantuml.WithSprite r7;
        net.sourceforge.plantuml.command.CommandFactorySprite $r8;
        java.util.List $r9;
        net.sourceforge.plantuml.command.CommandExecutionResult $r10, $r11;

        r1 := @this: net.sourceforge.plantuml.command.CommandFactorySprite$2;

        r7 := @parameter0: net.sourceforge.plantuml.WithSprite;

        r12 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r0 = virtualinvoke r12.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines trim()>();

        r13 = virtualinvoke $r0.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines removeEmptyLines()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.CommandFactorySprite$2: net.sourceforge.plantuml.command.regex.IRegex getStartingPattern()>();

        $r3 = virtualinvoke r13.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.StringLocated getFirst()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        r6 = interfaceinvoke $r2.<net.sourceforge.plantuml.command.regex.IRegex: net.sourceforge.plantuml.command.regex.RegexResult matcher(java.lang.String)>($r5);

        r14 = virtualinvoke r13.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines subExtract(int,int)>(1, 1);

        r15 = virtualinvoke r14.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines removeEmptyColumns()>();

        $i0 = virtualinvoke r15.<net.sourceforge.plantuml.command.BlocLines: int size()>();

        if $i0 != 0 goto label1;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("No sprite defined.");

        return $r11;

     label1:
        $r8 = r1.<net.sourceforge.plantuml.command.CommandFactorySprite$2: net.sourceforge.plantuml.command.CommandFactorySprite this$0>;

        $r9 = virtualinvoke r15.<net.sourceforge.plantuml.command.BlocLines: java.util.List getLinesAsStringForSprite()>();

        $r10 = staticinvoke <net.sourceforge.plantuml.command.CommandFactorySprite: net.sourceforge.plantuml.command.CommandExecutionResult access$000(net.sourceforge.plantuml.command.CommandFactorySprite,net.sourceforge.plantuml.WithSprite,net.sourceforge.plantuml.command.regex.RegexResult,java.util.List)>($r8, r7, r6, $r9);

        return $r10;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.CommandFactorySprite$2 r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.WithSprite $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.command.CommandFactorySprite$2;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r3 = (net.sourceforge.plantuml.WithSprite) r1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.command.CommandFactorySprite$2: net.sourceforge.plantuml.command.CommandExecutionResult executeNow(net.sourceforge.plantuml.WithSprite,net.sourceforge.plantuml.command.BlocLines)>($r3, r2);

        return $r4;
    }
}
