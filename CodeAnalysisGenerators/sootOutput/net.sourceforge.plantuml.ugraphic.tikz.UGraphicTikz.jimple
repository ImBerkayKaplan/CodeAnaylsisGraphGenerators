public class net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz extends net.sourceforge.plantuml.ugraphic.AbstractUGraphic implements net.sourceforge.plantuml.ugraphic.ClipContainer
{

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.graphic.StringBounder, double, boolean)
    {
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.tikz.TikzGraphics $r4;
        double d0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter3: double;

        z0 := @parameter4: boolean;

        $r4 = new net.sourceforge.plantuml.tikz.TikzGraphics;

        specialinvoke $r4.<net.sourceforge.plantuml.tikz.TikzGraphics: void <init>(double,boolean)>(d0, z0);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,java.lang.Object)>(r1, r2, r3, $r4);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void register()>();

        return;
    }

    protected net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic copyUGraphic()
    {
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz $r0, r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        $r0 = new net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void <init>(net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz)>(r1);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz)
    {
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz r0, r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.AbstractUGraphic)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void register()>();

        return;
    }

    private void register()
    {
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz r0;
        net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz $r1;
        net.sourceforge.plantuml.ugraphic.tikz.DriverTextTikz $r2;
        net.sourceforge.plantuml.ugraphic.tikz.DriverAtomTextTikz $r3;
        net.sourceforge.plantuml.ugraphic.tikz.DriverLineTikz $r4;
        net.sourceforge.plantuml.ugraphic.tikz.DriverPolygonTikz $r5;
        net.sourceforge.plantuml.ugraphic.tikz.DriverEllipseTikz $r6;
        net.sourceforge.plantuml.ugraphic.tikz.DriverImageTikz $r7;
        net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz $r8;
        net.sourceforge.plantuml.ugraphic.tikz.DriverDotPathTikz $r9;
        net.sourceforge.plantuml.ugraphic.tikz.DriverCenteredCharacterTikz2 $r10;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        $r1 = new net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.tikz.DriverRectangleTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/URectangle;", $r1);

        $r2 = new net.sourceforge.plantuml.ugraphic.tikz.DriverTextTikz;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.tikz.DriverTextTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UText;", $r2);

        $r3 = new net.sourceforge.plantuml.ugraphic.tikz.DriverAtomTextTikz;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.tikz.DriverAtomTextTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/creole/legacy/AtomText;", $r3);

        $r4 = new net.sourceforge.plantuml.ugraphic.tikz.DriverLineTikz;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.tikz.DriverLineTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/ULine;", $r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.tikz.DriverPolygonTikz;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.tikz.DriverPolygonTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPolygon;", $r5);

        $r6 = new net.sourceforge.plantuml.ugraphic.tikz.DriverEllipseTikz;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.tikz.DriverEllipseTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UEllipse;", $r6);

        $r7 = new net.sourceforge.plantuml.ugraphic.tikz.DriverImageTikz;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.tikz.DriverImageTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UImage;", $r7);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void ignoreShape(java.lang.Class)>(class "Lnet/sourceforge/plantuml/ugraphic/UImageSvg;");

        $r8 = new net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.tikz.DriverPathTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPath;", $r8);

        $r9 = new net.sourceforge.plantuml.ugraphic.tikz.DriverDotPathTikz;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.tikz.DriverDotPathTikz: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/posimo/DotPath;", $r9);

        $r10 = new net.sourceforge.plantuml.ugraphic.tikz.DriverCenteredCharacterTikz2;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.tikz.DriverCenteredCharacterTikz2: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UCenteredCharacter;", $r10);

        return;
    }

    public void startUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.Url r2;
        net.sourceforge.plantuml.tikz.TikzGraphics $r3;
        java.lang.String $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        r2 := @parameter0: net.sourceforge.plantuml.Url;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: java.lang.Object getGraphicObject()>();

        $r3 = (net.sourceforge.plantuml.tikz.TikzGraphics) $r1;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.Url: java.lang.String getUrl()>();

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.Url: java.lang.String getTooltip()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.tikz.TikzGraphics: void openLink(java.lang.String,java.lang.String)>($r4, $r5);

        return;
    }

    public void closeUrl()
    {
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.tikz.TikzGraphics $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: java.lang.Object getGraphicObject()>();

        $r2 = (net.sourceforge.plantuml.tikz.TikzGraphics) $r1;

        virtualinvoke $r2.<net.sourceforge.plantuml.tikz.TikzGraphics: void closeLink()>();

        return;
    }

    public void writeToStream(java.io.OutputStream, java.lang.String, int) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz r0;
        java.lang.Object $r1;
        java.io.OutputStream r2;
        net.sourceforge.plantuml.tikz.TikzGraphics $r3;
        java.lang.String r4;
        int i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        r2 := @parameter0: java.io.OutputStream;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz: java.lang.Object getGraphicObject()>();

        $r3 = (net.sourceforge.plantuml.tikz.TikzGraphics) $r1;

        virtualinvoke $r3.<net.sourceforge.plantuml.tikz.TikzGraphics: void createData(java.io.OutputStream)>(r2);

        return;
    }

    public boolean matchesProperty(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz r2;

        r2 := @this: net.sourceforge.plantuml.ugraphic.tikz.UGraphicTikz;

        r0 := @parameter0: java.lang.String;

        $r1 = "SPECIALTXT";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
