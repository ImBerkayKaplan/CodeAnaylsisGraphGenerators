abstract class net.sourceforge.plantuml.activitydiagram3.WithNote extends net.sourceforge.plantuml.activitydiagram3.AbstractInstruction
{
    private final java.util.Collection notes;

    void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.WithNote r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.WithNote;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.AbstractInstruction: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: java.util.Collection notes> = $r1;

        return;
    }

    public boolean addNote(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.sequencediagram.NoteType, net.sourceforge.plantuml.graphic.color.Colors, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.WithNote r0;
        net.sourceforge.plantuml.activitydiagram3.PositionedNote $r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.sequencediagram.NotePosition r3;
        net.sourceforge.plantuml.sequencediagram.NoteType r4;
        net.sourceforge.plantuml.graphic.color.Colors r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r6;
        java.util.Collection $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.WithNote;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r4 := @parameter2: net.sourceforge.plantuml.sequencediagram.NoteType;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        r6 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: java.util.Collection notes>;

        $r1 = new net.sourceforge.plantuml.activitydiagram3.PositionedNote;

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r2, r3, r4, r5, r6);

        interfaceinvoke $r7.<java.util.Collection: boolean add(java.lang.Object)>($r1);

        return 1;
    }

    protected final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile eventuallyAddNote(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.WithNote r0;
        java.util.Collection $r1, $r5;
        int $i0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r3, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.WithNote;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r3 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: java.util.Collection notes>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label1;

        return r3;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: java.util.Collection notes>;

        $r6 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addNote(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,java.util.Collection)>(r3, r4, $r5);

        return $r6;
    }

    public java.util.Collection getPositionedNotes()
    {
        net.sourceforge.plantuml.activitydiagram3.WithNote r0;
        java.util.Collection $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.WithNote;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: java.util.Collection notes>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public boolean hasNotes()
    {
        net.sourceforge.plantuml.activitydiagram3.WithNote r0;
        java.util.Collection $r1;
        int $i0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.WithNote;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: java.util.Collection notes>;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
