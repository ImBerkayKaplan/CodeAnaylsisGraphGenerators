public class net.sourceforge.plantuml.cucadiagram.BodierMap extends java.lang.Object implements net.sourceforge.plantuml.cucadiagram.Bodier
{
    private final java.util.List rawBody;
    private final java.util.Map map;
    private net.sourceforge.plantuml.cucadiagram.ILeaf leaf;

    public void muteClassToObject()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.cucadiagram.BodierMap r1;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void <init>()
    {
        net.sourceforge.plantuml.cucadiagram.BodierMap r0;
        java.util.ArrayList $r1;
        java.util.LinkedHashMap $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.BodierMap: java.util.List rawBody> = $r1;

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.BodierMap: java.util.Map map> = $r2;

        return;
    }

    public void setLeaf(net.sourceforge.plantuml.cucadiagram.ILeaf)
    {
        net.sourceforge.plantuml.cucadiagram.BodierMap r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1, $r3;
        java.lang.Object $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r2;

        r0.<net.sourceforge.plantuml.cucadiagram.BodierMap: net.sourceforge.plantuml.cucadiagram.ILeaf leaf> = $r3;

        return;
    }

    public static java.lang.String getLinkedEntry(java.lang.String)
    {
        java.util.regex.Pattern r0;
        java.lang.String r1, $r3;
        java.util.regex.Matcher r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("(\\*-+\\>)");

        r2 = virtualinvoke r0.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r2.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r2.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        return $r3;

     label1:
        return null;
    }

    public void addFieldOrMethod(java.lang.String)
    {
        java.lang.String r0, $r1, $r4, $r5, $r8, $r9, $r10, $r11, r13;
        boolean $z0;
        int i0, $i1, i2;
        net.sourceforge.plantuml.cucadiagram.BodierMap r2;
        java.util.Map $r3, $r7;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("=>");

        if $z0 == 0 goto label1;

        i2 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("=>");

        $r7 = r2.<net.sourceforge.plantuml.cucadiagram.BodierMap: java.util.Map map>;

        $r8 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i1 = i2 + 2;

        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r11);

        goto label2;

     label1:
        $r1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.BodierMap: java.lang.String getLinkedEntry(java.lang.String)>(r0);

        if $r1 == null goto label2;

        r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.BodierMap: java.lang.String getLinkedEntry(java.lang.String)>(r0);

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r13);

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.BodierMap: java.util.Map map>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, "\u0000");

     label2:
        return;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getMethodsToDisplay()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.cucadiagram.BodierMap r1;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getFieldsToDisplay()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.cucadiagram.BodierMap r1;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean hasUrl()
    {
        net.sourceforge.plantuml.cucadiagram.BodierMap r0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        return 0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getBody(net.sourceforge.plantuml.FontParam, net.sourceforge.plantuml.ISkinParam, boolean, boolean, net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap $r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        net.sourceforge.plantuml.FontParam r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.cucadiagram.BodierMap r4;
        java.util.Map $r5;
        boolean z0, z1;
        net.sourceforge.plantuml.cucadiagram.Stereotype r6;
        net.sourceforge.plantuml.style.Style r7;

        r4 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        r2 := @parameter0: net.sourceforge.plantuml.FontParam;

        r3 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        r6 := @parameter4: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r7 := @parameter5: net.sourceforge.plantuml.style.Style;

        r1 := @parameter6: net.sourceforge.plantuml.graphic.FontConfiguration;

        $r0 = new net.sourceforge.plantuml.cucadiagram.TextBlockMap;

        $r5 = r4.<net.sourceforge.plantuml.cucadiagram.BodierMap: java.util.Map map>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.ISkinParam,java.util.Map)>(r1, r2, r3, $r5);

        return $r0;
    }

    public java.util.List getRawBody()
    {
        net.sourceforge.plantuml.cucadiagram.BodierMap r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.BodierMap;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.BodierMap: java.util.List rawBody>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }
}
