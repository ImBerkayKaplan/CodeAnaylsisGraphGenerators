class net.sourceforge.plantuml.graphic.USymbolPerson extends net.sourceforge.plantuml.graphic.USymbol
{

    void <init>()
    {
        net.sourceforge.plantuml.graphic.USymbolPerson r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolPerson;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolPerson r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolPerson;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter PERSON>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolPerson r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolPerson;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName person>;

        return $r0;
    }

    private void drawHeadAndBody(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.awt.geom.Dimension2D, double)
    {
        net.sourceforge.plantuml.ugraphic.UEllipse $r0;
        double d0, d1, $d2, $d3, d4;
        net.sourceforge.plantuml.ugraphic.URectangle $r2, r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, $r7, $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r8;
        net.sourceforge.plantuml.graphic.USymbolPerson r10;

        r10 := @this: net.sourceforge.plantuml.graphic.USymbolPerson;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d1 := @parameter1: double;

        r3 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d0 := @parameter3: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(d0, d0);

        $r2 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r3);

        r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>(d0);

        virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(d1);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: void setDeltaShadow(double)>(d1);

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = $d2 - d0;

        d4 = $d3 / 2.0;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d4);

        $r7 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d0);

        $r9 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r4);

        return;
    }

    private double headSize(net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.awt.geom.Dimension2D r0;
        double $d0, $d1, d2, $d3, $d4;
        net.sourceforge.plantuml.graphic.USymbolPerson r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolPerson;

        r0 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d2 = $d0 * $d1;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>(d2);

        $d4 = $d3 * 0.42;

        return $d4;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolPerson r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolPerson;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(10.0, 10.0, 10.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolPerson$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolPerson r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolPerson;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r5 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolPerson$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolPerson$1: void <init>(net.sourceforge.plantuml.graphic.USymbolPerson,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r1, r2, r3, r4, r5);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.graphic.USymbolPerson r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r3, r6;
        double d0, d1;
        net.sourceforge.plantuml.graphic.SymbolContext r5;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolPerson;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r5 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r6 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    static double access$000(net.sourceforge.plantuml.graphic.USymbolPerson, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.graphic.USymbolPerson r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolPerson;

        r1 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolPerson: double headSize(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1);

        return $d0;
    }

    static void access$100(net.sourceforge.plantuml.graphic.USymbolPerson, net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.awt.geom.Dimension2D, double)
    {
        net.sourceforge.plantuml.graphic.USymbolPerson r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolPerson;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d1 := @parameter4: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolPerson: void drawHeadAndBody(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.awt.geom.Dimension2D,double)>(r1, d0, r2, d1);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$200(net.sourceforge.plantuml.graphic.USymbolPerson)
    {
        net.sourceforge.plantuml.graphic.USymbolPerson r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolPerson;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolPerson: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }
}
