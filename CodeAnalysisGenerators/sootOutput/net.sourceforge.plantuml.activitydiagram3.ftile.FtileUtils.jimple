public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils r0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Connection)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithConnection $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Connection r2;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Connection;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithConnection;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Connection)>(r1, r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, java.util.Collection)
    {
        java.util.Collection r0;
        int $i0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithConnection $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r0 := @parameter1: java.util.Collection;

        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        if $i0 != 0 goto label1;

        return r2;

     label1:
        $r1 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithConnection;

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>(r2, r0);

        return $r1;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile withSwimlaneOut(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithSwimlanes $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2, r3;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithSwimlanes;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileWithSwimlanes: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, $r2, r3);

        return $r0;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addBottom(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        double d0;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>(r1, 0.0, d0);

        return $r0;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addVerticalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        return r1;

     label1:
        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedVertically: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>(r1, d0, d1);

        return $r0;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        return r1;

     label1:
        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>(r1, d0, d1);

        return $r0;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double)
    {
        double d0;
        byte $b0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        return r1;

     label1:
        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMarged: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,double)>(r1, d0, d0);

        return $r0;
    }
}
