class net.sourceforge.plantuml.json.JsonNumber extends net.sourceforge.plantuml.json.JsonValue
{
    private final java.lang.String string;

    void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.json.JsonNumber r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.json.JsonValue: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("string is null");

        throw $r2;

     label1:
        r0.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string> = r1;

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.json.JsonNumber r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        $r1 = r0.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        return $r1;
    }

    void write(net.sourceforge.plantuml.json.JsonWriter) throws java.io.IOException
    {
        net.sourceforge.plantuml.json.JsonWriter r0;
        net.sourceforge.plantuml.json.JsonNumber r1;
        java.lang.String $r2;

        r1 := @this: net.sourceforge.plantuml.json.JsonNumber;

        r0 := @parameter0: net.sourceforge.plantuml.json.JsonWriter;

        $r2 = r1.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        virtualinvoke r0.<net.sourceforge.plantuml.json.JsonWriter: void writeNumber(java.lang.String)>($r2);

        return;
    }

    public boolean isNumber()
    {
        net.sourceforge.plantuml.json.JsonNumber r0;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        return 1;
    }

    public int asInt()
    {
        net.sourceforge.plantuml.json.JsonNumber r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        $r1 = r0.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r1, 10);

        return $i0;
    }

    public long asLong()
    {
        net.sourceforge.plantuml.json.JsonNumber r0;
        java.lang.String $r1;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        $r1 = r0.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r1, 10);

        return $l0;
    }

    public float asFloat()
    {
        net.sourceforge.plantuml.json.JsonNumber r0;
        java.lang.String $r1;
        float $f0;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        $r1 = r0.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r1);

        return $f0;
    }

    public double asDouble()
    {
        net.sourceforge.plantuml.json.JsonNumber r0;
        java.lang.String $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        $r1 = r0.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r1);

        return $d0;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.json.JsonNumber r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        $r1 = r0.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        net.sourceforge.plantuml.json.JsonNumber r0, r4;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.json.JsonNumber;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        r4 = (net.sourceforge.plantuml.json.JsonNumber) r1;

        $r6 = r0.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        $r5 = r4.<net.sourceforge.plantuml.json.JsonNumber: java.lang.String string>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        return $z0;
    }
}
