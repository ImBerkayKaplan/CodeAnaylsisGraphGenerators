class net.sourceforge.plantuml.graphic.USymbolLabel$2 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext;
    final net.sourceforge.plantuml.graphic.TextBlock val$stereotype;
    final net.sourceforge.plantuml.graphic.HorizontalAlignment val$stereoAlignment;
    final double val$width;
    final net.sourceforge.plantuml.graphic.TextBlock val$title;
    final net.sourceforge.plantuml.graphic.HorizontalAlignment val$labelAlignment;
    final double val$height;
    final net.sourceforge.plantuml.graphic.USymbolLabel this$0;

    void <init>(net.sourceforge.plantuml.graphic.USymbolLabel, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, double, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, double)
    {
        net.sourceforge.plantuml.graphic.USymbolLabel$2 r0;
        net.sourceforge.plantuml.graphic.USymbolLabel r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4, r6;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolLabel$2;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.USymbolLabel;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.SymbolContext;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        d0 := @parameter4: double;

        r5 := @parameter5: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        d1 := @parameter7: double;

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.USymbolLabel this$0> = r1;

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext> = r2;

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.TextBlock val$stereotype> = r3;

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.HorizontalAlignment val$stereoAlignment> = r4;

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: double val$width> = d0;

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.TextBlock val$title> = r5;

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.HorizontalAlignment val$labelAlignment> = r6;

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: double val$height> = d1;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.USymbolLabel$2 r0;
        net.sourceforge.plantuml.graphic.SymbolContext $r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r8, $r10, $r23;
        net.sourceforge.plantuml.graphic.StringBounder $r3, $r11;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4, r12;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5, $r6, $r13, $r14, $r15, $r16;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16, d17, $d18, $d19;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r24;
        net.sourceforge.plantuml.ugraphic.UGraphic $r9, r21, r22, $r25;
        net.sourceforge.plantuml.graphic.USymbolLabel $r17, $r19;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r18, $r20;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolLabel$2;

        r21 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext>;

        r22 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r21);

        $r2 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        $r3 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $r6 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.HorizontalAlignment val$stereoAlignment>;

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if $r6 != $r5 goto label1;

        $d9 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: double val$width>;

        $d10 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d11 = $d9 - $d10;

        $r17 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.USymbolLabel this$0>;

        $r18 = staticinvoke <net.sourceforge.plantuml.graphic.USymbolLabel: net.sourceforge.plantuml.graphic.USymbol$Margin access$000(net.sourceforge.plantuml.graphic.USymbolLabel)>($r17);

        $d12 = virtualinvoke $r18.<net.sourceforge.plantuml.graphic.USymbol$Margin: double getX1()>();

        $d13 = $d12 / 2.0;

        d15 = $d11 - $d13;

        $r19 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.USymbolLabel this$0>;

        $r20 = staticinvoke <net.sourceforge.plantuml.graphic.USymbolLabel: net.sourceforge.plantuml.graphic.USymbol$Margin access$000(net.sourceforge.plantuml.graphic.USymbolLabel)>($r19);

        $d14 = virtualinvoke $r20.<net.sourceforge.plantuml.graphic.USymbol$Margin: double getY1()>();

        d16 = $d14 / 2.0;

        goto label2;

     label1:
        $d0 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: double val$width>;

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 - $d1;

        d15 = $d2 / 2.0;

        d16 = 2.0;

     label2:
        $r8 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d15, d16);

        $r9 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

        $r10 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.TextBlock val$title>;

        $r11 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r12 = interfaceinvoke $r10.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r11);

        $r14 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.HorizontalAlignment val$labelAlignment>;

        $r13 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        if $r14 != $r13 goto label3;

        d17 = 3.0;

        goto label5;

     label3:
        $r16 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.HorizontalAlignment val$labelAlignment>;

        $r15 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if $r16 != $r15 goto label4;

        $d6 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: double val$width>;

        $d7 = virtualinvoke r12.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d8 = $d6 - $d7;

        d17 = $d8 - 3.0;

        goto label5;

     label4:
        $d3 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: double val$width>;

        $d4 = virtualinvoke r12.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = $d3 - $d4;

        d17 = $d5 / 2.0;

     label5:
        $r23 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: net.sourceforge.plantuml.graphic.TextBlock val$title>;

        $r24 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d18 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d19 = 2.0 + $d18;

        specialinvoke $r24.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d17, $d19);

        $r25 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        interfaceinvoke $r23.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r25);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.graphic.USymbolLabel$2 r1;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolLabel$2;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = r1.<net.sourceforge.plantuml.graphic.USymbolLabel$2: double val$width>;

        $d0 = r1.<net.sourceforge.plantuml.graphic.USymbolLabel$2: double val$height>;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d1, $d0);

        return $r0;
    }
}
