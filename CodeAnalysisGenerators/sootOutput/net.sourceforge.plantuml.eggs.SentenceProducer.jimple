public class net.sourceforge.plantuml.eggs.SentenceProducer extends java.lang.Object
{
    private final java.lang.String secret;

    public void <init>(java.lang.String, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        net.sourceforge.plantuml.eggs.SentenceProducer r0;
        java.lang.String r1, r4, $r8;
        java.math.BigInteger $r2;
        byte[] r3, r6, r7;
        java.nio.charset.Charset $r5;

        r0 := @this: net.sourceforge.plantuml.eggs.SentenceProducer;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.eggs.EggUtils: java.math.BigInteger fromSecretSentence(java.lang.String)>(r1);

        r3 = virtualinvoke $r2.<java.math.BigInteger: byte[] toByteArray()>();

        $r5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        r6 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r5);

        r7 = staticinvoke <net.sourceforge.plantuml.eggs.EggUtils: byte[] xor(byte[],byte[])>(r6, r3);

        $r8 = staticinvoke <net.sourceforge.plantuml.eggs.EggUtils: java.lang.String fromByteArrays(byte[])>(r7);

        r0.<net.sourceforge.plantuml.eggs.SentenceProducer: java.lang.String secret> = $r8;

        return;
    }

    public java.lang.String getSecret()
    {
        net.sourceforge.plantuml.eggs.SentenceProducer r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.eggs.SentenceProducer;

        $r1 = r0.<net.sourceforge.plantuml.eggs.SentenceProducer: java.lang.String secret>;

        return $r1;
    }
}
