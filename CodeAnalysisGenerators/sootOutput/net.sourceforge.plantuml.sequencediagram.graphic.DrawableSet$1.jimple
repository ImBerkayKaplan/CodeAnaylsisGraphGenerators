class net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1 extends java.lang.Object implements net.sourceforge.plantuml.graphic.TextBlock
{
    final double val$delta;
    final double val$width;
    final net.sourceforge.plantuml.sequencediagram.graphic.Page val$page;
    final boolean val$showTail;
    final net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet this$0;

    void <init>(net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet, double, double, net.sourceforge.plantuml.sequencediagram.graphic.Page, boolean)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet r1;
        double d0, d1;
        net.sourceforge.plantuml.sequencediagram.graphic.Page r2;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.sequencediagram.graphic.Page;

        z0 := @parameter4: boolean;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet this$0> = r1;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: double val$delta> = d0;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: double val$width> = d1;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: net.sourceforge.plantuml.sequencediagram.graphic.Page val$page> = r2;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: boolean val$showTail> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        boolean $z0;
        net.sourceforge.plantuml.sequencediagram.graphic.Page $r2;
        double $d0, $d1;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r3;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r3 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet this$0>;

        $d1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: double val$delta>;

        $d0 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: double val$width>;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: net.sourceforge.plantuml.sequencediagram.graphic.Page val$page>;

        $z0 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: boolean val$showTail>;

        virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: void drawU22(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,net.sourceforge.plantuml.sequencediagram.graphic.Page,boolean)>(r1, $d1, $d0, $r2, $z0);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.Page $r1;
        double d0, $d1;
        net.sourceforge.plantuml.Dimension2DDouble $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: net.sourceforge.plantuml.sequencediagram.graphic.Page val$page>;

        d0 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.Page: double getHeight()>();

        $r2 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1: double val$width>;

        specialinvoke $r2.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d1, d0);

        return $r2;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1 r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1 r1;
        java.lang.String r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.graphic.InnerStrategy r4;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet$1;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
