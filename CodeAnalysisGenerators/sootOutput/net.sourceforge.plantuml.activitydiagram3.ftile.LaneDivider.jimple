public class net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final double x1;
    private final double x2;
    private final double height;
    private net.sourceforge.plantuml.style.Style style;

    public void <init>(net.sourceforge.plantuml.ISkinParam, double, double, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider r0;
        net.sourceforge.plantuml.ISkinParam r1;
        double d0, d1, d2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.ISkinParam skinParam> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x1> = d0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x2> = d1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double height> = d2;

        return;
    }

    public net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName swimlane>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private net.sourceforge.plantuml.style.Style getStyle()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider r0;
        net.sourceforge.plantuml.style.Style $r1, $r2, $r6;
        net.sourceforge.plantuml.style.StyleSignature $r3;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.style.StyleBuilder $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.style.Style style>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition()>();

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r6 = virtualinvoke $r3.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r5);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.style.Style style> = $r6;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.style.Style style>;

        return $r2;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider r1;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x1>;

        $d0 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x2>;

        $d3 = $d1 + $d0;

        $d2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double height>;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d3, $d2);

        return $r0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UEmpty $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider r1;
        double $d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.ugraphic.UGraphic r3, $r9, $r10, $r11;
        net.sourceforge.plantuml.ColorParam $r4, $r21;
        net.sourceforge.plantuml.ISkinParam $r5, $r7, $r16, $r18;
        net.sourceforge.plantuml.LineParam $r6;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        net.sourceforge.plantuml.ugraphic.ULine $r12;
        net.sourceforge.plantuml.style.Style $r13, $r20;
        net.sourceforge.plantuml.style.PName $r14;
        net.sourceforge.plantuml.style.Value $r15;
        net.sourceforge.plantuml.api.ThemeStyle $r17;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r19;
        net.sourceforge.plantuml.ugraphic.color.HColor r22;
        net.sourceforge.plantuml.ugraphic.UStroke r23;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        $d1 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x1>;

        $d0 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x2>;

        $d2 = $d1 + $d0;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>($d2, 1.0);

        interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r4 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam swimlaneBorder>;

        r22 = interfaceinvoke $r5.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype,boolean)>($r4, null, 0);

        if r22 != null goto label1;

        $r21 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam swimlaneBorder>;

        r22 = virtualinvoke $r21.<net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ugraphic.color.HColor getDefaultValue()>();

     label1:
        $r7 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r6 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam swimlaneBorder>;

        r23 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>($r7, $r6, 2.0);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label2;

        $r13 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.style.Style getStyle()>();

        $r14 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r15 = virtualinvoke $r13.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r14);

        $r16 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r18 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r22 = interfaceinvoke $r15.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r17, $r19);

        $r20 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: net.sourceforge.plantuml.style.Style getStyle()>();

        r23 = virtualinvoke $r20.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

     label2:
        $d3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x1>;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d3);

        $r9 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r23);

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r22);

        $d4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double height>;

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d4);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        return;
    }

    public double getWidth()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider r0;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider;

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x1>;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x2>;

        $d2 = $d1 + $d0;

        return $d2;
    }

    public final double getX1()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x1>;

        return $d0;
    }

    public final double getX2()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.LaneDivider: double x2>;

        return $d0;
    }
}
