class net.sourceforge.plantuml.timingdiagram.graphic.Histogram$2 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final net.sourceforge.plantuml.timingdiagram.graphic.Histogram this$0;

    void <init>(net.sourceforge.plantuml.timingdiagram.graphic.Histogram)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram$2 r0;
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Histogram$2;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.Histogram;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.Histogram$2: net.sourceforge.plantuml.timingdiagram.graphic.Histogram this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram$2 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.timingdiagram.graphic.Histogram $r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.Histogram$2;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.Histogram$2: net.sourceforge.plantuml.timingdiagram.graphic.Histogram this$0>;

        staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.Histogram: void access$200(net.sourceforge.plantuml.timingdiagram.graphic.Histogram,net.sourceforge.plantuml.ugraphic.UGraphic)>($r2, r1);

        return;
    }
}
