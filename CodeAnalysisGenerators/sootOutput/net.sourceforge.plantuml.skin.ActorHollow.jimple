public class net.sourceforge.plantuml.skin.ActorHollow extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final double headDiam;
    private final double bodyWidth;
    private final double bodyHeight;
    private final double neckHeight;
    private final double armThickness;
    private final double bodyThickness;
    private final double legThickness;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContext;

    public void <init>(net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.skin.ActorHollow r0;
        net.sourceforge.plantuml.graphic.SymbolContext r1;

        r0 := @this: net.sourceforge.plantuml.skin.ActorHollow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.SymbolContext;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double legThickness> = 6.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double bodyThickness> = 6.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double armThickness> = 5.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double neckHeight> = 2.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double bodyHeight> = 21.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double bodyWidth> = 25.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double headDiam> = 9.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double headDiam> = 9.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double bodyWidth> = 25.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double bodyHeight> = 21.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double neckHeight> = 2.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double armThickness> = 5.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double bodyThickness> = 6.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: double legThickness> = 6.0;

        r0.<net.sourceforge.plantuml.skin.ActorHollow: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = r1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UEllipse $r0;
        net.sourceforge.plantuml.skin.ActorHollow r2;
        double $d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46;
        net.sourceforge.plantuml.ugraphic.UPath $r3;
        net.sourceforge.plantuml.graphic.SymbolContext $r5, $r6, $r11, $r12;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r9;
        net.sourceforge.plantuml.ugraphic.UGraphic $r8, $r10, r13, r14;

        r2 := @this: net.sourceforge.plantuml.skin.ActorHollow;

        r13 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(9.0, 9.0);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ActorHollow: double getPreferredWidth()>();

        d1 = $d0 / 2.0;

        $r3 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(-12.5, 0.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-12.5, 5.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-3.0, 5.0);

        $d2 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $d3 = 6.0 * $d2;

        $d4 = 25.0 + $d3;

        $d5 = $d4 - 6.0;

        $d6 = $d5 / 2.0;

        $d7 = 21.0 - $d6;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-3.0, $d7);

        $d8 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $d9 = 6.0 * $d8;

        $d10 = $d9 / 2.0;

        $d11 = 21.0 - $d10;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-12.5, $d11);

        $d12 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $d13 = 6.0 * $d12;

        $d14 = $d13 / 2.0;

        $d15 = 12.5 - $d14;

        $d16 = neg $d15;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d16, 21.0);

        $d17 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $d18 = 6.0 * $d17;

        $d19 = $d18 / 2.0;

        $d20 = 12.5 - $d19;

        $d21 = 21.0 - $d20;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d21);

        $d22 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $d23 = 6.0 * $d22;

        $d24 = $d23 / 2.0;

        $d25 = 12.5 - $d24;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d25, 21.0);

        $d26 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $d27 = 6.0 * $d26;

        $d28 = $d27 / 2.0;

        $d29 = 21.0 - $d28;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(12.5, $d29);

        $d30 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $d31 = 6.0 * $d30;

        $d32 = 25.0 + $d31;

        $d33 = $d32 - 6.0;

        $d34 = $d33 / 2.0;

        $d35 = 21.0 - $d34;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(3.0, $d35);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(3.0, 5.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(12.5, 5.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(12.5, 0.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-12.5, 0.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        $r5 = r2.<net.sourceforge.plantuml.skin.ActorHollow: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d36 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        $b0 = $d36 cmpl 0.0;

        if $b0 == 0 goto label1;

        $r11 = r2.<net.sourceforge.plantuml.skin.ActorHollow: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d45 = virtualinvoke $r11.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: void setDeltaShadow(double)>($d45);

        $r12 = r2.<net.sourceforge.plantuml.skin.ActorHollow: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d46 = virtualinvoke $r12.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void setDeltaShadow(double)>($d46);

     label1:
        $r6 = r2.<net.sourceforge.plantuml.skin.ActorHollow: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        r14 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r13);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d37 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        $d38 = $d37 / 2.0;

        $d39 = d1 - $d38;

        $d40 = specialinvoke r2.<net.sourceforge.plantuml.skin.ActorHollow: double thickness()>();

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d39, $d40);

        $r8 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d41 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        $d42 = specialinvoke r2.<net.sourceforge.plantuml.skin.ActorHollow: double thickness()>();

        $d43 = $d41 + $d42;

        $d44 = $d43 + 2.0;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d1, $d44);

        $r10 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        return;
    }

    private double thickness()
    {
        net.sourceforge.plantuml.skin.ActorHollow r0;
        net.sourceforge.plantuml.graphic.SymbolContext $r1;
        net.sourceforge.plantuml.ugraphic.UStroke $r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.ActorHollow;

        $r1 = r0.<net.sourceforge.plantuml.skin.ActorHollow: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        return $d0;
    }

    public double getPreferredWidth()
    {
        net.sourceforge.plantuml.skin.ActorHollow r0;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.skin.ActorHollow;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.skin.ActorHollow: double thickness()>();

        $d1 = $d0 * 2.0;

        $d2 = 25.0 + $d1;

        return $d2;
    }

    public double getPreferredHeight()
    {
        net.sourceforge.plantuml.skin.ActorHollow r0;
        double $d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.graphic.SymbolContext $r1;

        r0 := @this: net.sourceforge.plantuml.skin.ActorHollow;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.skin.ActorHollow: double thickness()>();

        $d1 = $d0 * 2.0;

        $d2 = 32.0 + $d1;

        $r1 = r0.<net.sourceforge.plantuml.skin.ActorHollow: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d3 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        $d4 = $d2 + $d3;

        return $d4;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.skin.ActorHollow r1;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.skin.ActorHollow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ActorHollow: double getPreferredWidth()>();

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ActorHollow: double getPreferredHeight()>();

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d0, $d1);

        return $r0;
    }
}
