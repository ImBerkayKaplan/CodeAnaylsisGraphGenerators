public final class net.sourceforge.plantuml.FileFormatOption extends java.lang.Object implements java.io.Serializable
{
    private final net.sourceforge.plantuml.FileFormat fileFormat;
    private boolean withMetadata;
    private final boolean useRedForError;
    private final java.lang.String svgLinkTarget;
    private final java.lang.String hoverColor;
    private final net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion;
    private final double scale;
    private final java.lang.String preserveAspectRatio;
    private final java.lang.String watermark;
    private final net.sourceforge.plantuml.api.ThemeStyle style;
    private boolean debugsvek;

    public double getScaleCoef()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $d0 = r0.<net.sourceforge.plantuml.FileFormatOption: double scale>;

        return $d0;
    }

    public void <init>(net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        net.sourceforge.plantuml.FileFormat r1;
        net.sourceforge.plantuml.TikzFontDistortion $r2;
        net.sourceforge.plantuml.api.ThemeStyle $r3;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormat;

        $r2 = staticinvoke <net.sourceforge.plantuml.TikzFontDistortion: net.sourceforge.plantuml.TikzFontDistortion getDefault()>();

        $r3 = <net.sourceforge.plantuml.api.ThemeStyle: net.sourceforge.plantuml.api.ThemeStyle LIGHT_REGULAR>;

        specialinvoke r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>(r1, 1, 0, null, 0, null, $r2, 1.0, null, null, $r3);

        return;
    }

    public void <init>(net.sourceforge.plantuml.FileFormat, boolean)
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        net.sourceforge.plantuml.FileFormat r1;
        boolean z0;
        net.sourceforge.plantuml.TikzFontDistortion $r2;
        net.sourceforge.plantuml.api.ThemeStyle $r3;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormat;

        z0 := @parameter1: boolean;

        $r2 = staticinvoke <net.sourceforge.plantuml.TikzFontDistortion: net.sourceforge.plantuml.TikzFontDistortion getDefault()>();

        $r3 = <net.sourceforge.plantuml.api.ThemeStyle: net.sourceforge.plantuml.api.ThemeStyle LIGHT_REGULAR>;

        specialinvoke r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>(r1, z0, 0, null, 0, null, $r2, 1.0, null, null, $r3);

        return;
    }

    private void <init>(net.sourceforge.plantuml.FileFormat, boolean, boolean, java.lang.String, boolean, java.lang.String, net.sourceforge.plantuml.TikzFontDistortion, double, java.lang.String, java.lang.String, net.sourceforge.plantuml.api.ThemeStyle)
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        java.lang.String r1, r2, r4, r8;
        net.sourceforge.plantuml.FileFormat r3;
        boolean z0, z1, z2;
        net.sourceforge.plantuml.TikzFontDistortion r5, $r7;
        java.lang.Object $r6;
        double d0;
        net.sourceforge.plantuml.api.ThemeStyle r9;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        r3 := @parameter0: net.sourceforge.plantuml.FileFormat;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r4 := @parameter3: java.lang.String;

        z2 := @parameter4: boolean;

        r1 := @parameter5: java.lang.String;

        r5 := @parameter6: net.sourceforge.plantuml.TikzFontDistortion;

        d0 := @parameter7: double;

        r8 := @parameter8: java.lang.String;

        r2 := @parameter9: java.lang.String;

        r9 := @parameter10: net.sourceforge.plantuml.api.ThemeStyle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek> = 0;

        r0.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor> = r1;

        r0.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark> = r2;

        r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat> = r3;

        r0.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata> = z0;

        r0.<net.sourceforge.plantuml.FileFormatOption: boolean useRedForError> = z1;

        r0.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget> = r4;

        r0.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek> = z2;

        $r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        $r7 = (net.sourceforge.plantuml.TikzFontDistortion) $r6;

        r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion> = $r7;

        r0.<net.sourceforge.plantuml.FileFormatOption: double scale> = d0;

        r0.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio> = r8;

        r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style> = r9;

        return;
    }

    public net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder(net.sourceforge.plantuml.SvgCharSizeHack)
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        net.sourceforge.plantuml.SvgCharSizeHack r1;
        net.sourceforge.plantuml.TikzFontDistortion $r2;
        net.sourceforge.plantuml.FileFormat $r3;
        net.sourceforge.plantuml.graphic.StringBounder $r4;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        r1 := @parameter0: net.sourceforge.plantuml.SvgCharSizeHack;

        $r3 = r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r2 = r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder(net.sourceforge.plantuml.TikzFontDistortion,net.sourceforge.plantuml.SvgCharSizeHack)>($r2, r1);

        return $r4;
    }

    public java.lang.String getSvgLinkTarget()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget>;

        return $r1;
    }

    public final boolean isWithMetadata()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $z0 = r0.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        return $z0;
    }

    public final java.lang.String getPreserveAspectRatio()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio>;

        return $r1;
    }

    public net.sourceforge.plantuml.FileFormatOption withUseRedForError()
    {
        net.sourceforge.plantuml.FileFormatOption $r0, r1;
        net.sourceforge.plantuml.api.ThemeStyle $r2;
        java.lang.String $r3, $r4, $r6, $r7;
        double $d0;
        net.sourceforge.plantuml.TikzFontDistortion $r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.FileFormat $r8;

        r1 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r0 = new net.sourceforge.plantuml.FileFormatOption;

        $r8 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $z1 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        $r7 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget>;

        $z0 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        $r6 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor>;

        $r5 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        $d0 = r1.<net.sourceforge.plantuml.FileFormatOption: double scale>;

        $r4 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio>;

        $r3 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark>;

        $r2 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style>;

        specialinvoke $r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>($r8, $z1, 1, $r7, $z0, $r6, $r5, $d0, $r4, $r3, $r2);

        return $r0;
    }

    public net.sourceforge.plantuml.FileFormatOption withTikzFontDistortion(net.sourceforge.plantuml.TikzFontDistortion)
    {
        net.sourceforge.plantuml.FileFormatOption $r0, r1;
        net.sourceforge.plantuml.TikzFontDistortion r2;
        net.sourceforge.plantuml.api.ThemeStyle $r3;
        java.lang.String $r4, $r5, $r6, $r7;
        double $d0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.FileFormat $r8;

        r1 := @this: net.sourceforge.plantuml.FileFormatOption;

        r2 := @parameter0: net.sourceforge.plantuml.TikzFontDistortion;

        $r0 = new net.sourceforge.plantuml.FileFormatOption;

        $r8 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $z1 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        $r7 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget>;

        $z0 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        $r6 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor>;

        $d0 = r1.<net.sourceforge.plantuml.FileFormatOption: double scale>;

        $r5 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio>;

        $r4 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark>;

        $r3 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style>;

        specialinvoke $r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>($r8, $z1, 1, $r7, $z0, $r6, r2, $d0, $r5, $r4, $r3);

        return $r0;
    }

    public net.sourceforge.plantuml.FileFormatOption withSvgLinkTarget(java.lang.String)
    {
        net.sourceforge.plantuml.FileFormatOption $r0, r1;
        java.lang.String r2, $r4, $r5, $r7;
        net.sourceforge.plantuml.api.ThemeStyle $r3;
        double $d0;
        net.sourceforge.plantuml.TikzFontDistortion $r6;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.FileFormat $r8;

        r1 := @this: net.sourceforge.plantuml.FileFormatOption;

        r2 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.FileFormatOption;

        $r8 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $z2 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        $z1 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean useRedForError>;

        $z0 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        $r7 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor>;

        $r6 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        $d0 = r1.<net.sourceforge.plantuml.FileFormatOption: double scale>;

        $r5 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio>;

        $r4 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark>;

        $r3 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style>;

        specialinvoke $r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>($r8, $z2, $z1, r2, $z0, $r7, $r6, $d0, $r5, $r4, $r3);

        return $r0;
    }

    public net.sourceforge.plantuml.FileFormatOption withPreserveAspectRatio(java.lang.String)
    {
        net.sourceforge.plantuml.FileFormatOption $r0, r1;
        java.lang.String r2, $r4, $r6, $r7;
        net.sourceforge.plantuml.api.ThemeStyle $r3;
        double $d0;
        net.sourceforge.plantuml.TikzFontDistortion $r5;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.FileFormat $r8;

        r1 := @this: net.sourceforge.plantuml.FileFormatOption;

        r2 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.FileFormatOption;

        $r8 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $z2 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        $z1 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean useRedForError>;

        $r7 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget>;

        $z0 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        $r6 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor>;

        $r5 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        $d0 = r1.<net.sourceforge.plantuml.FileFormatOption: double scale>;

        $r4 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark>;

        $r3 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style>;

        specialinvoke $r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>($r8, $z2, $z1, $r7, $z0, $r6, $r5, $d0, r2, $r4, $r3);

        return $r0;
    }

    public net.sourceforge.plantuml.FileFormatOption withHoverColor(java.lang.String)
    {
        net.sourceforge.plantuml.FileFormatOption $r0, r1;
        java.lang.String r2, $r4, $r5, $r7;
        net.sourceforge.plantuml.api.ThemeStyle $r3;
        double $d0;
        net.sourceforge.plantuml.TikzFontDistortion $r6;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.FileFormat $r8;

        r1 := @this: net.sourceforge.plantuml.FileFormatOption;

        r2 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.FileFormatOption;

        $r8 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $z2 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        $z1 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean useRedForError>;

        $r7 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget>;

        $z0 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        $r6 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        $d0 = r1.<net.sourceforge.plantuml.FileFormatOption: double scale>;

        $r5 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio>;

        $r4 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark>;

        $r3 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style>;

        specialinvoke $r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>($r8, $z2, $z1, $r7, $z0, r2, $r6, $d0, $r5, $r4, $r3);

        return $r0;
    }

    public net.sourceforge.plantuml.FileFormatOption withScale(double)
    {
        net.sourceforge.plantuml.FileFormatOption $r0, r1;
        double d0;
        net.sourceforge.plantuml.api.ThemeStyle $r2;
        java.lang.String $r3, $r4, $r6, $r7;
        net.sourceforge.plantuml.TikzFontDistortion $r5;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.FileFormat $r8;

        r1 := @this: net.sourceforge.plantuml.FileFormatOption;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.FileFormatOption;

        $r8 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $z2 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        $z1 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean useRedForError>;

        $r7 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget>;

        $z0 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        $r6 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor>;

        $r5 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        $r4 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio>;

        $r3 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark>;

        $r2 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style>;

        specialinvoke $r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>($r8, $z2, $z1, $r7, $z0, $r6, $r5, d0, $r4, $r3, $r2);

        return $r0;
    }

    public net.sourceforge.plantuml.FileFormatOption withWartermark(java.lang.String)
    {
        net.sourceforge.plantuml.FileFormatOption $r0, r1;
        java.lang.String r2, $r4, $r6, $r7;
        net.sourceforge.plantuml.api.ThemeStyle $r3;
        double $d0;
        net.sourceforge.plantuml.TikzFontDistortion $r5;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.FileFormat $r8;

        r1 := @this: net.sourceforge.plantuml.FileFormatOption;

        r2 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.FileFormatOption;

        $r8 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $z2 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        $z1 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean useRedForError>;

        $r7 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget>;

        $z0 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        $r6 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor>;

        $r5 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        $d0 = r1.<net.sourceforge.plantuml.FileFormatOption: double scale>;

        $r4 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio>;

        $r3 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style>;

        specialinvoke $r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>($r8, $z2, $z1, $r7, $z0, $r6, $r5, $d0, $r4, r2, $r3);

        return $r0;
    }

    public net.sourceforge.plantuml.FileFormatOption withStyle(net.sourceforge.plantuml.api.ThemeStyle)
    {
        net.sourceforge.plantuml.FileFormatOption $r0, r1;
        net.sourceforge.plantuml.api.ThemeStyle r2;
        java.lang.String $r3, $r4, $r6, $r7;
        double $d0;
        net.sourceforge.plantuml.TikzFontDistortion $r5;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.FileFormat $r8;

        r1 := @this: net.sourceforge.plantuml.FileFormatOption;

        r2 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        $r0 = new net.sourceforge.plantuml.FileFormatOption;

        $r8 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $z2 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata>;

        $z1 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean useRedForError>;

        $r7 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String svgLinkTarget>;

        $z0 = r1.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        $r6 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor>;

        $r5 = r1.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        $d0 = r1.<net.sourceforge.plantuml.FileFormatOption: double scale>;

        $r4 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String preserveAspectRatio>;

        $r3 = r1.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark>;

        specialinvoke $r0.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat,boolean,boolean,java.lang.String,boolean,java.lang.String,net.sourceforge.plantuml.TikzFontDistortion,double,java.lang.String,java.lang.String,net.sourceforge.plantuml.api.ThemeStyle)>($r8, $z2, $z1, $r7, $z0, $r6, $r5, $d0, $r4, $r3, r2);

        return $r0;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        net.sourceforge.plantuml.FileFormat $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.FileFormat: java.lang.String toString()>();

        return $r2;
    }

    public final net.sourceforge.plantuml.FileFormat getFileFormat()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        net.sourceforge.plantuml.FileFormat $r1;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat fileFormat>;

        return $r1;
    }

    public java.awt.geom.AffineTransform getAffineTransform()
    {
        net.sourceforge.plantuml.FileFormatOption r0;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        return null;
    }

    public final boolean isUseRedForError()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $z0 = r0.<net.sourceforge.plantuml.FileFormatOption: boolean useRedForError>;

        return $z0;
    }

    public void setDebugSvek(boolean)
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek> = z0;

        return;
    }

    public boolean isDebugSvek()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $z0 = r0.<net.sourceforge.plantuml.FileFormatOption: boolean debugsvek>;

        return $z0;
    }

    public final java.lang.String getHoverColor()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.FileFormatOption: java.lang.String hoverColor>;

        return $r1;
    }

    public void hideMetadata()
    {
        net.sourceforge.plantuml.FileFormatOption r0;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        r0.<net.sourceforge.plantuml.FileFormatOption: boolean withMetadata> = 0;

        return;
    }

    public final net.sourceforge.plantuml.TikzFontDistortion getTikzFontDistortion()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        net.sourceforge.plantuml.TikzFontDistortion $r1;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.TikzFontDistortion tikzFontDistortion>;

        return $r1;
    }

    public final java.lang.String getWatermark()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.FileFormatOption: java.lang.String watermark>;

        return $r1;
    }

    public net.sourceforge.plantuml.api.ThemeStyle getStyle()
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        net.sourceforge.plantuml.api.ThemeStyle $r1;

        r0 := @this: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.api.ThemeStyle style>;

        return $r1;
    }
}
