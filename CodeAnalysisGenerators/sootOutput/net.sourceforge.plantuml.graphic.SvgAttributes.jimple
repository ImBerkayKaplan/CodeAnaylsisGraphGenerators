public class net.sourceforge.plantuml.graphic.SvgAttributes extends java.lang.Object
{
    private final java.util.Map attributes;

    public void <init>()
    {
        net.sourceforge.plantuml.graphic.SvgAttributes r0;
        java.util.TreeMap $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.SvgAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes> = $r1;

        return;
    }

    private void <init>(net.sourceforge.plantuml.graphic.SvgAttributes)
    {
        net.sourceforge.plantuml.graphic.SvgAttributes r0, r2;
        java.util.TreeMap $r1;
        java.util.Map $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.graphic.SvgAttributes;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.SvgAttributes;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes> = $r1;

        $r4 = r0.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes>;

        $r3 = r2.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes>;

        interfaceinvoke $r4.<java.util.Map: void putAll(java.util.Map)>($r3);

        return;
    }

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.SvgAttributes r0;
        java.util.TreeMap $r1;
        net.sourceforge.plantuml.command.regex.Pattern2 r2;
        java.lang.String r3, $r6, $r7, $r8;
        net.sourceforge.plantuml.command.regex.Matcher2 r4;
        boolean $z0;
        java.util.Map $r5;

        r0 := @this: net.sourceforge.plantuml.graphic.SvgAttributes;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes> = $r1;

        r2 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("(\\w+)\\s*=\\s*([%g][^%g]*[%g]|(?:\\w+))");

        r4 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r3);

     label1:
        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes>;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        $r8 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r7);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r8);

        goto label1;

     label2:
        return;
    }

    public java.util.Map attributes()
    {
        net.sourceforge.plantuml.graphic.SvgAttributes r0;
        java.util.Map $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.SvgAttributes;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.graphic.SvgAttributes add(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.graphic.SvgAttributes $r0, r1;
        java.lang.String r3, r4;
        java.util.Map $r5;

        r1 := @this: net.sourceforge.plantuml.graphic.SvgAttributes;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $r0 = new net.sourceforge.plantuml.graphic.SvgAttributes;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SvgAttributes: void <init>(net.sourceforge.plantuml.graphic.SvgAttributes)>(r1);

        $r5 = $r0.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r4);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.SvgAttributes add(net.sourceforge.plantuml.graphic.SvgAttributes)
    {
        net.sourceforge.plantuml.graphic.SvgAttributes $r0, r1, r3;
        java.util.Map $r4, $r5;

        r1 := @this: net.sourceforge.plantuml.graphic.SvgAttributes;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.SvgAttributes;

        $r0 = new net.sourceforge.plantuml.graphic.SvgAttributes;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SvgAttributes: void <init>(net.sourceforge.plantuml.graphic.SvgAttributes)>(r1);

        $r5 = $r0.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes>;

        $r4 = r3.<net.sourceforge.plantuml.graphic.SvgAttributes: java.util.Map attributes>;

        interfaceinvoke $r5.<java.util.Map: void putAll(java.util.Map)>($r4);

        return $r0;
    }
}
