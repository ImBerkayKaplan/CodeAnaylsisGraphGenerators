public class net.sourceforge.plantuml.svek.MinFinder extends java.lang.Object
{
    private double minX;
    private double minY;

    public void <init>()
    {
        net.sourceforge.plantuml.svek.MinFinder r0;

        r0 := @this: net.sourceforge.plantuml.svek.MinFinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.MinFinder: double minX> = 1.7976931348623157E308;

        r0.<net.sourceforge.plantuml.svek.MinFinder: double minY> = 1.7976931348623157E308;

        return;
    }

    public void manage(double, double)
    {
        double d0, $d1, d2, $d3;
        net.sourceforge.plantuml.svek.MinFinder r0;
        byte $b0, $b1;

        r0 := @this: net.sourceforge.plantuml.svek.MinFinder;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        $d1 = r0.<net.sourceforge.plantuml.svek.MinFinder: double minX>;

        $b0 = d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        r0.<net.sourceforge.plantuml.svek.MinFinder: double minX> = d0;

     label1:
        $d3 = r0.<net.sourceforge.plantuml.svek.MinFinder: double minY>;

        $b1 = d2 cmpg $d3;

        if $b1 >= 0 goto label2;

        r0.<net.sourceforge.plantuml.svek.MinFinder: double minY> = d2;

     label2:
        return;
    }

    public void manage(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0;
        net.sourceforge.plantuml.svek.MinFinder r2;
        double $d0, $d1;

        r2 := @this: net.sourceforge.plantuml.svek.MinFinder;

        r0 := @parameter0: java.awt.geom.Point2D;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r2.<net.sourceforge.plantuml.svek.MinFinder: void manage(double,double)>($d0, $d1);

        return;
    }

    public void manage(net.sourceforge.plantuml.svek.MinFinder)
    {
        net.sourceforge.plantuml.svek.MinFinder r0, r1;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.svek.MinFinder;

        r1 := @parameter0: net.sourceforge.plantuml.svek.MinFinder;

        $d1 = r1.<net.sourceforge.plantuml.svek.MinFinder: double minX>;

        $d0 = r1.<net.sourceforge.plantuml.svek.MinFinder: double minY>;

        virtualinvoke r0.<net.sourceforge.plantuml.svek.MinFinder: void manage(double,double)>($d1, $d0);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5;
        net.sourceforge.plantuml.svek.MinFinder r2;
        double $d0, $d1;
        java.lang.String $r6;

        r2 := @this: net.sourceforge.plantuml.svek.MinFinder;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("minX=");

        $d0 = r2.<net.sourceforge.plantuml.svek.MinFinder: double minX>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minY=");

        $d1 = r2.<net.sourceforge.plantuml.svek.MinFinder: double minY>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public double getMinX()
    {
        net.sourceforge.plantuml.svek.MinFinder r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.svek.MinFinder;

        $d0 = r0.<net.sourceforge.plantuml.svek.MinFinder: double minX>;

        return $d0;
    }

    public double getMinY()
    {
        net.sourceforge.plantuml.svek.MinFinder r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.svek.MinFinder;

        $d0 = r0.<net.sourceforge.plantuml.svek.MinFinder: double minY>;

        return $d0;
    }
}
