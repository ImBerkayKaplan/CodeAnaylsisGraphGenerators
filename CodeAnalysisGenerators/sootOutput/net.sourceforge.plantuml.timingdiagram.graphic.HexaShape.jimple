public class net.sourceforge.plantuml.timingdiagram.graphic.HexaShape extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final double width;
    private final double height;
    private final net.sourceforge.plantuml.graphic.SymbolContext context;
    private final double delta;

    private void <init>(double, double, net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.HexaShape r0;
        double d0, d1;
        net.sourceforge.plantuml.graphic.SymbolContext r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.HexaShape;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.graphic.SymbolContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double delta> = 12.0;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double delta> = 12.0;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double width> = d0;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double height> = d1;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: net.sourceforge.plantuml.graphic.SymbolContext context> = r1;

        return;
    }

    public static net.sourceforge.plantuml.timingdiagram.graphic.HexaShape create(double, double, net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.HexaShape $r0;
        double d0, d1;
        net.sourceforge.plantuml.graphic.SymbolContext r1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.graphic.SymbolContext;

        $r0 = new net.sourceforge.plantuml.timingdiagram.graphic.HexaShape;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: void <init>(double,double,net.sourceforge.plantuml.graphic.SymbolContext)>(d0, d1, r1);

        return $r0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.HexaShape r0;
        net.sourceforge.plantuml.graphic.SymbolContext $r1;
        net.sourceforge.plantuml.ugraphic.UPolygon $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.HexaShape;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: net.sourceforge.plantuml.graphic.SymbolContext context>;

        r5 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r4);

        $r2 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 0.0);

        $d0 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double width>;

        $d1 = $d0 - 12.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d1, 0.0);

        $d4 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double width>;

        $d2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double height>;

        $d3 = $d2 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d4, $d3);

        $d5 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double width>;

        $d7 = $d5 - 12.0;

        $d6 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double height>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d7, $d6);

        $d8 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double height>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, $d8);

        $d9 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.HexaShape: double height>;

        $d10 = $d9 / 2.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, $d10);

        interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

        return;
    }
}
