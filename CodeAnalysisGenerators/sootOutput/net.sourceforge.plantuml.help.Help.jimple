public class net.sourceforge.plantuml.help.Help extends net.sourceforge.plantuml.UmlDiagram
{
    private final java.util.List lines;

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.help.Help r1;

        r1 := @this: net.sourceforge.plantuml.help.Help;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Help)");

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.help.Help r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.UmlDiagramType $r3;
        java.util.ArrayList $r4;

        r0 := @this: net.sourceforge.plantuml.help.Help;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        $r3 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType HELP>;

        specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType)>(r1, r2, $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.help.Help: java.util.List lines> = $r4;

        return;
    }

    public net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.help.Help r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.help.Help;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder annotations(boolean)>(0);

        return $r3;
    }

    protected net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.help.Help r0;
        java.util.List $r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.ugraphic.UFont r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.creole.CreoleMode $r7;
        net.sourceforge.plantuml.creole.SheetBuilder $r8;
        net.sourceforge.plantuml.creole.Sheet r9;
        net.sourceforge.plantuml.creole.SheetBlock1 $r10;
        net.sourceforge.plantuml.LineBreakStrategy $r11;
        net.sourceforge.plantuml.FileFormatOption r13;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r14, $r15;
        java.io.OutputStream r16;
        net.sourceforge.plantuml.core.ImageData $r17;
        int i0;

        r0 := @this: net.sourceforge.plantuml.help.Help;

        r16 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r13 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r1 = r0.<net.sourceforge.plantuml.help.Help: java.util.List lines>;

        r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r1);

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont serif(int)>(16);

        r4 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>(r3);

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.help.Help: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $r8 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r4, $r5, $r6, $r7);

        r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>(r2);

        $r10 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $r11 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        specialinvoke $r10.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>(r9, $r11, 0.0);

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.help.Help: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r13);

        $r15 = virtualinvoke $r14.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r10);

        $r17 = virtualinvoke $r15.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r16);

        return $r17;
    }

    public void add(java.lang.CharSequence)
    {
        net.sourceforge.plantuml.help.Help r0;
        java.lang.CharSequence r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.help.Help;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<net.sourceforge.plantuml.help.Help: java.util.List lines>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft getDefaultMargins()
    {
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft $r0;
        net.sourceforge.plantuml.help.Help r1;

        r1 := @this: net.sourceforge.plantuml.help.Help;

        $r0 = staticinvoke <net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft same(double)>(0.0);

        return $r0;
    }
}
