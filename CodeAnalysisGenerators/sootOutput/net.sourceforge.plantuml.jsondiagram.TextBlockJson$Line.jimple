class net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line extends java.lang.Object
{
    final net.sourceforge.plantuml.graphic.TextBlock b1;
    final net.sourceforge.plantuml.graphic.TextBlock b2;
    final boolean highlighted;

    void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, boolean)
    {
        net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line r0;
        net.sourceforge.plantuml.graphic.TextBlock r1, r2;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line: net.sourceforge.plantuml.graphic.TextBlock b1> = r1;

        r0.<net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line: net.sourceforge.plantuml.graphic.TextBlock b2> = r2;

        r0.<net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line: boolean highlighted> = z0;

        return;
    }

    void <init>(net.sourceforge.plantuml.graphic.TextBlock, boolean)
    {
        net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        z0 := @parameter1: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,boolean)>(r1, null, z0);

        return;
    }

    double getHeightOfRow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r4, $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3, $r6;
        double d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line: net.sourceforge.plantuml.graphic.TextBlock b1>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r4 = r0.<net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line: net.sourceforge.plantuml.graphic.TextBlock b2>;

        if $r4 != null goto label1;

        return d0;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.jsondiagram.TextBlockJson$Line: net.sourceforge.plantuml.graphic.TextBlock b2>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke $r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>(d0, $d1);

        return $d2;
    }
}
