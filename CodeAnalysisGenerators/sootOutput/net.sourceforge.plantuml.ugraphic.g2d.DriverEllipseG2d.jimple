public class net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d extends net.sourceforge.plantuml.ugraphic.g2d.DriverShadowedG2d implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final double dpiFactor;
    private final net.sourceforge.plantuml.EnsureVisible visible;
    private static final double ROU;

    public void <init>(double, net.sourceforge.plantuml.EnsureVisible)
    {
        net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d r0;
        double d0;
        net.sourceforge.plantuml.EnsureVisible r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d;

        d0 := @parameter0: double;

        r1 := @parameter1: net.sourceforge.plantuml.EnsureVisible;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverShadowedG2d: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: double dpiFactor> = d0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: net.sourceforge.plantuml.EnsureVisible visible> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UEllipse, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.awt.Graphics2D)
    {
        java.awt.Graphics2D r0;
        java.awt.BasicStroke $r1;
        net.sourceforge.plantuml.ugraphic.UParam r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;
        double $d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        float $f0;
        net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d r4;
        net.sourceforge.plantuml.EnsureVisible $r5, $r7;
        net.sourceforge.plantuml.ugraphic.UEllipse r6;
        net.sourceforge.plantuml.ugraphic.color.HColor r8, r13, $r14, $r15;
        byte $b0, $b1, $b2;
        java.awt.geom.Arc2D$Double $r9;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r10;
        java.awt.Color $r11, $r16;
        java.awt.geom.Ellipse2D$Double $r12;
        boolean $z0, $z1;
        java.awt.GradientPaint r17;

        r4 := @this: net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UEllipse;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r10 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r2 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r0 := @parameter5: java.awt.Graphics2D;

        $r1 = new java.awt.BasicStroke;

        $r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $f0 = (float) $d0;

        specialinvoke $r1.<java.awt.BasicStroke: void <init>(float)>($f0);

        virtualinvoke r0.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r1);

        $r5 = r4.<net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: net.sourceforge.plantuml.EnsureVisible visible>;

        interfaceinvoke $r5.<net.sourceforge.plantuml.EnsureVisible: void ensureVisible(double,double)>(d1, d2);

        $r7 = r4.<net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: net.sourceforge.plantuml.EnsureVisible visible>;

        $d3 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        $d4 = d1 + $d3;

        $d5 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        $d6 = d2 + $d5;

        interfaceinvoke $r7.<net.sourceforge.plantuml.EnsureVisible: void ensureVisible(double,double)>($d4, $d6);

        r8 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $d7 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getStart()>();

        $b0 = $d7 cmpl 0.0;

        if $b0 != 0 goto label5;

        $d14 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getExtend()>();

        $b1 = $d14 cmpl 0.0;

        if $b1 != 0 goto label5;

        $r12 = new java.awt.geom.Ellipse2D$Double;

        $d15 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        $d16 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        specialinvoke $r12.<java.awt.geom.Ellipse2D$Double: void <init>(double,double,double,double)>(d1, d2, $d15, $d16);

        $d17 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getDeltaShadow()>();

        $b2 = $d17 cmpl 0.0;

        if $b2 == 0 goto label1;

        $d20 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getDeltaShadow()>();

        $d21 = r4.<net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: double dpiFactor>;

        virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: void drawShadow(java.awt.Graphics2D,java.awt.Shape,double,double)>(r0, $r12, $d20, $d21);

     label1:
        r13 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $z0 = r13 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z0 == 0 goto label2;

        $d18 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        $d19 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        r17 = staticinvoke <net.sourceforge.plantuml.ugraphic.g2d.DriverRectangleG2d: java.awt.GradientPaint getPaintGradient(double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,double,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(d1, d2, r10, $d18, $d19, r13);

        virtualinvoke r0.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>(r17);

        virtualinvoke r0.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r12);

        staticinvoke <net.sourceforge.plantuml.ugraphic.g2d.DriverRectangleG2d: void drawBorder(net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UShapeSized,java.awt.Shape,java.awt.Graphics2D,double,double)>(r2, r8, r10, r6, $r12, r0, d1, d2);

        goto label4;

     label2:
        if r13 == null goto label3;

        $r15 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $r16 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r15);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r16);

        staticinvoke <net.sourceforge.plantuml.ugraphic.g2d.DriverRectangleG2d: void managePattern(net.sourceforge.plantuml.ugraphic.UParam,java.awt.Graphics2D)>(r2, r0);

        virtualinvoke r0.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r12);

     label3:
        if r8 == null goto label4;

        $r14 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $z1 = virtualinvoke r8.<java.lang.Object: boolean equals(java.lang.Object)>($r14);

        if $z1 != 0 goto label4;

        staticinvoke <net.sourceforge.plantuml.ugraphic.g2d.DriverRectangleG2d: void drawBorder(net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UShapeSized,java.awt.Shape,java.awt.Graphics2D,double,double)>(r2, r8, r10, r6, $r12, r0, d1, d2);

     label4:
        goto label6;

     label5:
        $r9 = new java.awt.geom.Arc2D$Double;

        $d8 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        $d9 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        $d10 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getStart()>();

        $d11 = staticinvoke <net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: double round(double)>($d10);

        $d12 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UEllipse: double getExtend()>();

        $d13 = staticinvoke <net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: double round(double)>($d12);

        specialinvoke $r9.<java.awt.geom.Arc2D$Double: void <init>(double,double,double,double,double,double,int)>(d1, d2, $d8, $d9, $d11, $d13, 0);

        if r8 == null goto label6;

        $r11 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r8);

        virtualinvoke r0.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r11);

        virtualinvoke r0.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r9);

     label6:
        return;
    }

    static double round(double)
    {
        double d0;

        d0 := @parameter0: double;

        return d0;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        java.awt.Graphics2D $r5;
        net.sourceforge.plantuml.ugraphic.UEllipse $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UEllipse) r1;

        $r5 = (java.awt.Graphics2D) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: void draw(net.sourceforge.plantuml.ugraphic.UEllipse,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,java.awt.Graphics2D)>($r6, d0, d1, r2, r3, $r5);

        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: double ROU> = 5.0;

        return;
    }
}
