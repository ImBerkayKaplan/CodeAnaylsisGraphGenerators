public class net.sourceforge.plantuml.svek.image.EntityImageSynchroBar extends net.sourceforge.plantuml.svek.AbstractEntityImage
{

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.svek.image.EntityImageSynchroBar r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.style.SName r3;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageSynchroBar;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.style.SName;

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractEntityImage: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        return;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.svek.image.EntityImageSynchroBar r6;

        r6 := @this: net.sourceforge.plantuml.svek.image.EntityImageSynchroBar;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityBar>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.image.EntityImageSynchroBar r0;
        net.sourceforge.plantuml.ISkinParam $r1;
        net.sourceforge.plantuml.cucadiagram.Rankdir $r2, $r3;
        net.sourceforge.plantuml.Dimension2DDouble $r4, $r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageSynchroBar;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.cucadiagram.Rankdir getRankdir()>();

        $r3 = <net.sourceforge.plantuml.cucadiagram.Rankdir: net.sourceforge.plantuml.cucadiagram.Rankdir LEFT_TO_RIGHT>;

        if $r2 != $r3 goto label1;

        $r5 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r5.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(8.0, 80.0);

        return $r5;

     label1:
        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(80.0, 8.0);

        return $r4;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.image.EntityImageSynchroBar r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r30, $r32;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        net.sourceforge.plantuml.ugraphic.URectangle $r4;
        double $d0, $d1, d2;
        net.sourceforge.plantuml.ISkinParam $r6, $r10, $r17, $r22, $r24;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r7, $r12, $r15;
        net.sourceforge.plantuml.ColorParam[] $r8;
        net.sourceforge.plantuml.ColorParam $r9;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.IEntity $r11, $r14;
        net.sourceforge.plantuml.style.StyleSignature $r13, $r16;
        net.sourceforge.plantuml.style.StyleBuilder $r18;
        net.sourceforge.plantuml.style.Style r19;
        net.sourceforge.plantuml.style.PName $r20, $r26;
        net.sourceforge.plantuml.style.Value $r21, $r27;
        net.sourceforge.plantuml.api.ThemeStyle $r23;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r25;
        net.sourceforge.plantuml.ugraphic.color.HColor r28;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r29;
        net.sourceforge.plantuml.ugraphic.UBackground $r31;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageSynchroBar;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r4 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        d2 = 0.0;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r8 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r9 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityBar>;

        $r8[0] = $r9;

        r28 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r6, $r7, $r8);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r13 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r16 = virtualinvoke $r13.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature 'with'(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r15);

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r19 = virtualinvoke $r16.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r18);

        $r20 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r21 = virtualinvoke r19.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r20);

        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r24 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r28 = interfaceinvoke $r21.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r23, $r25);

        $r26 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r27 = virtualinvoke r19.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r26);

        d2 = interfaceinvoke $r27.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        goto label2;

     label1:
        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageSynchroBar: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $z1 = interfaceinvoke $r10.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r12);

        if $z1 == 0 goto label2;

        d2 = 4.0;

     label2:
        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.Shadowable: void setDeltaShadow(double)>(d2);

        $r29 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r29.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r30 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r29);

        $r31 = interfaceinvoke r28.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r32 = interfaceinvoke $r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r31);

        interfaceinvoke $r32.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        return;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.svek.image.EntityImageSynchroBar r1;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageSynchroBar;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE>;

        return $r0;
    }
}
