public class net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3 extends net.sourceforge.plantuml.command.PSystemCommandFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3 r0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>()>();

        return;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.command.CommandFootboxIgnored $r2;
        net.sourceforge.plantuml.activitydiagram3.command.CommandSwimlane $r3;
        net.sourceforge.plantuml.activitydiagram3.command.CommandSwimlane2 $r4;
        net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 $r5;
        net.sourceforge.plantuml.activitydiagram3.command.CommandEndPartition3 $r6;
        net.sourceforge.plantuml.activitydiagram3.command.CommandGroup3 $r7;
        net.sourceforge.plantuml.activitydiagram3.command.CommandGroupEnd3 $r8;
        net.sourceforge.plantuml.activitydiagram3.command.CommandArrow3 $r9;
        net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3 $r10;
        net.sourceforge.plantuml.activitydiagram3.command.CommandRepeat3 $r11;
        net.sourceforge.plantuml.activitydiagram3.command.CommandActivity3 $r12;
        net.sourceforge.plantuml.activitydiagram3.command.CommandIf4 $r13;
        net.sourceforge.plantuml.activitydiagram3.command.CommandIf2 $r14, $r16;
        net.sourceforge.plantuml.command.CommandDecoratorMultine $r15, $r20, $r52;
        net.sourceforge.plantuml.activitydiagram3.command.CommandIfLegacy1 $r17;
        net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2 $r18, $r53;
        net.sourceforge.plantuml.activitydiagram3.command.CommandElse3 $r19, $r21;
        net.sourceforge.plantuml.activitydiagram3.command.CommandElseLegacy1 $r22;
        net.sourceforge.plantuml.activitydiagram3.command.CommandEndif3 $r23;
        net.sourceforge.plantuml.activitydiagram3.command.CommandSwitch $r24;
        net.sourceforge.plantuml.activitydiagram3.command.CommandCase $r25;
        net.sourceforge.plantuml.activitydiagram3.command.CommandEndSwitch $r26;
        net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3 $r27;
        net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3Multilines $r28;
        net.sourceforge.plantuml.activitydiagram3.command.CommandBackward3 $r29;
        net.sourceforge.plantuml.activitydiagram3.command.CommandBackwardLong3 $r30;
        net.sourceforge.plantuml.activitydiagram3.command.CommandWhile3 $r31;
        net.sourceforge.plantuml.activitydiagram3.command.CommandWhileEnd3 $r32;
        net.sourceforge.plantuml.activitydiagram3.command.CommandFork3 $r33;
        net.sourceforge.plantuml.activitydiagram3.command.CommandForkAgain3 $r34;
        net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3 $r35;
        net.sourceforge.plantuml.activitydiagram3.command.CommandSplit3 $r36;
        net.sourceforge.plantuml.activitydiagram3.command.CommandSplitAgain3 $r37;
        net.sourceforge.plantuml.activitydiagram3.command.CommandSplitEnd3 $r38;
        net.sourceforge.plantuml.activitydiagram3.command.CommandStart3 $r39;
        net.sourceforge.plantuml.activitydiagram3.command.CommandStop3 $r40;
        net.sourceforge.plantuml.activitydiagram3.command.CommandCircleSpot3 $r41;
        net.sourceforge.plantuml.activitydiagram3.command.CommandBreak $r42;
        net.sourceforge.plantuml.activitydiagram3.command.CommandEnd3 $r43;
        net.sourceforge.plantuml.activitydiagram3.command.CommandKill3 $r44;
        net.sourceforge.plantuml.activitydiagram3.command.CommandLink3 $r45;
        net.sourceforge.plantuml.activitydiagram3.command.CommandNote3 $r46;
        net.sourceforge.plantuml.activitydiagram3.command.CommandNoteLong3 $r47;
        net.sourceforge.plantuml.activitydiagram3.command.CommandActivityLong3 $r48;
        net.sourceforge.plantuml.activitydiagram3.command.CommandActivityLegacy1 $r49;
        net.sourceforge.plantuml.activitydiagram3.command.CommandLabel $r50;
        net.sourceforge.plantuml.activitydiagram3.command.CommandGoto $r51;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3 r54;

        r54 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new net.sourceforge.plantuml.command.CommandFootboxIgnored;

        specialinvoke $r2.<net.sourceforge.plantuml.command.CommandFootboxIgnored: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands1(java.util.List)>($r0);

        $r3 = new net.sourceforge.plantuml.activitydiagram3.command.CommandSwimlane;

        specialinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.command.CommandSwimlane: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.activitydiagram3.command.CommandSwimlane2;

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.command.CommandSwimlane2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3;

        specialinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.activitydiagram3.command.CommandEndPartition3;

        specialinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.command.CommandEndPartition3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new net.sourceforge.plantuml.activitydiagram3.command.CommandGroup3;

        specialinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.command.CommandGroup3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new net.sourceforge.plantuml.activitydiagram3.command.CommandGroupEnd3;

        specialinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.command.CommandGroupEnd3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new net.sourceforge.plantuml.activitydiagram3.command.CommandArrow3;

        specialinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.command.CommandArrow3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3;

        specialinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.command.CommandArrowLong3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new net.sourceforge.plantuml.activitydiagram3.command.CommandRepeat3;

        specialinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.command.CommandRepeat3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new net.sourceforge.plantuml.activitydiagram3.command.CommandActivity3;

        specialinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.command.CommandActivity3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = new net.sourceforge.plantuml.activitydiagram3.command.CommandIf4;

        specialinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.command.CommandIf4: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new net.sourceforge.plantuml.activitydiagram3.command.CommandIf2;

        specialinvoke $r14.<net.sourceforge.plantuml.activitydiagram3.command.CommandIf2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = new net.sourceforge.plantuml.command.CommandDecoratorMultine;

        $r16 = new net.sourceforge.plantuml.activitydiagram3.command.CommandIf2;

        specialinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.command.CommandIf2: void <init>()>();

        specialinvoke $r15.<net.sourceforge.plantuml.command.CommandDecoratorMultine: void <init>(net.sourceforge.plantuml.command.SingleLineCommand2,int)>($r16, 50);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r17 = new net.sourceforge.plantuml.activitydiagram3.command.CommandIfLegacy1;

        specialinvoke $r17.<net.sourceforge.plantuml.activitydiagram3.command.CommandIfLegacy1: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = new net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2;

        specialinvoke $r18.<net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = new net.sourceforge.plantuml.activitydiagram3.command.CommandElse3;

        specialinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.command.CommandElse3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = new net.sourceforge.plantuml.command.CommandDecoratorMultine;

        $r21 = new net.sourceforge.plantuml.activitydiagram3.command.CommandElse3;

        specialinvoke $r21.<net.sourceforge.plantuml.activitydiagram3.command.CommandElse3: void <init>()>();

        specialinvoke $r20.<net.sourceforge.plantuml.command.CommandDecoratorMultine: void <init>(net.sourceforge.plantuml.command.SingleLineCommand2,int)>($r21, 50);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r22 = new net.sourceforge.plantuml.activitydiagram3.command.CommandElseLegacy1;

        specialinvoke $r22.<net.sourceforge.plantuml.activitydiagram3.command.CommandElseLegacy1: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r23 = new net.sourceforge.plantuml.activitydiagram3.command.CommandEndif3;

        specialinvoke $r23.<net.sourceforge.plantuml.activitydiagram3.command.CommandEndif3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r23);

        $r24 = new net.sourceforge.plantuml.activitydiagram3.command.CommandSwitch;

        specialinvoke $r24.<net.sourceforge.plantuml.activitydiagram3.command.CommandSwitch: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r25 = new net.sourceforge.plantuml.activitydiagram3.command.CommandCase;

        specialinvoke $r25.<net.sourceforge.plantuml.activitydiagram3.command.CommandCase: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r26 = new net.sourceforge.plantuml.activitydiagram3.command.CommandEndSwitch;

        specialinvoke $r26.<net.sourceforge.plantuml.activitydiagram3.command.CommandEndSwitch: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r27 = new net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3;

        specialinvoke $r27.<net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r27);

        $r28 = new net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3Multilines;

        specialinvoke $r28.<net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3Multilines: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = new net.sourceforge.plantuml.activitydiagram3.command.CommandBackward3;

        specialinvoke $r29.<net.sourceforge.plantuml.activitydiagram3.command.CommandBackward3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r29);

        $r30 = new net.sourceforge.plantuml.activitydiagram3.command.CommandBackwardLong3;

        specialinvoke $r30.<net.sourceforge.plantuml.activitydiagram3.command.CommandBackwardLong3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r30);

        $r31 = new net.sourceforge.plantuml.activitydiagram3.command.CommandWhile3;

        specialinvoke $r31.<net.sourceforge.plantuml.activitydiagram3.command.CommandWhile3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r32 = new net.sourceforge.plantuml.activitydiagram3.command.CommandWhileEnd3;

        specialinvoke $r32.<net.sourceforge.plantuml.activitydiagram3.command.CommandWhileEnd3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r32);

        $r33 = new net.sourceforge.plantuml.activitydiagram3.command.CommandFork3;

        specialinvoke $r33.<net.sourceforge.plantuml.activitydiagram3.command.CommandFork3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r33);

        $r34 = new net.sourceforge.plantuml.activitydiagram3.command.CommandForkAgain3;

        specialinvoke $r34.<net.sourceforge.plantuml.activitydiagram3.command.CommandForkAgain3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = new net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3;

        specialinvoke $r35.<net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r35);

        $r36 = new net.sourceforge.plantuml.activitydiagram3.command.CommandSplit3;

        specialinvoke $r36.<net.sourceforge.plantuml.activitydiagram3.command.CommandSplit3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r36);

        $r37 = new net.sourceforge.plantuml.activitydiagram3.command.CommandSplitAgain3;

        specialinvoke $r37.<net.sourceforge.plantuml.activitydiagram3.command.CommandSplitAgain3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r37);

        $r38 = new net.sourceforge.plantuml.activitydiagram3.command.CommandSplitEnd3;

        specialinvoke $r38.<net.sourceforge.plantuml.activitydiagram3.command.CommandSplitEnd3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r38);

        $r39 = new net.sourceforge.plantuml.activitydiagram3.command.CommandStart3;

        specialinvoke $r39.<net.sourceforge.plantuml.activitydiagram3.command.CommandStart3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r39);

        $r40 = new net.sourceforge.plantuml.activitydiagram3.command.CommandStop3;

        specialinvoke $r40.<net.sourceforge.plantuml.activitydiagram3.command.CommandStop3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r40);

        $r41 = new net.sourceforge.plantuml.activitydiagram3.command.CommandCircleSpot3;

        specialinvoke $r41.<net.sourceforge.plantuml.activitydiagram3.command.CommandCircleSpot3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r41);

        $r42 = new net.sourceforge.plantuml.activitydiagram3.command.CommandBreak;

        specialinvoke $r42.<net.sourceforge.plantuml.activitydiagram3.command.CommandBreak: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r42);

        $r43 = new net.sourceforge.plantuml.activitydiagram3.command.CommandEnd3;

        specialinvoke $r43.<net.sourceforge.plantuml.activitydiagram3.command.CommandEnd3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r43);

        $r44 = new net.sourceforge.plantuml.activitydiagram3.command.CommandKill3;

        specialinvoke $r44.<net.sourceforge.plantuml.activitydiagram3.command.CommandKill3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r44);

        $r45 = new net.sourceforge.plantuml.activitydiagram3.command.CommandLink3;

        specialinvoke $r45.<net.sourceforge.plantuml.activitydiagram3.command.CommandLink3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r45);

        $r46 = new net.sourceforge.plantuml.activitydiagram3.command.CommandNote3;

        specialinvoke $r46.<net.sourceforge.plantuml.activitydiagram3.command.CommandNote3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r46);

        $r47 = new net.sourceforge.plantuml.activitydiagram3.command.CommandNoteLong3;

        specialinvoke $r47.<net.sourceforge.plantuml.activitydiagram3.command.CommandNoteLong3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r47);

        $r48 = new net.sourceforge.plantuml.activitydiagram3.command.CommandActivityLong3;

        specialinvoke $r48.<net.sourceforge.plantuml.activitydiagram3.command.CommandActivityLong3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r48);

        $r49 = new net.sourceforge.plantuml.activitydiagram3.command.CommandActivityLegacy1;

        specialinvoke $r49.<net.sourceforge.plantuml.activitydiagram3.command.CommandActivityLegacy1: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r49);

        $r50 = new net.sourceforge.plantuml.activitydiagram3.command.CommandLabel;

        specialinvoke $r50.<net.sourceforge.plantuml.activitydiagram3.command.CommandLabel: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r50);

        $r51 = new net.sourceforge.plantuml.activitydiagram3.command.CommandGoto;

        specialinvoke $r51.<net.sourceforge.plantuml.activitydiagram3.command.CommandGoto: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r51);

        $r52 = new net.sourceforge.plantuml.command.CommandDecoratorMultine;

        $r53 = new net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2;

        specialinvoke $r53.<net.sourceforge.plantuml.activitydiagram3.command.CommandElseIf2: void <init>()>();

        specialinvoke $r52.<net.sourceforge.plantuml.command.CommandDecoratorMultine: void <init>(net.sourceforge.plantuml.command.SingleLineCommand2,int)>($r53, 50);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r52);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3 r4;

        r4 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3 r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagramFactory3: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }
}
