public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final double diffYY2;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner;
    private final net.sourceforge.plantuml.graphic.TextBlock name;
    private final net.sourceforge.plantuml.graphic.TextBlock headerNote;
    private final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backColor;
    private final double shadowing;
    private final net.sourceforge.plantuml.ugraphic.UStroke stroke;
    private final net.sourceforge.plantuml.graphic.USymbol type;
    private final double roundCorner;
    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cachedInnerDimension;

    public final net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName partition>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.USymbol, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, $r4;
        net.sourceforge.plantuml.ISkinParam $r2, r7, $r16;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.graphic.USymbol r3;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.ugraphic.color.HColor r5, r6, r13, $r15, r45, r46, $r49, $r50, $r52, $r53;
        net.sourceforge.plantuml.FontParam[] $r8, $r11;
        net.sourceforge.plantuml.FontParam $r9, $r12;
        net.sourceforge.plantuml.ugraphic.UFont r10;
        net.sourceforge.plantuml.graphic.FontConfiguration $r14, r48;
        int $i0;
        net.sourceforge.plantuml.LineParam $r17;
        net.sourceforge.plantuml.cucadiagram.Display r18, r21;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r19;
        net.sourceforge.plantuml.graphic.TextBlock $r20, $r24, $r25;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote $r22;
        net.sourceforge.plantuml.style.StyleSignature $r29;
        net.sourceforge.plantuml.style.StyleBuilder $r30;
        net.sourceforge.plantuml.api.ThemeStyle $r31, $r37, $r42;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r32, $r38, $r43;
        net.sourceforge.plantuml.style.PName $r33, $r35, $r40;
        net.sourceforge.plantuml.style.Value $r34, $r36, $r41;
        net.sourceforge.plantuml.style.Style r47;
        net.sourceforge.plantuml.ugraphic.UStroke r51, $r54;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r18 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r21 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r45 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r5 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        r46 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        r7 := @parameter6: net.sourceforge.plantuml.ISkinParam;

        r6 := @parameter7: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter8: net.sourceforge.plantuml.graphic.USymbol;

        d0 := @parameter9: double;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double diffYY2> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double diffYY2> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double roundCorner> = d0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.USymbol type> = r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>(r1, 10.0);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner> = $r4;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label05;

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r30 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r47 = virtualinvoke $r29.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r30);

        $r31 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r48 = virtualinvoke r47.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r31, $r32);

        $r33 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r34 = virtualinvoke r47.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r33);

        $d1 = interfaceinvoke $r34.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double shadowing> = $d1;

        if r5 != null goto label01;

        $r40 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r41 = virtualinvoke r47.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r40);

        $r42 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r43 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r49 = interfaceinvoke $r41.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r42, $r43);

        goto label02;

     label01:
        $r49 = r5;

     label02:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = $r49;

        if r6 != null goto label03;

        $r35 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r36 = virtualinvoke r47.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r35);

        $r37 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r38 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r50 = interfaceinvoke $r36.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r37, $r38);

        goto label04;

     label03:
        $r50 = r6;

     label04:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = $r50;

        r51 = virtualinvoke r47.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label12;

     label05:
        if r5 != null goto label06;

        $r52 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        goto label07;

     label06:
        $r52 = r5;

     label07:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = $r52;

        if r6 != null goto label08;

        $r53 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        goto label09;

     label08:
        $r53 = r6;

     label09:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = $r53;

        $r8 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r9 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PARTITION>;

        $r8[0] = $r9;

        r10 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>(null, 0, $r8);

        $r11 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r12 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PARTITION>;

        $r11[0] = $r12;

        r13 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getFontHtmlColor(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.FontParam[])>(null, $r11);

        $r14 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r15 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getHyperlinkColor()>();

        $z1 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: boolean useUnderlineForHyperlink()>();

        $i0 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: int getTabSize()>();

        specialinvoke $r14.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean,int)>(r10, r13, $r15, $z1, $i0);

        r48 = $r14;

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $z2 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z2 == 0 goto label10;

        $d2 = 3.0;

        goto label11;

     label10:
        $d2 = 0.0;

     label11:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double shadowing> = $d2;

        $r17 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam partitionBorder>;

        r51 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.LineParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r17, null);

     label12:
        if r18 != null goto label13;

        $r25 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock name> = $r25;

        goto label14;

     label13:
        $r19 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r20 = virtualinvoke r18.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r48, $r19, r7);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock name> = $r20;

     label14:
        $z3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>(r21);

        if $z3 == 0 goto label15;

        $r24 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock headerNote> = $r24;

        goto label16;

     label15:
        $r22 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote;

        specialinvoke $r22.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>(r21, r7);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock headerNote> = $r22;

     label16:
        if r51 != null goto label17;

        $r54 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r54.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(2.0);

        goto label18;

     label17:
        $r54 = r51;

     label18:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.UStroke stroke> = $r54;

        return;
    }

    public java.util.Collection getMyChildren()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        java.util.Collection $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Collection getMyChildren()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        return $r2;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }

    private double diffHeightTitle(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock name>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = $d0 + 20.0;

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>(25.0, $d1);

        return $d2;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double suppWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d1 = d0 / 2.0;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double diffHeightTitle(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double headerNoteHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d4 = $d2 + $d3;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d4);

        return $r2;
    }

    private net.sourceforge.plantuml.ugraphic.MinMax getInnerMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.ugraphic.LimitFinder $r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.svek.UGraphicForSnake $r3;
        net.sourceforge.plantuml.graphic.UGraphicInterceptorUDrawable $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r8;
        net.sourceforge.plantuml.ugraphic.MinMax $r9;

        r7 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.ugraphic.LimitFinder;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.LimitFinder: void <init>(net.sourceforge.plantuml.graphic.StringBounder,boolean)>(r1, 0);

        $r3 = new net.sourceforge.plantuml.svek.UGraphicForSnake;

        specialinvoke $r3.<net.sourceforge.plantuml.svek.UGraphicForSnake: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>($r0);

        $r5 = new net.sourceforge.plantuml.graphic.UGraphicInterceptorUDrawable;

        specialinvoke $r5.<net.sourceforge.plantuml.graphic.UGraphicInterceptorUDrawable: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>($r3);

        $r8 = r7.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r5);

        virtualinvoke $r5.<net.sourceforge.plantuml.graphic.UGraphicInterceptorUDrawable: void flushUg()>();

        $r9 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.LimitFinder: net.sourceforge.plantuml.ugraphic.MinMax getMinMax()>();

        return $r9;
    }

    public double suppWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3, $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4, r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry getInnerDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock name>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock headerNote>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 + 20.0;

        $d3 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = $d3 + 20.0;

        $d5 = staticinvoke <net.sourceforge.plantuml.utils.MathUtils: double max(double,double,double)>($d0, $d2, $d4);

        $d6 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d7 = $d5 - $d6;

        return d7;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry getInnerDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r1, $r2, $r4;
        net.sourceforge.plantuml.graphic.StringBounder r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cachedInnerDimension>;

        if $r1 != null goto label1;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry getInnerDimensionSlow(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cachedInnerDimension> = $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry cachedInnerDimension>;

        return $r2;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry getInnerDimensionSlow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, $r5;
        net.sourceforge.plantuml.ugraphic.MinMax r4;
        double $d0, $d1, d2, $d3;
        byte $b0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.MinMax getInnerMinMax(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.MinMax: double getMaxX()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d2 = $d0 - $d1;

        $b0 = d2 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $d3 = d2 + 5.0;

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry addDim(double,double)>($d3, 0.0);

        return $r5;

     label1:
        return r3;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, $r3, $r4;
        double d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry getInnerDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double suppWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d2 = $d1 + d0;

        $d3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double diffHeightTitle(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d5 = $d3 + $d4;

        $d6 = $d5 + 20.0;

        $d7 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double headerNoteHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d8 = $d6 + $d7;

        $d9 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double diffHeightTitle(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d10 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double headerNoteHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d11 = $d9 + $d10;

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 == 0 goto label1;

        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d17 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d18 = d0 / 2.0;

        $d19 = $d17 + $d18;

        $d20 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d21 = $d20 + d11;

        $d22 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d23 = $d22 + d11;

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double,double)>(d2, d8, $d19, $d21, $d23);

        return $r4;

     label1:
        $r3 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d12 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d13 = d0 / 2.0;

        $d14 = $d12 + $d13;

        $d15 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d16 = $d15 + d11;

        specialinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double)>(d2, d8, $d14, $d16);

        return $r3;
    }

    private double headerNoteHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock headerNote>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        return $d0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r26, $r28;
        net.sourceforge.plantuml.graphic.StringBounder r1, $r25;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        net.sourceforge.plantuml.graphic.SymbolContext $r4, $r7, $r9, r10;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UStroke $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r11, $r29;
        net.sourceforge.plantuml.ISkinParam $r12, $r18;
        net.sourceforge.plantuml.AlignmentParam $r13;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r14, $r19;
        net.sourceforge.plantuml.graphic.USymbol $r15;
        net.sourceforge.plantuml.graphic.TextBlock $r16, $r17, $r20, $r21, $r24;
        net.sourceforge.plantuml.awt.geom.Dimension2D r22;
        net.sourceforge.plantuml.ugraphic.UTranslate $r23, $r27;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r6 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r6, $r5);

        $d0 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double shadowing>;

        $r7 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withShadow(double)>($d0);

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $r9 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r8);

        $d1 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double roundCorner>;

        r10 = virtualinvoke $r9.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withCorner(double,double)>($d1, 0.0);

        $r11 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r13 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam packageTitleAlignment>;

        r14 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r13, null, 0, null);

        $r15 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.USymbol type>;

        $r16 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock name>;

        $r17 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getStereotypeAlignment()>();

        $r20 = virtualinvoke $r15.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock,double,double,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r16, r14, $r17, $d2, $d3, r10, $r19);

        interfaceinvoke $r20.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r0);

        $r21 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock headerNote>;

        r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r24 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.graphic.TextBlock headerNote>;

        $r23 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = virtualinvoke r22.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = $d4 - $d5;

        $d7 = $d6 - 10.0;

        $r25 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d8 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: double diffHeightTitle(net.sourceforge.plantuml.graphic.StringBounder)>($r25);

        $d9 = $d8 - 10.0;

        specialinvoke $r23.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, $d9);

        $r26 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r23);

        interfaceinvoke $r24.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r26);

        $r27 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r28 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        $r29 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileGroup: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile inner>;

        interfaceinvoke $r28.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r29);

        return;
    }
}
