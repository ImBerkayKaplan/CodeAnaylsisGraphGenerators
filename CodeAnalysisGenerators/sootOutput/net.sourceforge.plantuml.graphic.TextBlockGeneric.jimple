public class net.sourceforge.plantuml.graphic.TextBlockGeneric extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final net.sourceforge.plantuml.graphic.TextBlock textBlock;
    private final net.sourceforge.plantuml.ugraphic.color.HColor background;
    private final net.sourceforge.plantuml.ugraphic.color.HColor border;

    public void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.TextBlockGeneric r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, r3;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockGeneric;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.TextBlockGeneric: net.sourceforge.plantuml.graphic.TextBlock textBlock> = r1;

        r0.<net.sourceforge.plantuml.graphic.TextBlockGeneric: net.sourceforge.plantuml.ugraphic.color.HColor border> = r2;

        r0.<net.sourceforge.plantuml.graphic.TextBlockGeneric: net.sourceforge.plantuml.ugraphic.color.HColor background> = r3;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlockGeneric r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockGeneric;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockGeneric: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return r3;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.TextBlockGeneric r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r3;
        net.sourceforge.plantuml.ugraphic.UBackground $r2;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        net.sourceforge.plantuml.ugraphic.UStroke $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic $r7, r10, r11, r12;
        net.sourceforge.plantuml.ugraphic.URectangle $r8;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.TextBlock $r9;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockGeneric;

        r10 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.graphic.TextBlockGeneric: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r11 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r3 = r0.<net.sourceforge.plantuml.graphic.TextBlockGeneric: net.sourceforge.plantuml.ugraphic.color.HColor border>;

        r12 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r4 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockGeneric: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        $r6 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double,double,double)>(2.0, 2.0, 1.0);

        $r7 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        $r9 = r0.<net.sourceforge.plantuml.graphic.TextBlockGeneric: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        interfaceinvoke $r9.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r12);

        return;
    }
}
