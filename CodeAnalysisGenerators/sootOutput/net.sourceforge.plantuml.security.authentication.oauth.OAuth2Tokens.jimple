public final enum class net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens ACCESS_TOKEN;
    public static final enum net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens TOKEN_TYPE;
    public static final enum net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens SCOPE;
    public static final enum net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens EXPIRES_IN;
    private final java.lang.String key;
    private static final net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens[] $VALUES;

    public static net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens[] values()
    {
        net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/security/authentication/oauth/OAuth2Tokens;", r0);

        $r2 = (net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: java.lang.String key> = r2;

        return;
    }

    public java.lang.String key()
    {
        net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: java.lang.String key>;

        return $r1;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens $r0, $r1, $r2, $r3, $r5, $r6, $r7, $r8;
        net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens[] $r4;

        $r0 = new net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens;

        specialinvoke $r0.<net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: void <init>(java.lang.String,int,java.lang.String)>("ACCESS_TOKEN", 0, "access_token");

        <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens ACCESS_TOKEN> = $r0;

        $r1 = new net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens;

        specialinvoke $r1.<net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: void <init>(java.lang.String,int,java.lang.String)>("TOKEN_TYPE", 1, "token_type");

        <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens TOKEN_TYPE> = $r1;

        $r2 = new net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens;

        specialinvoke $r2.<net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: void <init>(java.lang.String,int,java.lang.String)>("SCOPE", 2, "scope");

        <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens SCOPE> = $r2;

        $r3 = new net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens;

        specialinvoke $r3.<net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: void <init>(java.lang.String,int,java.lang.String)>("EXPIRES_IN", 3, "expires_in");

        <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens EXPIRES_IN> = $r3;

        $r4 = newarray (net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens)[4];

        $r5 = <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens ACCESS_TOKEN>;

        $r4[0] = $r5;

        $r6 = <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens TOKEN_TYPE>;

        $r4[1] = $r6;

        $r7 = <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens SCOPE>;

        $r4[2] = $r7;

        $r8 = <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens EXPIRES_IN>;

        $r4[3] = $r8;

        <net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens: net.sourceforge.plantuml.security.authentication.oauth.OAuth2Tokens[] $VALUES> = $r4;

        return;
    }
}
