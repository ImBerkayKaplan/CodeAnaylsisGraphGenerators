public class net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory extends net.sourceforge.plantuml.command.PSystemCommandFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.sequencediagram.SequenceDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory r4;

        r4 := @this: net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        specialinvoke $r0.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r0;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.sequencediagram.command.CommandHideUnlinked $r2;
        net.sourceforge.plantuml.sequencediagram.command.CommandActivate $r3;
        net.sourceforge.plantuml.sequencediagram.command.CommandDeactivateShort $r4;
        net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA $r5;
        net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA2 $r6;
        net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA3 $r7;
        net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA4 $r8;
        net.sourceforge.plantuml.sequencediagram.command.CommandParticipantMultilines $r9;
        net.sourceforge.plantuml.sequencediagram.command.CommandArrow $r10;
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft $r11;
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowRight $r12;
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteCommand $r13;
        net.sourceforge.plantuml.command.Command $r15, $r18, $r21, $r29, $r30, $r31, $r32, $r33;
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOverSeveralCommand $r16;
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteAcrossCommand $r19;
        net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart $r22;
        net.sourceforge.plantuml.sequencediagram.command.CommandBoxEnd $r23;
        net.sourceforge.plantuml.sequencediagram.command.CommandGrouping $r24;
        net.sourceforge.plantuml.sequencediagram.command.CommandActivate2 $r25;
        net.sourceforge.plantuml.sequencediagram.command.CommandReturn $r26;
        net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand $r27;
        net.sourceforge.plantuml.sequencediagram.command.CommandNewpage $r34;
        net.sourceforge.plantuml.sequencediagram.command.CommandIgnoreNewpage $r35;
        net.sourceforge.plantuml.sequencediagram.command.CommandAutoNewpage $r36;
        net.sourceforge.plantuml.sequencediagram.command.CommandDivider $r37;
        net.sourceforge.plantuml.sequencediagram.command.CommandHSpace $r38;
        net.sourceforge.plantuml.sequencediagram.command.CommandReferenceOverSeveral $r39;
        net.sourceforge.plantuml.sequencediagram.command.CommandReferenceMultilinesOverSeveral $r40;
        net.sourceforge.plantuml.sequencediagram.command.CommandAutonumber $r41;
        net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberStop $r42;
        net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume $r43;
        net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberIncrement $r44;
        net.sourceforge.plantuml.sequencediagram.command.CommandAutoactivate $r45;
        net.sourceforge.plantuml.sequencediagram.command.CommandFootbox $r46;
        net.sourceforge.plantuml.sequencediagram.command.CommandDelay $r47;
        net.sourceforge.plantuml.sequencediagram.command.CommandFootboxOld $r48;
        net.sourceforge.plantuml.sequencediagram.command.CommandUrl $r49;
        net.sourceforge.plantuml.sequencediagram.command.CommandLinkAnchor $r50;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory r51;

        r51 := @this: net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands1(java.util.List)>($r0);

        $r2 = new net.sourceforge.plantuml.sequencediagram.command.CommandHideUnlinked;

        specialinvoke $r2.<net.sourceforge.plantuml.sequencediagram.command.CommandHideUnlinked: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.sequencediagram.command.CommandActivate;

        specialinvoke $r3.<net.sourceforge.plantuml.sequencediagram.command.CommandActivate: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.sequencediagram.command.CommandDeactivateShort;

        specialinvoke $r4.<net.sourceforge.plantuml.sequencediagram.command.CommandDeactivateShort: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA;

        specialinvoke $r5.<net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA2;

        specialinvoke $r6.<net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA3;

        specialinvoke $r7.<net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA3: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA4;

        specialinvoke $r8.<net.sourceforge.plantuml.sequencediagram.command.CommandParticipantA4: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new net.sourceforge.plantuml.sequencediagram.command.CommandParticipantMultilines;

        specialinvoke $r9.<net.sourceforge.plantuml.sequencediagram.command.CommandParticipantMultilines: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new net.sourceforge.plantuml.sequencediagram.command.CommandArrow;

        specialinvoke $r10.<net.sourceforge.plantuml.sequencediagram.command.CommandArrow: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft;

        specialinvoke $r11.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowRight;

        specialinvoke $r12.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowRight: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = new net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteCommand;

        specialinvoke $r13.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteCommand: void <init>()>();

        $r15 = virtualinvoke $r13.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteCommand: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = new net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOverSeveralCommand;

        specialinvoke $r16.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOverSeveralCommand: void <init>()>();

        $r18 = virtualinvoke $r16.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOverSeveralCommand: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = new net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteAcrossCommand;

        specialinvoke $r19.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteAcrossCommand: void <init>()>();

        $r21 = virtualinvoke $r19.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteAcrossCommand: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r22 = new net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart;

        specialinvoke $r22.<net.sourceforge.plantuml.sequencediagram.command.CommandBoxStart: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r23 = new net.sourceforge.plantuml.sequencediagram.command.CommandBoxEnd;

        specialinvoke $r23.<net.sourceforge.plantuml.sequencediagram.command.CommandBoxEnd: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r23);

        $r24 = new net.sourceforge.plantuml.sequencediagram.command.CommandGrouping;

        specialinvoke $r24.<net.sourceforge.plantuml.sequencediagram.command.CommandGrouping: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r25 = new net.sourceforge.plantuml.sequencediagram.command.CommandActivate2;

        specialinvoke $r25.<net.sourceforge.plantuml.sequencediagram.command.CommandActivate2: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r26 = new net.sourceforge.plantuml.sequencediagram.command.CommandReturn;

        specialinvoke $r26.<net.sourceforge.plantuml.sequencediagram.command.CommandReturn: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r27 = new net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand;

        specialinvoke $r27.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand: void <init>()>();

        $r29 = virtualinvoke $r27.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r29);

        $r30 = virtualinvoke $r13.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteCommand: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r30);

        $r31 = virtualinvoke $r16.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOverSeveralCommand: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r32 = virtualinvoke $r27.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteOnArrowCommand: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r32);

        $r33 = virtualinvoke $r19.<net.sourceforge.plantuml.command.note.sequence.FactorySequenceNoteAcrossCommand: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r33);

        $r34 = new net.sourceforge.plantuml.sequencediagram.command.CommandNewpage;

        specialinvoke $r34.<net.sourceforge.plantuml.sequencediagram.command.CommandNewpage: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = new net.sourceforge.plantuml.sequencediagram.command.CommandIgnoreNewpage;

        specialinvoke $r35.<net.sourceforge.plantuml.sequencediagram.command.CommandIgnoreNewpage: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r35);

        $r36 = new net.sourceforge.plantuml.sequencediagram.command.CommandAutoNewpage;

        specialinvoke $r36.<net.sourceforge.plantuml.sequencediagram.command.CommandAutoNewpage: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r36);

        $r37 = new net.sourceforge.plantuml.sequencediagram.command.CommandDivider;

        specialinvoke $r37.<net.sourceforge.plantuml.sequencediagram.command.CommandDivider: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r37);

        $r38 = new net.sourceforge.plantuml.sequencediagram.command.CommandHSpace;

        specialinvoke $r38.<net.sourceforge.plantuml.sequencediagram.command.CommandHSpace: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r38);

        $r39 = new net.sourceforge.plantuml.sequencediagram.command.CommandReferenceOverSeveral;

        specialinvoke $r39.<net.sourceforge.plantuml.sequencediagram.command.CommandReferenceOverSeveral: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r39);

        $r40 = new net.sourceforge.plantuml.sequencediagram.command.CommandReferenceMultilinesOverSeveral;

        specialinvoke $r40.<net.sourceforge.plantuml.sequencediagram.command.CommandReferenceMultilinesOverSeveral: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r40);

        $r41 = new net.sourceforge.plantuml.sequencediagram.command.CommandAutonumber;

        specialinvoke $r41.<net.sourceforge.plantuml.sequencediagram.command.CommandAutonumber: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r41);

        $r42 = new net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberStop;

        specialinvoke $r42.<net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberStop: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r42);

        $r43 = new net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume;

        specialinvoke $r43.<net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r43);

        $r44 = new net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberIncrement;

        specialinvoke $r44.<net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberIncrement: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r44);

        $r45 = new net.sourceforge.plantuml.sequencediagram.command.CommandAutoactivate;

        specialinvoke $r45.<net.sourceforge.plantuml.sequencediagram.command.CommandAutoactivate: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r45);

        $r46 = new net.sourceforge.plantuml.sequencediagram.command.CommandFootbox;

        specialinvoke $r46.<net.sourceforge.plantuml.sequencediagram.command.CommandFootbox: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r46);

        $r47 = new net.sourceforge.plantuml.sequencediagram.command.CommandDelay;

        specialinvoke $r47.<net.sourceforge.plantuml.sequencediagram.command.CommandDelay: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r47);

        $r48 = new net.sourceforge.plantuml.sequencediagram.command.CommandFootboxOld;

        specialinvoke $r48.<net.sourceforge.plantuml.sequencediagram.command.CommandFootboxOld: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r48);

        $r49 = new net.sourceforge.plantuml.sequencediagram.command.CommandUrl;

        specialinvoke $r49.<net.sourceforge.plantuml.sequencediagram.command.CommandUrl: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r49);

        $r50 = new net.sourceforge.plantuml.sequencediagram.command.CommandLinkAnchor;

        specialinvoke $r50.<net.sourceforge.plantuml.sequencediagram.command.CommandLinkAnchor: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r50);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r4;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.SequenceDiagramFactory: net.sourceforge.plantuml.sequencediagram.SequenceDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }
}
