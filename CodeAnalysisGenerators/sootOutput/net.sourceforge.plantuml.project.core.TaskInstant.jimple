public class net.sourceforge.plantuml.project.core.TaskInstant extends java.lang.Object
{
    private final net.sourceforge.plantuml.project.core.Moment task;
    private final net.sourceforge.plantuml.project.core.TaskAttribute attribute;
    private final int delta;

    public void <init>(net.sourceforge.plantuml.project.core.Moment, net.sourceforge.plantuml.project.core.TaskAttribute)
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0;
        net.sourceforge.plantuml.project.core.Moment r1;
        net.sourceforge.plantuml.project.core.TaskAttribute r2;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        r1 := @parameter0: net.sourceforge.plantuml.project.core.Moment;

        r2 := @parameter1: net.sourceforge.plantuml.project.core.TaskAttribute;

        specialinvoke r0.<net.sourceforge.plantuml.project.core.TaskInstant: void <init>(net.sourceforge.plantuml.project.core.Moment,net.sourceforge.plantuml.project.core.TaskAttribute,int)>(r1, r2, 0);

        return;
    }

    private void <init>(net.sourceforge.plantuml.project.core.Moment, net.sourceforge.plantuml.project.core.TaskAttribute, int)
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0;
        net.sourceforge.plantuml.project.core.Moment r1;
        net.sourceforge.plantuml.project.core.TaskAttribute r2, $r3, $r4;
        int i0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        r1 := @parameter0: net.sourceforge.plantuml.project.core.Moment;

        r2 := @parameter1: net.sourceforge.plantuml.project.core.TaskAttribute;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task> = r1;

        r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute attribute> = r2;

        r0.<net.sourceforge.plantuml.project.core.TaskInstant: int delta> = i0;

        $r3 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if r2 == $r3 goto label1;

        $r4 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        if r2 == $r4 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        return;
    }

    public net.sourceforge.plantuml.project.core.TaskInstant withDelta(int)
    {
        net.sourceforge.plantuml.project.core.TaskInstant $r0, r1;
        int i0;
        net.sourceforge.plantuml.project.core.TaskAttribute $r2;
        net.sourceforge.plantuml.project.core.Moment $r3;

        r1 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        i0 := @parameter0: int;

        $r0 = new net.sourceforge.plantuml.project.core.TaskInstant;

        $r3 = r1.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task>;

        $r2 = r1.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute attribute>;

        specialinvoke $r0.<net.sourceforge.plantuml.project.core.TaskInstant: void <init>(net.sourceforge.plantuml.project.core.Moment,net.sourceforge.plantuml.project.core.TaskAttribute,int)>($r3, $r2, i0);

        return $r0;
    }

    private net.sourceforge.plantuml.project.time.Day manageDelta(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        net.sourceforge.plantuml.project.time.Day r1;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $i0 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: int delta>;

        if $i0 <= 0 goto label2;

        i5 = 0;

     label1:
        $i4 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: int delta>;

        if i5 >= $i4 goto label2;

        r1 = virtualinvoke r1.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        i5 = i5 + 1;

        goto label1;

     label2:
        $i1 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: int delta>;

        if $i1 >= 0 goto label4;

        i6 = 0;

     label3:
        $i2 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: int delta>;

        $i3 = neg $i2;

        if i6 >= $i3 goto label4;

        r1 = virtualinvoke r1.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day decrement()>();

        i6 = i6 + 1;

        goto label3;

     label4:
        return r1;
    }

    public net.sourceforge.plantuml.project.time.Day getInstantPrecise()
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0;
        net.sourceforge.plantuml.project.core.TaskAttribute $r1, $r2, $r3, $r4;
        java.lang.IllegalStateException $r5;
        net.sourceforge.plantuml.project.core.Moment $r6, $r10;
        net.sourceforge.plantuml.project.time.Day $r7, $r8, $r9, $r11, $r12;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        $r2 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute attribute>;

        $r1 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if $r2 != $r1 goto label1;

        $r10 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task>;

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.project.core.Moment: net.sourceforge.plantuml.project.time.Day getStart()>();

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.time.Day manageDelta(net.sourceforge.plantuml.project.time.Day)>($r11);

        return $r12;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute attribute>;

        $r3 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        if $r4 != $r3 goto label2;

        $r6 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.project.core.Moment: net.sourceforge.plantuml.project.time.Day getEnd()>();

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.time.Day manageDelta(net.sourceforge.plantuml.project.time.Day)>($r8);

        return $r9;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;
    }

    public net.sourceforge.plantuml.project.time.Day getInstantTheorical()
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0;
        net.sourceforge.plantuml.project.core.TaskAttribute $r1, $r2, $r3, $r4;
        java.lang.IllegalStateException $r5;
        net.sourceforge.plantuml.project.core.Moment $r6, $r9;
        net.sourceforge.plantuml.project.time.Day $r7, $r8, $r10, $r11;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        $r2 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute attribute>;

        $r1 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if $r2 != $r1 goto label1;

        $r9 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.project.core.Moment: net.sourceforge.plantuml.project.time.Day getStart()>();

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.time.Day manageDelta(net.sourceforge.plantuml.project.time.Day)>($r10);

        return $r11;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute attribute>;

        $r3 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        if $r4 != $r3 goto label2;

        $r6 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.project.core.Moment: net.sourceforge.plantuml.project.time.Day getEnd()>();

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.time.Day manageDelta(net.sourceforge.plantuml.project.time.Day)>($r7);

        return $r8;

     label2:
        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r7;
        net.sourceforge.plantuml.project.core.TaskInstant r1;
        net.sourceforge.plantuml.project.core.TaskAttribute $r2;
        java.lang.String $r3, $r8;
        net.sourceforge.plantuml.project.core.Moment $r6;

        r1 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute attribute>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.project.core.TaskAttribute: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of ");

        $r6 = r1.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public final net.sourceforge.plantuml.project.core.Moment getMoment()
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0;
        net.sourceforge.plantuml.project.core.Moment $r1;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        $r1 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task>;

        return $r1;
    }

    public final boolean isTask()
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0;
        net.sourceforge.plantuml.project.core.Moment $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        $r1 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment task>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.project.core.AbstractTask;

        return $z0;
    }

    public final net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0;
        net.sourceforge.plantuml.project.core.TaskAttribute $r1;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        $r1 = r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute attribute>;

        return $r1;
    }

    public boolean sameRowAs(net.sourceforge.plantuml.project.core.TaskInstant)
    {
        net.sourceforge.plantuml.project.core.TaskInstant r0, r1;
        boolean $z0, $z1;
        net.sourceforge.plantuml.project.core.Moment $r2, $r4;
        net.sourceforge.plantuml.project.core.AbstractTask r3, r5;
        net.sourceforge.plantuml.project.core.Task $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.project.core.TaskInstant;

        r1 := @parameter0: net.sourceforge.plantuml.project.core.TaskInstant;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.project.core.TaskInstant: boolean isTask()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r1.<net.sourceforge.plantuml.project.core.TaskInstant: boolean isTask()>();

        if $z1 == 0 goto label2;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment getMoment()>();

        r3 = (net.sourceforge.plantuml.project.core.AbstractTask) $r2;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment getMoment()>();

        r5 = (net.sourceforge.plantuml.project.core.AbstractTask) $r4;

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.project.core.AbstractTask: net.sourceforge.plantuml.project.core.Task getRow()>();

        if r3 == $r6 goto label1;

        $r7 = virtualinvoke r3.<net.sourceforge.plantuml.project.core.AbstractTask: net.sourceforge.plantuml.project.core.Task getRow()>();

        if r5 != $r7 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }
}
