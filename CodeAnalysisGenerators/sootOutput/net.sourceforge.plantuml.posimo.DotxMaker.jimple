public class net.sourceforge.plantuml.posimo.DotxMaker extends java.lang.Object
{
    private final net.sourceforge.plantuml.posimo.Cluster root;
    private final java.util.Collection paths;

    public void <init>(net.sourceforge.plantuml.posimo.Cluster, java.util.Collection)
    {
        net.sourceforge.plantuml.posimo.DotxMaker r0;
        net.sourceforge.plantuml.posimo.Cluster r1;
        java.util.Collection r2;

        r0 := @this: net.sourceforge.plantuml.posimo.DotxMaker;

        r1 := @parameter0: net.sourceforge.plantuml.posimo.Cluster;

        r2 := @parameter1: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.posimo.DotxMaker: net.sourceforge.plantuml.posimo.Cluster root> = r1;

        r0.<net.sourceforge.plantuml.posimo.DotxMaker: java.util.Collection paths> = r2;

        return;
    }

    public transient java.lang.String createDotString(java.lang.String[])
    {
        java.lang.StringBuilder $r0, $r11, $r13, $r14;
        java.lang.String[] r3;
        net.sourceforge.plantuml.posimo.DotxMaker r5;
        net.sourceforge.plantuml.posimo.Cluster $r6;
        java.util.Collection $r7;
        boolean $z0;
        java.lang.String $r9, $r12, $r15, r17;
        java.lang.Object $r10;
        int i0, i1;
        java.util.Iterator r20;
        net.sourceforge.plantuml.posimo.Path r21;

        r5 := @this: net.sourceforge.plantuml.posimo.DotxMaker;

        r3 := @parameter0: java.lang.String[];

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("digraph unix {");

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r17 = r3[i1];

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        i1 = i1 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("compound=true;");

        $r6 = r5.<net.sourceforge.plantuml.posimo.DotxMaker: net.sourceforge.plantuml.posimo.Cluster root>;

        specialinvoke r5.<net.sourceforge.plantuml.posimo.DotxMaker: void printCluster(java.lang.StringBuilder,net.sourceforge.plantuml.posimo.Cluster)>($r0, $r6);

        $r7 = r5.<net.sourceforge.plantuml.posimo.DotxMaker: java.util.Collection paths>;

        r20 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r10 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (net.sourceforge.plantuml.posimo.Path) $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = specialinvoke r5.<net.sourceforge.plantuml.posimo.DotxMaker: java.lang.String getPathString(net.sourceforge.plantuml.posimo.Path)>(r21);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label3;

     label4:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private void printCluster(java.lang.StringBuilder, net.sourceforge.plantuml.posimo.Cluster)
    {
        net.sourceforge.plantuml.posimo.Cluster r0, r35;
        java.util.Collection $r1, $r2, $r3, $r31;
        int $i0, $i1, $i2, $i5;
        boolean $z0, $z1;
        java.lang.Object $r4, $r15;
        java.lang.StringBuilder r5, $r6, $r7, $r8, $r11, $r12, $r16, $r17, $r18, $r19, $r23, $r24, $r25, $r26, $r27, $r28;
        net.sourceforge.plantuml.posimo.DotxMaker r9;
        java.lang.String $r10, $r13, $r20, $r29, $r33;
        double $d0, $d1, $d2, $d3;
        byte $b3, $b4;
        java.lang.IllegalStateException $r32;
        java.util.Iterator r34, r36;
        net.sourceforge.plantuml.posimo.Block r37;

        r9 := @this: net.sourceforge.plantuml.posimo.DotxMaker;

        r5 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: net.sourceforge.plantuml.posimo.Cluster;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection getContents()>();

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 != 0 goto label1;

        $r31 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection getSubClusters()>();

        $i5 = interfaceinvoke $r31.<java.util.Collection: int size()>();

        if $i5 != 0 goto label1;

        $r32 = new java.lang.IllegalStateException;

        $r33 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r33);

        throw $r32;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection getSubClusters()>();

        r34 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r15 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (net.sourceforge.plantuml.posimo.Cluster) $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("subgraph cluster");

        $i2 = virtualinvoke r35.<net.sourceforge.plantuml.posimo.Cluster: int getUid()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $d0 = virtualinvoke r35.<net.sourceforge.plantuml.posimo.Cluster: double getTitleWidth()>();

        $b3 = $d0 cmpl 0.0;

        if $b3 <= 0 goto label3;

        $d1 = virtualinvoke r35.<net.sourceforge.plantuml.posimo.Cluster: double getTitleHeight()>();

        $b4 = $d1 cmpl 0.0;

        if $b4 <= 0 goto label3;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("label=<<TABLE FIXEDSIZE=\"TRUE\" WIDTH=\"");

        $d2 = virtualinvoke r35.<net.sourceforge.plantuml.posimo.Cluster: double getTitleWidth()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" HEIGHT=\"");

        $d3 = virtualinvoke r35.<net.sourceforge.plantuml.posimo.Cluster: double getTitleHeight()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"><TR><TD></TD></TR></TABLE>>");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

     label3:
        specialinvoke r9.<net.sourceforge.plantuml.posimo.DotxMaker: void printCluster(java.lang.StringBuilder,net.sourceforge.plantuml.posimo.Cluster)>(r5, r35);

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        goto label2;

     label4:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Cluster: java.util.Collection getContents()>();

        r36 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (net.sourceforge.plantuml.posimo.Block) $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $i1 = virtualinvoke r37.<net.sourceforge.plantuml.posimo.Block: int getUid()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = specialinvoke r9.<net.sourceforge.plantuml.posimo.DotxMaker: java.lang.String getNodeAttibute(net.sourceforge.plantuml.posimo.Block)>(r37);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        goto label5;

     label6:
        return;
    }

    private java.lang.String getPathString(net.sourceforge.plantuml.posimo.Path)
    {
        net.sourceforge.plantuml.posimo.Path r0;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r9, $r15, $r16, $r17, $r18, $r19, $r20, $r27, $r28, $r30, $r31, $r33, $r34, $r38, $r39, $r40;
        net.sourceforge.plantuml.posimo.Block $r5, $r8, $r23, $r25, $r29, $r32;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;
        java.lang.String $r10, $r21, $r35, $r41, $r45;
        net.sourceforge.plantuml.posimo.Label $r13, $r14;
        double $d0, $d1;
        net.sourceforge.plantuml.posimo.Cluster $r24, $r26;
        net.sourceforge.plantuml.posimo.DotxMaker r43;
        net.sourceforge.plantuml.awt.geom.Dimension2D r44;
        boolean $z0;

        r43 := @this: net.sourceforge.plantuml.posimo.DotxMaker;

        r0 := @parameter0: net.sourceforge.plantuml.posimo.Path;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = new java.lang.StringBuilder;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("b");

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block getStart()>();

        $i0 = virtualinvoke $r5.<net.sourceforge.plantuml.posimo.Block: int getUid()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> b");

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block getEnd()>();

        $i1 = virtualinvoke $r8.<net.sourceforge.plantuml.posimo.Block: int getUid()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>($r10);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [dir=none, arrowhead=none, headclip=true, tailclip=true");

        i2 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: int getLength()>();

        if i2 < 3 goto label1;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",minlen=");

        $i6 = i2 - 1;

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

     label1:
        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Label getLabel()>();

        if $r13 != null goto label2;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        goto label3;

     label2:
        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Label getLabel()>();

        r44 = virtualinvoke $r14.<net.sourceforge.plantuml.posimo.Label: net.sourceforge.plantuml.awt.geom.Dimension2D getSize()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", label=<<TABLE FIXEDSIZE=\"TRUE\" WIDTH=\"");

        $d0 = virtualinvoke r44.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" HEIGHT=\"");

        $d1 = virtualinvoke r44.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"><TR><TD></TD></TR></TABLE>>]");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label3:
        $i3 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: int getLength()>();

        if $i3 > 1 goto label7;

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block getStart()>();

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.posimo.Block: net.sourceforge.plantuml.posimo.Cluster getParent()>();

        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block getEnd()>();

        $r26 = virtualinvoke $r25.<net.sourceforge.plantuml.posimo.Block: net.sourceforge.plantuml.posimo.Cluster getParent()>();

        if $r24 != $r26 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        if $z0 == 0 goto label6;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{rank=same; b");

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block getStart()>();

        $i4 = virtualinvoke $r29.<net.sourceforge.plantuml.posimo.Block: int getUid()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; b");

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block getEnd()>();

        $i5 = virtualinvoke $r32.<net.sourceforge.plantuml.posimo.Block: int getUid()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        goto label7;

     label6:
        staticinvoke <net.sourceforge.plantuml.Log: void println(java.lang.Object)>("!!!!!!!!!!!!!!!!!TURNING ARROUND DOT BUG!!!!!!!!!!!!!!!!!!");

     label7:
        $r45 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r45;
    }

    private java.lang.String getNodeAttibute(net.sourceforge.plantuml.posimo.Block)
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r8, $r9, $r12, $r13, $r15, $r16;
        net.sourceforge.plantuml.posimo.Block r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r7, $r14;
        double $d0, $d1, $d2, $d3;
        java.lang.String $r10, $r17, $r21;
        net.sourceforge.plantuml.posimo.DotxMaker r22;

        r22 := @this: net.sourceforge.plantuml.posimo.DotxMaker;

        r6 := @parameter0: net.sourceforge.plantuml.posimo.Block;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("[");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("label=\"\",");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("fixedsize=true,");

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=");

        $r7 = virtualinvoke r6.<net.sourceforge.plantuml.posimo.Block: net.sourceforge.plantuml.awt.geom.Dimension2D getSize()>();

        $d0 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 / 72.0;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height=");

        $r14 = virtualinvoke r6.<net.sourceforge.plantuml.posimo.Block: net.sourceforge.plantuml.awt.geom.Dimension2D getSize()>();

        $d2 = virtualinvoke $r14.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d3 = $d2 / 72.0;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shape=rect");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }
}
