public class net.sourceforge.plantuml.command.regex.FoxSignature extends java.lang.Object
{
    private static final long[] masks;

    public void <init>()
    {
        net.sourceforge.plantuml.command.regex.FoxSignature r0;

        r0 := @this: net.sourceforge.plantuml.command.regex.FoxSignature;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void printMe()
    {
        long[] $r0, $r1, $r7;
        int $i0, i5;
        long $l1, $l4;
        byte $b2;
        char c3;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r8;
        java.io.PrintStream $r3;
        java.lang.String $r9;

        i5 = 0;

     label1:
        $r0 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $i0 = lengthof $r0;

        if i5 >= $i0 goto label3;

        $r1 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $l1 = $r1[i5];

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label2;

        c3 = (char) i5;

        $r3 = <java.lang.System: java.io.PrintStream err>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ch=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $l4 = $r7[i5];

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r9);

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    private static long getMask(char)
    {
        char c0;
        long[] $r0, $r1;
        int $i1;
        long $l2;

        c0 := @parameter0: char;

        $r0 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $i1 = lengthof $r0;

        if c0 >= $i1 goto label1;

        $r1 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $l2 = $r1[c0];

        return $l2;

     label1:
        return 0L;
    }

    public static long getFoxSignature(java.lang.String)
    {
        java.lang.String r0;
        int $i0, i4;
        char $c1;
        long $l2, l3;

        r0 := @parameter0: java.lang.String;

        l3 = 0L;

        i4 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $l2 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getMask(char)>($c1);

        l3 = l3 | $l2;

        i4 = i4 + 1;

        goto label1;

     label2:
        return l3;
    }

    public static java.lang.String backToString(long)
    {
        java.lang.StringBuilder $r0;
        long[] $r2, $r4, $r5;
        int $i0, i8;
        java.lang.String $r3;
        long $l1, l3, $l4, $l5;
        byte $b2, $b6;
        char c7;

        l3 := @parameter0: long;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i8 = 0;

     label1:
        $r2 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $i0 = lengthof $r2;

        if i8 >= $i0 goto label3;

        $r4 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $l1 = $r4[i8];

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label2;

        $r5 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $l4 = $r5[i8];

        $l5 = l3 & $l4;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        c7 = (char) i8;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

     label2:
        i8 = i8 + 1;

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static void <clinit>()
    {
        long[] $r0, $r4, $r5;
        java.lang.String $r2, $r3;
        int $i0, $i1, i3;
        long l2;
        char c4, c5;

        $r0 = newarray (long)[127];

        <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks> = $r0;

        l2 = 1L;

        i3 = 0;

     label1:
        $r2 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0!\"#$%&\'()*+,-./:;<=>?@[\\]^_{|}~";

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if i3 >= $i0 goto label3;

        $r3 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0!\"#$%&\'()*+,-./:;<=>?@[\\]^_{|}~";

        c4 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i3);

        $r4 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $r4[c4] = l2;

        if c4 < 65 goto label2;

        if c4 > 90 goto label2;

        $i1 = c4 + 32;

        c5 = (char) $i1;

        $r5 = <net.sourceforge.plantuml.command.regex.FoxSignature: long[] masks>;

        $r5[c5] = l2;

     label2:
        l2 = l2 << 1;

        i3 = i3 + 1;

        goto label1;

     label3:
        return;
    }
}
