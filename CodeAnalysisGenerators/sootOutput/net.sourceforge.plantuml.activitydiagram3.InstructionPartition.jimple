public class net.sourceforge.plantuml.activitydiagram3.InstructionPartition extends net.sourceforge.plantuml.activitydiagram3.AbstractInstruction implements net.sourceforge.plantuml.activitydiagram3.Instruction
{
    private final net.sourceforge.plantuml.activitydiagram3.InstructionList list;
    private final net.sourceforge.plantuml.activitydiagram3.Instruction parent;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.Instruction, java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        net.sourceforge.plantuml.activitydiagram3.Instruction r2;
        java.lang.String r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.AbstractInstruction: void <init>()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionList;

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list> = $r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.Instruction parent> = r2;

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.Instruction getParent()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        return $r1;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)>(r1);

        return $r3;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction r1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>(r1);

        return $r3;
    }

    public boolean kill()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean kill()>();

        return $z0;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        return $r2;
    }

    public boolean addNote(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.sequencediagram.NoteType, net.sourceforge.plantuml.graphic.color.Colors, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.sequencediagram.NotePosition r3;
        net.sourceforge.plantuml.sequencediagram.NoteType r4;
        net.sourceforge.plantuml.graphic.color.Colors r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r6;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r4 := @parameter2: net.sourceforge.plantuml.sequencediagram.NoteType;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        r6 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean containsBreak()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionPartition: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean containsBreak()>();

        return $z0;
    }

    public volatile net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createGtile(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionPartition r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionPartition;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.AbstractInstruction: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createGtile(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        return $r3;
    }
}
