public class net.sourceforge.plantuml.dedication.Dedications extends java.lang.Object
{
    private static final java.util.List all;

    private static net.sourceforge.plantuml.dedication.DedicationCrypted secret(int, java.lang.String, java.math.BigInteger) throws java.io.IOException
    {
        net.sourceforge.plantuml.dedication.DedicationCrypted $r0;
        java.lang.String r1;
        byte[] $r2;
        int i0;
        java.math.BigInteger r3;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.math.BigInteger;

        $r0 = new net.sourceforge.plantuml.dedication.DedicationCrypted;

        $r2 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: byte[] load(java.lang.String)>(r1);

        specialinvoke $r0.<net.sourceforge.plantuml.dedication.DedicationCrypted: void <init>(byte[],int,java.lang.String,java.math.BigInteger)>($r2, i0, r1, r3);

        return $r0;
    }

    private static byte[] load(java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.Class $r1;
        java.lang.String r2, $r5;
        java.io.InputStream r6;
        java.io.ByteArrayOutputStream $r7;
        byte[] $r9;

        r2 := @parameter0: java.lang.String;

        $r1 = class "Lnet/sourceforge/plantuml/dedication/PSystemDedication;";

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".png");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke $r1.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r5);

        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <net.sourceforge.plantuml.FileUtils: void copyInternal(java.io.InputStream,java.io.OutputStream,boolean)>(r6, $r7, 1);

        $r9 = virtualinvoke $r7.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r9;
    }

    private void <init>()
    {
        net.sourceforge.plantuml.dedication.Dedications r0;

        r0 := @this: net.sourceforge.plantuml.dedication.Dedications;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized java.awt.image.BufferedImage get(java.lang.String)
    {
        net.sourceforge.plantuml.dedication.TinyHashableString $r0;
        java.lang.String r1;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.dedication.Dedication r6;
        java.awt.image.BufferedImage r7;

        r1 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.dedication.TinyHashableString;

        specialinvoke $r0.<net.sourceforge.plantuml.dedication.TinyHashableString: void <init>(java.lang.String)>(r1);

        $r3 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.dedication.Dedication) $r5;

        r7 = interfaceinvoke r6.<net.sourceforge.plantuml.dedication.Dedication: java.awt.image.BufferedImage getImage(net.sourceforge.plantuml.dedication.TinyHashableString)>($r0);

        if r7 == null goto label2;

        return r7;

     label2:
        goto label1;

     label3:
        return null;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.dedication.DedicationSimple $r1, $r4, $r7, $r10, $r13, $r16;
        java.util.List $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23;
        byte[] $r3, $r6, $r9, $r12, $r15, $r18;
        java.math.BigInteger $r19, $r22;
        net.sourceforge.plantuml.dedication.DedicationCrypted $r21, $r24;
        java.lang.Throwable $r25;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <net.sourceforge.plantuml.dedication.Dedications: java.util.List all> = $r0;

     label1:
        $r2 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        $r1 = new net.sourceforge.plantuml.dedication.DedicationSimple;

        $r3 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: byte[] load(java.lang.String)>("dedication");

        specialinvoke $r1.<net.sourceforge.plantuml.dedication.DedicationSimple: void <init>(byte[],java.lang.String)>($r3, "Write your own dedication!");

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r5 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        $r4 = new net.sourceforge.plantuml.dedication.DedicationSimple;

        $r6 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: byte[] load(java.lang.String)>("linux_china");

        specialinvoke $r4.<net.sourceforge.plantuml.dedication.DedicationSimple: void <init>(byte[],java.lang.String)>($r6, "linux_china");

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r8 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        $r7 = new net.sourceforge.plantuml.dedication.DedicationSimple;

        $r9 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: byte[] load(java.lang.String)>("arkban");

        specialinvoke $r7.<net.sourceforge.plantuml.dedication.DedicationSimple: void <init>(byte[],java.lang.String)>($r9, "arkban");

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r11 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        $r10 = new net.sourceforge.plantuml.dedication.DedicationSimple;

        $r12 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: byte[] load(java.lang.String)>("boundaries");

        specialinvoke $r10.<net.sourceforge.plantuml.dedication.DedicationSimple: void <init>(byte[],java.lang.String)>($r12, "Boundaries allow discipline to create true strength");

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r14 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        $r13 = new net.sourceforge.plantuml.dedication.DedicationSimple;

        $r15 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: byte[] load(java.lang.String)>("dr_chet");

        specialinvoke $r13.<net.sourceforge.plantuml.dedication.DedicationSimple: void <init>(byte[],java.lang.String)>($r15, "Thank you, Dr. Chet. I wouldn\'t be where I am without you");

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r17 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        $r16 = new net.sourceforge.plantuml.dedication.DedicationSimple;

        $r18 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: byte[] load(java.lang.String)>("ben");

        specialinvoke $r16.<net.sourceforge.plantuml.dedication.DedicationSimple: void <init>(byte[],java.lang.String)>($r18, "Ben and Jen 2020");

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r20 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        $r19 = new java.math.BigInteger;

        specialinvoke $r19.<java.math.BigInteger: void <init>(java.lang.String)>("1182423723677118831606503500858825217076578422970565964857326298418401529955036896808663335300684244453386039908536275400945824932191521017102701344437753036730900076162922741167523337650578479960119614237031234925702200473053235777");

        $r21 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: net.sourceforge.plantuml.dedication.DedicationCrypted secret(int,java.lang.String,java.math.BigInteger)>(5, "835ff5d643b58cd35a20db6480071d05751aa6a0e01da78662ceafd0161f3f5e", $r19);

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r23 = <net.sourceforge.plantuml.dedication.Dedications: java.util.List all>;

        $r22 = new java.math.BigInteger;

        specialinvoke $r22.<java.math.BigInteger: void <init>(java.lang.String)>("538955952645999836068094511687012232127213955837942782605199622268460518023083462090291844640318324475656060087513198129259364840841077651829017347845508167869708224054456044836844382437974410757740941102771969965334031780041648873");

        $r24 = staticinvoke <net.sourceforge.plantuml.dedication.Dedications: net.sourceforge.plantuml.dedication.DedicationCrypted secret(int,java.lang.String,java.math.BigInteger)>(3, "514816d583044efbd336882227deb822194ff63e3bdc3cf707a01f17770d5a6a", $r22);

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r24);

     label2:
        goto label4;

     label3:
        $r25 := @caughtexception;

        virtualinvoke $r25.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
