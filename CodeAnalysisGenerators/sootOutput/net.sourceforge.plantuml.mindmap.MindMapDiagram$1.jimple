class net.sourceforge.plantuml.mindmap.MindMapDiagram$1 extends java.lang.Object implements net.sourceforge.plantuml.svek.TextBlockBackcolored
{
    final net.sourceforge.plantuml.mindmap.MindMapDiagram this$0;

    void <init>(net.sourceforge.plantuml.mindmap.MindMapDiagram)
    {
        net.sourceforge.plantuml.mindmap.MindMapDiagram$1 r0;
        net.sourceforge.plantuml.mindmap.MindMapDiagram r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagram$1;

        r1 := @parameter0: net.sourceforge.plantuml.mindmap.MindMapDiagram;

        r0.<net.sourceforge.plantuml.mindmap.MindMapDiagram$1: net.sourceforge.plantuml.mindmap.MindMapDiagram this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.mindmap.MindMapDiagram$1 r0;
        net.sourceforge.plantuml.mindmap.MindMapDiagram $r1;
        java.util.List $r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r4;
        net.sourceforge.plantuml.mindmap.MindMap r5;
        net.sourceforge.plantuml.graphic.StringBounder $r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;
        double $d0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        net.sourceforge.plantuml.ugraphic.UGraphic r9;

        r0 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagram$1;

        r9 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.MindMapDiagram$1: net.sourceforge.plantuml.mindmap.MindMapDiagram this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.mindmap.MindMapDiagram: java.util.List access$000(net.sourceforge.plantuml.mindmap.MindMapDiagram)>($r1);

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.mindmap.MindMap) $r4;

        virtualinvoke r5.<net.sourceforge.plantuml.mindmap.MindMap: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r9);

        $r6 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r7 = virtualinvoke r5.<net.sourceforge.plantuml.mindmap.MindMap: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r6);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        r9 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        goto label1;

     label2:
        return;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.mindmap.MindMapDiagram$1 r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.InnerStrategy r3;

        r0 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagram$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        return null;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.mindmap.MindMapDiagram$1 r0;
        net.sourceforge.plantuml.mindmap.MindMapDiagram $r1;
        java.util.List $r2;
        java.util.Iterator r3;
        boolean $z0;
        net.sourceforge.plantuml.Dimension2DDouble $r4;
        java.lang.Object $r5;
        net.sourceforge.plantuml.mindmap.MindMap r6;
        net.sourceforge.plantuml.graphic.StringBounder r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r8;
        double $d0, $d1, d2, d3;

        r0 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagram$1;

        r7 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 = 0.0;

        d3 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.MindMapDiagram$1: net.sourceforge.plantuml.mindmap.MindMapDiagram this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.mindmap.MindMapDiagram: java.util.List access$000(net.sourceforge.plantuml.mindmap.MindMapDiagram)>($r1);

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.mindmap.MindMap) $r5;

        r8 = virtualinvoke r6.<net.sourceforge.plantuml.mindmap.MindMap: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        $d0 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d3 = d3 + $d0;

        $d1 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = staticinvoke <java.lang.Math: double max(double,double)>(d2, $d1);

        goto label1;

     label2:
        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d2, d3);

        return $r4;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.mindmap.MindMapDiagram$1 r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagram$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()
    {
        net.sourceforge.plantuml.mindmap.MindMapDiagram$1 r0;

        r0 := @this: net.sourceforge.plantuml.mindmap.MindMapDiagram$1;

        return null;
    }
}
