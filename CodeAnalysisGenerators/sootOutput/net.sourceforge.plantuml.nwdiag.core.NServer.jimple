public class net.sourceforge.plantuml.nwdiag.core.NServer extends java.lang.Object
{
    private final java.util.Map connections;
    private net.sourceforge.plantuml.graphic.USymbol shape;
    private final java.lang.String name;
    private java.lang.String description;
    private final net.sourceforge.plantuml.nwdiag.next.NBar bar;
    private boolean printFirstLink;

    public void doNotPrintFirstLink()
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r0.<net.sourceforge.plantuml.nwdiag.core.NServer: boolean printFirstLink> = 0;

        return;
    }

    public final boolean printFirstLink()
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        $z0 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: boolean printFirstLink>;

        return $z0;
    }

    public net.sourceforge.plantuml.nwdiag.core.Network getMainNetworkNext()
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.nwdiag.core.Network $r5;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.util.Map connections>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (net.sourceforge.plantuml.nwdiag.core.Network) $r4;

        return $r5;
    }

    public java.lang.String getAdress(net.sourceforge.plantuml.nwdiag.core.Network)
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        net.sourceforge.plantuml.nwdiag.core.Network r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.core.Network;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.util.Map connections>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.String) $r3;

        return $r4;
    }

    private net.sourceforge.plantuml.graphic.TextBlock toTextBlock(java.lang.String, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.style.SName)
    {
        int $i0;
        net.sourceforge.plantuml.cucadiagram.Display $r0;
        net.sourceforge.plantuml.nwdiag.core.NServer r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.style.SName r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6, $r7;
        java.lang.String r8, r9;

        r1 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r8 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.style.SName;

        if r8 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r8.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r7 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        return $r7;

     label2:
        r9 = virtualinvoke r8.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(", ", "\\n");

        $r0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r9);

        $r4 = specialinvoke r1.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.SName)>(r2, r3);

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r4, $r5, r2);

        return $r6;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleDefinition(net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.nwdiag.core.NServer r6;

        r6 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r4 := @parameter0: net.sourceforge.plantuml.style.SName;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName nwdiagDiagram>;

        $r0[2] = $r3;

        $r0[3] = r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.ISkinParam r0;
        net.sourceforge.plantuml.style.StyleBuilder r1;
        net.sourceforge.plantuml.nwdiag.core.NServer r2;
        net.sourceforge.plantuml.style.SName r3;
        net.sourceforge.plantuml.style.StyleSignature $r4;
        net.sourceforge.plantuml.style.Style r5;
        net.sourceforge.plantuml.api.ThemeStyle $r6;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r7;
        net.sourceforge.plantuml.graphic.FontConfiguration $r8;

        r2 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r0 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter1: net.sourceforge.plantuml.style.SName;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.style.StyleSignature getStyleDefinition(net.sourceforge.plantuml.style.SName)>(r3);

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r1);

        $r6 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r7 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r8 = virtualinvoke r5.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r6, $r7);

        return $r8;
    }

    public net.sourceforge.plantuml.nwdiag.next.LinkedElement getLinkedElement(double, java.util.Map, java.util.List, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.ISkinParam r0;
        net.sourceforge.plantuml.style.StyleBuilder r1;
        net.sourceforge.plantuml.nwdiag.core.NServer r2;
        net.sourceforge.plantuml.style.SName $r3, $r14, $r25;
        net.sourceforge.plantuml.style.StyleSignature $r4;
        net.sourceforge.plantuml.style.Style $r5;
        net.sourceforge.plantuml.api.ThemeStyle $r6;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r7;
        net.sourceforge.plantuml.graphic.SymbolContext r8;
        java.util.LinkedHashMap $r9;
        java.util.Map r11;
        java.util.Set $r12;
        boolean $z0;
        java.lang.String $r13, $r26;
        net.sourceforge.plantuml.graphic.USymbol $r15;
        net.sourceforge.plantuml.graphic.TextBlock $r16, $r17, $r27, r31, r32;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r18;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement $r19;
        double d0;
        java.util.List r20;
        java.lang.Object $r21, $r22, $r24;
        net.sourceforge.plantuml.nwdiag.core.Network $r23;
        java.util.Iterator r29;
        java.util.Map$Entry r30;

        r2 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        d0 := @parameter0: double;

        r11 := @parameter1: java.util.Map;

        r20 := @parameter2: java.util.List;

        r0 := @parameter3: net.sourceforge.plantuml.ISkinParam;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName server>;

        $r4 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.style.StyleSignature getStyleDefinition(net.sourceforge.plantuml.style.SName)>($r3);

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r1);

        $r6 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r7 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r8 = virtualinvoke $r5.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r6, $r7);

        $r9 = new java.util.LinkedHashMap;

        specialinvoke $r9.<java.util.LinkedHashMap: void <init>()>();

        $r12 = interfaceinvoke r11.<java.util.Map: java.util.Set entrySet()>();

        r29 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r29.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r21 = interfaceinvoke r29.<java.util.Iterator: java.lang.Object next()>();

        r30 = (java.util.Map$Entry) $r21;

        $r22 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r23 = (net.sourceforge.plantuml.nwdiag.core.Network) $r22;

        $r24 = interfaceinvoke r30.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (java.lang.String) $r24;

        $r25 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r27 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.graphic.TextBlock toTextBlock(java.lang.String,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.SName)>($r26, r0, $r25);

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, $r27);

        goto label1;

     label2:
        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String getDescription()>();

        $r14 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName server>;

        r31 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.graphic.TextBlock toTextBlock(java.lang.String,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.SName)>($r13, r0, $r14);

        $r15 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.graphic.USymbol getShape()>();

        $r16 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r17 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r18 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        r32 = virtualinvoke $r15.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r16, r31, $r17, r8, $r18);

        $r19 = new net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        specialinvoke $r19.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: void <init>(double,net.sourceforge.plantuml.nwdiag.core.NServer,net.sourceforge.plantuml.graphic.TextBlock,java.util.Map,java.util.List)>(d0, r2, r32, $r9, r20);

        return $r19;
    }

    public void connectTo(net.sourceforge.plantuml.nwdiag.core.Network)
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        net.sourceforge.plantuml.nwdiag.core.Network r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.core.Network;

        virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.core.NServer: void connectTo(net.sourceforge.plantuml.nwdiag.core.Network,java.lang.String)>(r1, "");

        return;
    }

    public void connectTo(net.sourceforge.plantuml.nwdiag.core.Network, java.lang.String)
    {
        int $i0;
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        net.sourceforge.plantuml.nwdiag.core.Network r1, $r6;
        java.util.Map $r2, $r11;
        net.sourceforge.plantuml.nwdiag.next.NBar $r4, $r7, $r9;
        net.sourceforge.plantuml.nwdiag.next.NStage $r5, $r8, $r10;
        boolean $z0;
        java.lang.String r12;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.core.Network;

        r12 := @parameter1: java.lang.String;

        if r12 != null goto label1;

        r12 = "";

     label1:
        $i0 = virtualinvoke r12.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r11 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.util.Map connections>;

        $z0 = interfaceinvoke $r11.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r2 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.util.Map connections>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r12);

        $r4 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar bar>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage getStart()>();

        if $r5 != null goto label3;

        $r9 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar bar>;

        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.core.Network: net.sourceforge.plantuml.nwdiag.next.NStage getNstage()>();

        virtualinvoke $r9.<net.sourceforge.plantuml.nwdiag.next.NBar: void addStage(net.sourceforge.plantuml.nwdiag.next.NStage)>($r10);

        goto label4;

     label3:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.core.Network getMainNetworkNext()>();

        if $r6 == r1 goto label4;

        $r7 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar bar>;

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.core.Network: net.sourceforge.plantuml.nwdiag.next.NStage getUp()>();

        virtualinvoke $r7.<net.sourceforge.plantuml.nwdiag.next.NBar: void addStage(net.sourceforge.plantuml.nwdiag.next.NStage)>($r8);

     label4:
        return;
    }

    public void updateProperties(java.util.Map)
    {
        java.util.Map r0;
        java.lang.Object $r1, $r3;
        java.lang.String r2, r4;
        net.sourceforge.plantuml.nwdiag.core.NServer r5;

        r5 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("description");

        r2 = (java.lang.String) $r1;

        if r2 == null goto label1;

        virtualinvoke r5.<net.sourceforge.plantuml.nwdiag.core.NServer: void setDescription(java.lang.String)>(r2);

     label1:
        $r3 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>("shape");

        r4 = (java.lang.String) $r3;

        if r4 == null goto label2;

        virtualinvoke r5.<net.sourceforge.plantuml.nwdiag.core.NServer: void setShape(java.lang.String)>(r4);

     label2:
        return;
    }

    public final java.lang.String toString()
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String name>;

        return $r1;
    }

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        java.lang.String r1;
        net.sourceforge.plantuml.nwdiag.next.NBar $r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r1 := @parameter0: java.lang.String;

        $r2 = new net.sourceforge.plantuml.nwdiag.next.NBar;

        specialinvoke $r2.<net.sourceforge.plantuml.nwdiag.next.NBar: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.nwdiag.core.NServer: void <init>(java.lang.String,net.sourceforge.plantuml.nwdiag.next.NBar)>(r1, $r2);

        return;
    }

    public void <init>(java.lang.String, net.sourceforge.plantuml.nwdiag.next.NBar)
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        java.util.LinkedHashMap $r1;
        net.sourceforge.plantuml.graphic.USymbol $r2;
        java.lang.String r3;
        net.sourceforge.plantuml.nwdiag.next.NBar r4;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: net.sourceforge.plantuml.nwdiag.next.NBar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.util.Map connections> = $r1;

        $r2 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol RECTANGLE>;

        r0.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.graphic.USymbol shape> = $r2;

        r0.<net.sourceforge.plantuml.nwdiag.core.NServer: boolean printFirstLink> = 1;

        r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String description> = r3;

        r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String name> = r3;

        r0.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar bar> = r4;

        return;
    }

    public final java.lang.String getDescription()
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String description>;

        return $r1;
    }

    public final void setDescription(java.lang.String)
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r1 := @parameter0: java.lang.String;

        r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String description> = r1;

        return;
    }

    public final java.lang.String getName()
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: java.lang.String name>;

        return $r1;
    }

    public final void setShape(java.lang.String)
    {
        java.lang.String r0;
        net.sourceforge.plantuml.svek.PackageStyle $r1;
        net.sourceforge.plantuml.ComponentStyle $r2;
        net.sourceforge.plantuml.skin.ActorStyle $r3;
        net.sourceforge.plantuml.graphic.USymbol r4;
        net.sourceforge.plantuml.nwdiag.core.NServer r5;

        r5 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        r0 := @parameter0: java.lang.String;

        $r3 = <net.sourceforge.plantuml.skin.ActorStyle: net.sourceforge.plantuml.skin.ActorStyle STICKMAN>;

        $r2 = <net.sourceforge.plantuml.ComponentStyle: net.sourceforge.plantuml.ComponentStyle RECTANGLE>;

        $r1 = <net.sourceforge.plantuml.svek.PackageStyle: net.sourceforge.plantuml.svek.PackageStyle RECTANGLE>;

        r4 = staticinvoke <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol fromString(java.lang.String,net.sourceforge.plantuml.skin.ActorStyle,net.sourceforge.plantuml.ComponentStyle,net.sourceforge.plantuml.svek.PackageStyle)>(r0, $r3, $r2, $r1);

        if r4 == null goto label1;

        r5.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.graphic.USymbol shape> = r4;

     label1:
        return;
    }

    public final net.sourceforge.plantuml.graphic.USymbol getShape()
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        net.sourceforge.plantuml.graphic.USymbol $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.graphic.USymbol shape>;

        return $r1;
    }

    public final net.sourceforge.plantuml.nwdiag.next.NBar getBar()
    {
        net.sourceforge.plantuml.nwdiag.core.NServer r0;
        net.sourceforge.plantuml.nwdiag.next.NBar $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.core.NServer;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar bar>;

        return $r1;
    }
}
