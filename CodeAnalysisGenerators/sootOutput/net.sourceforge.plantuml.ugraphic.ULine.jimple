public class net.sourceforge.plantuml.ugraphic.ULine extends net.sourceforge.plantuml.ugraphic.AbstractShadowable implements net.sourceforge.plantuml.ugraphic.UShapeSized
{
    private final double dx;
    private final double dy;

    public void <init>(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        java.awt.geom.Point2D r1, r2;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        r2 := @parameter0: java.awt.geom.Point2D;

        r1 := @parameter1: java.awt.geom.Point2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d2 = $d0 - $d1;

        $d3 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d5 = $d3 - $d4;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d2, $d5);

        return;
    }

    public void <init>(double, double)
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractShadowable: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.ULine: double dx> = d0;

        r0.<net.sourceforge.plantuml.ugraphic.ULine: double dy> = d1;

        return;
    }

    public static net.sourceforge.plantuml.ugraphic.ULine hline(double)
    {
        net.sourceforge.plantuml.ugraphic.ULine $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.ULine;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>(d0, 0.0);

        return $r0;
    }

    public static net.sourceforge.plantuml.ugraphic.ULine vline(double)
    {
        net.sourceforge.plantuml.ugraphic.ULine $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.ULine;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>(0.0, d0);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5;
        net.sourceforge.plantuml.ugraphic.ULine r2;
        double $d0, $d1;
        java.lang.String $r6;

        r2 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ULine dx=");

        $d0 = r2.<net.sourceforge.plantuml.ugraphic.ULine: double dx>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dy=");

        $d1 = r2.<net.sourceforge.plantuml.ugraphic.ULine: double dy>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public double getDX()
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.ULine: double dx>;

        return $d0;
    }

    public double getDY()
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.ULine: double dy>;

        return $d0;
    }

    public double getLength()
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        $d1 = r0.<net.sourceforge.plantuml.ugraphic.ULine: double dx>;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.ULine: double dx>;

        $d5 = $d1 * $d0;

        $d3 = r0.<net.sourceforge.plantuml.ugraphic.ULine: double dy>;

        $d2 = r0.<net.sourceforge.plantuml.ugraphic.ULine: double dy>;

        $d4 = $d3 * $d2;

        $d6 = $d5 + $d4;

        $d7 = staticinvoke <java.lang.Math: double sqrt(double)>($d6);

        return $d7;
    }

    public double getWidth()
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.ULine: double dx>;

        return $d0;
    }

    public double getHeight()
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.ULine: double dy>;

        return $d0;
    }

    public volatile void setDeltaShadow(double)
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        d0 := @parameter0: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractShadowable: void setDeltaShadow(double)>(d0);

        return;
    }

    public volatile double getDeltaShadow()
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ULine;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractShadowable: double getDeltaShadow()>();

        return $d0;
    }
}
