public abstract class net.sourceforge.plantuml.tim.ExecutionContexts extends java.lang.Object
{
    private final java.util.Deque allIfs;
    private final java.util.Deque allWhiles;
    private final java.util.Deque allForeachs;

    public void <init>()
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        java.util.LinkedList $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allIfs> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allWhiles> = $r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allForeachs> = $r3;

        return;
    }

    public void addIf(net.sourceforge.plantuml.tim.ExecutionContextIf)
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        net.sourceforge.plantuml.tim.ExecutionContextIf r1;
        java.util.Deque $r2;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        r1 := @parameter0: net.sourceforge.plantuml.tim.ExecutionContextIf;

        $r2 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allIfs>;

        interfaceinvoke $r2.<java.util.Deque: void addLast(java.lang.Object)>(r1);

        return;
    }

    public void addWhile(net.sourceforge.plantuml.tim.ExecutionContextWhile)
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        net.sourceforge.plantuml.tim.ExecutionContextWhile r1;
        java.util.Deque $r2;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        r1 := @parameter0: net.sourceforge.plantuml.tim.ExecutionContextWhile;

        $r2 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allWhiles>;

        interfaceinvoke $r2.<java.util.Deque: void addLast(java.lang.Object)>(r1);

        return;
    }

    public void addForeach(net.sourceforge.plantuml.tim.ExecutionContextForeach)
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        net.sourceforge.plantuml.tim.ExecutionContextForeach r1;
        java.util.Deque $r2;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        r1 := @parameter0: net.sourceforge.plantuml.tim.ExecutionContextForeach;

        $r2 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allForeachs>;

        interfaceinvoke $r2.<java.util.Deque: void addLast(java.lang.Object)>(r1);

        return;
    }

    public net.sourceforge.plantuml.tim.ExecutionContextIf peekIf()
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.tim.ExecutionContextIf $r3;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        $r1 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allIfs>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peekLast()>();

        $r3 = (net.sourceforge.plantuml.tim.ExecutionContextIf) $r2;

        return $r3;
    }

    public net.sourceforge.plantuml.tim.ExecutionContextWhile peekWhile()
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.tim.ExecutionContextWhile $r3;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        $r1 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allWhiles>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peekLast()>();

        $r3 = (net.sourceforge.plantuml.tim.ExecutionContextWhile) $r2;

        return $r3;
    }

    public net.sourceforge.plantuml.tim.ExecutionContextForeach peekForeach()
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.tim.ExecutionContextForeach $r3;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        $r1 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allForeachs>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object peekLast()>();

        $r3 = (net.sourceforge.plantuml.tim.ExecutionContextForeach) $r2;

        return $r3;
    }

    public net.sourceforge.plantuml.tim.ExecutionContextIf pollIf()
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.tim.ExecutionContextIf $r3;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        $r1 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allIfs>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pollLast()>();

        $r3 = (net.sourceforge.plantuml.tim.ExecutionContextIf) $r2;

        return $r3;
    }

    public net.sourceforge.plantuml.tim.ExecutionContextWhile pollWhile()
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.tim.ExecutionContextWhile $r3;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        $r1 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allWhiles>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pollLast()>();

        $r3 = (net.sourceforge.plantuml.tim.ExecutionContextWhile) $r2;

        return $r3;
    }

    public net.sourceforge.plantuml.tim.ExecutionContextForeach pollForeach()
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.tim.ExecutionContextForeach $r3;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        $r1 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allForeachs>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object pollLast()>();

        $r3 = (net.sourceforge.plantuml.tim.ExecutionContextForeach) $r2;

        return $r3;
    }

    public boolean areAllIfOk(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory) throws net.sourceforge.plantuml.tim.EaterException
    {
        net.sourceforge.plantuml.tim.ExecutionContexts r0;
        java.util.Deque $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.tim.ExecutionContextIf r4;
        net.sourceforge.plantuml.tim.TContext r5;
        net.sourceforge.plantuml.tim.TMemory r6;

        r0 := @this: net.sourceforge.plantuml.tim.ExecutionContexts;

        r5 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r6 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        $r1 = r0.<net.sourceforge.plantuml.tim.ExecutionContexts: java.util.Deque allIfs>;

        r2 = interfaceinvoke $r1.<java.util.Deque: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.tim.ExecutionContextIf) $r3;

        $z1 = virtualinvoke r4.<net.sourceforge.plantuml.tim.ExecutionContextIf: boolean conditionIsOkHere()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }
}
