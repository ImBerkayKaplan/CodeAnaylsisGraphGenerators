public class net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow extends net.sourceforge.plantuml.asciiart.AbstractComponentText implements net.sourceforge.plantuml.skin.ArrowComponent
{
    private final net.sourceforge.plantuml.skin.ComponentType type;
    private final net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay;
    private final net.sourceforge.plantuml.FileFormat fileFormat;
    private final net.sourceforge.plantuml.skin.ArrowConfiguration config;

    public void <init>(net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.skin.ArrowConfiguration, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r0;
        net.sourceforge.plantuml.skin.ComponentType r1;
        net.sourceforge.plantuml.cucadiagram.Display r2, $r4;
        net.sourceforge.plantuml.FileFormat r3;
        net.sourceforge.plantuml.skin.ArrowConfiguration r5;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        r1 := @parameter0: net.sourceforge.plantuml.skin.ComponentType;

        r5 := @parameter1: net.sourceforge.plantuml.skin.ArrowConfiguration;

        r2 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter3: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<net.sourceforge.plantuml.asciiart.AbstractComponentText: void <init>()>();

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.skin.ComponentType type> = r1;

        $r4 = staticinvoke <net.sourceforge.plantuml.asciiart.ComponentTextArrow: net.sourceforge.plantuml.cucadiagram.Display cleanAndManageBoldNumber(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>(r2, r3);

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay> = $r4;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.FileFormat fileFormat> = r3;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.skin.ArrowConfiguration config> = r5;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area, net.sourceforge.plantuml.skin.Context2D)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r0;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r1, $r9, $r14;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.skin.Area r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r4;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r5;
        net.sourceforge.plantuml.asciiart.UmlCharArea r6;
        double $d0, $d1;
        int i0, $i1, i2;
        net.sourceforge.plantuml.FileFormat $r7, $r8, $r16, $r17;
        net.sourceforge.plantuml.cucadiagram.Display $r10, $r12;
        java.util.List $r11, $r13;
        net.sourceforge.plantuml.skin.Context2D r15;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r15 := @parameter2: net.sourceforge.plantuml.skin.Context2D;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.skin.ArrowConfiguration config>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isHidden()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r3 = virtualinvoke r2.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r5 = (net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt) r4;

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        i0 = (int) $d0;

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $i1 = (int) $d1;

        i2 = $i1 - 1;

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void fillRect(char,int,int,int,int)>(32, 0, 0, i0, i2);

        $r8 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r7 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r8 != $r7 goto label3;

        $r14 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.skin.ArrowConfiguration config>;

        $z2 = virtualinvoke $r14.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isDotted()>();

        if $z2 == 0 goto label2;

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("\u2500 \u2500 \u2510", 0, 0);

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("|", 4, 1);

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("< \u2500 \u2518", 0, 2);

        goto label5;

     label2:
        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("\u2500\u2500\u2500\u2500\u2510", 0, 0);

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("\u2502", 4, 1);

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("<\u2500\u2500\u2500\u2518", 0, 2);

        goto label5;

     label3:
        $r9 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.skin.ArrowConfiguration config>;

        $z1 = virtualinvoke $r9.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isDotted()>();

        if $z1 == 0 goto label4;

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("- - .", 0, 0);

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("|", 4, 1);

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("< - \'", 0, 2);

        goto label5;

     label4:
        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("----.", 0, 0);

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("|", 4, 1);

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>("<---\'", 0, 2);

     label5:
        $r16 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r17 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r16 != $r17 goto label6;

        $r12 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRUnicode(java.util.Collection,int,int)>($r13, 6, 1);

        goto label7;

     label6:
        $r10 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        interfaceinvoke r6.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRSimple(java.util.Collection,int,int)>($r11, 6, 1);

     label7:
        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        int $i0, $i1;
        double $d0;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $i0 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getHeight(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        $i1 = $i0 + 3;

        $d0 = (double) $i1;

        return $d0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        int $i0, $i1;
        double $d0;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $i0 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getWcWidth(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        $i1 = $i0 + 6;

        $d0 = (double) $i1;

        return $d0;
    }

    public java.awt.geom.Point2D getStartPoint(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        java.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;

        r1 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $r0 = new java.awt.geom.Point2D$Double;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        return $r0;
    }

    public java.awt.geom.Point2D getEndPoint(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        java.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;

        r1 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $r0 = new java.awt.geom.Point2D$Double;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        return $r0;
    }

    public double getPaddingY()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r1;

        r1 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public double getYPoint(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public double getPosArrow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
