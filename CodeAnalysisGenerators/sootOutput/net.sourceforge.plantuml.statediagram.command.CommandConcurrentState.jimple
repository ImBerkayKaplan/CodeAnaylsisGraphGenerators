public class net.sourceforge.plantuml.statediagram.command.CommandConcurrentState extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.statediagram.command.CommandConcurrentState r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandConcurrentState;

        $r1 = staticinvoke <net.sourceforge.plantuml.statediagram.command.CommandConcurrentState: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5;
        net.sourceforge.plantuml.command.regex.RegexConcat $r6;

        $r0 = class "Lnet/sourceforge/plantuml/statediagram/command/CommandConcurrentState;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TYPE", "(--+|\\|\\|+)");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[2] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r6;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.statediagram.StateDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2;
        char $c0;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3, $r4;
        net.sourceforge.plantuml.statediagram.command.CommandConcurrentState r5;
        net.sourceforge.plantuml.LineLocation r6;

        r5 := @this: net.sourceforge.plantuml.statediagram.command.CommandConcurrentState;

        r0 := @parameter0: net.sourceforge.plantuml.statediagram.StateDiagram;

        r6 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r1 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("TYPE", 0);

        $c0 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean concurrentState(char)>($c0);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r4;

     label1:
        $r3 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Error 42");

        return $r3;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.statediagram.command.CommandConcurrentState r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.statediagram.StateDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandConcurrentState;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.statediagram.StateDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.command.CommandConcurrentState: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.statediagram.StateDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
