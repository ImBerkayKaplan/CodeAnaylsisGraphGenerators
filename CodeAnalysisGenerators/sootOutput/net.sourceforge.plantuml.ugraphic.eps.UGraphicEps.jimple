public class net.sourceforge.plantuml.ugraphic.eps.UGraphicEps extends net.sourceforge.plantuml.ugraphic.AbstractUGraphic implements net.sourceforge.plantuml.ugraphic.ClipContainer
{
    private final net.sourceforge.plantuml.eps.EpsStrategy strategyTOBEREMOVED;

    protected net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic copyUGraphic()
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps $r0, r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        $r0 = new net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void <init>(net.sourceforge.plantuml.ugraphic.eps.UGraphicEps)>(r1);

        return $r0;
    }

    protected void <init>(net.sourceforge.plantuml.ugraphic.eps.UGraphicEps)
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0, r1;
        net.sourceforge.plantuml.eps.EpsStrategy $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.AbstractUGraphic)>(r1);

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: net.sourceforge.plantuml.eps.EpsStrategy strategyTOBEREMOVED>;

        r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: net.sourceforge.plantuml.eps.EpsStrategy strategyTOBEREMOVED> = $r2;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void register()>();

        return;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.eps.EpsStrategy)
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.eps.EpsStrategy r4;
        net.sourceforge.plantuml.eps.EpsGraphics $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        r4 := @parameter3: net.sourceforge.plantuml.eps.EpsStrategy;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.eps.EpsStrategy: net.sourceforge.plantuml.eps.EpsGraphics creatEpsGraphics()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,java.lang.Object)>(r1, r2, r3, $r5);

        r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: net.sourceforge.plantuml.eps.EpsStrategy strategyTOBEREMOVED> = r4;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void register()>();

        return;
    }

    private void register()
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0;
        net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps $r1;
        net.sourceforge.plantuml.ugraphic.eps.DriverTextEps $r2;
        net.sourceforge.plantuml.eps.EpsStrategy $r3;
        net.sourceforge.plantuml.ugraphic.eps.DriverLineEps $r4;
        net.sourceforge.plantuml.ugraphic.eps.DriverPolygonEps $r5;
        net.sourceforge.plantuml.ugraphic.eps.DriverEllipseEps $r6;
        net.sourceforge.plantuml.ugraphic.eps.DriverImageEps $r7;
        net.sourceforge.plantuml.ugraphic.eps.DriverPathEps $r8;
        net.sourceforge.plantuml.ugraphic.eps.DriverDotPathEps $r9;
        net.sourceforge.plantuml.ugraphic.eps.DriverCenteredCharacterEps $r10;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        $r1 = new net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/URectangle;", $r1);

        $r2 = new net.sourceforge.plantuml.ugraphic.eps.DriverTextEps;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: net.sourceforge.plantuml.eps.EpsStrategy strategyTOBEREMOVED>;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.eps.DriverTextEps: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer,net.sourceforge.plantuml.eps.EpsStrategy)>(r0, $r3);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UText;", $r2);

        $r4 = new net.sourceforge.plantuml.ugraphic.eps.DriverLineEps;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.eps.DriverLineEps: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/ULine;", $r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.eps.DriverPolygonEps;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.eps.DriverPolygonEps: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPolygon;", $r5);

        $r6 = new net.sourceforge.plantuml.ugraphic.eps.DriverEllipseEps;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.eps.DriverEllipseEps: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UEllipse;", $r6);

        $r7 = new net.sourceforge.plantuml.ugraphic.eps.DriverImageEps;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.eps.DriverImageEps: void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UImage;", $r7);

        $r8 = new net.sourceforge.plantuml.ugraphic.eps.DriverPathEps;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.eps.DriverPathEps: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPath;", $r8);

        $r9 = new net.sourceforge.plantuml.ugraphic.eps.DriverDotPathEps;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.eps.DriverDotPathEps: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/posimo/DotPath;", $r9);

        $r10 = new net.sourceforge.plantuml.ugraphic.eps.DriverCenteredCharacterEps;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.eps.DriverCenteredCharacterEps: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UCenteredCharacter;", $r10);

        return;
    }

    public void close()
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0;
        net.sourceforge.plantuml.eps.EpsGraphics $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: net.sourceforge.plantuml.eps.EpsGraphics getEpsGraphics()>();

        virtualinvoke $r1.<net.sourceforge.plantuml.eps.EpsGraphics: void close()>();

        return;
    }

    public java.lang.String getEPSCode()
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0;
        net.sourceforge.plantuml.eps.EpsGraphics $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: net.sourceforge.plantuml.eps.EpsGraphics getEpsGraphics()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.eps.EpsGraphics: java.lang.String getEPSCode()>();

        return $r2;
    }

    public net.sourceforge.plantuml.eps.EpsGraphics getEpsGraphics()
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.eps.EpsGraphics $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: java.lang.Object getGraphicObject()>();

        $r2 = (net.sourceforge.plantuml.eps.EpsGraphics) $r1;

        return $r2;
    }

    public void drawEps(java.lang.String, double, double)
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0;
        java.lang.Object $r1;
        java.lang.String r2;
        double d0, d1;
        net.sourceforge.plantuml.eps.EpsGraphics $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        r2 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: java.lang.Object getGraphicObject()>();

        $r3 = (net.sourceforge.plantuml.eps.EpsGraphics) $r1;

        virtualinvoke $r3.<net.sourceforge.plantuml.eps.EpsGraphics: void drawEps(java.lang.String,double,double)>(r2, d0, d1);

        return;
    }

    public static java.lang.String getEpsString(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.eps.EpsStrategy, net.sourceforge.plantuml.graphic.UDrawable) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps $r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.FileFormat $r3;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.eps.EpsStrategy r5;
        net.sourceforge.plantuml.graphic.UDrawable r7;
        java.lang.String $r8;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r5 := @parameter2: net.sourceforge.plantuml.eps.EpsStrategy;

        r7 := @parameter3: net.sourceforge.plantuml.graphic.UDrawable;

        $r0 = new net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        $r3 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat EPS_TEXT>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder()>();

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.eps.EpsStrategy)>(r1, r2, $r4, r5);

        interfaceinvoke r7.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r0);

        $r8 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: java.lang.String getEPSCode()>();

        return $r8;
    }

    public void startUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.Url r2;
        net.sourceforge.plantuml.eps.EpsGraphics $r3;
        java.lang.String $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        r2 := @parameter0: net.sourceforge.plantuml.Url;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: java.lang.Object getGraphicObject()>();

        $r3 = (net.sourceforge.plantuml.eps.EpsGraphics) $r1;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.Url: java.lang.String getUrl()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.eps.EpsGraphics: void openLink(java.lang.String)>($r4);

        return;
    }

    public void closeUrl()
    {
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r0;
        java.lang.Object $r1;
        net.sourceforge.plantuml.eps.EpsGraphics $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: java.lang.Object getGraphicObject()>();

        $r2 = (net.sourceforge.plantuml.eps.EpsGraphics) $r1;

        virtualinvoke $r2.<net.sourceforge.plantuml.eps.EpsGraphics: void closeLink()>();

        return;
    }

    public void writeToStream(java.io.OutputStream, java.lang.String, int) throws java.io.IOException
    {
        java.io.OutputStream r0;
        net.sourceforge.plantuml.ugraphic.eps.UGraphicEps r1;
        java.lang.String $r2, r4;
        byte[] $r3;
        int i0;

        r1 := @this: net.sourceforge.plantuml.ugraphic.eps.UGraphicEps;

        r0 := @parameter0: java.io.OutputStream;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.eps.UGraphicEps: java.lang.String getEPSCode()>();

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }
}
