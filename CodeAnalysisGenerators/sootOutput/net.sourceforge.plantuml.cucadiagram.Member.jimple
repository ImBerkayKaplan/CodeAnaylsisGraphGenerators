public class net.sourceforge.plantuml.cucadiagram.Member extends java.lang.Object implements java.lang.CharSequence
{
    private final java.lang.String display;
    private final java.lang.CharSequence raw;
    private final boolean staticModifier;
    private final boolean abstractModifier;
    private final net.sourceforge.plantuml.Url url;
    private final boolean hasUrl;
    private final net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier;

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        java.lang.CharSequence $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.CharSequence raw>;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.String toString()>();

        return $r2;
    }

    public char charAt(int)
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        int i0;
        java.lang.CharSequence $r1;
        char $c1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.CharSequence raw>;

        $c1 = interfaceinvoke $r1.<java.lang.CharSequence: char charAt(int)>(i0);

        return $c1;
    }

    public int length()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        java.lang.CharSequence $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.CharSequence raw>;

        $i0 = interfaceinvoke $r1.<java.lang.CharSequence: int length()>();

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        int i0, i1;
        java.lang.CharSequence $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.CharSequence raw>;

        $r2 = interfaceinvoke $r1.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        return $r2;
    }

    public static net.sourceforge.plantuml.cucadiagram.Member method(java.lang.CharSequence)
    {
        net.sourceforge.plantuml.cucadiagram.Member $r0;
        java.lang.CharSequence r1;

        r1 := @parameter0: java.lang.CharSequence;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Member;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Member: void <init>(boolean,java.lang.CharSequence,boolean)>(1, r1, 1);

        return $r0;
    }

    public static net.sourceforge.plantuml.cucadiagram.Member field(java.lang.CharSequence)
    {
        net.sourceforge.plantuml.cucadiagram.Member $r0;
        java.lang.CharSequence r1;

        r1 := @parameter0: java.lang.CharSequence;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Member;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Member: void <init>(boolean,java.lang.CharSequence,boolean)>(1, r1, 0);

        return $r0;
    }

    public static net.sourceforge.plantuml.cucadiagram.Member method(java.lang.CharSequence, boolean)
    {
        net.sourceforge.plantuml.cucadiagram.Member $r0;
        boolean z0;
        java.lang.CharSequence r1;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Member;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Member: void <init>(boolean,java.lang.CharSequence,boolean)>(z0, r1, 1);

        return $r0;
    }

    public static net.sourceforge.plantuml.cucadiagram.Member field(java.lang.CharSequence, boolean)
    {
        net.sourceforge.plantuml.cucadiagram.Member $r0;
        boolean z0;
        java.lang.CharSequence r1;

        r1 := @parameter0: java.lang.CharSequence;

        z0 := @parameter1: boolean;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Member;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Member: void <init>(boolean,java.lang.CharSequence,boolean)>(z0, r1, 0);

        return $r0;
    }

    private void <init>(boolean, java.lang.CharSequence, boolean)
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        java.lang.String $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r15, $r16, $r17, $r18, $r24, $r27, r28, r34, r37, r38, r39, $r40;
        boolean z0, $z1, $z2, $z3, z4, $z5, $z6, $z7, $z8, $z9;
        net.sourceforge.plantuml.Url $r2, $r31;
        int $i0, $i1;
        net.sourceforge.plantuml.Guillemet $r5, $r11, $r14;
        net.sourceforge.plantuml.skin.VisibilityModifier $r13;
        java.lang.StringBuilder $r22, $r23, $r25, $r26;
        net.sourceforge.plantuml.UrlBuilder $r29;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r30;
        java.lang.IllegalStateException $r32;
        java.lang.CharSequence r33;
        net.sourceforge.plantuml.command.regex.Pattern2 r35;
        net.sourceforge.plantuml.command.regex.Matcher2 r36;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        z0 := @parameter0: boolean;

        r33 := @parameter1: java.lang.CharSequence;

        z4 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.CharSequence raw> = r33;

        $r1 = interfaceinvoke r33.<java.lang.CharSequence: java.lang.String toString()>();

        r34 = virtualinvoke $r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(?i)\\{(method|field)\\}\\s*", "");

        if z0 == 0 goto label04;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^(.*?)(?:\\[(");

        $r24 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")\\])?$");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        r35 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>($r27);

        r36 = virtualinvoke r35.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r34);

        $z6 = virtualinvoke r36.<net.sourceforge.plantuml.command.regex.Matcher2: boolean matches()>();

        if $z6 != 0 goto label01;

        $r32 = new java.lang.IllegalStateException;

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>()>();

        throw $r32;

     label01:
        r34 = virtualinvoke r36.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        r28 = virtualinvoke r36.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        if r28 != null goto label02;

        r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.Url url> = null;

        goto label03;

     label02:
        $r29 = new net.sourceforge.plantuml.UrlBuilder;

        $r30 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r29.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>(null, $r30);

        $r31 = virtualinvoke $r29.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>(r28);

        r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.Url url> = $r31;

     label03:
        goto label05;

     label04:
        r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.Url url> = null;

     label05:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.Url url>;

        if $r2 == null goto label06;

        $z7 = 1;

        goto label07;

     label06:
        $z7 = 0;

     label07:
        r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean hasUrl> = $z7;

        $r3 = interfaceinvoke r34.<java.lang.CharSequence: java.lang.String toString()>();

        r37 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goLowerCase(java.lang.String)>($r3);

        if z0 == 0 goto label16;

        $z1 = virtualinvoke r37.<java.lang.String: boolean contains(java.lang.CharSequence)>("{static}");

        if $z1 != 0 goto label08;

        $z5 = virtualinvoke r37.<java.lang.String: boolean contains(java.lang.CharSequence)>("{classifier}");

        if $z5 == 0 goto label09;

     label08:
        $z8 = 1;

        goto label10;

     label09:
        $z8 = 0;

     label10:
        r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean staticModifier> = $z8;

        $z2 = virtualinvoke r37.<java.lang.String: boolean contains(java.lang.CharSequence)>("{abstract}");

        r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean abstractModifier> = $z2;

        $r9 = interfaceinvoke r34.<java.lang.CharSequence: java.lang.String toString()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(?i)\\{(static|classifier|abstract)\\}\\s*", "");

        r38 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke r38.<java.lang.String: int length()>();

        if $i1 != 0 goto label11;

        r38 = " ";

     label11:
        $z3 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: boolean isVisibilityCharacter(java.lang.CharSequence)>(r38);

        if $z3 == 0 goto label14;

        $r18 = r38;

        if z4 != 0 goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        $r13 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier(java.lang.CharSequence,boolean)>($r18, $z9);

        r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier> = $r13;

        $r14 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet GUILLEMET>;

        $r15 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int)>(1);

        $r16 = virtualinvoke $r14.<net.sourceforge.plantuml.Guillemet: java.lang.String manageGuillemet(java.lang.String)>($r15);

        $r17 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r16);

        r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display> = $r17;

        goto label15;

     label14:
        $r11 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet GUILLEMET>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.Guillemet: java.lang.String manageGuillemet(java.lang.String)>(r38);

        r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display> = $r12;

        r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier> = null;

     label15:
        goto label19;

     label16:
        r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean staticModifier> = 0;

        r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier> = null;

        r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean abstractModifier> = 0;

        $r4 = interfaceinvoke r34.<java.lang.CharSequence: java.lang.String toString()>();

        r39 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r4);

        $i0 = interfaceinvoke r39.<java.lang.CharSequence: int length()>();

        if $i0 != 0 goto label17;

        $r40 = " ";

        goto label18;

     label17:
        $r5 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet GUILLEMET>;

        $r6 = interfaceinvoke r39.<java.lang.CharSequence: java.lang.String toString()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r6);

        $r40 = virtualinvoke $r5.<net.sourceforge.plantuml.Guillemet: java.lang.String manageGuillemet(java.lang.String)>($r7);

     label18:
        r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display> = $r40;

     label19:
        return;
    }

    public java.lang.String getDisplay(boolean)
    {
        boolean z0;
        net.sourceforge.plantuml.cucadiagram.Member r0;
        java.lang.String $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String getDisplayWithVisibilityChar()>();

        return $r2;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String getDisplayWithoutVisibilityChar()>();

        return $r1;
    }

    private java.lang.String getDisplayWithoutVisibilityChar()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        return $r1;
    }

    private java.lang.String getDisplayWithVisibilityChar()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r1, $r4, $r6, $r9, $r11, $r14, $r16, $r19, $r21, $r24, $r26;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r22, $r23, $r25;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean isPrivate()>();

        if $z0 == 0 goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r24 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r26;

     label1:
        $z1 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean isPublic()>();

        if $z1 == 0 goto label2;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r19 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;

     label2:
        $z2 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean isPackagePrivate()>();

        if $z2 == 0 goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("~");

        $r14 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label3:
        $z3 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean isProtected()>();

        if $z3 == 0 goto label4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;

     label4:
        $z4 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean isIEMandatory()>();

        if $z4 == 0 goto label5;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label5:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.cucadiagram.Member r1, r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.cucadiagram.Member) r0;

        $r4 = r2.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: java.lang.String display>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public final boolean isStatic()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean staticModifier>;

        return $z0;
    }

    public final boolean isAbstract()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean abstractModifier>;

        return $z0;
    }

    private boolean isPrivate()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r3 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_METHOD>;

        if $r4 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isProtected()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r3 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_METHOD>;

        if $r4 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isPublic()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r3 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_METHOD>;

        if $r4 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isPackagePrivate()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r3 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_METHOD>;

        if $r4 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isIEMandatory()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1, $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r1 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier IE_MANDATORY>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        return $r1;
    }

    public final net.sourceforge.plantuml.Url getUrl()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        net.sourceforge.plantuml.Url $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Member: net.sourceforge.plantuml.Url url>;

        return $r1;
    }

    public boolean hasUrl()
    {
        net.sourceforge.plantuml.cucadiagram.Member r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Member;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Member: boolean hasUrl>;

        return $z0;
    }
}
