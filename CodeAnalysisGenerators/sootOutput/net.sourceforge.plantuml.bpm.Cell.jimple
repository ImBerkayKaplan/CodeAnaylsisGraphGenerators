public class net.sourceforge.plantuml.bpm.Cell extends java.lang.Object
{
    private net.sourceforge.plantuml.bpm.Placeable data;
    private final java.util.List destinations;

    public void <init>()
    {
        net.sourceforge.plantuml.bpm.Cell r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.Cell;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.bpm.Cell: java.util.List destinations> = $r1;

        return;
    }

    public final net.sourceforge.plantuml.bpm.Placeable getData()
    {
        net.sourceforge.plantuml.bpm.Cell r0;
        net.sourceforge.plantuml.bpm.Placeable $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.Cell;

        $r1 = r0.<net.sourceforge.plantuml.bpm.Cell: net.sourceforge.plantuml.bpm.Placeable data>;

        return $r1;
    }

    public final void setData(net.sourceforge.plantuml.bpm.Placeable)
    {
        net.sourceforge.plantuml.bpm.Cell r0;
        net.sourceforge.plantuml.bpm.Placeable r1;

        r0 := @this: net.sourceforge.plantuml.bpm.Cell;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.Placeable;

        r0.<net.sourceforge.plantuml.bpm.Cell: net.sourceforge.plantuml.bpm.Placeable data> = r1;

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.bpm.Cell r0;
        net.sourceforge.plantuml.bpm.Placeable $r1, $r6;
        java.lang.StringBuilder $r2, $r4, $r5, $r7;
        java.lang.String $r3, $r8, $r9;

        r0 := @this: net.sourceforge.plantuml.bpm.Cell;

        $r1 = r0.<net.sourceforge.plantuml.bpm.Cell: net.sourceforge.plantuml.bpm.Placeable data>;

        if $r1 != null goto label1;

        $r9 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r9;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r0.<net.sourceforge.plantuml.bpm.Cell: net.sourceforge.plantuml.bpm.Placeable data>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public void addConnectionTo2(net.sourceforge.plantuml.bpm.Placeable)
    {
        net.sourceforge.plantuml.bpm.Placeable r0;
        boolean $z0;
        net.sourceforge.plantuml.bpm.Cell r1;
        java.util.List $r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: net.sourceforge.plantuml.bpm.Cell;

        r0 := @parameter0: net.sourceforge.plantuml.bpm.Placeable;

        $z0 = r0 instanceof net.sourceforge.plantuml.bpm.BpmElement;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.bpm.Cell: java.util.List destinations>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public java.util.List getDestinations2()
    {
        net.sourceforge.plantuml.bpm.Cell r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.bpm.Cell;

        $r1 = r0.<net.sourceforge.plantuml.bpm.Cell: java.util.List destinations>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }
}
