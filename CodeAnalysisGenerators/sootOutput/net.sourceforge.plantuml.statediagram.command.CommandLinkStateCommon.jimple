abstract class net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    void <init>(net.sourceforge.plantuml.command.regex.IRegex)
    {
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r0;
        net.sourceforge.plantuml.command.regex.IRegex r1;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.IRegex;

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>(r1);

        return;
    }

    protected static net.sourceforge.plantuml.command.regex.RegexLeaf getStatePattern(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>(r1, "([%pLN_.:]+|[%pLN_.:]+\\[H\\*?\\]|\\[\\*\\]|\\[H\\*?\\]|(?:==+)(?:[%pLN_.:]+)(?:==+))[%s]*(\\<\\<.*\\>\\>)?[%s]*(#\\w+)?");

        return $r0;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.statediagram.StateDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, $r7, $r8, $r9, $r10, $r12, $r14, $r18, $r29, $r37, $r43, $r49, r52, r53, r54, $r55, $r59, $r67;
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r3;
        net.sourceforge.plantuml.statediagram.StateDiagram r4;
        net.sourceforge.plantuml.cucadiagram.IEntity r5, r6;
        java.lang.StringBuilder $r11, $r13, $r15, $r39, $r40, $r41, $r42, $r45, $r46, $r47, $r48;
        net.sourceforge.plantuml.Direction r16, $r17, $r21, $r22, $r64;
        int i0;
        boolean z0, $z2, $z3;
        net.sourceforge.plantuml.cucadiagram.Display r20;
        net.sourceforge.plantuml.graphic.color.ColorType $r23, $r31;
        net.sourceforge.plantuml.ISkinParam $r24, $r26, $r32, $r34, $r61, $r65;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r25, $r33;
        net.sourceforge.plantuml.api.ThemeStyle $r27, $r35, $r66;
        net.sourceforge.plantuml.ugraphic.color.HColor $r28, $r36;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r30, $r38;
        net.sourceforge.plantuml.command.CommandExecutionResult $r44, $r50, $r69;
        net.sourceforge.plantuml.LineLocation r51;
        net.sourceforge.plantuml.cucadiagram.LinkType $r56;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r57, $r58;
        net.sourceforge.plantuml.cucadiagram.Link $r60, r63;
        net.sourceforge.plantuml.style.StyleBuilder $r62;
        net.sourceforge.plantuml.UmlDiagramType $r68;

        r3 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        r4 := @parameter0: net.sourceforge.plantuml.statediagram.StateDiagram;

        r51 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 0);

        r5 = specialinvoke r3.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: net.sourceforge.plantuml.cucadiagram.IEntity getEntityStart(net.sourceforge.plantuml.statediagram.StateDiagram,java.lang.String)>(r4, r1);

        if r5 != null goto label01;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The state ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been created in a concurrent state : it cannot be used here.");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $r50 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r49);

        return $r50;

     label01:
        r6 = specialinvoke r3.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: net.sourceforge.plantuml.cucadiagram.IEntity getEntityEnd(net.sourceforge.plantuml.statediagram.StateDiagram,java.lang.String)>(r4, r2);

        if r6 != null goto label02;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The state ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has been created in a concurrent state : it cannot be used here.");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r43);

        return $r44;

     label02:
        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 1);

        if $r7 == null goto label03;

        $r37 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 1);

        $r38 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>($r37);

        interfaceinvoke r5.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r38);

     label03:
        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 2);

        if $r8 == null goto label04;

        r52 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 2);

        $r31 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r32 = virtualinvoke r4.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r33 = interfaceinvoke $r32.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r34 = virtualinvoke r4.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r35 = interfaceinvoke $r34.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r36 = virtualinvoke $r33.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r35, r52);

        interfaceinvoke r5.<net.sourceforge.plantuml.cucadiagram.IEntity: void setSpecificColorTOBEREMOVED(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r31, $r36);

     label04:
        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 1);

        if $r9 == null goto label05;

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 1);

        $r30 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>($r29);

        interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r30);

     label05:
        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 2);

        if $r10 == null goto label06;

        r53 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 2);

        $r23 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r24 = virtualinvoke r4.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r26 = virtualinvoke r4.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r28 = virtualinvoke $r25.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r27, r53);

        interfaceinvoke r6.<net.sourceforge.plantuml.cucadiagram.IEntity: void setSpecificColorTOBEREMOVED(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r23, $r28);

     label06:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY1", 0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY2", 0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r54 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = specialinvoke r3.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: net.sourceforge.plantuml.Direction getDirection(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r17 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r16 == $r17 goto label07;

        $r22 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if r16 != $r22 goto label08;

     label07:
        r54 = "-";

     label08:
        i0 = virtualinvoke r54.<java.lang.String: int length()>();

        $r55 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_CROSS_START", 0);

        if $r55 == null goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        z0 = $z2;

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_CIRCLE_END", 0);

        if $r18 == null goto label11;

        $z3 = 1;

        goto label12;

     label11:
        $z3 = 0;

     label12:
        $r56 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        if $z3 == 0 goto label13;

        $r57 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW_AND_CIRCLE>;

        goto label14;

     label13:
        $r57 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW>;

     label14:
        if z0 == 0 goto label15;

        $r58 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_CROSS>;

        goto label16;

     label15:
        $r58 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

     label16:
        specialinvoke $r56.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r57, $r58);

        $r59 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL", 0);

        r20 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r59);

        $r60 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r61 = virtualinvoke r4.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r62 = interfaceinvoke $r61.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r60.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>(r5, r6, $r56, r20, i0, $r62);

        r63 = $r60;

        $r64 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r16 == $r64 goto label17;

        $r21 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction UP>;

        if r16 != $r21 goto label18;

     label17:
        r63 = virtualinvoke $r60.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Link getInv()>();

     label18:
        $r65 = virtualinvoke r4.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r66 = interfaceinvoke $r65.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r67 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_STYLE", 0);

        virtualinvoke r63.<net.sourceforge.plantuml.cucadiagram.Link: void applyStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r66, $r67);

        $r68 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType STATE>;

        virtualinvoke r63.<net.sourceforge.plantuml.cucadiagram.Link: void setUmlDiagramType(net.sourceforge.plantuml.UmlDiagramType)>($r68);

        virtualinvoke r4.<net.sourceforge.plantuml.statediagram.StateDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>(r63);

        $r69 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r69;
    }

    private net.sourceforge.plantuml.Direction getDirection(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1;
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r2;
        net.sourceforge.plantuml.Direction $r3, $r4;

        r2 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_DIRECTION", 0);

        if r1 == null goto label1;

        $r4 = staticinvoke <net.sourceforge.plantuml.StringUtils: net.sourceforge.plantuml.Direction getQueueDirection(java.lang.String)>(r1);

        return $r4;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: net.sourceforge.plantuml.Direction getDefaultDirection()>();

        return $r3;
    }

    protected net.sourceforge.plantuml.Direction getDefaultDirection()
    {
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r0;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        return null;
    }

    private net.sourceforge.plantuml.cucadiagram.IEntity getEntityStart(net.sourceforge.plantuml.statediagram.StateDiagram, java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r1;
        net.sourceforge.plantuml.statediagram.StateDiagram r2;
        net.sourceforge.plantuml.cucadiagram.IEntity $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        r2 := @parameter0: net.sourceforge.plantuml.statediagram.StateDiagram;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("[*]");

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getStart()>();

        return $r4;

     label1:
        $r3 = specialinvoke r1.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.statediagram.StateDiagram,java.lang.String)>(r2, r0);

        return $r3;
    }

    private net.sourceforge.plantuml.cucadiagram.IEntity getEntityEnd(net.sourceforge.plantuml.statediagram.StateDiagram, java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r1;
        net.sourceforge.plantuml.statediagram.StateDiagram r2;
        net.sourceforge.plantuml.cucadiagram.IEntity $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        r2 := @parameter0: net.sourceforge.plantuml.statediagram.StateDiagram;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("[*]");

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getEnd()>();

        return $r4;

     label1:
        $r3 = specialinvoke r1.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.statediagram.StateDiagram,java.lang.String)>(r2, r0);

        return $r3;
    }

    private net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.statediagram.StateDiagram, java.lang.String)
    {
        java.lang.String r0, $r7, $r10, r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        net.sourceforge.plantuml.statediagram.StateDiagram r1;
        net.sourceforge.plantuml.cucadiagram.IEntity $r2, $r6, $r8, $r9, $r11, $r12;
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r3;
        net.sourceforge.plantuml.cucadiagram.LeafType $r5;
        int $i0, $i1, $i2, $i3;
        net.sourceforge.plantuml.cucadiagram.Ident r14, r16;
        net.sourceforge.plantuml.cucadiagram.Code $r15, $r17;

        r3 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        r1 := @parameter0: net.sourceforge.plantuml.statediagram.StateDiagram;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("[H]");

        if $z0 == 0 goto label01;

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getHistorical()>();

        return $r12;

     label01:
        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("[H]");

        if $z1 == 0 goto label02;

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = $i2 - 3;

        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        $r11 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getHistorical(java.lang.String)>($r10);

        return $r11;

     label02:
        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("[H*]");

        if $z2 == 0 goto label03;

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getDeepHistory()>();

        return $r9;

     label03:
        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("[H*]");

        if $z3 == 0 goto label04;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 4;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getDeepHistory(java.lang.String)>($r7);

        return $r8;

     label04:
        $z4 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("=");

        if $z4 == 0 goto label07;

        $z7 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("=");

        if $z7 == 0 goto label07;

        r13 = specialinvoke r3.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: java.lang.String removeEquals(java.lang.String)>(r0);

        r14 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r13);

        $z8 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z8 == 0 goto label05;

        $r15 = r14;

        goto label06;

     label05:
        $r15 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r13);

     label06:
        $r5 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType SYNCHRO_BAR>;

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r14, $r15, $r5, null);

        return $r6;

     label07:
        r16 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r0);

        $z5 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z5 == 0 goto label08;

        $r17 = r16;

        goto label09;

     label08:
        $r17 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r0);

     label09:
        $z6 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean checkConcurrentStateOk(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code)>(r16, $r17);

        if $z6 != 0 goto label10;

        return null;

     label10:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r16, $r17, null, null);

        return $r2;
    }

    private java.lang.String removeEquals(java.lang.String)
    {
        boolean $z0, $z1;
        int $i0, $i1;
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        r1 := @parameter0: java.lang.String;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("=");

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        goto label1;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("=");

        if $z1 == 0 goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        goto label2;

     label3:
        return r1;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.statediagram.StateDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.statediagram.StateDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.command.CommandLinkStateCommon: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.statediagram.StateDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
