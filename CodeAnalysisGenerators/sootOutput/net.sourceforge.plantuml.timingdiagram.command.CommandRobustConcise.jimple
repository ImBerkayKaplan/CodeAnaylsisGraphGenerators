public class net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise;

        $r1 = staticinvoke <net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r6, $r13;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, $r18, $r19;
        net.sourceforge.plantuml.command.regex.RegexOptional $r4, $r11;
        net.sourceforge.plantuml.command.regex.RegexConcat $r5, $r12, $r20;

        $r0 = class "Lnet/sourceforge/plantuml/timingdiagram/command/CommandRobustConcise;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[7];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r6 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("COMPACT", "(compact)");

        $r6[0] = $r7;

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r6[1] = $r8;

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r6);

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r5);

        $r2[1] = $r4;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TYPE", "(robust|concise)");

        $r2[2] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[3] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r13 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("FULL", "[%g]([^%g]+)[%g]");

        $r13[0] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r13[1] = $r15;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("as");

        $r13[2] = $r16;

        $r17 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r13[3] = $r17;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r13);

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r12);

        $r2[4] = $r11;

        $r18 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE", "([%pLN_.@]+)");

        $r2[5] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[6] = $r19;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r20;
    }

    protected final net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.timingdiagram.TimingDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, $r3, $r4, $r9, r14;
        net.sourceforge.plantuml.timingdiagram.TimingStyle r5;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r6;
        net.sourceforge.plantuml.command.CommandExecutionResult $r7;
        net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise r12;
        net.sourceforge.plantuml.LineLocation r13;
        boolean $z0;

        r12 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise;

        r6 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r13 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COMPACT", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("CODE", 0);

        r14 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("FULL", 0);

        if r14 != null goto label1;

        r14 = r2;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("TYPE", 0);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        r5 = staticinvoke <net.sourceforge.plantuml.timingdiagram.TimingStyle: net.sourceforge.plantuml.timingdiagram.TimingStyle valueOf(java.lang.String)>($r4);

        $r9 = r14;

        if r1 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r7 = virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.command.CommandExecutionResult createRobustConcise(java.lang.String,java.lang.String,net.sourceforge.plantuml.timingdiagram.TimingStyle,boolean)>(r2, $r9, r5, $z0);

        return $r7;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.timingdiagram.TimingDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.command.CommandRobustConcise: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.timingdiagram.TimingDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
