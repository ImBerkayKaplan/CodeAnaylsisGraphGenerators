public class net.sourceforge.plantuml.ugraphic.svg.DriverImagePng extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverImagePng r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverImagePng;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.svg.DriverImagePng: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UImage, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.svg.SvgGraphics)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverImagePng r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r1;
        net.sourceforge.plantuml.ugraphic.UClip r2;
        net.sourceforge.plantuml.svg.SvgGraphics r3;
        net.sourceforge.plantuml.ugraphic.UImage r4;
        java.awt.image.BufferedImage $r5;
        double d0, d1, $d2, $d3, $d4, $d5;
        boolean $z0, $z1;
        int $i0, $i1;
        java.io.IOException $r6;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String $r11;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r12;
        net.sourceforge.plantuml.ugraphic.UParam r13;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverImagePng;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UImage;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r12 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r13 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r3 := @parameter5: net.sourceforge.plantuml.svg.SvgGraphics;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.svg.DriverImagePng: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(double,double)>(d0, d1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UImage: int getWidth()>();

        $d2 = (double) $i0;

        $d3 = d0 + $d2;

        $i1 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UImage: int getHeight()>();

        $d4 = (double) $i1;

        $d5 = d1 + $d4;

        $z1 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(double,double)>($d3, $d5);

        if $z1 != 0 goto label2;

        return;

     label2:
        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UImage: java.awt.image.BufferedImage getImage(double)>(1.0);

        virtualinvoke r3.<net.sourceforge.plantuml.svg.SvgGraphics: void svgImage(java.awt.image.BufferedImage,double,double)>($r5, d0, d1);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in svg for image ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r11);

     label5:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverImagePng r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.svg.SvgGraphics $r5;
        net.sourceforge.plantuml.ugraphic.UImage $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverImagePng;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UImage) r1;

        $r5 = (net.sourceforge.plantuml.svg.SvgGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.DriverImagePng: void draw(net.sourceforge.plantuml.ugraphic.UImage,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.svg.SvgGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
