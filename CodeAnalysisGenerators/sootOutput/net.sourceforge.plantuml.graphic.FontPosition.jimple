public final enum class net.sourceforge.plantuml.graphic.FontPosition extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.graphic.FontPosition NORMAL;
    public static final enum net.sourceforge.plantuml.graphic.FontPosition EXPOSANT;
    public static final enum net.sourceforge.plantuml.graphic.FontPosition INDICE;
    private static final net.sourceforge.plantuml.graphic.FontPosition[] $VALUES;

    public static net.sourceforge.plantuml.graphic.FontPosition[] values()
    {
        net.sourceforge.plantuml.graphic.FontPosition[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.graphic.FontPosition[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.graphic.FontPosition valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.graphic.FontPosition $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/graphic/FontPosition;", r0);

        $r2 = (net.sourceforge.plantuml.graphic.FontPosition) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.graphic.FontPosition r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.graphic.FontPosition;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public int getSpace()
    {
        net.sourceforge.plantuml.graphic.FontPosition r0, $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.FontPosition;

        $r1 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition EXPOSANT>;

        if r0 != $r1 goto label1;

        return -6;

     label1:
        $r2 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition INDICE>;

        if r0 != $r2 goto label2;

        return 3;

     label2:
        return 0;
    }

    public net.sourceforge.plantuml.ugraphic.UFont mute(net.sourceforge.plantuml.ugraphic.UFont)
    {
        net.sourceforge.plantuml.graphic.FontPosition r0, $r1;
        net.sourceforge.plantuml.ugraphic.UFont r2, $r3;
        int $i0, i1;
        float $f0;

        r0 := @this: net.sourceforge.plantuml.graphic.FontPosition;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        $r1 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition NORMAL>;

        if r0 != $r1 goto label1;

        return r2;

     label1:
        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UFont: int getSize()>();

        i1 = $i0 - 3;

        if i1 >= 2 goto label2;

        i1 = 2;

     label2:
        $f0 = (float) i1;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont withSize(float)>($f0);

        return $r3;
    }

    public java.lang.String getHtmlTag()
    {
        net.sourceforge.plantuml.graphic.FontPosition r0, $r1, $r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.FontPosition;

        $r1 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition EXPOSANT>;

        if r0 != $r1 goto label1;

        return "sup";

     label1:
        $r2 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition INDICE>;

        if r0 != $r2 goto label2;

        return "sub";

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.graphic.FontPosition $r0, $r1, $r2, $r4, $r5, $r6;
        net.sourceforge.plantuml.graphic.FontPosition[] $r3;

        $r0 = new net.sourceforge.plantuml.graphic.FontPosition;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontPosition: void <init>(java.lang.String,int)>("NORMAL", 0);

        <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition NORMAL> = $r0;

        $r1 = new net.sourceforge.plantuml.graphic.FontPosition;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.FontPosition: void <init>(java.lang.String,int)>("EXPOSANT", 1);

        <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition EXPOSANT> = $r1;

        $r2 = new net.sourceforge.plantuml.graphic.FontPosition;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.FontPosition: void <init>(java.lang.String,int)>("INDICE", 2);

        <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition INDICE> = $r2;

        $r3 = newarray (net.sourceforge.plantuml.graphic.FontPosition)[3];

        $r4 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition NORMAL>;

        $r3[0] = $r4;

        $r5 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition EXPOSANT>;

        $r3[1] = $r5;

        $r6 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition INDICE>;

        $r3[2] = $r6;

        <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition[] $VALUES> = $r3;

        return;
    }
}
