public final class net.sourceforge.plantuml.classdiagram.command.CommandLinkClass extends net.sourceforge.plantuml.command.SingleLineCommand2
{
    private static final java.lang.String SINGLE;
    private static final java.lang.String SINGLE_GUILLEMENT;
    private static final java.lang.String SINGLE2;
    private static final java.lang.String COUPLE;

    public void <init>(net.sourceforge.plantuml.UmlDiagramType)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r0;
        net.sourceforge.plantuml.UmlDiagramType r1;
        net.sourceforge.plantuml.command.regex.RegexConcat $r2;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r1 := @parameter0: net.sourceforge.plantuml.UmlDiagramType;

        $r2 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.regex.RegexConcat getRegexConcat(net.sourceforge.plantuml.UmlDiagramType)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r2);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.RegexConcat getRegexConcat(net.sourceforge.plantuml.UmlDiagramType)
    {
        java.lang.StringBuilder $r0, $r3, $r5, $r48, $r49, $r51, $r52;
        java.lang.Class $r1;
        java.lang.String $r2, $r6, $r17, $r41, $r50, $r53;
        net.sourceforge.plantuml.UmlDiagramType r4;
        net.sourceforge.plantuml.command.regex.IRegex[] $r7, $r11, $r15, $r24, $r39, $r57;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r8, $r12, $r13, $r16, $r18, $r19, $r21, $r22, $r25, $r26, $r27, $r28, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r40, $r42, $r43, $r45, $r46, $r47, $r54, $r58, $r59, $r60, $r61;
        net.sourceforge.plantuml.command.regex.RegexOptional $r9, $r20, $r29, $r35, $r55;
        net.sourceforge.plantuml.command.regex.RegexConcat $r10, $r23, $r56, $r62;
        net.sourceforge.plantuml.command.regex.RegexOr $r14, $r38;
        net.sourceforge.plantuml.graphic.color.ColorParser $r44;

        r4 := @parameter0: net.sourceforge.plantuml.UmlDiagramType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lnet/sourceforge/plantuml/classdiagram/command/CommandLinkClass;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[18];

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r7[0] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r11 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("HEADER", "@([\\d.]+)");

        $r11[0] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r11[1] = $r13;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r11);

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r10);

        $r7[1] = $r9;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r15 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r17 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getClassIdentifier()>();

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ENT1", $r17);

        $r15[0] = $r16;

        $r18 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("COUPLE1", "\\([%s]*((?:[.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*|[%g][.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*[%g]))[%s]*,[%s]*((?:[.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*|[%g][.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*[%g]))[%s]*\\)");

        $r15[1] = $r18;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r15);

        $r7[2] = $r14;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r7[3] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r21 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r21.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("FIRST_LABEL", "[%g]([^%g]+)[%g]");

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r21);

        $r7[4] = $r20;

        $r22 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r7[5] = $r22;

        $r23 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r24 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[8];

        $r25 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r25.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_HEAD1", "([%s]+[ox]|[)#\\[<*+^}]|\\<_|\\<\\|[\\:\\|]|[<\\[]\\||\\}o|\\}\\||\\|o|\\|\\|)?");

        $r24[0] = $r25;

        $r26 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r26.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODY1", "([-=.]+)");

        $r24[1] = $r26;

        $r27 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r27.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE1", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r24[2] = $r27;

        $r28 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r28.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_DIRECTION", "(left|right|up|down|le?|ri?|up?|do?)?");

        $r24[3] = $r28;

        $r29 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r30 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r30.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("INSIDE", "(0|\\(0\\)|\\(0|0\\))(?=[-=.~])");

        specialinvoke $r29.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r30);

        $r24[4] = $r29;

        $r31 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r31.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE2", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r24[5] = $r31;

        $r32 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r32.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODY2", "([-=.]*)");

        $r24[6] = $r32;

        $r33 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r33.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_HEAD2", "([ox][%s]+|:\\>\\>?|_\\>|[(#\\]>*+^\\{]|[\\|\\:]\\|\\>|\\|[>\\]]|o\\{|\\|\\{|o\\||\\|\\|)?");

        $r24[7] = $r33;

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r24);

        $r7[6] = $r23;

        $r34 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r7[7] = $r34;

        $r35 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r36 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r36.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("SECOND_LABEL", "[%g]([^%g]+)[%g]");

        specialinvoke $r35.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r36);

        $r7[8] = $r35;

        $r37 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r7[9] = $r37;

        $r38 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r39 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r40 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r41 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getClassIdentifier()>();

        specialinvoke $r40.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ENT2", $r41);

        $r39[0] = $r40;

        $r42 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r42.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("COUPLE2", "\\([%s]*((?:[.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*|[%g][.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*[%g]))[%s]*,[%s]*((?:[.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*|[%g][.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*[%g]))[%s]*\\)");

        $r39[1] = $r42;

        specialinvoke $r38.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r39);

        $r7[10] = $r38;

        $r43 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r7[11] = $r43;

        $r44 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r45 = virtualinvoke $r44.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r7[12] = $r45;

        $r46 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r7[13] = $r46;

        $r47 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r50 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r53);

        $r7[14] = $r47;

        $r54 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r7[15] = $r54;

        $r55 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r56 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r57 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r58 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r58.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(":");

        $r57[0] = $r58;

        $r59 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r57[1] = $r59;

        $r60 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r60.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL_LINK", "(.+)");

        $r57[2] = $r60;

        specialinvoke $r56.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r57);

        specialinvoke $r55.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r56);

        $r7[16] = $r55;

        $r61 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r7[17] = $r61;

        $r62 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r6, $r7);

        return $r62;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorParser color()
    {
        net.sourceforge.plantuml.graphic.color.ColorType $r0;
        net.sourceforge.plantuml.graphic.color.ColorParser $r1;

        $r0 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.ColorParser simpleColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r0);

        return $r1;
    }

    private static java.lang.String getClassIdentifier()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r2 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getSeparator()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?[%pLN_$]+(?:");

        $r5 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getSeparator()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[%pLN_$]+)*|[%g][^%g]+[%g])");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static java.lang.String getSeparator()
    {
        return "(?:\\.|::|\\\\|\\\\\\\\)";
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String $r1, r2, $r3, r4, $r7, $r10, $r23, $r24, $r25, $r26, $r29, $r35, $r38, $r41, $r42, r57, r58, $r70, $r71;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r5;
        net.sourceforge.plantuml.cucadiagram.Ident $r6, r8, $r9, r11, $r43, $r44, $r45, $r46, r51, r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r12;
        net.sourceforge.plantuml.cucadiagram.Code $r13, $r14, $r53, r54, $r55, r56;
        net.sourceforge.plantuml.cucadiagram.IEntity r15, r16;
        net.sourceforge.plantuml.cucadiagram.LinkType r17;
        net.sourceforge.plantuml.Direction r18, $r30, $r32, $r40, $r59;
        net.sourceforge.plantuml.descdiagram.command.Labels $r19;
        net.sourceforge.plantuml.cucadiagram.Link $r21, r60;
        net.sourceforge.plantuml.cucadiagram.Display $r22;
        net.sourceforge.plantuml.ISkinParam $r27, $r34, $r63, $r65, $r68;
        net.sourceforge.plantuml.style.StyleBuilder $r28;
        net.sourceforge.plantuml.LineLocation r31;
        net.sourceforge.plantuml.UrlBuilder $r33;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r36;
        net.sourceforge.plantuml.Url r39;
        net.sourceforge.plantuml.command.CommandExecutionResult $r47, $r48, $r49, $r50, $r72;
        int i0;
        net.sourceforge.plantuml.cucadiagram.LinkArrow $r61;
        net.sourceforge.plantuml.graphic.color.ColorParser $r62;
        net.sourceforge.plantuml.api.ThemeStyle $r64, $r69;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r66;
        net.sourceforge.plantuml.graphic.color.Colors $r67;

        r12 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r5 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r31 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 0);

        r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r1, "\"");

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 0);

        r4 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r3, "\"");

        if r2 != null goto label01;

        if r4 != null goto label01;

        $r50 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial3(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r5, r0);

        return $r50;

     label01:
        if r2 != null goto label02;

        $r49 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial1(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r5, r0);

        return $r49;

     label02:
        if r4 != null goto label03;

        $r48 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial2(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r5, r0);

        return $r48;

     label03:
        r51 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdentSpecial(java.lang.String)>(r2);

        r52 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdentSpecial(java.lang.String)>(r4);

        $r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident empty()>();

        $r7 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: java.lang.String getNamespaceSeparator()>();

        r8 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident add(java.lang.String,java.lang.String)>(r2, $r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident empty()>();

        $r10 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: java.lang.String getNamespaceSeparator()>();

        r11 = virtualinvoke $r9.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident add(java.lang.String,java.lang.String)>(r4, $r10);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z0 == 0 goto label04;

        $r53 = r51;

        goto label05;

     label04:
        $r53 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

     label05:
        r54 = $r53;

        $z1 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z1 == 0 goto label06;

        $r55 = r52;

        goto label07;

     label06:
        $r55 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r4);

     label07:
        r56 = $r55;

        $z2 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: boolean isGroupButNotTheCurrentGroup(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r54, r51);

        if $z2 == 0 goto label08;

        $z5 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: boolean isGroupButNotTheCurrentGroup(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, $r55, r52);

        if $z5 == 0 goto label08;

        $r47 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.CommandExecutionResult executePackageLink(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r5, r0);

        return $r47;

     label08:
        r57 = null;

        r58 = null;

        $z3 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z3 == 0 goto label12;

        $r41 = "::";

        $r42 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: java.lang.String getNamespaceSeparator()>();

        $z4 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>($r42);

        if $z4 == 0 goto label10;

        $r45 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdentSpecial(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r51);

        if $r45 == null goto label09;

        r57 = virtualinvoke r51.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        r51 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdentSpecial(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r51);

        r54 = r51;

     label09:
        $r46 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdentSpecial(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r52);

        if $r46 == null goto label14;

        r58 = virtualinvoke r52.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        r52 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdentSpecial(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r52);

        r56 = r51;

        goto label14;

     label10:
        $r43 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdent(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r51);

        if $r43 == null goto label11;

        r57 = virtualinvoke r51.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getPortMember()>();

        r51 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdent(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r51);

        r54 = r51;

     label11:
        $r44 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdent(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r52);

        if $r44 == null goto label14;

        r58 = virtualinvoke r52.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getPortMember()>();

        r52 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdent(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r52);

        r56 = r52;

        goto label14;

     label12:
        $r13 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Code removeMemberPartLegacy1972(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r51);

        if $r13 == null goto label13;

        r57 = virtualinvoke r51.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getPortMember()>();

        r54 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Code removeMemberPartLegacy1972(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r51);

        r51 = virtualinvoke r51.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPart()>();

     label13:
        $r14 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Code removeMemberPartLegacy1972(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r52);

        if $r14 == null goto label14;

        r58 = virtualinvoke r52.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getPortMember()>();

        r56 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.Code removeMemberPartLegacy1972(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r52);

        r52 = virtualinvoke r52.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPart()>();

     label14:
        r15 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r54, r51, r8);

        r16 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Ident)>(r5, r56, r52, r11);

        r17 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        r18 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.Direction getDirection(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r59 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r18 == $r59 goto label15;

        $r40 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if r18 != $r40 goto label16;

     label15:
        i0 = 1;

        goto label17;

     label16:
        i0 = specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: int getQueueLength(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

     label17:
        $r19 = new net.sourceforge.plantuml.descdiagram.command.Labels;

        specialinvoke $r19.<net.sourceforge.plantuml.descdiagram.command.Labels: void <init>(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r21 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r22 = virtualinvoke $r19.<net.sourceforge.plantuml.descdiagram.command.Labels: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r23 = virtualinvoke $r19.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String getFirstLabel()>();

        $r24 = virtualinvoke $r19.<net.sourceforge.plantuml.descdiagram.command.Labels: java.lang.String getSecondLabel()>();

        $r25 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: java.lang.String getLabeldistance()>();

        $r26 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: java.lang.String getLabelangle()>();

        $r27 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r21.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.style.StyleBuilder)>(r15, r16, r17, $r22, i0, $r23, $r24, $r25, $r26, $r28);

        r60 = $r21;

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        if $r29 == null goto label18;

        $r33 = new net.sourceforge.plantuml.UrlBuilder;

        $r34 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r35 = interfaceinvoke $r34.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r36 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r33.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r35, $r36);

        $r38 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        r39 = virtualinvoke $r33.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>($r38);

        virtualinvoke $r21.<net.sourceforge.plantuml.cucadiagram.Link: void setUrl(net.sourceforge.plantuml.Url)>(r39);

     label18:
        virtualinvoke $r21.<net.sourceforge.plantuml.cucadiagram.Link: void setPortMembers(java.lang.String,java.lang.String)>(r57, r58);

        $r30 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r18 == $r30 goto label19;

        $r32 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction UP>;

        if r18 != $r32 goto label20;

     label19:
        r60 = virtualinvoke $r21.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Link getInv()>();

     label20:
        $r61 = virtualinvoke $r19.<net.sourceforge.plantuml.descdiagram.command.Labels: net.sourceforge.plantuml.cucadiagram.LinkArrow getLinkArrow()>();

        virtualinvoke r60.<net.sourceforge.plantuml.cucadiagram.Link: void setLinkArrow(net.sourceforge.plantuml.cucadiagram.LinkArrow)>($r61);

        $r62 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r63 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r64 = interfaceinvoke $r63.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r65 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r66 = interfaceinvoke $r65.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r67 = virtualinvoke $r62.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r64, r0, $r66);

        virtualinvoke r60.<net.sourceforge.plantuml.cucadiagram.Link: void setColors(net.sourceforge.plantuml.graphic.color.Colors)>($r67);

        $r68 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r69 = interfaceinvoke $r68.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r70 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_STYLE", 0);

        virtualinvoke r60.<net.sourceforge.plantuml.cucadiagram.Link: void applyStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r69, $r70);

        virtualinvoke r60.<net.sourceforge.plantuml.cucadiagram.Link: void setCodeLine(net.sourceforge.plantuml.LineLocation)>(r31);

        $r71 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("HEADER", 0);

        specialinvoke r12.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: void addLink(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Link,java.lang.String)>(r5, r60, $r71);

        $r72 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r72;
    }

    private net.sourceforge.plantuml.cucadiagram.IEntity getFoo1(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r0;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r1;
        net.sourceforge.plantuml.cucadiagram.Code r2;
        net.sourceforge.plantuml.cucadiagram.Ident r3, r5;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.IEntity $r4;
        int $i0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r7, $r8;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r9;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r1 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Ident;

        r5 := @parameter3: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: boolean isGroupButNotTheCurrentGroup(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Ident)>(r1, r2, r3);

        if $z0 == 0 goto label2;

        $z2 = virtualinvoke r1.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z2 == 0 goto label1;

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

        return $r8;

     label1:
        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r2);

        return $r7;

     label2:
        $z1 = virtualinvoke r1.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z1 == 0 goto label5;

        $i0 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Ident: int size()>();

        if $i0 != 1 goto label3;

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

        goto label4;

     label3:
        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafStrict(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

     label4:
        if $r9 == null goto label5;

        return $r9;

     label5:
        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r3, r2, null, null);

        return $r4;
    }

    private boolean isGroupButNotTheCurrentGroup(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1, $r5;
        java.lang.String $r2, $r4, $r6, $r7;
        net.sourceforge.plantuml.cucadiagram.Code r3;
        net.sourceforge.plantuml.cucadiagram.Ident r8;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r9;

        r9 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r8 := @parameter2: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z0 == 0 goto label2;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.cucadiagram.IGroup: java.lang.String getCodeGetName()>();

        $r7 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label1;

        return 0;

     label1:
        $z4 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean isGroupVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r8);

        return $z4;

     label2:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IGroup: java.lang.String getCodeGetName()>();

        $r4 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        return 0;

     label3:
        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean isGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r3);

        return $z2;
    }

    private net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdentSpecial(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, r2;
        boolean $z0, $z1;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r3;

        r3 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident parent()>();

        if r2 != null goto label2;

        return null;

     label2:
        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r2);

        if $z1 != 0 goto label3;

        return null;

     label3:
        return r2;
    }

    private net.sourceforge.plantuml.cucadiagram.Ident removeMemberPartIdent(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, r2;
        boolean $z0, $z1;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r3;

        r3 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPart()>();

        if r2 != null goto label2;

        return null;

     label2:
        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r2);

        if $z1 != 0 goto label3;

        return null;

     label3:
        return r2;
    }

    private net.sourceforge.plantuml.cucadiagram.Code removeMemberPartLegacy1972(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, r2;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Code r3;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r4;

        r4 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident removeMemberPart()>();

        if r2 != null goto label2;

        return null;

     label2:
        r3 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Code toCode(net.sourceforge.plantuml.cucadiagram.CucaDiagram)>(r0);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r3);

        if $z1 != 0 goto label3;

        return null;

     label3:
        return r3;
    }

    private void addLink(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.cucadiagram.Link, java.lang.String)
    {
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Link r1;
        java.lang.String r2;
        double $d0;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r3;

        r3 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Link;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>(r1);

        if r2 != null goto label1;

        goto label2;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r2);

        virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Link: void setWeight(double)>($d0);

     label2:
        return;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executePackageLink(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String $r1, r2, $r3, r4, $r14, r16, r17, $r19, $r20, $r32, $r33;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Code $r6, $r8;
        net.sourceforge.plantuml.cucadiagram.IGroup r7, r9, $r38, $r39;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r10;
        net.sourceforge.plantuml.cucadiagram.LinkType r11;
        net.sourceforge.plantuml.Direction r12, $r13, $r35;
        net.sourceforge.plantuml.cucadiagram.Display r15;
        net.sourceforge.plantuml.cucadiagram.Link $r18;
        net.sourceforge.plantuml.ISkinParam $r21, $r25, $r27, $r30;
        net.sourceforge.plantuml.style.StyleBuilder $r22;
        net.sourceforge.plantuml.graphic.color.ColorParser $r24;
        net.sourceforge.plantuml.api.ThemeStyle $r26, $r31;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r28;
        net.sourceforge.plantuml.graphic.color.Colors $r29;
        net.sourceforge.plantuml.command.CommandExecutionResult $r34;
        net.sourceforge.plantuml.cucadiagram.Ident $r36, $r37;
        int i0;

        r10 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r5 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 0);

        r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r1, "\"");

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 0);

        r4 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r3, "\"");

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r37 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        $r38 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>($r37);

        goto label2;

     label1:
        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

        $r38 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>($r6);

     label2:
        r7 = $r38;

        $z1 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z1 == 0 goto label3;

        $r36 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r4);

        $r39 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>($r36);

        goto label4;

     label3:
        $r8 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r4);

        $r39 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>($r8);

     label4:
        r9 = $r39;

        r11 = specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        r12 = specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.Direction getDirection(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r13 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r12 == $r13 goto label5;

        $r35 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if r12 != $r35 goto label6;

     label5:
        i0 = 1;

        goto label7;

     label6:
        i0 = specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: int getQueueLength(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

     label7:
        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL_LINK", 0);

        r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r14);

        r16 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("FIRST_LABEL", 0);

        r17 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("SECOND_LABEL", 0);

        $r18 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r19 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: java.lang.String getLabeldistance()>();

        $r20 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: java.lang.String getLabelangle()>();

        $r21 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r18.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.style.StyleBuilder)>(r7, r9, r11, r15, i0, r16, r17, $r19, $r20, $r22);

        $r24 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r25 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r27 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r29 = virtualinvoke $r24.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r26, r0, $r28);

        virtualinvoke $r18.<net.sourceforge.plantuml.cucadiagram.Link: void setColors(net.sourceforge.plantuml.graphic.color.Colors)>($r29);

        virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: void resetPragmaLabel()>();

        $r30 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r31 = interfaceinvoke $r30.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_STYLE", 0);

        virtualinvoke $r18.<net.sourceforge.plantuml.cucadiagram.Link: void applyStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r31, $r32);

        $r33 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("HEADER", 0);

        specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: void addLink(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.cucadiagram.Link,java.lang.String)>(r5, $r18, $r33);

        $r34 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r34;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial1(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r0;
        boolean $z0, $z1, $z2, z3;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, r3, $r4, r5, $r8, r9, $r15, $r22, $r27;
        net.sourceforge.plantuml.cucadiagram.Code r6, r7, r10;
        net.sourceforge.plantuml.cucadiagram.Ident $r11;
        net.sourceforge.plantuml.cucadiagram.IEntity r12;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r13;
        net.sourceforge.plantuml.cucadiagram.LinkType r14;
        net.sourceforge.plantuml.cucadiagram.Display r16;
        net.sourceforge.plantuml.command.CommandExecutionResult $r17, $r18, $r23, $r28, $r29;
        java.lang.StringBuilder $r19, $r20, $r21, $r24, $r25, $r26;

        r13 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r29 = specialinvoke r13.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial1972Ident1(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r0, r1);

        return $r29;

     label1:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE1", 0);

        r3 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r2);

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE1", 1);

        r5 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r4);

        r6 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r3);

        r7 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r5);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r6);

        if $z1 != 0 goto label2;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r27);

        return $r28;

     label2:
        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r7);

        if $z2 != 0 goto label3;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r22);

        return $r23;

     label3:
        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 0);

        r9 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r8, "\"");

        r10 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r9);

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r9);

        r12 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>($r11, r10, null, null);

        r14 = specialinvoke r13.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        $r15 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL_LINK", 0);

        r16 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r15);

        z3 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean associationClass(int,java.lang.String,java.lang.String,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display)>(1, r3, r5, r12, r14, r16);

        if z3 != 0 goto label4;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot have more than 2 assocications");

        return $r18;

     label4:
        $r17 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r17;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial1972Ident1(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, $r6, r7, $r12, $r18, $r20, $r24, $r26;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r3;
        net.sourceforge.plantuml.cucadiagram.Ident r4, r5, r8;
        boolean $z0, $z1, z2;
        net.sourceforge.plantuml.cucadiagram.IEntity r9;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r10;
        net.sourceforge.plantuml.cucadiagram.LinkType r11;
        net.sourceforge.plantuml.cucadiagram.Display r13;
        net.sourceforge.plantuml.command.CommandExecutionResult $r14, $r15, $r21, $r27;
        java.lang.StringBuilder $r16, $r17, $r19, $r22, $r23, $r25;

        r10 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r3 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE1", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE1", 1);

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        r5 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r4);

        if $z0 != 0 goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r24 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r26);

        return $r27;

     label1:
        $z1 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r5);

        if $z1 != 0 goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r18 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r20);

        return $r21;

     label2:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT2", 0);

        r7 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r6, "\"");

        r8 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r7);

        r9 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r8, r8, null, null);

        r11 = specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL_LINK", 0);

        r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r12);

        z2 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean associationClass(int,java.lang.String,java.lang.String,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display)>(1, r1, r2, r9, r11, r13);

        if z2 != 0 goto label3;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot have more than 2 assocications");

        return $r15;

     label3:
        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r14;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial1972Ident2(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, $r6, r7, $r12, $r18, $r20, $r24, $r26;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r3;
        net.sourceforge.plantuml.cucadiagram.Ident r4, r5, r8;
        boolean $z0, $z1, z2;
        net.sourceforge.plantuml.cucadiagram.IEntity r9;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r10;
        net.sourceforge.plantuml.cucadiagram.LinkType r11;
        net.sourceforge.plantuml.cucadiagram.Display r13;
        net.sourceforge.plantuml.command.CommandExecutionResult $r14, $r15, $r21, $r27;
        java.lang.StringBuilder $r16, $r17, $r19, $r22, $r23, $r25;

        r10 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r3 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE2", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE2", 1);

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        r5 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r4);

        if $z0 != 0 goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r24 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        $r27 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r26);

        return $r27;

     label1:
        $z1 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r5);

        if $z1 != 0 goto label2;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r18 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r20);

        return $r21;

     label2:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 0);

        r7 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r6, "\"");

        r8 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r7);

        r9 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r8, r8, null, null);

        r11 = specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL_LINK", 0);

        r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r12);

        z2 = virtualinvoke r3.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean associationClass(int,java.lang.String,java.lang.String,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display)>(2, r1, r2, r9, r11, r13);

        if z2 != 0 goto label3;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot have more than 2 assocications");

        return $r15;

     label3:
        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r14;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial1972Ident3(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, r3, r4, $r12, $r17, $r19, $r23, $r25, $r29, $r31, $r35, $r37;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r5;
        net.sourceforge.plantuml.cucadiagram.Ident r6, r7, r8, r9;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r10;
        net.sourceforge.plantuml.cucadiagram.LinkType r11;
        net.sourceforge.plantuml.cucadiagram.Display r13;
        net.sourceforge.plantuml.command.CommandExecutionResult $r14, $r20, $r26, $r32, $r38;
        java.lang.StringBuilder $r15, $r16, $r18, $r21, $r22, $r24, $r27, $r28, $r30, $r33, $r34, $r36;

        r10 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r5 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE1", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE1", 1);

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE2", 0);

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE2", 1);

        r6 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        r7 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        r8 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r3);

        r9 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r4);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r6);

        if $z0 != 0 goto label1;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r35 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r38 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r37);

        return $r38;

     label1:
        $z1 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r7);

        if $z1 != 0 goto label2;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r29 = virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r32 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r31);

        return $r32;

     label2:
        $z2 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r8);

        if $z2 != 0 goto label3;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r23 = virtualinvoke r8.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r25);

        return $r26;

     label3:
        $z3 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r9);

        if $z3 != 0 goto label4;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r17 = virtualinvoke r9.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getName()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r19);

        return $r20;

     label4:
        r11 = specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r0);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL_LINK", 0);

        r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r12);

        $r14 = virtualinvoke r5.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.command.CommandExecutionResult associationClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display)>(r1, r2, r3, r4, r11, r13);

        return $r14;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial3(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String r2, r3, r4, r5, $r12, $r18, $r23, $r28, $r33;
        net.sourceforge.plantuml.cucadiagram.Code r6, r7, r8, r9;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r10;
        net.sourceforge.plantuml.cucadiagram.LinkType r11;
        net.sourceforge.plantuml.cucadiagram.Display r13;
        net.sourceforge.plantuml.command.CommandExecutionResult $r14, $r19, $r24, $r29, $r34, $r35;
        java.lang.StringBuilder $r15, $r16, $r17, $r20, $r21, $r22, $r25, $r26, $r27, $r30, $r31, $r32;

        r10 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r35 = specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial1972Ident3(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r0, r1);

        return $r35;

     label1:
        r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE1", 0);

        r3 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE1", 1);

        r4 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE2", 0);

        r5 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE2", 1);

        r6 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

        r7 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r3);

        r8 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r4);

        r9 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r5);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r6);

        if $z1 != 0 goto label2;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r33);

        return $r34;

     label2:
        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r7);

        if $z2 != 0 goto label3;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r29 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r28);

        return $r29;

     label3:
        $z3 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r8);

        if $z3 != 0 goto label4;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        $r24 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r23);

        return $r24;

     label4:
        $z4 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r9);

        if $z4 != 0 goto label5;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r9);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r18);

        return $r19;

     label5:
        r11 = specialinvoke r10.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL_LINK", 0);

        r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r12);

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.command.CommandExecutionResult associationClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display)>(r2, r3, r4, r5, r11, r13);

        return $r14;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial2(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram r0;
        boolean $z0, $z1, $z2, z3;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String r2, r3, $r6, r7, $r13, $r20, $r25;
        net.sourceforge.plantuml.cucadiagram.Code r4, r5, r8;
        net.sourceforge.plantuml.cucadiagram.Ident $r9;
        net.sourceforge.plantuml.cucadiagram.IEntity r10;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r11;
        net.sourceforge.plantuml.cucadiagram.LinkType r12;
        net.sourceforge.plantuml.cucadiagram.Display r14;
        net.sourceforge.plantuml.command.CommandExecutionResult $r15, $r16, $r21, $r26, $r27;
        java.lang.StringBuilder $r17, $r18, $r19, $r22, $r23, $r24;

        r11 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r27 = specialinvoke r11.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.CommandExecutionResult executeArgSpecial1972Ident2(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r0, r1);

        return $r27;

     label1:
        r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE2", 0);

        r3 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COUPLE2", 1);

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r3);

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r4);

        if $z1 != 0 goto label2;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r25);

        return $r26;

     label2:
        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r5);

        if $z2 != 0 goto label3;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No class ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r20);

        return $r21;

     label3:
        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENT1", 0);

        r7 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r6, "\"");

        r8 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r7);

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r7);

        r10 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>($r9, r8, null, null);

        r12 = specialinvoke r11.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        $r13 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL_LINK", 0);

        r14 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r13);

        z3 = virtualinvoke r0.<net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram: boolean associationClass(int,java.lang.String,java.lang.String,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display)>(2, r2, r3, r10, r12, r14);

        if z3 != 0 goto label4;

        $r16 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot have more than 2 assocications");

        return $r16;

     label4:
        $r15 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r15;
    }

    private net.sourceforge.plantuml.cucadiagram.LinkDecor getDecors1(java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, r35, r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r34;

        r34 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r35 := @parameter0: java.lang.String;

        if r35 != null goto label01;

        $r33 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        return $r33;

     label01:
        r36 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>(r35);

        $r0 = "<|";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z0 == 0 goto label02;

        $r32 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor EXTENDS>;

        return $r32;

     label02:
        $r1 = "<|:";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z1 == 0 goto label03;

        $r31 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor DEFINEDBY>;

        return $r31;

     label03:
        $r2 = "<||";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z2 == 0 goto label04;

        $r30 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor REDEFINES>;

        return $r30;

     label04:
        $r3 = "}";

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z3 == 0 goto label05;

        $r29 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CROWFOOT>;

        return $r29;

     label05:
        $r4 = "}o";

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z4 == 0 goto label06;

        $r28 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_CROWFOOT>;

        return $r28;

     label06:
        $r5 = "}|";

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z5 == 0 goto label07;

        $r27 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor LINE_CROWFOOT>;

        return $r27;

     label07:
        $r6 = "|o";

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z6 == 0 goto label08;

        $r26 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_LINE>;

        return $r26;

     label08:
        $r7 = "||";

        $z7 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z7 == 0 goto label09;

        $r25 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor DOUBLE_LINE>;

        return $r25;

     label09:
        $r8 = "<";

        $z8 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z8 == 0 goto label10;

        $r24 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW>;

        return $r24;

     label10:
        $r9 = "^";

        $z9 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z9 == 0 goto label11;

        $r23 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor EXTENDS>;

        return $r23;

     label11:
        $r10 = "+";

        $z10 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z10 == 0 goto label12;

        $r22 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor PLUS>;

        return $r22;

     label12:
        $r11 = "o";

        $z11 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z11 == 0 goto label13;

        $r21 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor AGREGATION>;

        return $r21;

     label13:
        $r12 = "x";

        $z12 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z12 == 0 goto label14;

        $r20 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NOT_NAVIGABLE>;

        return $r20;

     label14:
        $r13 = "*";

        $z13 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z13 == 0 goto label15;

        $r19 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor COMPOSITION>;

        return $r19;

     label15:
        $r14 = "#";

        $z14 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z14 == 0 goto label16;

        $r18 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor SQUARE>;

        return $r18;

     label16:
        $r15 = ")";

        $z15 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z15 == 0 goto label17;

        $r17 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor PARENTHESIS>;

        return $r17;

     label17:
        $r16 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        return $r16;
    }

    private net.sourceforge.plantuml.cucadiagram.LinkDecor getDecors2(java.lang.String)
    {
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, r35, r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r34;

        r34 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r35 := @parameter0: java.lang.String;

        if r35 != null goto label01;

        $r33 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        return $r33;

     label01:
        r36 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>(r35);

        $r0 = "|>";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z0 == 0 goto label02;

        $r32 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor EXTENDS>;

        return $r32;

     label02:
        $r1 = ":|>";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z1 == 0 goto label03;

        $r31 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor DEFINEDBY>;

        return $r31;

     label03:
        $r2 = "||>";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z2 == 0 goto label04;

        $r30 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor REDEFINES>;

        return $r30;

     label04:
        $r3 = ">";

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z3 == 0 goto label05;

        $r29 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW>;

        return $r29;

     label05:
        $r4 = "{";

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z4 == 0 goto label06;

        $r28 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CROWFOOT>;

        return $r28;

     label06:
        $r5 = "o{";

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z5 == 0 goto label07;

        $r27 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_CROWFOOT>;

        return $r27;

     label07:
        $r6 = "|{";

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z6 == 0 goto label08;

        $r26 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor LINE_CROWFOOT>;

        return $r26;

     label08:
        $r7 = "o|";

        $z7 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z7 == 0 goto label09;

        $r25 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor CIRCLE_LINE>;

        return $r25;

     label09:
        $r8 = "||";

        $z8 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z8 == 0 goto label10;

        $r24 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor DOUBLE_LINE>;

        return $r24;

     label10:
        $r9 = "^";

        $z9 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z9 == 0 goto label11;

        $r23 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor EXTENDS>;

        return $r23;

     label11:
        $r10 = "+";

        $z10 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z10 == 0 goto label12;

        $r22 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor PLUS>;

        return $r22;

     label12:
        $r11 = "o";

        $z11 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z11 == 0 goto label13;

        $r21 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor AGREGATION>;

        return $r21;

     label13:
        $r12 = "x";

        $z12 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z12 == 0 goto label14;

        $r20 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NOT_NAVIGABLE>;

        return $r20;

     label14:
        $r13 = "*";

        $z13 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z13 == 0 goto label15;

        $r19 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor COMPOSITION>;

        return $r19;

     label15:
        $r14 = "#";

        $z14 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z14 == 0 goto label16;

        $r18 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor SQUARE>;

        return $r18;

     label16:
        $r15 = "(";

        $z15 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>(r36);

        if $z15 == 0 goto label17;

        $r17 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor PARENTHESIS>;

        return $r17;

     label17:
        $r16 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        return $r16;
    }

    private net.sourceforge.plantuml.cucadiagram.LinkType getLinkType(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, $r4, $r7, r8, $r9, $r10, $r11, $r12, $r14;
        net.sourceforge.plantuml.cucadiagram.LinkDecor r3, r5;
        net.sourceforge.plantuml.cucadiagram.LinkType $r6, r13;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getArrowHead1(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        r3 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecors1(java.lang.String)>($r2);

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getArrowHead2(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        r5 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecors2(java.lang.String)>($r4);

        $r6 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>(r5, r3);

        r13 = $r6;

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY1", 0);

        $z0 = virtualinvoke $r7.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 != 0 goto label1;

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY2", 0);

        $z4 = virtualinvoke $r12.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z4 == 0 goto label2;

     label1:
        r13 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goDashed()>();

     label2:
        r8 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("INSIDE", 0);

        $r14 = "0";

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z5 == 0 goto label3;

        r13 = virtualinvoke r13.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withMiddleCircle()>();

        goto label6;

     label3:
        $r9 = "0)";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label4;

        r13 = virtualinvoke r13.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withMiddleCircleCircled1()>();

        goto label6;

     label4:
        $r10 = "(0";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z2 == 0 goto label5;

        r13 = virtualinvoke r13.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withMiddleCircleCircled2()>();

        goto label6;

     label5:
        $r11 = "(0)";

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        if $z3 == 0 goto label6;

        r13 = virtualinvoke r13.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withMiddleCircleCircled()>();

     label6:
        return r13;
    }

    private int getQueueLength(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        int $i0;
        java.lang.String r2, r3;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getFullArrow(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[^-.=]", "");

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        return $i0;
    }

    private net.sourceforge.plantuml.Direction getDirection(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        boolean $z0, $z1;
        net.sourceforge.plantuml.Direction r2;
        int $i0, $i1;
        java.lang.String r3, r4;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getFullArrow(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[^-.=\\w]", "");

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("o");

        if $z0 == 0 goto label1;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        $z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("o");

        if $z1 == 0 goto label2;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label2:
        r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: net.sourceforge.plantuml.Direction getQueueDirection(java.lang.String)>(r4);

        return r2;
    }

    private java.lang.String getArrowHead1(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getArrowHead(net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r1, "ARROW_HEAD1");

        return $r2;
    }

    private java.lang.String getArrowHead2(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getArrowHead(net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r1, "ARROW_HEAD2");

        return $r2;
    }

    private java.lang.String getArrowHead(net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, $r2, $r3;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r4;

        r4 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>(r1, 0);

        $r3 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r2);

        return $r3;
    }

    private java.lang.String getFullArrow(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        java.lang.StringBuilder $r0, $r4, $r7, $r10, $r13, $r15;
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r1;
        net.sourceforge.plantuml.command.regex.RegexResult r2;
        java.lang.String $r3, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r16;

        r1 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r2 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = specialinvoke r1.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getArrowHead1(net.sourceforge.plantuml.command.regex.RegexResult)>(r2);

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY1", 0);

        $r6 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r5);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_DIRECTION", 0);

        $r9 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r8);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY2", 0);

        $r12 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = specialinvoke r1.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String getArrowHead2(net.sourceforge.plantuml.command.regex.RegexResult)>(r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public static java.lang.String notNull(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return "";

     label1:
        return r0;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.classdiagram.command.CommandLinkClass r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandLinkClass;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.objectdiagram.AbstractClassOrObjectDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String COUPLE> = "\\([%s]*((?:[.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*|[%g][.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*[%g]))[%s]*,[%s]*((?:[.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*|[%g][.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*[%g]))[%s]*\\)";

        <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String SINGLE2> = "(?:[.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*|[%g][.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*[%g])";

        <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String SINGLE_GUILLEMENT> = "[%g][.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*[%g]";

        <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String SINGLE> = "[.\\\\]{0,2}[%pLN_]+(?:[.\\\\]{1,2}[%pLN_]+)*";

        return;
    }
}
