public abstract class net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow extends net.sourceforge.plantuml.skin.AbstractTextualComponent implements net.sourceforge.plantuml.skin.ArrowComponent
{
    private final int arrowDeltaX;
    private final int arrowDeltaY;
    private final net.sourceforge.plantuml.ugraphic.color.HColor foregroundColor;
    private final net.sourceforge.plantuml.skin.ArrowConfiguration arrowConfiguration;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.skin.ArrowConfiguration, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.LineBreakStrategy)
    {
        net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.LineBreakStrategy r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5;
        net.sourceforge.plantuml.ISkinSimple r6;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.color.HColor r7, $r13;
        net.sourceforge.plantuml.skin.ArrowConfiguration r8, $r15;
        net.sourceforge.plantuml.style.PName $r9;
        net.sourceforge.plantuml.style.Value $r10;
        net.sourceforge.plantuml.api.ThemeStyle $r11;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r12;
        net.sourceforge.plantuml.ugraphic.UStroke r14;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r7 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r8 := @parameter4: net.sourceforge.plantuml.skin.ArrowConfiguration;

        r6 := @parameter5: net.sourceforge.plantuml.ISkinSimple;

        r5 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r2 := @parameter7: net.sourceforge.plantuml.LineBreakStrategy;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r2, r3, r4, r5, 7, 7, 1, r6, 0, null, null);

        r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: int arrowDeltaY> = 4;

        r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: int arrowDeltaX> = 10;

        r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: int arrowDeltaX> = 10;

        r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: int arrowDeltaY> = 4;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r9 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r9);

        $r11 = interfaceinvoke r6.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r13 = interfaceinvoke $r10.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r11, $r12);

        r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColor foregroundColor> = $r13;

        r14 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d0 = virtualinvoke r14.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r15 = virtualinvoke r8.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withThickness(double)>($d0);

        r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration arrowConfiguration> = $r15;

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColor foregroundColor> = r7;

        r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration arrowConfiguration> = r8;

     label2:
        return;
    }

    protected final net.sourceforge.plantuml.graphic.TextBlock getTextBlock()
    {
        net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow r0;
        net.sourceforge.plantuml.ISkinSimple $r1, $r5;
        boolean $z0;
        net.sourceforge.plantuml.graphic.TextBlock $r3, $r4;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.skin.Padder $r7;

        r0 := @this: net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.ISkinSimple getISkinSimple()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.ISkinParam;

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.ISkinSimple getISkinSimple()>();

        $r6 = (net.sourceforge.plantuml.ISkinParam) $r5;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.skin.Padder sequenceDiagramPadder()>();

        goto label2;

     label1:
        $r7 = <net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.skin.Padder NONE>;

     label2:
        $r3 = specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r4 = virtualinvoke $r7.<net.sourceforge.plantuml.skin.Padder: net.sourceforge.plantuml.graphic.TextBlock apply(net.sourceforge.plantuml.graphic.TextBlock)>($r3);

        return $r4;
    }

    public abstract double getYPoint(net.sourceforge.plantuml.graphic.StringBounder);

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getForegroundColor()
    {
        net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow;

        $r1 = r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColor foregroundColor>;

        return $r1;
    }

    protected final int getArrowDeltaX()
    {
        net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow r0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow;

        return 10;
    }

    protected final int getArrowDeltaY()
    {
        net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow r0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow;

        return 4;
    }

    public final double getPaddingY()
    {
        net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow r0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow;

        return 4.0;
    }

    public final net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()
    {
        net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow r0;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow;

        $r1 = r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration arrowConfiguration>;

        return $r1;
    }
}
