public class net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3;

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r8, $r15;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r10, $r11, $r12, $r16, $r18, $r19, $r20, $r21, $r22, $r23;
        net.sourceforge.plantuml.command.regex.RegexOptional $r6, $r13;
        net.sourceforge.plantuml.command.regex.RegexConcat $r7, $r14, $r24;
        net.sourceforge.plantuml.graphic.color.ColorParser $r9, $r17;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram3/command/CommandPartition3;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[11];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TYPE", "(partition|package|rectangle|card)");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r8 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.graphic.color.ColorParser color(java.lang.String)>("BACK1");

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r8[0] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r8[1] = $r11;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r8);

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r7);

        $r2[3] = $r6;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NAME", "([%g][^%g]+[%g]|\\S+)");

        $r2[4] = $r12;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r15 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r16 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r15[0] = $r16;

        $r17 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.graphic.color.ColorParser color(java.lang.String)>("BACK2");

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r15[1] = $r18;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r15);

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r14);

        $r2[5] = $r13;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREO", "(\\<{2}.*\\>{2})?");

        $r2[7] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r21;

        $r22 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r22.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\{?");

        $r2[9] = $r22;

        $r23 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[10] = $r23;

        $r24 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r24;
    }

    private net.sourceforge.plantuml.graphic.USymbol getUSymbol(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.graphic.USymbol $r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 r8;

        r8 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3;

        r0 := @parameter0: java.lang.String;

        $r1 = "card";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r7 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol CARD>;

        return $r7;

     label1:
        $r2 = "package";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $r6 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol PACKAGE>;

        return $r6;

     label2:
        $r3 = "rectangle";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 == 0 goto label3;

        $r5 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol RECTANGLE>;

        return $r5;

     label3:
        $r4 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol FRAME>;

        return $r4;
    }

    private net.sourceforge.plantuml.ColorParam getColorParamBorder(net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.graphic.USymbol r0, $r1;
        net.sourceforge.plantuml.ColorParam $r2, $r3;
        net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 r4;

        r4 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbol;

        $r1 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol FRAME>;

        if r0 != $r1 goto label1;

        $r3 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam partitionBorder>;

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.ColorParam getColorParamBorder()>();

        return $r2;
    }

    private net.sourceforge.plantuml.ColorParam getColorParamBack(net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.graphic.USymbol r0, $r1;
        net.sourceforge.plantuml.ColorParam $r2, $r3;
        net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 r4;

        r4 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbol;

        $r1 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol FRAME>;

        if r0 != $r1 goto label1;

        $r3 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam partitionBackground>;

        return $r3;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.ColorParam getColorParamBack()>();

        return $r2;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorParser color(java.lang.String)
    {
        java.lang.String r0;
        net.sourceforge.plantuml.graphic.color.ColorType $r1;
        net.sourceforge.plantuml.graphic.color.ColorParser $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r2 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.ColorParser simpleColor(net.sourceforge.plantuml.graphic.color.ColorType,java.lang.String)>($r1, r0);

        return $r2;
    }

    private net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionPartition(net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.graphic.USymbol r0, $r1;
        net.sourceforge.plantuml.style.SName[] $r2, $r8;
        net.sourceforge.plantuml.style.SName $r3, $r4, $r5, $r6, $r9, $r10, $r11, $r12;
        net.sourceforge.plantuml.style.StyleSignature $r7, $r13;
        net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 r14;

        r14 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbol;

        $r1 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol RECTANGLE>;

        if r0 != $r1 goto label1;

        $r8 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r9 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r8[0] = $r9;

        $r10 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r8[1] = $r10;

        $r11 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r8[2] = $r11;

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName rectangle>;

        $r8[3] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r8);

        return $r13;

     label1:
        $r2 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r2[0] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r2[1] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r2[2] = $r5;

        $r6 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName partition>;

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r2);

        return $r7;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String $r1, r2, r3, $r12, r14, $r44;
        net.sourceforge.plantuml.graphic.color.ColorParser $r4;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r5;
        net.sourceforge.plantuml.ISkinParam $r6, $r8, $r16, $r19, $r22, $r26, $r30, $r32, $r39, $r41;
        net.sourceforge.plantuml.api.ThemeStyle $r7, $r31, $r40;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r9, $r33, $r42;
        net.sourceforge.plantuml.graphic.color.Colors r10;
        net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 r11;
        net.sourceforge.plantuml.graphic.USymbol r13;
        net.sourceforge.plantuml.cucadiagram.Stereotype r15, $r45;
        boolean $z0;
        net.sourceforge.plantuml.ColorParam $r17, $r20;
        net.sourceforge.plantuml.graphic.color.ColorType $r18, $r23, $r34;
        net.sourceforge.plantuml.graphic.SkinParameter $r21;
        net.sourceforge.plantuml.style.StyleSignature $r24, $r25;
        net.sourceforge.plantuml.style.StyleBuilder $r27;
        net.sourceforge.plantuml.style.PName $r28, $r35, $r37;
        net.sourceforge.plantuml.style.Value $r29, $r36, $r38;
        net.sourceforge.plantuml.LineLocation r43;
        net.sourceforge.plantuml.style.Style r46;
        net.sourceforge.plantuml.ugraphic.color.HColor r47, r48, r49, r50;
        double d0;
        net.sourceforge.plantuml.cucadiagram.Display $r51;
        net.sourceforge.plantuml.command.CommandExecutionResult $r52;

        r11 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3;

        r5 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r43 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("NAME", 0);

        r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r1);

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BACK1", 0);

        if r3 != null goto label01;

        $r44 = "BACK2";

        goto label02;

     label01:
        $r44 = "BACK1";

     label02:
        $r4 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.graphic.color.ColorParser color(java.lang.String)>($r44);

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r8 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r10 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r7, r0, $r9);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("TYPE", 0);

        r13 = specialinvoke r11.<net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.graphic.USymbol getUSymbol(java.lang.String)>($r12);

        r14 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREO", 0);

        if r14 != null goto label03;

        $r45 = null;

        goto label04;

     label03:
        $r45 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>(r14);

     label04:
        r15 = $r45;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label06;

        $r24 = specialinvoke r11.<net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionPartition(net.sourceforge.plantuml.graphic.USymbol)>(r13);

        $r25 = virtualinvoke $r24.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature 'with'(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r45);

        $r26 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r46 = virtualinvoke $r25.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r27);

        $r28 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r29 = virtualinvoke r46.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r28);

        $r30 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r31 = interfaceinvoke $r30.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r32 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r33 = interfaceinvoke $r32.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r47 = interfaceinvoke $r29.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r31, $r33);

        $r34 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r48 = virtualinvoke r10.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r34);

        if r48 != null goto label05;

        $r37 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r38 = virtualinvoke r46.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r37);

        $r39 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r40 = interfaceinvoke $r39.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r41 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r42 = interfaceinvoke $r41.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r48 = interfaceinvoke $r38.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r40, $r42);

     label05:
        r49 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor BLUE>;

        $r35 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r36 = virtualinvoke r46.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r35);

        d0 = interfaceinvoke $r36.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        goto label10;

     label06:
        $r16 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r17 = specialinvoke r11.<net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.ColorParam getColorParamBack(net.sourceforge.plantuml.graphic.USymbol)>(r13);

        r50 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype,boolean)>($r17, $r45, 0);

        if r50 != null goto label07;

        $r23 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r48 = virtualinvoke r10.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r23);

        goto label08;

     label07:
        r48 = r50;

     label08:
        $r18 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType HEADER>;

        r49 = virtualinvoke r10.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r18);

        $r19 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = specialinvoke r11.<net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.ColorParam getColorParamBorder(net.sourceforge.plantuml.graphic.USymbol)>(r13);

        r47 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype,boolean)>($r20, r15, 0);

        if r47 != null goto label09;

        r47 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

     label09:
        $r21 = virtualinvoke r13.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()>();

        $r22 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        d0 = virtualinvoke $r21.<net.sourceforge.plantuml.graphic.SkinParameter: double getRoundCorner(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r22, r15);

     label10:
        $r51 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r2);

        virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void startGroup(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.USymbol,double)>($r51, r48, r49, r47, r13, d0);

        $r52 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r52;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3 r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.command.CommandPartition3: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
