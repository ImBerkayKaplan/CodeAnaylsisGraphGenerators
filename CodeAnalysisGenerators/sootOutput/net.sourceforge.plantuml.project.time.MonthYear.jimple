public class net.sourceforge.plantuml.project.time.MonthYear extends java.lang.Object implements java.lang.Comparable
{
    private final int year;
    private final net.sourceforge.plantuml.project.time.Month month;

    public static net.sourceforge.plantuml.project.time.MonthYear create(int, net.sourceforge.plantuml.project.time.Month)
    {
        net.sourceforge.plantuml.project.time.MonthYear $r0;
        int i0;
        net.sourceforge.plantuml.project.time.Month r1;

        i0 := @parameter0: int;

        r1 := @parameter1: net.sourceforge.plantuml.project.time.Month;

        $r0 = new net.sourceforge.plantuml.project.time.MonthYear;

        specialinvoke $r0.<net.sourceforge.plantuml.project.time.MonthYear: void <init>(int,net.sourceforge.plantuml.project.time.Month)>(i0, r1);

        return $r0;
    }

    public java.lang.String shortName(java.util.Locale)
    {
        net.sourceforge.plantuml.project.time.MonthYear r0;
        java.util.Locale r1;
        net.sourceforge.plantuml.project.time.Month $r2;
        java.lang.String $r3;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.project.time.Month: java.lang.String shortName(java.util.Locale)>(r1);

        return $r3;
    }

    public java.lang.String shortNameYYYY(java.util.Locale)
    {
        java.lang.StringBuilder $r0, $r5, $r6, $r7;
        net.sourceforge.plantuml.project.time.MonthYear r1;
        java.util.Locale r2;
        net.sourceforge.plantuml.project.time.Month $r3;
        java.lang.String $r4, $r8;
        int $i0;

        r1 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        r2 := @parameter0: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = r1.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.project.time.Month: java.lang.String shortName(java.util.Locale)>(r2);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = r1.<net.sourceforge.plantuml.project.time.MonthYear: int year>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String longName(java.util.Locale)
    {
        net.sourceforge.plantuml.project.time.MonthYear r0;
        java.util.Locale r1;
        net.sourceforge.plantuml.project.time.Month $r2;
        java.lang.String $r3;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        r1 := @parameter0: java.util.Locale;

        $r2 = r0.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.project.time.Month: java.lang.String longName(java.util.Locale)>(r1);

        return $r3;
    }

    public java.lang.String longNameYYYY(java.util.Locale)
    {
        java.lang.StringBuilder $r0, $r5, $r6, $r7;
        net.sourceforge.plantuml.project.time.MonthYear r1;
        java.util.Locale r2;
        net.sourceforge.plantuml.project.time.Month $r3;
        java.lang.String $r4, $r8;
        int $i0;

        r1 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        r2 := @parameter0: java.util.Locale;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = r1.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.project.time.Month: java.lang.String longName(java.util.Locale)>(r2);

        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i0 = r1.<net.sourceforge.plantuml.project.time.MonthYear: int year>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void <init>(int, net.sourceforge.plantuml.project.time.Month)
    {
        net.sourceforge.plantuml.project.time.MonthYear r0;
        int i0;
        net.sourceforge.plantuml.project.time.Month r1;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        i0 := @parameter0: int;

        r1 := @parameter1: net.sourceforge.plantuml.project.time.Month;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.time.MonthYear: int year> = i0;

        r0.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month> = r1;

        return;
    }

    public int year()
    {
        net.sourceforge.plantuml.project.time.MonthYear r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        $i0 = r0.<net.sourceforge.plantuml.project.time.MonthYear: int year>;

        return $i0;
    }

    public net.sourceforge.plantuml.project.time.MonthYear next()
    {
        net.sourceforge.plantuml.project.time.MonthYear r0, $r4;
        net.sourceforge.plantuml.project.time.Month $r1, r2, $r3;
        int $i1, $i2;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        $r1 = r0.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month next()>();

        $r3 = <net.sourceforge.plantuml.project.time.Month: net.sourceforge.plantuml.project.time.Month JANUARY>;

        if r2 != $r3 goto label1;

        $i1 = r0.<net.sourceforge.plantuml.project.time.MonthYear: int year>;

        $i2 = $i1 + 1;

        goto label2;

     label1:
        $i2 = r0.<net.sourceforge.plantuml.project.time.MonthYear: int year>;

     label2:
        $r4 = new net.sourceforge.plantuml.project.time.MonthYear;

        specialinvoke $r4.<net.sourceforge.plantuml.project.time.MonthYear: void <init>(int,net.sourceforge.plantuml.project.time.Month)>($i2, r2);

        return $r4;
    }

    public net.sourceforge.plantuml.project.time.Month month()
    {
        net.sourceforge.plantuml.project.time.MonthYear r0;
        net.sourceforge.plantuml.project.time.Month $r1;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        $r1 = r0.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        return $r1;
    }

    private int internalNumber()
    {
        net.sourceforge.plantuml.project.time.MonthYear r0;
        int $i0, $i1, $i2, $i3;
        net.sourceforge.plantuml.project.time.Month $r1;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        $i0 = r0.<net.sourceforge.plantuml.project.time.MonthYear: int year>;

        $i1 = $i0 * 100;

        $r1 = r0.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        $i2 = virtualinvoke $r1.<net.sourceforge.plantuml.project.time.Month: int ordinal()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6;
        net.sourceforge.plantuml.project.time.MonthYear r2;
        int $i0;
        net.sourceforge.plantuml.project.time.Month $r5;
        java.lang.String $r7;

        r2 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = r2.<net.sourceforge.plantuml.project.time.MonthYear: int year>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r2.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.project.time.MonthYear r0;
        int $i0, $i1, $i2, $i3;
        net.sourceforge.plantuml.project.time.Month $r1;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        $i0 = r0.<net.sourceforge.plantuml.project.time.MonthYear: int year>;

        $i1 = $i0 * 113;

        $r1 = r0.<net.sourceforge.plantuml.project.time.MonthYear: net.sourceforge.plantuml.project.time.Month month>;

        $i2 = virtualinvoke $r1.<net.sourceforge.plantuml.project.time.Month: int hashCode()>();

        $i3 = $i1 + $i2;

        return $i3;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.project.time.MonthYear r1, r2;
        int $i0, $i1;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return 0;

     label1:
        r1 = (net.sourceforge.plantuml.project.time.MonthYear) r0;

        $i0 = specialinvoke r1.<net.sourceforge.plantuml.project.time.MonthYear: int internalNumber()>();

        $i1 = specialinvoke r2.<net.sourceforge.plantuml.project.time.MonthYear: int internalNumber()>();

        if $i0 != $i1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int compareTo(net.sourceforge.plantuml.project.time.MonthYear)
    {
        net.sourceforge.plantuml.project.time.MonthYear r0, r1;
        int $i0, $i1, $i2;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.MonthYear;

        $i0 = specialinvoke r0.<net.sourceforge.plantuml.project.time.MonthYear: int internalNumber()>();

        $i1 = specialinvoke r1.<net.sourceforge.plantuml.project.time.MonthYear: int internalNumber()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        net.sourceforge.plantuml.project.time.MonthYear r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.project.time.MonthYear;

        r1 := @parameter0: java.lang.Object;

        $r2 = (net.sourceforge.plantuml.project.time.MonthYear) r1;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.project.time.MonthYear: int compareTo(net.sourceforge.plantuml.project.time.MonthYear)>($r2);

        return $i0;
    }
}
