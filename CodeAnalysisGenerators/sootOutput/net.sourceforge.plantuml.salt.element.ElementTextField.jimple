public class net.sourceforge.plantuml.salt.element.ElementTextField extends net.sourceforge.plantuml.salt.element.AbstractElementText implements net.sourceforge.plantuml.salt.element.Element
{

    public void <init>(java.lang.String, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.element.ElementTextField r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ugraphic.UFont r2;
        net.sourceforge.plantuml.ISkinSimple r3;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementTextField;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: void <init>(java.lang.String,net.sourceforge.plantuml.ugraphic.UFont,boolean,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, 1, r3);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder, double, double)
    {
        net.sourceforge.plantuml.salt.element.ElementTextField r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0, d1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, $r3;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementTextField;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementTextField: net.sourceforge.plantuml.awt.geom.Dimension2D getTextDimensionAt(net.sourceforge.plantuml.graphic.StringBounder,double)>(r1, d0);

        $r3 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r2, 6.0, 2.0);

        return $r3;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, int, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        int i0;
        net.sourceforge.plantuml.salt.element.ElementTextField r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r7, $r10, $r13;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r5, r15;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r9, $r12;
        double $d0, $d1, $d2, $d3, d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.ULine $r8, $r11, $r14;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementTextField;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter1: int;

        r15 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        if i0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementTextField: void drawText(net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>(r1, 3.0, 0.0);

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementTextField: net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder,double,double)>($r2, 0.0, 0.0);

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementTextField: net.sourceforge.plantuml.awt.geom.Dimension2D getTextDimensionAt(net.sourceforge.plantuml.graphic.StringBounder,double)>($r4, 0.0);

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(1.0, $d0);

        $r7 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 - 3.0;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d2);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        $d3 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d4 = $d3 - 3.0;

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(1.0, d4);

        $r10 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(2.0);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r11);

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = 3.0 + $d5;

        $d7 = $d6 + 1.0;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, d4);

        $r13 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(2.0);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r14);

        return;
    }
}
