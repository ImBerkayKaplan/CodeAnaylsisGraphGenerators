public abstract class net.sourceforge.plantuml.cucadiagram.WithLinkType extends java.lang.Object
{
    protected net.sourceforge.plantuml.cucadiagram.LinkType type;
    protected boolean hidden;
    private boolean single;
    private net.sourceforge.plantuml.graphic.color.Colors colors;
    private java.util.List supplementary;

    public void <init>()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.graphic.color.Colors $r1;
        java.util.ArrayList $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: boolean hidden> = 0;

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: boolean single> = 0;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors empty()>();

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.graphic.color.Colors colors> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: java.util.List supplementary> = $r2;

        return;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getSpecificColor()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.graphic.color.ColorType $r1;
        net.sourceforge.plantuml.graphic.color.Colors $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r1 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r1);

        return $r3;
    }

    public final void setSpecificColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void setSpecificColor(net.sourceforge.plantuml.ugraphic.color.HColor,int)>(r1, 0);

        return;
    }

    public final void setSpecificColor(net.sourceforge.plantuml.ugraphic.color.HColor, int)
    {
        int i0;
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.graphic.color.ColorType $r2, $r6;
        net.sourceforge.plantuml.graphic.color.Colors $r3, $r5, $r7, $r8;
        java.util.List $r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r6 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r6, r1);

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.graphic.color.Colors colors> = $r8;

        goto label2;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: java.util.List supplementary>;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r2 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r2, r1);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label2:
        return;
    }

    public java.util.List getSupplementaryColors()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: java.util.List supplementary>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void setColors(net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.graphic.color.Colors r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.color.Colors;

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.graphic.color.Colors colors> = r1;

        return;
    }

    public final net.sourceforge.plantuml.graphic.color.Colors getColors()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.graphic.color.Colors $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.graphic.color.Colors colors>;

        return $r1;
    }

    public final void goDashed()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goDashed()>();

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type> = $r2;

        return;
    }

    public final void goDotted()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goDotted()>();

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type> = $r2;

        return;
    }

    public final void goThickness(double)
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        double d0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        d0 := @parameter0: double;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goThickness(double)>(d0);

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type> = $r2;

        return;
    }

    public final void goHidden()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: boolean hidden> = 1;

        return;
    }

    public abstract void goNorank();

    public final void goBold()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goBold()>();

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type> = $r2;

        return;
    }

    public final void goSingle()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: boolean single> = 1;

        return;
    }

    public boolean isSingle()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: boolean single>;

        return $z0;
    }

    public void applyStyle(net.sourceforge.plantuml.api.ThemeStyle, java.lang.String)
    {
        java.lang.String r0, r3;
        java.util.StringTokenizer $r1;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.WithLinkType r4;
        net.sourceforge.plantuml.api.ThemeStyle r5;
        int i0;

        r4 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        r5 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, ";");

        i0 = 0;

     label2:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        r3 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        specialinvoke r4.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void applyOneStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String,int)>(r5, r3, i0);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    private void applyOneStyle(net.sourceforge.plantuml.api.ThemeStyle, java.lang.String, int)
    {
        java.util.StringTokenizer $r0;
        java.lang.String r1, r3, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4;
        net.sourceforge.plantuml.api.ThemeStyle r5;
        net.sourceforge.plantuml.ugraphic.color.HColor r6;
        net.sourceforge.plantuml.cucadiagram.WithLinkType r7;
        int i0, $i1;
        double $d0;

        r7 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        r5 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ",");

     label01:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label11;

        r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dashed");

        if $z1 == 0 goto label02;

        virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void goDashed()>();

        goto label10;

     label02:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("bold");

        if $z2 == 0 goto label03;

        virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void goBold()>();

        goto label10;

     label03:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("dotted");

        if $z3 == 0 goto label04;

        virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void goDotted()>();

        goto label10;

     label04:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hidden");

        if $z4 == 0 goto label05;

        virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void goHidden()>();

        goto label10;

     label05:
        $z5 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("single");

        if $z5 == 0 goto label06;

        virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void goSingle()>();

        goto label10;

     label06:
        $z6 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("plain");

        if $z6 == 0 goto label07;

        goto label10;

     label07:
        $z7 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("norank");

        if $z7 == 0 goto label08;

        virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void goNorank()>();

        goto label10;

     label08:
        $z8 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("thickness=");

        if $z8 == 0 goto label09;

        $r8 = "thickness=";

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i1);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r9);

        virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void goThickness(double)>($d0);

        goto label10;

     label09:
        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        r6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>(r5, r3);

        virtualinvoke r7.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void setSpecificColor(net.sourceforge.plantuml.ugraphic.color.HColor,int)>(r6, i0);

     label10:
        goto label01;

     label11:
        return;
    }

    public net.sourceforge.plantuml.cucadiagram.LinkType getType()
    {
        net.sourceforge.plantuml.cucadiagram.WithLinkType r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        return $r1;
    }

    public net.sourceforge.plantuml.ugraphic.UStroke getUStroke()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.cucadiagram.WithLinkType r1;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
