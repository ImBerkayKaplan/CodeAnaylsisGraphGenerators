public class net.sourceforge.plantuml.gitlog.GitDiagramFactory extends net.sourceforge.plantuml.command.PSystemAbstractFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.gitlog.GitDiagramFactory r0;
        net.sourceforge.plantuml.core.DiagramType $r1;

        r0 := @this: net.sourceforge.plantuml.gitlog.GitDiagramFactory;

        $r1 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType GIT>;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemAbstractFactory: void <init>(net.sourceforge.plantuml.core.DiagramType)>($r1);

        return;
    }

    public net.sourceforge.plantuml.core.Diagram createSystem(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.gitlog.GitTextArea $r0;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.version.IteratorCounter2 r3;
        java.lang.Object $r5;
        net.sourceforge.plantuml.StringLocated $r6;
        java.lang.String r7;
        boolean $z0;
        net.sourceforge.plantuml.gitlog.GitDiagram $r8;
        net.sourceforge.plantuml.api.ThemeStyle r9;
        net.sourceforge.plantuml.gitlog.GitDiagramFactory r10;
        net.sourceforge.plantuml.ISkinSimple r11;

        r10 := @this: net.sourceforge.plantuml.gitlog.GitDiagramFactory;

        r9 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r11 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.gitlog.GitTextArea;

        specialinvoke $r0.<net.sourceforge.plantuml.gitlog.GitTextArea: void <init>()>();

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.core.UmlSource: net.sourceforge.plantuml.version.IteratorCounter2 iterator2()>();

        interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

     label1:
        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (net.sourceforge.plantuml.StringLocated) $r5;

        r7 = virtualinvoke $r6.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        virtualinvoke $r0.<net.sourceforge.plantuml.gitlog.GitTextArea: void add(java.lang.String)>(r7);

        goto label1;

     label3:
        $r8 = new net.sourceforge.plantuml.gitlog.GitDiagram;

        specialinvoke $r8.<net.sourceforge.plantuml.gitlog.GitDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.gitlog.GitTextArea)>(r9, r2, $r0);

        return $r8;
    }
}
