public class net.sourceforge.plantuml.ugraphic.comp.CompressionTransform extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform
{
    private final java.util.List all;

    public void <init>(net.sourceforge.plantuml.ugraphic.comp.SlotSet)
    {
        net.sourceforge.plantuml.ugraphic.comp.CompressionTransform r0;
        net.sourceforge.plantuml.ugraphic.comp.SlotSet r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.CompressionTransform;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.comp.SlotSet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.comp.SlotSet: java.util.List getSlots()>();

        r0.<net.sourceforge.plantuml.ugraphic.comp.CompressionTransform: java.util.List all> = $r2;

        return;
    }

    public double transform(double)
    {
        double d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.comp.CompressionTransform r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.CompressionTransform;

        d0 := @parameter0: double;

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.CompressionTransform: double getCompressDelta(double)>(d0);

        $d2 = d0 - $d1;

        return $d2;
    }

    private double getCompressDelta(double)
    {
        net.sourceforge.plantuml.ugraphic.comp.CompressionTransform r0;
        java.util.List $r1;
        java.util.Iterator r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.ugraphic.comp.Slot r4;
        double $d0, d1, $d2, $d3, $d4, $d5, d6;
        byte $b0, $b1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.CompressionTransform;

        d1 := @parameter0: double;

        d6 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.comp.CompressionTransform: java.util.List all>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.ugraphic.comp.Slot) $r3;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.comp.Slot: double getStart()>();

        $b0 = $d0 cmpl d1;

        if $b0 <= 0 goto label2;

        goto label1;

     label2:
        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.comp.Slot: double getEnd()>();

        $b1 = d1 cmpl $d2;

        if $b1 <= 0 goto label3;

        $d5 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.comp.Slot: double size()>();

        d6 = d6 + $d5;

        goto label4;

     label3:
        $d3 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.comp.Slot: double getStart()>();

        $d4 = d1 - $d3;

        d6 = d6 + $d4;

     label4:
        goto label1;

     label5:
        return d6;
    }
}
