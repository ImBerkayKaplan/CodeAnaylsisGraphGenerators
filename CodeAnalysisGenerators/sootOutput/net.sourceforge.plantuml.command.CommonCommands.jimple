public final class net.sourceforge.plantuml.command.CommonCommands extends java.lang.Object
{

    private void <init>()
    {
        net.sourceforge.plantuml.command.CommonCommands r0;

        r0 := @this: net.sourceforge.plantuml.command.CommonCommands;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void addCommonCommands1(java.util.List)
    {
        java.util.List r0;

        r0 := @parameter0: java.util.List;

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addTitleCommands(java.util.List)>(r0);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands2(java.util.List)>(r0);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonHides(java.util.List)>(r0);

        return;
    }

    public static void addCommonCommands2(java.util.List)
    {
        java.util.List r0;
        net.sourceforge.plantuml.command.CommandNope $r1;
        net.sourceforge.plantuml.command.CommandPragma $r2;
        net.sourceforge.plantuml.command.CommandAssumeTransparent $r3;
        net.sourceforge.plantuml.command.CommandSkinParam $r4;
        net.sourceforge.plantuml.command.CommandSkinParamMultilines $r5;
        net.sourceforge.plantuml.sequencediagram.command.CommandSkin $r6;
        net.sourceforge.plantuml.command.CommandMinwidth $r7;
        net.sourceforge.plantuml.command.CommandPage $r8;
        net.sourceforge.plantuml.command.CommandRotate $r9;
        net.sourceforge.plantuml.command.CommandScale $r10;
        net.sourceforge.plantuml.command.CommandScaleWidthAndHeight $r11;
        net.sourceforge.plantuml.command.CommandScaleWidthOrHeight $r12;
        net.sourceforge.plantuml.command.CommandScaleMaxWidth $r13;
        net.sourceforge.plantuml.command.CommandScaleMaxHeight $r14;
        net.sourceforge.plantuml.command.CommandScaleMaxWidthAndHeight $r15;
        net.sourceforge.plantuml.command.CommandAffineTransform $r16;
        net.sourceforge.plantuml.command.CommandAffineTransformMultiline $r17;
        net.sourceforge.plantuml.command.CommandFactorySprite $r18;
        net.sourceforge.plantuml.command.Command $r20, $r21;
        net.sourceforge.plantuml.command.CommandSpriteFile $r22;
        net.sourceforge.plantuml.style.CommandStyleMultilinesCSS $r23;
        net.sourceforge.plantuml.style.CommandStyleImport $r24;

        r0 := @parameter0: java.util.List;

        $r1 = new net.sourceforge.plantuml.command.CommandNope;

        specialinvoke $r1.<net.sourceforge.plantuml.command.CommandNope: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r2 = new net.sourceforge.plantuml.command.CommandPragma;

        specialinvoke $r2.<net.sourceforge.plantuml.command.CommandPragma: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.command.CommandAssumeTransparent;

        specialinvoke $r3.<net.sourceforge.plantuml.command.CommandAssumeTransparent: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.command.CommandSkinParam;

        specialinvoke $r4.<net.sourceforge.plantuml.command.CommandSkinParam: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new net.sourceforge.plantuml.command.CommandSkinParamMultilines;

        specialinvoke $r5.<net.sourceforge.plantuml.command.CommandSkinParamMultilines: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.sequencediagram.command.CommandSkin;

        specialinvoke $r6.<net.sourceforge.plantuml.sequencediagram.command.CommandSkin: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new net.sourceforge.plantuml.command.CommandMinwidth;

        specialinvoke $r7.<net.sourceforge.plantuml.command.CommandMinwidth: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new net.sourceforge.plantuml.command.CommandPage;

        specialinvoke $r8.<net.sourceforge.plantuml.command.CommandPage: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new net.sourceforge.plantuml.command.CommandRotate;

        specialinvoke $r9.<net.sourceforge.plantuml.command.CommandRotate: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new net.sourceforge.plantuml.command.CommandScale;

        specialinvoke $r10.<net.sourceforge.plantuml.command.CommandScale: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new net.sourceforge.plantuml.command.CommandScaleWidthAndHeight;

        specialinvoke $r11.<net.sourceforge.plantuml.command.CommandScaleWidthAndHeight: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r12 = new net.sourceforge.plantuml.command.CommandScaleWidthOrHeight;

        specialinvoke $r12.<net.sourceforge.plantuml.command.CommandScaleWidthOrHeight: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r13 = new net.sourceforge.plantuml.command.CommandScaleMaxWidth;

        specialinvoke $r13.<net.sourceforge.plantuml.command.CommandScaleMaxWidth: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new net.sourceforge.plantuml.command.CommandScaleMaxHeight;

        specialinvoke $r14.<net.sourceforge.plantuml.command.CommandScaleMaxHeight: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = new net.sourceforge.plantuml.command.CommandScaleMaxWidthAndHeight;

        specialinvoke $r15.<net.sourceforge.plantuml.command.CommandScaleMaxWidthAndHeight: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = new net.sourceforge.plantuml.command.CommandAffineTransform;

        specialinvoke $r16.<net.sourceforge.plantuml.command.CommandAffineTransform: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = new net.sourceforge.plantuml.command.CommandAffineTransformMultiline;

        specialinvoke $r17.<net.sourceforge.plantuml.command.CommandAffineTransformMultiline: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = new net.sourceforge.plantuml.command.CommandFactorySprite;

        specialinvoke $r18.<net.sourceforge.plantuml.command.CommandFactorySprite: void <init>()>();

        $r20 = virtualinvoke $r18.<net.sourceforge.plantuml.command.CommandFactorySprite: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r21 = virtualinvoke $r18.<net.sourceforge.plantuml.command.CommandFactorySprite: net.sourceforge.plantuml.command.Command createSingleLine()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r22 = new net.sourceforge.plantuml.command.CommandSpriteFile;

        specialinvoke $r22.<net.sourceforge.plantuml.command.CommandSpriteFile: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r22);

        $r23 = new net.sourceforge.plantuml.style.CommandStyleMultilinesCSS;

        specialinvoke $r23.<net.sourceforge.plantuml.style.CommandStyleMultilinesCSS: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r23);

        $r24 = new net.sourceforge.plantuml.style.CommandStyleImport;

        specialinvoke $r24.<net.sourceforge.plantuml.style.CommandStyleImport: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r24);

        return;
    }

    public static void addCommonHides(java.util.List)
    {
        java.util.List r0;
        net.sourceforge.plantuml.statediagram.command.CommandHideEmptyDescription $r1;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility $r2;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender $r3;

        r0 := @parameter0: java.util.List;

        $r1 = new net.sourceforge.plantuml.statediagram.command.CommandHideEmptyDescription;

        specialinvoke $r1.<net.sourceforge.plantuml.statediagram.command.CommandHideEmptyDescription: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r2 = new net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility;

        specialinvoke $r2.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender;

        specialinvoke $r3.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByGender: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public static void addTitleCommands(java.util.List)
    {
        java.util.List r0;
        net.sourceforge.plantuml.command.CommandTitle $r1;
        net.sourceforge.plantuml.command.CommandMainframe $r2;
        net.sourceforge.plantuml.command.CommandCaption $r3;
        net.sourceforge.plantuml.command.CommandMultilinesCaption $r4;
        net.sourceforge.plantuml.command.CommandMultilinesTitle $r5;
        net.sourceforge.plantuml.command.CommandMultilinesLegend $r6;
        net.sourceforge.plantuml.command.CommandLegend $r7;
        net.sourceforge.plantuml.command.CommandFooter $r8;
        net.sourceforge.plantuml.command.CommandMultilinesFooter $r9;
        net.sourceforge.plantuml.command.CommandHeader $r10;
        net.sourceforge.plantuml.command.CommandMultilinesHeader $r11;

        r0 := @parameter0: java.util.List;

        $r1 = new net.sourceforge.plantuml.command.CommandTitle;

        specialinvoke $r1.<net.sourceforge.plantuml.command.CommandTitle: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r2 = new net.sourceforge.plantuml.command.CommandMainframe;

        specialinvoke $r2.<net.sourceforge.plantuml.command.CommandMainframe: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.command.CommandCaption;

        specialinvoke $r3.<net.sourceforge.plantuml.command.CommandCaption: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.command.CommandMultilinesCaption;

        specialinvoke $r4.<net.sourceforge.plantuml.command.CommandMultilinesCaption: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new net.sourceforge.plantuml.command.CommandMultilinesTitle;

        specialinvoke $r5.<net.sourceforge.plantuml.command.CommandMultilinesTitle: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.command.CommandMultilinesLegend;

        specialinvoke $r6.<net.sourceforge.plantuml.command.CommandMultilinesLegend: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new net.sourceforge.plantuml.command.CommandLegend;

        specialinvoke $r7.<net.sourceforge.plantuml.command.CommandLegend: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new net.sourceforge.plantuml.command.CommandFooter;

        specialinvoke $r8.<net.sourceforge.plantuml.command.CommandFooter: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new net.sourceforge.plantuml.command.CommandMultilinesFooter;

        specialinvoke $r9.<net.sourceforge.plantuml.command.CommandMultilinesFooter: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        $r10 = new net.sourceforge.plantuml.command.CommandHeader;

        specialinvoke $r10.<net.sourceforge.plantuml.command.CommandHeader: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r11 = new net.sourceforge.plantuml.command.CommandMultilinesHeader;

        specialinvoke $r11.<net.sourceforge.plantuml.command.CommandMultilinesHeader: void <init>()>();

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }
}
