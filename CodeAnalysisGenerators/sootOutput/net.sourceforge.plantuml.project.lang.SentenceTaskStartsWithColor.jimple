public class net.sourceforge.plantuml.project.lang.SentenceTaskStartsWithColor extends net.sourceforge.plantuml.project.lang.SentenceSimple
{

    public void <init>()
    {
        net.sourceforge.plantuml.project.lang.SentenceTaskStartsWithColor r0;
        net.sourceforge.plantuml.project.lang.SubjectTask $r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2;
        net.sourceforge.plantuml.project.lang.PairOfSomething $r3;
        net.sourceforge.plantuml.project.lang.ComplementBeforeOrAfterOrAtTaskStartOrEnd $r4;
        net.sourceforge.plantuml.project.lang.ComplementWithColorLink $r5;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceTaskStartsWithColor;

        $r1 = new net.sourceforge.plantuml.project.lang.SubjectTask;

        specialinvoke $r1.<net.sourceforge.plantuml.project.lang.SubjectTask: void <init>()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.project.lang.Verbs: net.sourceforge.plantuml.command.regex.IRegex starts2()>();

        $r3 = new net.sourceforge.plantuml.project.lang.PairOfSomething;

        $r4 = new net.sourceforge.plantuml.project.lang.ComplementBeforeOrAfterOrAtTaskStartOrEnd;

        specialinvoke $r4.<net.sourceforge.plantuml.project.lang.ComplementBeforeOrAfterOrAtTaskStartOrEnd: void <init>()>();

        $r5 = new net.sourceforge.plantuml.project.lang.ComplementWithColorLink;

        specialinvoke $r5.<net.sourceforge.plantuml.project.lang.ComplementWithColorLink: void <init>()>();

        specialinvoke $r3.<net.sourceforge.plantuml.project.lang.PairOfSomething: void <init>(net.sourceforge.plantuml.project.lang.Something,net.sourceforge.plantuml.project.lang.Something)>($r4, $r5);

        specialinvoke r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: void <init>(net.sourceforge.plantuml.project.lang.Subject,net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.project.lang.Something)>($r1, $r2, $r3);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r2, $r4, $r6;
        net.sourceforge.plantuml.project.core.Task r1;
        java.lang.Object[] r3;
        net.sourceforge.plantuml.project.core.TaskInstant r5, $r15;
        net.sourceforge.plantuml.project.lang.CenterBorderColor r7;
        net.sourceforge.plantuml.project.time.Day $r8;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r9;
        net.sourceforge.plantuml.ugraphic.color.HColor r10;
        net.sourceforge.plantuml.project.GanttConstraint $r11;
        net.sourceforge.plantuml.project.GanttDiagram r12;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r13;
        net.sourceforge.plantuml.style.StyleBuilder $r14;
        net.sourceforge.plantuml.project.core.TaskAttribute $r16;
        net.sourceforge.plantuml.ISkinParam $r18;
        net.sourceforge.plantuml.api.ThemeStyle $r19;
        java.lang.String $r20;
        net.sourceforge.plantuml.project.lang.SentenceTaskStartsWithColor r21;

        r21 := @this: net.sourceforge.plantuml.project.lang.SentenceTaskStartsWithColor;

        r12 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r1 = (net.sourceforge.plantuml.project.core.Task) r0;

        r3 = (java.lang.Object[]) r2;

        $r4 = r3[0];

        r5 = (net.sourceforge.plantuml.project.core.TaskInstant) $r4;

        $r6 = r3[1];

        r7 = (net.sourceforge.plantuml.project.lang.CenterBorderColor) $r6;

        $r8 = virtualinvoke r5.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.time.Day getInstantPrecise()>();

        interfaceinvoke r1.<net.sourceforge.plantuml.project.core.Task: void setStart(net.sourceforge.plantuml.project.time.Day)>($r8);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.project.core.TaskInstant: boolean isTask()>();

        if $z0 == 0 goto label1;

        r10 = virtualinvoke r7.<net.sourceforge.plantuml.project.lang.CenterBorderColor: net.sourceforge.plantuml.ugraphic.color.HColor getCenter()>();

        $r11 = new net.sourceforge.plantuml.project.GanttConstraint;

        $r13 = virtualinvoke r12.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r14 = virtualinvoke r12.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r15 = new net.sourceforge.plantuml.project.core.TaskInstant;

        $r16 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        specialinvoke $r15.<net.sourceforge.plantuml.project.core.TaskInstant: void <init>(net.sourceforge.plantuml.project.core.Moment,net.sourceforge.plantuml.project.core.TaskAttribute)>(r1, $r16);

        specialinvoke $r11.<net.sourceforge.plantuml.project.GanttConstraint: void <init>(net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.style.StyleBuilder,net.sourceforge.plantuml.project.core.TaskInstant,net.sourceforge.plantuml.project.core.TaskInstant,net.sourceforge.plantuml.ugraphic.color.HColor)>($r13, $r14, r5, $r15, r10);

        $r18 = virtualinvoke r12.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r20 = virtualinvoke r7.<net.sourceforge.plantuml.project.lang.CenterBorderColor: java.lang.String getStyle()>();

        virtualinvoke $r11.<net.sourceforge.plantuml.project.GanttConstraint: void applyStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r19, $r20);

        virtualinvoke r12.<net.sourceforge.plantuml.project.GanttDiagram: void addContraint(net.sourceforge.plantuml.project.GanttConstraint)>($r11);

     label1:
        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r9;
    }
}
