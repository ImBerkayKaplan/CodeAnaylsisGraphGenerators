public class net.sourceforge.plantuml.activitydiagram3.InstructionSwitch extends net.sourceforge.plantuml.activitydiagram3.WithNote implements net.sourceforge.plantuml.activitydiagram3.Instruction, net.sourceforge.plantuml.activitydiagram3.InstructionCollection
{
    private final java.util.List switches;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.activitydiagram3.Instruction parent;
    private net.sourceforge.plantuml.activitydiagram3.Branch current;
    private final net.sourceforge.plantuml.activitydiagram3.LinkRendering topInlinkRendering;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering afterEndwhile;
    private final net.sourceforge.plantuml.cucadiagram.Display labelTest;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane;

    public boolean containsBreak()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.Branch r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r3;

        $z1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean containsBreak()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.Instruction, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2, r3, $r5;
        java.lang.Object $r4;
        net.sourceforge.plantuml.activitydiagram3.Instruction r6;
        net.sourceforge.plantuml.ISkinParam r7;
        net.sourceforge.plantuml.cucadiagram.Display r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r9;
        net.sourceforge.plantuml.ugraphic.color.HColor r10;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        r9 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r6 := @parameter1: net.sourceforge.plantuml.activitydiagram3.Instruction;

        r8 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter3: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r10 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        r7 := @parameter5: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches> = $r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.LinkRendering afterEndwhile> = $r2;

        $r4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r3);

        $r5 = (net.sourceforge.plantuml.activitydiagram3.LinkRendering) $r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.LinkRendering topInlinkRendering> = $r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Instruction parent> = r6;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.ISkinParam skinParam> = r7;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.cucadiagram.Display labelTest> = r8;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane> = r9;

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.Branch $r1, $r3;
        net.sourceforge.plantuml.activitydiagram3.Instruction r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current>;

        if $r1 != null goto label1;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("No \'case\' in this switch");

        return $r5;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>(r2);

        return $r4;
    }

    public net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createGtile(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        java.util.List $r1, $r4, $r6;
        boolean $z0, $z1;
        java.util.ArrayList $r2, $r3;
        java.util.Iterator r5, r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r7;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r8, $r11;
        java.lang.Object $r9, $r12;
        net.sourceforge.plantuml.activitydiagram3.Branch r10, r16;
        net.sourceforge.plantuml.ISkinParam r13;
        net.sourceforge.plantuml.graphic.StringBounder r14;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        r13 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r14 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        r15 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r12;

        virtualinvoke r16.<net.sourceforge.plantuml.activitydiagram3.Branch: void updateGtile(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder)>(r13, r14);

        goto label1;

     label2:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r9;

        $r11 = virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile getGtile()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r10);

        goto label3;

     label4:
        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.gtile.GtileIfHexagon: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile build(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,java.util.List,java.util.List)>($r7, $r2, $r6);

        return $r8;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        java.util.List $r1, $r7;
        java.util.Iterator r2;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r3;
        net.sourceforge.plantuml.cucadiagram.Display $r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r9;
        java.lang.Object $r10;
        net.sourceforge.plantuml.activitydiagram3.Branch r11;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        r3 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r11 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r10;

        virtualinvoke r11.<net.sourceforge.plantuml.activitydiagram3.Branch: void updateFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)>(r3);

        goto label1;

     label2:
        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.LinkRendering afterEndwhile>;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.LinkRendering topInlinkRendering>;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.cucadiagram.Display labelTest>;

        $r9 = interfaceinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createSwitch(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,java.util.List,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.cucadiagram.Display)>($r8, $r7, $r6, $r5, $r4);

        return $r9;
    }

    public final boolean kill()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.Branch $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean kill()>();

        return $z0;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.LinkRendering topInlinkRendering>;

        return $r1;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3, $r10;
        java.util.List $r4;
        java.util.Iterator r5;
        java.util.Set $r6;
        java.lang.Object $r7;
        net.sourceforge.plantuml.activitydiagram3.Branch r8;
        java.util.Collection $r9;
        boolean $z2;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        if $r3 == null goto label1;

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label1:
        $r4 = r2.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r7;

        $r9 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.Branch: java.util.Collection getSwimlanes()>();

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r9);

        goto label2;

     label3:
        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r6;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        return $r1;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        return $r1;
    }

    public net.sourceforge.plantuml.activitydiagram3.Instruction getLast()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.Branch $r4;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r3;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.Instruction getLast()>();

        return $r5;
    }

    public boolean switchCase(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.Branch $r1, $r2, $r11, $r14;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.style.StyleBuilder $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r5;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r6, $r8, $r9, $r10, r13;
        net.sourceforge.plantuml.cucadiagram.Display r7;
        java.util.List $r12;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        r7 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r13 := @parameter1: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current>;

        if $r1 == null goto label1;

        $r14 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current>;

        virtualinvoke $r14.<net.sourceforge.plantuml.activitydiagram3.Branch: void setSpecial(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>(r13);

     label1:
        $r2 = new net.sourceforge.plantuml.activitydiagram3.Branch;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering withDisplay(net.sourceforge.plantuml.cucadiagram.Display)>(r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering withDisplay(net.sourceforge.plantuml.cucadiagram.Display)>(r7);

        specialinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.Branch: void <init>(net.sourceforge.plantuml.style.StyleBuilder,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r4, $r5, $r8, r7, null, $r10);

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current> = $r2;

        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: java.util.List switches>;

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r11);

        return 1;
    }

    public net.sourceforge.plantuml.activitydiagram3.Instruction getParent()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        return $r1;
    }

    public void endSwitch(net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        return;
    }

    public boolean addNote(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.sequencediagram.NoteType, net.sourceforge.plantuml.graphic.color.Colors, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.Branch $r1, $r7;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.sequencediagram.NotePosition r3;
        net.sourceforge.plantuml.sequencediagram.NoteType r4;
        net.sourceforge.plantuml.graphic.color.Colors r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r4 := @parameter2: net.sourceforge.plantuml.sequencediagram.NoteType;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        r6 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $z2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: boolean addNote(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r2, r3, r4, r5, r6);

        return $z2;

     label1:
        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Branch current>;

        $z1 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean addNote(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r2, r3, r4, r5, r6);

        return $z1;
    }

    public volatile boolean hasNotes()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: boolean hasNotes()>();

        return $z0;
    }

    public volatile java.util.Collection getPositionedNotes()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch r0;
        java.util.Collection $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.WithNote: java.util.Collection getPositionedNotes()>();

        return $r1;
    }
}
