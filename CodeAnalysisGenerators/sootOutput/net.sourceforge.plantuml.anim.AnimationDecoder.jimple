public class net.sourceforge.plantuml.anim.AnimationDecoder extends java.lang.Object
{
    private final java.util.List result;

    public void <init>(java.lang.Iterable)
    {
        net.sourceforge.plantuml.anim.AnimationDecoder r0;
        java.util.ArrayList $r1;
        java.lang.Iterable r2;
        java.util.Iterator r3;
        boolean $z0, $z1, $z3, $z4;
        java.lang.Object $r4, $r9;
        java.lang.CharSequence $r5, $r10;
        java.util.List $r6, $r19;
        java.lang.StringBuilder $r7;
        net.sourceforge.plantuml.anim.AnimationScript $r13;
        java.lang.String $r15, r16, $r20, r21, r22;
        java.util.StringTokenizer $r17;

        r0 := @this: net.sourceforge.plantuml.anim.AnimationDecoder;

        r2 := @parameter0: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.anim.AnimationDecoder: java.util.List result> = $r1;

        r3 = interfaceinvoke r2.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.CharSequence) $r4;

        r21 = interfaceinvoke $r5.<java.lang.CharSequence: java.lang.String toString()>();

        $z1 = virtualinvoke r21.<java.lang.String: boolean matches(java.lang.String)>("^\\s*\\[script\\]\\s*$");

        if $z1 == 0 goto label7;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

     label2:
        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        $r10 = (java.lang.CharSequence) $r9;

        r22 = interfaceinvoke $r10.<java.lang.CharSequence: java.lang.String toString()>();

        $z3 = virtualinvoke r22.<java.lang.String: boolean matches(java.lang.String)>("^\\s*\\[/script\\]\\s*$");

        if $z3 == 0 goto label5;

        $r13 = new net.sourceforge.plantuml.anim.AnimationScript;

        specialinvoke $r13.<net.sourceforge.plantuml.anim.AnimationScript: void <init>()>();

        $r15 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = virtualinvoke $r13.<net.sourceforge.plantuml.anim.AnimationScript: java.lang.String eval(java.lang.String)>($r15);

        $r17 = new java.util.StringTokenizer;

        specialinvoke $r17.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r16, "\n");

     label3:
        $z4 = virtualinvoke $r17.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z4 == 0 goto label4;

        $r19 = r0.<net.sourceforge.plantuml.anim.AnimationDecoder: java.util.List result>;

        $r20 = virtualinvoke $r17.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label3;

     label4:
        goto label6;

     label5:
        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label2;

     label6:
        goto label8;

     label7:
        $r6 = r0.<net.sourceforge.plantuml.anim.AnimationDecoder: java.util.List result>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r21);

     label8:
        goto label1;

     label9:
        return;
    }

    public java.util.List decode()
    {
        net.sourceforge.plantuml.anim.AnimationDecoder r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.anim.AnimationDecoder;

        $r1 = r0.<net.sourceforge.plantuml.anim.AnimationDecoder: java.util.List result>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }
}
