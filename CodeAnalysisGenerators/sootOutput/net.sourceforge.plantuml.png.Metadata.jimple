public class net.sourceforge.plantuml.png.Metadata extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.png.Metadata r0;

        r0 := @this: net.sourceforge.plantuml.png.Metadata;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        net.sourceforge.plantuml.png.Metadata $r0;
        java.lang.String[] r2;
        int i0, i1;
        net.sourceforge.plantuml.security.SFile $r3;
        java.lang.String $r4;

        r2 := @parameter0: java.lang.String[];

        $r0 = new net.sourceforge.plantuml.png.Metadata;

        specialinvoke $r0.<net.sourceforge.plantuml.png.Metadata: void <init>()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = new net.sourceforge.plantuml.security.SFile;

        $r4 = r2[i1];

        specialinvoke $r3.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>($r4);

        virtualinvoke $r0.<net.sourceforge.plantuml.png.Metadata: void readAndDisplayMetadata(net.sourceforge.plantuml.security.SFile)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public void readAndDisplayMetadata(net.sourceforge.plantuml.security.SFile) throws java.io.IOException
    {
        net.sourceforge.plantuml.security.SFile r0;
        javax.imageio.stream.ImageInputStream r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        javax.imageio.ImageReader r4;
        javax.imageio.metadata.IIOMetadata r5;
        java.lang.String[] r6;
        int i0, i1;
        net.sourceforge.plantuml.png.Metadata r7;
        java.lang.String $r8;
        org.w3c.dom.Node $r9;

        r7 := @this: net.sourceforge.plantuml.png.Metadata;

        r0 := @parameter0: net.sourceforge.plantuml.security.SFile;

        r1 = staticinvoke <net.sourceforge.plantuml.security.SImageIO: javax.imageio.stream.ImageInputStream createImageInputStream(net.sourceforge.plantuml.security.SFile)>(r0);

        r2 = staticinvoke <net.sourceforge.plantuml.security.SImageIO: java.util.Iterator getImageReaders(javax.imageio.stream.ImageInputStream)>(r1);

        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (javax.imageio.ImageReader) $r3;

        virtualinvoke r4.<javax.imageio.ImageReader: void setInput(java.lang.Object,boolean)>(r1, 1);

        r5 = virtualinvoke r4.<javax.imageio.ImageReader: javax.imageio.metadata.IIOMetadata getImageMetadata(int)>(0);

        r6 = virtualinvoke r5.<javax.imageio.metadata.IIOMetadata: java.lang.String[] getMetadataFormatNames()>();

        i0 = lengthof r6;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r8 = r6[i1];

        $r9 = virtualinvoke r5.<javax.imageio.metadata.IIOMetadata: org.w3c.dom.Node getAsTree(java.lang.String)>($r8);

        specialinvoke r7.<net.sourceforge.plantuml.png.Metadata: void displayMetadata(org.w3c.dom.Node)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void displayMetadata(org.w3c.dom.Node)
    {
        net.sourceforge.plantuml.png.Metadata r0;
        org.w3c.dom.Node r1;

        r0 := @this: net.sourceforge.plantuml.png.Metadata;

        r1 := @parameter0: org.w3c.dom.Node;

        specialinvoke r0.<net.sourceforge.plantuml.png.Metadata: void displayMetadata(org.w3c.dom.Node,int)>(r1, 0);

        return;
    }

    private void indent(int)
    {
        int i0, i1;
        java.io.PrintStream $r0;
        net.sourceforge.plantuml.png.Metadata r1;

        r1 := @this: net.sourceforge.plantuml.png.Metadata;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void print(java.lang.String)>("    ");

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void displayMetadata(org.w3c.dom.Node, int)
    {
        net.sourceforge.plantuml.png.Metadata r0;
        int i0, $i1, i2, i3;
        java.lang.StringBuilder $r1, $r3, $r6, $r10, $r12, $r14, $r15, $r19, $r21, $r23, $r24, $r26, $r27;
        java.io.PrintStream $r2, $r9, $r11, $r17, $r20;
        org.w3c.dom.Node r4, r18, r29;
        java.lang.String $r5, $r7, $r13, $r16, $r22, $r25, $r28;
        org.w3c.dom.NamedNodeMap r8;

        r0 := @this: net.sourceforge.plantuml.png.Metadata;

        r4 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        specialinvoke r0.<net.sourceforge.plantuml.png.Metadata: void indent(int)>(i0);

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r5 = interfaceinvoke r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r7);

        r8 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        if r8 == null goto label2;

        i2 = interfaceinvoke r8.<org.w3c.dom.NamedNodeMap: int getLength()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label2;

        r18 = interfaceinvoke r8.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i3);

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r22 = interfaceinvoke r18.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=\"");

        $r25 = interfaceinvoke r18.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void print(java.lang.String)>($r28);

        i3 = i3 + 1;

        goto label1;

     label2:
        r29 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if r29 != null goto label3;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("/>");

        return;

     label3:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>(">");

     label4:
        if r29 == null goto label5;

        $i1 = i0 + 1;

        specialinvoke r0.<net.sourceforge.plantuml.png.Metadata: void displayMetadata(org.w3c.dom.Node,int)>(r29, $i1);

        r29 = interfaceinvoke r29.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label4;

     label5:
        specialinvoke r0.<net.sourceforge.plantuml.png.Metadata: void indent(int)>(i0);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r13 = interfaceinvoke r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r16);

        return;
    }
}
