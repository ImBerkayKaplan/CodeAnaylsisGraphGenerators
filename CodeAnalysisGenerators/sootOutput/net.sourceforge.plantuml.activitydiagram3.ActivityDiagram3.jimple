public class net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 extends net.sourceforge.plantuml.UmlDiagram
{
    private net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy swimlaneStrategy;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes;
    private boolean hasUrl;

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.UmlDiagramType $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.Pragma $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType ACTIVITY>;

        specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        $r5 = new net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.Pragma getPragma()>();

        specialinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.Pragma)>($r6, $r7);

        r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes> = $r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: boolean hasUrl> = 0;

        return;
    }

    private void manageSwimlaneStrategy()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy swimlaneStrategy>;

        if $r1 != null goto label1;

        $r2 = <net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy SWIMLANE_FORBIDDEN>;

        r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy swimlaneStrategy> = $r2;

     label1:
        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult swimlane(java.lang.String, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy $r1, $r2, $r3, $r10;
        java.lang.String r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r5;
        net.sourceforge.plantuml.cucadiagram.Display r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r7;
        net.sourceforge.plantuml.command.CommandExecutionResult $r8, $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r4 := @parameter0: java.lang.String;

        r5 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r6 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy swimlaneStrategy>;

        if $r1 != null goto label1;

        $r10 = <net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy SWIMLANE_ALLOWED>;

        r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy swimlaneStrategy> = $r10;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy swimlaneStrategy>;

        $r2 = <net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3$SwimlaneStrategy SWIMLANE_FORBIDDEN>;

        if $r3 != $r2 goto label2;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("This swimlane must be defined at the start of the diagram.");

        return $r9;

     label2:
        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: void swimlane(java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.Display)>(r4, r5, r6);

        $r8 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r8;
    }

    private void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>(r1);

        return;
    }

    private net.sourceforge.plantuml.activitydiagram3.Instruction current()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r1;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.Instruction getCurrent()>();

        return $r2;
    }

    private net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addActivity(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle, net.sourceforge.plantuml.Url, net.sourceforge.plantuml.graphic.color.Colors, net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionSimple $r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r3, $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle r6;
        net.sourceforge.plantuml.Url r7;
        net.sourceforge.plantuml.graphic.color.Colors r8;
        net.sourceforge.plantuml.cucadiagram.Stereotype r9;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r11;
        net.sourceforge.plantuml.command.CommandExecutionResult r12, $r14;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r6 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;

        r7 := @parameter2: net.sourceforge.plantuml.Url;

        r8 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        r9 := @parameter4: net.sourceforge.plantuml.cucadiagram.Stereotype;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionSimple;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionSimple: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r2, $r3, $r5, r6, r7, r8, r9);

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        $z0 = virtualinvoke r12.<net.sourceforge.plantuml.command.CommandExecutionResult: boolean isOk()>();

        if $z0 != 0 goto label1;

        return r12;

     label1:
        $r13 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r13);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageHasUrl(net.sourceforge.plantuml.cucadiagram.Display)>(r2);

        if r7 == null goto label2;

        r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: boolean hasUrl> = 1;

     label2:
        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r14;
    }

    public void addSpot(java.lang.String, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSpot $r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r3;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r4, $r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r6;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r8;

        r3 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.InstructionSpot;

        $r4 = specialinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r5 = r3.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSpot: void <init>(java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, r2, $r4, $r6);

        $r8 = specialinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r0);

        $r10 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r10);

        specialinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addGoto(java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionGoto $r0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;
        java.lang.String r4;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r6;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r8;
        net.sourceforge.plantuml.command.CommandExecutionResult $r9;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r4 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.InstructionGoto;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.InstructionGoto: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,java.lang.String)>($r3, r4);

        $r6 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r0);

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r8);

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r9;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addLabel(java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionLabel $r0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;
        java.lang.String r4;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r6;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r8;
        net.sourceforge.plantuml.command.CommandExecutionResult $r9;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r4 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.InstructionLabel;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.InstructionLabel: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,java.lang.String)>($r3, r4);

        $r6 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r0);

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r8);

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r9;
    }

    public void start()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;
        net.sourceforge.plantuml.activitydiagram3.InstructionStart $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r2 = new net.sourceforge.plantuml.activitydiagram3.InstructionStart;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        specialinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.InstructionStart: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r4, $r5);

        interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r2);

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r7);

        return;
    }

    public void stop()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionStop $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r4;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionStop;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionStop: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r3, $r4);

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: boolean manageSpecialStopEndAfterEndWhile(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        return;
    }

    public void end()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionEnd $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r4;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionEnd;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionEnd: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r3, $r4);

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: boolean manageSpecialStopEndAfterEndWhile(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        return;
    }

    private boolean manageSpecialStopEndAfterEndWhile(net.sourceforge.plantuml.activitydiagram3.Instruction)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r2, r4, r6;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.activitydiagram3.InstructionList r3;
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r6 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionList;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        r3 = (net.sourceforge.plantuml.activitydiagram3.InstructionList) $r2;

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.Instruction getLast()>();

        $z1 = r4 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        r5 = (net.sourceforge.plantuml.activitydiagram3.InstructionWhile) r4;

        $z2 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: boolean containsBreak()>();

        if $z2 == 0 goto label3;

        return 0;

     label3:
        virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: void setSpecial(net.sourceforge.plantuml.activitydiagram3.Instruction)>(r6);

        return 1;
    }

    public void breakInstruction()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;
        net.sourceforge.plantuml.activitydiagram3.InstructionBreak $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r2 = new net.sourceforge.plantuml.activitydiagram3.InstructionBreak;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        specialinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.InstructionBreak: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r4, $r5);

        interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r2);

        return;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("activity3");

        return $r0;
    }

    protected net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.FileFormatOption r0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r4, r12;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r5, $r6;
        net.sourceforge.plantuml.graphic.TextBlockRecentred $r7;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r8, $r9;
        java.io.OutputStream r10;
        net.sourceforge.plantuml.core.ImageData $r11;
        int i0;
        net.sourceforge.plantuml.graphic.TextBlock r13, r14;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r10 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r0 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder(net.sourceforge.plantuml.SvgCharSizeHack)>($r2);

        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: void computeSize(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r12 = r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r5 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        r13 = staticinvoke <net.sourceforge.plantuml.ugraphic.comp.CompressionXorYBuilder: net.sourceforge.plantuml.graphic.TextBlock build(net.sourceforge.plantuml.ugraphic.comp.CompressionMode,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r12, r3);

        $r6 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_Y>;

        r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.comp.CompressionXorYBuilder: net.sourceforge.plantuml.graphic.TextBlock build(net.sourceforge.plantuml.ugraphic.comp.CompressionMode,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.StringBounder)>($r6, r13, r3);

        $r7 = new net.sourceforge.plantuml.graphic.TextBlockRecentred;

        specialinvoke $r7.<net.sourceforge.plantuml.graphic.TextBlockRecentred: void <init>(net.sourceforge.plantuml.graphic.TextBlock)>(r14);

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r0);

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r7);

        $r11 = virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r10);

        return $r11;
    }

    public void fork()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionFork $r1;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r2, $r8;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r3, $r10;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionFork;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionFork: void <init>(net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r2, $r3, $r4, $r6);

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        $r10 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r10);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult forkAgain()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r9;
        net.sourceforge.plantuml.activitydiagram3.InstructionFork r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionFork;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionFork) $r3;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.InstructionFork: void manageOutRendering(net.sourceforge.plantuml.activitydiagram3.LinkRendering,boolean)>($r5, 0);

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r6);

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.InstructionFork: void forkAgain(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r8);

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r9;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find fork");

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult endFork(net.sourceforge.plantuml.activitydiagram3.ForkStyle, java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3, $r11;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r12;
        net.sourceforge.plantuml.activitydiagram3.InstructionFork r4;
        net.sourceforge.plantuml.activitydiagram3.ForkStyle r5;
        java.lang.String r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r8;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r9, $r10;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r5 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ForkStyle;

        r6 := @parameter1: java.lang.String;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionFork;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionFork) $r3;

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.InstructionFork: void setStyle(net.sourceforge.plantuml.activitydiagram3.ForkStyle,java.lang.String,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r5, r6, $r8);

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.InstructionFork: void manageOutRendering(net.sourceforge.plantuml.activitydiagram3.LinkRendering,boolean)>($r9, 1);

        $r10 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r10);

        $r11 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.InstructionFork: net.sourceforge.plantuml.activitydiagram3.Instruction getParent()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r11);

        $r12 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r12;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find fork");

        return $r2;
    }

    public void split()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionSplit $r0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r1;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r2, $r8;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r3, $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r5;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.InstructionSplit;

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r3 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.InstructionSplit: void <init>(net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r2, $r3, $r5);

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r7);

        $r8 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r0);

        specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r0);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult splitAgain()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r7;
        net.sourceforge.plantuml.activitydiagram3.InstructionSplit $r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionSplit;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionSplit) $r3;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.InstructionSplit: void splitAgain(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r5);

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r6);

        $r7 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r7;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find split");

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult endSplit()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3, $r9, $r11;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r12;
        net.sourceforge.plantuml.activitydiagram3.InstructionSplit $r4, $r10;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionSplit;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionSplit) $r3;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.InstructionSplit: void endSplit(net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r5, $r7);

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r8);

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r10 = (net.sourceforge.plantuml.activitydiagram3.InstructionSplit) $r9;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.InstructionSplit: net.sourceforge.plantuml.activitydiagram3.Instruction getParent()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r11);

        $r12 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r12;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find split");

        return $r2;
    }

    public void startSwitch(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r4, $r10;
        net.sourceforge.plantuml.cucadiagram.Display r5;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r6, $r12;
        net.sourceforge.plantuml.ugraphic.color.HColor r7;
        net.sourceforge.plantuml.ISkinParam $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r5 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r7 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ISkinParam)>($r3, $r4, r5, $r6, r7, $r8);

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        $r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r12);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult switchCase(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3;
        boolean $z0, z1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r8, $r9;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch $r5;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r5 = (net.sourceforge.plantuml.activitydiagram3.InstructionSwitch) $r3;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        z1 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: boolean switchCase(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>(r4, $r6);

        if z1 != 0 goto label1;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("You cannot put an elseIf here");

        return $r9;

     label1:
        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r7);

        $r8 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r8;

     label2:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find switch");

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult endSwitch()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3, $r7, $r9;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r10;
        net.sourceforge.plantuml.activitydiagram3.InstructionSwitch $r4, $r8;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionSwitch;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionSwitch) $r3;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: void endSwitch(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r5);

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r6);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r8 = (net.sourceforge.plantuml.activitydiagram3.InstructionSwitch) $r7;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.InstructionSwitch: net.sourceforge.plantuml.activitydiagram3.Instruction getParent()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r9);

        $r10 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r10;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find switch");

        return $r2;
    }

    public void startIf(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionIf $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r4, $r14;
        net.sourceforge.plantuml.cucadiagram.Display r5, r7;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r6, $r8, $r9, $r16;
        net.sourceforge.plantuml.ugraphic.color.HColor r10;
        net.sourceforge.plantuml.ISkinParam $r11;
        net.sourceforge.plantuml.Url r12;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r5 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r7 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r10 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r12 := @parameter3: net.sourceforge.plantuml.Url;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionIf;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering withDisplay(net.sourceforge.plantuml.cucadiagram.Display)>(r7);

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionIf: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.Url)>($r3, $r4, r5, $r8, $r9, r10, $r11, r12);

        $r14 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r14.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        $r16 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r16);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult elseIf(net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3;
        boolean $z0, z1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r11, $r12;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r4, r6, $r8, $r10;
        net.sourceforge.plantuml.cucadiagram.Display r5;
        net.sourceforge.plantuml.activitydiagram3.InstructionIf $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r4 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r5 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r6 := @parameter2: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r9 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionIf;

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r7 = (net.sourceforge.plantuml.activitydiagram3.InstructionIf) $r3;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        z1 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.InstructionIf: boolean elseIf(net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.ugraphic.color.HColor)>(r4, r5, r6, $r8, r9);

        if z1 != 0 goto label1;

        $r12 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("You cannot put an elseIf here");

        return $r12;

     label1:
        $r10 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r10);

        $r11 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r11;

     label2:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find if");

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult else2(net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3;
        boolean $z0, z1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r8, $r9;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r4, $r6, $r7;
        net.sourceforge.plantuml.activitydiagram3.InstructionIf $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r4 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionIf;

        if $z0 == 0 goto label2;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r5 = (net.sourceforge.plantuml.activitydiagram3.InstructionIf) $r3;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        z1 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.InstructionIf: boolean swithToElse2(net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>(r4, $r6);

        if z1 != 0 goto label1;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find if");

        return $r9;

     label1:
        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r7);

        $r8 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r8;

     label2:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find if");

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult endif()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3, $r7, $r9;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r10;
        net.sourceforge.plantuml.activitydiagram3.InstructionIf $r4, $r8;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionIf;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionIf) $r3;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.InstructionIf: void endif(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r5);

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r6);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r8 = (net.sourceforge.plantuml.activitydiagram3.InstructionIf) $r7;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.InstructionIf: net.sourceforge.plantuml.activitydiagram3.Instruction getParent()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r9);

        $r10 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r10;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find if");

        return $r2;
    }

    public void startRepeat(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r3, $r10;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r4, $r12;
        net.sourceforge.plantuml.ugraphic.color.HColor r5;
        net.sourceforge.plantuml.cucadiagram.Display r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle r7;
        net.sourceforge.plantuml.graphic.color.Colors r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r6 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r7 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;

        r8 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes,net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.graphic.color.Colors)>($r2, $r3, $r4, r5, r6, r7, r8);

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        $r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r12);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult repeatWhile(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3, $r15;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r17;
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, r8, $r12, $r16;
        net.sourceforge.plantuml.graphic.Rainbow r6;
        net.sourceforge.plantuml.cucadiagram.Display r7, r9, r10, r11;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r14;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r9 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r10 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r11 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r7 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.Rainbow;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionRepeat) $r3;

        $r5 = new net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        specialinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: void <init>(net.sourceforge.plantuml.graphic.Rainbow)>(r6);

        r8 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering withDisplay(net.sourceforge.plantuml.cucadiagram.Display)>(r7);

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: void setTest(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r9, r10, r11, $r12, r8, $r14);

        $r15 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.Instruction getParent()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r15);

        $r16 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r16);

        $r17 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r17;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find repeat");

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult backward(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r2, $r4, $r12;
        boolean $z0, $z1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3, $r11, $r15;
        net.sourceforge.plantuml.cucadiagram.Display r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r6, $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r7, $r14;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle r8;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r9, r10;
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r16;
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile r17;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r5 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r8 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;

        r9 := @parameter2: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r10 := @parameter3: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        if $z0 == 0 goto label1;

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        r16 = (net.sourceforge.plantuml.activitydiagram3.InstructionRepeat) $r12;

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        virtualinvoke r16.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: void setBackward(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>(r5, $r14, r8, r9, r10);

        $r15 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r15;

     label1:
        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z1 = $r2 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        if $z1 == 0 goto label2;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        r17 = (net.sourceforge.plantuml.activitydiagram3.InstructionWhile) $r4;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        virtualinvoke r17.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: void setBackward(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>(r5, $r7, r8, r9, r10);

        $r11 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r11;

     label2:
        $r3 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find repeat");

        return $r3;
    }

    public void doWhile(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r4, $r11;
        net.sourceforge.plantuml.cucadiagram.Display r5, r7;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r6;
        net.sourceforge.plantuml.ugraphic.color.HColor r8;
        net.sourceforge.plantuml.ISkinParam $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r5 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r7 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r8 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ISkinParam)>($r3, $r4, r5, $r6, r7, r8, $r9);

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult endwhile(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3, $r6, $r10, $r12;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r13;
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile $r4, $r8, $r11;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r9;
        net.sourceforge.plantuml.cucadiagram.Display r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r7 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionWhile) $r3;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: void incoming(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r5);

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r8 = (net.sourceforge.plantuml.activitydiagram3.InstructionWhile) $r6;

        virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: void outDisplay(net.sourceforge.plantuml.cucadiagram.Display)>(r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r9);

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r11 = (net.sourceforge.plantuml.activitydiagram3.InstructionWhile) $r10;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction getParent()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r12);

        $r13 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r13;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find while");

        return $r2;
    }

    public final net.sourceforge.plantuml.command.CommandExecutionResult kill()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Instruction: boolean kill()>();

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("kill cannot be used here");

        return $r3;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r2;
    }

    public void startGroup(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.USymbol, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionGroup $r1;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r2, $r12;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.ugraphic.color.HColor r4, r5, r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r7;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r9;
        net.sourceforge.plantuml.graphic.USymbol r10;
        double d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r3 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r5 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r8 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r10 := @parameter4: net.sourceforge.plantuml.graphic.USymbol;

        d0 := @parameter5: double;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageSwimlaneStrategy()>();

        $r1 = new net.sourceforge.plantuml.activitydiagram3.InstructionGroup;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionGroup: void <init>(net.sourceforge.plantuml.activitydiagram3.Instruction,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.graphic.USymbol,double)>($r2, r3, r4, r5, $r7, r8, $r9, r10, d0);

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        interfaceinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r1);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult endGroup()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r3, $r5;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r6;
        net.sourceforge.plantuml.activitydiagram3.InstructionGroup $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionGroup;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r4 = (net.sourceforge.plantuml.activitydiagram3.InstructionGroup) $r3;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.InstructionGroup: net.sourceforge.plantuml.activitydiagram3.Instruction getParent()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setCurrent(net.sourceforge.plantuml.activitydiagram3.Instruction)>($r5);

        $r6 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r6;

     label1:
        $r2 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot find group");

        return $r2;
    }

    private void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r1, $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r2;
        java.lang.Object $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = (net.sourceforge.plantuml.activitydiagram3.LinkRendering) $r3;

        virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: void setNextLinkRenderer(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r4);

        return;
    }

    private void setNextLink(net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r2;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r3, $r4, r6;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.activitydiagram3.InstructionCollection $r5;
        net.sourceforge.plantuml.activitydiagram3.InstructionIf $r7;
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile $r8;
        net.sourceforge.plantuml.graphic.Rainbow $r9;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r3 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionCollection;

        if $z0 == 0 goto label2;

        $r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r5 = (net.sourceforge.plantuml.activitydiagram3.InstructionCollection) $r4;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.InstructionCollection: net.sourceforge.plantuml.activitydiagram3.Instruction getLast()>();

        $z1 = r6 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        if $z1 == 0 goto label1;

        $r8 = (net.sourceforge.plantuml.activitydiagram3.InstructionWhile) r6;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: void outColor(net.sourceforge.plantuml.graphic.Rainbow)>($r9);

        goto label2;

     label1:
        $z2 = r6 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionIf;

        if $z2 == 0 goto label2;

        $r7 = (net.sourceforge.plantuml.activitydiagram3.InstructionIf) r6;

        virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.InstructionIf: void outColor(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>(r0);

     label2:
        specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>(r0);

        return;
    }

    public void setLabelNextArrow(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r5, $r7, $r8;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2, $r4;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.activitydiagram3.InstructionWhile $r6, $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r3 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionWhile;

        if $z0 == 0 goto label1;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r6 = (net.sourceforge.plantuml.activitydiagram3.InstructionWhile) $r5;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: net.sourceforge.plantuml.activitydiagram3.Instruction getLast()>();

        if $r7 != null goto label1;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r9 = (net.sourceforge.plantuml.activitydiagram3.InstructionWhile) $r8;

        virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.InstructionWhile: void overwriteYes(net.sourceforge.plantuml.cucadiagram.Display)>(r3);

        return;

     label1:
        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering withDisplay(net.sourceforge.plantuml.cucadiagram.Display)>(r3);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLinkRendererInternal(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r4);

        return;
    }

    public void setColorNextArrow(net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.graphic.Rainbow r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r3;

        r3 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.Rainbow;

        if r0 != null goto label1;

        return;

     label1:
        $r1 = new net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: void <init>(net.sourceforge.plantuml.graphic.Rainbow)>(r0);

        specialinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void setNextLink(net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r1);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addNote(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.sequencediagram.NoteType, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.sequencediagram.NotePosition r3;
        net.sourceforge.plantuml.sequencediagram.NoteType r4;
        net.sourceforge.plantuml.graphic.color.Colors r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r7;
        boolean z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r8, $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r4 := @parameter2: net.sourceforge.plantuml.sequencediagram.NoteType;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.Instruction current()>();

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swinlanes>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        z0 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Instruction: boolean addNote(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r2, r3, r4, r5, $r7);

        if z0 != 0 goto label1;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Cannot add note here");

        return $r9;

     label1:
        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: void manageHasUrl(net.sourceforge.plantuml.cucadiagram.Display)>(r2);

        $r8 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r8;
    }

    private void manageHasUrl(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: boolean hasUrl()>();

        if $z0 == 0 goto label1;

        r1.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: boolean hasUrl> = 1;

     label1:
        return;
    }

    public boolean hasUrl()
    {
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        $z0 = r0.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: boolean hasUrl>;

        return $z0;
    }
}
