public class ext.plantuml.com.ctreber.acearth.util.Coordinate extends java.lang.Object
{
    private static final double MEAN_OBLIQUITY;
    private double fLat;
    private double fLong;

    public void <init>()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(double, double)
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double d0, d1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat> = d0;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong> = d1;

        return;
    }

    public void renderAsXML(java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10;
        ext.plantuml.com.ctreber.acearth.util.Coordinate r3;
        double $d0, $d1;
        java.lang.String $r6, $r11;

        r3 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        r0 := @parameter0: java.io.Writer;

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("<Coordinate>\n");

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <latitude>");

        $d0 = r3.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</latitude>\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r6);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <longitude>");

        $d1 = r3.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</longitude>\n");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>($r11);

        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("</Coordinate>\n");

        return;
    }

    public ext.plantuml.com.ctreber.acearth.util.Point3D getPoint3D()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double $d0, d1, $d2, d3, $d4, $d5, d6, d7, $d8, $d9, d10;
        ext.plantuml.com.ctreber.acearth.util.Point3D $r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        d1 = staticinvoke <ext.plantuml.com.ctreber.acearth.util.Toolkit: double degsToRads(double)>($d0);

        $d2 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        d3 = staticinvoke <ext.plantuml.com.ctreber.acearth.util.Toolkit: double degsToRads(double)>($d2);

        $d4 = staticinvoke <java.lang.Math: double cos(double)>(d1);

        $d5 = staticinvoke <java.lang.Math: double sin(double)>(d3);

        d6 = $d4 * $d5;

        d7 = staticinvoke <java.lang.Math: double sin(double)>(d1);

        $d8 = staticinvoke <java.lang.Math: double cos(double)>(d1);

        $d9 = staticinvoke <java.lang.Math: double cos(double)>(d3);

        d10 = $d8 * $d9;

        $r1 = new ext.plantuml.com.ctreber.acearth.util.Point3D;

        specialinvoke $r1.<ext.plantuml.com.ctreber.acearth.util.Point3D: void <init>(double,double,double)>(d6, d7, d10);

        return $r1;
    }

    public ext.plantuml.com.ctreber.acearth.util.Point3D getPoint3DRads()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double $d0, $d1, $d2, $d3, d4, $d5, d6, $d7, $d8, $d9, $d10, d11;
        ext.plantuml.com.ctreber.acearth.util.Point3D $r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        $d2 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        d4 = $d1 * $d3;

        $d5 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        d6 = staticinvoke <java.lang.Math: double sin(double)>($d5);

        $d7 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d8 = staticinvoke <java.lang.Math: double cos(double)>($d7);

        $d9 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d9);

        d11 = $d8 * $d10;

        $r1 = new ext.plantuml.com.ctreber.acearth.util.Point3D;

        specialinvoke $r1.<ext.plantuml.com.ctreber.acearth.util.Point3D: void <init>(double,double,double)>(d4, d6, d11);

        return $r1;
    }

    public ext.plantuml.com.ctreber.acearth.util.Coordinate eclipticToEquatorial()
    {
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, d22;
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0, $r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        d0 = staticinvoke <java.lang.Math: double sin(double)>(0.4091155090166427);

        d1 = staticinvoke <java.lang.Math: double cos(double)>(0.4091155090166427);

        $d2 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $d5 = $d3 * d1;

        $d4 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d6 = staticinvoke <java.lang.Math: double tan(double)>($d4);

        $d7 = $d6 * d0;

        $d9 = $d5 - $d7;

        $d8 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        d11 = staticinvoke <java.lang.Math: double atan2(double,double)>($d9, $d10);

        $d12 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d13 = staticinvoke <java.lang.Math: double sin(double)>($d12);

        $d15 = $d13 * d1;

        $d14 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d16 = staticinvoke <java.lang.Math: double cos(double)>($d14);

        $d18 = $d16 * d0;

        $d17 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d19 = staticinvoke <java.lang.Math: double sin(double)>($d17);

        $d20 = $d18 * $d19;

        $d21 = $d15 + $d20;

        d22 = staticinvoke <java.lang.Math: double asin(double)>($d21);

        $r1 = new ext.plantuml.com.ctreber.acearth.util.Coordinate;

        specialinvoke $r1.<ext.plantuml.com.ctreber.acearth.util.Coordinate: void <init>(double,double)>(d22, d11);

        return $r1;
    }

    public void add(ext.plantuml.com.ctreber.acearth.util.Coordinate)
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        r1 := @parameter0: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d1 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d0 = r1.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d2 = $d1 + $d0;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat> = $d2;

        $d4 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d3 = r1.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d5 = $d4 + $d3;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong> = $d5;

        virtualinvoke r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: void wrap()>();

        return;
    }

    public void wrap()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $b0 = $d0 cmpl 90.0;

        if $b0 <= 0 goto label1;

        $d13 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d14 = 180.0 - $d13;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat> = $d14;

        $d15 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d16 = $d15 + 180.0;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong> = $d16;

        goto label2;

     label1:
        $d1 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $b1 = $d1 cmpg -90.0;

        if $b1 >= 0 goto label2;

        $d9 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $d10 = -180.0 - $d9;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat> = $d10;

        $d11 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d12 = $d11 + 180.0;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong> = $d12;

     label2:
        $d17 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $b5 = $d17 cmpl 180.0;

        if $b5 <= 0 goto label4;

     label3:
        $d6 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d7 = $d6 - 360.0;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong> = $d7;

        $d8 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $b4 = $d8 cmpl 180.0;

        if $b4 > 0 goto label3;

        goto label6;

     label4:
        $d2 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $b2 = $d2 cmpg -180.0;

        if $b2 >= 0 goto label6;

     label5:
        $d3 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $d4 = $d3 + 360.0;

        r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong> = $d4;

        $d5 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $b3 = $d5 cmpg -180.0;

        if $b3 < 0 goto label5;

     label6:
        return;
    }

    public double getLat()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double $d0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        return $d0;
    }

    public double getDE()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double $d0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        return $d0;
    }

    public double getLong()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double $d0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        return $d0;
    }

    public double getRA()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double $d0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        return $d0;
    }

    public boolean check()
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate r0;
        double $d0, $d1, $d2, $d3;
        byte $b0, $b1, $b2, $b3;
        boolean $z0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $b0 = -90.0 cmpg $d0;

        if $b0 > 0 goto label1;

        $d1 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $b1 = $d1 cmpg 90.0;

        if $b1 > 0 goto label1;

        $d2 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $b2 = -180.0 cmpg $d2;

        if $b2 > 0 goto label1;

        $d3 = r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $b3 = $d3 cmpg 180.0;

        if $b3 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5;
        ext.plantuml.com.ctreber.acearth.util.Coordinate r2;
        double $d0, $d1;
        java.lang.String $r6;

        r2 := @this: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lat: ");

        $d0 = r2.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLat>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", long: ");

        $d1 = r2.<ext.plantuml.com.ctreber.acearth.util.Coordinate: double fLong>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static void <clinit>()
    {
        <ext.plantuml.com.ctreber.acearth.util.Coordinate: double MEAN_OBLIQUITY> = 0.4091155090166427;

        return;
    }
}
