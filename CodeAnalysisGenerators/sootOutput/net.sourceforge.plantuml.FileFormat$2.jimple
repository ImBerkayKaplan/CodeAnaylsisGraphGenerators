class net.sourceforge.plantuml.FileFormat$2 extends net.sourceforge.plantuml.graphic.StringBounderRaw
{
    final net.sourceforge.plantuml.FileFormat this$0;

    void <init>(net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.FileFormat$2 r0;
        net.sourceforge.plantuml.FileFormat r1;

        r0 := @this: net.sourceforge.plantuml.FileFormat$2;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormat;

        r0.<net.sourceforge.plantuml.FileFormat$2: net.sourceforge.plantuml.FileFormat this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.StringBounderRaw: void <init>()>();

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.FileFormat$2 r0;

        r0 := @this: net.sourceforge.plantuml.FileFormat$2;

        return "FileFormat::getNormalStringBounder";
    }

    protected net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.ugraphic.UFont, java.lang.String)
    {
        net.sourceforge.plantuml.ugraphic.UFont r0;
        java.lang.String r1;
        net.sourceforge.plantuml.Dimension2DDouble $r2;
        net.sourceforge.plantuml.FileFormat$2 r3;

        r3 := @this: net.sourceforge.plantuml.FileFormat$2;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.Dimension2DDouble access$000(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>(r0, r1);

        return $r2;
    }
}
