public class net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UText, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.svg.SvgGraphics)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r1;
        net.sourceforge.plantuml.ugraphic.UClip r2;
        net.sourceforge.plantuml.ugraphic.UText r3;
        java.awt.font.TextLayout r4;
        net.sourceforge.plantuml.svg.SvgGraphics r5;
        double d0, d1;
        java.awt.Shape $r6;
        java.awt.geom.PathIterator $r7;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r8;
        net.sourceforge.plantuml.ugraphic.UParam r9;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UText;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r8 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r9 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r5 := @parameter5: net.sourceforge.plantuml.svg.SvgGraphics;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(double,double)>(d0, d1);

        if $z0 != 0 goto label1;

        return;

     label1:
        r4 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: java.awt.font.TextLayout createTextLayout(net.sourceforge.plantuml.ugraphic.UText)>(r3);

        $r6 = virtualinvoke r4.<java.awt.font.TextLayout: java.awt.Shape getOutline(java.awt.geom.AffineTransform)>(null);

        $r7 = interfaceinvoke $r6.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);

        virtualinvoke r5.<net.sourceforge.plantuml.svg.SvgGraphics: void drawPathIterator(double,double,java.awt.geom.PathIterator)>(d0, d1, $r7);

        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.svg.SvgGraphics $r5;
        net.sourceforge.plantuml.ugraphic.UText $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UText) r1;

        $r5 = (net.sourceforge.plantuml.svg.SvgGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.DriverTextAsPathSvg: void draw(net.sourceforge.plantuml.ugraphic.UText,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.svg.SvgGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
