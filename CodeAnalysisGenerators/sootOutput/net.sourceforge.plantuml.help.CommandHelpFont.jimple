public class net.sourceforge.plantuml.help.CommandHelpFont extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.help.CommandHelpFont r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.help.CommandHelpFont;

        $r1 = staticinvoke <net.sourceforge.plantuml.help.CommandHelpFont: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.command.regex.RegexConcat $r8;

        $r0 = class "Lnet/sourceforge/plantuml/help/CommandHelpFont;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("help");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("fonts?");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[4] = $r7;

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r8;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.help.Help, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.help.Help r0;
        java.awt.GraphicsEnvironment $r1;
        java.lang.String[] r2;
        int i0, i1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;
        java.lang.String r5, $r9;
        java.lang.StringBuilder $r6, $r7, $r8;
        net.sourceforge.plantuml.help.CommandHelpFont r10;
        net.sourceforge.plantuml.LineLocation r11;
        net.sourceforge.plantuml.command.regex.RegexResult r12;

        r10 := @this: net.sourceforge.plantuml.help.CommandHelpFont;

        r0 := @parameter0: net.sourceforge.plantuml.help.Help;

        r11 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r12 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>("<b>Help on font");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>(" ");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>("The code of this command is located in <i>net.sourceforge.plantuml.help</i> package.");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>("You may improve it on <i>https://github.com/plantuml/plantuml/tree/master/src/net/sourceforge/plantuml/help</i>");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>(" ");

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>(" The possible font on your system are :");

        $r1 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        r2 = virtualinvoke $r1.<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r2[i1];

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("* ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<net.sourceforge.plantuml.help.Help: void add(java.lang.CharSequence)>($r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r4;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.help.CommandHelpFont r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.help.Help $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.help.CommandHelpFont;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.help.Help) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.help.CommandHelpFont: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.help.Help,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
