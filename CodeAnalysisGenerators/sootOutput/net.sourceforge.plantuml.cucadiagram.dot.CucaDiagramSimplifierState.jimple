public final class net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram;
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;

    public void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram, java.util.List, net.sourceforge.plantuml.graphic.StringBounder) throws java.io.IOException, java.lang.InterruptedException
    {
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.cucadiagram.IGroup $r3, r7;
        java.util.Collection r4;
        java.util.Iterator r5;
        java.lang.Object $r6;
        boolean $z0, z1, $z2;
        net.sourceforge.plantuml.svek.IEntityImage r8;
        net.sourceforge.plantuml.cucadiagram.GroupType $r9, $r10;
        java.util.List r13;
        net.sourceforge.plantuml.cucadiagram.LeafType $r14;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r13 := @parameter1: java.util.List;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r2;

     label1:
        z1 = 0;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()>();

        r4 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState: java.util.Collection getOrdered(net.sourceforge.plantuml.cucadiagram.IGroup)>($r3);

        r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r6;

        $z0 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: boolean isAutarkic(net.sourceforge.plantuml.cucadiagram.IGroup)>(r7);

        if $z0 == 0 goto label5;

        r8 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState: net.sourceforge.plantuml.svek.IEntityImage computeImage(net.sourceforge.plantuml.cucadiagram.IGroup)>(r7);

        $r9 = interfaceinvoke r7.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r10 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r9 != $r10 goto label3;

        $r14 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STATE_CONCURRENT>;

        goto label4;

     label3:
        $r14 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STATE>;

     label4:
        interfaceinvoke r7.<net.sourceforge.plantuml.cucadiagram.IGroup: void overrideImage(net.sourceforge.plantuml.svek.IEntityImage,net.sourceforge.plantuml.cucadiagram.LeafType)>(r8, $r14);

        z1 = 1;

     label5:
        goto label2;

     label6:
        if z1 != 0 goto label1;

        return;
    }

    private java.util.Collection getOrdered(net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        java.util.LinkedHashSet $r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r2, r8;
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState r3;
        int $i0, i1;
        java.util.ArrayList $r4;
        java.util.Iterator r6;
        boolean $z1, $z2;
        java.lang.Object $r7;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>(r2);

     label1:
        i1 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        specialinvoke r3.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState: void addOneLevel(java.util.Collection)>($r0);

        $i0 = interfaceinvoke $r0.<java.util.Collection: int size()>();

        if i1 != $i0 goto label1;

        goto label2;

     label2:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r6 = interfaceinvoke $r0.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r7;

        $z2 = r8 instanceof net.sourceforge.plantuml.cucadiagram.GroupRoot;

        if $z2 != 0 goto label4;

        interfaceinvoke $r4.<java.util.List: void add(int,java.lang.Object)>(0, r8);

     label4:
        goto label3;

     label5:
        return $r4;
    }

    private void addOneLevel(java.util.Collection)
    {
        java.util.ArrayList $r0;
        java.util.Collection r1, $r6;
        java.util.Iterator r2, r8;
        boolean $z0, $z1;
        java.lang.Object $r3, $r9;
        net.sourceforge.plantuml.cucadiagram.IGroup r4, r10;
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState r5;
        java.util.List $r7;

        r5 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState;

        r1 := @parameter0: java.util.Collection;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        r2 = virtualinvoke $r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r3;

        $r6 = interfaceinvoke r4.<net.sourceforge.plantuml.cucadiagram.IGroup: java.util.Collection getChildren()>();

        $r7 = specialinvoke r5.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState: java.util.List reverse(java.util.Collection)>($r6);

        r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r9;

        interfaceinvoke r1.<java.util.Collection: boolean add(java.lang.Object)>(r10);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    private java.util.List reverse(java.util.Collection)
    {
        java.util.ArrayList $r0;
        java.util.Collection r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r4;
        net.sourceforge.plantuml.cucadiagram.IGroup r5;
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState r6;

        r6 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState;

        r2 := @parameter0: java.util.Collection;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r4;

        interfaceinvoke $r0.<java.util.List: void add(int,java.lang.Object)>(0, r5);

        goto label1;

     label2:
        return $r0;
    }

    private net.sourceforge.plantuml.svek.IEntityImage computeImage(net.sourceforge.plantuml.cucadiagram.IGroup) throws java.io.IOException, java.lang.InterruptedException
    {
        net.sourceforge.plantuml.svek.GroupPngMakerState $r0;
        net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState r1;
        net.sourceforge.plantuml.cucadiagram.IGroup r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r4;
        net.sourceforge.plantuml.svek.IEntityImage $r6;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        $r0 = new net.sourceforge.plantuml.svek.GroupPngMakerState;

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.dot.CucaDiagramSimplifierState: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.graphic.StringBounder)>($r4, r2, $r3);

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.svek.IEntityImage getImage()>();

        return $r6;
    }
}
