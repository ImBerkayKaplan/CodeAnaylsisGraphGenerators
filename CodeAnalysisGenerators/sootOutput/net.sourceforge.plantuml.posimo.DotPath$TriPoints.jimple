class net.sourceforge.plantuml.posimo.DotPath$TriPoints extends java.lang.Object
{
    private final double x1;
    private final double y1;
    private final double x2;
    private final double y2;
    private final double x;
    private final double y;

    public void <init>(java.awt.geom.Point2D$Double, java.awt.geom.Point2D$Double, java.awt.geom.Point2D$Double)
    {
        net.sourceforge.plantuml.posimo.DotPath$TriPoints r0;
        java.awt.geom.Point2D$Double r1, r2, r3;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: net.sourceforge.plantuml.posimo.DotPath$TriPoints;

        r1 := @parameter0: java.awt.geom.Point2D$Double;

        r2 := @parameter1: java.awt.geom.Point2D$Double;

        r3 := @parameter2: java.awt.geom.Point2D$Double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D$Double: double getX()>();

        r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double x1> = $d0;

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D$Double: double getY()>();

        r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double y1> = $d1;

        $d2 = virtualinvoke r2.<java.awt.geom.Point2D$Double: double getX()>();

        r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double x2> = $d2;

        $d3 = virtualinvoke r2.<java.awt.geom.Point2D$Double: double getY()>();

        r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double y2> = $d3;

        $d4 = virtualinvoke r3.<java.awt.geom.Point2D$Double: double getX()>();

        r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double x> = $d4;

        $d5 = virtualinvoke r3.<java.awt.geom.Point2D$Double: double getY()>();

        r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double y> = $d5;

        return;
    }

    static double access$000(net.sourceforge.plantuml.posimo.DotPath$TriPoints)
    {
        net.sourceforge.plantuml.posimo.DotPath$TriPoints r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.posimo.DotPath$TriPoints;

        $d0 = r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double x1>;

        return $d0;
    }

    static double access$100(net.sourceforge.plantuml.posimo.DotPath$TriPoints)
    {
        net.sourceforge.plantuml.posimo.DotPath$TriPoints r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.posimo.DotPath$TriPoints;

        $d0 = r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double y1>;

        return $d0;
    }

    static double access$200(net.sourceforge.plantuml.posimo.DotPath$TriPoints)
    {
        net.sourceforge.plantuml.posimo.DotPath$TriPoints r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.posimo.DotPath$TriPoints;

        $d0 = r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double x2>;

        return $d0;
    }

    static double access$300(net.sourceforge.plantuml.posimo.DotPath$TriPoints)
    {
        net.sourceforge.plantuml.posimo.DotPath$TriPoints r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.posimo.DotPath$TriPoints;

        $d0 = r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double y2>;

        return $d0;
    }

    static double access$400(net.sourceforge.plantuml.posimo.DotPath$TriPoints)
    {
        net.sourceforge.plantuml.posimo.DotPath$TriPoints r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.posimo.DotPath$TriPoints;

        $d0 = r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double x>;

        return $d0;
    }

    static double access$500(net.sourceforge.plantuml.posimo.DotPath$TriPoints)
    {
        net.sourceforge.plantuml.posimo.DotPath$TriPoints r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.posimo.DotPath$TriPoints;

        $d0 = r0.<net.sourceforge.plantuml.posimo.DotPath$TriPoints: double y>;

        return $d0;
    }
}
