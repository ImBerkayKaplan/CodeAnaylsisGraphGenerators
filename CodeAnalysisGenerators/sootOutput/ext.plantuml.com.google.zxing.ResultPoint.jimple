public class ext.plantuml.com.google.zxing.ResultPoint extends java.lang.Object
{
    private final float x;
    private final float y;

    public void <init>(float, float)
    {
        ext.plantuml.com.google.zxing.ResultPoint r0;
        float f0, f1;

        r0 := @this: ext.plantuml.com.google.zxing.ResultPoint;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.google.zxing.ResultPoint: float x> = f0;

        r0.<ext.plantuml.com.google.zxing.ResultPoint: float y> = f1;

        return;
    }

    public final float getX()
    {
        ext.plantuml.com.google.zxing.ResultPoint r0;
        float $f0;

        r0 := @this: ext.plantuml.com.google.zxing.ResultPoint;

        $f0 = r0.<ext.plantuml.com.google.zxing.ResultPoint: float x>;

        return $f0;
    }

    public final float getY()
    {
        ext.plantuml.com.google.zxing.ResultPoint r0;
        float $f0;

        r0 := @this: ext.plantuml.com.google.zxing.ResultPoint;

        $f0 = r0.<ext.plantuml.com.google.zxing.ResultPoint: float y>;

        return $f0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1;
        ext.plantuml.com.google.zxing.ResultPoint r1, r2;
        float $f0, $f1, $f2, $f3;
        byte $b0, $b1;

        r2 := @this: ext.plantuml.com.google.zxing.ResultPoint;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ext.plantuml.com.google.zxing.ResultPoint;

        if $z0 == 0 goto label3;

        r1 = (ext.plantuml.com.google.zxing.ResultPoint) r0;

        $f1 = r2.<ext.plantuml.com.google.zxing.ResultPoint: float x>;

        $f0 = r1.<ext.plantuml.com.google.zxing.ResultPoint: float x>;

        $b0 = $f1 cmpl $f0;

        if $b0 != 0 goto label1;

        $f3 = r2.<ext.plantuml.com.google.zxing.ResultPoint: float y>;

        $f2 = r1.<ext.plantuml.com.google.zxing.ResultPoint: float y>;

        $b1 = $f3 cmpl $f2;

        if $b1 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        ext.plantuml.com.google.zxing.ResultPoint r0;
        float $f0, $f1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: ext.plantuml.com.google.zxing.ResultPoint;

        $f0 = r0.<ext.plantuml.com.google.zxing.ResultPoint: float x>;

        $i0 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f0);

        $i1 = 31 * $i0;

        $f1 = r0.<ext.plantuml.com.google.zxing.ResultPoint: float y>;

        $i2 = staticinvoke <java.lang.Float: int floatToIntBits(float)>($f1);

        $i3 = $i1 + $i2;

        return $i3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0;
        ext.plantuml.com.google.zxing.ResultPoint r3;
        float $f0, $f1;
        java.lang.String $r8;

        r3 := @this: ext.plantuml.com.google.zxing.ResultPoint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(25);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $f0 = r3.<ext.plantuml.com.google.zxing.ResultPoint: float x>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $f1 = r3.<ext.plantuml.com.google.zxing.ResultPoint: float y>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void orderBestPatterns(ext.plantuml.com.google.zxing.ResultPoint[])
    {
        ext.plantuml.com.google.zxing.ResultPoint[] r0;
        ext.plantuml.com.google.zxing.ResultPoint $r1, $r2, $r3, $r4, $r5, $r6, r7, r8, r9, r10;
        float f0, f1, f2, $f3;
        byte $b0, $b1, $b2, $b3, $b4;

        r0 := @parameter0: ext.plantuml.com.google.zxing.ResultPoint[];

        $r2 = r0[0];

        $r1 = r0[1];

        f0 = staticinvoke <ext.plantuml.com.google.zxing.ResultPoint: float distance(ext.plantuml.com.google.zxing.ResultPoint,ext.plantuml.com.google.zxing.ResultPoint)>($r2, $r1);

        $r4 = r0[1];

        $r3 = r0[2];

        f1 = staticinvoke <ext.plantuml.com.google.zxing.ResultPoint: float distance(ext.plantuml.com.google.zxing.ResultPoint,ext.plantuml.com.google.zxing.ResultPoint)>($r4, $r3);

        $r6 = r0[0];

        $r5 = r0[2];

        f2 = staticinvoke <ext.plantuml.com.google.zxing.ResultPoint: float distance(ext.plantuml.com.google.zxing.ResultPoint,ext.plantuml.com.google.zxing.ResultPoint)>($r6, $r5);

        $b0 = f1 cmpl f0;

        if $b0 < 0 goto label1;

        $b3 = f1 cmpl f2;

        if $b3 < 0 goto label1;

        r8 = r0[0];

        r9 = r0[1];

        r10 = r0[2];

        goto label3;

     label1:
        $b1 = f2 cmpl f1;

        if $b1 < 0 goto label2;

        $b2 = f2 cmpl f0;

        if $b2 < 0 goto label2;

        r8 = r0[1];

        r9 = r0[0];

        r10 = r0[2];

        goto label3;

     label2:
        r8 = r0[2];

        r9 = r0[0];

        r10 = r0[1];

     label3:
        $f3 = staticinvoke <ext.plantuml.com.google.zxing.ResultPoint: float crossProductZ(ext.plantuml.com.google.zxing.ResultPoint,ext.plantuml.com.google.zxing.ResultPoint,ext.plantuml.com.google.zxing.ResultPoint)>(r9, r8, r10);

        $b4 = $f3 cmpg 0.0F;

        if $b4 >= 0 goto label4;

        r7 = r9;

        r9 = r10;

        r10 = r7;

     label4:
        r0[0] = r9;

        r0[1] = r8;

        r0[2] = r10;

        return;
    }

    public static float distance(ext.plantuml.com.google.zxing.ResultPoint, ext.plantuml.com.google.zxing.ResultPoint)
    {
        ext.plantuml.com.google.zxing.ResultPoint r0, r1;
        float $f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8, $f9;
        double $d0, $d1;

        r0 := @parameter0: ext.plantuml.com.google.zxing.ResultPoint;

        r1 := @parameter1: ext.plantuml.com.google.zxing.ResultPoint;

        $f0 = virtualinvoke r0.<ext.plantuml.com.google.zxing.ResultPoint: float getX()>();

        $f1 = virtualinvoke r1.<ext.plantuml.com.google.zxing.ResultPoint: float getX()>();

        f2 = $f0 - $f1;

        $f3 = virtualinvoke r0.<ext.plantuml.com.google.zxing.ResultPoint: float getY()>();

        $f4 = virtualinvoke r1.<ext.plantuml.com.google.zxing.ResultPoint: float getY()>();

        f5 = $f3 - $f4;

        $f7 = f2 * f2;

        $f6 = f5 * f5;

        $f8 = $f7 + $f6;

        $d0 = (double) $f8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f9 = (float) $d1;

        return $f9;
    }

    private static float crossProductZ(ext.plantuml.com.google.zxing.ResultPoint, ext.plantuml.com.google.zxing.ResultPoint, ext.plantuml.com.google.zxing.ResultPoint)
    {
        ext.plantuml.com.google.zxing.ResultPoint r0, r1, r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r2 := @parameter0: ext.plantuml.com.google.zxing.ResultPoint;

        r0 := @parameter1: ext.plantuml.com.google.zxing.ResultPoint;

        r1 := @parameter2: ext.plantuml.com.google.zxing.ResultPoint;

        f0 = r0.<ext.plantuml.com.google.zxing.ResultPoint: float x>;

        f1 = r0.<ext.plantuml.com.google.zxing.ResultPoint: float y>;

        $f2 = r1.<ext.plantuml.com.google.zxing.ResultPoint: float x>;

        $f5 = $f2 - f0;

        $f3 = r2.<ext.plantuml.com.google.zxing.ResultPoint: float y>;

        $f4 = $f3 - f1;

        $f11 = $f5 * $f4;

        $f6 = r1.<ext.plantuml.com.google.zxing.ResultPoint: float y>;

        $f9 = $f6 - f1;

        $f7 = r2.<ext.plantuml.com.google.zxing.ResultPoint: float x>;

        $f8 = $f7 - f0;

        $f10 = $f9 * $f8;

        $f12 = $f11 - $f10;

        return $f12;
    }
}
