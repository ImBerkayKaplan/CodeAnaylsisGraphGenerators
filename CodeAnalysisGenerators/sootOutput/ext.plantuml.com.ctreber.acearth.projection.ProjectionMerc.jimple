public class ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc extends ext.plantuml.com.ctreber.acearth.projection.Projection
{

    public void <init>()
    {
        ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc r0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc;

        specialinvoke r0.<ext.plantuml.com.ctreber.acearth.projection.Projection: void <init>()>();

        return;
    }

    public boolean isVisible(ext.plantuml.com.ctreber.acearth.util.Point3D)
    {
        ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc r0;
        ext.plantuml.com.ctreber.acearth.util.Point3D r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc;

        r1 := @parameter0: ext.plantuml.com.ctreber.acearth.util.Point3D;

        return 1;
    }

    public ext.plantuml.com.ctreber.acearth.util.Coordinate getLocation(int, int)
    {
        ext.plantuml.com.ctreber.acearth.util.Coordinate $r0, $r5;
        ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc r1;
        int i0, i1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        ext.plantuml.com.ctreber.acearth.util.Point3D $r3, $r4;

        r1 := @this: ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        $r0 = new ext.plantuml.com.ctreber.acearth.util.Coordinate;

        $d0 = (double) i0;

        $d1 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc: double inverseFinalizeY(double)>($d0);

        $d2 = staticinvoke <java.lang.Math: double exp(double)>($d1);

        $d3 = staticinvoke <java.lang.Math: double atan(double)>($d2);

        $d4 = $d3 - 0.7853981633974483;

        $d6 = 2.0 * $d4;

        $d5 = (double) i1;

        $d7 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc: double inverseFinalizeX(double)>($d5);

        specialinvoke $r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: void <init>(double,double)>($d6, $d7);

        $r3 = virtualinvoke $r0.<ext.plantuml.com.ctreber.acearth.util.Coordinate: ext.plantuml.com.ctreber.acearth.util.Point3D getPoint3DRads()>();

        $r4 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc: ext.plantuml.com.ctreber.acearth.util.Point3D rotateReverse(ext.plantuml.com.ctreber.acearth.util.Point3D)>($r3);

        $r5 = virtualinvoke $r4.<ext.plantuml.com.ctreber.acearth.util.Point3D: ext.plantuml.com.ctreber.acearth.util.Coordinate getCoordinate()>();

        return $r5;
    }

    protected void setScale()
    {
        ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc r0;
        int $i0;
        double $d0, $d1, $d2, $d3;

        r0 := @this: ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc;

        $d1 = r0.<ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc: double fViewMagnification>;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc: int fImageWidth>;

        $d0 = (double) $i0;

        $d2 = $d1 * $d0;

        $d3 = $d2 / 6.283185307179586;

        r0.<ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc: double fScale> = $d3;

        return;
    }

    public double projectX(double, double)
    {
        double d0, d1, $d2;
        ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc r0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>(d0, d1);

        return $d2;
    }

    public double inverseProjectX(double)
    {
        double d0, $d1;
        ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc r0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double sin(double)>(d0);

        return $d1;
    }

    public double projectY(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1;
        ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc r0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.9999999999;

        if $b0 < 0 goto label1;

        $d5 = 1000000.0;

        goto label3;

     label1:
        $b1 = d0 cmpg -0.9999999999;

        if $b1 > 0 goto label2;

        $d5 = -1000000.0;

        goto label3;

     label2:
        $d1 = staticinvoke <java.lang.Math: double asin(double)>(d0);

        $d2 = $d1 / 2.0;

        $d3 = $d2 + 0.7853981633974483;

        $d4 = staticinvoke <java.lang.Math: double tan(double)>($d3);

        $d5 = staticinvoke <java.lang.Math: double log(double)>($d4);

     label3:
        return $d5;
    }

    public double inverseProjectY(double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5;
        ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc r0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.projection.ProjectionMerc;

        d0 := @parameter0: double;

        $d1 = staticinvoke <java.lang.Math: double exp(double)>(d0);

        $d2 = staticinvoke <java.lang.Math: double atan(double)>($d1);

        $d3 = $d2 - 0.7853981633974483;

        $d4 = 2.0 * $d3;

        $d5 = staticinvoke <java.lang.Math: double sin(double)>($d4);

        return $d5;
    }
}
