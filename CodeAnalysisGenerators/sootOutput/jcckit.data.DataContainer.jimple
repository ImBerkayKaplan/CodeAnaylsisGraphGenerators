public abstract class jcckit.data.DataContainer extends java.lang.Object
{
    private static final java.lang.String TEMPLATE;
    static final java.lang.String ADD;
    static final java.lang.String REPLACE;
    static final java.lang.String INSERT;
    private final java.util.Vector _listeners;
    private final java.util.Vector _container;

    public void <init>()
    {
        jcckit.data.DataContainer r0;
        java.util.Vector $r1, $r2;

        r0 := @this: jcckit.data.DataContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<jcckit.data.DataContainer: java.util.Vector _listeners> = $r1;

        $r2 = new java.util.Vector;

        specialinvoke $r2.<java.util.Vector: void <init>()>();

        r0.<jcckit.data.DataContainer: java.util.Vector _container> = $r2;

        return;
    }

    public void addDataListener(jcckit.data.DataListener)
    {
        jcckit.data.DataContainer r0;
        jcckit.data.DataListener r1;
        java.util.Vector $r2, $r3;
        boolean $z0;

        r0 := @this: jcckit.data.DataContainer;

        r1 := @parameter0: jcckit.data.DataListener;

        $r2 = r0.<jcckit.data.DataContainer: java.util.Vector _listeners>;

        $z0 = virtualinvoke $r2.<java.util.Vector: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<jcckit.data.DataContainer: java.util.Vector _listeners>;

        virtualinvoke $r3.<java.util.Vector: void addElement(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void removeDataListener(jcckit.data.DataListener)
    {
        jcckit.data.DataContainer r0;
        jcckit.data.DataListener r1;
        java.util.Vector $r2;

        r0 := @this: jcckit.data.DataContainer;

        r1 := @parameter0: jcckit.data.DataListener;

        $r2 = r0.<jcckit.data.DataContainer: java.util.Vector _listeners>;

        virtualinvoke $r2.<java.util.Vector: boolean removeElement(java.lang.Object)>(r1);

        return;
    }

    private void notifyListeners(jcckit.data.DataEvent)
    {
        jcckit.data.DataContainer r0, r7;
        java.util.Vector $r1, $r4;
        int i0, i1;
        boolean $z0;
        jcckit.data.DataElement $r2;
        jcckit.data.DataEvent r3;
        java.lang.Object $r5;
        jcckit.data.DataListener $r6;

        r0 := @this: jcckit.data.DataContainer;

        r3 := @parameter0: jcckit.data.DataEvent;

        i1 = 0;

        $r1 = r0.<jcckit.data.DataContainer: java.util.Vector _listeners>;

        i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<jcckit.data.DataContainer: java.util.Vector _listeners>;

        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        $r6 = (jcckit.data.DataListener) $r5;

        interfaceinvoke $r6.<jcckit.data.DataListener: void dataChanged(jcckit.data.DataEvent)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        $z0 = r0 instanceof jcckit.data.DataElement;

        if $z0 == 0 goto label3;

        $r2 = (jcckit.data.DataElement) r0;

        r7 = interfaceinvoke $r2.<jcckit.data.DataElement: jcckit.data.DataContainer getContainer()>();

        if r7 == null goto label3;

        specialinvoke r7.<jcckit.data.DataContainer: void notifyListeners(jcckit.data.DataEvent)>(r3);

     label3:
        return;
    }

    public int getNumberOfElements()
    {
        jcckit.data.DataContainer r0;
        java.util.Vector $r1;
        int $i0;

        r0 := @this: jcckit.data.DataContainer;

        $r1 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    public jcckit.data.DataElement getElement(int)
    {
        jcckit.data.DataContainer r0;
        int i0;
        java.util.Vector $r1;
        java.lang.Object $r2;
        jcckit.data.DataElement $r3;

        r0 := @this: jcckit.data.DataContainer;

        i0 := @parameter0: int;

        $r1 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        $r3 = (jcckit.data.DataElement) $r2;

        return $r3;
    }

    public int getIndexOf(jcckit.data.DataElement)
    {
        jcckit.data.DataContainer r0;
        jcckit.data.DataElement r1;
        java.util.Vector $r2;
        int $i0;

        r0 := @this: jcckit.data.DataContainer;

        r1 := @parameter0: jcckit.data.DataElement;

        $r2 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public void addElement(jcckit.data.DataElement)
    {
        jcckit.data.DataContainer r0;
        jcckit.data.DataElement r1;
        boolean $z0;
        java.util.Vector $r2;
        jcckit.data.DataEvent $r3;

        r0 := @this: jcckit.data.DataContainer;

        r1 := @parameter0: jcckit.data.DataElement;

        $z0 = virtualinvoke r0.<jcckit.data.DataContainer: boolean isValid(jcckit.data.DataElement)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        virtualinvoke $r2.<java.util.Vector: void addElement(java.lang.Object)>(r1);

        interfaceinvoke r1.<jcckit.data.DataElement: void setContainer(jcckit.data.DataContainer)>(r0);

        $r3 = staticinvoke <jcckit.data.DataEvent: jcckit.data.DataEvent createAddEvent(jcckit.data.DataContainer)>(r0);

        specialinvoke r0.<jcckit.data.DataContainer: void notifyListeners(jcckit.data.DataEvent)>($r3);

        goto label2;

     label1:
        specialinvoke r0.<jcckit.data.DataContainer: void throwException(java.lang.String,jcckit.data.DataElement)>("add", r1);

     label2:
        return;
    }

    public void insertElementAt(int, jcckit.data.DataElement)
    {
        jcckit.data.DataContainer r0;
        jcckit.data.DataElement r1;
        boolean $z0;
        int i0;
        java.util.Vector $r2;
        jcckit.data.DataEvent $r3;

        r0 := @this: jcckit.data.DataContainer;

        i0 := @parameter0: int;

        r1 := @parameter1: jcckit.data.DataElement;

        $z0 = virtualinvoke r0.<jcckit.data.DataContainer: boolean isValid(jcckit.data.DataElement)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        virtualinvoke $r2.<java.util.Vector: void insertElementAt(java.lang.Object,int)>(r1, i0);

        interfaceinvoke r1.<jcckit.data.DataElement: void setContainer(jcckit.data.DataContainer)>(r0);

        $r3 = staticinvoke <jcckit.data.DataEvent: jcckit.data.DataEvent createInsertEvent(jcckit.data.DataContainer,int)>(r0, i0);

        specialinvoke r0.<jcckit.data.DataContainer: void notifyListeners(jcckit.data.DataEvent)>($r3);

        goto label2;

     label1:
        specialinvoke r0.<jcckit.data.DataContainer: void throwException(java.lang.String,jcckit.data.DataElement)>("insert", r1);

     label2:
        return;
    }

    public void removeElementAt(int)
    {
        jcckit.data.DataContainer r0;
        int i0;
        java.util.Vector $r1, $r4;
        java.lang.Object $r2;
        jcckit.data.DataElement r3;
        jcckit.data.DataEvent $r5;

        r0 := @this: jcckit.data.DataContainer;

        i0 := @parameter0: int;

        $r1 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r3 = (jcckit.data.DataElement) $r2;

        interfaceinvoke r3.<jcckit.data.DataElement: void setContainer(jcckit.data.DataContainer)>(null);

        $r4 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        virtualinvoke $r4.<java.util.Vector: void removeElementAt(int)>(i0);

        $r5 = staticinvoke <jcckit.data.DataEvent: jcckit.data.DataEvent createRemoveEvent(jcckit.data.DataContainer,int,jcckit.data.DataElement)>(r0, i0, r3);

        specialinvoke r0.<jcckit.data.DataContainer: void notifyListeners(jcckit.data.DataEvent)>($r5);

        return;
    }

    public void replaceElementAt(int, jcckit.data.DataElement)
    {
        jcckit.data.DataContainer r0;
        jcckit.data.DataElement r1, r4;
        boolean $z0;
        int i0;
        java.util.Vector $r2, $r5;
        java.lang.Object $r3;
        jcckit.data.DataEvent $r6;

        r0 := @this: jcckit.data.DataContainer;

        i0 := @parameter0: int;

        r1 := @parameter1: jcckit.data.DataElement;

        $z0 = virtualinvoke r0.<jcckit.data.DataContainer: boolean isValid(jcckit.data.DataElement)>(r1);

        if $z0 == 0 goto label1;

        $r2 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i0);

        r4 = (jcckit.data.DataElement) $r3;

        interfaceinvoke r4.<jcckit.data.DataElement: void setContainer(jcckit.data.DataContainer)>(null);

        $r5 = r0.<jcckit.data.DataContainer: java.util.Vector _container>;

        virtualinvoke $r5.<java.util.Vector: void setElementAt(java.lang.Object,int)>(r1, i0);

        interfaceinvoke r1.<jcckit.data.DataElement: void setContainer(jcckit.data.DataContainer)>(r0);

        $r6 = staticinvoke <jcckit.data.DataEvent: jcckit.data.DataEvent createReplaceEvent(jcckit.data.DataContainer,int,jcckit.data.DataElement)>(r0, i0, r4);

        specialinvoke r0.<jcckit.data.DataContainer: void notifyListeners(jcckit.data.DataEvent)>($r6);

        goto label2;

     label1:
        specialinvoke r0.<jcckit.data.DataContainer: void throwException(java.lang.String,jcckit.data.DataElement)>("replace", r1);

     label2:
        return;
    }

    private void throwException(java.lang.String, jcckit.data.DataElement)
    {
        java.lang.IllegalArgumentException $r0;
        java.lang.Object[] $r1;
        java.lang.String r2, $r6, $r7;
        jcckit.data.DataElement r3;
        jcckit.data.DataContainer r4;
        java.lang.Class $r5;

        r4 := @this: jcckit.data.DataContainer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: jcckit.data.DataElement;

        $r0 = new java.lang.IllegalArgumentException;

        $r1 = newarray (java.lang.Object)[3];

        $r1[0] = r2;

        $r1[1] = r3;

        $r5 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r1[2] = $r6;

        $r7 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid operation: {0}, Element: {1}, Container: {2}", $r1);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r0;
    }

    protected abstract boolean isValid(jcckit.data.DataElement);

    public static void <clinit>()
    {
        <jcckit.data.DataContainer: java.lang.String INSERT> = "insert";

        <jcckit.data.DataContainer: java.lang.String REPLACE> = "replace";

        <jcckit.data.DataContainer: java.lang.String ADD> = "add";

        <jcckit.data.DataContainer: java.lang.String TEMPLATE> = "Invalid operation: {0}, Element: {1}, Container: {2}";

        return;
    }
}
