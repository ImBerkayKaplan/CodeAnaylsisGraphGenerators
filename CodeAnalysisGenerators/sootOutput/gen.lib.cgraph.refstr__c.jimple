public class gen.lib.cgraph.refstr__c extends java.lang.Object
{

    public void <init>()
    {
        gen.lib.cgraph.refstr__c r0;

        r0 := @this: gen.lib.cgraph.refstr__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static h.ST_dt_s refdict(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        gen.lib.cgraph.refstr__c$2 $r1;
        java.lang.Object $r2, $r3;
        h.ST_dt_s r4, $r9;
        smetana.core.Z $r5, $r7, $r10, $r11, $r12;
        h.ST_dtdisc_s $r6;
        h.ST_dtmethod_s $r8;
        int $i0, $i1;
        gen.lib.cgraph.refstr__c$1 $r13;
        java.lang.Throwable $r14;
        smetana.core.CStarStar r16;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("f1nwss2xoaub1hyord232ugoj", "refdict");

     label1:
        if r0 == null goto label2;

        $r13 = new gen.lib.cgraph.refstr__c$1;

        specialinvoke $r13.<gen.lib.cgraph.refstr__c$1: void <init>(h.ST_Agraph_s)>(r0);

        r16 = staticinvoke <smetana.core.CStarStar: smetana.core.CStarStar BUILD(smetana.core.ACCESS)>($r13);

        goto label3;

     label2:
        $r1 = new gen.lib.cgraph.refstr__c$2;

        specialinvoke $r1.<gen.lib.cgraph.refstr__c$2: void <init>()>();

        r16 = staticinvoke <smetana.core.CStarStar: smetana.core.CStarStar BUILD(smetana.core.ACCESS)>($r1);

     label3:
        $r2 = virtualinvoke r16.<smetana.core.CStarStar: java.lang.Object star()>();

        if $r2 != null goto label4;

        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r6 = $r5.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r7 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r8 = $r7.<smetana.core.Z: h.ST_dtmethod_s Dttree>;

        $r9 = staticinvoke <gen.lib.cgraph.utils__c: h.ST_dt_s agdtopen(h.ST_Agraph_s,h.ST_dtdisc_s,h.ST_dtmethod_s)>(r0, $r6, $r8);

        virtualinvoke r16.<smetana.core.CStarStar: void star(java.lang.Object)>($r9);

        $r10 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r10.<smetana.core.Z: int HTML_BIT> = -2147483648;

        $r11 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i0 = $r12.<smetana.core.Z: int HTML_BIT>;

        $i1 = $i0 ^ -1;

        $r11.<smetana.core.Z: int CNT_BITS> = $i1;

     label4:
        $r3 = virtualinvoke r16.<smetana.core.CStarStar: java.lang.Object star()>();

        r4 = (h.ST_dt_s) $r3;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("f1nwss2xoaub1hyord232ugoj", "refdict");

        return r4;

     label6:
        $r14 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("f1nwss2xoaub1hyord232ugoj", "refdict");

        throw $r14;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    private static h.ST_refstr_t refsymbind(h.ST_dt_s, smetana.core.CString)
    {
        h.ST_refstr_t $r0, r5;
        smetana.core.CString r2;
        h.ST_dt_s r3;
        java.lang.Object $r4;
        java.lang.Throwable $r7;

        r3 := @parameter0: h.ST_dt_s;

        r2 := @parameter1: smetana.core.CString;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9ts4wqhw2xafdv3tlcilneewq", "refsymbind");

     label1:
        $r0 = new h.ST_refstr_t;

        specialinvoke $r0.<h.ST_refstr_t: void <init>()>();

        virtualinvoke $r0.<h.ST_refstr_t: void setString(smetana.core.CString)>(r2);

        $r4 = staticinvoke <smetana.core.Macro: java.lang.Object dtsearch(h.ST_dt_s,java.lang.Object)>(r3, $r0);

        r5 = (h.ST_refstr_t) $r4;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9ts4wqhw2xafdv3tlcilneewq", "refsymbind");

        return r5;

     label3:
        $r7 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9ts4wqhw2xafdv3tlcilneewq", "refsymbind");

        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static smetana.core.CString refstrbind(h.ST_dt_s, smetana.core.CString)
    {
        h.ST_dt_s r0;
        smetana.core.CString r1, r5;
        h.ST_refstr_t r2;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_dt_s;

        r1 := @parameter1: smetana.core.CString;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1scntgo71z7c2v15zapiyw59w", "refstrbind");

     label1:
        r2 = staticinvoke <gen.lib.cgraph.refstr__c: h.ST_refstr_t refsymbind(h.ST_dt_s,smetana.core.CString)>(r0, r1);

        if r2 == null goto label3;

        r5 = r2.<h.ST_refstr_t: smetana.core.CString s>;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1scntgo71z7c2v15zapiyw59w", "refstrbind");

        return r5;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1scntgo71z7c2v15zapiyw59w", "refstrbind");

        return null;

     label4:
        $r3 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1scntgo71z7c2v15zapiyw59w", "refstrbind");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static smetana.core.CString agstrbind(h.ST_Agraph_s, smetana.core.CString)
    {
        h.ST_Agraph_s r0;
        h.ST_dt_s $r1;
        smetana.core.CString r2, r3;
        java.lang.Throwable $r4;

        r0 := @parameter0: h.ST_Agraph_s;

        r2 := @parameter1: smetana.core.CString;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bb8aqjshw3ecae2lsmhigd0mc", "agstrbind");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.refstr__c: h.ST_dt_s refdict(h.ST_Agraph_s)>(r0);

        r3 = staticinvoke <gen.lib.cgraph.refstr__c: smetana.core.CString refstrbind(h.ST_dt_s,smetana.core.CString)>($r1, r2);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bb8aqjshw3ecae2lsmhigd0mc", "agstrbind");

        return r3;

     label3:
        $r4 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bb8aqjshw3ecae2lsmhigd0mc", "agstrbind");

        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static smetana.core.CString agstrdup(h.ST_Agraph_s, smetana.core.CString)
    {
        smetana.core.CString r0, $r4, r8;
        h.ST_Agraph_s r1;
        h.ST_dt_s r2;
        h.ST_refstr_t $r3, r7;
        int $i0, $i1;
        java.lang.Throwable $r5;

        r1 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: smetana.core.CString;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("86oznromwhn9qeym0k7pih73q", "agstrdup");

     label1:
        if r0 != null goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("86oznromwhn9qeym0k7pih73q", "agstrdup");

        return null;

     label3:
        r2 = staticinvoke <gen.lib.cgraph.refstr__c: h.ST_dt_s refdict(h.ST_Agraph_s)>(r1);

        r7 = staticinvoke <gen.lib.cgraph.refstr__c: h.ST_refstr_t refsymbind(h.ST_dt_s,smetana.core.CString)>(r2, r0);

        if r7 == null goto label4;

        $i0 = r7.<h.ST_refstr_t: int refcnt>;

        $i1 = $i0 + 1;

        r7.<h.ST_refstr_t: int refcnt> = $i1;

        goto label5;

     label4:
        $r3 = new h.ST_refstr_t;

        specialinvoke $r3.<h.ST_refstr_t: void <init>()>();

        r7 = $r3;

        $r3.<h.ST_refstr_t: int refcnt> = 1;

        $r4 = virtualinvoke r0.<smetana.core.CString: smetana.core.CString duplicate()>();

        virtualinvoke $r3.<h.ST_refstr_t: void setString(smetana.core.CString)>($r4);

        staticinvoke <smetana.core.Macro: void dtinsert(h.ST_dt_s,java.lang.Object)>(r2, $r3);

     label5:
        r8 = r7.<h.ST_refstr_t: smetana.core.CString s>;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("86oznromwhn9qeym0k7pih73q", "agstrdup");

        return r8;

     label7:
        $r5 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("86oznromwhn9qeym0k7pih73q", "agstrdup");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static int agstrfree(h.ST_Agraph_s, smetana.core.CString)
    {
        smetana.core.CString r0, $r4;
        h.ST_Agraph_s r1;
        h.ST_dt_s r2;
        h.ST_refstr_t r3;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        smetana.core.Z $r6;
        java.lang.Throwable $r7;

        r1 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: smetana.core.CString;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("enhn1ajfo86a19dgm4b8lduz7", "agstrfree");

     label01:
        if r0 != null goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("enhn1ajfo86a19dgm4b8lduz7", "agstrfree");

        return -1;

     label03:
        r2 = staticinvoke <gen.lib.cgraph.refstr__c: h.ST_dt_s refdict(h.ST_Agraph_s)>(r1);

        r3 = staticinvoke <gen.lib.cgraph.refstr__c: h.ST_refstr_t refsymbind(h.ST_dt_s,smetana.core.CString)>(r2, r0);

        if r3 == null goto label06;

        $r4 = r3.<h.ST_refstr_t: smetana.core.CString s>;

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r4, r0);

        if $z0 == 0 goto label06;

        $i0 = r3.<h.ST_refstr_t: int refcnt>;

        $i1 = $i0 - 1;

        r3.<h.ST_refstr_t: int refcnt> = $i1;

        $i2 = r3.<h.ST_refstr_t: int refcnt>;

        if $i2 == 0 goto label04;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i3 = $r6.<smetana.core.Z: int CNT_BITS>;

        if $i3 == 0 goto label04;

        $z1 = 1;

        goto label05;

     label04:
        $z1 = 0;

     label05:
        if $z1 != 0 goto label06;

        staticinvoke <gen.lib.cgraph.utils__c: smetana.core.__ptr__ agdtdelete(h.ST_Agraph_s,h.ST_dt_s,smetana.core.__ptr__)>(r1, r2, r3);

     label06:
        if r3 != null goto label08;

     label07:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("enhn1ajfo86a19dgm4b8lduz7", "agstrfree");

        return -1;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("enhn1ajfo86a19dgm4b8lduz7", "agstrfree");

        return 0;

     label09:
        $r7 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("enhn1ajfo86a19dgm4b8lduz7", "agstrfree");

        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label07 with label09;
        catch java.lang.Throwable from label08 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static int aghtmlstr(smetana.core.CString)
    {
        smetana.core.CString r0;
        h.ST_refstr_t r1;
        int $i0, $i1, i3;
        smetana.core.Z $r2;
        java.lang.Throwable $r3;

        r0 := @parameter0: smetana.core.CString;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3em4wzjnpajd5d3igb90l3rml", "aghtmlstr");

     label1:
        if r0 != null goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3em4wzjnpajd5d3igb90l3rml", "aghtmlstr");

        return 0;

     label3:
        r1 = virtualinvoke r0.<smetana.core.CString: h.ST_refstr_t getParent()>();

        $i0 = r1.<h.ST_refstr_t: int refcnt>;

        $r2 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r2.<smetana.core.Z: int HTML_BIT>;

        i3 = $i0 & $i1;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3em4wzjnpajd5d3igb90l3rml", "aghtmlstr");

        return i3;

     label5:
        $r3 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3em4wzjnpajd5d3igb90l3rml", "aghtmlstr");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
    }
}
