public class net.sourceforge.plantuml.picoweb.PicoWebServer extends java.lang.Object implements java.lang.Runnable
{
    private final java.net.Socket connect;

    public void <init>(java.net.Socket)
    {
        net.sourceforge.plantuml.picoweb.PicoWebServer r0;
        java.net.Socket r1;

        r0 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        r1 := @parameter0: java.net.Socket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect> = r1;

        return;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServer: void startServer(int,java.lang.String)>(8080, null);

        return;
    }

    public static void startServer(int, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, $r8;
        java.net.ServerSocket $r2;
        int i0, $i1;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5;
        java.net.InetAddress $r9;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r9 = null;

        goto label2;

     label1:
        $r9 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>(r0);

     label2:
        $r2 = new java.net.ServerSocket;

        specialinvoke $r2.<java.net.ServerSocket: void <init>(int,int,java.net.InetAddress)>(i0, 50, $r9);

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("webPort=");

        $i1 = virtualinvoke $r2.<java.net.ServerSocket: int getLocalPort()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServer: void serverLoop(java.net.ServerSocket)>($r2);

        return;
    }

    public static void serverLoop(java.net.ServerSocket) throws java.io.IOException
    {
        net.sourceforge.plantuml.picoweb.PicoWebServer $r0;
        java.net.ServerSocket r1;
        java.net.Socket $r2;
        java.lang.Thread $r4;

        r1 := @parameter0: java.net.ServerSocket;

     label1:
        $r0 = new net.sourceforge.plantuml.picoweb.PicoWebServer;

        $r2 = virtualinvoke r1.<java.net.ServerSocket: java.net.Socket accept()>();

        specialinvoke $r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void <init>(java.net.Socket)>($r2);

        $r4 = new java.lang.Thread;

        specialinvoke $r4.<java.lang.Thread: void <init>(java.lang.Runnable)>($r0);

        virtualinvoke $r4.<java.lang.Thread: void start()>();

        goto label1;
    }

    public void run()
    {
        java.io.BufferedInputStream $r0, r54;
        net.sourceforge.plantuml.picoweb.PicoWebServer r1;
        java.net.Socket $r2, $r5, $r10, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r39, $r42, $r66;
        java.io.InputStream $r3;
        java.io.BufferedOutputStream $r4, r55;
        java.io.OutputStream $r6;
        java.lang.String $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18;
        net.sourceforge.plantuml.FileFormat $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33;
        java.lang.Throwable $r35, $r38, $r40, $r41, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53;
        net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest r56;

        r1 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        r54 = null;

        r55 = null;

     label01:
        $r0 = new java.io.BufferedInputStream;

        $r2 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        $r3 = virtualinvoke $r2.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r3);

        r54 = $r0;

        $r4 = new java.io.BufferedOutputStream;

        $r5 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        $r6 = virtualinvoke $r5.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r4.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r6);

        r55 = $r4;

        r56 = staticinvoke <net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest fromStream(java.io.InputStream)>($r0);

        $r7 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z0 == 0 goto label41;

        $r11 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean startsWith(java.lang.String)>("/png/");

        if $z3 == 0 goto label06;

        $r33 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        $z18 = specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream,net.sourceforge.plantuml.FileFormat)>(r56, $r4, $r33);

        if $z18 == 0 goto label06;

     label02:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r34 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r34.<java.net.Socket: void close()>();

     label03:
        goto label05;

     label04:
        $r53 := @caughtexception;

        virtualinvoke $r53.<java.lang.Throwable: void printStackTrace()>();

     label05:
        return;

     label06:
        $r12 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z4 = virtualinvoke $r12.<java.lang.String: boolean startsWith(java.lang.String)>("/plantuml/png/");

        if $z4 == 0 goto label11;

        $r31 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        $z17 = specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream,net.sourceforge.plantuml.FileFormat)>(r56, $r4, $r31);

        if $z17 == 0 goto label11;

     label07:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r32 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r32.<java.net.Socket: void close()>();

     label08:
        goto label10;

     label09:
        $r52 := @caughtexception;

        virtualinvoke $r52.<java.lang.Throwable: void printStackTrace()>();

     label10:
        return;

     label11:
        $r13 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z5 = virtualinvoke $r13.<java.lang.String: boolean startsWith(java.lang.String)>("/svg/");

        if $z5 == 0 goto label16;

        $r29 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat SVG>;

        $z16 = specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream,net.sourceforge.plantuml.FileFormat)>(r56, $r4, $r29);

        if $z16 == 0 goto label16;

     label12:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r30 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r30.<java.net.Socket: void close()>();

     label13:
        goto label15;

     label14:
        $r51 := @caughtexception;

        virtualinvoke $r51.<java.lang.Throwable: void printStackTrace()>();

     label15:
        return;

     label16:
        $r14 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z6 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("/plantuml/svg/");

        if $z6 == 0 goto label21;

        $r27 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat SVG>;

        $z15 = specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream,net.sourceforge.plantuml.FileFormat)>(r56, $r4, $r27);

        if $z15 == 0 goto label21;

     label17:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r28 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r28.<java.net.Socket: void close()>();

     label18:
        goto label20;

     label19:
        $r50 := @caughtexception;

        virtualinvoke $r50.<java.lang.Throwable: void printStackTrace()>();

     label20:
        return;

     label21:
        $r15 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z7 = virtualinvoke $r15.<java.lang.String: boolean startsWith(java.lang.String)>("/txt/");

        if $z7 == 0 goto label26;

        $r25 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat ATXT>;

        $z14 = specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream,net.sourceforge.plantuml.FileFormat)>(r56, $r4, $r25);

        if $z14 == 0 goto label26;

     label22:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r26 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r26.<java.net.Socket: void close()>();

     label23:
        goto label25;

     label24:
        $r49 := @caughtexception;

        virtualinvoke $r49.<java.lang.Throwable: void printStackTrace()>();

     label25:
        return;

     label26:
        $r16 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z8 = virtualinvoke $r16.<java.lang.String: boolean startsWith(java.lang.String)>("/plantuml/txt/");

        if $z8 == 0 goto label31;

        $r23 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat ATXT>;

        $z13 = specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream,net.sourceforge.plantuml.FileFormat)>(r56, $r4, $r23);

        if $z13 == 0 goto label31;

     label27:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r24 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r24.<java.net.Socket: void close()>();

     label28:
        goto label30;

     label29:
        $r48 := @caughtexception;

        virtualinvoke $r48.<java.lang.Throwable: void printStackTrace()>();

     label30:
        return;

     label31:
        $r17 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z9 = virtualinvoke $r17.<java.lang.String: boolean startsWith(java.lang.String)>("/utxt/");

        if $z9 == 0 goto label36;

        $r21 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        $z12 = specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream,net.sourceforge.plantuml.FileFormat)>(r56, $r4, $r21);

        if $z12 == 0 goto label36;

     label32:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r22 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r22.<java.net.Socket: void close()>();

     label33:
        goto label35;

     label34:
        $r47 := @caughtexception;

        virtualinvoke $r47.<java.lang.Throwable: void printStackTrace()>();

     label35:
        return;

     label36:
        $r18 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z10 = virtualinvoke $r18.<java.lang.String: boolean startsWith(java.lang.String)>("/plantuml/utxt/");

        if $z10 == 0 goto label46;

        $r19 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        $z11 = specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream,net.sourceforge.plantuml.FileFormat)>(r56, $r4, $r19);

        if $z11 == 0 goto label46;

     label37:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r20 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r20.<java.net.Socket: void close()>();

     label38:
        goto label40;

     label39:
        $r46 := @caughtexception;

        virtualinvoke $r46.<java.lang.Throwable: void printStackTrace()>();

     label40:
        return;

     label41:
        $r8 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("POST");

        if $z1 == 0 goto label46;

        $r9 = virtualinvoke r56.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("/render");

        if $z2 == 0 goto label46;

        specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: void handleRenderRequest(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest,java.io.BufferedOutputStream)>(r56, $r4);

     label42:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r10 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r10.<java.net.Socket: void close()>();

     label43:
        goto label45;

     label44:
        $r45 := @caughtexception;

        virtualinvoke $r45.<java.lang.Throwable: void printStackTrace()>();

     label45:
        return;

     label46:
        specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>($r4, "HTTP/1.1 302 Found");

        specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>($r4, "Location: /plantuml/png/oqbDJyrBuGh8ISmh2VNrKGZ8JCuFJqqAJYqgIotY0aefG5G00000");

        specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>($r4, "");

        virtualinvoke $r4.<java.io.BufferedOutputStream: void flush()>();

     label47:
        virtualinvoke $r0.<java.io.BufferedInputStream: void close()>();

        virtualinvoke $r4.<java.io.BufferedOutputStream: void close()>();

        $r66 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r66.<java.net.Socket: void close()>();

     label48:
        goto label62;

     label49:
        $r44 := @caughtexception;

        virtualinvoke $r44.<java.lang.Throwable: void printStackTrace()>();

        goto label62;

     label50:
        $r43 := @caughtexception;

     label51:
        specialinvoke r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: void sendError(java.lang.Throwable,java.io.BufferedOutputStream)>($r43, r55);

     label52:
        goto label54;

     label53:
        $r41 := @caughtexception;

        virtualinvoke $r43.<java.lang.Throwable: void printStackTrace()>();

     label54:
        virtualinvoke r54.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r55.<java.io.BufferedOutputStream: void close()>();

        $r42 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r42.<java.net.Socket: void close()>();

     label55:
        goto label62;

     label56:
        $r40 := @caughtexception;

        virtualinvoke $r40.<java.lang.Throwable: void printStackTrace()>();

        goto label62;

     label57:
        $r38 := @caughtexception;

     label58:
        virtualinvoke r54.<java.io.BufferedInputStream: void close()>();

        virtualinvoke r55.<java.io.BufferedOutputStream: void close()>();

        $r39 = r1.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.net.Socket connect>;

        virtualinvoke $r39.<java.net.Socket: void close()>();

     label59:
        goto label61;

     label60:
        $r35 := @caughtexception;

        virtualinvoke $r35.<java.lang.Throwable: void printStackTrace()>();

     label61:
        throw $r38;

     label62:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label17 to label18 with label19;
        catch java.lang.Throwable from label22 to label23 with label24;
        catch java.lang.Throwable from label27 to label28 with label29;
        catch java.lang.Throwable from label32 to label33 with label34;
        catch java.lang.Throwable from label37 to label38 with label39;
        catch java.lang.Throwable from label42 to label43 with label44;
        catch java.lang.Throwable from label47 to label48 with label49;
        catch java.lang.Throwable from label01 to label02 with label50;
        catch java.lang.Throwable from label06 to label07 with label50;
        catch java.lang.Throwable from label11 to label12 with label50;
        catch java.lang.Throwable from label16 to label17 with label50;
        catch java.lang.Throwable from label21 to label22 with label50;
        catch java.lang.Throwable from label26 to label27 with label50;
        catch java.lang.Throwable from label31 to label32 with label50;
        catch java.lang.Throwable from label36 to label37 with label50;
        catch java.lang.Throwable from label41 to label42 with label50;
        catch java.lang.Throwable from label46 to label47 with label50;
        catch java.lang.Throwable from label51 to label52 with label53;
        catch java.lang.Throwable from label54 to label55 with label56;
        catch java.lang.Throwable from label50 to label54 with label57;
        catch java.lang.Throwable from label58 to label59 with label60;
        catch java.lang.Throwable from label57 to label58 with label57;
    }

    private boolean handleGET(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest, java.io.BufferedOutputStream, net.sourceforge.plantuml.FileFormat) throws java.io.IOException
    {
        net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest r0;
        java.lang.String $r1, $r2, r3, r5, $r20;
        int i0, $i1, $i2, $i3;
        net.sourceforge.plantuml.code.Transcoder r4;
        net.sourceforge.plantuml.SourceStringReader $r6;
        java.util.List r8;
        net.sourceforge.plantuml.FileFormatOption $r9;
        net.sourceforge.plantuml.FileFormat r10;
        java.lang.Object $r12;
        net.sourceforge.plantuml.BlockUml $r13;
        net.sourceforge.plantuml.core.Diagram r14;
        java.io.ByteArrayOutputStream $r15;
        net.sourceforge.plantuml.core.ImageData r17;
        net.sourceforge.plantuml.picoweb.PicoWebServer r18;
        java.io.BufferedOutputStream r19;
        byte[] $r21;

        r18 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        r0 := @parameter0: net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest;

        r19 := @parameter1: java.io.BufferedOutputStream;

        r10 := @parameter2: net.sourceforge.plantuml.FileFormat;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(47);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: java.lang.String getPath()>();

        $i1 = i0 + 1;

        r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>($i1);

        r4 = staticinvoke <net.sourceforge.plantuml.code.TranscoderUtil: net.sourceforge.plantuml.code.Transcoder getDefaultTranscoderProtected()>();

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.code.Transcoder: java.lang.String decode(java.lang.String)>(r3);

        $r6 = new net.sourceforge.plantuml.SourceStringReader;

        specialinvoke $r6.<net.sourceforge.plantuml.SourceStringReader: void <init>(java.lang.String)>(r5);

        r8 = virtualinvoke $r6.<net.sourceforge.plantuml.SourceStringReader: java.util.List getBlocks()>();

        $i2 = interfaceinvoke r8.<java.util.List: int size()>();

        if $i2 <= 0 goto label1;

        $r9 = new net.sourceforge.plantuml.FileFormatOption;

        specialinvoke $r9.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat)>(r10);

        $r12 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        $r13 = (net.sourceforge.plantuml.BlockUml) $r12;

        r14 = virtualinvoke $r13.<net.sourceforge.plantuml.BlockUml: net.sourceforge.plantuml.core.Diagram getDiagram()>();

        $r15 = new java.io.ByteArrayOutputStream;

        specialinvoke $r15.<java.io.ByteArrayOutputStream: void <init>()>();

        r17 = interfaceinvoke r14.<net.sourceforge.plantuml.core.Diagram: net.sourceforge.plantuml.core.ImageData exportDiagram(java.io.OutputStream,int,net.sourceforge.plantuml.FileFormatOption)>($r15, 0, $r9);

        virtualinvoke $r15.<java.io.ByteArrayOutputStream: void close()>();

        $i3 = interfaceinvoke r17.<net.sourceforge.plantuml.core.ImageData: int getStatus()>();

        $r20 = specialinvoke r18.<net.sourceforge.plantuml.picoweb.PicoWebServer: java.lang.String httpReturnCode(int)>($i3);

        $r21 = virtualinvoke $r15.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r18.<net.sourceforge.plantuml.picoweb.PicoWebServer: void sendDiagram(java.io.BufferedOutputStream,net.sourceforge.plantuml.core.Diagram,net.sourceforge.plantuml.FileFormatOption,java.lang.String,net.sourceforge.plantuml.core.ImageData,byte[])>(r19, r14, $r9, $r20, r17, $r21);

        return 1;

     label1:
        return 0;
    }

    private void handleRenderRequest(net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest, java.io.BufferedOutputStream) throws java.lang.Exception
    {
        net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest r0;
        byte[] $r1, $r3;
        int $i0;
        java.lang.String $r2, $r14, $r16;
        java.nio.charset.Charset $r4;
        net.sourceforge.plantuml.picoweb.RenderRequest r5;
        net.sourceforge.plantuml.picoweb.PicoWebServer r6;
        java.io.BufferedOutputStream r7;
        net.sourceforge.plantuml.picoweb.BadRequest400 $r8, $r11;
        java.lang.Exception $r9;
        java.lang.StringBuilder $r12, $r13, $r15;

        r6 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        r0 := @parameter0: net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest;

        r7 := @parameter1: java.io.BufferedOutputStream;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: byte[] getBody()>();

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        $r8 = new net.sourceforge.plantuml.picoweb.BadRequest400;

        specialinvoke $r8.<net.sourceforge.plantuml.picoweb.BadRequest400: void <init>(java.lang.String)>("No request body");

        throw $r8;

     label1:
        $r2 = new java.lang.String;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.picoweb.ReceivedHTTPRequest: byte[] getBody()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r3, $r4);

        r5 = staticinvoke <net.sourceforge.plantuml.picoweb.RenderRequest: net.sourceforge.plantuml.picoweb.RenderRequest fromJson(java.lang.String)>($r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r11 = new net.sourceforge.plantuml.picoweb.BadRequest400;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing request json: ");

        $r14 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<net.sourceforge.plantuml.picoweb.BadRequest400: void <init>(java.lang.String,java.lang.Throwable)>($r16, $r9);

        throw $r11;

     label4:
        virtualinvoke r6.<net.sourceforge.plantuml.picoweb.PicoWebServer: void handleRenderRequest(net.sourceforge.plantuml.picoweb.RenderRequest,java.io.BufferedOutputStream)>(r5, r7);

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void handleRenderRequest(net.sourceforge.plantuml.picoweb.RenderRequest, java.io.BufferedOutputStream) throws java.lang.Exception
    {
        net.sourceforge.plantuml.Option $r0;
        net.sourceforge.plantuml.picoweb.RenderRequest r1;
        java.lang.String[] $r2;
        java.lang.String $r4, $r7, r10, $r11, $r12, $r35;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        net.sourceforge.plantuml.SourceStringReader $r14;
        net.sourceforge.plantuml.preproc.Defines $r15;
        java.nio.charset.Charset $r16;
        java.util.List $r17, $r21, $r22, $r33;
        java.io.ByteArrayOutputStream $r19;
        int $i0;
        java.lang.Object $r23;
        net.sourceforge.plantuml.BlockUml $r24;
        net.sourceforge.plantuml.FileFormatOption $r25, $r28, $r34;
        net.sourceforge.plantuml.picoweb.PicoWebServer r26;
        java.io.BufferedOutputStream r27;
        byte[] $r29;
        net.sourceforge.plantuml.ErrorUml $r30;
        net.sourceforge.plantuml.LineLocationImpl $r31;
        net.sourceforge.plantuml.ErrorUmlType $r32;
        net.sourceforge.plantuml.security.SFile $r36;
        net.sourceforge.plantuml.core.Diagram r37;
        net.sourceforge.plantuml.core.ImageData r38;

        r26 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        r1 := @parameter0: net.sourceforge.plantuml.picoweb.RenderRequest;

        r27 := @parameter1: java.io.BufferedOutputStream;

        $r0 = new net.sourceforge.plantuml.Option;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.picoweb.RenderRequest: java.lang.String[] getOptions()>();

        specialinvoke $r0.<net.sourceforge.plantuml.Option: void <init>(java.lang.String[])>($r2);

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.picoweb.RenderRequest: java.lang.String getSource()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>("@start");

        if $z0 == 0 goto label1;

        $r35 = virtualinvoke r1.<net.sourceforge.plantuml.picoweb.RenderRequest: java.lang.String getSource()>();

        goto label2;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@startuml\n");

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.picoweb.RenderRequest: java.lang.String getSource()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n@enduml");

        $r35 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        r10 = $r35;

        $r11 = virtualinvoke $r0.<net.sourceforge.plantuml.Option: java.lang.String getFileDir()>();

        if $r11 != null goto label3;

        $r36 = null;

        goto label4;

     label3:
        $r36 = new net.sourceforge.plantuml.security.SFile;

        $r12 = virtualinvoke $r0.<net.sourceforge.plantuml.Option: java.lang.String getFileDir()>();

        specialinvoke $r36.<net.sourceforge.plantuml.security.SFile: void <init>(java.lang.String)>($r12);

     label4:
        $r14 = new net.sourceforge.plantuml.SourceStringReader;

        $r15 = virtualinvoke $r0.<net.sourceforge.plantuml.Option: net.sourceforge.plantuml.preproc.Defines getDefaultDefines()>();

        $r16 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r17 = virtualinvoke $r0.<net.sourceforge.plantuml.Option: java.util.List getConfig()>();

        specialinvoke $r14.<net.sourceforge.plantuml.SourceStringReader: void <init>(net.sourceforge.plantuml.preproc.Defines,java.lang.String,java.nio.charset.Charset,java.util.List,net.sourceforge.plantuml.security.SFile)>($r15, r10, $r16, $r17, $r36);

        $r19 = new java.io.ByteArrayOutputStream;

        specialinvoke $r19.<java.io.ByteArrayOutputStream: void <init>()>();

        $r21 = virtualinvoke $r14.<net.sourceforge.plantuml.SourceStringReader: java.util.List getBlocks()>();

        $i0 = interfaceinvoke $r21.<java.util.List: int size()>();

        if $i0 != 0 goto label5;

        $r30 = new net.sourceforge.plantuml.ErrorUml;

        $r32 = <net.sourceforge.plantuml.ErrorUmlType: net.sourceforge.plantuml.ErrorUmlType SYNTAX_ERROR>;

        $r31 = new net.sourceforge.plantuml.LineLocationImpl;

        specialinvoke $r31.<net.sourceforge.plantuml.LineLocationImpl: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation)>("", null);

        specialinvoke $r30.<net.sourceforge.plantuml.ErrorUml: void <init>(net.sourceforge.plantuml.ErrorUmlType,java.lang.String,int,net.sourceforge.plantuml.LineLocation)>($r32, "No @startuml/@enduml found", 0, $r31);

        $r33 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r37 = staticinvoke <net.sourceforge.plantuml.error.PSystemErrorUtils: net.sourceforge.plantuml.error.PSystemError buildV2(net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ErrorUml,java.util.List,java.util.List)>(null, $r30, null, $r33);

        $r34 = virtualinvoke $r0.<net.sourceforge.plantuml.Option: net.sourceforge.plantuml.FileFormatOption getFileFormatOption()>();

        r38 = virtualinvoke $r14.<net.sourceforge.plantuml.SourceStringReader: net.sourceforge.plantuml.core.ImageData noStartumlFound(java.io.OutputStream,net.sourceforge.plantuml.FileFormatOption)>($r19, $r34);

        goto label6;

     label5:
        $r22 = virtualinvoke $r14.<net.sourceforge.plantuml.SourceStringReader: java.util.List getBlocks()>();

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(0);

        $r24 = (net.sourceforge.plantuml.BlockUml) $r23;

        r37 = virtualinvoke $r24.<net.sourceforge.plantuml.BlockUml: net.sourceforge.plantuml.core.Diagram getDiagram()>();

        $r25 = virtualinvoke $r0.<net.sourceforge.plantuml.Option: net.sourceforge.plantuml.FileFormatOption getFileFormatOption()>();

        r38 = interfaceinvoke r37.<net.sourceforge.plantuml.core.Diagram: net.sourceforge.plantuml.core.ImageData exportDiagram(java.io.OutputStream,int,net.sourceforge.plantuml.FileFormatOption)>($r19, 0, $r25);

     label6:
        $r28 = virtualinvoke $r0.<net.sourceforge.plantuml.Option: net.sourceforge.plantuml.FileFormatOption getFileFormatOption()>();

        $r29 = virtualinvoke $r19.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke r26.<net.sourceforge.plantuml.picoweb.PicoWebServer: void sendDiagram(java.io.BufferedOutputStream,net.sourceforge.plantuml.core.Diagram,net.sourceforge.plantuml.FileFormatOption,java.lang.String,net.sourceforge.plantuml.core.ImageData,byte[])>(r27, r37, $r28, "200", r38, $r29);

        return;
    }

    private void sendDiagram(java.io.BufferedOutputStream, net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.FileFormatOption, java.lang.String, net.sourceforge.plantuml.core.ImageData, byte[]) throws java.io.IOException
    {
        net.sourceforge.plantuml.picoweb.PicoWebServer r0;
        java.io.BufferedOutputStream r1;
        java.lang.StringBuilder $r2, $r3, $r5, $r7, $r8, $r10, $r12, $r13, $r15, $r17, $r18, $r22, $r24, $r25, $r27, $r29, $r30, $r32, $r34, $r35, $r36, $r38, $r39, $r43, $r52, $r53, $r54, $r60, $r61, $r63, $r65, $r66, $r68, $r72, $r73, $r76;
        java.lang.String r4, $r6, $r9, $r11, $r16, $r21, $r23, $r28, $r33, $r37, $r42, $r44, $r51, $r55, $r62, $r64, $r69, r71, $r74, $r75, $r77;
        java.util.Date $r14;
        net.sourceforge.plantuml.FileFormatOption r19;
        net.sourceforge.plantuml.FileFormat $r20;
        byte[] r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        net.sourceforge.plantuml.core.ImageData r31;
        net.sourceforge.plantuml.core.Diagram r40;
        net.sourceforge.plantuml.core.DiagramDescription $r41;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Display $r45, $r46, $r47;
        java.util.List $r48;
        java.lang.Object $r49, $r58;
        java.lang.CharSequence $r50;
        java.util.Collection $r56;
        java.util.Iterator r57;
        net.sourceforge.plantuml.ErrorUml r59;
        net.sourceforge.plantuml.LineLocation $r67;
        net.sourceforge.plantuml.error.PSystemError r70;

        r0 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        r1 := @parameter0: java.io.BufferedOutputStream;

        r40 := @parameter1: net.sourceforge.plantuml.core.Diagram;

        r19 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        r4 := @parameter3: java.lang.String;

        r31 := @parameter4: net.sourceforge.plantuml.core.ImageData;

        r26 := @parameter5: byte[];

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/1.1 ");

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r6);

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, "Cache-Control: no-cache");

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Server: PlantUML PicoWebServer ");

        $r9 = staticinvoke <net.sourceforge.plantuml.version.Version: java.lang.String versionString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Date: ");

        $r14 = new java.util.Date;

        specialinvoke $r14.<java.util.Date: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-type: ");

        $r20 = virtualinvoke r19.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat getFileFormat()>();

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.FileFormat: java.lang.String getMimeType()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-length: ");

        $i0 = lengthof r26;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r28);

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X-PlantUML-Diagram-Width: ");

        $i1 = interfaceinvoke r31.<net.sourceforge.plantuml.core.ImageData: int getWidth()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r33);

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X-PlantUML-Diagram-Height: ");

        $i2 = interfaceinvoke r31.<net.sourceforge.plantuml.core.ImageData: int getHeight()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X-PlantUML-Diagram-Description: ");

        $r41 = interfaceinvoke r40.<net.sourceforge.plantuml.core.Diagram: net.sourceforge.plantuml.core.DiagramDescription getDescription()>();

        $r42 = virtualinvoke $r41.<net.sourceforge.plantuml.core.DiagramDescription: java.lang.String getDescription()>();

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r44);

        $z0 = r40 instanceof net.sourceforge.plantuml.error.PSystemError;

        if $z0 == 0 goto label2;

        r70 = (net.sourceforge.plantuml.error.PSystemError) r40;

        $r56 = virtualinvoke r70.<net.sourceforge.plantuml.error.PSystemError: java.util.Collection getErrorsUml()>();

        r57 = interfaceinvoke $r56.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r57.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r58 = interfaceinvoke r57.<java.util.Iterator: java.lang.Object next()>();

        r59 = (net.sourceforge.plantuml.ErrorUml) $r58;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X-PlantUML-Diagram-Error: ");

        $r62 = virtualinvoke r59.<net.sourceforge.plantuml.ErrorUml: java.lang.String getError()>();

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r64);

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X-PlantUML-Diagram-Error-Line: ");

        $r67 = virtualinvoke r59.<net.sourceforge.plantuml.ErrorUml: net.sourceforge.plantuml.LineLocation getLineLocation()>();

        $i5 = interfaceinvoke $r67.<net.sourceforge.plantuml.LineLocation: int getPosition()>();

        $i6 = 1 + $i5;

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r69);

        goto label1;

     label2:
        $r45 = interfaceinvoke r40.<net.sourceforge.plantuml.core.Diagram: net.sourceforge.plantuml.cucadiagram.Display getTitleDisplay()>();

        if $r45 == null goto label3;

        $r46 = interfaceinvoke r40.<net.sourceforge.plantuml.core.Diagram: net.sourceforge.plantuml.cucadiagram.Display getTitleDisplay()>();

        $i3 = virtualinvoke $r46.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        if $i3 != 1 goto label3;

        $r47 = interfaceinvoke r40.<net.sourceforge.plantuml.core.Diagram: net.sourceforge.plantuml.cucadiagram.Display getTitleDisplay()>();

        $r48 = virtualinvoke $r47.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        $r49 = interfaceinvoke $r48.<java.util.List: java.lang.Object get(int)>(0);

        $r50 = (java.lang.CharSequence) $r49;

        $r51 = interfaceinvoke $r50.<java.lang.CharSequence: java.lang.String toString()>();

        r71 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r51, "UTF-8");

        $i4 = virtualinvoke r71.<java.lang.String: int length()>();

        if $i4 >= 256 goto label3;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X-PlantUML-Diagram-Title: ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r55);

     label3:
        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, "X-Patreon: Support us on https://plantuml.com/patreon");

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, "X-Donate: https://plantuml.com/paypal");

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X-Quote: ");

        $r74 = staticinvoke <net.sourceforge.plantuml.graphic.QuoteUtils: java.lang.String getSomeQuote()>();

        $r75 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String rot(java.lang.String)>($r74);

        $r76 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, $r77);

        specialinvoke r0.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r1, "");

        virtualinvoke r1.<java.io.BufferedOutputStream: void flush()>();

        virtualinvoke r1.<java.io.BufferedOutputStream: void write(byte[])>(r26);

        virtualinvoke r1.<java.io.BufferedOutputStream: void flush()>();

        return;
    }

    private void sendError(java.lang.Throwable, java.io.BufferedOutputStream) throws java.lang.Exception
    {
        java.io.ByteArrayOutputStream $r0;
        java.io.PrintWriter $r2;
        java.lang.Throwable r4, $r17;
        boolean $z0, $z1;
        net.sourceforge.plantuml.picoweb.PicoWebServer r5;
        java.io.BufferedOutputStream r6;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r19;
        java.lang.String $r9, $r13, $r18, $r20;
        int $i0;
        byte[] $r14;

        r5 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        r4 := @parameter0: java.lang.Throwable;

        r6 := @parameter1: java.io.BufferedOutputStream;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = new java.io.PrintWriter;

        specialinvoke $r2.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r0);

        $z0 = r4 instanceof net.sourceforge.plantuml.picoweb.BadRequest400;

        if $z0 == 0 goto label1;

        $r17 = virtualinvoke r4.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r17 != null goto label1;

        $r18 = virtualinvoke r4.<java.lang.Throwable: java.lang.String getMessage()>();

        virtualinvoke $r2.<java.io.PrintWriter: void write(java.lang.String)>($r18);

        goto label2;

     label1:
        virtualinvoke r4.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r2);

     label2:
        virtualinvoke $r2.<java.io.PrintWriter: void close()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HTTP/1.1 ");

        $z1 = r4 instanceof net.sourceforge.plantuml.picoweb.BadRequest400;

        if $z1 == 0 goto label3;

        $r20 = "400 Bad Request";

        goto label4;

     label3:
        $r20 = "500 Internal Server Error";

     label4:
        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r6, $r9);

        specialinvoke r5.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r6, "Content-type: text/plain");

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Content-length: ");

        $i0 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: int size()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r5.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r6, $r13);

        specialinvoke r5.<net.sourceforge.plantuml.picoweb.PicoWebServer: void write(java.io.OutputStream,java.lang.String)>(r6, "");

        $r14 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r6.<java.io.BufferedOutputStream: void write(byte[])>($r14);

        virtualinvoke r6.<java.io.BufferedOutputStream: void flush()>();

        return;
    }

    private java.lang.String httpReturnCode(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;
        net.sourceforge.plantuml.picoweb.PicoWebServer r5;

        r5 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        if i0 != 200 goto label2;

     label1:
        return "200 OK";

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ERROR");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    private void write(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.lang.StringBuilder $r0, $r1, $r2;
        java.io.OutputStream r3;
        java.nio.charset.Charset $r4;
        byte[] $r5;
        net.sourceforge.plantuml.picoweb.PicoWebServer r6;
        java.lang.String r7, r8;

        r6 := @this: net.sourceforge.plantuml.picoweb.PicoWebServer;

        r3 := @parameter0: java.io.OutputStream;

        r7 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke r8.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        virtualinvoke r3.<java.io.OutputStream: void write(byte[])>($r5);

        return;
    }
}
