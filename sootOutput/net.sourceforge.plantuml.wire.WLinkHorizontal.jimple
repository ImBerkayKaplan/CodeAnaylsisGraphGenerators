public class net.sourceforge.plantuml.wire.WLinkHorizontal extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.UTranslate start;
    private final double destination;
    private final net.sourceforge.plantuml.wire.WLinkType type;
    private final net.sourceforge.plantuml.wire.WArrowDirection direction;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private final net.sourceforge.plantuml.ISkinParam skinParam;

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ugraphic.UTranslate, double, net.sourceforge.plantuml.wire.WLinkType, net.sourceforge.plantuml.wire.WArrowDirection, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.wire.WLinkHorizontal r0;
        net.sourceforge.plantuml.ugraphic.UTranslate r1;
        double d0;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.wire.WArrowDirection r3;
        net.sourceforge.plantuml.wire.WLinkType r4;
        net.sourceforge.plantuml.cucadiagram.Display r5;
        net.sourceforge.plantuml.ugraphic.color.HColor r6, $r8;

        r0 := @this: net.sourceforge.plantuml.wire.WLinkHorizontal;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        d0 := @parameter2: double;

        r4 := @parameter3: net.sourceforge.plantuml.wire.WLinkType;

        r3 := @parameter4: net.sourceforge.plantuml.wire.WArrowDirection;

        r6 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        r5 := @parameter6: net.sourceforge.plantuml.cucadiagram.Display;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start> = r1;

        r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: double destination> = d0;

        r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ISkinParam skinParam> = r2;

        r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction> = r3;

        r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WLinkType type> = r4;

        r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.cucadiagram.Display label> = r5;

        if r6 != null goto label1;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        goto label2;

     label1:
        $r8 = r6;

     label2:
        r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.color.HColor color> = $r8;

        return;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getBlack()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0, $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.wire.WLinkHorizontal r3;

        r3 := @this: net.sourceforge.plantuml.wire.WLinkHorizontal;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>($r0);

        return $r2;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getWhite()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0, $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.wire.WLinkHorizontal r3;

        r3 := @this: net.sourceforge.plantuml.wire.WLinkHorizontal;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>($r0);

        return $r2;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTextBlock()
    {
        net.sourceforge.plantuml.ugraphic.UFont $r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1, r4;
        net.sourceforge.plantuml.wire.WLinkHorizontal r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r6;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8;

        r2 := @this: net.sourceforge.plantuml.wire.WLinkHorizontal;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(10);

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>($r0);

        $r3 = r2.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration changeColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r3);

        $r7 = r2.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r6 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r5 = r2.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r4, $r6, $r5);

        return $r8;
    }

    public void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wire.WLinkHorizontal r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r14, $r16, $r22, $r25;
        net.sourceforge.plantuml.graphic.TextBlock r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r6, $r13, $r20, $r21, $r24, $r27;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        net.sourceforge.plantuml.wire.WLinkType $r7, $r8, $r9, $r10, $r34, $r35;
        net.sourceforge.plantuml.wire.WArrowDirection $r11;
        int[] $r12;
        int $i0, $i1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r15, $r18, r28, r29, r30, r31, r32, r33;
        net.sourceforge.plantuml.ugraphic.UBackground $r17, $r23, $r26;
        net.sourceforge.plantuml.ugraphic.URectangle $r19;
        byte $b2;

        r0 := @this: net.sourceforge.plantuml.wire.WLinkHorizontal;

        r28 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        r29 = interfaceinvoke r28.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        r2 = specialinvoke r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r3 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = interfaceinvoke r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $r5 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        r30 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $d0 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: double destination>;

        $r6 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $d1 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        d2 = $d0 - $d1;

        $r8 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WLinkType type>;

        $r7 = <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType NORMAL>;

        if $r8 != $r7 goto label1;

        $r25 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r31 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r26);

        specialinvoke r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: void drawNormalArrow(net.sourceforge.plantuml.ugraphic.UGraphic)>(r31);

        $d13 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d14 = neg $d13;

        $d15 = $d14 / 2.0;

        $r27 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d15);

        r30 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        goto label2;

     label1:
        $r10 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WLinkType type>;

        $r9 = <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType BUS>;

        if $r10 != $r9 goto label2;

        $r22 = specialinvoke r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.color.HColor getWhite()>();

        $r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r32 = interfaceinvoke r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r23);

        specialinvoke r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: void drawBusArrow(net.sourceforge.plantuml.ugraphic.UGraphic)>(r32);

        $d9 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d10 = 20.0 - $d9;

        $d11 = $d10 / 2.0;

        $d12 = $d11 - 5.0;

        $r24 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d12);

        r30 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

     label2:
        $d16 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b2 = $d16 cmpl 0.0;

        if $b2 <= 0 goto label8;

        $r12 = <net.sourceforge.plantuml.wire.WLinkHorizontal$1: int[] $SwitchMap$net$sourceforge$plantuml$wire$WArrowDirection>;

        $r11 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $i0 = virtualinvoke $r11.<net.sourceforge.plantuml.wire.WArrowDirection: int ordinal()>();

        $i1 = $r12[$i0];

        lookupswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label3:
        $r20 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(4.0);

        r33 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        goto label6;

     label4:
        $d3 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = d2 - $d3;

        $d5 = $d4 - 4.0;

        $r13 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d5);

        r33 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        goto label6;

     label5:
        $d6 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d7 = d2 - $d6;

        $d8 = $d7 / 2.0;

        $r21 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d8);

        r33 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

     label6:
        $r34 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WLinkType type>;

        $r35 = <net.sourceforge.plantuml.wire.WLinkType: net.sourceforge.plantuml.wire.WLinkType NORMAL>;

        if $r34 != $r35 goto label7;

        $r14 = specialinvoke r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.color.HColor getWhite()>();

        $r15 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        $r16 = specialinvoke r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.color.HColor getWhite()>();

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r18 = interfaceinvoke $r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        $r19 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r4);

        interfaceinvoke $r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r19);

     label7:
        interfaceinvoke r2.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r33);

     label8:
        return;
    }

    private void drawBusArrow(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wire.WLinkHorizontal r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, $r13, $r14, $r15, $r17, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        net.sourceforge.plantuml.ugraphic.UPath $r2;
        net.sourceforge.plantuml.wire.WArrowDirection $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        net.sourceforge.plantuml.ugraphic.UGraphic r12, $r16, $r20, $r24, $r28;

        r0 := @this: net.sourceforge.plantuml.wire.WLinkHorizontal;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $d0 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: double destination>;

        $r1 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $d1 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d2 = $d0 - $d1;

        d3 = $d2 - 2.0;

        $r2 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $r5 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $r4 = <net.sourceforge.plantuml.wire.WArrowDirection: net.sourceforge.plantuml.wire.WArrowDirection NONE>;

        if $r5 != $r4 goto label1;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, 0.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, 10.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 10.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 0.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        $r25 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $r26 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(1.0);

        $r27 = virtualinvoke $r25.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r26);

        $r28 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        interfaceinvoke $r28.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

     label1:
        $r7 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $r6 = <net.sourceforge.plantuml.wire.WArrowDirection: net.sourceforge.plantuml.wire.WArrowDirection NORMAL>;

        if $r7 != $r6 goto label2;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        $d8 = d3 - 15.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d8, 0.0);

        $d9 = d3 - 15.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d9, -5.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, 5.0);

        $d10 = d3 - 15.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d10, 15.0);

        $d11 = d3 - 15.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d11, 10.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 10.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 0.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        $r21 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(1.0);

        $r23 = virtualinvoke $r21.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r22);

        $r24 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r23);

        interfaceinvoke $r24.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

     label2:
        $r9 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $r8 = <net.sourceforge.plantuml.wire.WArrowDirection: net.sourceforge.plantuml.wire.WArrowDirection BOTH>;

        if $r9 != $r8 goto label3;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 5.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, -5.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, 0.0);

        $d4 = d3 - 15.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d4, 0.0);

        $d5 = d3 - 15.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d5, -5.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, 5.0);

        $d6 = d3 - 15.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d6, 15.0);

        $d7 = d3 - 15.0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d7, 10.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, 10.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, 15.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 5.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        $r17 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(1.0);

        $r19 = virtualinvoke $r17.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r18);

        $r20 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke $r20.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

     label3:
        $r11 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $r10 = <net.sourceforge.plantuml.wire.WArrowDirection: net.sourceforge.plantuml.wire.WArrowDirection REVERSE>;

        if $r11 != $r10 goto label4;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 5.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, -5.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, 0.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, 0.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d3, 10.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, 10.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(15.0, 15.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 5.0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        $r13 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(1.0);

        $r15 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r14);

        $r16 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

     label4:
        return;
    }

    private void drawNormalArrow(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wire.WLinkHorizontal r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, $r6, $r7, $r8, $r11, $r12, $r13, $r23, $r24, $r25;
        double $d0, $d1, $d2, d3;
        net.sourceforge.plantuml.wire.WArrowDirection $r2, $r3, $r15, $r16, $r17, $r18, $r20, $r21;
        net.sourceforge.plantuml.ugraphic.UPath $r4, $r10;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, $r9, $r14, $r26;
        net.sourceforge.plantuml.ugraphic.ULine $r27;

        r0 := @this: net.sourceforge.plantuml.wire.WLinkHorizontal;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $d0 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: double destination>;

        $r1 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $d1 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d2 = $d0 - $d1;

        d3 = $d2 - 2.0;

        $r3 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $r2 = <net.sourceforge.plantuml.wire.WArrowDirection: net.sourceforge.plantuml.wire.WArrowDirection BOTH>;

        if $r3 == $r2 goto label1;

        $r18 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $r17 = <net.sourceforge.plantuml.wire.WArrowDirection: net.sourceforge.plantuml.wire.WArrowDirection NORMAL>;

        if $r18 != $r17 goto label2;

     label1:
        $r4 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-5.0, -5.0);

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-5.0, 5.0);

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 0.0);

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        $r6 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d3);

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r7);

        $r9 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

     label2:
        $r20 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $r21 = <net.sourceforge.plantuml.wire.WArrowDirection: net.sourceforge.plantuml.wire.WArrowDirection BOTH>;

        if $r20 == $r21 goto label3;

        $r16 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.wire.WArrowDirection direction>;

        $r15 = <net.sourceforge.plantuml.wire.WArrowDirection: net.sourceforge.plantuml.wire.WArrowDirection REVERSE>;

        if $r16 != $r15 goto label4;

     label3:
        $r10 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(5.0, -5.0);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(5.0, 5.0);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 0.0);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        $r11 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(1.0);

        $r13 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r12);

        $r14 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

     label4:
        $r23 = r0.<net.sourceforge.plantuml.wire.WLinkHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate start>;

        $r24 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(1.0);

        $r25 = virtualinvoke $r23.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r24);

        $r26 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r25);

        $r27 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(d3);

        interfaceinvoke $r26.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r27);

        return;
    }
}
