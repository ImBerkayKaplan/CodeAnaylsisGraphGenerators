public class net.sourceforge.plantuml.mindmap.SymetricalTeePositioned extends java.lang.Object
{
    private final net.sourceforge.plantuml.mindmap.SymetricalTee tee;
    private double y;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6;
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r2;
        double $d0;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r5;
        java.lang.String $r7;

        r2 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("y=");

        $d0 = r2.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r2.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void <init>(net.sourceforge.plantuml.mindmap.SymetricalTee)
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        net.sourceforge.plantuml.mindmap.SymetricalTee r1;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        r1 := @parameter0: net.sourceforge.plantuml.mindmap.SymetricalTee;

        specialinvoke r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: void <init>(net.sourceforge.plantuml.mindmap.SymetricalTee,double)>(r1, 0.0);

        return;
    }

    private void <init>(net.sourceforge.plantuml.mindmap.SymetricalTee, double)
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        net.sourceforge.plantuml.mindmap.SymetricalTee r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        r1 := @parameter0: net.sourceforge.plantuml.mindmap.SymetricalTee;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee> = r1;

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y> = d0;

        return;
    }

    public void moveSoThatSegmentA1isOn(double)
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        java.awt.geom.Line2D $r1;
        double d0, d1, $d2, $d3, $d4;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        d1 := @parameter0: double;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: java.awt.geom.Line2D getSegmentA1()>();

        d0 = virtualinvoke $r1.<java.awt.geom.Line2D: double getY1()>();

        $d3 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $d2 = d1 - d0;

        $d4 = $d3 + $d2;

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y> = $d4;

        return;
    }

    public void moveSoThatSegmentA2isOn(double)
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        java.awt.geom.Line2D $r1;
        double d0, d1, $d2, $d3, $d4;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        d1 := @parameter0: double;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: java.awt.geom.Line2D getSegmentA2()>();

        d0 = virtualinvoke $r1.<java.awt.geom.Line2D: double getY1()>();

        $d3 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $d2 = d1 - d0;

        $d4 = $d3 + $d2;

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y> = $d4;

        return;
    }

    public void move(double)
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        double d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        d0 := @parameter0: double;

        $d1 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $d2 = $d1 + d0;

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y> = $d2;

        return;
    }

    public java.awt.geom.Line2D getSegmentA1()
    {
        java.awt.geom.Line2D$Double $r0;
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r1;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        r1 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $r0 = new java.awt.geom.Line2D$Double;

        $d0 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r2 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d1 = virtualinvoke $r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness1()>();

        $d2 = $d1 / 2.0;

        $d3 = $d0 - $d2;

        $r3 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d4 = virtualinvoke $r3.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation1()>();

        $d5 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r4 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d6 = virtualinvoke $r4.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness1()>();

        $d7 = $d6 / 2.0;

        $d8 = $d5 - $d7;

        specialinvoke $r0.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(0.0, $d3, $d4, $d8);

        return $r0;
    }

    public java.awt.geom.Line2D getSegmentB1()
    {
        java.awt.geom.Line2D$Double $r0;
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r1;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;

        r1 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $r0 = new java.awt.geom.Line2D$Double;

        $d0 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r2 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d1 = virtualinvoke $r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness1()>();

        $d2 = $d1 / 2.0;

        $d3 = $d0 + $d2;

        $r3 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d4 = virtualinvoke $r3.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation1()>();

        $d5 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r4 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d6 = virtualinvoke $r4.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness1()>();

        $d7 = $d6 / 2.0;

        $d8 = $d5 + $d7;

        specialinvoke $r0.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(0.0, $d3, $d4, $d8);

        return $r0;
    }

    public java.awt.geom.Line2D getSegmentA2()
    {
        java.awt.geom.Line2D$Double $r0;
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r1;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r2, $r3, $r4, $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r1 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $r0 = new java.awt.geom.Line2D$Double;

        $r2 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation1()>();

        $d1 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r3 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d2 = virtualinvoke $r3.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness2()>();

        $d3 = $d2 / 2.0;

        $d4 = $d1 - $d3;

        $r4 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d5 = virtualinvoke $r4.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation1()>();

        $r5 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d6 = virtualinvoke $r5.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation2()>();

        $d7 = $d5 + $d6;

        $d8 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r6 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d9 = virtualinvoke $r6.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness2()>();

        $d10 = $d9 / 2.0;

        $d11 = $d8 - $d10;

        specialinvoke $r0.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d0, $d4, $d7, $d11);

        return $r0;
    }

    public java.awt.geom.Line2D getSegmentB2()
    {
        java.awt.geom.Line2D$Double $r0;
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r1;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r2, $r3, $r4, $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r1 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $r0 = new java.awt.geom.Line2D$Double;

        $r2 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation1()>();

        $d1 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r3 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d2 = virtualinvoke $r3.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness2()>();

        $d3 = $d2 / 2.0;

        $d4 = $d1 + $d3;

        $r4 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d5 = virtualinvoke $r4.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation1()>();

        $r5 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d6 = virtualinvoke $r5.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation2()>();

        $d7 = $d5 + $d6;

        $d8 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r6 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d9 = virtualinvoke $r6.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness2()>();

        $d10 = $d9 / 2.0;

        $d11 = $d8 + $d10;

        specialinvoke $r0.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>($d0, $d4, $d7, $d11);

        return $r0;
    }

    public double getMaxX()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r1, $r2;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d0 = virtualinvoke $r1.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation1()>();

        $r2 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d1 = virtualinvoke $r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getElongation2()>();

        $d2 = $d0 + $d1;

        return $d2;
    }

    public double getMaxY()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d1 = virtualinvoke $r1.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness1()>();

        $d2 = $d1 / 2.0;

        $r2 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d3 = virtualinvoke $r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness2()>();

        $d4 = $d3 / 2.0;

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>($d2, $d4);

        $d6 = $d0 + $d5;

        return $d6;
    }

    public double getMinY()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r1, $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $r1 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d1 = virtualinvoke $r1.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness1()>();

        $d2 = $d1 / 2.0;

        $r2 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $d3 = virtualinvoke $r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double getThickness2()>();

        $d4 = $d3 / 2.0;

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>($d2, $d4);

        $d6 = $d0 - $d5;

        return $d6;
    }

    public final double getY()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        return $d0;
    }

    public net.sourceforge.plantuml.mindmap.SymetricalTeePositioned getMax(net.sourceforge.plantuml.mindmap.SymetricalTeePositioned)
    {
        net.sourceforge.plantuml.mindmap.SymetricalTeePositioned r0, r1;
        net.sourceforge.plantuml.mindmap.SymetricalTee $r2, $r3;
        double $d0, $d1;
        byte $b0;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        r1 := @parameter0: net.sourceforge.plantuml.mindmap.SymetricalTeePositioned;

        $r3 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        $r2 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: net.sourceforge.plantuml.mindmap.SymetricalTee tee>;

        if $r3 == $r2 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $d1 = r1.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTeePositioned: double y>;

        $b0 = $d1 cmpl $d0;

        if $b0 <= 0 goto label2;

        return r1;

     label2:
        return r0;
    }
}
