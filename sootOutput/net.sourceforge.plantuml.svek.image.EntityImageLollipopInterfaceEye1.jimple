public class net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1 extends net.sourceforge.plantuml.svek.AbstractEntityImage
{
    private static final int SIZE;
    private final net.sourceforge.plantuml.graphic.TextBlock desc;
    private final net.sourceforge.plantuml.svek.Bibliotekon bibliotekon;
    private final net.sourceforge.plantuml.Url url;

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.svek.Bibliotekon)
    {
        net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1 r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2, $r7;
        net.sourceforge.plantuml.svek.Bibliotekon r3;
        net.sourceforge.plantuml.cucadiagram.Stereotype r4;
        net.sourceforge.plantuml.cucadiagram.Display $r5;
        net.sourceforge.plantuml.graphic.FontConfiguration $r6;
        net.sourceforge.plantuml.FontParam $r8;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r9;
        net.sourceforge.plantuml.graphic.TextBlock $r10;
        net.sourceforge.plantuml.Url $r11;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.svek.Bibliotekon;

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractEntityImage: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon> = r3;

        r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r6 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam CLASS>;

        specialinvoke $r6.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r7, $r8, r4);

        $r9 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r10 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r6, $r9, r2);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.graphic.TextBlock desc> = $r10;

        $r11 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.Url getUrl99()>();

        r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.Url url> = $r11;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1 r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(24.0, 24.0);

        return $r0;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1 r0;
        net.sourceforge.plantuml.ISkinParam $r1, $r6, $r15;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r2, $r7, $r17;
        net.sourceforge.plantuml.ColorParam[] $r3, $r8;
        net.sourceforge.plantuml.ColorParam $r4, $r9;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r10;
        net.sourceforge.plantuml.ugraphic.UBackground $r11, $r23;
        net.sourceforge.plantuml.Url $r12, $r36, $r40;
        net.sourceforge.plantuml.ugraphic.UEllipse $r13;
        net.sourceforge.plantuml.cucadiagram.IEntity $r16, $r25, $r29, $r39;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.UStroke $r18;
        net.sourceforge.plantuml.ugraphic.UGraphic $r19, $r21, r41, r42, r43, r44;
        net.sourceforge.plantuml.ugraphic.UTranslate $r20, $r31, r32;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r22;
        net.sourceforge.plantuml.svek.Bibliotekon $r24, $r28;
        net.sourceforge.plantuml.svek.SvekNode $r26;
        java.awt.geom.Point2D r27, r45, r46;
        java.util.List r30;
        net.sourceforge.plantuml.svek.image.ConnectedCircle $r33;
        java.util.Iterator r35;
        java.lang.Object $r37;
        net.sourceforge.plantuml.svek.SvekLine r38;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1;

        r41 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r3 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r4 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam classBorder>;

        $r3[0] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r1, $r2, $r3);

        r42 = interfaceinvoke r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r8 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r9 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam classBackground>;

        $r8[0] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r6, $r7, $r8);

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r43 = interfaceinvoke r42.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        $r12 = r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.Url url>;

        if $r12 == null goto label1;

        $r40 = r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.Url url>;

        interfaceinvoke r43.<net.sourceforge.plantuml.ugraphic.UGraphic: void startUrl(net.sourceforge.plantuml.Url)>($r40);

     label1:
        $r13 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(14.0, 14.0);

        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $z0 = interfaceinvoke $r15.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r17);

        if $z0 == 0 goto label2;

     label2:
        $r18 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r19 = interfaceinvoke r43.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(5.0, 5.0);

        $r21 = interfaceinvoke $r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r13);

        $r22 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r22.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r23 = virtualinvoke $r22.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r44 = interfaceinvoke r43.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r23);

        $r24 = r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon>;

        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r26 = virtualinvoke $r24.<net.sourceforge.plantuml.svek.Bibliotekon: net.sourceforge.plantuml.svek.SvekNode getNode(net.sourceforge.plantuml.cucadiagram.IEntity)>($r25);

        r27 = virtualinvoke $r26.<net.sourceforge.plantuml.svek.SvekNode: java.awt.geom.Point2D getPosition()>();

        $r28 = r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon>;

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        r30 = virtualinvoke $r28.<net.sourceforge.plantuml.svek.Bibliotekon: java.util.List getAllLineConnectedTo(net.sourceforge.plantuml.cucadiagram.IEntity)>($r29);

        $r31 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r31.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r27);

        r32 = virtualinvoke $r31.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate reverse()>();

        $r33 = new net.sourceforge.plantuml.svek.image.ConnectedCircle;

        specialinvoke $r33.<net.sourceforge.plantuml.svek.image.ConnectedCircle: void <init>(double)>(12.0);

        r35 = interfaceinvoke r30.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r37 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r38 = (net.sourceforge.plantuml.svek.SvekLine) $r37;

        $r39 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        r45 = virtualinvoke r38.<net.sourceforge.plantuml.svek.SvekLine: java.awt.geom.Point2D getMyPoint(net.sourceforge.plantuml.cucadiagram.IEntity)>($r39);

        r46 = virtualinvoke r32.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r45);

        virtualinvoke $r33.<net.sourceforge.plantuml.svek.image.ConnectedCircle: void addSecondaryConnection(java.awt.geom.Point2D)>(r46);

        goto label3;

     label4:
        virtualinvoke $r33.<net.sourceforge.plantuml.svek.image.ConnectedCircle: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r44);

        $r36 = r0.<net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: net.sourceforge.plantuml.Url url>;

        if $r36 == null goto label5;

        interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeUrl()>();

     label5:
        return;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1 r1;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType CIRCLE>;

        return $r0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.svek.image.EntityImageLollipopInterfaceEye1: int SIZE> = 24;

        return;
    }
}
