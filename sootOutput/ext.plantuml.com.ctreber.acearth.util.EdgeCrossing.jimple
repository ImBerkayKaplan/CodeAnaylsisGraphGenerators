public class ext.plantuml.com.ctreber.acearth.util.EdgeCrossing extends java.lang.Object
{
    public static final int XingTypeEntry;
    public static final int XingTypeExit;
    private int fType;
    private int fIndex;
    private double fX;
    private double fY;
    private double fAngle;

    public void <init>(int, int, double, double, double)
    {
        ext.plantuml.com.ctreber.acearth.util.EdgeCrossing r0;
        int i0, i1;
        double d0, d1, d2;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.EdgeCrossing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: int fType> = i0;

        r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fX> = d0;

        r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fY> = d1;

        r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fAngle> = d2;

        r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: int fIndex> = i1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        ext.plantuml.com.ctreber.acearth.util.EdgeCrossing r1;
        int $i0, $i1;
        double $d0, $d1, $d2;
        java.lang.String $r12;

        r1 := @this: ext.plantuml.com.ctreber.acearth.util.EdgeCrossing;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: int fType>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $d0 = r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fX>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $d1 = r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fY>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $d2 = r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fAngle>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $i1 = r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: int fIndex>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public int getType()
    {
        ext.plantuml.com.ctreber.acearth.util.EdgeCrossing r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.EdgeCrossing;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: int fType>;

        return $i0;
    }

    public double getX()
    {
        ext.plantuml.com.ctreber.acearth.util.EdgeCrossing r0;
        double $d0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.EdgeCrossing;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fX>;

        return $d0;
    }

    public double getY()
    {
        ext.plantuml.com.ctreber.acearth.util.EdgeCrossing r0;
        double $d0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.EdgeCrossing;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fY>;

        return $d0;
    }

    public double getAngle()
    {
        ext.plantuml.com.ctreber.acearth.util.EdgeCrossing r0;
        double $d0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.EdgeCrossing;

        $d0 = r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double fAngle>;

        return $d0;
    }

    public int getIndex()
    {
        ext.plantuml.com.ctreber.acearth.util.EdgeCrossing r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.util.EdgeCrossing;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: int fIndex>;

        return $i0;
    }

    public static void <clinit>()
    {
        <ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: int XingTypeExit> = 1;

        <ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: int XingTypeEntry> = 0;

        return;
    }
}
