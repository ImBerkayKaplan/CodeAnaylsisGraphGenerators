public class net.sourceforge.plantuml.stats.XmlConverter extends java.lang.Object
{
    private final java.text.DateFormat formatter;
    private final net.sourceforge.plantuml.stats.api.Stats stats;

    public void <init>(net.sourceforge.plantuml.stats.api.Stats)
    {
        net.sourceforge.plantuml.stats.XmlConverter r0;
        java.text.DateFormat $r1;
        net.sourceforge.plantuml.stats.api.Stats r2;

        r0 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r2 := @parameter0: net.sourceforge.plantuml.stats.api.Stats;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 2);

        r0.<net.sourceforge.plantuml.stats.XmlConverter: java.text.DateFormat formatter> = $r1;

        r0.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats> = r2;

        return;
    }

    private org.w3c.dom.Document getDocument() throws javax.xml.parsers.ParserConfigurationException
    {
        javax.xml.parsers.DocumentBuilder r0;
        org.w3c.dom.Document r1;
        java.lang.String $r2, $r3;
        org.w3c.dom.Element r4;
        net.sourceforge.plantuml.stats.XmlConverter r6;
        net.sourceforge.plantuml.stats.api.Stats $r7, $r9, $r11, $r13, $r15;
        net.sourceforge.plantuml.stats.api.StatsTable $r8, $r10, $r12, $r14, $r16;

        r6 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r0 = staticinvoke <net.sourceforge.plantuml.xml.XmlFactories: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        r1 = virtualinvoke r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        interfaceinvoke r1.<org.w3c.dom.Document: void setXmlStandalone(boolean)>(1);

        $r2 = "plantuml";

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        r4 = interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r3);

        interfaceinvoke r1.<org.w3c.dom.Document: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r4);

        $r7 = r6.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getLastSessions()>();

        specialinvoke r6.<net.sourceforge.plantuml.stats.XmlConverter: void addNode(org.w3c.dom.Element,org.w3c.dom.Document,net.sourceforge.plantuml.stats.api.StatsTable)>(r4, r1, $r8);

        $r9 = r6.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getCurrentSessionByDiagramType()>();

        specialinvoke r6.<net.sourceforge.plantuml.stats.XmlConverter: void addNode(org.w3c.dom.Element,org.w3c.dom.Document,net.sourceforge.plantuml.stats.api.StatsTable)>(r4, r1, $r10);

        $r11 = r6.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getCurrentSessionByFormat()>();

        specialinvoke r6.<net.sourceforge.plantuml.stats.XmlConverter: void addNode(org.w3c.dom.Element,org.w3c.dom.Document,net.sourceforge.plantuml.stats.api.StatsTable)>(r4, r1, $r12);

        $r13 = r6.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getAllByDiagramType()>();

        specialinvoke r6.<net.sourceforge.plantuml.stats.XmlConverter: void addNode(org.w3c.dom.Element,org.w3c.dom.Document,net.sourceforge.plantuml.stats.api.StatsTable)>(r4, r1, $r14);

        $r15 = r6.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getAllByFormat()>();

        specialinvoke r6.<net.sourceforge.plantuml.stats.XmlConverter: void addNode(org.w3c.dom.Element,org.w3c.dom.Document,net.sourceforge.plantuml.stats.api.StatsTable)>(r4, r1, $r16);

        return r1;
    }

    private void addNode(org.w3c.dom.Element, org.w3c.dom.Document, net.sourceforge.plantuml.stats.api.StatsTable)
    {
        org.w3c.dom.Document r0;
        net.sourceforge.plantuml.stats.XmlConverter r1;
        net.sourceforge.plantuml.stats.api.StatsTable r2;
        java.lang.String $r3, $r4, $r5, $r13, $r14, $r21, $r24;
        org.w3c.dom.Element r6, r9, r15, r22;
        java.util.List $r7;
        java.util.Iterator r8, r17;
        boolean $z0, $z1;
        java.lang.Object $r11, $r19, $r23;
        net.sourceforge.plantuml.stats.api.StatsLine r12;
        java.util.Collection $r16;
        net.sourceforge.plantuml.stats.api.StatsColumn r20;

        r1 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r9 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.w3c.dom.Document;

        r2 := @parameter2: net.sourceforge.plantuml.stats.api.StatsTable;

        $r3 = interfaceinvoke r2.<net.sourceforge.plantuml.stats.api.StatsTable: java.lang.String getName()>();

        $r4 = specialinvoke r1.<net.sourceforge.plantuml.stats.XmlConverter: java.lang.String toXmlName(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        r6 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r5);

        $r7 = interfaceinvoke r2.<net.sourceforge.plantuml.stats.api.StatsTable: java.util.List getLines()>();

        r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r11 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r12 = (net.sourceforge.plantuml.stats.api.StatsLine) $r11;

        $r13 = "line";

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String toUpperCase()>();

        r15 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r14);

        $r16 = interfaceinvoke r2.<net.sourceforge.plantuml.stats.api.StatsTable: java.util.Collection getColumnHeaders()>();

        r17 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r19 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r20 = (net.sourceforge.plantuml.stats.api.StatsColumn) $r19;

        $r21 = virtualinvoke r20.<net.sourceforge.plantuml.stats.api.StatsColumn: java.lang.String name()>();

        r22 = interfaceinvoke r0.<org.w3c.dom.Document: org.w3c.dom.Element createElement(java.lang.String)>($r21);

        $r23 = interfaceinvoke r12.<net.sourceforge.plantuml.stats.api.StatsLine: java.lang.Object getValue(net.sourceforge.plantuml.stats.api.StatsColumn)>(r20);

        $r24 = specialinvoke r1.<net.sourceforge.plantuml.stats.XmlConverter: java.lang.String toText(java.lang.Object)>($r23);

        interfaceinvoke r22.<org.w3c.dom.Element: void setTextContent(java.lang.String)>($r24);

        interfaceinvoke r15.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r22);

        goto label2;

     label3:
        interfaceinvoke r6.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r15);

        goto label1;

     label4:
        interfaceinvoke r9.<org.w3c.dom.Element: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r6);

        return;
    }

    private java.lang.String toXmlName(java.lang.String)
    {
        java.lang.String r0, $r1;
        net.sourceforge.plantuml.stats.XmlConverter r2;

        r2 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\W+", "_");

        return $r1;
    }

    private java.lang.String toText(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.String $r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.util.Date $r4;
        long $l0;
        net.sourceforge.plantuml.stats.XmlConverter r7;

        r7 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Date;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = (java.util.Date) r0;

        $l0 = virtualinvoke $r4.<java.util.Date: long getTime()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

     label1:
        if r0 != null goto label2;

        return "";

     label2:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    private javax.xml.transform.Transformer getTransformer() throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.Transformer r0;
        net.sourceforge.plantuml.stats.XmlConverter r1;

        r1 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r0 = staticinvoke <net.sourceforge.plantuml.xml.XmlFactories: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke r0.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("standalone", "yes");

        return r0;
    }

    public void createXml(java.io.OutputStream) throws javax.xml.transform.TransformerException, javax.xml.parsers.ParserConfigurationException
    {
        javax.xml.transform.dom.DOMSource $r0;
        net.sourceforge.plantuml.stats.XmlConverter r1;
        org.w3c.dom.Document $r2;
        javax.xml.transform.stream.StreamResult $r4;
        java.io.OutputStream r5;
        javax.xml.transform.Transformer $r7;

        r1 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r5 := @parameter0: java.io.OutputStream;

        $r0 = new javax.xml.transform.dom.DOMSource;

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.stats.XmlConverter: org.w3c.dom.Document getDocument()>();

        specialinvoke $r0.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r2);

        $r4 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r4.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r5);

        $r7 = specialinvoke r1.<net.sourceforge.plantuml.stats.XmlConverter: javax.xml.transform.Transformer getTransformer()>();

        virtualinvoke $r7.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r0, $r4);

        return;
    }

    public java.lang.String toHtml()
    {
        java.lang.StringBuilder $r0;
        net.sourceforge.plantuml.stats.XmlConverter r9;
        net.sourceforge.plantuml.stats.api.Stats $r10, $r13, $r16, $r19, $r22;
        net.sourceforge.plantuml.stats.api.StatsTable $r11, $r14, $r17, $r20, $r23;
        java.lang.String $r25;

        r9 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<html>");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<style type=\"text/css\">");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("body { font-family: arial, helvetica, sans-serif; font-size: 12px; font-weight: normal; color: black; background: white;}");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("th,td { font-size: 12px;}");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("table { border-collapse: collapse; border-style: none;}");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</style>");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>Statistics</h2>");

        $r10 = r9.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getLastSessions()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.XmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>Current session statistics</h2>");

        $r13 = r9.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getCurrentSessionByDiagramType()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.XmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r14);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p>");

        $r16 = r9.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getCurrentSessionByFormat()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.XmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r17);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>General statistics since ever</h2>");

        $r19 = r9.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getAllByDiagramType()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.XmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r20);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p>");

        $r22 = r9.<net.sourceforge.plantuml.stats.XmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getAllByFormat()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.XmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r23);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</html>");

        $r25 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r25;
    }

    private void printTableHtml(java.lang.StringBuilder, net.sourceforge.plantuml.stats.api.StatsTable)
    {
        net.sourceforge.plantuml.stats.api.StatsTable r0;
        java.util.Collection r1;
        java.lang.StringBuilder r2;
        net.sourceforge.plantuml.stats.XmlConverter r4;
        java.lang.String $r5, $r11;
        java.util.List r7;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r9;
        net.sourceforge.plantuml.stats.api.StatsLine r10;
        boolean $z1;

        r4 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r2 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: net.sourceforge.plantuml.stats.api.StatsTable;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.stats.api.StatsTable: java.util.Collection getColumnHeaders()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<table border=1 cellspacing=0 cellpadding=2>");

        $r5 = specialinvoke r4.<net.sourceforge.plantuml.stats.XmlConverter: java.lang.String getHtmlHeader(java.util.Collection)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r7 = interfaceinvoke r0.<net.sourceforge.plantuml.stats.api.StatsTable: java.util.List getLines()>();

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        $r9 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i3);

        r10 = (net.sourceforge.plantuml.stats.api.StatsLine) $r9;

        $i1 = interfaceinvoke r7.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i3 != $i2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r11 = specialinvoke r4.<net.sourceforge.plantuml.stats.XmlConverter: java.lang.String getCreoleLine(java.util.Collection,net.sourceforge.plantuml.stats.api.StatsLine,boolean)>(r1, r10, $z1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        i3 = i3 + 1;

        goto label1;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</table>");

        return;
    }

    private java.lang.String getCreoleLine(java.util.Collection, net.sourceforge.plantuml.stats.api.StatsLine, boolean)
    {
        java.lang.StringBuilder $r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection r3;
        java.util.Iterator r4;
        java.lang.String $r6, $r15, $r16, $r20, $r23;
        java.lang.Object $r7, r10;
        net.sourceforge.plantuml.stats.api.StatsColumn r8;
        net.sourceforge.plantuml.stats.api.StatsLine r9;
        int $i0;
        net.sourceforge.plantuml.stats.XmlConverter r18;
        java.text.DateFormat $r19;
        java.lang.Object[] $r22;

        r18 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r3 := @parameter0: java.util.Collection;

        r9 := @parameter1: net.sourceforge.plantuml.stats.api.StatsLine;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label01;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<tr bgcolor=#f0f0f0>");

        goto label02;

     label01:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<tr bgcolor=#fcfcfc>");

     label02:
        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label14;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.stats.api.StatsColumn) $r7;

        r10 = interfaceinvoke r9.<net.sourceforge.plantuml.stats.api.StatsLine: java.lang.Object getValue(net.sourceforge.plantuml.stats.api.StatsColumn)>(r8);

        $z1 = r10 instanceof java.lang.Long;

        if $z1 != 0 goto label04;

        $z4 = r10 instanceof net.sourceforge.plantuml.stats.HumanDuration;

        if $z4 == 0 goto label05;

     label04:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td align=right>");

        goto label06;

     label05:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td>");

     label06:
        if z0 == 0 goto label07;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<b>");

     label07:
        $z2 = r10 instanceof java.lang.Long;

        if $z2 == 0 goto label08;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r10;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%,d", $r22);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        goto label12;

     label08:
        $z3 = r10 instanceof java.util.Date;

        if $z3 == 0 goto label09;

        $r19 = r18.<net.sourceforge.plantuml.stats.XmlConverter: java.text.DateFormat formatter>;

        $r20 = virtualinvoke $r19.<java.text.DateFormat: java.lang.String format(java.lang.Object)>(r10);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        goto label12;

     label09:
        if r10 == null goto label10;

        $r15 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i0 != 0 goto label11;

     label10:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label12;

     label11:
        $r16 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label12:
        if z0 == 0 goto label13;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</b>");

     label13:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>");

        goto label03;

     label14:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</tr>");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String getHtmlHeader(java.util.Collection)
    {
        java.lang.StringBuilder $r0;
        java.util.Collection r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.String $r6, $r10, $r11;
        java.lang.Object $r7;
        net.sourceforge.plantuml.stats.api.StatsColumn r8;
        net.sourceforge.plantuml.stats.XmlConverter r14;

        r14 := @this: net.sourceforge.plantuml.stats.XmlConverter;

        r3 := @parameter0: java.util.Collection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<tr bgcolor=#e0e0e0>");

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.stats.api.StatsColumn) $r7;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td><b>");

        $r10 = virtualinvoke r8.<net.sourceforge.plantuml.stats.api.StatsColumn: java.lang.String getTitle()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\n", "<br>");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</b></td>");

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</tr>");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
