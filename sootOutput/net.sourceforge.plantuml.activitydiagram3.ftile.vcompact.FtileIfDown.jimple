public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop;
    private final net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle;

    public java.util.Collection getMyChildren()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r3, $r4, $r5, $r6, $r9, $r10, $r11;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile[] $r2, $r8;
        java.util.List $r7, $r12;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        if $r1 != null goto label1;

        $r8 = newarray (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)[3];

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        $r8[0] = $r9;

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r8[1] = $r10;

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        $r8[2] = $r11;

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r8);

        return $r12;

     label1:
        $r2 = newarray (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)[4];

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        $r2[0] = $r3;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r2[1] = $r4;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        $r2[2] = $r5;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        $r2[3] = $r6;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        return $r7;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        java.util.Set $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r5;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r0 = new java.util.HashSet;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        specialinvoke $r0.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r5);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        if $r1 != null goto label1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r3;
    }

    private void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.svek.ConditionEndStyle)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, r3, r4, r5;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.svek.ConditionEndStyle r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r6 := @parameter4: net.sourceforge.plantuml.svek.ConditionEndStyle;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop> = r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle> = r6;

        return;
    }

    public static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile create(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.svek.ConditionEndStyle, net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.graphic.Rainbow r0, $r14, r35, r36, $r41;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, r3, r4, r30, $r37, $r42;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.svek.ConditionEndStyle r7, $r22, $r23;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r13, $r40;
        net.sourceforge.plantuml.graphic.StringBounder $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r16;
        boolean z1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r34;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty $r43;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r44;
        java.util.ArrayList $r45;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn $r46;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElse $r47;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElseHline $r48;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline $r49;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElseNoDiamond $r50;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal $r51;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionOut $r52;

        r3 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r30 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r34 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r2 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r0 := @parameter4: net.sourceforge.plantuml.graphic.Rainbow;

        r7 := @parameter5: net.sourceforge.plantuml.svek.ConditionEndStyle;

        r5 := @parameter6: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r4 := @parameter7: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r35 := @parameter8: net.sourceforge.plantuml.graphic.Rainbow;

        r36 = virtualinvoke r35.<net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow withDefault(net.sourceforge.plantuml.graphic.Rainbow)>(r0);

        $r44 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        if r4 != null goto label1;

        $r37 = r30;

        goto label2;

     label1:
        $r43 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        $r37 = $r43;

        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r43.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: void <init>(net.sourceforge.plantuml.ISkinParam)>($r6);

     label2:
        specialinvoke $r44.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.svek.ConditionEndStyle)>(r2, r3, $r37, r4, r7);

        $r45 = new java.util.ArrayList;

        specialinvoke $r45.<java.util.ArrayList: void <init>()>();

        $r46 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r44);

        $r13 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r0);

        specialinvoke $r46.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionIn: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.Rainbow)>($r44, $r14);

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r46);

        $r15 = interfaceinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r16 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r15);

        z1 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if r4 != null goto label5;

        if z1 == 0 goto label4;

        $r22 = <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle DIAMOND>;

        if r7 != $r22 goto label3;

        $r47 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElse;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r44);

        specialinvoke $r47.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElse: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.Rainbow)>($r44, r36);

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r47);

        goto label6;

     label3:
        $r23 = <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle HLINE>;

        if r7 != $r23 goto label6;

        $r48 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElseHline;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r44);

        specialinvoke $r48.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElseHline: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.Rainbow)>($r44, r36);

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r48);

        $r49 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r44);

        specialinvoke $r49.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.Rainbow)>($r44, r36);

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r49);

        goto label6;

     label4:
        $r50 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElseNoDiamond;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r44);

        specialinvoke $r50.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionElseNoDiamond: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.Rainbow)>($r44, r36);

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r50);

        goto label6;

     label5:
        $r51 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r44);

        specialinvoke $r51.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHorizontal: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.Rainbow)>($r44, r36);

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r51);

     label6:
        $r52 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionOut;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r44);

        $r40 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        $r41 = virtualinvoke $r40.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r0);

        specialinvoke $r52.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionOut: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.Rainbow)>($r44, $r41);

        interfaceinvoke $r45.<java.util.List: boolean add(java.lang.Object)>($r52);

        $r42 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>($r44, $r45);

        return $r42;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r4, $r7, $r11, $r14;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r6, $r10, $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5, $r8, $r9, $r12, $r15;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForThen(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        $r6 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        $r9 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        if $r9 != null goto label1;

        $r13 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r14 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        $r15 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r15);

        goto label2;

     label1:
        $r10 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOptionalStop(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r11 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r12 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

     label2:
        return;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r4, $r6, $r10, $r13, $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, r5, r7, $r8, r9, $r11, $r14, $r16;
        double $d0, $d1, $d2, $d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, d11;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry appendBottom(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry)>(r5);

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry appendBottom(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry)>(r7);

        $d0 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d1 = $d0 + 36.0;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: double getSouthLabelHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d3 = staticinvoke <java.lang.Math: double max(double,double)>(12.0, $d2);

        d4 = $d1 + $d3;

        $d5 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d11 = $d5 + 12.0;

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        if $r10 == null goto label1;

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d8 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d9 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: double getAdditionalWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d10 = $d8 + $d9;

        d11 = d11 + $d10;

     label1:
        $r11 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d6 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d7 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        specialinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double,double)>(d11, d4, $d6, $d7, d4);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label2;

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        if $r13 == null goto label2;

        $r14 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry withoutPointOut()>();

        return $r14;

     label2:
        return $r11;
    }

    private double getAdditionalWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        double d0, d1, $d2, $d3, $d4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: double getEastLabelWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d1 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d2 = d1 / 2.0;

        $d3 = d0 + $d2;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d3);

        return $d4;
    }

    private double getSouthLabelHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r2, $r3, $r6;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond $r5;
        double $d0, $d1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        if $z0 == 0 goto label1;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r7 = (net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside) $r6;

        $d1 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: double getSouthLabelHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        return $d1;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $z1 = $r2 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        if $z1 == 0 goto label2;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r5 = (net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond) $r3;

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: double getSouthLabelHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        return $d0;

     label2:
        return 0.0;
    }

    private double getEastLabelWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r2, $r3, $r6;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond $r5;
        double $d0, $d1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        if $z0 == 0 goto label1;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r7 = (net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside) $r6;

        $d1 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: double getEastLabelWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        return $d1;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $z1 = $r2 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        if $z1 == 0 goto label2;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        $r5 = (net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond) $r3;

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: double getEastLabelWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        return $d0;

     label2:
        return 0.0;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r1;
        java.lang.UnsupportedOperationException $r6;
        net.sourceforge.plantuml.graphic.StringBounder r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8, $r9, $r10, $r11;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r7 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        if r0 != $r2 goto label1;

        $r11 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForThen(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        return $r11;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        if r0 != $r3 goto label2;

        $r10 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        return $r10;

     label2:
        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        if r0 != $r4 goto label3;

        $r9 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOptionalStop(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        return $r9;

     label3:
        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        if r0 != $r5 goto label4;

        $r8 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        return $r8;

     label4:
        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForThen(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r4, $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, r5, r6, r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, $d10, $d11, d12;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d1 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d3 = $d1 - $d2;

        $d4 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d5 = $d3 - $d4;

        $d6 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d7 = $d5 - $d6;

        $d8 = $d7 / 2.0;

        d9 = $d0 + $d8;

        $d10 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d11 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        d12 = $d10 - $d11;

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d12, d9);

        return $r9;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        double $d1, $d2, d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        d3 = $d1 - $d2;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, 0.0);

        return $r5;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOptionalStop(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4, r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r5;
        double d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, d13;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d2 = $d1 - d0;

        $d3 = virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d4 = $d2 - $d3;

        $d5 = $d4 / 2.0;

        d6 = d0 + $d5;

        $d7 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d8 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d9 = $d7 - $d8;

        $d10 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d11 = $d9 + $d10;

        $d12 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: double getAdditionalWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d13 = $d11 + $d12;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d13, d6);

        return $r7;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        double $d0, $d1, d2, $d3, $d4, d5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d4 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        d5 = $d3 - $d4;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d5, d2);

        return $r5;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        return $r1;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile optionalStop>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOptionalStop(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile thenBlock>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForThen(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        return $r1;
    }

    static net.sourceforge.plantuml.ugraphic.UTranslate access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    static net.sourceforge.plantuml.svek.ConditionEndStyle access$800(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r0;
        net.sourceforge.plantuml.svek.ConditionEndStyle $r1;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.svek.ConditionEndStyle conditionEndStyle>;

        return $r1;
    }
}
