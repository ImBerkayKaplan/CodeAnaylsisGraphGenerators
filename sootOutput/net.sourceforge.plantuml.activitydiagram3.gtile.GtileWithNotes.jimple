public class net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes extends net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile
{
    private final net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile;
    private net.sourceforge.plantuml.graphic.TextBlock left;
    private net.sourceforge.plantuml.graphic.TextBlock right;
    private final double suppSpace;

    public net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    protected net.sourceforge.plantuml.ugraphic.UTranslate getCoordImpl(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r4, $r6, $r7, $r9, $r11, $r12;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r3, $r8;
        net.sourceforge.plantuml.graphic.StringBounder $r5, $r10;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("NORTH_HOOK");

        if $z0 == 0 goto label1;

        $r8 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.ugraphic.UTranslate getCoord(java.lang.String)>(r0);

        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r11 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(net.sourceforge.plantuml.graphic.StringBounder)>($r10);

        $r12 = virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r11);

        return $r12;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("SOUTH_HOOK");

        if $z1 == 0 goto label2;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.ugraphic.UTranslate getCoord(java.lang.String)>(r0);

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r6 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(net.sourceforge.plantuml.graphic.StringBounder)>($r5);

        $r7 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r6);

        return $r7;

     label2:
        $r2 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: net.sourceforge.plantuml.ugraphic.UTranslate getCoordImpl(java.lang.String)>(r0);

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlane(java.lang.String)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r0;
        java.lang.String r1;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlane(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public void <init>(net.sourceforge.plantuml.activitydiagram3.gtile.Gtile, java.util.Collection, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.ISkinParam $r3, r14, r50;
        net.sourceforge.plantuml.skin.rose.Rose $r4;
        java.util.Collection r6;
        java.util.Iterator r7;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.graphic.TextBlock $r8, $r9, $r10, $r11, r24, $r25, $r27, $r28, $r29, $r31, $r32;
        java.lang.Object $r12;
        net.sourceforge.plantuml.activitydiagram3.PositionedNote r13;
        net.sourceforge.plantuml.graphic.color.Colors $r15, $r36, $r49;
        net.sourceforge.plantuml.ugraphic.UStroke $r16, r51;
        net.sourceforge.plantuml.ColorParam $r17, $r18;
        net.sourceforge.plantuml.graphic.FontConfiguration $r19, r55;
        net.sourceforge.plantuml.FontParam $r20;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r26, $r30, $r57, $r58;
        net.sourceforge.plantuml.style.StyleSignature $r33;
        net.sourceforge.plantuml.style.StyleBuilder $r34;
        net.sourceforge.plantuml.style.Style $r35, r52;
        net.sourceforge.plantuml.style.PName $r37, $r41, $r47;
        net.sourceforge.plantuml.style.Value $r38, $r42, $r48;
        net.sourceforge.plantuml.api.ThemeStyle $r39, $r43, $r45;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r40, $r44, $r46;
        net.sourceforge.plantuml.ugraphic.color.HColor r53, r54;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.LineBreakStrategy r56;
        net.sourceforge.plantuml.creole.CreoleMode $r59;
        net.sourceforge.plantuml.creole.SheetBuilder $r60;
        net.sourceforge.plantuml.cucadiagram.Display $r61;
        net.sourceforge.plantuml.creole.Sheet r62;
        net.sourceforge.plantuml.creole.SheetBlock1 $r63;
        net.sourceforge.plantuml.creole.SheetBlock2 $r64;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes$1 $r65;
        net.sourceforge.plantuml.svek.image.Opale $r66;
        net.sourceforge.plantuml.sequencediagram.NotePosition $r67, $r68;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile;

        r6 := @parameter1: java.util.Collection;

        r14 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.AbstractGtile: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: double suppSpace> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: double suppSpace> = 20.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile> = r1;

        $r4 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r4.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        r7 = interfaceinvoke r6.<java.util.Collection: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r12 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r13 = (net.sourceforge.plantuml.activitydiagram3.PositionedNote) $r12;

        r50 = r14;

        $r15 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        if $r15 == null goto label02;

        $r49 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        r50 = virtualinvoke $r49.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ISkinParam mute(net.sourceforge.plantuml.ISkinParam)>(r14);

     label02:
        $r16 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r51 = $r16;

        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label03;

        $r33 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition()>();

        $r34 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r35 = virtualinvoke $r33.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r34);

        $r36 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        r52 = virtualinvoke $r35.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Style eventuallyOverride(net.sourceforge.plantuml.graphic.color.Colors)>($r36);

        $r37 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r38 = virtualinvoke r52.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r37);

        $r39 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r40 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r53 = interfaceinvoke $r38.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r39, $r40);

        $r41 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r42 = virtualinvoke r52.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r41);

        $r43 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r44 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r54 = interfaceinvoke $r42.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r43, $r44);

        $r45 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r46 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r55 = virtualinvoke r52.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r45, $r46);

        $r47 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r48 = virtualinvoke r52.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r47);

        d0 = interfaceinvoke $r48.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r56 = virtualinvoke r52.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        r51 = virtualinvoke r52.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label06;

     label03:
        $r17 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBackground>;

        r53 = virtualinvoke $r4.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r50, $r17);

        $r18 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        r54 = virtualinvoke $r4.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r50, $r18);

        $r19 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r20 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        specialinvoke $r19.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r14, $r20, null);

        r55 = $r19;

        $z2 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z2 == 0 goto label04;

        $d1 = 4.0;

        goto label05;

     label04:
        $d1 = 0.0;

     label05:
        d0 = $d1;

        r56 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

     label06:
        $r57 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r58 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r57);

        $r59 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $r60 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r55, $r58, r14, $r59);

        $r61 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        r62 = interfaceinvoke $r60.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>($r61);

        $r63 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $d2 = interfaceinvoke r14.<net.sourceforge.plantuml.ISkinParam: double getPadding()>();

        specialinvoke $r63.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>(r62, r56, $d2);

        $r64 = new net.sourceforge.plantuml.creole.SheetBlock2;

        $r65 = new net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes$1;

        specialinvoke $r65.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes$1: void <init>(net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes,net.sourceforge.plantuml.creole.SheetBlock1)>(r0, $r63);

        specialinvoke $r64.<net.sourceforge.plantuml.creole.SheetBlock2: void <init>(net.sourceforge.plantuml.creole.SheetBlock1,net.sourceforge.plantuml.creole.Stencil,net.sourceforge.plantuml.ugraphic.UStroke)>($r63, $r65, r51);

        $r66 = new net.sourceforge.plantuml.svek.image.Opale;

        specialinvoke $r66.<net.sourceforge.plantuml.svek.image.Opale: void <init>(double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.TextBlock,boolean,net.sourceforge.plantuml.ugraphic.UStroke)>(d0, r54, r53, $r64, 0, r51);

        r24 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double)>($r66, 10.0, 10.0);

        $r67 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: net.sourceforge.plantuml.sequencediagram.NotePosition getNotePosition()>();

        $r68 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition LEFT>;

        if $r67 != $r68 goto label08;

        $r29 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left>;

        if $r29 != null goto label07;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left> = r24;

        goto label10;

     label07:
        $r31 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left>;

        $r30 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r32 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r31, r24, $r30);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left> = $r32;

        goto label10;

     label08:
        $r25 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right>;

        if $r25 != null goto label09;

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right> = r24;

        goto label10;

     label09:
        $r27 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right>;

        $r26 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r28 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r27, r24, $r26);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right> = $r28;

     label10:
        goto label01;

     label11:
        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left>;

        if $r8 != null goto label12;

        $r11 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left> = $r11;

     label12:
        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right>;

        if $r9 != null goto label13;

        $r10 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right> = $r10;

     label13:
        return;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, r4, $r6;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r3;
        net.sourceforge.plantuml.graphic.TextBlock $r5;
        double d0, $d1, $d2, $d3, d4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke $r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d3 = $d1 - $d2;

        d4 = $d3 / 2.0;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d4);

        return $r7;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForLeft(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, r4;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        double $d1, $d2, $d3, d4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d3 = $d1 - $d2;

        d4 = $d3 / 2.0;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(0.0, d4);

        return $r5;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForRight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, r4;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        double $d0, $d1, d2, $d3, $d4, $d5, d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = $d3 - $d4;

        d6 = $d5 / 2.0;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, d6);

        return $r5;
    }

    protected void drawUInternal(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r5, $r8, $r11;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3, $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r7, $r10;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r9;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left>;

        $r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForLeft(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r5);

        $r6 = r2.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right>;

        $r7 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateForRight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r8);

        $r9 = r2.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        $r10 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r11 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r11);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r5, r7;
        net.sourceforge.plantuml.graphic.TextBlock $r4, $r6;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, $d7, $d8;
        net.sourceforge.plantuml.Dimension2DDouble $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile tile>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock left>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileWithNotes: net.sourceforge.plantuml.graphic.TextBlock right>;

        r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d3 = staticinvoke <net.sourceforge.plantuml.utils.MathUtils: double max(double,double,double)>($d0, $d1, $d2);

        $r8 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = $d4 + $d5;

        $d7 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d8 = $d6 + $d7;

        specialinvoke $r8.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d8, d3);

        return $r8;
    }
}
