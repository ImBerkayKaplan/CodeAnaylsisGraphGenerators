public class net.sourceforge.plantuml.LineBreakStrategy extends java.lang.Object
{
    public static final net.sourceforge.plantuml.LineBreakStrategy NONE;
    private final java.lang.String value;

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.LineBreakStrategy r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.LineBreakStrategy;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.LineBreakStrategy: java.lang.String value> = r1;

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.LineBreakStrategy r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.LineBreakStrategy;

        $r1 = r0.<net.sourceforge.plantuml.LineBreakStrategy: java.lang.String value>;

        return $r1;
    }

    public boolean isAuto()
    {
        net.sourceforge.plantuml.LineBreakStrategy r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.LineBreakStrategy;

        $r2 = "auto";

        $r1 = r0.<net.sourceforge.plantuml.LineBreakStrategy: java.lang.String value>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        return $z0;
    }

    public double getMaxWidth()
    {
        net.sourceforge.plantuml.LineBreakStrategy r0;
        java.lang.String $r1, $r2, $r3;
        boolean $z0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.LineBreakStrategy;

        $r1 = r0.<net.sourceforge.plantuml.LineBreakStrategy: java.lang.String value>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.LineBreakStrategy: java.lang.String value>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean matches(java.lang.String)>("-?\\d+");

        if $z0 == 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.LineBreakStrategy: java.lang.String value>;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        return $d0;

     label1:
        return 0.0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.LineBreakStrategy $r0;

        $r0 = new net.sourceforge.plantuml.LineBreakStrategy;

        specialinvoke $r0.<net.sourceforge.plantuml.LineBreakStrategy: void <init>(java.lang.String)>(null);

        <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE> = $r0;

        return;
    }
}
