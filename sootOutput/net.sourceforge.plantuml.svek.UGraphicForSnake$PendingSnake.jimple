class net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake extends java.lang.Object
{
    private net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake;
    private final net.sourceforge.plantuml.ugraphic.UGraphic ug;
    private final double dx;
    private final double dy;

    private void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Snake, net.sourceforge.plantuml.ugraphic.UGraphic, double, double)
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Snake;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake> = r1;

        r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.ugraphic.UGraphic ug> = r2;

        r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dx> = d0;

        r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dy> = d1;

        return;
    }

    void drawInternal()
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r2;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        $r2 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake>;

        $r1 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)>($r1);

        return;
    }

    void removeEndDecorationIfTouches(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake r3, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r5, $r6, $r7, $r8;

        r4 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        r0 := @parameter0: java.util.List;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake) $r2;

        $r5 = specialinvoke r4.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake moved()>();

        $r6 = specialinvoke r3.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake moved()>();

        $z1 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: boolean touches(net.sourceforge.plantuml.activitydiagram3.ftile.Snake)>($r6);

        if $z1 == 0 goto label2;

        $r7 = r4.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withoutEndDecoration()>();

        r4.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake> = $r8;

        return;

     label2:
        goto label1;

     label3:
        return;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Snake moved()
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake r0;
        double $d0, $d1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        $r1 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake>;

        $d1 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dx>;

        $d0 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dy>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake move(double,double)>($d1, $d0);

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r10;
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake r2;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r7, $r8;
        java.lang.String $r9, $r11;

        r2 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dx=");

        $d0 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dx>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dy=");

        $d1 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dy>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake>;

        $d3 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dx>;

        $d2 = r2.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dy>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake move(double,double)>($d3, $d2);

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: java.lang.String toString()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake merge(net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake)
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake r0, r3, $r9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r1, r2, $r4, r5, r8, $r10;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, $r11;
        net.sourceforge.plantuml.graphic.StringBounder $r7;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        r3 := @parameter0: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        $r1 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake>;

        $d1 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dx>;

        $d0 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dy>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake move(double,double)>($d1, $d0);

        $r4 = r3.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake snake>;

        $d3 = r3.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dx>;

        $d2 = r3.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dy>;

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake move(double,double)>($d3, $d2);

        $r6 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r8 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake merge(net.sourceforge.plantuml.activitydiagram3.ftile.Snake,net.sourceforge.plantuml.graphic.StringBounder)>(r5, $r7);

        if r8 != null goto label1;

        return null;

     label1:
        $r9 = new net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        $d4 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dx>;

        $d7 = neg $d4;

        $d5 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dy>;

        $d6 = neg $d5;

        $r10 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake move(double,double)>($d7, $d6);

        $r11 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        $d9 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dx>;

        $d8 = r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: double dy>;

        specialinvoke $r9.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Snake,net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>($r10, $r11, $d9, $d8);

        return $r9;
    }

    void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Snake, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, net.sourceforge.plantuml.svek.UGraphicForSnake$1)
    {
        net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double d0, d1;
        net.sourceforge.plantuml.svek.UGraphicForSnake$1 r3;

        r0 := @this: net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Snake;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r3 := @parameter4: net.sourceforge.plantuml.svek.UGraphicForSnake$1;

        specialinvoke r0.<net.sourceforge.plantuml.svek.UGraphicForSnake$PendingSnake: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Snake,net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>(r1, r2, d0, d1);

        return;
    }
}
