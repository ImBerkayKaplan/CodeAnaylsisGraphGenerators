public class net.sourceforge.plantuml.stats.HistoricalData extends java.lang.Object
{
    private final java.util.prefs.Preferences prefs;
    private net.sourceforge.plantuml.stats.ParsedGenerated current;
    private final java.util.List historical;

    void <init>(java.util.prefs.Preferences)
    {
        net.sourceforge.plantuml.stats.HistoricalData r0;
        java.util.ArrayList $r1;
        java.util.prefs.Preferences r2;
        java.util.List $r3, $r4, $r5;
        java.util.Comparator $r6;
        java.util.prefs.BackingStoreException $r7;

        r0 := @this: net.sourceforge.plantuml.stats.HistoricalData;

        r2 := @parameter0: java.util.prefs.Preferences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List historical> = $r1;

        r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.prefs.Preferences prefs> = r2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List historical>;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List reload()>();

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r4);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.util.prefs.BackingStoreException: void printStackTrace()>();

     label4:
        $r5 = r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List historical>;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.Comparator getIdComparator()>();

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r5, $r6);

        return;

        catch java.util.prefs.BackingStoreException from label1 to label2 with label3;
    }

    public void reset()
    {
        net.sourceforge.plantuml.stats.HistoricalData r0;
        java.util.List $r1, $r2, $r19;
        int $i0, $i1, $i2, $i4;
        java.lang.StringBuilder $r3, $r5, $r6, $r12, $r14, $r15, $r17;
        java.util.prefs.Preferences $r4;
        java.lang.String $r7, $r13, $r16, $r18, r22, $r23;
        net.sourceforge.plantuml.stats.ParsedGenerated $r8, $r9, $r10, r24;
        net.sourceforge.plantuml.api.NumberAnalyzedDated $r11;
        long $l3, l6;
        java.lang.Object $r20;
        net.sourceforge.plantuml.api.NumberAnalyzed $r21;
        char c5;

        r0 := @this: net.sourceforge.plantuml.stats.HistoricalData;

        $r1 = r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List historical>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = 65 + $i0;

        c5 = (char) $i1;

        $r2 = r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List historical>;

        $i2 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i2 <= 7 goto label1;

        $r19 = r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List historical>;

        $r20 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>(0);

        r24 = (net.sourceforge.plantuml.stats.ParsedGenerated) $r20;

        $r21 = virtualinvoke r24.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzed parsed()>();

        r22 = virtualinvoke $r21.<net.sourceforge.plantuml.api.NumberAnalyzed: java.lang.String getName()>();

        $r23 = "histo.";

        $i4 = virtualinvoke $r23.<java.lang.String: int length()>();

        c5 = virtualinvoke r22.<java.lang.String: char charAt(int)>($i4);

     label1:
        $r4 = r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.prefs.Preferences prefs>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("histo.");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.stats.ParsedGenerated loadDated(java.util.prefs.Preferences,java.lang.String)>($r4, $r7);

        r0.<net.sourceforge.plantuml.stats.HistoricalData: net.sourceforge.plantuml.stats.ParsedGenerated current> = $r8;

        $r9 = r0.<net.sourceforge.plantuml.stats.HistoricalData: net.sourceforge.plantuml.stats.ParsedGenerated current>;

        virtualinvoke $r9.<net.sourceforge.plantuml.stats.ParsedGenerated: void reset()>();

        l6 = specialinvoke r0.<net.sourceforge.plantuml.stats.HistoricalData: long getMaxId()>();

        $r10 = r0.<net.sourceforge.plantuml.stats.HistoricalData: net.sourceforge.plantuml.stats.ParsedGenerated current>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.api.NumberAnalyzedDated parsedDated()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $l3 = l6 + 1L;

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long,int)>($l3, 36);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r16 = staticinvoke <net.sourceforge.plantuml.version.Version: java.lang.String versionString()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<net.sourceforge.plantuml.api.NumberAnalyzedDated: void setComment(java.lang.String)>($r18);

        return;
    }

    private long getMaxId()
    {
        net.sourceforge.plantuml.stats.HistoricalData r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.stats.ParsedGenerated r4;
        long $l0, l1;

        r0 := @this: net.sourceforge.plantuml.stats.HistoricalData;

        l1 = 0L;

        $r1 = r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List historical>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.stats.ParsedGenerated) $r3;

        $l0 = virtualinvoke r4.<net.sourceforge.plantuml.stats.ParsedGenerated: long getId()>();

        l1 = staticinvoke <java.lang.Math: long max(long,long)>(l1, $l0);

        goto label1;

     label2:
        return l1;
    }

    private java.util.Comparator getIdComparator()
    {
        net.sourceforge.plantuml.stats.HistoricalData$1 $r0;
        net.sourceforge.plantuml.stats.HistoricalData r1;

        r1 := @this: net.sourceforge.plantuml.stats.HistoricalData;

        $r0 = new net.sourceforge.plantuml.stats.HistoricalData$1;

        specialinvoke $r0.<net.sourceforge.plantuml.stats.HistoricalData$1: void <init>(net.sourceforge.plantuml.stats.HistoricalData)>(r1);

        return $r0;
    }

    private java.util.List reload() throws java.util.prefs.BackingStoreException
    {
        java.util.ArrayList $r0;
        java.lang.String $r2, r6, r7, $r12;
        int i0, i1, $i2, i3;
        net.sourceforge.plantuml.stats.HistoricalData r3;
        java.util.prefs.Preferences $r4, $r9;
        java.lang.String[] r5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r10, $r11;
        net.sourceforge.plantuml.stats.ParsedGenerated r13;

        r3 := @this: net.sourceforge.plantuml.stats.HistoricalData;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = "histo.";

        i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r4 = r3.<net.sourceforge.plantuml.stats.HistoricalData: java.util.prefs.Preferences prefs>;

        r5 = virtualinvoke $r4.<java.util.prefs.Preferences: java.lang.String[] keys()>();

        i1 = lengthof r5;

        i3 = 0;

     label1:
        if i3 >= i1 goto label3;

        r6 = r5[i3];

        $z0 = virtualinvoke r6.<java.lang.String: boolean startsWith(java.lang.String)>("histo.");

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r6.<java.lang.String: boolean endsWith(java.lang.String)>(".p.saved");

        if $z1 == 0 goto label2;

        $i2 = i0 + 1;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        $r9 = r3.<net.sourceforge.plantuml.stats.HistoricalData: java.util.prefs.Preferences prefs>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("histo.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r13 = staticinvoke <net.sourceforge.plantuml.stats.ParsedGenerated: net.sourceforge.plantuml.stats.ParsedGenerated loadDated(java.util.prefs.Preferences,java.lang.String)>($r9, $r12);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r13);

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return $r0;
    }

    public net.sourceforge.plantuml.stats.ParsedGenerated current()
    {
        net.sourceforge.plantuml.stats.HistoricalData r0;
        net.sourceforge.plantuml.stats.ParsedGenerated $r1;

        r0 := @this: net.sourceforge.plantuml.stats.HistoricalData;

        $r1 = r0.<net.sourceforge.plantuml.stats.HistoricalData: net.sourceforge.plantuml.stats.ParsedGenerated current>;

        return $r1;
    }

    public java.util.List getHistorical()
    {
        net.sourceforge.plantuml.stats.HistoricalData r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.stats.HistoricalData;

        $r1 = r0.<net.sourceforge.plantuml.stats.HistoricalData: java.util.List historical>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }
}
