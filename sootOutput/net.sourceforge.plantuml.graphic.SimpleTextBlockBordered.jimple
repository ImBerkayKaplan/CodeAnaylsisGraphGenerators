class net.sourceforge.plantuml.graphic.SimpleTextBlockBordered extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final net.sourceforge.plantuml.graphic.TextBlock textBlock;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;

    public void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.SimpleTextBlockBordered r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;

        r0 := @this: net.sourceforge.plantuml.graphic.SimpleTextBlockBordered;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.SimpleTextBlockBordered: net.sourceforge.plantuml.graphic.TextBlock textBlock> = r1;

        r0.<net.sourceforge.plantuml.graphic.SimpleTextBlockBordered: net.sourceforge.plantuml.ugraphic.color.HColor color> = r2;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.SimpleTextBlockBordered r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r4;

        r0 := @this: net.sourceforge.plantuml.graphic.SimpleTextBlockBordered;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.graphic.SimpleTextBlockBordered: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r3, 1.0, 1.0);

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.SimpleTextBlockBordered r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r7, $r9;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r6;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8;
        net.sourceforge.plantuml.ugraphic.URectangle $r10;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.graphic.SimpleTextBlockBordered;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.graphic.SimpleTextBlockBordered: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $r6 = r0.<net.sourceforge.plantuml.graphic.SimpleTextBlockBordered: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(1.0, 1.0);

        $r7 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

        $r8 = r0.<net.sourceforge.plantuml.graphic.SimpleTextBlockBordered: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $r9 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r10 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        return;
    }
}
