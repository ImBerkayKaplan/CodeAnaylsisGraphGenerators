public class net.sourceforge.plantuml.jasic.Jasic$InputStatement extends java.lang.Object implements net.sourceforge.plantuml.jasic.Jasic$Statement
{
    private final java.lang.String name;
    final net.sourceforge.plantuml.jasic.Jasic this$0;

    public void <init>(net.sourceforge.plantuml.jasic.Jasic, java.lang.String)
    {
        net.sourceforge.plantuml.jasic.Jasic$InputStatement r0;
        net.sourceforge.plantuml.jasic.Jasic r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.jasic.Jasic$InputStatement;

        r1 := @parameter0: net.sourceforge.plantuml.jasic.Jasic;

        r2 := @parameter1: java.lang.String;

        r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: net.sourceforge.plantuml.jasic.Jasic this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: java.lang.String name> = r2;

        return;
    }

    public void execute()
    {
        net.sourceforge.plantuml.jasic.Jasic$InputStatement r0;
        net.sourceforge.plantuml.jasic.Jasic $r1, $r3, $r6, $r11, $r14;
        java.io.BufferedReader $r2;
        java.util.Map $r4, $r12;
        net.sourceforge.plantuml.jasic.Jasic$NumberValue $r5;
        java.lang.String $r7, $r15, r17;
        java.io.IOException $r9;
        java.lang.NumberFormatException $r10;
        net.sourceforge.plantuml.jasic.Jasic$StringValue $r13;
        double d0;

        r0 := @this: net.sourceforge.plantuml.jasic.Jasic$InputStatement;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: net.sourceforge.plantuml.jasic.Jasic this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.jasic.Jasic: java.io.BufferedReader access$000(net.sourceforge.plantuml.jasic.Jasic)>($r1);

        r17 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

     label2:
        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r17);

        $r3 = r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: net.sourceforge.plantuml.jasic.Jasic this$0>;

        $r4 = staticinvoke <net.sourceforge.plantuml.jasic.Jasic: java.util.Map access$100(net.sourceforge.plantuml.jasic.Jasic)>($r3);

        $r7 = r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: java.lang.String name>;

        $r5 = new net.sourceforge.plantuml.jasic.Jasic$NumberValue;

        $r6 = r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: net.sourceforge.plantuml.jasic.Jasic this$0>;

        specialinvoke $r5.<net.sourceforge.plantuml.jasic.Jasic$NumberValue: void <init>(net.sourceforge.plantuml.jasic.Jasic,double)>($r6, d0);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r5);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: net.sourceforge.plantuml.jasic.Jasic this$0>;

        $r12 = staticinvoke <net.sourceforge.plantuml.jasic.Jasic: java.util.Map access$100(net.sourceforge.plantuml.jasic.Jasic)>($r11);

        $r15 = r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: java.lang.String name>;

        $r13 = new net.sourceforge.plantuml.jasic.Jasic$StringValue;

        $r14 = r0.<net.sourceforge.plantuml.jasic.Jasic$InputStatement: net.sourceforge.plantuml.jasic.Jasic this$0>;

        specialinvoke $r13.<net.sourceforge.plantuml.jasic.Jasic$StringValue: void <init>(net.sourceforge.plantuml.jasic.Jasic,java.lang.String)>($r14, r17);

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r13);

     label5:
        goto label7;

     label6:
        $r9 := @caughtexception;

     label7:
        return;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
        catch java.io.IOException from label1 to label5 with label6;
    }
}
