public class net.sourceforge.plantuml.skin.rose.ComponentRoseQueue extends net.sourceforge.plantuml.skin.AbstractTextualComponent
{
    private final net.sourceforge.plantuml.graphic.TextBlock stickman;
    private final boolean head;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.cucadiagram.Display, boolean, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseQueue r0;
        net.sourceforge.plantuml.style.Style r1, r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        net.sourceforge.plantuml.ISkinSimple r5;
        net.sourceforge.plantuml.ugraphic.UFont r6;
        net.sourceforge.plantuml.ugraphic.color.HColor r7;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r8, $r14;
        net.sourceforge.plantuml.LineBreakStrategy $r9;
        boolean $z0, z1;
        net.sourceforge.plantuml.graphic.USymbol $r10;
        net.sourceforge.plantuml.graphic.TextBlock $r11, $r12, $r13, $r15;
        net.sourceforge.plantuml.api.ThemeStyle $r16;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r17;
        net.sourceforge.plantuml.graphic.SymbolContext r18;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseQueue;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r2 := @parameter1: net.sourceforge.plantuml.style.Style;

        r18 := @parameter2: net.sourceforge.plantuml.graphic.SymbolContext;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter4: net.sourceforge.plantuml.cucadiagram.Display;

        z1 := @parameter5: boolean;

        r5 := @parameter6: net.sourceforge.plantuml.ISkinSimple;

        r6 := @parameter7: net.sourceforge.plantuml.ugraphic.UFont;

        r7 := @parameter8: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r9 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $r8 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r2, $r9, r3, r4, $r8, 3, 3, 0, r5, 0, r6, r7);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r16 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r18 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r16, $r17);

     label1:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: boolean head> = z1;

        $r10 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol QUEUE>;

        $r11 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r13 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r14 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r15 = virtualinvoke $r10.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r11, $r12, $r13, r18, $r14);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: net.sourceforge.plantuml.graphic.TextBlock stickman> = $r15;

        return;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.skin.rose.ComponentRoseQueue r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2, $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1, $d2, d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.skin.Area r6;
        net.sourceforge.plantuml.ugraphic.UGraphic r7, r8;

        r1 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseQueue;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r6 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r0 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r2 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: net.sourceforge.plantuml.graphic.TextBlock stickman>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 - $d1;

        d3 = $d2 / 2.0;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d3);

        r8 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r5 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: net.sourceforge.plantuml.graphic.TextBlock stickman>;

        interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r8);

        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseQueue r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseQueue;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: net.sourceforge.plantuml.graphic.TextBlock stickman>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        return $d0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseQueue r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseQueue;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: net.sourceforge.plantuml.graphic.TextBlock stickman>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        return $d0;
    }
}
