public class net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3 extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3 r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3;

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r9, $r11, $r22, $r29, $r40, $r42, $r47;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r26, $r27, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r43, $r44, $r45, $r48, $r49, $r50, $r51;
        net.sourceforge.plantuml.command.regex.RegexOr $r8, $r41, $r46;
        net.sourceforge.plantuml.command.regex.RegexConcat $r10, $r21, $r28, $r39, $r52;
        net.sourceforge.plantuml.command.regex.RegexOptional $r35, $r38;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram3/command/CommandRepeatWhile3;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[10];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("repeat");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("while");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r9 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r10 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r11 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[9];

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TEST3", "\\((.*?)\\)");

        $r11[0] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r11[1] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("(is|equals?)");

        $r11[2] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r11[3] = $r15;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("WHEN3", "\\((.+?)\\)");

        $r11[4] = $r16;

        $r17 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r11[5] = $r17;

        $r18 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("(not)");

        $r11[6] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r11[7] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("OUT3", "\\((.+?)\\)");

        $r11[8] = $r20;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r11);

        $r9[0] = $r10;

        $r21 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r22 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r23 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TEST4", "\\((.*?)\\)");

        $r22[0] = $r23;

        $r24 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r22[1] = $r24;

        $r25 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r25.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("(not)");

        $r22[2] = $r25;

        $r26 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r22[3] = $r26;

        $r27 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r27.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("OUT4", "\\((.+?)\\)");

        $r22[4] = $r27;

        specialinvoke $r21.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r22);

        $r9[1] = $r21;

        $r28 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r29 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r30 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r30.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TEST2", "\\((.*?)\\)");

        $r29[0] = $r30;

        $r31 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r29[1] = $r31;

        $r32 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r32.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("(is|equals?)");

        $r29[2] = $r32;

        $r33 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r29[3] = $r33;

        $r34 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r34.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("WHEN2", "\\((.+?)\\)");

        $r29[4] = $r34;

        specialinvoke $r28.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r29);

        $r9[2] = $r28;

        $r35 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r36 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r36.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TEST1", "\\((.*)\\)");

        specialinvoke $r35.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r36);

        $r9[3] = $r35;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r9);

        $r2[5] = $r8;

        $r37 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r37;

        $r38 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r39 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r40 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r41 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r42 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r43 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r43.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("->");

        $r42[0] = $r43;

        $r44 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r44.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("COLOR", "-\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*(?:(?:;(?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)*)*)\\]->");

        $r42[1] = $r44;

        specialinvoke $r41.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r42);

        $r40[0] = $r41;

        $r45 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r40[1] = $r45;

        $r46 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r47 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r48 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r48.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL", "(.*)");

        $r47[0] = $r48;

        $r49 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r49.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("");

        $r47[1] = $r49;

        specialinvoke $r46.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r47);

        $r40[2] = $r46;

        specialinvoke $r39.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r40);

        specialinvoke $r38.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r39);

        $r2[7] = $r38;

        $r50 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r50.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(";?");

        $r2[8] = $r50;

        $r51 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[9] = $r51;

        $r52 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r52;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String $r1, $r3, $r5, r7, $r11;
        net.sourceforge.plantuml.cucadiagram.Display r2, r4, r6, r12;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r8;
        net.sourceforge.plantuml.ISkinParam $r9, $r10;
        int $i0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r13;
        net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3 r14;
        net.sourceforge.plantuml.LineLocation r15;
        net.sourceforge.plantuml.graphic.Rainbow r16;

        r14 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3;

        r8 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r15 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("TEST", 0);

        r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("WHEN", 0);

        r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("OUT", 0);

        r6 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r5);

        r7 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COLOR", 0);

        if r7 != null goto label1;

        r16 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow none()>();

        goto label2;

     label1:
        $r9 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $i0 = interfaceinvoke $r10.<net.sourceforge.plantuml.ISkinParam: int colorArrowSeparationSpace()>();

        r16 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.ISkinParam,java.lang.String,int)>($r9, r7, $i0);

     label2:
        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL", 0);

        r12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r11);

        $r13 = virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.command.CommandExecutionResult repeatWhile(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.Rainbow)>(r2, r4, r6, r12, r16);

        return $r13;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3 r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.command.CommandRepeatWhile3: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
