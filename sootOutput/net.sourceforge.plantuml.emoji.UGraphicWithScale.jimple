public class net.sourceforge.plantuml.emoji.UGraphicWithScale extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.UGraphic ug;
    private final java.awt.geom.AffineTransform at;

    public void <init>(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.emoji.UGraphicWithScale r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0;
        java.awt.geom.AffineTransform $r2;

        r0 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        $r2 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getScaleInstance(double,double)>(d0, d0);

        specialinvoke r0.<net.sourceforge.plantuml.emoji.UGraphicWithScale: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.AffineTransform)>(r1, $r2);

        return;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.UGraphic, java.awt.geom.AffineTransform)
    {
        net.sourceforge.plantuml.emoji.UGraphicWithScale r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        java.awt.geom.AffineTransform r2;

        r0 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: java.awt.geom.AffineTransform;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.emoji.UGraphicWithScale: net.sourceforge.plantuml.ugraphic.UGraphic ug> = r1;

        r0.<net.sourceforge.plantuml.emoji.UGraphicWithScale: java.awt.geom.AffineTransform at> = r2;

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UGraphic getUg()
    {
        net.sourceforge.plantuml.emoji.UGraphicWithScale r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;

        r0 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        $r1 = r0.<net.sourceforge.plantuml.emoji.UGraphicWithScale: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        return $r1;
    }

    public net.sourceforge.plantuml.emoji.UGraphicWithScale apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.emoji.UGraphicWithScale $r0, r1;
        net.sourceforge.plantuml.ugraphic.UChange r2;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, $r4;
        java.awt.geom.AffineTransform $r5;

        r1 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $r0 = new net.sourceforge.plantuml.emoji.UGraphicWithScale;

        $r3 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r2);

        $r5 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: java.awt.geom.AffineTransform at>;

        specialinvoke $r0.<net.sourceforge.plantuml.emoji.UGraphicWithScale: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.AffineTransform)>($r4, $r5);

        return $r0;
    }

    public net.sourceforge.plantuml.emoji.UGraphicWithScale applyScale(double, double)
    {
        java.awt.geom.AffineTransform $r0, $r2;
        net.sourceforge.plantuml.emoji.UGraphicWithScale r1, $r4;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;

        r1 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.awt.geom.AffineTransform;

        $r2 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: java.awt.geom.AffineTransform at>;

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r2);

        virtualinvoke $r0.<java.awt.geom.AffineTransform: void scale(double,double)>(d0, d1);

        $r4 = new net.sourceforge.plantuml.emoji.UGraphicWithScale;

        $r5 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        specialinvoke $r4.<net.sourceforge.plantuml.emoji.UGraphicWithScale: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.AffineTransform)>($r5, $r0);

        return $r4;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.emoji.UGraphicWithScale r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;

        r0 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $r2 = r0.<net.sourceforge.plantuml.emoji.UGraphicWithScale: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r1);

        return;
    }

    public net.sourceforge.plantuml.emoji.UGraphicWithScale applyRotate(double, double, double)
    {
        java.awt.geom.AffineTransform $r0, $r2;
        net.sourceforge.plantuml.emoji.UGraphicWithScale r1, $r4;
        double d0, $d1, d2, d3, $d4;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;

        r1 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d3 := @parameter2: double;

        $r0 = new java.awt.geom.AffineTransform;

        $r2 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: java.awt.geom.AffineTransform at>;

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r2);

        $d1 = d0 * 3.141592653589793;

        $d4 = $d1 / 180.0;

        virtualinvoke $r0.<java.awt.geom.AffineTransform: void rotate(double,double,double)>($d4, d2, d3);

        $r4 = new net.sourceforge.plantuml.emoji.UGraphicWithScale;

        $r5 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        specialinvoke $r4.<net.sourceforge.plantuml.emoji.UGraphicWithScale: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.AffineTransform)>($r5, $r0);

        return $r4;
    }

    public net.sourceforge.plantuml.emoji.UGraphicWithScale applyTranslate(double, double)
    {
        java.awt.geom.AffineTransform $r0, $r2;
        net.sourceforge.plantuml.emoji.UGraphicWithScale r1, $r4;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;

        r1 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.awt.geom.AffineTransform;

        $r2 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: java.awt.geom.AffineTransform at>;

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r2);

        virtualinvoke $r0.<java.awt.geom.AffineTransform: void translate(double,double)>(d0, d1);

        $r4 = new net.sourceforge.plantuml.emoji.UGraphicWithScale;

        $r5 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        specialinvoke $r4.<net.sourceforge.plantuml.emoji.UGraphicWithScale: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.AffineTransform)>($r5, $r0);

        return $r4;
    }

    public java.awt.geom.AffineTransform getAffineTransform()
    {
        net.sourceforge.plantuml.emoji.UGraphicWithScale r0;
        java.awt.geom.AffineTransform $r1;

        r0 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        $r1 = r0.<net.sourceforge.plantuml.emoji.UGraphicWithScale: java.awt.geom.AffineTransform at>;

        return $r1;
    }

    public net.sourceforge.plantuml.emoji.UGraphicWithScale applyMatrix(double, double, double, double, double, double)
    {
        java.awt.geom.AffineTransform $r0, $r2, $r4;
        net.sourceforge.plantuml.emoji.UGraphicWithScale r1, $r6;
        double[] $r5;
        double d0, d1, d2, d3, d4, d5;
        net.sourceforge.plantuml.ugraphic.UGraphic $r7;

        r1 := @this: net.sourceforge.plantuml.emoji.UGraphicWithScale;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        $r0 = new java.awt.geom.AffineTransform;

        $r2 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: java.awt.geom.AffineTransform at>;

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>(java.awt.geom.AffineTransform)>($r2);

        $r4 = new java.awt.geom.AffineTransform;

        $r5 = newarray (double)[6];

        $r5[0] = d0;

        $r5[1] = d1;

        $r5[2] = d2;

        $r5[3] = d3;

        $r5[4] = d4;

        $r5[5] = d5;

        specialinvoke $r4.<java.awt.geom.AffineTransform: void <init>(double[])>($r5);

        virtualinvoke $r0.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r4);

        $r6 = new net.sourceforge.plantuml.emoji.UGraphicWithScale;

        $r7 = r1.<net.sourceforge.plantuml.emoji.UGraphicWithScale: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        specialinvoke $r6.<net.sourceforge.plantuml.emoji.UGraphicWithScale: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.AffineTransform)>($r7, $r0);

        return $r6;
    }
}
