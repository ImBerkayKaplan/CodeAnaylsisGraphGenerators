public class net.sourceforge.plantuml.nwdiag.next.NBar extends java.lang.Object implements net.sourceforge.plantuml.nwdiag.next.Staged
{
    private net.sourceforge.plantuml.nwdiag.next.NBox parent;
    private net.sourceforge.plantuml.nwdiag.next.NStage start;
    private net.sourceforge.plantuml.nwdiag.next.NStage end;

    public void <init>()
    {
        net.sourceforge.plantuml.nwdiag.next.NBar r0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        net.sourceforge.plantuml.nwdiag.next.NBar r1;
        net.sourceforge.plantuml.nwdiag.next.NStage $r2, $r5;
        java.lang.String $r7;

        r1 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage start>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $r5 = r1.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage end>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public final net.sourceforge.plantuml.nwdiag.next.NBox getParent()
    {
        net.sourceforge.plantuml.nwdiag.next.NBar r0;
        net.sourceforge.plantuml.nwdiag.next.NBox $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NBox parent>;

        return $r1;
    }

    public final void setParent(net.sourceforge.plantuml.nwdiag.next.NBox)
    {
        net.sourceforge.plantuml.nwdiag.next.NBar r0;
        net.sourceforge.plantuml.nwdiag.next.NBox r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NBox;

        r0.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NBox parent> = r1;

        return;
    }

    public final net.sourceforge.plantuml.nwdiag.next.NStage getStart()
    {
        net.sourceforge.plantuml.nwdiag.next.NBar r0;
        net.sourceforge.plantuml.nwdiag.next.NStage $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage start>;

        return $r1;
    }

    public final net.sourceforge.plantuml.nwdiag.next.NStage getEnd()
    {
        net.sourceforge.plantuml.nwdiag.next.NBar r0;
        net.sourceforge.plantuml.nwdiag.next.NStage $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage end>;

        return $r1;
    }

    public void addStage(net.sourceforge.plantuml.nwdiag.next.NStage)
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0, $r3, $r4, $r5, $r6, $r7, $r8;
        net.sourceforge.plantuml.nwdiag.next.NBar r2;

        r2 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        r0 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NStage;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r3 = r2.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage start>;

        if $r3 != null goto label1;

        $r8 = r2.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage end>;

        if $r8 != null goto label1;

        r2.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage start> = r0;

        r2.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage end> = r0;

        goto label2;

     label1:
        $r4 = r2.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage start>;

        $r5 = staticinvoke <net.sourceforge.plantuml.nwdiag.next.NStage: net.sourceforge.plantuml.nwdiag.next.NStage getMin(net.sourceforge.plantuml.nwdiag.next.NStage,net.sourceforge.plantuml.nwdiag.next.NStage)>($r4, r0);

        r2.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage start> = $r5;

        $r6 = r2.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage end>;

        $r7 = staticinvoke <net.sourceforge.plantuml.nwdiag.next.NStage: net.sourceforge.plantuml.nwdiag.next.NStage getMax(net.sourceforge.plantuml.nwdiag.next.NStage,net.sourceforge.plantuml.nwdiag.next.NStage)>($r6, r0);

        r2.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage end> = $r7;

     label2:
        return;
    }

    public int getNWidth()
    {
        net.sourceforge.plantuml.nwdiag.next.NBar r0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        return 1;
    }

    public boolean contains(net.sourceforge.plantuml.nwdiag.next.NStage)
    {
        net.sourceforge.plantuml.nwdiag.next.NStage r0, $r2, $r3;
        net.sourceforge.plantuml.nwdiag.next.NBar r1;
        int $i0, $i1;
        boolean $z0;

        r1 := @this: net.sourceforge.plantuml.nwdiag.next.NBar;

        r0 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NStage;

        $r2 = r1.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage start>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int compareTo(net.sourceforge.plantuml.nwdiag.next.NStage)>($r2);

        if $i0 < 0 goto label1;

        $r3 = r1.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NStage end>;

        $i1 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NStage: int compareTo(net.sourceforge.plantuml.nwdiag.next.NStage)>($r3);

        if $i1 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
