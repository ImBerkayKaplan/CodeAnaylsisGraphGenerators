public class gen.lib.pathplan.route__c extends java.lang.Object
{
    private static smetana.core.jmp_buf jbuf;

    public void <init>()
    {
        gen.lib.pathplan.route__c r0;

        r0 := @this: gen.lib.pathplan.route__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int Proutespline(smetana.core.CArray, int, h.ST_Ppoly_t, smetana.core.CArray, h.ST_Ppoly_t)
    {
        smetana.core.CArray r0, r3;
        int i0, $i1;
        h.ST_Ppoly_t r1, $r2, r4;

        r0 := @parameter0: smetana.core.CArray;

        i0 := @parameter1: int;

        r1 := @parameter2: h.ST_Ppoly_t;

        r3 := @parameter3: smetana.core.CArray;

        r4 := @parameter4: h.ST_Ppoly_t;

        $r2 = virtualinvoke r1.<h.ST_Ppoly_t: h.ST_Ppoly_t copy()>();

        $i1 = staticinvoke <gen.lib.pathplan.route__c: int Proutespline_w_(smetana.core.CArray,int,h.ST_Ppoly_t,smetana.core.CArray,h.ST_Ppoly_t)>(r0, i0, $r2, r3, r4);

        return $i1;
    }

    private static int Proutespline_w_(smetana.core.CArray, int, h.ST_Ppoly_t, smetana.core.CArray, h.ST_Ppoly_t)
    {
        h.ST_Ppoly_t r0, r28;
        smetana.core.CArray r1, r3, $r16, r23, $r31;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7;
        smetana.core.jmp_buf $r2;
        java.lang.Object $r4, $r6, $r9, $r11, $r18, $r20, $r24, $r26;
        h.ST_pointf $r5, $r7, $r8, $r10, $r12, $r13, $r19, $r25, $r27;
        smetana.core.Z $r14, $r15, $r17, $r22, $r29, $r30;
        smetana.core.__struct__ $r21;
        java.lang.Throwable $r33;

        r23 := @parameter0: smetana.core.CArray;

        i5 := @parameter1: int;

        r0 := @parameter2: h.ST_Ppoly_t;

        r3 := @parameter3: smetana.core.CArray;

        r28 := @parameter4: h.ST_Ppoly_t;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9stmrdqlmufyk2wutp3totr5j", "Proutespline");

     label1:
        r1 = r0.<h.ST_Ppoly_t: smetana.core.CArray ps>;

        i0 = r0.<h.ST_Ppoly_t: int pn>;

        $r2 = <gen.lib.pathplan.route__c: smetana.core.jmp_buf jbuf>;

        $i1 = staticinvoke <smetana.core.JUtils: int setjmp(smetana.core.jmp_buf)>($r2);

        if $i1 == 0 goto label2;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8d9xfgejx5vgd6shva5wk5k06");

     label2:
        $r4 = virtualinvoke r3.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r5 = (h.ST_pointf) $r4;

        $r6 = virtualinvoke r3.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r7 = (h.ST_pointf) $r6;

        $r8 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf normv(h.ST_pointf)>($r7);

        virtualinvoke $r5.<h.ST_pointf: void ___(smetana.core.__struct__)>($r8);

        $r9 = virtualinvoke r3.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r10 = (h.ST_pointf) $r9;

        $r11 = virtualinvoke r3.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r12 = (h.ST_pointf) $r11;

        $r13 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf normv(h.ST_pointf)>($r12);

        virtualinvoke $r10.<h.ST_pointf: void ___(smetana.core.__struct__)>($r13);

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r14.<smetana.core.Z: int opl> = 0;

        staticinvoke <gen.lib.pathplan.route__c: void growops(int)>(4);

        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r16 = $r15.<smetana.core.Z: smetana.core.CArray ops_route>;

        $r17 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i2 = $r17.<smetana.core.Z: int opl>;

        $r18 = virtualinvoke $r16.<smetana.core.CArray: java.lang.Object get__(int)>($i2);

        $r19 = (h.ST_pointf) $r18;

        $r20 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r21 = (smetana.core.__struct__) $r20;

        virtualinvoke $r19.<h.ST_pointf: void ___(smetana.core.__struct__)>($r21);

        $r22 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i3 = $r22.<smetana.core.Z: int opl>;

        $i4 = $i3 + 1;

        $r22.<smetana.core.Z: int opl> = $i4;

        $r24 = virtualinvoke r3.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r25 = (h.ST_pointf) $r24;

        $r26 = virtualinvoke r3.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r27 = (h.ST_pointf) $r26;

        $i6 = staticinvoke <gen.lib.pathplan.route__c: int reallyroutespline(smetana.core.CArray,int,smetana.core.CArray,int,h.ST_pointf,h.ST_pointf)>(r23, i5, r1, i0, $r25, $r27);

        if $i6 != -1 goto label4;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9stmrdqlmufyk2wutp3totr5j", "Proutespline");

        return -1;

     label4:
        $r29 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i7 = $r29.<smetana.core.Z: int opl>;

        r28.<h.ST_Ppoly_t: int pn> = $i7;

        $r30 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r31 = $r30.<smetana.core.Z: smetana.core.CArray ops_route>;

        r28.<h.ST_Ppoly_t: smetana.core.CArray ps> = $r31;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9stmrdqlmufyk2wutp3totr5j", "Proutespline");

        return 0;

     label6:
        $r33 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9stmrdqlmufyk2wutp3totr5j", "Proutespline");

        throw $r33;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static int reallyroutespline(smetana.core.CArray, int, smetana.core.CArray, int, h.ST_pointf, h.ST_pointf)
    {
        smetana.core.CArray r0, r1;
        int i0, i1, $i2;
        h.ST_pointf r2, $r3, r4, $r5;

        r0 := @parameter0: smetana.core.CArray;

        i0 := @parameter1: int;

        r1 := @parameter2: smetana.core.CArray;

        i1 := @parameter3: int;

        r2 := @parameter4: h.ST_pointf;

        r4 := @parameter5: h.ST_pointf;

        $r3 = virtualinvoke r2.<h.ST_pointf: h.ST_pointf copy()>();

        $r5 = virtualinvoke r4.<h.ST_pointf: h.ST_pointf copy()>();

        $i2 = staticinvoke <gen.lib.pathplan.route__c: int reallyroutespline_w_(smetana.core.CArray,int,smetana.core.CArray,int,h.ST_pointf,h.ST_pointf)>(r0, i0, r1, i1, $r3, $r5);

        return $i2;
    }

    private static int reallyroutespline_w_(smetana.core.CArray, int, smetana.core.CArray, int, h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, r23, r24, $r27, $r28, $r29, $r30, $r32, $r34, $r35, $r36, $r38, $r40, $r41, $r42, $r43, $r44, $r51, $r57, $r62, $r68, $r73, $r95, $r97;
        smetana.core.Z $r20, $r22, $r46, $r52, $r58, $r63, $r69, $r74, $r78, $r82, $r86, $r90, $r98, $r100, $r101, $r104, $r105, $r109;
        int i0, $i1, $i2, i3, $i4, $i5, $i7, $i8, $i9, $i11, $i14, $i15, $i16, i19, i20, i21, i24, i25;
        smetana.core.CArray r21, $r25, r26, $r45, $r47, $r53, $r59, $r64, $r70, $r75, $r79, $r83, $r87, $r91, $r99, $r102, $r103, $r106, $r110;
        java.lang.Object $r31, $r33, $r37, $r39, $r48, $r50, $r54, $r60, $r65, $r71, $r76, $r80, $r84, $r88, $r92, $r94, $r96, $r111;
        h.ST_tna_t $r49, $r55, $r61, $r66, $r72, $r77, $r81, $r85, $r89, $r93, $r112;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, d43;
        byte $b13;
        h.ST_pointf[] $r56, $r67;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r107;

        r26 := @parameter0: smetana.core.CArray;

        i3 := @parameter1: int;

        r21 := @parameter2: smetana.core.CArray;

        i0 := @parameter3: int;

        r23 := @parameter4: h.ST_pointf;

        r24 := @parameter5: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("13dxqzbgtpl4ubnnvw6ehzzi9", "reallyroutespline");

     label01:
        $r0 = new h.ST_pointf;

        specialinvoke $r0.<h.ST_pointf: void <init>()>();

        $r2 = new h.ST_pointf;

        specialinvoke $r2.<h.ST_pointf: void <init>()>();

        $r4 = new h.ST_pointf;

        specialinvoke $r4.<h.ST_pointf: void <init>()>();

        $r6 = new h.ST_pointf;

        specialinvoke $r6.<h.ST_pointf: void <init>()>();

        $r8 = new h.ST_pointf;

        specialinvoke $r8.<h.ST_pointf: void <init>()>();

        $r10 = new h.ST_pointf;

        specialinvoke $r10.<h.ST_pointf: void <init>()>();

        $r12 = new h.ST_pointf;

        specialinvoke $r12.<h.ST_pointf: void <init>()>();

        $r14 = new h.ST_pointf;

        specialinvoke $r14.<h.ST_pointf: void <init>()>();

        $r16 = new h.ST_pointf;

        specialinvoke $r16.<h.ST_pointf: void <init>()>();

        $r18 = new h.ST_pointf;

        specialinvoke $r18.<h.ST_pointf: void <init>()>();

        $r20 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r20.<smetana.core.Z: int tnan>;

        if $i1 >= i0 goto label06;

        $r98 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r99 = $r98.<smetana.core.Z: smetana.core.CArray tnas>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r99);

        if $z0 == 0 goto label03;

        $r105 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r106 = staticinvoke <smetana.core.CArray: smetana.core.CArray ALLOC__(int,java.lang.Class)>(i0, class "Lh/ST_tna_t;");

        $r105.<smetana.core.Z: smetana.core.CArray tnas> = $r106;

        $z2 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r106);

        if $z2 == 0 goto label05;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("13dxqzbgtpl4ubnnvw6ehzzi9", "reallyroutespline");

        return -1;

     label03:
        $r100 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r101 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r102 = $r101.<smetana.core.Z: smetana.core.CArray tnas>;

        $r103 = staticinvoke <smetana.core.CArray: smetana.core.CArray REALLOC__(int,smetana.core.CArray,java.lang.Class)>(i0, $r102, class "Lh/ST_tna_t;");

        $r100.<smetana.core.Z: smetana.core.CArray tnas> = $r103;

        $z1 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r103);

        if $z1 == 0 goto label05;

     label04:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("13dxqzbgtpl4ubnnvw6ehzzi9", "reallyroutespline");

        return -1;

     label05:
        $r104 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r104.<smetana.core.Z: int tnan> = i0;

     label06:
        $r109 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r110 = $r109.<smetana.core.Z: smetana.core.CArray tnas>;

        $r111 = virtualinvoke $r110.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r112 = (h.ST_tna_t) $r111;

        $r112.<h.ST_tna_t: double t> = 0.0;

        i19 = 1;

     label07:
        if i19 >= i0 goto label08;

        $r86 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r87 = $r86.<smetana.core.Z: smetana.core.CArray tnas>;

        $r88 = virtualinvoke $r87.<smetana.core.CArray: java.lang.Object get__(int)>(i19);

        $r89 = (h.ST_tna_t) $r88;

        $r90 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r91 = $r90.<smetana.core.Z: smetana.core.CArray tnas>;

        $i15 = i19 - 1;

        $r92 = virtualinvoke $r91.<smetana.core.CArray: java.lang.Object get__(int)>($i15);

        $r93 = (h.ST_tna_t) $r92;

        $d40 = $r93.<h.ST_tna_t: double t>;

        $r94 = virtualinvoke r21.<smetana.core.CArray: java.lang.Object get__(int)>(i19);

        $r95 = (h.ST_pointf) $r94;

        $i16 = i19 - 1;

        $r96 = virtualinvoke r21.<smetana.core.CArray: java.lang.Object get__(int)>($i16);

        $r97 = (h.ST_pointf) $r96;

        $d41 = staticinvoke <gen.lib.pathplan.route__c: double dist(h.ST_pointf,h.ST_pointf)>($r95, $r97);

        $d42 = $d40 + $d41;

        $r89.<h.ST_tna_t: double t> = $d42;

        i19 = i19 + 1;

        goto label07;

     label08:
        i20 = 1;

     label09:
        if i20 >= i0 goto label10;

        $r74 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r75 = $r74.<smetana.core.Z: smetana.core.CArray tnas>;

        $r76 = virtualinvoke $r75.<smetana.core.CArray: java.lang.Object get__(int)>(i20);

        $r77 = (h.ST_tna_t) $r76;

        $r78 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r79 = $r78.<smetana.core.Z: smetana.core.CArray tnas>;

        $r80 = virtualinvoke $r79.<smetana.core.CArray: java.lang.Object get__(int)>(i20);

        $r81 = (h.ST_tna_t) $r80;

        $d37 = $r81.<h.ST_tna_t: double t>;

        $r82 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r83 = $r82.<smetana.core.Z: smetana.core.CArray tnas>;

        $i14 = i0 - 1;

        $r84 = virtualinvoke $r83.<smetana.core.CArray: java.lang.Object get__(int)>($i14);

        $r85 = (h.ST_tna_t) $r84;

        $d38 = $r85.<h.ST_tna_t: double t>;

        $d39 = $d37 / $d38;

        $r77.<h.ST_tna_t: double t> = $d39;

        i20 = i20 + 1;

        goto label09;

     label10:
        i21 = 0;

     label11:
        if i21 >= i0 goto label12;

        $r52 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r53 = $r52.<smetana.core.Z: smetana.core.CArray tnas>;

        $r54 = virtualinvoke $r53.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r55 = (h.ST_tna_t) $r54;

        $r56 = $r55.<h.ST_tna_t: h.ST_pointf[] a>;

        $r57 = $r56[0];

        $r58 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r59 = $r58.<smetana.core.Z: smetana.core.CArray tnas>;

        $r60 = virtualinvoke $r59.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r61 = (h.ST_tna_t) $r60;

        $d33 = $r61.<h.ST_tna_t: double t>;

        $d34 = staticinvoke <gen.lib.pathplan.route__c: double B1(double)>($d33);

        $r62 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale(h.ST_pointf,double)>(r23, $d34);

        virtualinvoke $r57.<h.ST_pointf: void ___(smetana.core.__struct__)>($r62);

        $r63 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r64 = $r63.<smetana.core.Z: smetana.core.CArray tnas>;

        $r65 = virtualinvoke $r64.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r66 = (h.ST_tna_t) $r65;

        $r67 = $r66.<h.ST_tna_t: h.ST_pointf[] a>;

        $r68 = $r67[1];

        $r69 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r70 = $r69.<smetana.core.Z: smetana.core.CArray tnas>;

        $r71 = virtualinvoke $r70.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r72 = (h.ST_tna_t) $r71;

        $d35 = $r72.<h.ST_tna_t: double t>;

        $d36 = staticinvoke <gen.lib.pathplan.route__c: double B2(double)>($d35);

        $r73 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale(h.ST_pointf,double)>(r24, $d36);

        virtualinvoke $r68.<h.ST_pointf: void ___(smetana.core.__struct__)>($r73);

        i21 = i21 + 1;

        goto label11;

     label12:
        $r22 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r25 = $r22.<smetana.core.Z: smetana.core.CArray tnas>;

        $i2 = staticinvoke <gen.lib.pathplan.route__c: int mkspline(smetana.core.CArray,int,smetana.core.CArray,h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r21, i0, $r25, r23, r24, $r0, $r10, $r2, $r12);

        if $i2 != -1 goto label14;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("13dxqzbgtpl4ubnnvw6ehzzi9", "reallyroutespline");

        return -1;

     label14:
        $i4 = staticinvoke <gen.lib.pathplan.route__c: int splinefits(smetana.core.CArray,int,h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf,smetana.core.CArray,int)>(r26, i3, $r0, $r10, $r2, $r12, r21, i0);

        if $i4 == 0 goto label16;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("13dxqzbgtpl4ubnnvw6ehzzi9", "reallyroutespline");

        return 0;

     label16:
        $r27 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale(h.ST_pointf,double)>($r10, 0.3333333333333333);

        $r28 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf add(h.ST_pointf,h.ST_pointf)>($r0, $r27);

        virtualinvoke $r4.<h.ST_pointf: void ___(smetana.core.__struct__)>($r28);

        $r29 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale(h.ST_pointf,double)>($r12, 0.3333333333333333);

        $r30 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf sub(h.ST_pointf,h.ST_pointf)>($r2, $r29);

        virtualinvoke $r6.<h.ST_pointf: void ___(smetana.core.__struct__)>($r30);

        d43 = -1.0;

        i24 = -1;

        i25 = 1;

     label17:
        $i5 = i0 - 1;

        if i25 >= $i5 goto label19;

        $r46 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r47 = $r46.<smetana.core.Z: smetana.core.CArray tnas>;

        $r48 = virtualinvoke $r47.<smetana.core.CArray: java.lang.Object get__(int)>(i25);

        $r49 = (h.ST_tna_t) $r48;

        d0 = $r49.<h.ST_tna_t: double t>;

        $d1 = staticinvoke <gen.lib.pathplan.route__c: double B0(double)>(d0);

        $d2 = $r0.<h.ST_pointf: double x>;

        $d3 = $d1 * $d2;

        $d4 = staticinvoke <gen.lib.pathplan.route__c: double B1(double)>(d0);

        $d5 = $r4.<h.ST_pointf: double x>;

        $d6 = $d4 * $d5;

        $d7 = $d3 + $d6;

        $d8 = staticinvoke <gen.lib.pathplan.route__c: double B2(double)>(d0);

        $d9 = $r6.<h.ST_pointf: double x>;

        $d10 = $d8 * $d9;

        $d11 = $d7 + $d10;

        $d12 = staticinvoke <gen.lib.pathplan.route__c: double B3(double)>(d0);

        $d13 = $r2.<h.ST_pointf: double x>;

        $d14 = $d12 * $d13;

        $d15 = $d11 + $d14;

        $r8.<h.ST_pointf: double x> = $d15;

        $d16 = staticinvoke <gen.lib.pathplan.route__c: double B0(double)>(d0);

        $d17 = $r0.<h.ST_pointf: double y>;

        $d18 = $d16 * $d17;

        $d19 = staticinvoke <gen.lib.pathplan.route__c: double B1(double)>(d0);

        $d20 = $r4.<h.ST_pointf: double y>;

        $d21 = $d19 * $d20;

        $d22 = $d18 + $d21;

        $d23 = staticinvoke <gen.lib.pathplan.route__c: double B2(double)>(d0);

        $d24 = $r6.<h.ST_pointf: double y>;

        $d25 = $d23 * $d24;

        $d26 = $d22 + $d25;

        $d27 = staticinvoke <gen.lib.pathplan.route__c: double B3(double)>(d0);

        $d28 = $r2.<h.ST_pointf: double y>;

        $d29 = $d27 * $d28;

        $d30 = $d26 + $d29;

        $r8.<h.ST_pointf: double y> = $d30;

        $r50 = virtualinvoke r21.<smetana.core.CArray: java.lang.Object get__(int)>(i25);

        $r51 = (h.ST_pointf) $r50;

        $d31 = staticinvoke <gen.lib.pathplan.route__c: double dist(h.ST_pointf,h.ST_pointf)>($r8, $r51);

        $b13 = $d31 cmpl d43;

        if $b13 <= 0 goto label18;

        d43 = $d31;

        i24 = i25;

     label18:
        i25 = i25 + 1;

        goto label17;

     label19:
        $r31 = virtualinvoke r21.<smetana.core.CArray: java.lang.Object get__(int)>(i24);

        $r32 = (h.ST_pointf) $r31;

        $i7 = i24 - 1;

        $r33 = virtualinvoke r21.<smetana.core.CArray: java.lang.Object get__(int)>($i7);

        $r34 = (h.ST_pointf) $r33;

        $r35 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf sub(h.ST_pointf,h.ST_pointf)>($r32, $r34);

        $r36 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf normv(h.ST_pointf)>($r35);

        virtualinvoke $r16.<h.ST_pointf: void ___(smetana.core.__struct__)>($r36);

        $i8 = i24 + 1;

        $r37 = virtualinvoke r21.<smetana.core.CArray: java.lang.Object get__(int)>($i8);

        $r38 = (h.ST_pointf) $r37;

        $r39 = virtualinvoke r21.<smetana.core.CArray: java.lang.Object get__(int)>(i24);

        $r40 = (h.ST_pointf) $r39;

        $r41 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf sub(h.ST_pointf,h.ST_pointf)>($r38, $r40);

        $r42 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf normv(h.ST_pointf)>($r41);

        virtualinvoke $r18.<h.ST_pointf: void ___(smetana.core.__struct__)>($r42);

        $r43 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf add(h.ST_pointf,h.ST_pointf)>($r16, $r18);

        $r44 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf normv(h.ST_pointf)>($r43);

        virtualinvoke $r14.<h.ST_pointf: void ___(smetana.core.__struct__)>($r44);

        $i9 = i24 + 1;

        staticinvoke <gen.lib.pathplan.route__c: int reallyroutespline(smetana.core.CArray,int,smetana.core.CArray,int,h.ST_pointf,h.ST_pointf)>(r26, i3, r21, $i9, r23, $r14);

        $r45 = virtualinvoke r21.<smetana.core.CArray: smetana.core.CArray plus_(int)>(i24);

        $i11 = i0 - i24;

        staticinvoke <gen.lib.pathplan.route__c: int reallyroutespline(smetana.core.CArray,int,smetana.core.CArray,int,h.ST_pointf,h.ST_pointf)>(r26, i3, $r45, $i11, $r14, r24);

     label20:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("13dxqzbgtpl4ubnnvw6ehzzi9", "reallyroutespline");

        return 0;

     label21:
        $r107 := @caughtexception;

     label22:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("13dxqzbgtpl4ubnnvw6ehzzi9", "reallyroutespline");

        throw $r107;

        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label04 with label21;
        catch java.lang.Throwable from label05 to label13 with label21;
        catch java.lang.Throwable from label14 to label15 with label21;
        catch java.lang.Throwable from label16 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public static int mkspline(smetana.core.CArray, int, smetana.core.CArray, h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf)
    {
        smetana.core.CArray r0, r1;
        int i0, $i1;
        h.ST_pointf r2, $r3, r4, $r5, r6, r7, r8, r9;

        r0 := @parameter0: smetana.core.CArray;

        i0 := @parameter1: int;

        r1 := @parameter2: smetana.core.CArray;

        r2 := @parameter3: h.ST_pointf;

        r4 := @parameter4: h.ST_pointf;

        r6 := @parameter5: h.ST_pointf;

        r7 := @parameter6: h.ST_pointf;

        r8 := @parameter7: h.ST_pointf;

        r9 := @parameter8: h.ST_pointf;

        $r3 = virtualinvoke r2.<h.ST_pointf: h.ST_pointf copy()>();

        $r5 = virtualinvoke r4.<h.ST_pointf: h.ST_pointf copy()>();

        $i1 = staticinvoke <gen.lib.pathplan.route__c: int mkspline_w_(smetana.core.CArray,int,smetana.core.CArray,h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf)>(r0, i0, r1, $r3, $r5, r6, r7, r8, r9);

        return $i1;
    }

    private static int mkspline_w_(smetana.core.CArray, int, smetana.core.CArray, h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf $r0, r17, r18, r19, r20, r21, r22, $r28, $r32, $r37, $r41, $r48, $r52, $r54, $r56, $r59, $r61, $r64, $r65, $r66, $r70, $r74, $r78, $r80, $r83, $r86;
        double[][] r2;
        double[] r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r23, $r33, $r42, $r43, $r44;
        int i0, $i11, i14, $i15, $i16;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, $d14, $d15, $d16, $d17, $d18, $d19, d20, d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, d42, d43, $d44, $d45, $d46;
        byte $b1, $b2, $b3, $b4, $b6, $b7;
        smetana.core.CArray r16, r24;
        java.lang.Object $r25, $r29, $r34, $r38, $r45, $r49, $r53, $r55, $r57, $r60, $r62, $r67, $r71, $r77, $r79, $r81, $r84;
        h.ST_tna_t $r26, $r30, $r35, $r39, $r46, $r50, $r58, $r63, $r68, $r72;
        h.ST_pointf[] $r27, $r31, $r36, $r40, $r47, $r51, $r69, $r73;
        java.lang.Throwable $r75;
        smetana.core.__struct__ $r82, $r85;

        r16 := @parameter0: smetana.core.CArray;

        i0 := @parameter1: int;

        r24 := @parameter2: smetana.core.CArray;

        r19 := @parameter3: h.ST_pointf;

        r22 := @parameter4: h.ST_pointf;

        r17 := @parameter5: h.ST_pointf;

        r18 := @parameter6: h.ST_pointf;

        r20 := @parameter7: h.ST_pointf;

        r21 := @parameter8: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("29sok6jkfyobf83q130snkhmh", "mkspline");

     label01:
        $r0 = new h.ST_pointf;

        specialinvoke $r0.<h.ST_pointf: void <init>()>();

        r2 = newmultiarray (double)[2][2];

        r3 = newarray (double)[2];

        d42 = 0.0;

        d43 = 0.0;

        $r7 = r2[0];

        $r6 = r2[0];

        $r5 = r2[1];

        $r4 = r2[1];

        $r4[1] = 0.0;

        $r5[0] = 0.0;

        $r6[1] = 0.0;

        $r7[0] = 0.0;

        r3[1] = 0.0;

        r3[0] = 0.0;

        i14 = 0;

     label02:
        if i14 >= i0 goto label03;

        $r23 = r2[0];

        $d22 = $r23[0];

        $r25 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r26 = (h.ST_tna_t) $r25;

        $r27 = $r26.<h.ST_tna_t: h.ST_pointf[] a>;

        $r28 = $r27[0];

        $r29 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r30 = (h.ST_tna_t) $r29;

        $r31 = $r30.<h.ST_tna_t: h.ST_pointf[] a>;

        $r32 = $r31[0];

        $d23 = staticinvoke <gen.lib.pathplan.route__c: double dot(h.ST_pointf,h.ST_pointf)>($r28, $r32);

        $d24 = $d22 + $d23;

        $r23[0] = $d24;

        $r33 = r2[0];

        $d25 = $r33[1];

        $r34 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r35 = (h.ST_tna_t) $r34;

        $r36 = $r35.<h.ST_tna_t: h.ST_pointf[] a>;

        $r37 = $r36[0];

        $r38 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r39 = (h.ST_tna_t) $r38;

        $r40 = $r39.<h.ST_tna_t: h.ST_pointf[] a>;

        $r41 = $r40[1];

        $d26 = staticinvoke <gen.lib.pathplan.route__c: double dot(h.ST_pointf,h.ST_pointf)>($r37, $r41);

        $d27 = $d25 + $d26;

        $r33[1] = $d27;

        $r43 = r2[1];

        $r42 = r2[0];

        $d28 = $r42[1];

        $r43[0] = $d28;

        $r44 = r2[1];

        $d29 = $r44[1];

        $r45 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r46 = (h.ST_tna_t) $r45;

        $r47 = $r46.<h.ST_tna_t: h.ST_pointf[] a>;

        $r48 = $r47[1];

        $r49 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r50 = (h.ST_tna_t) $r49;

        $r51 = $r50.<h.ST_tna_t: h.ST_pointf[] a>;

        $r52 = $r51[1];

        $d30 = staticinvoke <gen.lib.pathplan.route__c: double dot(h.ST_pointf,h.ST_pointf)>($r48, $r52);

        $d31 = $d29 + $d30;

        $r44[1] = $d31;

        $r53 = virtualinvoke r16.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r54 = (h.ST_pointf) $r53;

        $r55 = virtualinvoke r16.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r56 = (h.ST_pointf) $r55;

        $r57 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r58 = (h.ST_tna_t) $r57;

        $d32 = $r58.<h.ST_tna_t: double t>;

        $d33 = staticinvoke <gen.lib.pathplan.route__c: double B01(double)>($d32);

        $r59 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale(h.ST_pointf,double)>($r56, $d33);

        $i11 = i0 - 1;

        $r60 = virtualinvoke r16.<smetana.core.CArray: java.lang.Object get__(int)>($i11);

        $r61 = (h.ST_pointf) $r60;

        $r62 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r63 = (h.ST_tna_t) $r62;

        $d34 = $r63.<h.ST_tna_t: double t>;

        $d35 = staticinvoke <gen.lib.pathplan.route__c: double B23(double)>($d34);

        $r64 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale(h.ST_pointf,double)>($r61, $d35);

        $r65 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf add(h.ST_pointf,h.ST_pointf)>($r59, $r64);

        $r66 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf sub(h.ST_pointf,h.ST_pointf)>($r54, $r65);

        virtualinvoke $r0.<h.ST_pointf: void ___(smetana.core.__struct__)>($r66);

        $d36 = r3[0];

        $r67 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r68 = (h.ST_tna_t) $r67;

        $r69 = $r68.<h.ST_tna_t: h.ST_pointf[] a>;

        $r70 = $r69[0];

        $d37 = staticinvoke <gen.lib.pathplan.route__c: double dot(h.ST_pointf,h.ST_pointf)>($r70, $r0);

        $d38 = $d36 + $d37;

        r3[0] = $d38;

        $d39 = r3[1];

        $r71 = virtualinvoke r24.<smetana.core.CArray: java.lang.Object get__(int)>(i14);

        $r72 = (h.ST_tna_t) $r71;

        $r73 = $r72.<h.ST_tna_t: h.ST_pointf[] a>;

        $r74 = $r73[1];

        $d40 = staticinvoke <gen.lib.pathplan.route__c: double dot(h.ST_pointf,h.ST_pointf)>($r74, $r0);

        $d41 = $d39 + $d40;

        r3[1] = $d41;

        i14 = i14 + 1;

        goto label02;

     label03:
        $r8 = r2[0];

        $d1 = $r8[0];

        $r9 = r2[1];

        $d0 = $r9[1];

        $d5 = $d1 * $d0;

        $r10 = r2[1];

        $d3 = $r10[0];

        $r11 = r2[0];

        $d2 = $r11[1];

        $d4 = $d3 * $d2;

        d6 = $d5 - $d4;

        $r12 = r2[0];

        $d8 = $r12[0];

        $d7 = r3[1];

        $d12 = $d8 * $d7;

        $r13 = r2[0];

        $d10 = $r13[1];

        $d9 = r3[0];

        $d11 = $d10 * $d9;

        d13 = $d12 - $d11;

        $d15 = r3[0];

        $r14 = r2[1];

        $d14 = $r14[1];

        $d19 = $d15 * $d14;

        $d17 = r3[1];

        $r15 = r2[0];

        $d16 = $r15[1];

        $d18 = $d17 * $d16;

        d20 = $d19 - $d18;

        $b1 = d6 cmpl 0.0;

        if $b1 < 0 goto label04;

        $d44 = d6;

        goto label05;

     label04:
        $d44 = neg d6;

     label05:
        $b2 = $d44 cmpl 1.0E-6;

        if $b2 < 0 goto label06;

        d43 = d20 / d6;

        d42 = d13 / d6;

     label06:
        $b3 = d6 cmpl 0.0;

        if $b3 < 0 goto label07;

        $d45 = d6;

        goto label08;

     label07:
        $d45 = neg d6;

     label08:
        $b4 = $d45 cmpg 1.0E-6;

        if $b4 < 0 goto label09;

        $b6 = d43 cmpg 0.0;

        if $b6 <= 0 goto label09;

        $b7 = d42 cmpg 0.0;

        if $b7 > 0 goto label10;

     label09:
        $r77 = virtualinvoke r16.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r78 = (h.ST_pointf) $r77;

        $i15 = i0 - 1;

        $r79 = virtualinvoke r16.<smetana.core.CArray: java.lang.Object get__(int)>($i15);

        $r80 = (h.ST_pointf) $r79;

        $d46 = staticinvoke <gen.lib.pathplan.route__c: double dist(h.ST_pointf,h.ST_pointf)>($r78, $r80);

        d21 = $d46 / 3.0;

        d43 = d21;

        d42 = d21;

     label10:
        $r81 = virtualinvoke r16.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r82 = (smetana.core.__struct__) $r81;

        virtualinvoke r17.<h.ST_pointf: void ___(smetana.core.__struct__)>($r82);

        $r83 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale(h.ST_pointf,double)>(r19, d43);

        virtualinvoke r18.<h.ST_pointf: void ___(smetana.core.__struct__)>($r83);

        $i16 = i0 - 1;

        $r84 = virtualinvoke r16.<smetana.core.CArray: java.lang.Object get__(int)>($i16);

        $r85 = (smetana.core.__struct__) $r84;

        virtualinvoke r20.<h.ST_pointf: void ___(smetana.core.__struct__)>($r85);

        $r86 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale(h.ST_pointf,double)>(r22, d42);

        virtualinvoke r21.<h.ST_pointf: void ___(smetana.core.__struct__)>($r86);

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("29sok6jkfyobf83q130snkhmh", "mkspline");

        return 0;

     label12:
        $r75 := @caughtexception;

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("29sok6jkfyobf83q130snkhmh", "mkspline");

        throw $r75;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public static double dist_n(smetana.core.CArray, int)
    {
        int i0, $i1, $i2, $i3, $i4, i5;
        smetana.core.CArray r0;
        java.lang.Object $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15;
        h.ST_pointf $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16;
        double $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17;
        java.lang.Throwable $r17;

        r0 := @parameter0: smetana.core.CArray;

        i0 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("ea6jsc0rwfyjtmmuxax6r5ngk", "dist_n");

     label1:
        d17 = 0.0;

        i5 = 1;

     label2:
        if i5 >= i0 goto label3;

        $r1 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(i5);

        $r2 = (h.ST_pointf) $r1;

        $d1 = $r2.<h.ST_pointf: double x>;

        $i1 = i5 - 1;

        $r3 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>($i1);

        $r4 = (h.ST_pointf) $r3;

        $d2 = $r4.<h.ST_pointf: double x>;

        $d3 = $d1 - $d2;

        $r5 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(i5);

        $r6 = (h.ST_pointf) $r5;

        $d4 = $r6.<h.ST_pointf: double x>;

        $i2 = i5 - 1;

        $r7 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>($i2);

        $r8 = (h.ST_pointf) $r7;

        $d5 = $r8.<h.ST_pointf: double x>;

        $d6 = $d4 - $d5;

        $d7 = $d3 * $d6;

        $r9 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(i5);

        $r10 = (h.ST_pointf) $r9;

        $d8 = $r10.<h.ST_pointf: double y>;

        $i3 = i5 - 1;

        $r11 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>($i3);

        $r12 = (h.ST_pointf) $r11;

        $d9 = $r12.<h.ST_pointf: double y>;

        $d10 = $d8 - $d9;

        $r13 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(i5);

        $r14 = (h.ST_pointf) $r13;

        $d11 = $r14.<h.ST_pointf: double y>;

        $i4 = i5 - 1;

        $r15 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>($i4);

        $r16 = (h.ST_pointf) $r15;

        $d12 = $r16.<h.ST_pointf: double y>;

        $d13 = $d11 - $d12;

        $d14 = $d10 * $d13;

        $d15 = $d7 + $d14;

        $d16 = staticinvoke <smetana.core.JUtils: double sqrt(double)>($d15);

        d17 = d17 + $d16;

        i5 = i5 + 1;

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ea6jsc0rwfyjtmmuxax6r5ngk", "dist_n");

        return d17;

     label4:
        $r17 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ea6jsc0rwfyjtmmuxax6r5ngk", "dist_n");

        throw $r17;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static int splinefits(smetana.core.CArray, int, h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf, smetana.core.CArray, int)
    {
        smetana.core.CArray r0, r9;
        int i0, i1, $i2;
        h.ST_pointf r1, $r2, r3, $r4, r5, $r6, r7, $r8;

        r0 := @parameter0: smetana.core.CArray;

        i0 := @parameter1: int;

        r1 := @parameter2: h.ST_pointf;

        r3 := @parameter3: h.ST_pointf;

        r5 := @parameter4: h.ST_pointf;

        r7 := @parameter5: h.ST_pointf;

        r9 := @parameter6: smetana.core.CArray;

        i1 := @parameter7: int;

        $r2 = virtualinvoke r1.<h.ST_pointf: h.ST_pointf copy()>();

        $r4 = virtualinvoke r3.<h.ST_pointf: h.ST_pointf copy()>();

        $r6 = virtualinvoke r5.<h.ST_pointf: h.ST_pointf copy()>();

        $r8 = virtualinvoke r7.<h.ST_pointf: h.ST_pointf copy()>();

        $i2 = staticinvoke <gen.lib.pathplan.route__c: int splinefits_w_(smetana.core.CArray,int,h.ST_pointf,h.ST_pointf,h.ST_pointf,h.ST_pointf,smetana.core.CArray,int)>(r0, i0, $r2, $r4, $r6, $r8, r9, i1);

        return $i2;
    }

    private static int splinefits_w_(smetana.core.CArray, int, h.ST_pointf, h.ST_pointf, h.ST_pointf, h.ST_pointf, smetana.core.CArray, int)
    {
        smetana.core.CArray r0, r5, $r8, $r15, $r24, $r31, r38;
        int i0, i1, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i19, i21;
        boolean z0, $z1, z2, $z3;
        h.ST_pointf r1, r2, r3, r4, $r11, $r13, $r18, $r20, $r27, $r29, $r34, $r36, $r42, $r44, $r46, $r48, $r50, $r52, $r54, $r56;
        byte $b2, $b3, $b4, $b17;
        smetana.core.Z $r6, $r7, $r9, $r14, $r16, $r21, $r22, $r23, $r25, $r30, $r32, $r37;
        java.lang.Object $r10, $r12, $r17, $r19, $r26, $r28, $r33, $r35, $r41, $r43, $r45, $r47, $r49, $r51, $r53, $r55;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d8, d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33;
        java.lang.Throwable $r39;

        r5 := @parameter0: smetana.core.CArray;

        i1 := @parameter1: int;

        r1 := @parameter2: h.ST_pointf;

        r2 := @parameter3: h.ST_pointf;

        r3 := @parameter4: h.ST_pointf;

        r4 := @parameter5: h.ST_pointf;

        r38 := @parameter6: smetana.core.CArray;

        i0 := @parameter7: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("987ednrgu5qo9dzhpiox47mhb", "splinefits");

     label01:
        r0 = staticinvoke <smetana.core.CArray: smetana.core.CArray ALLOC__(int,java.lang.Class)>(4, class "Lh/ST_pointf;");

        z2 = 1;

        if i0 != 2 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z0 = $z3;

        d8 = 4.0;

        d9 = 4.0;

     label04:
        $r41 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r42 = (h.ST_pointf) $r41;

        $d10 = r1.<h.ST_pointf: double x>;

        $r42.<h.ST_pointf: double x> = $d10;

        $r43 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r44 = (h.ST_pointf) $r43;

        $d11 = r1.<h.ST_pointf: double y>;

        $r44.<h.ST_pointf: double y> = $d11;

        $r45 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r46 = (h.ST_pointf) $r45;

        $d12 = r1.<h.ST_pointf: double x>;

        $d13 = r2.<h.ST_pointf: double x>;

        $d14 = d9 * $d13;

        $d15 = $d14 / 3.0;

        $d16 = $d12 + $d15;

        $r46.<h.ST_pointf: double x> = $d16;

        $r47 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r48 = (h.ST_pointf) $r47;

        $d17 = r1.<h.ST_pointf: double y>;

        $d18 = r2.<h.ST_pointf: double y>;

        $d19 = d9 * $d18;

        $d20 = $d19 / 3.0;

        $d21 = $d17 + $d20;

        $r48.<h.ST_pointf: double y> = $d21;

        $r49 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r50 = (h.ST_pointf) $r49;

        $d22 = r3.<h.ST_pointf: double x>;

        $d23 = r4.<h.ST_pointf: double x>;

        $d24 = d8 * $d23;

        $d25 = $d24 / 3.0;

        $d26 = $d22 - $d25;

        $r50.<h.ST_pointf: double x> = $d26;

        $r51 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r52 = (h.ST_pointf) $r51;

        $d27 = r3.<h.ST_pointf: double y>;

        $d28 = r4.<h.ST_pointf: double y>;

        $d29 = d8 * $d28;

        $d30 = $d29 / 3.0;

        $d31 = $d27 - $d30;

        $r52.<h.ST_pointf: double y> = $d31;

        $r53 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r54 = (h.ST_pointf) $r53;

        $d32 = r3.<h.ST_pointf: double x>;

        $r54.<h.ST_pointf: double x> = $d32;

        $r55 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r56 = (h.ST_pointf) $r55;

        $d33 = r3.<h.ST_pointf: double y>;

        $r56.<h.ST_pointf: double y> = $d33;

        if z2 == 0 goto label06;

        $d4 = staticinvoke <gen.lib.pathplan.route__c: double dist_n(smetana.core.CArray,int)>(r0, 4);

        $d5 = staticinvoke <gen.lib.pathplan.route__c: double dist_n(smetana.core.CArray,int)>(r38, i0);

        $d6 = $d5 - 0.001;

        $b17 = $d4 cmpg $d6;

        if $b17 >= 0 goto label06;

     label05:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("987ednrgu5qo9dzhpiox47mhb", "splinefits");

        return 0;

     label06:
        z2 = 0;

        $z1 = staticinvoke <gen.lib.pathplan.route__c: boolean splineisinside(smetana.core.CArray,int,smetana.core.CArray)>(r5, i1, r0);

        if $z1 == 0 goto label09;

        $r22 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i11 = $r22.<smetana.core.Z: int opl>;

        $i12 = $i11 + 4;

        staticinvoke <gen.lib.pathplan.route__c: void growops(int)>($i12);

        i19 = 1;

     label07:
        if i19 >= 4 goto label08;

        $r23 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r24 = $r23.<smetana.core.Z: smetana.core.CArray ops_route>;

        $r25 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i13 = $r25.<smetana.core.Z: int opl>;

        $r26 = virtualinvoke $r24.<smetana.core.CArray: java.lang.Object get__(int)>($i13);

        $r27 = (h.ST_pointf) $r26;

        $r28 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(i19);

        $r29 = (h.ST_pointf) $r28;

        $d2 = $r29.<h.ST_pointf: double x>;

        $r27.<h.ST_pointf: double x> = $d2;

        $r30 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r31 = $r30.<smetana.core.Z: smetana.core.CArray ops_route>;

        $r32 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i14 = $r32.<smetana.core.Z: int opl>;

        $r33 = virtualinvoke $r31.<smetana.core.CArray: java.lang.Object get__(int)>($i14);

        $r34 = (h.ST_pointf) $r33;

        $r35 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(i19);

        $r36 = (h.ST_pointf) $r35;

        $d3 = $r36.<h.ST_pointf: double y>;

        $r34.<h.ST_pointf: double y> = $d3;

        $r37 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i15 = $r37.<smetana.core.Z: int opl>;

        $i16 = $i15 + 1;

        $r37.<smetana.core.Z: int opl> = $i16;

        i19 = i19 + 1;

        goto label07;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("987ednrgu5qo9dzhpiox47mhb", "splinefits");

        return 1;

     label09:
        $b2 = d9 cmpl 0.0;

        if $b2 != 0 goto label12;

        $b4 = d8 cmpl 0.0;

        if $b4 != 0 goto label12;

        if z0 == 0 goto label14;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i5 = $r6.<smetana.core.Z: int opl>;

        $i6 = $i5 + 4;

        staticinvoke <gen.lib.pathplan.route__c: void growops(int)>($i6);

        i21 = 1;

     label10:
        if i21 >= 4 goto label11;

        $r7 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r8 = $r7.<smetana.core.Z: smetana.core.CArray ops_route>;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i7 = $r9.<smetana.core.Z: int opl>;

        $r10 = virtualinvoke $r8.<smetana.core.CArray: java.lang.Object get__(int)>($i7);

        $r11 = (h.ST_pointf) $r10;

        $r12 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r13 = (h.ST_pointf) $r12;

        $d0 = $r13.<h.ST_pointf: double x>;

        $r11.<h.ST_pointf: double x> = $d0;

        $r14 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r15 = $r14.<smetana.core.Z: smetana.core.CArray ops_route>;

        $r16 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i8 = $r16.<smetana.core.Z: int opl>;

        $r17 = virtualinvoke $r15.<smetana.core.CArray: java.lang.Object get__(int)>($i8);

        $r18 = (h.ST_pointf) $r17;

        $r19 = virtualinvoke r0.<smetana.core.CArray: java.lang.Object get__(int)>(i21);

        $r20 = (h.ST_pointf) $r19;

        $d1 = $r20.<h.ST_pointf: double y>;

        $r18.<h.ST_pointf: double y> = $d1;

        $r21 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i9 = $r21.<smetana.core.Z: int opl>;

        $i10 = $i9 + 1;

        $r21.<smetana.core.Z: int opl> = $i10;

        i21 = i21 + 1;

        goto label10;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("987ednrgu5qo9dzhpiox47mhb", "splinefits");

        return 1;

     label12:
        $b3 = d9 cmpl 0.01;

        if $b3 <= 0 goto label13;

        d9 = d9 / 2.0;

        d8 = d8 / 2.0;

        goto label04;

     label13:
        d8 = 0.0;

        d9 = 0.0;

        goto label04;

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("987ednrgu5qo9dzhpiox47mhb", "splinefits");

        return 0;

     label15:
        $r39 := @caughtexception;

     label16:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("987ednrgu5qo9dzhpiox47mhb", "splinefits");

        throw $r39;

        catch java.lang.Throwable from label01 to label05 with label15;
        catch java.lang.Throwable from label06 to label08 with label15;
        catch java.lang.Throwable from label09 to label11 with label15;
        catch java.lang.Throwable from label12 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public static boolean splineisinside(smetana.core.CArray, int, smetana.core.CArray)
    {
        double[] r0;
        smetana.core.CArray r1, r5, r15;
        h.ST_pointf $r2, $r6, $r9, $r11, $r14, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35;
        int i0, $i1, i7, i8;
        java.lang.Object $r4, $r7, $r10, $r12, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34;
        h.ST_Pedge_t $r8, $r13;
        double $d0, $d1, d2, $d3, d4, $d5, $d6, $d7, d8, $d9, $d10, $d11, $d12, d13, $d14, $d15, $d16, $d17, d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42;
        byte $b3, $b4, $b5, $b6;
        java.lang.Throwable $r36;

        r5 := @parameter0: smetana.core.CArray;

        i0 := @parameter1: int;

        r15 := @parameter2: smetana.core.CArray;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("b6eghkeu16aum3l778ig52ht1", "splineisinside");

     label01:
        r0 = newarray (double)[4];

        r1 = staticinvoke <smetana.core.CArray: smetana.core.CArray ALLOC__(int,java.lang.Class)>(2, class "Lh/ST_pointf;");

        $r2 = new h.ST_pointf;

        specialinvoke $r2.<h.ST_pointf: void <init>()>();

        i7 = 0;

     label02:
        if i7 >= i0 goto label09;

        $r4 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r6 = (h.ST_pointf) $r4;

        $r7 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r8 = (h.ST_Pedge_t) $r7;

        $r9 = $r8.<h.ST_Pedge_t: h.ST_pointf a>;

        virtualinvoke $r6.<h.ST_pointf: void ___(smetana.core.__struct__)>($r9);

        $r10 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r11 = (h.ST_pointf) $r10;

        $r12 = virtualinvoke r5.<smetana.core.CArray: java.lang.Object get__(int)>(i7);

        $r13 = (h.ST_Pedge_t) $r12;

        $r14 = $r13.<h.ST_Pedge_t: h.ST_pointf b>;

        virtualinvoke $r11.<h.ST_pointf: void ___(smetana.core.__struct__)>($r14);

        $i1 = staticinvoke <gen.lib.pathplan.route__c: int splineintersectsline(smetana.core.CArray,smetana.core.CArray,double[])>(r15, r1, r0);

        if $i1 != 4 goto label03;

        goto label08;

     label03:
        i8 = 0;

     label04:
        if i8 >= $i1 goto label08;

        $d0 = r0[i8];

        $b3 = $d0 cmpg 1.0E-6;

        if $b3 < 0 goto label07;

        $d1 = r0[i8];

        $b4 = $d1 cmpl 0.999999;

        if $b4 <= 0 goto label05;

        goto label07;

     label05:
        d2 = r0[i8];

        $d3 = d2 * d2;

        d4 = $d3 * d2;

        $d5 = 3.0 * d2;

        $d7 = $d5 * d2;

        $d6 = 1.0 - d2;

        d8 = $d7 * $d6;

        $d10 = 3.0 * d2;

        $d9 = 1.0 - d2;

        $d12 = $d10 * $d9;

        $d11 = 1.0 - d2;

        d13 = $d12 * $d11;

        $d15 = 1.0 - d2;

        $d14 = 1.0 - d2;

        $d17 = $d15 * $d14;

        $d16 = 1.0 - d2;

        d18 = $d17 * $d16;

        $r16 = virtualinvoke r15.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r17 = (h.ST_pointf) $r16;

        $d19 = $r17.<h.ST_pointf: double x>;

        $d20 = d18 * $d19;

        $r18 = virtualinvoke r15.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r19 = (h.ST_pointf) $r18;

        $d21 = $r19.<h.ST_pointf: double x>;

        $d22 = d13 * $d21;

        $d23 = $d20 + $d22;

        $r20 = virtualinvoke r15.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r21 = (h.ST_pointf) $r20;

        $d24 = $r21.<h.ST_pointf: double x>;

        $d25 = d8 * $d24;

        $d26 = $d23 + $d25;

        $r22 = virtualinvoke r15.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r23 = (h.ST_pointf) $r22;

        $d27 = $r23.<h.ST_pointf: double x>;

        $d28 = d4 * $d27;

        $d29 = $d26 + $d28;

        $r2.<h.ST_pointf: double x> = $d29;

        $r24 = virtualinvoke r15.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r25 = (h.ST_pointf) $r24;

        $d30 = $r25.<h.ST_pointf: double y>;

        $d31 = d18 * $d30;

        $r26 = virtualinvoke r15.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r27 = (h.ST_pointf) $r26;

        $d32 = $r27.<h.ST_pointf: double y>;

        $d33 = d13 * $d32;

        $d34 = $d31 + $d33;

        $r28 = virtualinvoke r15.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r29 = (h.ST_pointf) $r28;

        $d35 = $r29.<h.ST_pointf: double y>;

        $d36 = d8 * $d35;

        $d37 = $d34 + $d36;

        $r30 = virtualinvoke r15.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r31 = (h.ST_pointf) $r30;

        $d38 = $r31.<h.ST_pointf: double y>;

        $d39 = d4 * $d38;

        $d40 = $d37 + $d39;

        $r2.<h.ST_pointf: double y> = $d40;

        $r32 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r33 = (h.ST_pointf) $r32;

        $d41 = staticinvoke <smetana.core.Macro: double DISTSQ(h.ST_pointf,h.ST_pointf)>($r2, $r33);

        $b5 = $d41 cmpg 0.001;

        if $b5 < 0 goto label07;

        $r34 = virtualinvoke r1.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r35 = (h.ST_pointf) $r34;

        $d42 = staticinvoke <smetana.core.Macro: double DISTSQ(h.ST_pointf,h.ST_pointf)>($r2, $r35);

        $b6 = $d42 cmpg 0.001;

        if $b6 >= 0 goto label06;

        goto label07;

     label06:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("b6eghkeu16aum3l778ig52ht1", "splineisinside");

        return 0;

     label07:
        i8 = i8 + 1;

        goto label04;

     label08:
        i7 = i7 + 1;

        goto label02;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("b6eghkeu16aum3l778ig52ht1", "splineisinside");

        return 1;

     label10:
        $r36 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("b6eghkeu16aum3l778ig52ht1", "splineisinside");

        throw $r36;

        catch java.lang.Throwable from label01 to label06 with label10;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static int splineintersectsline(smetana.core.CArray, smetana.core.CArray, double[])
    {
        double[] r0, r1, r2, r3, r4, r45;
        int[] $r5;
        smetana.core.CArray r7, r20;
        java.lang.Object $r8, $r10, $r12, $r14, $r16, $r18, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76;
        h.ST_pointf $r9, $r11, $r13, $r15, $r17, $r19, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d41, $d42, $d43, $d44, $d45, $d46, $d47, $d48, $d49, $d50, $d51, $d52, $d53, $d54, $d55, $d56, $d57, $d58, $d59, $d60, $d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, $d85, $d86, $d87, $d88, $d89, $d90, $d91, $d92, d93, d94, d95, d96, d97, d98;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b11;
        int i10, i12, i14, i15, i16, i17, i18, i19, i21, i22, i23, i25, i26;
        java.lang.Throwable $r78;

        r20 := @parameter0: smetana.core.CArray;

        r7 := @parameter1: smetana.core.CArray;

        r45 := @parameter2: double[];

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("32nc8itszi77u36la8npt2870", "splineintersectsline");

     label01:
        r0 = newarray (double)[4];

        r1 = newarray (double)[2];

        r2 = newarray (double)[2];

        r3 = newarray (double)[3];

        r4 = newarray (double)[3];

        $r5 = newarray (int)[1];

        $r5[0] = 0;

        $r8 = virtualinvoke r7.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r9 = (h.ST_pointf) $r8;

        $d0 = $r9.<h.ST_pointf: double x>;

        r1[0] = $d0;

        $r10 = virtualinvoke r7.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r11 = (h.ST_pointf) $r10;

        $d1 = $r11.<h.ST_pointf: double x>;

        $r12 = virtualinvoke r7.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r13 = (h.ST_pointf) $r12;

        $d2 = $r13.<h.ST_pointf: double x>;

        $d3 = $d1 - $d2;

        r1[1] = $d3;

        $r14 = virtualinvoke r7.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r15 = (h.ST_pointf) $r14;

        $d4 = $r15.<h.ST_pointf: double y>;

        r2[0] = $d4;

        $r16 = virtualinvoke r7.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r17 = (h.ST_pointf) $r16;

        $d5 = $r17.<h.ST_pointf: double y>;

        $r18 = virtualinvoke r7.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r19 = (h.ST_pointf) $r18;

        $d6 = $r19.<h.ST_pointf: double y>;

        $d7 = $d5 - $d6;

        r2[1] = $d7;

        $r5[0] = 0;

        $d8 = r1[1];

        $b0 = $d8 cmpl 0.0;

        if $b0 != 0 goto label21;

        $d50 = r2[1];

        $b5 = $d50 cmpl 0.0;

        if $b5 != 0 goto label14;

        $r62 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r63 = (h.ST_pointf) $r62;

        $d74 = $r63.<h.ST_pointf: double x>;

        $r64 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r65 = (h.ST_pointf) $r64;

        $d75 = $r65.<h.ST_pointf: double x>;

        $r66 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r67 = (h.ST_pointf) $r66;

        $d76 = $r67.<h.ST_pointf: double x>;

        $r68 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r69 = (h.ST_pointf) $r68;

        $d77 = $r69.<h.ST_pointf: double x>;

        staticinvoke <gen.lib.pathplan.route__c: void points2coeff(double,double,double,double,double[])>($d74, $d75, $d76, $d77, r0);

        $d79 = r0[0];

        $d78 = r1[0];

        $d80 = $d79 - $d78;

        r0[0] = $d80;

        i12 = staticinvoke <gen.lib.pathplan.solvers__c: int solve3(double[],double[])>(r0, r3);

        $r70 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r71 = (h.ST_pointf) $r70;

        $d81 = $r71.<h.ST_pointf: double y>;

        $r72 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r73 = (h.ST_pointf) $r72;

        $d82 = $r73.<h.ST_pointf: double y>;

        $r74 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r75 = (h.ST_pointf) $r74;

        $d83 = $r75.<h.ST_pointf: double y>;

        $r76 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r77 = (h.ST_pointf) $r76;

        $d84 = $r77.<h.ST_pointf: double y>;

        staticinvoke <gen.lib.pathplan.route__c: void points2coeff(double,double,double,double,double[])>($d81, $d82, $d83, $d84, r0);

        $d86 = r0[0];

        $d85 = r2[0];

        $d87 = $d86 - $d85;

        r0[0] = $d87;

        i10 = staticinvoke <gen.lib.pathplan.solvers__c: int solve3(double[],double[])>(r0, r4);

        if i12 != 4 goto label05;

        if i10 != 4 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("32nc8itszi77u36la8npt2870", "splineintersectsline");

        return 4;

     label03:
        i14 = 0;

     label04:
        if i14 >= i10 goto label12;

        $d92 = r4[i14];

        staticinvoke <gen.lib.pathplan.route__c: void addroot(double,double[],int[])>($d92, r45, $r5);

        i14 = i14 + 1;

        goto label04;

     label05:
        if i10 != 4 goto label07;

        i15 = 0;

     label06:
        if i15 >= i12 goto label12;

        $d91 = r3[i15];

        staticinvoke <gen.lib.pathplan.route__c: void addroot(double,double[],int[])>($d91, r45, $r5);

        i15 = i15 + 1;

        goto label06;

     label07:
        i16 = 0;

     label08:
        if i16 >= i12 goto label12;

        i17 = 0;

     label09:
        if i17 >= i10 goto label11;

        $d89 = r3[i16];

        $d88 = r4[i17];

        $b11 = $d89 cmpl $d88;

        if $b11 != 0 goto label10;

        $d90 = r3[i16];

        staticinvoke <gen.lib.pathplan.route__c: void addroot(double,double[],int[])>($d90, r45, $r5);

     label10:
        i17 = i17 + 1;

        goto label09;

     label11:
        i16 = i16 + 1;

        goto label08;

     label12:
        i18 = $r5[0];

     label13:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("32nc8itszi77u36la8npt2870", "splineintersectsline");

        return i18;

     label14:
        $r46 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r47 = (h.ST_pointf) $r46;

        $d51 = $r47.<h.ST_pointf: double x>;

        $r48 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r49 = (h.ST_pointf) $r48;

        $d52 = $r49.<h.ST_pointf: double x>;

        $r50 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r51 = (h.ST_pointf) $r50;

        $d53 = $r51.<h.ST_pointf: double x>;

        $r52 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r53 = (h.ST_pointf) $r52;

        $d54 = $r53.<h.ST_pointf: double x>;

        staticinvoke <gen.lib.pathplan.route__c: void points2coeff(double,double,double,double,double[])>($d51, $d52, $d53, $d54, r0);

        $d56 = r0[0];

        $d55 = r1[0];

        $d57 = $d56 - $d55;

        r0[0] = $d57;

        i19 = staticinvoke <gen.lib.pathplan.solvers__c: int solve3(double[],double[])>(r0, r3);

        if i19 != 4 goto label16;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("32nc8itszi77u36la8npt2870", "splineintersectsline");

        return 4;

     label16:
        i21 = 0;

     label17:
        if i21 >= i19 goto label19;

        d93 = r3[i21];

        $b6 = d93 cmpl 0.0;

        if $b6 < 0 goto label18;

        $b7 = d93 cmpg 1.0;

        if $b7 > 0 goto label18;

        $r54 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r55 = (h.ST_pointf) $r54;

        $d58 = $r55.<h.ST_pointf: double y>;

        $r56 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r57 = (h.ST_pointf) $r56;

        $d59 = $r57.<h.ST_pointf: double y>;

        $r58 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r59 = (h.ST_pointf) $r58;

        $d60 = $r59.<h.ST_pointf: double y>;

        $r60 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r61 = (h.ST_pointf) $r60;

        $d61 = $r61.<h.ST_pointf: double y>;

        staticinvoke <gen.lib.pathplan.route__c: void points2coeff(double,double,double,double,double[])>($d58, $d59, $d60, $d61, r0);

        $d70 = r0[0];

        $d67 = r0[1];

        $d64 = r0[2];

        $d62 = r0[3];

        $d63 = d93 * $d62;

        $d65 = $d64 + $d63;

        $d66 = d93 * $d65;

        $d68 = $d67 + $d66;

        $d69 = d93 * $d68;

        d94 = $d70 + $d69;

        $d71 = r2[0];

        $d73 = d94 - $d71;

        $d72 = r2[1];

        d95 = $d73 / $d72;

        $b8 = 0.0 cmpg d95;

        if $b8 > 0 goto label18;

        $b9 = d95 cmpg 1.0;

        if $b9 > 0 goto label18;

        staticinvoke <gen.lib.pathplan.route__c: void addroot(double,double[],int[])>(d93, r45, $r5);

     label18:
        i21 = i21 + 1;

        goto label17;

     label19:
        i22 = $r5[0];

     label20:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("32nc8itszi77u36la8npt2870", "splineintersectsline");

        return i22;

     label21:
        $d10 = r2[1];

        $d9 = r1[1];

        d11 = $d10 / $d9;

        $r21 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r22 = (h.ST_pointf) $r21;

        $d12 = $r22.<h.ST_pointf: double y>;

        $r23 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r24 = (h.ST_pointf) $r23;

        $d13 = $r24.<h.ST_pointf: double x>;

        $d14 = d11 * $d13;

        $d15 = $d12 - $d14;

        $r25 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r26 = (h.ST_pointf) $r25;

        $d16 = $r26.<h.ST_pointf: double y>;

        $r27 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r28 = (h.ST_pointf) $r27;

        $d17 = $r28.<h.ST_pointf: double x>;

        $d18 = d11 * $d17;

        $d19 = $d16 - $d18;

        $r29 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r30 = (h.ST_pointf) $r29;

        $d20 = $r30.<h.ST_pointf: double y>;

        $r31 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r32 = (h.ST_pointf) $r31;

        $d21 = $r32.<h.ST_pointf: double x>;

        $d22 = d11 * $d21;

        $d23 = $d20 - $d22;

        $r33 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r34 = (h.ST_pointf) $r33;

        $d24 = $r34.<h.ST_pointf: double y>;

        $r35 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r36 = (h.ST_pointf) $r35;

        $d25 = $r36.<h.ST_pointf: double x>;

        $d26 = d11 * $d25;

        $d27 = $d24 - $d26;

        staticinvoke <gen.lib.pathplan.route__c: void points2coeff(double,double,double,double,double[])>($d15, $d19, $d23, $d27, r0);

        $d32 = r0[0];

        $d28 = r1[0];

        $d30 = d11 * $d28;

        $d29 = r2[0];

        $d31 = $d30 - $d29;

        $d33 = $d32 + $d31;

        r0[0] = $d33;

        i23 = staticinvoke <gen.lib.pathplan.solvers__c: int solve3(double[],double[])>(r0, r3);

        if i23 != 4 goto label23;

     label22:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("32nc8itszi77u36la8npt2870", "splineintersectsline");

        return 4;

     label23:
        i25 = 0;

     label24:
        if i25 >= i23 goto label26;

        d96 = r3[i25];

        $b1 = d96 cmpl 0.0;

        if $b1 < 0 goto label25;

        $b2 = d96 cmpg 1.0;

        if $b2 > 0 goto label25;

        $r37 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r38 = (h.ST_pointf) $r37;

        $d34 = $r38.<h.ST_pointf: double x>;

        $r39 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(1);

        $r40 = (h.ST_pointf) $r39;

        $d35 = $r40.<h.ST_pointf: double x>;

        $r41 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(2);

        $r42 = (h.ST_pointf) $r41;

        $d36 = $r42.<h.ST_pointf: double x>;

        $r43 = virtualinvoke r20.<smetana.core.CArray: java.lang.Object get__(int)>(3);

        $r44 = (h.ST_pointf) $r43;

        $d37 = $r44.<h.ST_pointf: double x>;

        staticinvoke <gen.lib.pathplan.route__c: void points2coeff(double,double,double,double,double[])>($d34, $d35, $d36, $d37, r0);

        $d46 = r0[0];

        $d43 = r0[1];

        $d40 = r0[2];

        $d38 = r0[3];

        $d39 = d96 * $d38;

        $d41 = $d40 + $d39;

        $d42 = d96 * $d41;

        $d44 = $d43 + $d42;

        $d45 = d96 * $d44;

        d97 = $d46 + $d45;

        $d47 = r1[0];

        $d49 = d97 - $d47;

        $d48 = r1[1];

        d98 = $d49 / $d48;

        $b3 = 0.0 cmpg d98;

        if $b3 > 0 goto label25;

        $b4 = d98 cmpg 1.0;

        if $b4 > 0 goto label25;

        staticinvoke <gen.lib.pathplan.route__c: void addroot(double,double[],int[])>(d96, r45, $r5);

     label25:
        i25 = i25 + 1;

        goto label24;

     label26:
        i26 = $r5[0];

     label27:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("32nc8itszi77u36la8npt2870", "splineintersectsline");

        return i26;

     label28:
        $r78 := @caughtexception;

     label29:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("32nc8itszi77u36la8npt2870", "splineintersectsline");

        throw $r78;

        catch java.lang.Throwable from label01 to label02 with label28;
        catch java.lang.Throwable from label03 to label13 with label28;
        catch java.lang.Throwable from label14 to label15 with label28;
        catch java.lang.Throwable from label16 to label20 with label28;
        catch java.lang.Throwable from label21 to label22 with label28;
        catch java.lang.Throwable from label23 to label27 with label28;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    public static void points2coeff(double, double, double, double, double[])
    {
        double[] r0;
        double d0, d1, $d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        java.lang.Throwable $r1;

        d3 := @parameter0: double;

        d1 := @parameter1: double;

        d4 := @parameter2: double;

        d0 := @parameter3: double;

        r0 := @parameter4: double[];

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9011b45d42bhwfxzhgxqnlfhp", "points2coeff");

     label1:
        $d2 = 3.0 * d1;

        $d7 = d0 + $d2;

        $d5 = 3.0 * d4;

        $d6 = d3 + $d5;

        $d8 = $d7 - $d6;

        r0[3] = $d8;

        $d10 = 3.0 * d3;

        $d9 = 3.0 * d4;

        $d12 = $d10 + $d9;

        $d11 = 6.0 * d1;

        $d13 = $d12 - $d11;

        r0[2] = $d13;

        $d14 = d1 - d3;

        $d15 = 3.0 * $d14;

        r0[1] = $d15;

        r0[0] = d3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9011b45d42bhwfxzhgxqnlfhp", "points2coeff");

        goto label5;

     label3:
        $r1 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9011b45d42bhwfxzhgxqnlfhp", "points2coeff");

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void addroot(double, double[], int[])
    {
        double d0;
        byte $b0, $b1;
        double[] r0;
        int[] r1;
        int $i2, $i3, $i4;
        java.lang.Throwable $r2;

        d0 := @parameter0: double;

        r0 := @parameter1: double[];

        r1 := @parameter2: int[];

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6ldk438jjflh0huxkg4cs8kwu", "addroot");

     label1:
        $b0 = d0 cmpl 0.0;

        if $b0 < 0 goto label2;

        $b1 = d0 cmpg 1.0;

        if $b1 > 0 goto label2;

        $i2 = r1[0];

        r0[$i2] = d0;

        $i3 = r1[0];

        $i4 = $i3 + 1;

        r1[0] = $i4;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6ldk438jjflh0huxkg4cs8kwu", "addroot");

        goto label5;

     label3:
        $r2 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6ldk438jjflh0huxkg4cs8kwu", "addroot");

        throw $r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static h.ST_pointf normv(h.ST_pointf)
    {
        h.ST_pointf r0, $r1, $r2, $r3;

        r0 := @parameter0: h.ST_pointf;

        $r1 = virtualinvoke r0.<h.ST_pointf: h.ST_pointf copy()>();

        $r2 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf normv_w_(h.ST_pointf)>($r1);

        $r3 = virtualinvoke $r2.<h.ST_pointf: h.ST_pointf copy()>();

        return $r3;
    }

    private static h.ST_pointf normv_w_(h.ST_pointf)
    {
        h.ST_pointf r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11;
        byte $b0;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3i8m1m9fg7qmnt8jloorwlu8e", "normv");

     label1:
        $d1 = r0.<h.ST_pointf: double x>;

        $d0 = r0.<h.ST_pointf: double x>;

        $d5 = $d1 * $d0;

        $d3 = r0.<h.ST_pointf: double y>;

        $d2 = r0.<h.ST_pointf: double y>;

        $d4 = $d3 * $d2;

        d10 = $d5 + $d4;

        $b0 = d10 cmpl 1.0E-6;

        if $b0 <= 0 goto label2;

        d11 = staticinvoke <smetana.core.JUtils: double sqrt(double)>(d10);

        $d6 = r0.<h.ST_pointf: double x>;

        $d7 = $d6 / d11;

        r0.<h.ST_pointf: double x> = $d7;

        $d8 = r0.<h.ST_pointf: double y>;

        $d9 = $d8 / d11;

        r0.<h.ST_pointf: double y> = $d9;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3i8m1m9fg7qmnt8jloorwlu8e", "normv");

        return r0;

     label3:
        $r2 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3i8m1m9fg7qmnt8jloorwlu8e", "normv");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void growops(int)
    {
        int i0, $i1;
        smetana.core.Z $r0, $r1, $r3, $r4, $r9, $r15;
        smetana.core.CArray $r2, $r5, $r6, $r10;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r13;

        i0 := @parameter0: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("d59jcnpi1y0wr8e9uwxny2fvk", "growops");

     label1:
        $r0 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $i1 = $r0.<smetana.core.Z: int opn_route>;

        if i0 > $i1 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d59jcnpi1y0wr8e9uwxny2fvk", "growops");

        return;

     label3:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: smetana.core.CArray ops_route>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r2);

        if $z0 == 0 goto label4;

        $r9 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r10 = staticinvoke <smetana.core.CArray: smetana.core.CArray ALLOC__(int,java.lang.Class)>(i0, class "Lh/ST_pointf;");

        $r9.<smetana.core.Z: smetana.core.CArray ops_route> = $r10;

        $z2 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r10);

        if $z2 == 0 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("413an1hqgkb4ezaec6qdsdplx");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

        goto label5;

     label4:
        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r5 = $r4.<smetana.core.Z: smetana.core.CArray ops_route>;

        $r6 = staticinvoke <smetana.core.CArray: smetana.core.CArray REALLOC__(int,smetana.core.CArray,java.lang.Class)>(i0, $r5, class "Lh/ST_pointf;");

        $r3.<smetana.core.Z: smetana.core.CArray ops_route> = $r6;

        $z1 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r6);

        if $z1 == 0 goto label5;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("8u0qgahxvk5pplf90thmhwxhl");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("1r6uhbnmxv8c6msnscw07w0qx");

     label5:
        $r15 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r15.<smetana.core.Z: int opn_route> = i0;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d59jcnpi1y0wr8e9uwxny2fvk", "growops");

        goto label8;

     label7:
        $r13 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d59jcnpi1y0wr8e9uwxny2fvk", "growops");

        throw $r13;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
    }

    public static h.ST_pointf add(h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, $r1, r2, $r3, $r4, $r5;

        r0 := @parameter0: h.ST_pointf;

        r2 := @parameter1: h.ST_pointf;

        $r1 = virtualinvoke r0.<h.ST_pointf: h.ST_pointf copy()>();

        $r3 = virtualinvoke r2.<h.ST_pointf: h.ST_pointf copy()>();

        $r4 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf add_w_(h.ST_pointf,h.ST_pointf)>($r1, $r3);

        $r5 = virtualinvoke $r4.<h.ST_pointf: h.ST_pointf copy()>();

        return $r5;
    }

    private static h.ST_pointf add_w_(h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_pointf;

        r1 := @parameter1: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("f4a7nt247bokdwr2owda050of", "add");

     label1:
        $d1 = r0.<h.ST_pointf: double x>;

        $d0 = r1.<h.ST_pointf: double x>;

        $d2 = $d1 + $d0;

        r0.<h.ST_pointf: double x> = $d2;

        $d4 = r0.<h.ST_pointf: double y>;

        $d3 = r1.<h.ST_pointf: double y>;

        $d5 = $d4 + $d3;

        r0.<h.ST_pointf: double y> = $d5;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("f4a7nt247bokdwr2owda050of", "add");

        return r0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("f4a7nt247bokdwr2owda050of", "add");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static h.ST_pointf sub(h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, $r1, r2, $r3, $r4, $r5;

        r0 := @parameter0: h.ST_pointf;

        r2 := @parameter1: h.ST_pointf;

        $r1 = virtualinvoke r0.<h.ST_pointf: h.ST_pointf copy()>();

        $r3 = virtualinvoke r2.<h.ST_pointf: h.ST_pointf copy()>();

        $r4 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf sub_w_(h.ST_pointf,h.ST_pointf)>($r1, $r3);

        $r5 = virtualinvoke $r4.<h.ST_pointf: h.ST_pointf copy()>();

        return $r5;
    }

    private static h.ST_pointf sub_w_(h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_pointf;

        r1 := @parameter1: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("c4l1gvlkv2s4mi6os7r9dh89f", "sub");

     label1:
        $d1 = r0.<h.ST_pointf: double x>;

        $d0 = r1.<h.ST_pointf: double x>;

        $d2 = $d1 - $d0;

        r0.<h.ST_pointf: double x> = $d2;

        $d4 = r0.<h.ST_pointf: double y>;

        $d3 = r1.<h.ST_pointf: double y>;

        $d5 = $d4 - $d3;

        r0.<h.ST_pointf: double y> = $d5;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c4l1gvlkv2s4mi6os7r9dh89f", "sub");

        return r0;

     label3:
        $r3 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c4l1gvlkv2s4mi6os7r9dh89f", "sub");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static double dist(h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, $r1, r2, $r3;
        double $d0;

        r0 := @parameter0: h.ST_pointf;

        r2 := @parameter1: h.ST_pointf;

        $r1 = virtualinvoke r0.<h.ST_pointf: h.ST_pointf copy()>();

        $r3 = virtualinvoke r2.<h.ST_pointf: h.ST_pointf copy()>();

        $d0 = staticinvoke <gen.lib.pathplan.route__c: double dist_w_(h.ST_pointf,h.ST_pointf)>($r1, $r3);

        return $d0;
    }

    private static double dist_w_(h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, r1;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, d9;
        java.lang.Throwable $r2;

        r1 := @parameter0: h.ST_pointf;

        r0 := @parameter1: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dqnlz0tceriykws4ngudl94w9", "dist");

     label1:
        $d1 = r0.<h.ST_pointf: double x>;

        $d0 = r1.<h.ST_pointf: double x>;

        d2 = $d1 - $d0;

        $d4 = r0.<h.ST_pointf: double y>;

        $d3 = r1.<h.ST_pointf: double y>;

        d5 = $d4 - $d3;

        $d7 = d2 * d2;

        $d6 = d5 * d5;

        $d8 = $d7 + $d6;

        d9 = staticinvoke <smetana.core.JUtils: double sqrt(double)>($d8);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dqnlz0tceriykws4ngudl94w9", "dist");

        return d9;

     label3:
        $r2 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dqnlz0tceriykws4ngudl94w9", "dist");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static h.ST_pointf scale(h.ST_pointf, double)
    {
        h.ST_pointf r0, $r1, $r2, $r3;
        double d0;

        r0 := @parameter0: h.ST_pointf;

        d0 := @parameter1: double;

        $r1 = virtualinvoke r0.<h.ST_pointf: h.ST_pointf copy()>();

        $r2 = staticinvoke <gen.lib.pathplan.route__c: h.ST_pointf scale_w_(h.ST_pointf,double)>($r1, d0);

        $r3 = virtualinvoke $r2.<h.ST_pointf: h.ST_pointf copy()>();

        return $r3;
    }

    private static h.ST_pointf scale_w_(h.ST_pointf, double)
    {
        h.ST_pointf r0;
        double d0, $d1, $d2, $d3, $d4;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_pointf;

        d0 := @parameter1: double;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("19149pdllzhplvew0bsh5v6hy", "scale");

     label1:
        $d1 = r0.<h.ST_pointf: double x>;

        $d2 = $d1 * d0;

        r0.<h.ST_pointf: double x> = $d2;

        $d3 = r0.<h.ST_pointf: double y>;

        $d4 = $d3 * d0;

        r0.<h.ST_pointf: double y> = $d4;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("19149pdllzhplvew0bsh5v6hy", "scale");

        return r0;

     label3:
        $r2 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("19149pdllzhplvew0bsh5v6hy", "scale");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static double dot(h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, $r1, r2, $r3;
        double $d0;

        r0 := @parameter0: h.ST_pointf;

        r2 := @parameter1: h.ST_pointf;

        $r1 = virtualinvoke r0.<h.ST_pointf: h.ST_pointf copy()>();

        $r3 = virtualinvoke r2.<h.ST_pointf: h.ST_pointf copy()>();

        $d0 = staticinvoke <gen.lib.pathplan.route__c: double dot_w_(h.ST_pointf,h.ST_pointf)>($r1, $r3);

        return $d0;
    }

    private static double dot_w_(h.ST_pointf, h.ST_pointf)
    {
        h.ST_pointf r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_pointf;

        r1 := @parameter1: h.ST_pointf;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("7ebsa2s1eoopqj1pp43bh5fw", "dot");

     label1:
        $d1 = r0.<h.ST_pointf: double x>;

        $d0 = r1.<h.ST_pointf: double x>;

        $d5 = $d1 * $d0;

        $d3 = r0.<h.ST_pointf: double y>;

        $d2 = r1.<h.ST_pointf: double y>;

        $d4 = $d3 * $d2;

        d6 = $d5 + $d4;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7ebsa2s1eoopqj1pp43bh5fw", "dot");

        return d6;

     label3:
        $r2 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("7ebsa2s1eoopqj1pp43bh5fw", "dot");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static double B0(double)
    {
        double d0, d1, $d2, d3;
        java.lang.Throwable $r0;

        d0 := @parameter0: double;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("73nhv3cuxqa9va0puve0ji2d5", "B0");

     label1:
        d1 = 1.0 - d0;

        $d2 = d1 * d1;

        d3 = $d2 * d1;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73nhv3cuxqa9va0puve0ji2d5", "B0");

        return d3;

     label3:
        $r0 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73nhv3cuxqa9va0puve0ji2d5", "B0");

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static double B1(double)
    {
        double d0, d1, $d2, $d3, d4;
        java.lang.Throwable $r0;

        d0 := @parameter0: double;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("jkfs4ak0xr5pzwye7qnm6irp", "B1");

     label1:
        d1 = 1.0 - d0;

        $d2 = 3.0 * d0;

        $d3 = $d2 * d1;

        d4 = $d3 * d1;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("jkfs4ak0xr5pzwye7qnm6irp", "B1");

        return d4;

     label3:
        $r0 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("jkfs4ak0xr5pzwye7qnm6irp", "B1");

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static double B2(double)
    {
        double d0, d1, $d2, $d3, d4;
        java.lang.Throwable $r0;

        d0 := @parameter0: double;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9ziajuqys2xceftdw0vac02g9", "B2");

     label1:
        d1 = 1.0 - d0;

        $d2 = 3.0 * d0;

        $d3 = $d2 * d0;

        d4 = $d3 * d1;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9ziajuqys2xceftdw0vac02g9", "B2");

        return d4;

     label3:
        $r0 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9ziajuqys2xceftdw0vac02g9", "B2");

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static double B3(double)
    {
        double d0, $d1, d2;
        java.lang.Throwable $r0;

        d0 := @parameter0: double;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("5sjstsgkvoou9grsty3y0cnvg", "B3");

     label1:
        $d1 = d0 * d0;

        d2 = $d1 * d0;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5sjstsgkvoou9grsty3y0cnvg", "B3");

        return d2;

     label3:
        $r0 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("5sjstsgkvoou9grsty3y0cnvg", "B3");

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static double B01(double)
    {
        double d0, d1, $d2, $d3, $d4, d5;
        java.lang.Throwable $r0;

        d0 := @parameter0: double;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9hzfapzxcesobeegq4aokksbp", "B01");

     label1:
        d1 = 1.0 - d0;

        $d4 = d1 * d1;

        $d2 = 3.0 * d0;

        $d3 = d1 + $d2;

        d5 = $d4 * $d3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9hzfapzxcesobeegq4aokksbp", "B01");

        return d5;

     label3:
        $r0 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9hzfapzxcesobeegq4aokksbp", "B01");

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static double B23(double)
    {
        double d0, d1, $d2, $d3, $d4, d5;
        java.lang.Throwable $r0;

        d0 := @parameter0: double;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("571cxp9l20eyvqjwdoy9vnc6t", "B23");

     label1:
        d1 = 1.0 - d0;

        $d4 = d0 * d0;

        $d2 = 3.0 * d1;

        $d3 = $d2 + d0;

        d5 = $d4 * $d3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("571cxp9l20eyvqjwdoy9vnc6t", "B23");

        return d5;

     label3:
        $r0 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("571cxp9l20eyvqjwdoy9vnc6t", "B23");

        throw $r0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        smetana.core.jmp_buf $r0;

        $r0 = new smetana.core.jmp_buf;

        specialinvoke $r0.<smetana.core.jmp_buf: void <init>()>();

        <gen.lib.pathplan.route__c: smetana.core.jmp_buf jbuf> = $r0;

        return;
    }
}
