public class net.sourceforge.plantuml.project.ConstantPlan extends java.lang.Object implements net.sourceforge.plantuml.project.LoadPlanable
{
    private final int loadPerInstant;

    private void <init>(int)
    {
        net.sourceforge.plantuml.project.ConstantPlan r0;
        int i0;

        r0 := @this: net.sourceforge.plantuml.project.ConstantPlan;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.ConstantPlan: int loadPerInstant> = i0;

        return;
    }

    public static net.sourceforge.plantuml.project.LoadPlanable normal()
    {
        net.sourceforge.plantuml.project.ConstantPlan $r0;

        $r0 = new net.sourceforge.plantuml.project.ConstantPlan;

        specialinvoke $r0.<net.sourceforge.plantuml.project.ConstantPlan: void <init>(int)>(100);

        return $r0;
    }

    public static net.sourceforge.plantuml.project.LoadPlanable partial(int)
    {
        net.sourceforge.plantuml.project.ConstantPlan $r0;
        int i0;

        i0 := @parameter0: int;

        $r0 = new net.sourceforge.plantuml.project.ConstantPlan;

        specialinvoke $r0.<net.sourceforge.plantuml.project.ConstantPlan: void <init>(int)>(i0);

        return $r0;
    }

    public int getLoadAt(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.ConstantPlan r0;
        int $i0;
        net.sourceforge.plantuml.project.time.Day r1;

        r0 := @this: net.sourceforge.plantuml.project.ConstantPlan;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $i0 = r0.<net.sourceforge.plantuml.project.ConstantPlan: int loadPerInstant>;

        return $i0;
    }
}
