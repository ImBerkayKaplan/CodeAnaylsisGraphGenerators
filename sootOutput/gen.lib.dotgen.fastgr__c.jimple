public class gen.lib.dotgen.fastgr__c extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        gen.lib.dotgen.fastgr__c r0;

        r0 := @this: gen.lib.dotgen.fastgr__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static h.ST_Agedge_s ffe(h.ST_Agnode_s, h.ST_elist, h.ST_Agnode_s, h.ST_elist)
    {
        h.ST_Agnode_s r0, r3;
        h.ST_elist r1, $r2, r4, $r5;
        h.ST_Agedge_s $r6;

        r0 := @parameter0: h.ST_Agnode_s;

        r1 := @parameter1: h.ST_elist;

        r3 := @parameter2: h.ST_Agnode_s;

        r4 := @parameter3: h.ST_elist;

        $r2 = virtualinvoke r1.<h.ST_elist: h.ST_elist copy()>();

        $r5 = virtualinvoke r4.<h.ST_elist: h.ST_elist copy()>();

        $r6 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s ffe_w_(h.ST_Agnode_s,h.ST_elist,h.ST_Agnode_s,h.ST_elist)>(r0, $r2, r3, $r5);

        return $r6;
    }

    private static h.ST_Agedge_s ffe_w_(h.ST_Agnode_s, h.ST_elist, h.ST_Agnode_s, h.ST_elist)
    {
        h.ST_elist r0, r2;
        int $i0, $i1, $i2, $i3, i4, i5;
        smetana.core.CArrayOfStar $r3, $r8;
        java.lang.Object $r4, $r9;
        h.ST_Agedge_s $r5, $r10, r15;
        h.ST_Agnode_s $r6, r7, $r11, r12;
        boolean $z0, $z1;
        java.lang.Throwable $r13;

        r7 := @parameter0: h.ST_Agnode_s;

        r0 := @parameter1: h.ST_elist;

        r12 := @parameter2: h.ST_Agnode_s;

        r2 := @parameter3: h.ST_elist;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("econbrl314rr46qnvvw5e32j7", "ffe");

     label01:
        $i0 = r0.<h.ST_elist: int size>;

        if $i0 <= 0 goto label07;

        $i1 = r2.<h.ST_elist: int size>;

        if $i1 <= 0 goto label07;

        $i3 = r0.<h.ST_elist: int size>;

        $i2 = r2.<h.ST_elist: int size>;

        if $i3 >= $i2 goto label04;

        i4 = 0;

     label02:
        $r8 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r9 = virtualinvoke $r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i4);

        $r10 = (h.ST_Agedge_s) $r9;

        r15 = $r10;

        if $r10 == null goto label08;

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r10);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r11, r12);

        if $z1 == 0 goto label03;

        goto label08;

     label03:
        i4 = i4 + 1;

        goto label02;

     label04:
        i5 = 0;

     label05:
        $r3 = r2.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r4 = virtualinvoke $r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i5);

        $r5 = (h.ST_Agedge_s) $r4;

        r15 = $r5;

        if $r5 == null goto label08;

        $r6 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r5);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r6, r7);

        if $z0 == 0 goto label06;

        goto label08;

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        r15 = null;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("econbrl314rr46qnvvw5e32j7", "ffe");

        return r15;

     label09:
        $r13 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("econbrl314rr46qnvvw5e32j7", "ffe");

        throw $r13;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static h.ST_Agedge_s find_fast_edge(h.ST_Agnode_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, r2;
        h.ST_elist $r1, $r3;
        h.ST_Agedge_s r4;
        java.lang.Throwable $r5;

        r0 := @parameter0: h.ST_Agnode_s;

        r2 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1uygfrgur73lfy9vsjozwwupm", "find_fast_edge");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r0);

        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r2);

        r4 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s ffe(h.ST_Agnode_s,h.ST_elist,h.ST_Agnode_s,h.ST_elist)>(r0, $r1, r2, $r3);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1uygfrgur73lfy9vsjozwwupm", "find_fast_edge");

        return r4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1uygfrgur73lfy9vsjozwwupm", "find_fast_edge");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static h.ST_Agnode_s find_fast_node(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agraph_s r0;
        h.ST_Agnode_s r2, r5;
        boolean $z0;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_Agraph_s;

        r2 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1yw7ahdnxnexnicj552zqyyej", "find_fast_node");

     label1:
        r5 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label2:
        if r5 == null goto label4;

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r5, r2);

        if $z0 == 0 goto label3;

        goto label4;

     label3:
        r5 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r5);

        goto label2;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1yw7ahdnxnexnicj552zqyyej", "find_fast_node");

        return r5;

     label5:
        $r3 := @caughtexception;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1yw7ahdnxnexnicj552zqyyej", "find_fast_node");

        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static h.ST_Agedge_s find_flat_edge(h.ST_Agnode_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, r2;
        h.ST_elist $r1, $r3;
        h.ST_Agedge_s r4;
        java.lang.Throwable $r5;

        r0 := @parameter0: h.ST_Agnode_s;

        r2 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bf1j97keudu416avridkj9fpb", "find_flat_edge");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r0);

        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_in(h.ST_Agnode_s)>(r2);

        r4 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s ffe(h.ST_Agnode_s,h.ST_elist,h.ST_Agnode_s,h.ST_elist)>(r0, $r1, r2, $r3);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bf1j97keudu416avridkj9fpb", "find_flat_edge");

        return r4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bf1j97keudu416avridkj9fpb", "find_flat_edge");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void safe_list_append(h.ST_Agedge_s, h.ST_elist)
    {
        h.ST_elist r0;
        int $i0, i1;
        h.ST_Agedge_s r2;
        smetana.core.CArrayOfStar $r3;
        java.lang.Object $r4;
        boolean $z0;
        java.lang.Throwable $r5;

        r2 := @parameter0: h.ST_Agedge_s;

        r0 := @parameter1: h.ST_elist;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("cttswsffgmw1g710jzvdd3wzn", "safe_list_append");

     label1:
        i1 = 0;

     label2:
        $i0 = r0.<h.ST_elist: int size>;

        if i1 >= $i0 goto label5;

        $r3 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r4 = virtualinvoke $r3.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i1);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r2, $r4);

        if $z0 == 0 goto label4;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cttswsffgmw1g710jzvdd3wzn", "safe_list_append");

        return;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("cslejjtgepjdwlcykfas4fmvz");

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cttswsffgmw1g710jzvdd3wzn", "safe_list_append");

        goto label8;

     label7:
        $r5 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("cttswsffgmw1g710jzvdd3wzn", "safe_list_append");

        throw $r5;

     label8:
        return;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
    }

    public static h.ST_Agedge_s fast_edge(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agnode_s $r1, $r3;
        h.ST_elist $r2, $r4;
        java.lang.Throwable $r6;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8t6gpubo908pz1pqnt1s88lnt", "fast_edge");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>($r1);

        staticinvoke <smetana.core.Macro: void elist_append(h.ST_Agedge_s,h.ST_elist)>(r0, $r2);

        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r4 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>($r3);

        staticinvoke <smetana.core.Macro: void elist_append(h.ST_Agedge_s,h.ST_elist)>(r0, $r4);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8t6gpubo908pz1pqnt1s88lnt", "fast_edge");

        return r0;

     label3:
        $r6 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8t6gpubo908pz1pqnt1s88lnt", "fast_edge");

        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void zapinlist(h.ST_elist, h.ST_Agedge_s)
    {
        h.ST_elist r0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        smetana.core.CArrayOfStar $r1, $r4, $r5, $r8;
        java.lang.Object $r2, $r6;
        h.ST_Agedge_s r3, $r7;
        boolean $z0;
        java.lang.Throwable $r9;

        r0 := @parameter0: h.ST_elist;

        r3 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dxb0q8ajb7iv25aj6zdqnbwh5", "zapinlist");

     label1:
        i5 = 0;

     label2:
        $i0 = r0.<h.ST_elist: int size>;

        if i5 >= $i0 goto label4;

        $r1 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r2 = virtualinvoke $r1.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i5);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r2, r3);

        if $z0 == 0 goto label3;

        $i1 = r0.<h.ST_elist: int size>;

        $i2 = $i1 - 1;

        r0.<h.ST_elist: int size> = $i2;

        $r5 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r4 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $i3 = r0.<h.ST_elist: int size>;

        $r6 = virtualinvoke $r4.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i3);

        $r7 = (h.ST_Agedge_s) $r6;

        virtualinvoke $r5.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i5, $r7);

        $r8 = r0.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $i4 = r0.<h.ST_elist: int size>;

        virtualinvoke $r8.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i4, null);

        goto label4;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dxb0q8ajb7iv25aj6zdqnbwh5", "zapinlist");

        goto label6;

     label5:
        $r9 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dxb0q8ajb7iv25aj6zdqnbwh5", "zapinlist");

        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public static void delete_fast_edge(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agnode_s $r1, $r3;
        h.ST_elist $r2, $r4;
        java.lang.Throwable $r5;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dkv97rr4ytpehp291etaxe9gc", "delete_fast_edge");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>($r1);

        staticinvoke <gen.lib.dotgen.fastgr__c: void zapinlist(h.ST_elist,h.ST_Agedge_s)>($r2, r0);

        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r4 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>($r3);

        staticinvoke <gen.lib.dotgen.fastgr__c: void zapinlist(h.ST_elist,h.ST_Agedge_s)>($r4, r0);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dkv97rr4ytpehp291etaxe9gc", "delete_fast_edge");

        goto label4;

     label3:
        $r5 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dkv97rr4ytpehp291etaxe9gc", "delete_fast_edge");

        throw $r5;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void other_edge(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agnode_s $r1;
        h.ST_elist $r2;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("73oebfcfiescklohgt8mddswc", "other_edge");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>($r1);

        staticinvoke <smetana.core.Macro: void elist_append(h.ST_Agedge_s,h.ST_elist)>(r0, $r2);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73oebfcfiescklohgt8mddswc", "other_edge");

        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("73oebfcfiescklohgt8mddswc", "other_edge");

        throw $r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void safe_other_edge(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agnode_s $r1;
        h.ST_elist $r2;
        java.lang.Throwable $r3;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("4zg1fp1b7bhnx2tbeaij8yeel", "safe_other_edge");

     label1:
        staticinvoke <smetana.core.Macro: void UNSURE_ABOUT(java.lang.String)>("safe_list_append(e, &(ND_other(agtail(e))));");

        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>($r1);

        staticinvoke <gen.lib.dotgen.fastgr__c: void safe_list_append(h.ST_Agedge_s,h.ST_elist)>(r0, $r2);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4zg1fp1b7bhnx2tbeaij8yeel", "safe_other_edge");

        goto label4;

     label3:
        $r3 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4zg1fp1b7bhnx2tbeaij8yeel", "safe_other_edge");

        throw $r3;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static h.ST_Agedge_s new_virtual_edge(h.ST_Agnode_s, h.ST_Agnode_s, h.ST_Agedge_s)
    {
        h.ST_Agedgepair_s $r0;
        h.ST_Agedge_s $r2, $r3, $r4, r7, r10, $r12, $r27;
        h.ST_Agedgeinfo_t $r5;
        h.ST_Agobj_s $r6;
        h.ST_Agnode_s r8, r9, $r13, $r14, $r15, $r16, $r17, $r18, $r25, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        h.ST_port $r19, $r20, $r21, $r22;
        java.lang.Throwable $r23;

        r8 := @parameter0: h.ST_Agnode_s;

        r9 := @parameter1: h.ST_Agnode_s;

        r10 := @parameter2: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("4gd9tmpq70q0rij5otj0k6sn2", "new_virtual_edge");

     label01:
        $r0 = new h.ST_Agedgepair_s;

        specialinvoke $r0.<h.ST_Agedgepair_s: void <init>()>();

        $r2 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s in>;

        staticinvoke <smetana.core.Macro: void AGTYPE(h.ST_Agobj_s,int)>($r2, 3);

        $r3 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s out>;

        staticinvoke <smetana.core.Macro: void AGTYPE(h.ST_Agobj_s,int)>($r3, 2);

        $r4 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s out>;

        $r6 = $r4.<h.ST_Agedge_s: h.ST_Agobj_s base>;

        $r5 = new h.ST_Agedgeinfo_t;

        specialinvoke $r5.<h.ST_Agedgeinfo_t: void <init>()>();

        $r6.<h.ST_Agobj_s: h.ST_Agrec_s data> = $r5;

        r7 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s out>;

        staticinvoke <smetana.core.Macro: void M_agtail(h.ST_Agedge_s,h.ST_Agnode_s)>(r7, r8);

        staticinvoke <smetana.core.Macro: void M_aghead(h.ST_Agedge_s,h.ST_Agnode_s)>(r7, r9);

        staticinvoke <smetana.core.Macro: void ED_edge_type(h.ST_Agedge_s,int)>(r7, 1);

        if r10 == null goto label07;

        $i0 = staticinvoke <smetana.core.Macro: int AGSEQ(h.ST_Agobj_s)>(r10);

        staticinvoke <smetana.core.Macro: void AGSEQ(h.ST_Agobj_s,int)>(r7, $i0);

        $r12 = $r0.<h.ST_Agedgepair_s: h.ST_Agedge_s in>;

        $i1 = staticinvoke <smetana.core.Macro: int AGSEQ(h.ST_Agobj_s)>(r10);

        staticinvoke <smetana.core.Macro: void AGSEQ(h.ST_Agobj_s,int)>($r12, $i1);

        $i2 = staticinvoke <smetana.core.Macro: int ED_count(h.ST_Agedge_s)>(r10);

        staticinvoke <smetana.core.Macro: void ED_count(h.ST_Agedge_s,int)>(r7, $i2);

        $i3 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>(r10);

        staticinvoke <smetana.core.Macro: void ED_xpenalty(h.ST_Agedge_s,int)>(r7, $i3);

        $i4 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r10);

        staticinvoke <smetana.core.Macro: void ED_weight(h.ST_Agedge_s,int)>(r7, $i4);

        $i5 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>(r10);

        staticinvoke <smetana.core.Macro: void ED_minlen(h.ST_Agedge_s,int)>(r7, $i5);

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r7);

        $r14 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r10);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r13, $r14);

        if $z0 == 0 goto label02;

        $r22 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r10);

        staticinvoke <smetana.core.Macro: void ED_tail_port(h.ST_Agedge_s,h.ST_port)>(r7, $r22);

        goto label03;

     label02:
        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r7);

        $r16 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r10);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r15, $r16);

        if $z1 == 0 goto label03;

        $r21 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r10);

        staticinvoke <smetana.core.Macro: void ED_tail_port(h.ST_Agedge_s,h.ST_port)>(r7, $r21);

     label03:
        $r25 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r7);

        $r26 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r10);

        $z3 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r25, $r26);

        if $z3 == 0 goto label04;

        $r20 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r10);

        staticinvoke <smetana.core.Macro: void ED_head_port(h.ST_Agedge_s,h.ST_port)>(r7, $r20);

        goto label05;

     label04:
        $r17 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r7);

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r10);

        $z2 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r17, $r18);

        if $z2 == 0 goto label05;

        $r19 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r10);

        staticinvoke <smetana.core.Macro: void ED_head_port(h.ST_Agedge_s,h.ST_port)>(r7, $r19);

     label05:
        $r27 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r10);

        if $r27 != null goto label06;

        staticinvoke <smetana.core.Macro: void ED_to_virt(h.ST_Agedge_s,h.ST_Agedge_s)>(r10, r7);

     label06:
        staticinvoke <smetana.core.Macro: void ED_to_orig(h.ST_Agedge_s,h.ST_Agedge_s)>(r7, r10);

        goto label08;

     label07:
        staticinvoke <smetana.core.Macro: void ED_minlen(h.ST_Agedge_s,int)>(r7, 1);

        staticinvoke <smetana.core.Macro: void ED_count(h.ST_Agedge_s,int)>(r7, 1);

        staticinvoke <smetana.core.Macro: void ED_xpenalty(h.ST_Agedge_s,int)>(r7, 1);

        staticinvoke <smetana.core.Macro: void ED_weight(h.ST_Agedge_s,int)>(r7, 1);

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4gd9tmpq70q0rij5otj0k6sn2", "new_virtual_edge");

        return r7;

     label09:
        $r23 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4gd9tmpq70q0rij5otj0k6sn2", "new_virtual_edge");

        throw $r23;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static h.ST_Agedge_s virtual_edge(h.ST_Agnode_s, h.ST_Agnode_s, h.ST_Agedge_s)
    {
        h.ST_Agnode_s r0, r1;
        h.ST_Agedge_s r2, $r3, r4;
        java.lang.Throwable $r5;

        r0 := @parameter0: h.ST_Agnode_s;

        r1 := @parameter1: h.ST_Agnode_s;

        r2 := @parameter2: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9obdfflzw4cs2z9r0dng26mvw", "virtual_edge");

     label1:
        $r3 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s new_virtual_edge(h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, r1, r2);

        r4 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s fast_edge(h.ST_Agedge_s)>($r3);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9obdfflzw4cs2z9r0dng26mvw", "virtual_edge");

        return r4;

     label3:
        $r5 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9obdfflzw4cs2z9r0dng26mvw", "virtual_edge");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void fast_node(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, $r2, $r3, $r4, $r6;
        h.ST_Agraph_s r1;
        boolean $z0, $z1;
        java.lang.AssertionError $r5;
        java.lang.Throwable $r7;

        r1 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("98hkec8t6fjk10bjpstumw0ey", "fast_node");

     label1:
        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r1);

        staticinvoke <smetana.core.Macro: void ND_next(h.ST_Agnode_s,h.ST_Agnode_s)>(r0, $r2);

        $r3 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r0);

        if $r3 == null goto label2;

        $r6 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r0);

        staticinvoke <smetana.core.Macro: void ND_prev(h.ST_Agnode_s,h.ST_Agnode_s)>($r6, r0);

     label2:
        staticinvoke <smetana.core.Macro: void GD_nlist(h.ST_Agraph_s,h.ST_Agnode_s)>(r1, r0);

        staticinvoke <smetana.core.Macro: void ND_prev(h.ST_Agnode_s,h.ST_Agnode_s)>(r0, null);

        $z0 = <gen.lib.dotgen.fastgr__c: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r4 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r0);

        $z1 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>(r0, $r4);

        if $z1 != 0 goto label3;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("98hkec8t6fjk10bjpstumw0ey", "fast_node");

        goto label5;

     label4:
        $r7 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("98hkec8t6fjk10bjpstumw0ey", "fast_node");

        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void delete_fast_node(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        boolean $z0;
        h.ST_Agnode_s r0, $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        h.ST_Agraph_s r3;
        java.lang.AssertionError $r10;
        java.lang.Throwable $r11;

        r3 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("emsq7b6s5100lscckzy3ileqd", "delete_fast_node");

     label1:
        $z0 = <gen.lib.dotgen.fastgr__c: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r9 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s find_fast_node(h.ST_Agraph_s,h.ST_Agnode_s)>(r3, r0);

        if $r9 != null goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label2:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r0);

        if $r1 == null goto label3;

        $r7 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r0);

        $r8 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_prev(h.ST_Agnode_s)>(r0);

        staticinvoke <smetana.core.Macro: void ND_prev(h.ST_Agnode_s,h.ST_Agnode_s)>($r7, $r8);

     label3:
        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_prev(h.ST_Agnode_s)>(r0);

        if $r2 == null goto label4;

        $r5 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_prev(h.ST_Agnode_s)>(r0);

        $r6 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r0);

        staticinvoke <smetana.core.Macro: void ND_next(h.ST_Agnode_s,h.ST_Agnode_s)>($r5, $r6);

        goto label5;

     label4:
        $r4 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r0);

        staticinvoke <smetana.core.Macro: void GD_nlist(h.ST_Agraph_s,h.ST_Agnode_s)>(r3, $r4);

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("emsq7b6s5100lscckzy3ileqd", "delete_fast_node");

        goto label7;

     label6:
        $r11 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("emsq7b6s5100lscckzy3ileqd", "delete_fast_node");

        throw $r11;

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    public static h.ST_Agnode_s virtual_node(h.ST_Agraph_s)
    {
        h.ST_Agnode_s $r0;
        h.ST_Agnodeinfo_t $r2;
        h.ST_Agobj_s $r3;
        h.ST_Agraph_s r4, $r5;
        h.ST_elist $r6, $r7;
        int $i0, $i1;
        java.lang.Throwable $r9;

        r4 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("eg08ajzojsm0224btmfi7kdxt", "virtual_node");

     label1:
        $r0 = new h.ST_Agnode_s;

        specialinvoke $r0.<h.ST_Agnode_s: void <init>()>();

        staticinvoke <smetana.core.Macro: void AGTYPE(h.ST_Agobj_s,int)>($r0, 1);

        $r3 = $r0.<h.ST_Agnode_s: h.ST_Agobj_s base>;

        $r2 = new h.ST_Agnodeinfo_t;

        specialinvoke $r2.<h.ST_Agnodeinfo_t: void <init>()>();

        $r3.<h.ST_Agobj_s: h.ST_Agrec_s data> = $r2;

        $r5 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r4);

        $r0.<h.ST_Agnode_s: h.ST_Agraph_s root> = $r5;

        staticinvoke <smetana.core.Macro: void ND_node_type(h.ST_Agnode_s,int)>($r0, 1);

        staticinvoke <smetana.core.Macro: void ND_rw(h.ST_Agnode_s,double)>($r0, 1.0);

        staticinvoke <smetana.core.Macro: void ND_lw(h.ST_Agnode_s,double)>($r0, 1.0);

        staticinvoke <smetana.core.Macro: void ND_ht(h.ST_Agnode_s,double)>($r0, 1.0);

        staticinvoke <smetana.core.Macro: void ND_UF_size(h.ST_Agnode_s,int)>($r0, 1);

        $r6 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>($r0);

        staticinvoke <smetana.core.Macro: void alloc_elist(int,h.ST_elist)>(4, $r6);

        $r7 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>($r0);

        staticinvoke <smetana.core.Macro: void alloc_elist(int,h.ST_elist)>(4, $r7);

        staticinvoke <gen.lib.dotgen.fastgr__c: void fast_node(h.ST_Agraph_s,h.ST_Agnode_s)>(r4, $r0);

        $i0 = staticinvoke <smetana.core.Macro: int GD_n_nodes(h.ST_Agraph_s)>(r4);

        $i1 = $i0 + 1;

        staticinvoke <smetana.core.Macro: void GD_n_nodes(h.ST_Agraph_s,int)>(r4, $i1);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("eg08ajzojsm0224btmfi7kdxt", "virtual_node");

        return $r0;

     label3:
        $r9 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("eg08ajzojsm0224btmfi7kdxt", "virtual_node");

        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void flat_edge(h.ST_Agraph_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agnode_s $r1, $r3;
        h.ST_elist $r2, $r4;
        h.ST_Agraph_s r5, $r6;
        java.lang.Throwable $r7;

        r5 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8dvukicq96g5t3xgdl0ue35mj", "flat_edge");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>($r1);

        staticinvoke <smetana.core.Macro: void elist_append(h.ST_Agedge_s,h.ST_elist)>(r0, $r2);

        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r4 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_in(h.ST_Agnode_s)>($r3);

        staticinvoke <smetana.core.Macro: void elist_append(h.ST_Agedge_s,h.ST_elist)>(r0, $r4);

        staticinvoke <smetana.core.Macro: void GD_has_flat_edges(h.ST_Agraph_s,boolean)>(r5, 1);

        $r6 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r5);

        staticinvoke <smetana.core.Macro: void GD_has_flat_edges(h.ST_Agraph_s,boolean)>($r6, 1);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8dvukicq96g5t3xgdl0ue35mj", "flat_edge");

        goto label4;

     label3:
        $r7 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8dvukicq96g5t3xgdl0ue35mj", "flat_edge");

        throw $r7;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void delete_flat_edge(h.ST_Agedge_s)
    {
        boolean $z0, $z1;
        h.ST_Agedge_s r0, $r1, $r2, $r3, $r4;
        java.lang.AssertionError $r5;
        java.lang.Throwable $r6;
        h.ST_Agnode_s $r8, $r10;
        h.ST_elist $r9, $r11;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("clspalhiuedfnk9g9rlvfqpg7", "delete_flat_edge");

     label1:
        $z0 = <gen.lib.dotgen.fastgr__c: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r0 != null goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_orig(h.ST_Agedge_s)>(r0);

        if $r1 == null goto label3;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_orig(h.ST_Agedge_s)>(r0);

        $r3 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>($r2);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r3, r0);

        if $z1 == 0 goto label3;

        $r4 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_orig(h.ST_Agedge_s)>(r0);

        staticinvoke <smetana.core.Macro: void ED_to_virt(h.ST_Agedge_s,h.ST_Agedge_s)>($r4, null);

     label3:
        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r9 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>($r8);

        staticinvoke <gen.lib.dotgen.fastgr__c: void zapinlist(h.ST_elist,h.ST_Agedge_s)>($r9, r0);

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r11 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_in(h.ST_Agnode_s)>($r10);

        staticinvoke <gen.lib.dotgen.fastgr__c: void zapinlist(h.ST_elist,h.ST_Agedge_s)>($r11, r0);

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("clspalhiuedfnk9g9rlvfqpg7", "delete_flat_edge");

        goto label6;

     label5:
        $r6 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("clspalhiuedfnk9g9rlvfqpg7", "delete_flat_edge");

        throw $r6;

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public static void basic_merge(h.ST_Agedge_s, h.ST_Agedge_s)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        h.ST_Agedge_s r0, r3;
        java.lang.Throwable $r1;

        r0 := @parameter0: h.ST_Agedge_s;

        r3 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dcfpol11cvlt6aaa6phqbp6fo", "basic_merge");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>(r3);

        $i1 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>(r0);

        if $i0 >= $i1 goto label2;

        $i11 = staticinvoke <smetana.core.Macro: int ED_minlen(h.ST_Agedge_s)>(r0);

        staticinvoke <smetana.core.Macro: void ED_minlen(h.ST_Agedge_s,int)>(r3, $i11);

     label2:
        if r3 == null goto label3;

        $i2 = staticinvoke <smetana.core.Macro: int ED_count(h.ST_Agedge_s)>(r3);

        $i3 = staticinvoke <smetana.core.Macro: int ED_count(h.ST_Agedge_s)>(r0);

        $i4 = $i2 + $i3;

        staticinvoke <smetana.core.Macro: void ED_count(h.ST_Agedge_s,int)>(r3, $i4);

        $i5 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>(r3);

        $i6 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>(r0);

        $i7 = $i5 + $i6;

        staticinvoke <smetana.core.Macro: void ED_xpenalty(h.ST_Agedge_s,int)>(r3, $i7);

        $i8 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r3);

        $i9 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r0);

        $i10 = $i8 + $i9;

        staticinvoke <smetana.core.Macro: void ED_weight(h.ST_Agedge_s,int)>(r3, $i10);

        r3 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r3);

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dcfpol11cvlt6aaa6phqbp6fo", "basic_merge");

        goto label5;

     label4:
        $r1 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dcfpol11cvlt6aaa6phqbp6fo", "basic_merge");

        throw $r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void merge_oneway(h.ST_Agedge_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, r1, $r2;
        boolean $z0;
        java.lang.Throwable $r5;

        r1 := @parameter0: h.ST_Agedge_s;

        r0 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6dxgtoii76tmonlnvz4rmiytd", "merge_oneway");

     label1:
        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r1);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r0, $r2);

        if $z0 == 0 goto label2;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("84xxsh1cgsif42hgizyxw36ul");

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("a7fgam0j0jm7bar0mblsv3no4");

     label2:
        staticinvoke <smetana.core.Macro: void ED_to_virt(h.ST_Agedge_s,h.ST_Agedge_s)>(r1, r0);

        staticinvoke <gen.lib.dotgen.fastgr__c: void basic_merge(h.ST_Agedge_s,h.ST_Agedge_s)>(r1, r0);

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6dxgtoii76tmonlnvz4rmiytd", "merge_oneway");

        goto label5;

     label4:
        $r5 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6dxgtoii76tmonlnvz4rmiytd", "merge_oneway");

        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lgen/lib/dotgen/fastgr__c;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <gen.lib.dotgen.fastgr__c: boolean $assertionsDisabled> = $z1;

        return;
    }
}
