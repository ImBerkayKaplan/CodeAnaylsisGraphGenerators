public final class net.sourceforge.plantuml.cucadiagram.entity.EntityImpl extends java.lang.Object implements net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.cucadiagram.IGroup
{
    private final net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory;
    private net.sourceforge.plantuml.cucadiagram.Code code;
    private net.sourceforge.plantuml.cucadiagram.Ident ident;
    private net.sourceforge.plantuml.Url url;
    private final net.sourceforge.plantuml.cucadiagram.Bodier bodier;
    private final java.lang.String uid;
    private net.sourceforge.plantuml.cucadiagram.Display display;
    private net.sourceforge.plantuml.cucadiagram.DisplayPositioned legend;
    private net.sourceforge.plantuml.cucadiagram.LeafType leafType;
    private net.sourceforge.plantuml.cucadiagram.Stereotype stereotype;
    private net.sourceforge.plantuml.cucadiagram.Stereostyles stereostyles;
    private java.lang.String generic;
    private net.sourceforge.plantuml.cucadiagram.IGroup parentContainer;
    private boolean top;
    private net.sourceforge.plantuml.cucadiagram.Code namespace;
    private net.sourceforge.plantuml.cucadiagram.GroupType groupType;
    private boolean nearDecoration;
    private final java.util.Collection portShortNames;
    private int xposition;
    private net.sourceforge.plantuml.svek.IEntityImage svekImage;
    private net.sourceforge.plantuml.graphic.USymbol symbol;
    private final int rawLayout;
    private char concurrentSeparator;
    private net.sourceforge.plantuml.LineLocation codeLine;
    private java.util.Set tags;
    private net.sourceforge.plantuml.cucadiagram.dot.Neighborhood neighborhood;
    private final java.util.Map tips;
    private net.sourceforge.plantuml.graphic.color.Colors colors;
    private net.sourceforge.plantuml.skin.VisibilityModifier visibility;
    private boolean intricated;
    private net.sourceforge.plantuml.cucadiagram.IGroup originalGroup;
    private boolean together;
    static final boolean $assertionsDisabled;

    public void addStereotag(net.sourceforge.plantuml.cucadiagram.Stereotag)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Stereotag r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotag;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Set tags>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.Set stereotags()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.util.Set $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Set tags>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public final boolean isTop()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean top>;

        return $z0;
    }

    public final void setTop(boolean)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        z0 := @parameter0: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean top> = z0;

        return;
    }

    private void <init>(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.entity.EntityFactory, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.Bodier, net.sourceforge.plantuml.cucadiagram.IGroup, java.lang.String, int)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        int $i0, i1;
        java.lang.String $r1, r17;
        net.sourceforge.plantuml.cucadiagram.Display $r2;
        net.sourceforge.plantuml.cucadiagram.Stereostyles $r3;
        java.util.HashSet $r4;
        java.util.LinkedHashSet $r5;
        java.util.LinkedHashMap $r6;
        net.sourceforge.plantuml.graphic.color.Colors $r7;
        net.sourceforge.plantuml.cucadiagram.Ident r8, $r10;
        java.lang.Object $r9, $r13;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory r11;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r12;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Code $r14, r18;
        net.sourceforge.plantuml.cucadiagram.Bodier r15;
        net.sourceforge.plantuml.cucadiagram.IGroup r16;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r8 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r11 := @parameter1: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory;

        r18 := @parameter2: net.sourceforge.plantuml.cucadiagram.Code;

        r15 := @parameter3: net.sourceforge.plantuml.cucadiagram.Bodier;

        r16 := @parameter4: net.sourceforge.plantuml.cucadiagram.IGroup;

        r17 := @parameter5: java.lang.String;

        i1 := @parameter6: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: int getValue()>();

        $r1 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String getUid(java.lang.String,int)>("cl", $i0);

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.lang.String uid> = $r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display empty()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Display display> = $r2;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.DisplayPositioned legend> = null;

        $r3 = <net.sourceforge.plantuml.cucadiagram.Stereostyles: net.sourceforge.plantuml.cucadiagram.Stereostyles NONE>;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereostyles stereostyles> = $r3;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean nearDecoration> = 0;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection portShortNames> = $r4;

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Set tags> = $r5;

        $r6 = new java.util.LinkedHashMap;

        specialinvoke $r6.<java.util.LinkedHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Map tips> = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors empty()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.color.Colors colors> = $r7;

        $r9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r8);

        $r10 = (net.sourceforge.plantuml.cucadiagram.Ident) $r9;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident ident> = $r10;

        $r12 = r11.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: net.sourceforge.plantuml.cucadiagram.CucaDiagram namespaceSeparator>;

        $z0 = virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        r18 = r8;

     label1:
        $r13 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r18);

        $r14 = (net.sourceforge.plantuml.cucadiagram.Code) $r13;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code code> = $r14;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory> = r11;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Bodier bodier> = r15;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer> = r16;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: int rawLayout> = i1;

        return;
    }

    void <init>(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.entity.EntityFactory, net.sourceforge.plantuml.cucadiagram.Bodier, net.sourceforge.plantuml.cucadiagram.IGroup, net.sourceforge.plantuml.cucadiagram.LeafType, java.lang.String, int)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r8;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory r3;
        net.sourceforge.plantuml.cucadiagram.Code r4;
        net.sourceforge.plantuml.cucadiagram.Bodier r5;
        net.sourceforge.plantuml.cucadiagram.IGroup r6;
        java.lang.String r7;
        int i0;
        net.sourceforge.plantuml.cucadiagram.LeafType r9;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r4 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory;

        r5 := @parameter3: net.sourceforge.plantuml.cucadiagram.Bodier;

        r6 := @parameter4: net.sourceforge.plantuml.cucadiagram.IGroup;

        r9 := @parameter5: net.sourceforge.plantuml.cucadiagram.LeafType;

        r7 := @parameter6: java.lang.String;

        i0 := @parameter7: int;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r8 = (net.sourceforge.plantuml.cucadiagram.Ident) $r2;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void <init>(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.entity.EntityFactory,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Bodier,net.sourceforge.plantuml.cucadiagram.IGroup,java.lang.String,int)>($r8, r3, r4, r5, r6, r7, i0);

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType> = r9;

        return;
    }

    void <init>(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.entity.EntityFactory, net.sourceforge.plantuml.cucadiagram.Bodier, net.sourceforge.plantuml.cucadiagram.IGroup, net.sourceforge.plantuml.cucadiagram.GroupType, net.sourceforge.plantuml.cucadiagram.Code, java.lang.String, int)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r8;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory r3;
        net.sourceforge.plantuml.cucadiagram.Code r4, r11;
        net.sourceforge.plantuml.cucadiagram.Bodier r5;
        net.sourceforge.plantuml.cucadiagram.IGroup r6;
        java.lang.String r7;
        int i0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r9;
        net.sourceforge.plantuml.cucadiagram.GroupType r10;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r4 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory;

        r5 := @parameter3: net.sourceforge.plantuml.cucadiagram.Bodier;

        r6 := @parameter4: net.sourceforge.plantuml.cucadiagram.IGroup;

        r10 := @parameter5: net.sourceforge.plantuml.cucadiagram.GroupType;

        r11 := @parameter6: net.sourceforge.plantuml.cucadiagram.Code;

        r7 := @parameter7: java.lang.String;

        i0 := @parameter8: int;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r8 = (net.sourceforge.plantuml.cucadiagram.Ident) $r2;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void <init>(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.entity.EntityFactory,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Bodier,net.sourceforge.plantuml.cucadiagram.IGroup,java.lang.String,int)>($r8, r3, r4, r5, r6, r7, i0);

        $r9 = r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: net.sourceforge.plantuml.cucadiagram.CucaDiagram namespaceSeparator>;

        virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: void checkSameAs(net.sourceforge.plantuml.cucadiagram.Code,java.lang.String,net.sourceforge.plantuml.cucadiagram.CucaDiagram)>(r4, r7, $r9);

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType> = r10;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code namespace> = r11;

        return;
    }

    public void setContainer(net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1, $r3;
        java.lang.Object $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r2;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer> = $r3;

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.LeafType $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        return $r1;
    }

    public boolean muteToType(net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.LeafType r1, $r3, $r4, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26;
        net.sourceforge.plantuml.graphic.USymbol r5;
        net.sourceforge.plantuml.cucadiagram.Bodier $r7;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.LeafType;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.USymbol;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r3 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STILL_UNKNOWN>;

        if $r4 == $r3 goto label3;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        if r1 != $r8 goto label1;

        return 1;

     label1:
        $r10 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r9 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ANNOTATION>;

        if $r10 == $r9 goto label2;

        $r17 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r16 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ABSTRACT_CLASS>;

        if $r17 == $r16 goto label2;

        $r19 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r18 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        if $r19 == $r18 goto label2;

        $r21 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r20 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ENUM>;

        if $r21 == $r20 goto label2;

        $r23 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r22 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType INTERFACE>;

        if $r23 == $r22 goto label2;

        return 0;

     label2:
        $r24 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ANNOTATION>;

        if r1 == $r24 goto label3;

        $r11 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ABSTRACT_CLASS>;

        if r1 == $r11 goto label3;

        $r12 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        if r1 == $r12 goto label3;

        $r13 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ENUM>;

        if r1 == $r13 goto label3;

        $r14 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType INTERFACE>;

        if r1 == $r14 goto label3;

        $r15 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType OBJECT>;

        if r1 == $r15 goto label3;

        return 0;

     label3:
        $r25 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r26 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CLASS>;

        if $r25 != $r26 goto label4;

        $r6 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType OBJECT>;

        if r1 != $r6 goto label4;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Bodier bodier>;

        interfaceinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Bodier: void muteClassToObject()>();

     label4:
        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.USymbol symbol> = r5;

        return 1;
    }

    public net.sourceforge.plantuml.cucadiagram.Code getCode()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Code $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code code>;

        return $r1;
    }

    public java.lang.String getCodeGetName()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Code $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code getCode()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        return $r2;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident getIdent()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Ident $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident ident>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getDisplay()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r4;
        net.sourceforge.plantuml.cucadiagram.Ident $r2;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean intricated>;

        if $z0 == 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident ident>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: net.sourceforge.plantuml.cucadiagram.Display getIntricatedDisplay(net.sourceforge.plantuml.cucadiagram.Ident)>($r2);

        return $r4;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Display display>;

        return $r1;
    }

    public void setDisplay(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Display display> = r1;

        return;
    }

    public java.lang.String getUid()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.lang.String uid>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        return $r1;
    }

    public final void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Stereotype r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype> = r1;

        return;
    }

    public final net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1, $r4;
        net.sourceforge.plantuml.cucadiagram.Ident $r2;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident ident>;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.IGroup)>($r2, $r1);

        return $r4;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r1;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r2;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r22, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34, $r36, $r37;
        net.sourceforge.plantuml.cucadiagram.Code $r5;
        net.sourceforge.plantuml.cucadiagram.Ident $r7, $r26;
        net.sourceforge.plantuml.cucadiagram.Display $r10, $r29;
        net.sourceforge.plantuml.cucadiagram.LeafType $r13, $r32;
        net.sourceforge.plantuml.cucadiagram.GroupType $r16, $r35;
        java.lang.String $r19, $r21, $r23, $r38;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: net.sourceforge.plantuml.cucadiagram.CucaDiagram namespaceSeparator>;

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.lang.String getUid()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r26 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident ident>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r29 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r32 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")[");

        $r35 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r38;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("EntityImpl ");

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code code>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident ident>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r10 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r13 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")[");

        $r16 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] ");

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.lang.String getUid()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r21;
    }

    public final net.sourceforge.plantuml.Url getUrl99()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.Url $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.Url url>;

        return $r1;
    }

    public boolean hasUrl()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r4;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.cucadiagram.Bodier $r2;
        net.sourceforge.plantuml.Url $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Display display>;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Display display>;

        $z2 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.Display: boolean hasUrl()>();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Bodier bodier>;

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Bodier: boolean hasUrl()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.Url url>;

        if $r3 == null goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public final void addUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.Url r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.Url;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.Url url> = r1;

        return;
    }

    public final boolean hasNearDecoration()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean nearDecoration>;

        return $z0;
    }

    public final void setNearDecoration(boolean)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean nearDecoration> = z0;

        return;
    }

    public int getXposition()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $i0 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: int xposition>;

        return $i0;
    }

    public void setXposition(int)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        int i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        i0 := @parameter0: int;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: int xposition> = i0;

        return;
    }

    public final net.sourceforge.plantuml.svek.IEntityImage getSvekImage()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.svek.IEntityImage $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.svek.IEntityImage svekImage>;

        return $r1;
    }

    public final void setSvekImage(net.sourceforge.plantuml.svek.IEntityImage)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.svek.IEntityImage r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.svek.IEntityImage;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.svek.IEntityImage svekImage> = r1;

        return;
    }

    public final void setGeneric(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.lang.String generic> = r1;

        return;
    }

    public final java.lang.String getGeneric()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.lang.String generic>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.Bodier getBodier()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Bodier $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Bodier bodier>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.EntityPosition getEntityPosition()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.LeafType $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        net.sourceforge.plantuml.cucadiagram.IGroup $r9;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Stereotype r10;
        net.sourceforge.plantuml.Guillemet $r11;
        java.lang.String $r12;
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r13, $r14, $r15, $r16, $r17, $r18, $r19;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r1 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType PORT>;

        if $r2 != $r1 goto label1;

        $r19 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORT>;

        return $r19;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r3 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType PORTIN>;

        if $r4 != $r3 goto label2;

        $r18 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTIN>;

        return $r18;

     label2:
        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r5 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType PORTOUT>;

        if $r6 != $r5 goto label3;

        $r17 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTOUT>;

        return $r17;

     label3:
        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STATE>;

        if $r8 == $r7 goto label4;

        $r16 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        return $r16;

     label4:
        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        $z0 = $r9 instanceof net.sourceforge.plantuml.cucadiagram.GroupRoot;

        if $z0 == 0 goto label5;

        $r15 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        return $r15;

     label5:
        r10 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        if r10 != null goto label6;

        $r14 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        return $r14;

     label6:
        $r11 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet DOUBLE_COMPARATOR>;

        $r12 = virtualinvoke r10.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)>($r11);

        $r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition fromStereotype(java.lang.String)>($r12);

        return $r13;
    }

    private void checkGroup()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isGroup()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    private void checkNotGroup()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean $z0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isGroup()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public boolean containsLeafRecurse(net.sourceforge.plantuml.cucadiagram.ILeaf)
    {
        net.sourceforge.plantuml.cucadiagram.ILeaf r0, $r2;
        java.lang.Object $r1, $r7;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r3;
        net.sourceforge.plantuml.cucadiagram.IGroup $r4, r8;
        java.util.Collection $r5;
        java.util.Iterator r6;
        java.lang.IllegalArgumentException $r9;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        $r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r1;

        $z0 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.ILeaf: boolean isGroup()>();

        if $z0 == 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label1:
        specialinvoke r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if $r4 != r3 goto label2;

        return 1;

     label2:
        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getChildren()>();

        r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r7;

        $z2 = interfaceinvoke r8.<net.sourceforge.plantuml.cucadiagram.IGroup: boolean containsLeafRecurse(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r0);

        if $z2 == 0 goto label4;

        return 1;

     label4:
        goto label3;

     label5:
        return 0;
    }

    public java.util.Collection getLeafsDirect()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r3;
        java.util.Collection $r4, $r6;
        java.util.Iterator r5;
        boolean $z0, $z1;
        java.lang.Object $r7;
        net.sourceforge.plantuml.cucadiagram.ILeaf r8;
        net.sourceforge.plantuml.cucadiagram.IGroup $r9;
        java.lang.IllegalStateException $r10;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Collection leafs()>();

        r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r7;

        $z1 = interfaceinvoke r8.<net.sourceforge.plantuml.cucadiagram.ILeaf: boolean isGroup()>();

        if $z1 == 0 goto label2;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label2:
        $r9 = interfaceinvoke r8.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if $r9 != r0 goto label3;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r8);

     label3:
        goto label1;

     label4:
        $r6 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r6;
    }

    public java.util.Collection getChildren()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r3;
        java.util.Collection $r4, $r6;
        java.util.Iterator r5;
        boolean $z0;
        java.lang.Object $r7;
        net.sourceforge.plantuml.cucadiagram.IGroup r8, $r9;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Collection groups()>();

        r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r7;

        if r8 == r0 goto label2;

        $r9 = interfaceinvoke r8.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if $r9 != r0 goto label2;

        interfaceinvoke $r1.<java.util.Collection: boolean add(java.lang.Object)>(r8);

     label2:
        goto label1;

     label3:
        $r6 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r6;
    }

    public void moveEntitiesTo(net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0, $r8, $r12;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r1;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.cucadiagram.IGroup r3, r17, r19;
        java.util.Collection $r4, $r5, $r6;
        java.lang.Object $r7, $r9, $r11;
        java.lang.IllegalStateException $r10;
        java.lang.UnsupportedOperationException $r13;
        java.util.Iterator r14, r16, r18;
        net.sourceforge.plantuml.cucadiagram.ILeaf r15;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r3 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: net.sourceforge.plantuml.cucadiagram.CucaDiagram namespaceSeparator>;

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void moveEntitiesTo1972(net.sourceforge.plantuml.cucadiagram.IGroup)>(r3);

        return;

     label1:
        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $z1 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.IGroup: boolean isGroup()>();

        if $z1 != 0 goto label2;

        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r13;

     label2:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getLeafsDirect()>();

        r14 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r11 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r11;

        $r12 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r15;

        $r12.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer> = r3;

        goto label3;

     label4:
        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.IGroup: java.util.Collection getChildren()>();

        r16 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

        $z3 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r9 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r17 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r9;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label5:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getChildren()>();

        r18 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z4 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label8;

        $r7 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r7;

        if r19 != r3 goto label7;

        goto label6;

     label7:
        $r8 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r19;

        $r8.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer> = r3;

        goto label6;

     label8:
        return;
    }

    private void moveEntitiesTo1972(net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0, $r14, $r15, $r23, $r24;
        net.sourceforge.plantuml.cucadiagram.IGroup r1, r35;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        net.sourceforge.plantuml.cucadiagram.Ident r2, r3, r32, r33, r36, r37;
        java.util.ArrayList $r4, $r7;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r5, $r8, $r11, $r16, $r20, $r25;
        java.util.Collection $r6, $r9;
        java.lang.Object $r10, $r19;
        java.util.Map $r12, $r17, $r21, $r26;
        java.lang.UnsupportedOperationException $r28, $r29;
        java.util.Iterator r30, r34;
        net.sourceforge.plantuml.cucadiagram.ILeaf r31;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $z0 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: boolean isGroup()>();

        if $z0 != 0 goto label1;

        $r29 = new java.lang.UnsupportedOperationException;

        specialinvoke $r29.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r29;

     label1:
        r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident getIdent()>();

        r3 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Ident getIdent()>();

        $z1 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Ident: boolean startsWith(net.sourceforge.plantuml.cucadiagram.Ident)>(r2);

        if $z1 != 0 goto label2;

        $r28 = new java.lang.UnsupportedOperationException;

        specialinvoke $r28.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r28;

     label2:
        $r4 = new java.util.ArrayList;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Collection leafs2()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r30 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r19 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r31 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r19;

        r32 = interfaceinvoke r31.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Ident getIdent()>();

        $z7 = virtualinvoke r32.<net.sourceforge.plantuml.cucadiagram.Ident: boolean equals(java.lang.Object)>(r2);

        if $z7 != 0 goto label4;

        $z8 = virtualinvoke r32.<net.sourceforge.plantuml.cucadiagram.Ident: boolean startsWith(net.sourceforge.plantuml.cucadiagram.Ident)>(r2);

        if $z8 == 0 goto label4;

        $z9 = virtualinvoke r32.<net.sourceforge.plantuml.cucadiagram.Ident: boolean startsWith(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

        if $z9 != 0 goto label4;

        $r20 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r21 = $r20.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Map leafs2>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r32);

        r33 = virtualinvoke r32.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident move(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Ident)>(r2, r3);

        $r23 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r31;

        $r23.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident ident> = r33;

        $r24 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r31;

        $r24.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code code> = r33;

        $r25 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r26 = $r25.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Map leafs2>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r33, r31);

     label4:
        goto label3;

     label5:
        $r7 = new java.util.ArrayList;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Collection groups2()>();

        specialinvoke $r7.<java.util.ArrayList: void <init>(java.util.Collection)>($r9);

        r34 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r10 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r10;

        r36 = interfaceinvoke r35.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Ident getIdent()>();

        $z4 = virtualinvoke r36.<net.sourceforge.plantuml.cucadiagram.Ident: boolean equals(java.lang.Object)>(r2);

        if $z4 != 0 goto label7;

        $z5 = virtualinvoke r36.<net.sourceforge.plantuml.cucadiagram.Ident: boolean startsWith(net.sourceforge.plantuml.cucadiagram.Ident)>(r2);

        if $z5 == 0 goto label7;

        $z6 = virtualinvoke r36.<net.sourceforge.plantuml.cucadiagram.Ident: boolean startsWith(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

        if $z6 != 0 goto label7;

        $r11 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r12 = $r11.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Map groups2>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r36);

        r37 = virtualinvoke r36.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident move(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Ident)>(r2, r3);

        $r14 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r35;

        $r14.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident ident> = r37;

        $r15 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r35;

        $r15.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code code> = r37;

        $r16 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r17 = $r16.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Map groups2>;

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r35);

     label7:
        goto label6;

     label8:
        return;
    }

    public int size()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getLeafsDirect()>();

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        return $i0;
    }

    public net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.GroupType $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.Code getNamespace()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Code $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code namespace>;

        return $r1;
    }

    public net.sourceforge.plantuml.svek.PackageStyle getPackageStyle()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r1, $r2;
        net.sourceforge.plantuml.svek.PackageStyle $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.svek.PackageStyle getPackageStyle()>();

        return $r3;
    }

    public boolean isGroup()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.GroupType $r1, $r4, $r9;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.LeafType $r2, $r5, $r7;
        java.lang.IllegalStateException $r3, $r8;
        java.lang.AssertionError $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType>;

        if $r1 == null goto label1;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        if $r7 == null goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label1:
        $z0 = <net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType>;

        if $r4 == null goto label2;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        if $r5 == null goto label2;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label2:
        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType>;

        if $r9 == null goto label3;

        return 1;

     label3:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType>;

        if $r2 == null goto label4;

        return 0;

     label4:
        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;
    }

    public void overrideImage(net.sourceforge.plantuml.svek.IEntityImage, net.sourceforge.plantuml.cucadiagram.LeafType)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.svek.IEntityImage r1;
        java.util.ArrayList $r2, $r9, $r20;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r3, $r5, $r7, $r10, $r12, $r16, $r18, $r21, $r27, $r30;
        java.util.List $r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r6;
        java.lang.String $r8, $r17;
        java.util.Collection $r11, $r22;
        net.sourceforge.plantuml.cucadiagram.LeafType r13;
        java.lang.Object $r14, $r23, $r29;
        net.sourceforge.plantuml.cucadiagram.IGroup $r15;
        net.sourceforge.plantuml.cucadiagram.Ident $r19, $r24, $r25, $r26, $r28;
        java.util.Iterator r31, r33, r35;
        net.sourceforge.plantuml.cucadiagram.Link r32;
        net.sourceforge.plantuml.cucadiagram.ILeaf r34, r36;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.svek.IEntityImage;

        r13 := @parameter1: net.sourceforge.plantuml.cucadiagram.LeafType;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.svek.IEntityImage svekImage> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.Url url> = null;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.List getLinks()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r31 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r29 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (net.sourceforge.plantuml.cucadiagram.Link) $r29;

        $z5 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean isPureInnerLink12(net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.Link)>(r0, r32);

        if $z5 == 0 goto label02;

        $r30 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        virtualinvoke $r30.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: void removeLink(net.sourceforge.plantuml.cucadiagram.Link)>(r32);

     label02:
        goto label01;

     label03:
        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r6 = $r5.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: net.sourceforge.plantuml.cucadiagram.CucaDiagram namespaceSeparator>;

        $z1 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: boolean V1972()>();

        if $z1 == 0 goto label07;

        $r18 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident getIdent()>();

        virtualinvoke $r18.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: void removeGroup(net.sourceforge.plantuml.cucadiagram.Ident)>($r19);

        $r20 = new java.util.ArrayList;

        $r21 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Collection leafs()>();

        specialinvoke $r20.<java.util.ArrayList: void <init>(java.util.Collection)>($r22);

        r33 = virtualinvoke $r20.<java.util.ArrayList: java.util.Iterator iterator()>();

     label04:
        $z3 = interfaceinvoke r33.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label06;

        $r23 = interfaceinvoke r33.<java.util.Iterator: java.lang.Object next()>();

        r34 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r23;

        if r0 == r34 goto label05;

        $r24 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Ident getIdent()>();

        $r25 = interfaceinvoke r34.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Ident getIdent()>();

        $r26 = virtualinvoke $r25.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident parent()>();

        $z4 = virtualinvoke $r24.<net.sourceforge.plantuml.cucadiagram.Ident: boolean equals(java.lang.Object)>($r26);

        if $z4 == 0 goto label05;

        $r27 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r28 = interfaceinvoke r34.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Ident getIdent()>();

        virtualinvoke $r27.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: void removeLeaf(net.sourceforge.plantuml.cucadiagram.Ident)>($r28);

     label05:
        goto label04;

     label06:
        goto label10;

     label07:
        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.lang.String getCodeGetName()>();

        virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: void removeGroup(java.lang.String)>($r8);

        $r9 = new java.util.ArrayList;

        $r10 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.Collection leafs()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>($r11);

        r35 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r35.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r14 = interfaceinvoke r35.<java.util.Iterator: java.lang.Object next()>();

        r36 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r14;

        if r0 == r36 goto label09;

        $r15 = interfaceinvoke r36.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if r0 != $r15 goto label09;

        $r16 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r17 = interfaceinvoke r36.<net.sourceforge.plantuml.cucadiagram.ILeaf: java.lang.String getCodeGetName()>();

        virtualinvoke $r16.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: void removeLeaf(java.lang.String)>($r17);

     label09:
        goto label08;

     label10:
        $r12 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: void addLeaf(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r0);

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType> = null;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType> = r13;

        return;
    }

    void muteToGroup(net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.GroupType, net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Code r2;
        net.sourceforge.plantuml.cucadiagram.GroupType r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Code;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.GroupType;

        r1 := @parameter2: net.sourceforge.plantuml.cucadiagram.IGroup;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $z0 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: boolean isGroup()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Code namespace> = r2;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType groupType> = r3;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType leafType> = null;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer> = r1;

        return;
    }

    public net.sourceforge.plantuml.graphic.USymbol getUSymbol()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.LeafType $r1, $r2;
        net.sourceforge.plantuml.graphic.USymbol $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r2 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType CIRCLE>;

        if $r1 != $r2 goto label1;

        $r4 = <net.sourceforge.plantuml.graphic.USymbols: net.sourceforge.plantuml.graphic.USymbol INTERFACE>;

        return $r4;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.USymbol symbol>;

        return $r3;
    }

    public void setUSymbol(net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.graphic.USymbol r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.USymbol;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.USymbol symbol> = r1;

        return;
    }

    public net.sourceforge.plantuml.svek.SingleStrategy getSingleStrategy()
    {
        net.sourceforge.plantuml.svek.SingleStrategy $r0;
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r1;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r0 = <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy SQUARE>;

        return $r0;
    }

    public boolean isHidden()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer>;

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.IGroup: boolean isHidden()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isHiddenInternal()>();

        return $z0;
    }

    private boolean isHiddenInternal()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r1, $r2;
        java.util.Collection $r3, $r4, $r5;
        int $i0;
        java.lang.Object $r6, $r8;
        java.util.Iterator r10, r12;
        net.sourceforge.plantuml.cucadiagram.ILeaf r11;
        net.sourceforge.plantuml.cucadiagram.IGroup r13;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isGroup()>();

        if $z0 == 0 goto label9;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $z2 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: boolean isHidden(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r0);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getLeafsDirect()>();

        $i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getLeafsDirect()>();

        r10 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r8 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r11 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r8;

        $r9 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r11;

        $z6 = specialinvoke $r9.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isHiddenInternal()>();

        if $z6 != 0 goto label4;

        return 0;

     label4:
        goto label3;

     label5:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getChildren()>();

        r12 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z4 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label8;

        $r6 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r13 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r6;

        $r7 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r13;

        $z5 = specialinvoke $r7.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isHiddenInternal()>();

        if $z5 != 0 goto label7;

        return 0;

     label7:
        goto label6;

     label8:
        return 1;

     label9:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $z1 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: boolean isHidden(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r0);

        return $z1;
    }

    public boolean isRemoved()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup parentContainer>;

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.IGroup: boolean isRemoved()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isRemovedInternal()>();

        return $z0;
    }

    private boolean isRemovedInternal()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r1, $r2;
        java.util.Collection $r3, $r4, $r5, $r10;
        int $i0, $i1;
        java.lang.Object $r6, $r8;
        java.util.Iterator r11, r13;
        net.sourceforge.plantuml.cucadiagram.ILeaf r12;
        net.sourceforge.plantuml.cucadiagram.IGroup r14;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isGroup()>();

        if $z0 == 0 goto label9;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $z2 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: boolean isRemoved(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r0);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getLeafsDirect()>();

        $i0 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        if $i0 != 0 goto label2;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getChildren()>();

        $i1 = interfaceinvoke $r10.<java.util.Collection: int size()>();

        if $i1 != 0 goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getLeafsDirect()>();

        r11 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z6 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label5;

        $r8 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r8;

        $r9 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r12;

        $z5 = specialinvoke $r9.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isRemovedInternal()>();

        if $z5 != 0 goto label4;

        return 0;

     label4:
        goto label3;

     label5:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection getChildren()>();

        r13 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke r13.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r6 = interfaceinvoke r13.<java.util.Iterator: java.lang.Object next()>();

        r14 = (net.sourceforge.plantuml.cucadiagram.IGroup) $r6;

        $r7 = (net.sourceforge.plantuml.cucadiagram.entity.EntityImpl) r14;

        $z4 = specialinvoke $r7.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isRemovedInternal()>();

        if $z4 != 0 goto label7;

        return 0;

     label7:
        goto label6;

     label8:
        return 1;

     label9:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $z1 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: boolean isRemoved(net.sourceforge.plantuml.cucadiagram.ILeaf)>(r0);

        return $z1;
    }

    public boolean isAloneAndUnlinked()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r1;
        java.util.List $r2;
        java.util.Iterator r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.cucadiagram.Link r5;
        net.sourceforge.plantuml.cucadiagram.LinkType $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean isGroup()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory entityFactory>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: java.util.List getLinks()>();

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.cucadiagram.Link) $r4;

        $z2 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Link: boolean contains(net.sourceforge.plantuml.cucadiagram.IEntity)>(r0);

        if $z2 == 0 goto label3;

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        $z3 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.LinkType: boolean isInvisible()>();

        if $z3 != 0 goto label3;

        return 0;

     label3:
        goto label2;

     label4:
        return 1;
    }

    private net.sourceforge.plantuml.FontParam getTitleFontParam()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.graphic.USymbol $r1, $r4;
        net.sourceforge.plantuml.cucadiagram.GroupType $r2, $r3;
        net.sourceforge.plantuml.FontParam $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.USymbol symbol>;

        if $r1 == null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.USymbol symbol>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.USymbol: net.sourceforge.plantuml.FontParam getFontParam()>();

        return $r5;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r3 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType STATE>;

        if $r2 != $r3 goto label2;

        $r6 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam STATE>;

        goto label3;

     label2:
        $r6 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PACKAGE>;

     label3:
        return $r6;
    }

    public net.sourceforge.plantuml.graphic.FontConfiguration getFontConfigurationForTitle(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.FontParam r1, $r5, $r9;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r3, $r7;
        net.sourceforge.plantuml.FontParam[] $r4, $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor r6, $r12;
        net.sourceforge.plantuml.ugraphic.UFont r10;
        net.sourceforge.plantuml.graphic.FontConfiguration $r11;
        boolean $z0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.FontParam getTitleFontParam()>();

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r4 = newarray (net.sourceforge.plantuml.FontParam)[2];

        $r4[0] = r1;

        $r5 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PACKAGE>;

        $r4[1] = $r5;

        r6 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getFontHtmlColor(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.FontParam[])>($r3, $r4);

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r8 = newarray (net.sourceforge.plantuml.FontParam)[2];

        $r8[0] = r1;

        $r9 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PACKAGE>;

        $r8[1] = $r9;

        r10 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>($r7, 1, $r8);

        $r11 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r12 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getHyperlinkColor()>();

        $z0 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: boolean useUnderlineForHyperlink()>();

        $i0 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: int getTabSize()>();

        specialinvoke $r11.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean,int)>(r10, r6, $r12, $z0, $i0);

        return $r11;
    }

    public final int getRawLayout()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $i0 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: int rawLayout>;

        return $i0;
    }

    public char getConcurrentSeparator()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        char $c0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $c0 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: char concurrentSeparator>;

        return $c0;
    }

    public void setConcurrentSeparator(char)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        char c0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        c0 := @parameter0: char;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: char concurrentSeparator> = c0;

        return;
    }

    public void setNeighborhood(net.sourceforge.plantuml.cucadiagram.dot.Neighborhood)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.dot.Neighborhood r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.dot.Neighborhood;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.dot.Neighborhood neighborhood> = r1;

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.dot.Neighborhood getNeighborhood()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.dot.Neighborhood $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.dot.Neighborhood neighborhood>;

        return $r1;
    }

    public void putTip(java.lang.String, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.lang.String r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        java.util.Map $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Map tips>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public java.util.Map getTips()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.util.Map $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Map tips>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.graphic.color.Colors getColors()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.graphic.color.Colors $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.color.Colors colors>;

        return $r1;
    }

    public void setColors(net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.graphic.color.Colors r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.color.Colors;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.color.Colors colors> = r1;

        return;
    }

    public void setSpecificColorTOBEREMOVED(net.sourceforge.plantuml.graphic.color.ColorType, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0;
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r1;
        net.sourceforge.plantuml.graphic.color.ColorType r2;
        net.sourceforge.plantuml.graphic.color.Colors $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.color.ColorType;

        r0 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r0 == null goto label1;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>(r2, r0);

        r1.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.graphic.color.Colors colors> = $r4;

     label1:
        return;
    }

    public java.util.Collection getPortShortNames()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.util.Collection $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkNotGroup()>();

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection portShortNames>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public void addPortShortName(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.lang.String r1;
        java.util.Collection $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: java.util.Collection portShortNames>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void setVisibilityModifier(net.sourceforge.plantuml.skin.VisibilityModifier)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.skin.VisibilityModifier r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.skin.VisibilityModifier;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.skin.VisibilityModifier visibility> = r1;

        return;
    }

    public net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.skin.VisibilityModifier visibility>;

        return $r1;
    }

    public void setLegend(net.sourceforge.plantuml.cucadiagram.DisplayPositioned)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.DisplayPositioned;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: void checkGroup()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.DisplayPositioned legend> = r1;

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.DisplayPositioned legend>;

        return $r1;
    }

    public void setIntricated(boolean)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean intricated> = z0;

        return;
    }

    public void setOriginalGroup(net.sourceforge.plantuml.cucadiagram.IGroup)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IGroup;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup originalGroup> = r1;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.DisplayPositioned legend> = $r2;

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.IGroup getOriginalGroup()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.IGroup originalGroup>;

        return $r1;
    }

    public void setThisIsTogether()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean together> = 1;

        return;
    }

    public java.lang.String getCodeLine()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.LineLocation $r1, $r4;
        java.lang.StringBuilder $r2, $r3, $r5;
        int $i0;
        java.lang.String $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.LineLocation codeLine>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.LineLocation codeLine>;

        $i0 = interfaceinvoke $r4.<net.sourceforge.plantuml.LineLocation: int getPosition()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void setCodeLine(net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.LineLocation r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: net.sourceforge.plantuml.LineLocation;

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.LineLocation codeLine> = r1;

        return;
    }

    public void setStereostyle(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        java.lang.String r1;
        net.sourceforge.plantuml.cucadiagram.Stereostyles $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereostyles: net.sourceforge.plantuml.cucadiagram.Stereostyles build(java.lang.String)>(r1);

        r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereostyles stereostyles> = $r2;

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.Stereostyles getStereostyles()
    {
        net.sourceforge.plantuml.cucadiagram.entity.EntityImpl r0;
        net.sourceforge.plantuml.cucadiagram.Stereostyles $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.entity.EntityImpl;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: net.sourceforge.plantuml.cucadiagram.Stereostyles stereostyles>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/cucadiagram/entity/EntityImpl;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.cucadiagram.entity.EntityImpl: boolean $assertionsDisabled> = $z1;

        return;
    }
}
