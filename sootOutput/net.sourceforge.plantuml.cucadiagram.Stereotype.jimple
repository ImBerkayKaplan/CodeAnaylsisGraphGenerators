public class net.sourceforge.plantuml.cucadiagram.Stereotype extends java.lang.Object implements java.lang.CharSequence
{
    private final double radius;
    private final net.sourceforge.plantuml.ugraphic.UFont circledFont;
    private final boolean automaticPackageStyle;
    private final net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration;
    static final boolean $assertionsDisabled;

    private void <init>(boolean, java.lang.String, net.sourceforge.plantuml.cucadiagram.StereotypeDecoration, double, net.sourceforge.plantuml.ugraphic.UFont)
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        boolean z0;
        double d0;
        net.sourceforge.plantuml.ugraphic.UFont r1;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration r2;
        java.lang.String r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        z0 := @parameter0: boolean;

        r3 := @parameter1: java.lang.String;

        r2 := @parameter2: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration;

        d0 := @parameter3: double;

        r1 := @parameter4: net.sourceforge.plantuml.ugraphic.UFont;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: boolean automaticPackageStyle> = z0;

        r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: double radius> = d0;

        r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.ugraphic.UFont circledFont> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration> = r2;

        return;
    }

    private static void checkLabel(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("<<");

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(">>");

        if $z1 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r0);

        throw $r1;

     label2:
        return;
    }

    public static net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)
    {
        java.lang.String r0;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String,boolean)>(r0, 1);

        return $r1;
    }

    public static net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String, boolean)
    {
        java.lang.String r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration r1;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r2;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: void checkLabel(java.lang.String)>(r0);

        r1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration buildSimple(java.lang.String)>(r0);

        $r2 = new net.sourceforge.plantuml.cucadiagram.Stereotype;

        specialinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: void <init>(boolean,java.lang.String,net.sourceforge.plantuml.cucadiagram.StereotypeDecoration,double,net.sourceforge.plantuml.ugraphic.UFont)>(z0, r0, r1, 0.0, null);

        return $r2;
    }

    public static net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String, double, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColorSet) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        java.lang.String r0;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r1;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration r2;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r3;
        double d0;
        net.sourceforge.plantuml.ugraphic.UFont r4;

        r0 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r4 := @parameter2: net.sourceforge.plantuml.ugraphic.UFont;

        r1 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: void checkLabel(java.lang.String)>(r0);

        r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration buildComplex(java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColorSet)>(r0, r1);

        $r3 = new net.sourceforge.plantuml.cucadiagram.Stereotype;

        specialinvoke $r3.<net.sourceforge.plantuml.cucadiagram.Stereotype: void <init>(boolean,java.lang.String,net.sourceforge.plantuml.cucadiagram.StereotypeDecoration,double,net.sourceforge.plantuml.ugraphic.UFont)>(1, r0, r2, d0, r4);

        return $r3;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: net.sourceforge.plantuml.ugraphic.color.HColor htmlColor>;

        return $r2;
    }

    public char getCharacter()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1;
        char $c0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $c0 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: char character>;

        return $c0;
    }

    public final net.sourceforge.plantuml.graphic.TextBlock getSprite(net.sourceforge.plantuml.SpriteContainer)
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1, $r4, $r8;
        java.lang.String $r2, $r5;
        net.sourceforge.plantuml.SpriteContainer r3;
        net.sourceforge.plantuml.sprite.Sprite r6;
        net.sourceforge.plantuml.ugraphic.color.HColor $r7;
        double $d0;
        net.sourceforge.plantuml.graphic.TextBlock $r9;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r3 := @parameter0: net.sourceforge.plantuml.SpriteContainer;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String spriteName>;

        if $r2 == null goto label1;

        if r3 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r5 = $r4.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String spriteName>;

        r6 = interfaceinvoke r3.<net.sourceforge.plantuml.SpriteContainer: net.sourceforge.plantuml.sprite.Sprite getSprite(java.lang.String)>($r5);

        if r6 != null goto label3;

        return null;

     label3:
        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor()>();

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $d0 = $r8.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: double spriteScale>;

        $r9 = interfaceinvoke r6.<net.sourceforge.plantuml.sprite.Sprite: net.sourceforge.plantuml.graphic.TextBlock asTextBlock(net.sourceforge.plantuml.ugraphic.color.HColor,double)>($r7, $d0);

        return $r9;
    }

    public boolean isWithOOSymbol()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r3 = "<<O-O>>";

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        return $z0;
    }

    public java.util.List getMultipleLabels()
    {
        java.util.ArrayList $r0;
        java.util.regex.Pattern r2;
        net.sourceforge.plantuml.cucadiagram.Stereotype r3;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r4;
        java.lang.String $r5, $r8;
        java.util.regex.Matcher r6;
        boolean $z0;
        java.util.List $r7;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\<\\<\\s?((?:\\<&\\w+\\>|[^<>])+?)\\s?\\>\\>");

        $r4 = r3.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r5 = $r4.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        r6 = virtualinvoke r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

     label1:
        $z0 = virtualinvoke r6.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label2;

        $r8 = virtualinvoke r6.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r7 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r7;
    }

    public boolean isSpotted()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1;
        char $c0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $c0 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: char character>;

        if $c0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1, $r3, $r6, $r10;
        char $c0, $c1;
        java.lang.StringBuilder $r2, $r4, $r5, $r8;
        java.lang.String $r7, $r9, $r11;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $c0 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: char character>;

        if $c0 != 0 goto label1;

        $r10 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r11 = $r10.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        return $r11;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $c1 = $r3.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: char character>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r7 = $r6.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public char charAt(int)
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        java.lang.String $r1;
        int i0;
        char $c1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String toString()>();

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        return $c1;
    }

    public int length()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        java.lang.String $r1;
        int i0, i1;
        java.lang.CharSequence $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        return $r2;
    }

    public double getRadius()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $d0 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: double radius>;

        return $d0;
    }

    public final net.sourceforge.plantuml.ugraphic.UFont getCircledFont()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.ugraphic.UFont $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.ugraphic.UFont circledFont>;

        return $r1;
    }

    public java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1, $r4, $r7, $r11;
        java.lang.String $r2, $r5, $r6, $r8, $r12, $r13, $r14, $r17, $r18;
        net.sourceforge.plantuml.Guillemet r3;
        java.lang.StringBuilder $r9, $r10, $r15, $r16;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r3 := @parameter0: net.sourceforge.plantuml.Guillemet;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: boolean isWithOOSymbol()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String spriteName>;

        if $r2 == null goto label2;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r8 = $r7.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String spriteName>;

        $z1 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("archimate/");

        if $z1 == 0 goto label2;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<<");

        $r11 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r13 = $r11.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String spriteName>;

        $r12 = "archimate/";

        $i0 = virtualinvoke $r12.<java.lang.String: int length()>();

        $r14 = virtualinvoke $r13.<java.lang.String: java.lang.String substring(int)>($i0);

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r18 = virtualinvoke r3.<net.sourceforge.plantuml.Guillemet: java.lang.String manageGuillemet(java.lang.String)>($r17);

        return $r18;

     label2:
        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r5 = $r4.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $r6 = virtualinvoke r3.<net.sourceforge.plantuml.Guillemet: java.lang.String manageGuillemet(java.lang.String)>($r5);

        return $r6;
    }

    public java.util.List getLabels(net.sourceforge.plantuml.Guillemet)
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.Guillemet $r1, r3;
        java.lang.String r2;
        java.util.List $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r3 := @parameter0: net.sourceforge.plantuml.Guillemet;

        $r1 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet DOUBLE_COMPARATOR>;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)>($r1);

        if r2 != null goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label1:
        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.util.List cutLabels(java.lang.String,net.sourceforge.plantuml.Guillemet)>(r2, r3);

        return $r4;
    }

    public java.util.List getStyles(net.sourceforge.plantuml.style.StyleBuilder)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Stereotype r2;
        java.util.List $r3, $r5;
        java.util.Iterator r4;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.String r7;
        net.sourceforge.plantuml.style.StyleBuilder r8;
        net.sourceforge.plantuml.style.Style r9;
        java.lang.AssertionError $r10;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r8 := @parameter0: net.sourceforge.plantuml.style.StyleBuilder;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getStyleNames()>();

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        r9 = virtualinvoke r8.<net.sourceforge.plantuml.style.StyleBuilder: net.sourceforge.plantuml.style.Style createStyle(java.lang.String)>(r7);

        $z1 = <net.sourceforge.plantuml.cucadiagram.Stereotype: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        if r9 != null goto label2;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label2:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r9);

        goto label1;

     label3:
        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r0);

        return $r5;
    }

    public java.util.List getStyleNames()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.Guillemet $r1;
        java.util.List r2, $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet NONE>;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getLabels(net.sourceforge.plantuml.Guillemet)>($r1);

        if r2 != null goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r4;

     label1:
        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        return $r3;
    }

    public net.sourceforge.plantuml.svek.PackageStyle getPackageStyle()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        boolean $z0, $z1, $z2;
        java.util.EnumSet $r1;
        java.util.Iterator r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.svek.PackageStyle r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9, $r11;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r10;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: boolean automaticPackageStyle>;

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "Lnet/sourceforge/plantuml/svek/PackageStyle;");

        r2 = virtualinvoke $r1.<java.util.EnumSet: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.svek.PackageStyle) $r3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<<");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r11 = $r10.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z2 == 0 goto label3;

        return r4;

     label3:
        goto label2;

     label4:
        return null;
    }

    public boolean isBiddableOrUncertain()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1, $r3, $r5;
        java.lang.String $r2, $r4, $r6;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<B>>");

        if $z0 != 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r4 = $r3.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Biddable>>");

        if $z1 != 0 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r6 = $r5.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Uncertain>>");

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean isCausal()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<C>>");

        if $z0 != 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r4 = $r3.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Causal>>");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean isLexicalOrGiven()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1, $r3, $r5, $r7;
        java.lang.String $r2, $r4, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<L>>");

        if $z0 != 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r4 = $r3.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Lexical>>");

        if $z1 != 0 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r6 = $r5.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<X>>");

        if $z2 != 0 goto label1;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r8 = $r7.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Given>>");

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public boolean isDesignedOrSolved()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1, $r3, $r5, $r7;
        java.lang.String $r2, $r4, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<D>>");

        if $z0 != 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r4 = $r3.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Designed>>");

        if $z1 != 0 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r6 = $r5.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Nested>>");

        if $z2 != 0 goto label1;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r8 = $r7.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Solved>>");

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public boolean isMachineOrSpecification()
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        net.sourceforge.plantuml.cucadiagram.StereotypeDecoration $r1, $r3, $r5, $r7, $r9;
        java.lang.String $r2, $r4, $r6, $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r2 = $r1.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("M");

        if $z0 != 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r4 = $r3.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Machine>>");

        if $z1 != 0 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r6 = $r5.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<S>>");

        if $z2 != 0 goto label1;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r8 = $r7.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Spec>>");

        if $z3 != 0 goto label1;

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.StereotypeDecoration decoration>;

        $r10 = $r9.<net.sourceforge.plantuml.cucadiagram.StereotypeDecoration: java.lang.String label>;

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("<<Specification>>");

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/cucadiagram/Stereotype;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.cucadiagram.Stereotype: boolean $assertionsDisabled> = $z1;

        return;
    }
}
