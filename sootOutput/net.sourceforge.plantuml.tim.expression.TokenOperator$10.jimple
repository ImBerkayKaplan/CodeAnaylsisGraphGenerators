final enum class net.sourceforge.plantuml.tim.expression.TokenOperator$10 extends net.sourceforge.plantuml.tim.expression.TokenOperator
{

    void <init>(java.lang.String, int, int, java.lang.String)
    {
        net.sourceforge.plantuml.tim.expression.TokenOperator$10 r0;
        java.lang.String r1, r2;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.tim.expression.TokenOperator$10;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.tim.expression.TokenOperator: void <init>(java.lang.String,int,int,java.lang.String,net.sourceforge.plantuml.tim.expression.TokenOperator$1)>(r1, i0, i1, r2, null);

        return;
    }

    public net.sourceforge.plantuml.tim.expression.TValue operate(net.sourceforge.plantuml.tim.expression.TValue, net.sourceforge.plantuml.tim.expression.TValue)
    {
        net.sourceforge.plantuml.tim.expression.TValue r0, r1, $r2;
        net.sourceforge.plantuml.tim.expression.TokenOperator$10 r3;

        r3 := @this: net.sourceforge.plantuml.tim.expression.TokenOperator$10;

        r0 := @parameter0: net.sourceforge.plantuml.tim.expression.TValue;

        r1 := @parameter1: net.sourceforge.plantuml.tim.expression.TValue;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.tim.expression.TValue: net.sourceforge.plantuml.tim.expression.TValue notEquals(net.sourceforge.plantuml.tim.expression.TValue)>(r1);

        return $r2;
    }
}
