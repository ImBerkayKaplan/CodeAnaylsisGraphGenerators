public class net.sourceforge.plantuml.ditaa.PSystemDitaa extends net.sourceforge.plantuml.AbstractPSystem
{
    private java.lang.Object processingOptions;
    private final boolean dropShadows;
    private final java.lang.String data;
    private final float scale;
    private final boolean performSeparationOfCommonEdges;

    public void <init>(net.sourceforge.plantuml.core.UmlSource, java.lang.String, boolean, boolean, float)
    {
        net.sourceforge.plantuml.ditaa.PSystemDitaa r0;
        net.sourceforge.plantuml.core.UmlSource r1;
        java.lang.String r2;
        boolean z0, z1;
        java.lang.Class $r3, $r6, $r8;
        java.lang.Object $r4, $r5, $r11;
        java.lang.Class[] $r7;
        java.lang.reflect.Method $r9;
        java.lang.Object[] $r10;
        java.lang.Boolean $r12;
        float f0;
        java.lang.Exception $r14;

        r0 := @this: net.sourceforge.plantuml.ditaa.PSystemDitaa;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r2 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        f0 := @parameter4: float;

        specialinvoke r0.<net.sourceforge.plantuml.AbstractPSystem: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.String data> = r2;

        r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: boolean dropShadows> = z0;

        r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: boolean performSeparationOfCommonEdges> = z1;

     label1:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.stathissideris.ascii2image.core.ProcessingOptions");

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.Object processingOptions> = $r4;

        $r5 = r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.Object processingOptions>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = newarray (java.lang.Class)[1];

        $r8 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r7[0] = $r8;

        $r9 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setPerformSeparationOfCommonEdges", $r7);

        $r11 = r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.Object processingOptions>;

        $r10 = newarray (java.lang.Object)[1];

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        $r10[0] = $r12;

        virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r10);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        virtualinvoke $r14.<java.lang.Exception: void printStackTrace()>();

        r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.Object processingOptions> = null;

     label4:
        r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: float scale> = f0;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    net.sourceforge.plantuml.ditaa.PSystemDitaa add(java.lang.String)
    {
        net.sourceforge.plantuml.ditaa.PSystemDitaa $r0, r1;
        net.sourceforge.plantuml.core.UmlSource $r2;
        java.lang.StringBuilder $r3, $r5, $r7, $r8;
        java.lang.String $r4, r6, $r9;
        float $f0;
        boolean $z0, $z1;

        r1 := @this: net.sourceforge.plantuml.ditaa.PSystemDitaa;

        r6 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.ditaa.PSystemDitaa;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.ditaa.PSystemDitaa: net.sourceforge.plantuml.core.UmlSource getSource()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r1.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.String data>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = r1.<net.sourceforge.plantuml.ditaa.PSystemDitaa: boolean performSeparationOfCommonEdges>;

        $z0 = r1.<net.sourceforge.plantuml.ditaa.PSystemDitaa: boolean dropShadows>;

        $f0 = r1.<net.sourceforge.plantuml.ditaa.PSystemDitaa: float scale>;

        specialinvoke $r0.<net.sourceforge.plantuml.ditaa.PSystemDitaa: void <init>(net.sourceforge.plantuml.core.UmlSource,java.lang.String,boolean,boolean,float)>($r2, $r9, $z1, $z0, $f0);

        return $r0;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.ditaa.PSystemDitaa r1;

        r1 := @this: net.sourceforge.plantuml.ditaa.PSystemDitaa;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Ditaa)");

        return $r0;
    }

    protected final net.sourceforge.plantuml.core.ImageData exportDiagramNow(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.FileFormatOption r0, $r67;
        net.sourceforge.plantuml.FileFormat $r1, $r2, $r68;
        java.lang.Class $r3, $r4, $r6, $r8, $r14, $r16, $r21, $r23, $r25, r30, $r32, $r33, $r35, $r41, $r42, $r44, $r49, $r51, $r53, $r54;
        java.lang.Object r5, r22, $r34, $r38, $r43, $r47, r48, r50, $r57, r70;
        java.lang.Class[] $r7, $r15, $r24, $r31, $r40, $r52;
        java.lang.reflect.Method r9, r17, r26, r55;
        java.lang.Object[] $r10, $r18, $r27, $r37, $r46, $r56;
        net.sourceforge.plantuml.ditaa.PSystemDitaa r11;
        float $f0;
        java.lang.Float $r12;
        boolean $z0;
        java.lang.Boolean $r19;
        java.lang.String $r28, $r62;
        java.lang.reflect.Constructor $r36, $r45;
        java.awt.image.BufferedImage r58;
        java.io.OutputStream r59;
        int i0, i1, i3;
        net.sourceforge.plantuml.api.ImageDataSimple $r60;
        net.sourceforge.plantuml.core.UmlSource $r61;
        byte[] $r63;
        net.sourceforge.plantuml.core.ImageData $r64, $r69;
        java.lang.Throwable $r65;
        java.util.ArrayList $r66;
        long $l2;
        java.lang.reflect.Field r71;

        r11 := @this: net.sourceforge.plantuml.ditaa.PSystemDitaa;

        r59 := @parameter0: java.io.OutputStream;

        i3 := @parameter1: int;

        r0 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat getFileFormat()>();

        $r2 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat ATXT>;

        if $r1 != $r2 goto label1;

        $r61 = virtualinvoke r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: net.sourceforge.plantuml.core.UmlSource getSource()>();

        $r62 = virtualinvoke $r61.<net.sourceforge.plantuml.core.UmlSource: java.lang.String getPlainString()>();

        $r63 = virtualinvoke $r62.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r59.<java.io.OutputStream: void write(byte[])>($r63);

        $r64 = staticinvoke <net.sourceforge.plantuml.api.ImageDataSimple: net.sourceforge.plantuml.core.ImageData ok()>();

        return $r64;

     label1:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.stathissideris.ascii2image.core.ConversionOptions");

        r70 = virtualinvoke $r3.<java.lang.Class: java.lang.Object newInstance()>();

        $r4 = virtualinvoke r70.<java.lang.Object: java.lang.Class getClass()>();

        r71 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("renderingOptions");

        r5 = virtualinvoke r71.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r70);

        $r6 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = newarray (java.lang.Class)[1];

        $r8 = <java.lang.Float: java.lang.Class TYPE>;

        $r7[0] = $r8;

        r9 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setScale", $r7);

        $r10 = newarray (java.lang.Object)[1];

        $f0 = r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: float scale>;

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        $r10[0] = $r12;

        virtualinvoke r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r5, $r10);

        $r14 = virtualinvoke r70.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = newarray (java.lang.Class)[1];

        $r16 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r15[0] = $r16;

        r17 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("setDropShadows", $r15);

        $r18 = newarray (java.lang.Object)[1];

        $z0 = r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: boolean dropShadows>;

        $r19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r18[0] = $r19;

        virtualinvoke r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r70, $r18);

        $r21 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.stathissideris.ascii2image.text.TextGrid");

        r22 = virtualinvoke $r21.<java.lang.Class: java.lang.Object newInstance()>();

        $r23 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = newarray (java.lang.Class)[2];

        $r24[0] = class "Ljava/lang/String;";

        $r25 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.stathissideris.ascii2image.core.ProcessingOptions");

        $r24[1] = $r25;

        r26 = virtualinvoke $r23.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initialiseWithText", $r24);

        $r27 = newarray (java.lang.Object)[2];

        $r28 = r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.String data>;

        $r27[0] = $r28;

        $r27[1] = null;

        virtualinvoke r26.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r22, $r27);

        r30 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.stathissideris.ascii2image.graphics.Diagram");

        $r31 = newarray (java.lang.Class)[3];

        $r32 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        $r31[0] = $r32;

        $r33 = virtualinvoke r70.<java.lang.Object: java.lang.Class getClass()>();

        $r31[1] = $r33;

        $r34 = r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.Object processingOptions>;

        $r35 = virtualinvoke $r34.<java.lang.Object: java.lang.Class getClass()>();

        $r31[2] = $r35;

        $r36 = virtualinvoke r30.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r31);

        $r37 = newarray (java.lang.Object)[3];

        $r37[0] = r22;

        $r37[1] = r70;

        $r38 = r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.Object processingOptions>;

        $r37[2] = $r38;

        virtualinvoke $r36.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r37);

        $r40 = newarray (java.lang.Class)[3];

        $r41 = virtualinvoke r22.<java.lang.Object: java.lang.Class getClass()>();

        $r40[0] = $r41;

        $r42 = virtualinvoke r70.<java.lang.Object: java.lang.Class getClass()>();

        $r40[1] = $r42;

        $r43 = r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.Object processingOptions>;

        $r44 = virtualinvoke $r43.<java.lang.Object: java.lang.Class getClass()>();

        $r40[2] = $r44;

        $r45 = virtualinvoke r30.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r40);

        $r46 = newarray (java.lang.Object)[3];

        $r46[0] = r22;

        $r46[1] = r70;

        $r47 = r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: java.lang.Object processingOptions>;

        $r46[2] = $r47;

        r48 = virtualinvoke $r45.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r46);

        $r49 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.stathissideris.ascii2image.graphics.BitmapRenderer");

        r50 = virtualinvoke $r49.<java.lang.Class: java.lang.Object newInstance()>();

        $r51 = virtualinvoke r50.<java.lang.Object: java.lang.Class getClass()>();

        $r52 = newarray (java.lang.Class)[2];

        $r53 = virtualinvoke r48.<java.lang.Object: java.lang.Class getClass()>();

        $r52[0] = $r53;

        $r54 = virtualinvoke r5.<java.lang.Object: java.lang.Class getClass()>();

        $r52[1] = $r54;

        r55 = virtualinvoke $r51.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("renderToImage", $r52);

        $r56 = newarray (java.lang.Object)[2];

        $r56[0] = r48;

        $r56[1] = r5;

        $r57 = virtualinvoke r55.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r50, $r56);

        r58 = (java.awt.image.BufferedImage) $r57;

        staticinvoke <net.sourceforge.plantuml.security.SImageIO: void write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r58, "png", r59);

        i0 = virtualinvoke r58.<java.awt.image.BufferedImage: int getWidth()>();

        i1 = virtualinvoke r58.<java.awt.image.BufferedImage: int getHeight()>();

        $r60 = new net.sourceforge.plantuml.api.ImageDataSimple;

        specialinvoke $r60.<net.sourceforge.plantuml.api.ImageDataSimple: void <init>(int,int)>(i0, i1);

     label2:
        return $r60;

     label3:
        $r65 := @caughtexception;

        $r66 = new java.util.ArrayList;

        specialinvoke $r66.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r66.<java.util.List: boolean add(java.lang.Object)>("DITAA has crashed");

        interfaceinvoke $r66.<java.util.List: boolean add(java.lang.Object)>(" ");

        staticinvoke <net.sourceforge.plantuml.svek.GraphvizCrash: void youShouldSendThisDiagram(java.util.List)>($r66);

        interfaceinvoke $r66.<java.util.List: boolean add(java.lang.Object)>(" ");

        $r67 = new net.sourceforge.plantuml.FileFormatOption;

        $r68 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        specialinvoke $r67.<net.sourceforge.plantuml.FileFormatOption: void <init>(net.sourceforge.plantuml.FileFormat)>($r68);

        $l2 = virtualinvoke r11.<net.sourceforge.plantuml.ditaa.PSystemDitaa: long seed()>();

        staticinvoke <net.sourceforge.plantuml.UmlDiagram: void exportDiagramError(java.io.OutputStream,java.lang.Throwable,net.sourceforge.plantuml.FileFormatOption,long,java.lang.String,java.lang.String,java.util.List)>(r59, $r65, $r67, $l2, null, null, $r66);

        $r69 = staticinvoke <net.sourceforge.plantuml.api.ImageDataSimple: net.sourceforge.plantuml.core.ImageData error()>();

        return $r69;

        catch java.lang.Throwable from label1 to label2 with label3;
    }
}
