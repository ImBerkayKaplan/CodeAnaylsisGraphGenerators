public class net.sourceforge.plantuml.tim.stdlib.Newline extends net.sourceforge.plantuml.tim.stdlib.SimpleReturnFunction
{

    public void <init>()
    {
        net.sourceforge.plantuml.tim.stdlib.Newline r0;

        r0 := @this: net.sourceforge.plantuml.tim.stdlib.Newline;

        specialinvoke r0.<net.sourceforge.plantuml.tim.stdlib.SimpleReturnFunction: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.tim.TFunctionSignature getSignature()
    {
        net.sourceforge.plantuml.tim.TFunctionSignature $r0;
        net.sourceforge.plantuml.tim.stdlib.Newline r1;

        r1 := @this: net.sourceforge.plantuml.tim.stdlib.Newline;

        $r0 = new net.sourceforge.plantuml.tim.TFunctionSignature;

        specialinvoke $r0.<net.sourceforge.plantuml.tim.TFunctionSignature: void <init>(java.lang.String,int)>("%newline", 0);

        return $r0;
    }

    public boolean canCover(int, java.util.Set)
    {
        int i0;
        net.sourceforge.plantuml.tim.stdlib.Newline r0;
        java.util.Set r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.tim.stdlib.Newline;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Set;

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.tim.expression.TValue executeReturnFunction(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, net.sourceforge.plantuml.LineLocation, java.util.List, java.util.Map)
    {
        net.sourceforge.plantuml.tim.expression.TValue $r0;
        net.sourceforge.plantuml.tim.stdlib.Newline r1;
        net.sourceforge.plantuml.tim.TContext r2;
        net.sourceforge.plantuml.tim.TMemory r3;
        net.sourceforge.plantuml.LineLocation r4;
        java.util.List r5;
        java.util.Map r6;

        r1 := @this: net.sourceforge.plantuml.tim.stdlib.Newline;

        r2 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r3 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        r4 := @parameter2: net.sourceforge.plantuml.LineLocation;

        r5 := @parameter3: java.util.List;

        r6 := @parameter4: java.util.Map;

        $r0 = staticinvoke <net.sourceforge.plantuml.tim.expression.TValue: net.sourceforge.plantuml.tim.expression.TValue fromString(java.lang.String)>("\n");

        return $r0;
    }
}
