public class net.sourceforge.plantuml.sequencediagram.graphic.Constraint extends java.lang.Object
{
    private final net.sourceforge.plantuml.sequencediagram.graphic.Pushable p1;
    private final net.sourceforge.plantuml.sequencediagram.graphic.Pushable p2;
    private double value;

    public void <init>(net.sourceforge.plantuml.sequencediagram.graphic.Pushable, net.sourceforge.plantuml.sequencediagram.graphic.Pushable)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint r0;
        net.sourceforge.plantuml.sequencediagram.graphic.Pushable r1, $r3, r4, $r6;
        java.lang.Object $r2, $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Constraint;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.Pushable;

        r4 := @parameter1: net.sourceforge.plantuml.sequencediagram.graphic.Pushable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.sequencediagram.graphic.Pushable) $r2;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: net.sourceforge.plantuml.sequencediagram.graphic.Pushable p1> = $r3;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r6 = (net.sourceforge.plantuml.sequencediagram.graphic.Pushable) $r5;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: net.sourceforge.plantuml.sequencediagram.graphic.Pushable p2> = $r6;

        return;
    }

    public final net.sourceforge.plantuml.sequencediagram.graphic.Pushable getParticipant1()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint r0;
        net.sourceforge.plantuml.sequencediagram.graphic.Pushable $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Constraint;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: net.sourceforge.plantuml.sequencediagram.graphic.Pushable p1>;

        return $r1;
    }

    public final net.sourceforge.plantuml.sequencediagram.graphic.Pushable getParticipant2()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint r0;
        net.sourceforge.plantuml.sequencediagram.graphic.Pushable $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Constraint;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: net.sourceforge.plantuml.sequencediagram.graphic.Pushable p2>;

        return $r1;
    }

    public final double getValue()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Constraint;

        $d0 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: double value>;

        return $d0;
    }

    public final void ensureValue(double)
    {
        double d0, $d1;
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint r0;
        byte $b0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Constraint;

        d0 := @parameter0: double;

        $d1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: double value>;

        $b0 = d0 cmpl $d1;

        if $b0 <= 0 goto label1;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: double value> = d0;

     label1:
        return;
    }

    public void push(double)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint r0;
        double d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Constraint;

        d0 := @parameter0: double;

        $d1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: double value>;

        $d2 = $d1 + d0;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: double value> = $d2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r9;
        net.sourceforge.plantuml.sequencediagram.graphic.Constraint r2;
        net.sourceforge.plantuml.sequencediagram.graphic.Pushable $r3, $r6;
        double $d0;
        java.lang.String $r10;

        r2 := @this: net.sourceforge.plantuml.sequencediagram.graphic.Constraint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Constraint ");

        $r3 = r2.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: net.sourceforge.plantuml.sequencediagram.graphic.Pushable p1>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r2.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: net.sourceforge.plantuml.sequencediagram.graphic.Pushable p2>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $d0 = r2.<net.sourceforge.plantuml.sequencediagram.graphic.Constraint: double value>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
