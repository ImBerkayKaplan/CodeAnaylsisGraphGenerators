public class net.sourceforge.plantuml.project.lang.SentenceAnd extends java.lang.Object implements net.sourceforge.plantuml.project.lang.Sentence
{
    private final net.sourceforge.plantuml.project.lang.SentenceSimple sentence1;
    private final net.sourceforge.plantuml.project.lang.SentenceSimple sentence2;

    public void <init>(net.sourceforge.plantuml.project.lang.SentenceSimple, net.sourceforge.plantuml.project.lang.SentenceSimple)
    {
        net.sourceforge.plantuml.project.lang.SentenceAnd r0;
        net.sourceforge.plantuml.project.lang.SentenceSimple r1, r2;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceAnd;

        r1 := @parameter0: net.sourceforge.plantuml.project.lang.SentenceSimple;

        r2 := @parameter1: net.sourceforge.plantuml.project.lang.SentenceSimple;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence1> = r1;

        r0.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence2> = r2;

        return;
    }

    public net.sourceforge.plantuml.command.regex.IRegex toRegex()
    {
        net.sourceforge.plantuml.command.regex.RegexConcat $r0;
        net.sourceforge.plantuml.command.regex.IRegex[] $r1;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r2, $r7, $r10, $r14, $r15, $r16, $r19, $r23;
        net.sourceforge.plantuml.project.lang.SentenceAnd r3;
        net.sourceforge.plantuml.project.lang.SentenceSimple $r4, $r8, $r11, $r17, $r20;
        net.sourceforge.plantuml.project.lang.Subject $r5;
        net.sourceforge.plantuml.command.regex.IRegex $r6, $r9, $r13, $r18, $r22;
        net.sourceforge.plantuml.project.lang.Something $r12, $r21;

        r3 := @this: net.sourceforge.plantuml.project.lang.SentenceAnd;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r1 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[13];

        $r2 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r1[0] = $r2;

        $r4 = r3.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence1>;

        $r5 = $r4.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Subject subjectii>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.project.lang.Subject: net.sourceforge.plantuml.command.regex.IRegex toRegex()>();

        $r1[1] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[2] = $r7;

        $r8 = r3.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence1>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.regex.IRegex getVerbRegex()>();

        $r1[3] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[4] = $r10;

        $r11 = r3.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence1>;

        $r12 = $r11.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Something complementii>;

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)>("1");

        $r1[5] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[6] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("and");

        $r1[7] = $r15;

        $r16 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[8] = $r16;

        $r17 = r3.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence2>;

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.regex.IRegex getVerbRegex()>();

        $r1[9] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r1[10] = $r19;

        $r20 = r3.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence2>;

        $r21 = $r20.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Something complementii>;

        $r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)>("2");

        $r1[11] = $r22;

        $r23 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r1[12] = $r23;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r1);

        return $r0;
    }

    public final net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.project.lang.SentenceAnd r0;
        net.sourceforge.plantuml.project.lang.SentenceSimple $r1, $r6, $r9, $r13, $r16;
        net.sourceforge.plantuml.project.GanttDiagram r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.project.lang.Subject $r4;
        net.sourceforge.plantuml.project.Failable r5, r8, r15;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.project.lang.Something $r7, $r14;
        java.lang.Object $r10, $r11, $r17, $r18;
        net.sourceforge.plantuml.command.CommandExecutionResult r12, $r19, $r21, $r23, $r25;
        java.lang.String $r20, $r22, $r24;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceAnd;

        r2 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r3 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = r0.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence1>;

        $r4 = $r1.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Subject subjectii>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.project.lang.Subject: net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r2, r3);

        $z0 = virtualinvoke r5.<net.sourceforge.plantuml.project.Failable: boolean isFail()>();

        if $z0 == 0 goto label1;

        $r24 = virtualinvoke r5.<net.sourceforge.plantuml.project.Failable: java.lang.String getError()>();

        $r25 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r24);

        return $r25;

     label1:
        $r6 = r0.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence1>;

        $r7 = $r6.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Something complementii>;

        r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r2, r3, "1");

        $z1 = virtualinvoke r8.<net.sourceforge.plantuml.project.Failable: boolean isFail()>();

        if $z1 == 0 goto label2;

        $r22 = virtualinvoke r8.<net.sourceforge.plantuml.project.Failable: java.lang.String getError()>();

        $r23 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r22);

        return $r23;

     label2:
        $r9 = r0.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence1>;

        $r10 = virtualinvoke r5.<net.sourceforge.plantuml.project.Failable: java.lang.Object get()>();

        $r11 = virtualinvoke r8.<net.sourceforge.plantuml.project.Failable: java.lang.Object get()>();

        r12 = virtualinvoke $r9.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram,java.lang.Object,java.lang.Object)>(r2, $r10, $r11);

        $z2 = virtualinvoke r12.<net.sourceforge.plantuml.command.CommandExecutionResult: boolean isOk()>();

        if $z2 != 0 goto label3;

        return r12;

     label3:
        $r13 = r0.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence2>;

        $r14 = $r13.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Something complementii>;

        r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r2, r3, "2");

        $z3 = virtualinvoke r15.<net.sourceforge.plantuml.project.Failable: boolean isFail()>();

        if $z3 == 0 goto label4;

        $r20 = virtualinvoke r15.<net.sourceforge.plantuml.project.Failable: java.lang.String getError()>();

        $r21 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r20);

        return $r21;

     label4:
        $r16 = r0.<net.sourceforge.plantuml.project.lang.SentenceAnd: net.sourceforge.plantuml.project.lang.SentenceSimple sentence2>;

        $r17 = virtualinvoke r5.<net.sourceforge.plantuml.project.Failable: java.lang.Object get()>();

        $r18 = virtualinvoke r15.<net.sourceforge.plantuml.project.Failable: java.lang.Object get()>();

        $r19 = virtualinvoke $r16.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram,java.lang.Object,java.lang.Object)>(r2, $r17, $r18);

        return $r19;
    }
}
