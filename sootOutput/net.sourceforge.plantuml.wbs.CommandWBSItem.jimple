public class net.sourceforge.plantuml.wbs.CommandWBSItem extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.wbs.CommandWBSItem r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.wbs.CommandWBSItem;

        $r1 = staticinvoke <net.sourceforge.plantuml.wbs.CommandWBSItem: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(boolean,net.sourceforge.plantuml.command.regex.IRegex)>(0, $r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        net.sourceforge.plantuml.command.regex.RegexOptional $r5;
        net.sourceforge.plantuml.command.regex.RegexConcat $r12;

        $r0 = class "Lnet/sourceforge/plantuml/wbs/CommandWBSItem;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[8];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TYPE", "([ \t]*[*+-]+)");

        $r2[1] = $r4;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BACKCOLOR", "\\[(#\\w+)\\]");

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r6);

        $r2[2] = $r5;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("SHAPE", "(_)?");

        $r2[3] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("DIRECTION", "([<>])?");

        $r2[4] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[5] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL", "([^%s].*)");

        $r2[6] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[7] = $r11;

        $r12 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r12;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.wbs.WBSDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, r3, r4, $r5, $r6, $r17;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.wbs.WBSDiagram r7;
        net.sourceforge.plantuml.ISkinParam $r8, $r10;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r9;
        net.sourceforge.plantuml.api.ThemeStyle $r11;
        net.sourceforge.plantuml.wbs.CommandWBSItem r12;
        net.sourceforge.plantuml.LineLocation r13;
        net.sourceforge.plantuml.ugraphic.color.HColor r14;
        net.sourceforge.plantuml.Direction $r15, r16;
        int $i0;
        net.sourceforge.plantuml.mindmap.IdeaShape $r18;
        net.sourceforge.plantuml.command.CommandExecutionResult $r19;

        r12 := @this: net.sourceforge.plantuml.wbs.CommandWBSItem;

        r7 := @parameter0: net.sourceforge.plantuml.wbs.WBSDiagram;

        r13 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("TYPE", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL", 0);

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BACKCOLOR", 0);

        r14 = null;

        if r3 == null goto label1;

        $r8 = virtualinvoke r7.<net.sourceforge.plantuml.wbs.WBSDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r10 = virtualinvoke r7.<net.sourceforge.plantuml.wbs.WBSDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r14 = virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r11, r3);

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("-");

        if $z0 == 0 goto label2;

        $r15 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        goto label3;

     label2:
        $r15 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

     label3:
        r16 = $r15;

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("DIRECTION", 0);

        $r5 = "<";

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label4;

        r16 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        goto label5;

     label4:
        $r6 = ">";

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label5;

        r16 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

     label5:
        $i0 = virtualinvoke r7.<net.sourceforge.plantuml.wbs.WBSDiagram: int getSmartLevel(java.lang.String)>(r1);

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("SHAPE", 0);

        $r18 = staticinvoke <net.sourceforge.plantuml.mindmap.IdeaShape: net.sourceforge.plantuml.mindmap.IdeaShape fromDesc(java.lang.String)>($r17);

        $r19 = virtualinvoke r7.<net.sourceforge.plantuml.wbs.WBSDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addIdea(net.sourceforge.plantuml.ugraphic.color.HColor,int,java.lang.String,net.sourceforge.plantuml.Direction,net.sourceforge.plantuml.mindmap.IdeaShape)>(r14, $i0, r2, r16, $r18);

        return $r19;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.wbs.CommandWBSItem r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.wbs.WBSDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.wbs.CommandWBSItem;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.wbs.WBSDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.CommandWBSItem: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.wbs.WBSDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
