public class net.sourceforge.plantuml.tim.TimLoader extends java.lang.Object
{
    private final net.sourceforge.plantuml.tim.TContext context;
    private final net.sourceforge.plantuml.tim.TMemory global;
    private boolean preprocessorError;
    private java.util.List resultList;

    public void <init>(net.sourceforge.plantuml.preproc.ImportedFiles, net.sourceforge.plantuml.preproc.Defines, java.nio.charset.Charset, net.sourceforge.plantuml.DefinitionsContainer)
    {
        net.sourceforge.plantuml.tim.TimLoader r0;
        net.sourceforge.plantuml.tim.TMemoryGlobal $r1;
        net.sourceforge.plantuml.tim.TContext $r2;
        net.sourceforge.plantuml.preproc.ImportedFiles r3;
        net.sourceforge.plantuml.preproc.Defines r4;
        java.nio.charset.Charset r5;
        net.sourceforge.plantuml.DefinitionsContainer r6;
        net.sourceforge.plantuml.tim.TMemory $r7;
        net.sourceforge.plantuml.tim.EaterException $r8;

        r0 := @this: net.sourceforge.plantuml.tim.TimLoader;

        r3 := @parameter0: net.sourceforge.plantuml.preproc.ImportedFiles;

        r4 := @parameter1: net.sourceforge.plantuml.preproc.Defines;

        r5 := @parameter2: java.nio.charset.Charset;

        r6 := @parameter3: net.sourceforge.plantuml.DefinitionsContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.tim.TMemoryGlobal;

        specialinvoke $r1.<net.sourceforge.plantuml.tim.TMemoryGlobal: void <init>()>();

        r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TMemory global> = $r1;

        $r2 = new net.sourceforge.plantuml.tim.TContext;

        specialinvoke $r2.<net.sourceforge.plantuml.tim.TContext: void <init>(net.sourceforge.plantuml.preproc.ImportedFiles,net.sourceforge.plantuml.preproc.Defines,java.nio.charset.Charset,net.sourceforge.plantuml.DefinitionsContainer)>(r3, r4, r5, r6);

        r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TContext context> = $r2;

     label1:
        $r7 = r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TMemory global>;

        virtualinvoke r4.<net.sourceforge.plantuml.preproc.Defines: void copyTo(net.sourceforge.plantuml.tim.TMemory)>($r7);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        virtualinvoke $r8.<net.sourceforge.plantuml.tim.EaterException: void printStackTrace()>();

     label4:
        return;

        catch net.sourceforge.plantuml.tim.EaterException from label1 to label2 with label3;
    }

    public java.util.Set load(java.util.List)
    {
        net.sourceforge.plantuml.tim.TimLoader r0;
        java.util.List r1, $r6, $r12, $r17;
        net.sourceforge.plantuml.tim.TMemory $r2;
        net.sourceforge.plantuml.tim.TContext $r3, $r5, $r7, $r11, $r16;
        java.util.Set $r8;
        net.sourceforge.plantuml.tim.EaterExceptionLocated $r9;
        net.sourceforge.plantuml.StringLocated $r13, $r15;
        java.lang.String $r14, $r18;

        r0 := @this: net.sourceforge.plantuml.tim.TimLoader;

        r1 := @parameter0: java.util.List;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TContext context>;

        $r2 = r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TMemory global>;

        virtualinvoke $r3.<net.sourceforge.plantuml.tim.TContext: net.sourceforge.plantuml.tim.expression.TValue executeLines(net.sourceforge.plantuml.tim.TMemory,java.util.List,net.sourceforge.plantuml.tim.TFunctionType,boolean)>($r2, r1, null, 0);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r11 = r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TContext context>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.tim.TContext: java.util.List getResultList()>();

        $r13 = virtualinvoke $r9.<net.sourceforge.plantuml.tim.EaterExceptionLocated: net.sourceforge.plantuml.StringLocated getLocation()>();

        $r14 = virtualinvoke $r9.<net.sourceforge.plantuml.tim.EaterExceptionLocated: java.lang.String getMessage()>();

        $r15 = virtualinvoke $r13.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated withErrorPreprocessor(java.lang.String)>($r14);

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r16 = r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TContext context>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.tim.TContext: java.util.List getDebug()>();

        $r18 = virtualinvoke $r9.<net.sourceforge.plantuml.tim.EaterExceptionLocated: java.lang.String getMessage()>();

        specialinvoke r0.<net.sourceforge.plantuml.tim.TimLoader: void changeLastLine(java.util.List,java.lang.String)>($r17, $r18);

        r0.<net.sourceforge.plantuml.tim.TimLoader: boolean preprocessorError> = 1;

     label4:
        $r5 = r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TContext context>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.tim.TContext: java.util.List getResultList()>();

        r0.<net.sourceforge.plantuml.tim.TimLoader: java.util.List resultList> = $r6;

        $r7 = r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TContext context>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.tim.TContext: java.util.Set getFilesUsedCurrent()>();

        return $r8;

        catch net.sourceforge.plantuml.tim.EaterExceptionLocated from label1 to label2 with label3;
    }

    private void changeLastLine(java.util.List, java.lang.String)
    {
        java.util.List r0;
        int $i0, i1;
        java.lang.Object $r1;
        net.sourceforge.plantuml.StringLocated r2, $r4;
        java.lang.String r3;
        net.sourceforge.plantuml.tim.TimLoader r6;

        r6 := @this: net.sourceforge.plantuml.tim.TimLoader;

        r0 := @parameter0: java.util.List;

        r3 := @parameter1: java.lang.String;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = $i0 - 1;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (net.sourceforge.plantuml.StringLocated) $r1;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated withErrorPreprocessor(java.lang.String)>(r3);

        interfaceinvoke r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r4);

        return;
    }

    public final java.util.List getResultList()
    {
        net.sourceforge.plantuml.tim.TimLoader r0;
        java.util.List $r1;

        r0 := @this: net.sourceforge.plantuml.tim.TimLoader;

        $r1 = r0.<net.sourceforge.plantuml.tim.TimLoader: java.util.List resultList>;

        return $r1;
    }

    public final java.util.List getDebug()
    {
        net.sourceforge.plantuml.tim.TimLoader r0;
        net.sourceforge.plantuml.tim.TContext $r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.tim.TimLoader;

        $r1 = r0.<net.sourceforge.plantuml.tim.TimLoader: net.sourceforge.plantuml.tim.TContext context>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.tim.TContext: java.util.List getDebug()>();

        return $r2;
    }

    public final boolean isPreprocessorError()
    {
        net.sourceforge.plantuml.tim.TimLoader r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.tim.TimLoader;

        $z0 = r0.<net.sourceforge.plantuml.tim.TimLoader: boolean preprocessorError>;

        return $z0;
    }
}
