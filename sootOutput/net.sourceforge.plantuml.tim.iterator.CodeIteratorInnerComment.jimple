public class net.sourceforge.plantuml.tim.iterator.CodeIteratorInnerComment extends net.sourceforge.plantuml.tim.iterator.AbstractCodeIterator
{

    public void <init>(net.sourceforge.plantuml.tim.iterator.CodeIterator)
    {
        net.sourceforge.plantuml.tim.iterator.CodeIteratorInnerComment r0;
        net.sourceforge.plantuml.tim.iterator.CodeIterator r1;

        r0 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorInnerComment;

        r1 := @parameter0: net.sourceforge.plantuml.tim.iterator.CodeIterator;

        specialinvoke r0.<net.sourceforge.plantuml.tim.iterator.AbstractCodeIterator: void <init>(net.sourceforge.plantuml.tim.iterator.CodeIterator)>(r1);

        return;
    }

    public net.sourceforge.plantuml.StringLocated peek() throws net.sourceforge.plantuml.tim.EaterException, net.sourceforge.plantuml.tim.EaterExceptionLocated
    {
        net.sourceforge.plantuml.tim.iterator.CodeIteratorInnerComment r0;
        net.sourceforge.plantuml.tim.iterator.CodeIterator $r1;
        net.sourceforge.plantuml.StringLocated r2, $r3;

        r0 := @this: net.sourceforge.plantuml.tim.iterator.CodeIteratorInnerComment;

        $r1 = r0.<net.sourceforge.plantuml.tim.iterator.CodeIteratorInnerComment: net.sourceforge.plantuml.tim.iterator.CodeIterator source>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.tim.iterator.CodeIterator: net.sourceforge.plantuml.StringLocated peek()>();

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated removeInnerComment()>();

        return $r3;
    }
}
