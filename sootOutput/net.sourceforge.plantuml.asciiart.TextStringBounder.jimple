public class net.sourceforge.plantuml.asciiart.TextStringBounder extends net.sourceforge.plantuml.graphic.StringBounderRaw
{

    public void <init>()
    {
        net.sourceforge.plantuml.asciiart.TextStringBounder r0;

        r0 := @this: net.sourceforge.plantuml.asciiart.TextStringBounder;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.StringBounderRaw: void <init>()>();

        return;
    }

    protected net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.ugraphic.UFont, java.lang.String)
    {
        java.lang.String r0;
        int $i0, i2;
        net.sourceforge.plantuml.Dimension2DDouble $r1;
        double $d0;
        net.sourceforge.plantuml.asciiart.TextStringBounder r2;
        net.sourceforge.plantuml.ugraphic.UFont r3;

        r2 := @this: net.sourceforge.plantuml.asciiart.TextStringBounder;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        virtualinvoke r0.<java.lang.String: int codePointCount(int,int)>(0, $i0);

        i2 = virtualinvoke r0.<java.lang.String: int length()>();

        staticinvoke <net.sourceforge.plantuml.asciiart.Wcwidth: int length(java.lang.CharSequence)>(r0);

        $r1 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = (double) i2;

        specialinvoke $r1.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d0, 1.0);

        return $r1;
    }
}
