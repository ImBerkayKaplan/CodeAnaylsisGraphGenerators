public class net.sourceforge.plantuml.svek.image.ConnectedCircle extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final double radius;
    private final java.util.List angles;
    private final java.util.List points;

    public void <init>(double)
    {
        net.sourceforge.plantuml.svek.image.ConnectedCircle r0;
        java.util.ArrayList $r1, $r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.svek.image.ConnectedCircle;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.image.ConnectedCircle: java.util.List angles> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.image.ConnectedCircle: java.util.List points> = $r2;

        r0.<net.sourceforge.plantuml.svek.image.ConnectedCircle: double radius> = d0;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UEllipse $r0, $r12;
        net.sourceforge.plantuml.svek.image.ConnectedCircle r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.util.List $r3, $r8;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, r14;
        net.sourceforge.plantuml.ugraphic.UBackground $r7;
        java.lang.Object $r9, $r11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;
        java.util.Iterator r15, r18;
        java.lang.Double r16;
        java.awt.geom.Point2D r19;

        r1 := @this: net.sourceforge.plantuml.svek.image.ConnectedCircle;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        $d0 = r1.<net.sourceforge.plantuml.svek.image.ConnectedCircle: double radius>;

        $d3 = 2.0 * $d0;

        $d1 = r1.<net.sourceforge.plantuml.svek.image.ConnectedCircle: double radius>;

        $d2 = 2.0 * $d1;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>($d3, $d2);

        $r3 = r1.<net.sourceforge.plantuml.svek.image.ConnectedCircle: java.util.List angles>;

        r15 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.Double) $r11;

        $r12 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        $d4 = r1.<net.sourceforge.plantuml.svek.image.ConnectedCircle: double radius>;

        $d6 = 2.0 * $d4;

        $d5 = r1.<net.sourceforge.plantuml.svek.image.ConnectedCircle: double radius>;

        $d7 = 2.0 * $d5;

        $d8 = virtualinvoke r16.<java.lang.Double: double doubleValue()>();

        $d9 = $d8 - 30.0;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double,double,double)>($d6, $d7, $d9, 60.0);

        interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        goto label1;

     label2:
        $r4 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor GREEN>;

        $r5 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r6 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor GREEN>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r8 = r1.<net.sourceforge.plantuml.svek.image.ConnectedCircle: java.util.List points>;

        r18 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r9 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.awt.geom.Point2D) $r9;

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r19);

        goto label3;

     label4:
        return;
    }

    public void addSecondaryConnection(java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.image.ConnectedCircle r0;
        java.awt.geom.Point2D r1;
        java.util.List $r2, $r10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, d8;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8;
        java.io.PrintStream $r4;
        java.lang.String $r9;
        java.lang.Double $r11;

        r0 := @this: net.sourceforge.plantuml.svek.image.ConnectedCircle;

        r1 := @parameter0: java.awt.geom.Point2D;

        $r2 = r0.<net.sourceforge.plantuml.svek.image.ConnectedCircle: java.util.List points>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $d0 = r0.<net.sourceforge.plantuml.svek.image.ConnectedCircle: double radius>;

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d2 = $d0 - $d1;

        $d3 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d4 = r0.<net.sourceforge.plantuml.svek.image.ConnectedCircle: double radius>;

        $d5 = $d3 - $d4;

        d7 = staticinvoke <java.lang.Math: double atan2(double,double)>($d2, $d5);

        $d6 = d7 * 180.0;

        d8 = $d6 / 3.141592653589793;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt1=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d8);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = r0.<net.sourceforge.plantuml.svek.image.ConnectedCircle: java.util.List angles>;

        $r11 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d8);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r11);

        return;
    }
}
