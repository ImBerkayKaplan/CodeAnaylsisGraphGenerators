public class net.sourceforge.plantuml.oregon.PSystemOregon extends net.sourceforge.plantuml.PlainDiagram
{
    private net.sourceforge.plantuml.oregon.Screen screen;
    private java.util.List inputs;

    public void <init>(net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.oregon.Keyboard)
    {
        net.sourceforge.plantuml.oregon.PSystemOregon r0;
        net.sourceforge.plantuml.core.UmlSource r1;
        net.sourceforge.plantuml.oregon.OregonBasicGame $r2;
        net.sourceforge.plantuml.oregon.Keyboard r4;
        net.sourceforge.plantuml.oregon.Screen $r5, $r8;
        net.sourceforge.plantuml.oregon.NoInputException $r6;

        r0 := @this: net.sourceforge.plantuml.oregon.PSystemOregon;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r4 := @parameter1: net.sourceforge.plantuml.oregon.Keyboard;

        specialinvoke r0.<net.sourceforge.plantuml.PlainDiagram: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        $r2 = new net.sourceforge.plantuml.oregon.OregonBasicGame;

        specialinvoke $r2.<net.sourceforge.plantuml.oregon.OregonBasicGame: void <init>()>();

     label1:
        interfaceinvoke $r2.<net.sourceforge.plantuml.oregon.BasicGame: void run(net.sourceforge.plantuml.oregon.Keyboard)>(r4);

        $r5 = interfaceinvoke $r2.<net.sourceforge.plantuml.oregon.BasicGame: net.sourceforge.plantuml.oregon.Screen getScreen()>();

        r0.<net.sourceforge.plantuml.oregon.PSystemOregon: net.sourceforge.plantuml.oregon.Screen screen> = $r5;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r8 = interfaceinvoke $r2.<net.sourceforge.plantuml.oregon.BasicGame: net.sourceforge.plantuml.oregon.Screen getScreen()>();

        r0.<net.sourceforge.plantuml.oregon.PSystemOregon: net.sourceforge.plantuml.oregon.Screen screen> = $r8;

     label4:
        return;

        catch net.sourceforge.plantuml.oregon.NoInputException from label1 to label2 with label3;
    }

    public net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.oregon.PSystemOregon r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.oregon.PSystemOregon;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.PlainDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder blackBackcolor()>();

        return $r3;
    }

    public void <init>(net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.oregon.PSystemOregon r0;
        net.sourceforge.plantuml.core.UmlSource r1;
        java.util.ArrayList $r2;

        r0 := @this: net.sourceforge.plantuml.oregon.PSystemOregon;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        specialinvoke r0.<net.sourceforge.plantuml.PlainDiagram: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.oregon.PSystemOregon: java.util.List inputs> = $r2;

        return;
    }

    public void add(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        net.sourceforge.plantuml.oregon.PSystemOregon r1;
        java.util.List $r2;

        r1 := @this: net.sourceforge.plantuml.oregon.PSystemOregon;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <net.sourceforge.plantuml.StringUtils: boolean isNotEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        $r2 = r1.<net.sourceforge.plantuml.oregon.PSystemOregon: java.util.List inputs>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        return;
    }

    private net.sourceforge.plantuml.oregon.Screen getScreen()
    {
        net.sourceforge.plantuml.oregon.PSystemOregon r0;
        net.sourceforge.plantuml.oregon.Screen $r1, $r7, $r10, $r11;
        net.sourceforge.plantuml.oregon.KeyboardList $r2;
        java.util.List $r3;
        net.sourceforge.plantuml.oregon.OregonBasicGame $r5;
        net.sourceforge.plantuml.oregon.NoInputException $r8;

        r0 := @this: net.sourceforge.plantuml.oregon.PSystemOregon;

        $r1 = r0.<net.sourceforge.plantuml.oregon.PSystemOregon: net.sourceforge.plantuml.oregon.Screen screen>;

        if $r1 != null goto label4;

        $r2 = new net.sourceforge.plantuml.oregon.KeyboardList;

        $r3 = r0.<net.sourceforge.plantuml.oregon.PSystemOregon: java.util.List inputs>;

        specialinvoke $r2.<net.sourceforge.plantuml.oregon.KeyboardList: void <init>(java.util.Collection)>($r3);

        $r5 = new net.sourceforge.plantuml.oregon.OregonBasicGame;

        specialinvoke $r5.<net.sourceforge.plantuml.oregon.OregonBasicGame: void <init>()>();

     label1:
        interfaceinvoke $r5.<net.sourceforge.plantuml.oregon.BasicGame: void run(net.sourceforge.plantuml.oregon.Keyboard)>($r2);

        $r7 = interfaceinvoke $r5.<net.sourceforge.plantuml.oregon.BasicGame: net.sourceforge.plantuml.oregon.Screen getScreen()>();

        r0.<net.sourceforge.plantuml.oregon.PSystemOregon: net.sourceforge.plantuml.oregon.Screen screen> = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r10 = interfaceinvoke $r5.<net.sourceforge.plantuml.oregon.BasicGame: net.sourceforge.plantuml.oregon.Screen getScreen()>();

        r0.<net.sourceforge.plantuml.oregon.PSystemOregon: net.sourceforge.plantuml.oregon.Screen screen> = $r10;

     label4:
        $r11 = r0.<net.sourceforge.plantuml.oregon.PSystemOregon: net.sourceforge.plantuml.oregon.Screen screen>;

        return $r11;

        catch net.sourceforge.plantuml.oregon.NoInputException from label1 to label2 with label3;
    }

    protected net.sourceforge.plantuml.graphic.UDrawable getRootDrawable(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.oregon.PSystemOregon r0;
        net.sourceforge.plantuml.oregon.Screen $r1;
        java.util.List $r2;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r3;
        net.sourceforge.plantuml.FileFormatOption r4;

        r0 := @this: net.sourceforge.plantuml.oregon.PSystemOregon;

        r4 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.oregon.PSystemOregon: net.sourceforge.plantuml.oregon.Screen getScreen()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.oregon.Screen: java.util.List getLines()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.svek.TextBlockBackcolored createGreenOnBlackMonospaced(java.util.List)>($r2);

        return $r3;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.oregon.PSystemOregon r1;

        r1 := @this: net.sourceforge.plantuml.oregon.PSystemOregon;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(The Oregon Trail)");

        return $r0;
    }
}
