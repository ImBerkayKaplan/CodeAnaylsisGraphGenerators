public class net.sourceforge.plantuml.skin.rose.Rose extends java.lang.Object
{
    private final double paddingX;
    public static final double paddingY;

    public void <init>()
    {
        net.sourceforge.plantuml.skin.rose.Rose r0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.skin.rose.Rose: double paddingX> = 5.0;

        r0.<net.sourceforge.plantuml.skin.rose.Rose: double paddingX> = 5.0;

        return;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.FontParam)
    {
        net.sourceforge.plantuml.ISkinParam r0;
        net.sourceforge.plantuml.FontParam[] $r1;
        net.sourceforge.plantuml.FontParam r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        net.sourceforge.plantuml.skin.rose.Rose r4;

        r4 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r0 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.FontParam;

        $r1 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r1[0] = r2;

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getFontHtmlColor(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.FontParam[])>(null, $r1);

        return $r3;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ColorParam)
    {
        net.sourceforge.plantuml.skin.rose.Rose r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.ColorParam[] $r2;
        net.sourceforge.plantuml.ColorParam r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;

        r0 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter1: net.sourceforge.plantuml.ColorParam;

        $r2 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r2[0] = r3;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, null, $r2);

        return $r4;
    }

    public transient net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.ColorParam[])
    {
        net.sourceforge.plantuml.ColorParam[] r0;
        int i0, i1;
        net.sourceforge.plantuml.ColorParam $r2, r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, r7;
        net.sourceforge.plantuml.ISkinParam r5;
        net.sourceforge.plantuml.cucadiagram.Stereotype r6;
        net.sourceforge.plantuml.skin.rose.Rose r8;

        r8 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r5 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r6 := @parameter1: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r0 := @parameter2: net.sourceforge.plantuml.ColorParam[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r0[i1];

        r7 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype,boolean)>(r4, r6, 0);

        if r7 == null goto label2;

        return r7;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r2 = r0[0];

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ugraphic.color.HColor getDefaultValue()>();

        return $r3;
    }

    private net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.FontParam)
    {
        net.sourceforge.plantuml.graphic.FontConfiguration $r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.FontParam r2;
        net.sourceforge.plantuml.skin.rose.Rose r3;

        r3 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.FontParam;

        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r1, r2, null);

        return $r0;
    }

    public net.sourceforge.plantuml.skin.Component createComponentNote(net.sourceforge.plantuml.style.Style[], net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.skin.rose.Rose r0;
        net.sourceforge.plantuml.style.Style[] r1;
        net.sourceforge.plantuml.skin.ComponentType r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.skin.Component $r5;

        r0 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style[];

        r2 := @parameter1: net.sourceforge.plantuml.skin.ComponentType;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: void checkRose()>();

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.Component createComponentNote(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition)>(r1, r2, r3, r4, null);

        return $r5;
    }

    private void checkRose()
    {
        net.sourceforge.plantuml.skin.rose.Rose r0;
        java.lang.Class $r1, $r5;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r7;

        r0 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 == class "Lnet/sourceforge/plantuml/skin/rose/Rose;" goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        return;
    }

    public net.sourceforge.plantuml.skin.Component createComponentNote(net.sourceforge.plantuml.style.Style[], net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition)
    {
        net.sourceforge.plantuml.skin.rose.Rose r0;
        net.sourceforge.plantuml.sequencediagram.NotePosition r1, $r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.AlignmentParam $r4, $r31, $r33;
        net.sourceforge.plantuml.cucadiagram.Display r5;
        net.sourceforge.plantuml.cucadiagram.Stereotype r6, $r37;
        net.sourceforge.plantuml.CornerParam $r7;
        double d0;
        net.sourceforge.plantuml.skin.ComponentType r8, $r9, $r10, $r11;
        java.lang.UnsupportedOperationException $r12;
        java.lang.String $r13;
        net.sourceforge.plantuml.skin.rose.ComponentRoseNoteBox $r14;
        net.sourceforge.plantuml.style.Style[] r15;
        net.sourceforge.plantuml.ColorParam $r16, $r21, $r26;
        net.sourceforge.plantuml.graphic.SymbolContext $r17, $r22, $r27;
        net.sourceforge.plantuml.FontParam $r18, $r23, $r28;
        net.sourceforge.plantuml.graphic.FontConfiguration $r19, $r24, $r29;
        net.sourceforge.plantuml.skin.rose.ComponentRoseNoteHexagonal $r20;
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote $r25;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r30, $r32, $r34, r35, r36;
        net.sourceforge.plantuml.style.Style $r38, $r39, $r40;

        r0 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r15 := @parameter0: net.sourceforge.plantuml.style.Style[];

        r8 := @parameter1: net.sourceforge.plantuml.skin.ComponentType;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r5 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r1 := @parameter4: net.sourceforge.plantuml.sequencediagram.NotePosition;

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: void checkRose()>();

        $r2 = <net.sourceforge.plantuml.sequencediagram.NotePosition: net.sourceforge.plantuml.sequencediagram.NotePosition OVER_SEVERAL>;

        if r1 != $r2 goto label02;

        $r31 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam noteTextAlignment>;

        $r30 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        r35 = interfaceinvoke r3.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r31, null, 0, $r30);

        $r33 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam noteTextAlignment>;

        $r32 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r34 = interfaceinvoke r3.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r33, null, 0, $r32);

        if r35 != $r34 goto label01;

        r36 = r35;

        goto label03;

     label01:
        r36 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        goto label03;

     label02:
        $r4 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam noteTextAlignment>;

        r35 = interfaceinvoke r3.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r4, null, 0, null);

        r36 = r35;

     label03:
        if r5 != null goto label04;

        $r37 = null;

        goto label05;

     label04:
        $r37 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotypeIfAny()>();

     label05:
        r6 = $r37;

        $r7 = <net.sourceforge.plantuml.CornerParam: net.sourceforge.plantuml.CornerParam DEFAULT>;

        d0 = interfaceinvoke r3.<net.sourceforge.plantuml.ISkinParam: double getRoundCorner(net.sourceforge.plantuml.CornerParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r7, null);

        $r9 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE>;

        if r8 != $r9 goto label08;

        $r25 = new net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        if r15 != null goto label06;

        $r38 = null;

        goto label07;

     label06:
        $r38 = r15[0];

     label07:
        $r26 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        $r27 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r3, $r26);

        $r28 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        $r29 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r3, $r28);

        specialinvoke $r25.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,double,double,net.sourceforge.plantuml.ISkinSimple,double,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r38, $r27, $r29, r5, 5.0, 5.0, r3, d0, r35, r36);

        return $r25;

     label08:
        $r10 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_HEXAGONAL>;

        if r8 != $r10 goto label11;

        $r20 = new net.sourceforge.plantuml.skin.rose.ComponentRoseNoteHexagonal;

        if r15 != null goto label09;

        $r39 = null;

        goto label10;

     label09:
        $r39 = r15[0];

     label10:
        $r21 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        $r22 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r3, $r21);

        $r23 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        $r24 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r3, $r23);

        specialinvoke $r20.<net.sourceforge.plantuml.skin.rose.ComponentRoseNoteHexagonal: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r39, $r22, $r24, r5, r3, r35);

        return $r20;

     label11:
        $r11 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_BOX>;

        if r8 != $r11 goto label14;

        $r14 = new net.sourceforge.plantuml.skin.rose.ComponentRoseNoteBox;

        if r15 != null goto label12;

        $r40 = null;

        goto label13;

     label12:
        $r40 = r15[0];

     label13:
        $r16 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        $r17 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r3, $r16);

        $r18 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        $r19 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r3, $r18);

        specialinvoke $r14.<net.sourceforge.plantuml.skin.rose.ComponentRoseNoteBox: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,double,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r40, $r17, $r19, r5, r3, d0, r35);

        return $r14;

     label14:
        $r12 = new java.lang.UnsupportedOperationException;

        $r13 = virtualinvoke r8.<net.sourceforge.plantuml.skin.ComponentType: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13);

        throw $r12;
    }

    public net.sourceforge.plantuml.skin.Component createComponent(net.sourceforge.plantuml.style.Style[], net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.skin.ArrowConfiguration, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.skin.rose.Rose r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.FontParam[] $r2, $r7;
        net.sourceforge.plantuml.FontParam $r3, $r8, $r35, $r55, $r57, $r67, $r98, $r102, $r129, $r131, $r138, $r140, $r147, $r149, $r156, $r158, $r170, $r172, $r180, $r182, $r189, $r191, $r198, $r200, $r207, $r209, $r216, $r218, $r225, $r227, $r234, $r236, $r243, $r245, $r252, $r254, $r261, $r263, $r270, $r272, $r303;
        net.sourceforge.plantuml.ugraphic.UFont r4, r9;
        net.sourceforge.plantuml.cucadiagram.Display r5;
        net.sourceforge.plantuml.cucadiagram.Stereotype r6, $r123;
        net.sourceforge.plantuml.skin.ComponentType r10, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49;
        boolean $z0, $z1;
        net.sourceforge.plantuml.PaddingParam $r11;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.CornerParam $r12, $r13;
        java.lang.UnsupportedOperationException $r50, $r61, $r104, $r105, $r106;
        net.sourceforge.plantuml.skin.rose.ComponentRoseEnglober $r51;
        net.sourceforge.plantuml.style.Style[] r52;
        net.sourceforge.plantuml.ColorParam $r53, $r59, $r60, $r64, $r71, $r75, $r80, $r85, $r90, $r96, $r108, $r115, $r127, $r136, $r145, $r154, $r168, $r178, $r187, $r196, $r205, $r214, $r223, $r232, $r241, $r250, $r259, $r268, $r280, $r298, $r305, $r310;
        net.sourceforge.plantuml.graphic.SymbolContext $r54, $r76, $r81, $r86, $r91, $r128, $r137, $r146, $r155, $r169, $r179, $r188, $r197, $r206, $r215, $r224, $r233, $r242, $r251, $r260, $r269, $r281, $r306;
        net.sourceforge.plantuml.graphic.FontConfiguration $r56, $r68, $r99, $r130, $r139, $r148, $r157, $r171, $r181, $r190, $r199, $r208, $r217, $r226, $r235, $r244, $r253, $r262, $r271, r274, r275, $r291, $r304;
        net.sourceforge.plantuml.ColorParam[] $r58, $r63, $r70, $r95, $r107, $r114, $r297, $r309;
        byte $b0;
        net.sourceforge.plantuml.skin.rose.ComponentRoseDestroy $r62;
        net.sourceforge.plantuml.ugraphic.color.HColor $r65, $r72, $r97, $r101, r103, $r132, $r141, $r150, $r159, r160, r162, $r173, $r183, $r192, $r201, $r210, $r219, $r228, $r237, $r246, $r255, $r264, $r273, $r279, $r292, $r299, $r311;
        net.sourceforge.plantuml.skin.rose.ComponentRoseDelayText $r66;
        net.sourceforge.plantuml.skin.rose.ComponentRoseDelayLine $r69;
        net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine $r73, $r78, $r83, $r88;
        net.sourceforge.plantuml.api.ThemeStyle $r74, $r79, $r84, $r89, $r110, $r117;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r77, $r82, $r87, $r92, $r113, $r120;
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingSpace $r93;
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse $r94;
        java.lang.CharSequence $r100;
        net.sourceforge.plantuml.skin.rose.ComponentRoseLine $r109, $r116;
        net.sourceforge.plantuml.LineParam $r111, $r118, $r295;
        net.sourceforge.plantuml.ugraphic.UStroke $r112, $r119, $r296;
        net.sourceforge.plantuml.skin.ArrowConfiguration r121;
        net.sourceforge.plantuml.skin.ArrowComponent $r122;
        net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant $r124, $r133, $r142, $r151;
        net.sourceforge.plantuml.style.Style $r125, $r126, $r134, $r135, $r143, $r144, $r152, $r153, $r161, $r163, $r166, $r167, $r176, $r177, $r185, $r186, $r194, $r195, $r203, $r204, $r212, $r213, $r221, $r222, $r230, $r231, $r239, $r240, $r248, $r249, $r257, $r258, $r266, $r267, $r277, $r278, $r282, $r283, $r284, $r285, $r286, $r287, $r288, $r290, $r301, $r302, $r312;
        net.sourceforge.plantuml.skin.rose.ComponentRoseActor $r164, $r174;
        net.sourceforge.plantuml.skin.ActorStyle $r165, $r175;
        net.sourceforge.plantuml.skin.rose.ComponentRoseBoundary $r184, $r193;
        net.sourceforge.plantuml.skin.rose.ComponentRoseControl $r202, $r211;
        net.sourceforge.plantuml.skin.rose.ComponentRoseEntity $r220, $r229;
        net.sourceforge.plantuml.skin.rose.ComponentRoseQueue $r238, $r247;
        net.sourceforge.plantuml.skin.rose.ComponentRoseDatabase $r256, $r265;
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader $r276;
        net.sourceforge.plantuml.skin.rose.ComponentRoseDivider $r289;
        net.sourceforge.plantuml.skin.rose.ComponentRoseReference $r300;
        net.sourceforge.plantuml.AlignmentParam $r307;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r308;

        r0 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r52 := @parameter0: net.sourceforge.plantuml.style.Style[];

        r10 := @parameter1: net.sourceforge.plantuml.skin.ComponentType;

        r121 := @parameter2: net.sourceforge.plantuml.skin.ArrowConfiguration;

        r1 := @parameter3: net.sourceforge.plantuml.ISkinParam;

        r5 := @parameter4: net.sourceforge.plantuml.cucadiagram.Display;

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: void checkRose()>();

        $r2 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r3 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_GROUP>;

        $r2[0] = $r3;

        r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>(null, 0, $r2);

        if r5 != null goto label001;

        $r123 = null;

        goto label002;

     label001:
        $r123 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotypeIfAny()>();

     label002:
        r6 = $r123;

        $r7 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r8 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_STEREOTYPE>;

        $r7[0] = $r8;

        r9 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>(null, 0, $r7);

        $z0 = virtualinvoke r10.<net.sourceforge.plantuml.skin.ComponentType: boolean isArrow()>();

        if $z0 == 0 goto label003;

        $r122 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.ArrowComponent createComponentArrow(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>(null, r121, r1, r5);

        return $r122;

     label003:
        $r11 = <net.sourceforge.plantuml.PaddingParam: net.sourceforge.plantuml.PaddingParam PARTICIPANT>;

        d0 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: double getPadding(net.sourceforge.plantuml.PaddingParam)>($r11);

        $r12 = <net.sourceforge.plantuml.CornerParam: net.sourceforge.plantuml.CornerParam DEFAULT>;

        d1 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: double getRoundCorner(net.sourceforge.plantuml.CornerParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r12, null);

        $r13 = <net.sourceforge.plantuml.CornerParam: net.sourceforge.plantuml.CornerParam DEFAULT>;

        d2 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: double getDiagonalCorner(net.sourceforge.plantuml.CornerParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r13, null);

        $r14 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_HEAD>;

        if r10 != $r14 goto label008;

        $r124 = new net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        if r52 != null goto label004;

        $r125 = null;

        goto label005;

     label004:
        $r125 = r52[0];

     label005:
        if r52 != null goto label006;

        $r126 = null;

        goto label007;

     label006:
        $r126 = r52[1];

     label007:
        $r127 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam participantBorder>;

        $r128 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r127);

        $r129 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PARTICIPANT>;

        $r130 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r129);

        $r131 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_STEREOTYPE>;

        $r132 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r131);

        $d4 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: double minClassWidth()>();

        specialinvoke $r124.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,double,double,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,double,boolean,double)>($r125, $r126, $r128, $r130, r5, r1, d1, d2, r9, $r132, $d4, 0, d0);

        return $r124;

     label008:
        $r15 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_TAIL>;

        if r10 != $r15 goto label013;

        $r133 = new net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        if r52 != null goto label009;

        $r134 = null;

        goto label010;

     label009:
        $r134 = r52[0];

     label010:
        if r52 != null goto label011;

        $r135 = null;

        goto label012;

     label011:
        $r135 = r52[1];

     label012:
        $r136 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam participantBorder>;

        $r137 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r136);

        $r138 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PARTICIPANT>;

        $r139 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r138);

        $r140 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_STEREOTYPE>;

        $r141 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r140);

        $d5 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: double minClassWidth()>();

        specialinvoke $r133.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,double,double,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,double,boolean,double)>($r134, $r135, $r137, $r139, r5, r1, d1, d2, r9, $r141, $d5, 0, d0);

        return $r133;

     label013:
        $r16 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType COLLECTIONS_HEAD>;

        if r10 != $r16 goto label018;

        $r142 = new net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        if r52 != null goto label014;

        $r143 = null;

        goto label015;

     label014:
        $r143 = r52[0];

     label015:
        if r52 != null goto label016;

        $r144 = null;

        goto label017;

     label016:
        $r144 = r52[1];

     label017:
        $r145 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam collectionsBorder>;

        $r146 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r145);

        $r147 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PARTICIPANT>;

        $r148 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r147);

        $r149 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_STEREOTYPE>;

        $r150 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r149);

        $d6 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: double minClassWidth()>();

        specialinvoke $r142.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,double,double,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,double,boolean,double)>($r143, $r144, $r146, $r148, r5, r1, d1, d2, r9, $r150, $d6, 1, d0);

        return $r142;

     label018:
        $r17 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType COLLECTIONS_TAIL>;

        if r10 != $r17 goto label023;

        $r151 = new net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        if r52 != null goto label019;

        $r152 = null;

        goto label020;

     label019:
        $r152 = r52[0];

     label020:
        if r52 != null goto label021;

        $r153 = null;

        goto label022;

     label021:
        $r153 = r52[1];

     label022:
        $r154 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam collectionsBorder>;

        $r155 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r154);

        $r156 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam PARTICIPANT>;

        $r157 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r156);

        $r158 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_STEREOTYPE>;

        $r159 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r158);

        $d7 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: double minClassWidth()>();

        specialinvoke $r151.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,double,double,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,double,boolean,double)>($r152, $r153, $r155, $r157, r5, r1, d1, d2, r9, $r159, $d7, 1, d0);

        return $r151;

     label023:
        $r18 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_LINE>;

        if r10 != $r18 goto label026;

        $r114 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r115 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r114[0] = $r115;

        r160 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, $r123, $r114);

        $r116 = new net.sourceforge.plantuml.skin.rose.ComponentRoseLine;

        $r117 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        if r52 != null goto label024;

        $r161 = null;

        goto label025;

     label024:
        $r161 = r52[0];

     label025:
        $r118 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceLifeLineBorder>;

        $r119 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r1, $r118, 1.0);

        $r120 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        specialinvoke $r116.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor,boolean,net.sourceforge.plantuml.ugraphic.UStroke,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r117, $r161, r160, 0, $r119, $r120);

        return $r116;

     label026:
        $r19 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTINUE_LINE>;

        if r10 != $r19 goto label029;

        $r107 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r108 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r107[0] = $r108;

        r162 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, $r123, $r107);

        $r109 = new net.sourceforge.plantuml.skin.rose.ComponentRoseLine;

        $r110 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        if r52 != null goto label027;

        $r163 = null;

        goto label028;

     label027:
        $r163 = r52[0];

     label028:
        $r111 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceLifeLineBorder>;

        $r112 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r1, $r111, 1.5);

        $r113 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        specialinvoke $r109.<net.sourceforge.plantuml.skin.rose.ComponentRoseLine: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor,boolean,net.sourceforge.plantuml.ugraphic.UStroke,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r110, $r163, r162, 1, $r112, $r113);

        return $r109;

     label029:
        $r20 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_HEAD>;

        if r10 != $r20 goto label034;

        $r164 = new net.sourceforge.plantuml.skin.rose.ComponentRoseActor;

        $r165 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.skin.ActorStyle actorStyle()>();

        if r52 != null goto label030;

        $r166 = null;

        goto label031;

     label030:
        $r166 = r52[0];

     label031:
        if r52 != null goto label032;

        $r167 = null;

        goto label033;

     label032:
        $r167 = r52[1];

     label033:
        $r168 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam actorBorder>;

        $r169 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r168);

        $r170 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ACTOR>;

        $r171 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r170);

        $r172 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_STEREOTYPE>;

        $r173 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r172);

        specialinvoke $r164.<net.sourceforge.plantuml.skin.rose.ComponentRoseActor: void <init>(net.sourceforge.plantuml.skin.ActorStyle,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r165, $r166, $r167, $r169, $r171, r5, 1, r1, r9, $r173);

        return $r164;

     label034:
        $r21 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_TAIL>;

        if r10 != $r21 goto label039;

        $r174 = new net.sourceforge.plantuml.skin.rose.ComponentRoseActor;

        $r175 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.skin.ActorStyle actorStyle()>();

        if r52 != null goto label035;

        $r176 = null;

        goto label036;

     label035:
        $r176 = r52[0];

     label036:
        if r52 != null goto label037;

        $r177 = null;

        goto label038;

     label037:
        $r177 = r52[1];

     label038:
        $r178 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam actorBorder>;

        $r179 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r178);

        $r180 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ACTOR>;

        $r181 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r180);

        $r182 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_STEREOTYPE>;

        $r183 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r182);

        specialinvoke $r174.<net.sourceforge.plantuml.skin.rose.ComponentRoseActor: void <init>(net.sourceforge.plantuml.skin.ActorStyle,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r175, $r176, $r177, $r179, $r181, r5, 0, r1, r9, $r183);

        return $r174;

     label039:
        $r22 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType BOUNDARY_HEAD>;

        if r10 != $r22 goto label044;

        $r184 = new net.sourceforge.plantuml.skin.rose.ComponentRoseBoundary;

        if r52 != null goto label040;

        $r185 = null;

        goto label041;

     label040:
        $r185 = r52[0];

     label041:
        if r52 != null goto label042;

        $r186 = null;

        goto label043;

     label042:
        $r186 = r52[1];

     label043:
        $r187 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam boundaryBorder>;

        $r188 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r187);

        $r189 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam BOUNDARY>;

        $r190 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r189);

        $r191 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam BOUNDARY_STEREOTYPE>;

        $r192 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r191);

        specialinvoke $r184.<net.sourceforge.plantuml.skin.rose.ComponentRoseBoundary: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r185, $r186, $r188, $r190, r5, 1, r1, r9, $r192);

        return $r184;

     label044:
        $r23 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType BOUNDARY_TAIL>;

        if r10 != $r23 goto label049;

        $r193 = new net.sourceforge.plantuml.skin.rose.ComponentRoseBoundary;

        if r52 != null goto label045;

        $r194 = null;

        goto label046;

     label045:
        $r194 = r52[0];

     label046:
        if r52 != null goto label047;

        $r195 = null;

        goto label048;

     label047:
        $r195 = r52[1];

     label048:
        $r196 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam boundaryBorder>;

        $r197 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r196);

        $r198 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam BOUNDARY>;

        $r199 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r198);

        $r200 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam BOUNDARY_STEREOTYPE>;

        $r201 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r200);

        specialinvoke $r193.<net.sourceforge.plantuml.skin.rose.ComponentRoseBoundary: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r194, $r195, $r197, $r199, r5, 0, r1, r9, $r201);

        return $r193;

     label049:
        $r24 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTROL_HEAD>;

        if r10 != $r24 goto label054;

        $r202 = new net.sourceforge.plantuml.skin.rose.ComponentRoseControl;

        if r52 != null goto label050;

        $r203 = null;

        goto label051;

     label050:
        $r203 = r52[0];

     label051:
        if r52 != null goto label052;

        $r204 = null;

        goto label053;

     label052:
        $r204 = r52[1];

     label053:
        $r205 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam controlBorder>;

        $r206 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r205);

        $r207 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam CONTROL>;

        $r208 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r207);

        $r209 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam CONTROL_STEREOTYPE>;

        $r210 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r209);

        specialinvoke $r202.<net.sourceforge.plantuml.skin.rose.ComponentRoseControl: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r203, $r204, $r206, $r208, r5, 1, r1, r9, $r210);

        return $r202;

     label054:
        $r25 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTROL_TAIL>;

        if r10 != $r25 goto label059;

        $r211 = new net.sourceforge.plantuml.skin.rose.ComponentRoseControl;

        if r52 != null goto label055;

        $r212 = null;

        goto label056;

     label055:
        $r212 = r52[0];

     label056:
        if r52 != null goto label057;

        $r213 = null;

        goto label058;

     label057:
        $r213 = r52[1];

     label058:
        $r214 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam controlBorder>;

        $r215 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r214);

        $r216 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam CONTROL>;

        $r217 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r216);

        $r218 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam CONTROL_STEREOTYPE>;

        $r219 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r218);

        specialinvoke $r211.<net.sourceforge.plantuml.skin.rose.ComponentRoseControl: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r212, $r213, $r215, $r217, r5, 0, r1, r9, $r219);

        return $r211;

     label059:
        $r26 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENTITY_HEAD>;

        if r10 != $r26 goto label064;

        $r220 = new net.sourceforge.plantuml.skin.rose.ComponentRoseEntity;

        if r52 != null goto label060;

        $r221 = null;

        goto label061;

     label060:
        $r221 = r52[0];

     label061:
        if r52 != null goto label062;

        $r222 = null;

        goto label063;

     label062:
        $r222 = r52[1];

     label063:
        $r223 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam entityBorder>;

        $r224 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r223);

        $r225 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ENTITY>;

        $r226 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r225);

        $r227 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ENTITY_STEREOTYPE>;

        $r228 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r227);

        specialinvoke $r220.<net.sourceforge.plantuml.skin.rose.ComponentRoseEntity: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r221, $r222, $r224, $r226, r5, 1, r1, r9, $r228);

        return $r220;

     label064:
        $r27 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENTITY_TAIL>;

        if r10 != $r27 goto label069;

        $r229 = new net.sourceforge.plantuml.skin.rose.ComponentRoseEntity;

        if r52 != null goto label065;

        $r230 = null;

        goto label066;

     label065:
        $r230 = r52[0];

     label066:
        if r52 != null goto label067;

        $r231 = null;

        goto label068;

     label067:
        $r231 = r52[1];

     label068:
        $r232 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam entityBorder>;

        $r233 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r232);

        $r234 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ENTITY>;

        $r235 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r234);

        $r236 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ENTITY_STEREOTYPE>;

        $r237 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r236);

        specialinvoke $r229.<net.sourceforge.plantuml.skin.rose.ComponentRoseEntity: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r230, $r231, $r233, $r235, r5, 0, r1, r9, $r237);

        return $r229;

     label069:
        $r28 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType QUEUE_HEAD>;

        if r10 != $r28 goto label074;

        $r238 = new net.sourceforge.plantuml.skin.rose.ComponentRoseQueue;

        if r52 != null goto label070;

        $r239 = null;

        goto label071;

     label070:
        $r239 = r52[0];

     label071:
        if r52 != null goto label072;

        $r240 = null;

        goto label073;

     label072:
        $r240 = r52[1];

     label073:
        $r241 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam queueBorder>;

        $r242 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r241);

        $r243 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam QUEUE>;

        $r244 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r243);

        $r245 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam QUEUE_STEREOTYPE>;

        $r246 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r245);

        specialinvoke $r238.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r239, $r240, $r242, $r244, r5, 1, r1, r9, $r246);

        return $r238;

     label074:
        $r29 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType QUEUE_TAIL>;

        if r10 != $r29 goto label079;

        $r247 = new net.sourceforge.plantuml.skin.rose.ComponentRoseQueue;

        if r52 != null goto label075;

        $r248 = null;

        goto label076;

     label075:
        $r248 = r52[0];

     label076:
        if r52 != null goto label077;

        $r249 = null;

        goto label078;

     label077:
        $r249 = r52[1];

     label078:
        $r250 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam queueBorder>;

        $r251 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r250);

        $r252 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam QUEUE>;

        $r253 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r252);

        $r254 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam QUEUE_STEREOTYPE>;

        $r255 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r254);

        specialinvoke $r247.<net.sourceforge.plantuml.skin.rose.ComponentRoseQueue: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r248, $r249, $r251, $r253, r5, 0, r1, r9, $r255);

        return $r247;

     label079:
        $r30 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DATABASE_HEAD>;

        if r10 != $r30 goto label084;

        $r256 = new net.sourceforge.plantuml.skin.rose.ComponentRoseDatabase;

        if r52 != null goto label080;

        $r257 = null;

        goto label081;

     label080:
        $r257 = r52[0];

     label081:
        if r52 != null goto label082;

        $r258 = null;

        goto label083;

     label082:
        $r258 = r52[1];

     label083:
        $r259 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam databaseBorder>;

        $r260 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r259);

        $r261 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam DATABASE>;

        $r262 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r261);

        $r263 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam DATABASE_STEREOTYPE>;

        $r264 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r263);

        specialinvoke $r256.<net.sourceforge.plantuml.skin.rose.ComponentRoseDatabase: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r257, $r258, $r260, $r262, r5, 1, r1, r9, $r264);

        return $r256;

     label084:
        $r31 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DATABASE_TAIL>;

        if r10 != $r31 goto label089;

        $r265 = new net.sourceforge.plantuml.skin.rose.ComponentRoseDatabase;

        if r52 != null goto label085;

        $r266 = null;

        goto label086;

     label085:
        $r266 = r52[0];

     label086:
        if r52 != null goto label087;

        $r267 = null;

        goto label088;

     label087:
        $r267 = r52[1];

     label088:
        $r268 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam databaseBorder>;

        $r269 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r268);

        $r270 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam DATABASE>;

        $r271 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r270);

        $r272 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam DATABASE_STEREOTYPE>;

        $r273 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r272);

        specialinvoke $r265.<net.sourceforge.plantuml.skin.rose.ComponentRoseDatabase: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,boolean,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r266, $r267, $r269, $r271, r5, 0, r1, r9, $r273);

        return $r265;

     label089:
        $r32 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE>;

        if r10 != $r32 goto label090;

        $r106 = new java.lang.UnsupportedOperationException;

        specialinvoke $r106.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r106;

     label090:
        $r33 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_HEXAGONAL>;

        if r10 != $r33 goto label091;

        $r105 = new java.lang.UnsupportedOperationException;

        specialinvoke $r105.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r105;

     label091:
        $r34 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_BOX>;

        if r10 != $r34 goto label092;

        $r104 = new java.lang.UnsupportedOperationException;

        specialinvoke $r104.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r104;

     label092:
        $r35 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_GROUP_HEADER>;

        r274 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r35);

        $r36 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_HEADER>;

        if r10 != $r36 goto label098;

        r275 = virtualinvoke r274.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration forceFont(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r4, null);

        $r102 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_GROUP>;

        r103 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getFontColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r1, $r102, null);

        if r103 == null goto label093;

        r275 = virtualinvoke r275.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration changeColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r103);

     label093:
        $r276 = new net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader;

        if r52 != null goto label094;

        $r277 = null;

        goto label095;

     label094:
        $r277 = r52[0];

     label095:
        if r52 != null goto label096;

        $r278 = null;

        goto label097;

     label096:
        $r278 = r52[1];

     label097:
        $r279 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()>();

        $r280 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceGroupBorder>;

        $r281 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r280);

        specialinvoke $r276.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingHeader: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,double)>($r277, $r278, $r279, $r281, r274, r275, r5, r1, d1);

        return $r276;

     label098:
        $r37 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_ELSE>;

        if r10 != $r37 goto label101;

        $r94 = new net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse;

        if r52 != null goto label099;

        $r282 = null;

        goto label100;

     label099:
        $r282 = r52[0];

     label100:
        $r95 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r96 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceGroupBorder>;

        $r95[0] = $r96;

        $r97 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, r6, $r95);

        $r98 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_GROUP>;

        $r99 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r98);

        $r100 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $r101 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()>();

        specialinvoke $r94.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.FontConfiguration,java.lang.CharSequence,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.color.HColor,double)>($r282, $r97, $r99, $r100, r1, $r101, d1);

        return $r94;

     label101:
        $r38 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_SPACE>;

        if r10 != $r38 goto label102;

        $r93 = new net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingSpace;

        specialinvoke $r93.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingSpace: void <init>(double)>(7.0);

        return $r93;

     label102:
        $r39 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_CLOSE>;

        if r10 != $r39 goto label105;

        $r88 = new net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine;

        $r89 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        if r52 != null goto label103;

        $r283 = null;

        goto label104;

     label103:
        $r283 = r52[0];

     label104:
        $r90 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r91 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r90);

        $r92 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        specialinvoke $r88.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,boolean,boolean,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r89, $r283, $r91, 1, 1, $r92);

        return $r88;

     label105:
        $r40 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_OPEN>;

        if r10 != $r40 goto label108;

        $r83 = new net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine;

        $r84 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        if r52 != null goto label106;

        $r284 = null;

        goto label107;

     label106:
        $r284 = r52[0];

     label107:
        $r85 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r86 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r85);

        $r87 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        specialinvoke $r83.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,boolean,boolean,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r84, $r284, $r86, 1, 0, $r87);

        return $r83;

     label108:
        $r41 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_CLOSE>;

        if r10 != $r41 goto label111;

        $r78 = new net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine;

        $r79 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        if r52 != null goto label109;

        $r285 = null;

        goto label110;

     label109:
        $r285 = r52[0];

     label110:
        $r80 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r81 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r80);

        $r82 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        specialinvoke $r78.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,boolean,boolean,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r79, $r285, $r81, 0, 1, $r82);

        return $r78;

     label111:
        $r42 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN>;

        if r10 != $r42 goto label114;

        $r73 = new net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine;

        $r74 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        if r52 != null goto label112;

        $r286 = null;

        goto label113;

     label112:
        $r286 = r52[0];

     label113:
        $r75 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r76 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r75);

        $r77 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        specialinvoke $r73.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,boolean,boolean,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r74, $r286, $r76, 0, 0, $r77);

        return $r73;

     label114:
        $r43 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_LINE>;

        if r10 != $r43 goto label115;

        $r69 = new net.sourceforge.plantuml.skin.rose.ComponentRoseDelayLine;

        $r70 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r71 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r70[0] = $r71;

        $r72 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, $r123, $r70);

        specialinvoke $r69.<net.sourceforge.plantuml.skin.rose.ComponentRoseDelayLine: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor)>(null, $r72);

        return $r69;

     label115:
        $r44 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_TEXT>;

        if r10 != $r44 goto label118;

        $r66 = new net.sourceforge.plantuml.skin.rose.ComponentRoseDelayText;

        if r52 != null goto label116;

        $r287 = null;

        goto label117;

     label116:
        $r287 = r52[0];

     label117:
        $r67 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_DELAY>;

        $r68 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r67);

        specialinvoke $r66.<net.sourceforge.plantuml.skin.rose.ComponentRoseDelayText: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple)>($r287, $r68, r5, r1);

        return $r66;

     label118:
        $r45 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DESTROY>;

        if r10 != $r45 goto label121;

        $r62 = new net.sourceforge.plantuml.skin.rose.ComponentRoseDestroy;

        if r52 != null goto label119;

        $r288 = null;

        goto label120;

     label119:
        $r288 = r52[0];

     label120:
        $r63 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r64 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r63[0] = $r64;

        $r65 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, r6, $r63);

        specialinvoke $r62.<net.sourceforge.plantuml.skin.rose.ComponentRoseDestroy: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ISkinSimple)>($r288, $r65, r1);

        return $r62;

     label121:
        $r46 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NEWPAGE>;

        if r10 != $r46 goto label122;

        $r61 = new java.lang.UnsupportedOperationException;

        specialinvoke $r61.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r61;

     label122:
        $r47 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DIVIDER>;

        if r10 != $r47 goto label127;

        $r289 = new net.sourceforge.plantuml.skin.rose.ComponentRoseDivider;

        if r52 != null goto label123;

        $r290 = null;

        goto label124;

     label123:
        $r290 = r52[0];

     label124:
        $r57 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_DIVIDER>;

        $r291 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r57);

        $r58 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r59 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceDividerBackground>;

        $r58[0] = $r59;

        $r292 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, r6, $r58);

        $r60 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceDividerBackground>;

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r1, $r60);

        $b0 = $d3 cmpl 0.0;

        if $b0 <= 0 goto label125;

        $z1 = 1;

        goto label126;

     label125:
        $z1 = 0;

     label126:
        $r295 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceDividerBorder>;

        $r296 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r1, $r295, 2.0);

        $r297 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r298 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceDividerBorder>;

        $r297[0] = $r298;

        $r299 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, r6, $r297);

        specialinvoke $r289.<net.sourceforge.plantuml.skin.rose.ComponentRoseDivider: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UStroke,net.sourceforge.plantuml.ugraphic.color.HColor)>($r290, $r291, $r292, r5, r1, $z1, $r296, $r299);

        return $r289;

     label127:
        $r48 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType REFERENCE>;

        if r10 != $r48 goto label132;

        $r300 = new net.sourceforge.plantuml.skin.rose.ComponentRoseReference;

        if r52 != null goto label128;

        $r301 = null;

        goto label129;

     label128:
        $r301 = r52[0];

     label129:
        if r52 != null goto label130;

        $r302 = null;

        goto label131;

     label130:
        $r302 = r52[1];

     label131:
        $r303 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_REFERENCE>;

        $r304 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r303);

        $r305 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceReferenceBorder>;

        $r306 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r305);

        $r307 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam sequenceReferenceAlignment>;

        $r308 = interfaceinvoke r1.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r307, null, 0, null);

        $r309 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r310 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceReferenceBackground>;

        $r309[0] = $r310;

        $r311 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r1, r6, $r309);

        specialinvoke $r300.<net.sourceforge.plantuml.skin.rose.ComponentRoseReference: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.color.HColor)>($r301, $r302, $r304, $r306, r274, r5, $r308, r1, $r311);

        return $r300;

     label132:
        $r49 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ENGLOBER>;

        if r10 != $r49 goto label135;

        $r51 = new net.sourceforge.plantuml.skin.rose.ComponentRoseEnglober;

        if r52 != null goto label133;

        $r312 = null;

        goto label134;

     label133:
        $r312 = r52[0];

     label134:
        $r53 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceBoxBorder>;

        $r54 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r6, r1, $r53);

        $r55 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam SEQUENCE_BOX>;

        $r56 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r1, $r55);

        specialinvoke $r51.<net.sourceforge.plantuml.skin.rose.ComponentRoseEnglober: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple,double)>($r312, $r54, r5, $r56, r1, d1);

        return $r51;

     label135:
        $r50 = new java.lang.UnsupportedOperationException;

        specialinvoke $r50.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r50;
    }

    public net.sourceforge.plantuml.skin.Component createComponentNewPage(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.skin.rose.Rose r0;
        net.sourceforge.plantuml.skin.rose.ComponentRoseNewpage $r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.ColorParam $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;

        r0 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: void checkRose()>();

        $r1 = new net.sourceforge.plantuml.skin.rose.ComponentRoseNewpage;

        $r3 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceNewpageSeparator>;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r2, $r3);

        specialinvoke $r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNewpage: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor)>(null, $r4);

        return $r1;
    }

    public net.sourceforge.plantuml.skin.ArrowComponent createComponentArrow(net.sourceforge.plantuml.style.Style[], net.sourceforge.plantuml.skin.ArrowConfiguration, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.skin.rose.Rose r0;
        net.sourceforge.plantuml.skin.ArrowConfiguration r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, r3, $r37;
        net.sourceforge.plantuml.skin.ArrowDirection $r4, $r5, r6, $r10, $r28, $r29, $r30, $r31, $r32, $r33, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, z6, $z7, $z8, $z9, $z10;
        net.sourceforge.plantuml.ISkinParam r7;
        net.sourceforge.plantuml.AlignmentParam $r8, $r9;
        net.sourceforge.plantuml.style.Style[] r11;
        net.sourceforge.plantuml.FontParam $r12, $r35;
        net.sourceforge.plantuml.cucadiagram.Display r13;
        net.sourceforge.plantuml.style.SName[] $r14;
        net.sourceforge.plantuml.style.SName $r15, $r16, $r17, $r18;
        net.sourceforge.plantuml.style.StyleSignature r19;
        net.sourceforge.plantuml.style.StyleBuilder $r20;
        net.sourceforge.plantuml.style.Style r21, $r39, $r49;
        net.sourceforge.plantuml.style.PName $r22;
        net.sourceforge.plantuml.style.Value $r23;
        java.lang.String r24, $r25, $r26, $r27;
        net.sourceforge.plantuml.ColorParam $r36;
        net.sourceforge.plantuml.skin.rose.ComponentRoseSelfArrow $r38;
        net.sourceforge.plantuml.graphic.FontConfiguration $r41, $r51;
        net.sourceforge.plantuml.LineBreakStrategy $r45, $r57;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r46, r47, $r54, $r56;
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow $r48;

        r0 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r11 := @parameter0: net.sourceforge.plantuml.style.Style[];

        r1 := @parameter1: net.sourceforge.plantuml.skin.ArrowConfiguration;

        r7 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r13 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: void checkRose()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r2 != null goto label01;

        $r36 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam arrow>;

        $r37 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r7, $r36);

        goto label02;

     label01:
        $r37 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

     label02:
        r3 = $r37;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        $r5 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection SELF>;

        if $r4 != $r5 goto label07;

        $r38 = new net.sourceforge.plantuml.skin.rose.ComponentRoseSelfArrow;

        if r11 != null goto label03;

        $r39 = null;

        goto label04;

     label03:
        $r39 = r11[0];

     label04:
        $r35 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ARROW>;

        $r41 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r7, $r35);

        $r45 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.LineBreakStrategy maxMessageSize()>();

        $z7 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: boolean strictUmlStyle()>();

        if $z7 != 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        specialinvoke $r38.<net.sourceforge.plantuml.skin.rose.ComponentRoseSelfArrow: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,boolean)>($r39, r3, $r41, r13, r1, r7, $r45, $z8);

        return $r38;

     label07:
        r6 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label19;

        $r14 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r15 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r14[0] = $r15;

        $r16 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r14[1] = $r16;

        $r17 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName sequenceDiagram>;

        $r14[2] = $r17;

        $r18 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r14[3] = $r18;

        r19 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r14);

        $r20 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r21 = virtualinvoke r19.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r20);

        $r22 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName HorizontalAlignment>;

        $r23 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r22);

        r24 = interfaceinvoke $r23.<net.sourceforge.plantuml.style.Value: java.lang.String asString()>();

        r46 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        r47 = virtualinvoke r21.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r25 = "first";

        $z3 = virtualinvoke $r25.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r24);

        if $z3 == 0 goto label12;

        z6 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isReverseDefine()>();

        $r34 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        if r6 != $r34 goto label09;

        if z6 == 0 goto label08;

        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        goto label11;

     label08:
        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        goto label11;

     label09:
        if z6 == 0 goto label10;

        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        goto label11;

     label10:
        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

     label11:
        goto label18;

     label12:
        $r26 = "direction";

        $z4 = virtualinvoke $r26.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r24);

        if $z4 == 0 goto label15;

        $r31 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        if r6 != $r31 goto label13;

        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        goto label18;

     label13:
        $r32 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        if r6 != $r32 goto label14;

        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        goto label18;

     label14:
        $r33 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection BOTH_DIRECTION>;

        if r6 != $r33 goto label18;

        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        goto label18;

     label15:
        $r27 = "reversedirection";

        $z5 = virtualinvoke $r27.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r24);

        if $z5 == 0 goto label18;

        $r28 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        if r6 != $r28 goto label16;

        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        goto label18;

     label16:
        $r29 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        if r6 != $r29 goto label17;

        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        goto label18;

     label17:
        $r30 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection BOTH_DIRECTION>;

        if r6 != $r30 goto label18;

        r46 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

     label18:
        goto label20;

     label19:
        $r8 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam sequenceMessageAlignment>;

        $z1 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isReverseDefine()>();

        r46 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r8, r6, $z1, null);

        $r9 = <net.sourceforge.plantuml.AlignmentParam: net.sourceforge.plantuml.AlignmentParam sequenceMessageTextAlignment>;

        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        r47 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment(net.sourceforge.plantuml.AlignmentParam,net.sourceforge.plantuml.skin.ArrowDirection,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r9, $r10, 0, null);

     label20:
        $r48 = new net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        if r11 != null goto label21;

        $r49 = null;

        goto label22;

     label21:
        $r49 = r11[0];

     label22:
        $r12 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ARROW>;

        $r51 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.graphic.FontConfiguration getUFont2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam)>(r7, $r12);

        $r54 = r46;

        $r56 = r47;

        $r57 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.LineBreakStrategy maxMessageSize()>();

        $z2 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: boolean strictUmlStyle()>();

        if $z2 != 0 goto label23;

        $z9 = 1;

        goto label24;

     label23:
        $z9 = 0;

     label24:
        $z10 = interfaceinvoke r7.<net.sourceforge.plantuml.ISkinParam: boolean responseMessageBelowArrow()>();

        specialinvoke $r48.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.LineBreakStrategy,boolean,boolean)>($r49, r3, $r51, r13, r1, $r54, r7, $r56, $r57, $z9, $z10);

        return $r48;
    }

    private double deltaShadow(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ColorParam)
    {
        net.sourceforge.plantuml.ColorParam r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.ISkinParam r8;
        net.sourceforge.plantuml.skin.rose.Rose r9;
        net.sourceforge.plantuml.graphic.SkinParameter r10;
        boolean $z1;
        double $d0;

        r9 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r8 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r0 := @parameter1: net.sourceforge.plantuml.ColorParam;

        r10 = null;

        $r1 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam participantBorder>;

        if r0 != $r1 goto label01;

        r10 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter PARTICIPANT>;

        goto label07;

     label01:
        $r2 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam actorBorder>;

        if r0 != $r2 goto label02;

        r10 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter ACTOR>;

        goto label07;

     label02:
        $r3 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam boundaryBorder>;

        if r0 != $r3 goto label03;

        r10 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter BOUNDARY>;

        goto label07;

     label03:
        $r4 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam controlBorder>;

        if r0 != $r4 goto label04;

        r10 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter CONTROL>;

        goto label07;

     label04:
        $r5 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam entityBorder>;

        if r0 != $r5 goto label05;

        r10 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter ENTITY>;

        goto label07;

     label05:
        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam collectionsBorder>;

        if r0 != $r6 goto label06;

        r10 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter COLLECTIONS>;

        goto label07;

     label06:
        $r7 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam databaseBorder>;

        if r0 != $r7 goto label07;

        r10 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter DATABASE>;

     label07:
        if r10 != null goto label08;

        $z1 = interfaceinvoke r8.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        goto label09;

     label08:
        $z1 = interfaceinvoke r8.<net.sourceforge.plantuml.ISkinParam: boolean shadowing2(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.graphic.SkinParameter)>(null, r10);

     label09:
        if $z1 == 0 goto label10;

        $d0 = 4.0;

        goto label11;

     label10:
        $d0 = 0.0;

     label11:
        return $d0;
    }

    private net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ColorParam)
    {
        net.sourceforge.plantuml.ColorParam r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r20, $r23, $r31, $r34, $r38, $r41, $r49, $r52, $r60, $r63, $r68, $r71, $r79, $r82, $r90, $r93, $r101, $r104, $r112, $r115, $r123, $r126, $r134, $r137, $r145, $r148;
        java.lang.IllegalArgumentException $r14;
        net.sourceforge.plantuml.graphic.SymbolContext $r15, $r27, $r28, $r29, $r36, $r45, $r46, $r47, $r56, $r57, $r58, $r65, $r66, $r75, $r76, $r77, $r86, $r87, $r88, $r97, $r98, $r99, $r108, $r109, $r110, $r119, $r120, $r121, $r130, $r131, $r132, $r141, $r142, $r143, $r152, $r153;
        net.sourceforge.plantuml.skin.rose.Rose r16;
        net.sourceforge.plantuml.ISkinParam r17;
        net.sourceforge.plantuml.cucadiagram.Stereotype r18;
        net.sourceforge.plantuml.ColorParam[] $r19, $r22, $r30, $r33, $r37, $r40, $r48, $r51, $r59, $r62, $r67, $r70, $r78, $r81, $r89, $r92, $r100, $r103, $r111, $r114, $r122, $r125, $r133, $r136, $r144, $r147;
        net.sourceforge.plantuml.ugraphic.color.HColor $r21, $r24, $r32, $r35, $r39, $r42, $r50, $r53, $r61, $r64, $r69, $r72, $r80, $r83, $r91, $r94, $r102, $r105, $r113, $r116, $r124, $r127, $r135, $r138, $r146, $r149;
        net.sourceforge.plantuml.LineParam $r25, $r43, $r54, $r73, $r84, $r95, $r106, $r117, $r128, $r139, $r150;
        net.sourceforge.plantuml.ugraphic.UStroke $r26, $r44, $r55, $r74, $r85, $r96, $r107, $r118, $r129, $r140, $r151;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11;

        r16 := @this: net.sourceforge.plantuml.skin.rose.Rose;

        r18 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r17 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r0 := @parameter2: net.sourceforge.plantuml.ColorParam;

        $r1 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam participantBorder>;

        if r0 != $r1 goto label01;

        $r143 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r144 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r145 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam participantBackground>;

        $r144[0] = $r145;

        $r146 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r144);

        $r147 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r148 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam participantBorder>;

        $r147[0] = $r148;

        $r149 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r147);

        specialinvoke $r143.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r146, $r149);

        $r150 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceParticipantBorder>;

        $r151 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r150, 1.5);

        $r152 = virtualinvoke $r143.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r151);

        $d9 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r153 = virtualinvoke $r152.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d9);

        return $r153;

     label01:
        $r2 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam actorBorder>;

        if r0 != $r2 goto label02;

        $r132 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r133 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r134 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam actorBackground>;

        $r133[0] = $r134;

        $r135 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r133);

        $r136 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r137 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam actorBorder>;

        $r136[0] = $r137;

        $r138 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r136);

        specialinvoke $r132.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r135, $r138);

        $r139 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceActorBorder>;

        $r140 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r139, 2.0);

        $r141 = virtualinvoke $r132.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r140);

        $d8 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r142 = virtualinvoke $r141.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d8);

        return $r142;

     label02:
        $r3 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam boundaryBorder>;

        if r0 != $r3 goto label03;

        $r121 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r122 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r123 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam boundaryBackground>;

        $r122[0] = $r123;

        $r124 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r122);

        $r125 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r126 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam boundaryBorder>;

        $r125[0] = $r126;

        $r127 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r125);

        specialinvoke $r121.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r124, $r127);

        $r128 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceActorBorder>;

        $r129 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r128, 2.0);

        $r130 = virtualinvoke $r121.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r129);

        $d7 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r131 = virtualinvoke $r130.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d7);

        return $r131;

     label03:
        $r4 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam controlBorder>;

        if r0 != $r4 goto label04;

        $r110 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r111 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r112 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam controlBackground>;

        $r111[0] = $r112;

        $r113 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r111);

        $r114 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r115 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam controlBorder>;

        $r114[0] = $r115;

        $r116 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r114);

        specialinvoke $r110.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r113, $r116);

        $r117 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceActorBorder>;

        $r118 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r117, 2.0);

        $r119 = virtualinvoke $r110.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r118);

        $d6 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r120 = virtualinvoke $r119.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d6);

        return $r120;

     label04:
        $r5 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam collectionsBorder>;

        if r0 != $r5 goto label05;

        $r99 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r100 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r101 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam collectionsBackground>;

        $r100[0] = $r101;

        $r102 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r100);

        $r103 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r104 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam collectionsBorder>;

        $r103[0] = $r104;

        $r105 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r103);

        specialinvoke $r99.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r102, $r105);

        $r106 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceActorBorder>;

        $r107 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r106, 1.5);

        $r108 = virtualinvoke $r99.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r107);

        $d5 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r109 = virtualinvoke $r108.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d5);

        return $r109;

     label05:
        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam queueBorder>;

        if r0 != $r6 goto label06;

        d10 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r88 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r89 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r90 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam queueBackground>;

        $r89[0] = $r90;

        $r91 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r89);

        $r92 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r93 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam queueBorder>;

        $r92[0] = $r93;

        $r94 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r92);

        specialinvoke $r88.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r91, $r94);

        $r95 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam queueBorder>;

        $r96 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r95, 2.0);

        $r97 = virtualinvoke $r88.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r96);

        $r98 = virtualinvoke $r97.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>(d10);

        return $r98;

     label06:
        $r7 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam entityBorder>;

        if r0 != $r7 goto label07;

        d11 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r77 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r78 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r79 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam entityBackground>;

        $r78[0] = $r79;

        $r80 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r78);

        $r81 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r82 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam entityBorder>;

        $r81[0] = $r82;

        $r83 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r81);

        specialinvoke $r77.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r80, $r83);

        $r84 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceActorBorder>;

        $r85 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r84, 2.0);

        $r86 = virtualinvoke $r77.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r85);

        $r87 = virtualinvoke $r86.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>(d11);

        return $r87;

     label07:
        $r8 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam databaseBorder>;

        if r0 != $r8 goto label08;

        $r66 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r67 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r68 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam databaseBackground>;

        $r67[0] = $r68;

        $r69 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r67);

        $r70 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r71 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam databaseBorder>;

        $r70[0] = $r71;

        $r72 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r70);

        specialinvoke $r66.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r69, $r72);

        $r73 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceActorBorder>;

        $r74 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r73, 2.0);

        $r75 = virtualinvoke $r66.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r74);

        $d4 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r76 = virtualinvoke $r75.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d4);

        return $r76;

     label08:
        $r9 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        if r0 != $r9 goto label09;

        $r58 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r59 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r60 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBackground>;

        $r59[0] = $r60;

        $r61 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r59);

        $r62 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r63 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceLifeLineBorder>;

        $r62[0] = $r63;

        $r64 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r62);

        specialinvoke $r58.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r61, $r64);

        $d3 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r65 = virtualinvoke $r58.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d3);

        return $r65;

     label09:
        $r10 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        if r0 != $r10 goto label10;

        $r47 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r48 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r49 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBackground>;

        $r48[0] = $r49;

        $r50 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r48);

        $r51 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r52 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        $r51[0] = $r52;

        $r53 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r51);

        specialinvoke $r47.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r50, $r53);

        $r54 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam noteBorder>;

        $r55 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r54, 1.0);

        $r56 = virtualinvoke $r47.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r55);

        $d2 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r57 = virtualinvoke $r56.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d2);

        return $r57;

     label10:
        $r11 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceGroupBorder>;

        if r0 != $r11 goto label11;

        $r36 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r37 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r38 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceGroupBackground>;

        $r37[0] = $r38;

        $r39 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r37);

        $r40 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r41 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceGroupBorder>;

        $r40[0] = $r41;

        $r42 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r40);

        specialinvoke $r36.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r39, $r42);

        $r43 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceGroupBorder>;

        $r44 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r43, 2.0);

        $r45 = virtualinvoke $r36.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r44);

        $d1 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r46 = virtualinvoke $r45.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d1);

        return $r46;

     label11:
        $r12 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceBoxBorder>;

        if r0 != $r12 goto label12;

        $r29 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r30 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r31 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceBoxBackground>;

        $r30[0] = $r31;

        $r32 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r30);

        $r33 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r34 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceBoxBorder>;

        $r33[0] = $r34;

        $r35 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r33);

        specialinvoke $r29.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r32, $r35);

        return $r29;

     label12:
        $r13 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceReferenceBorder>;

        if r0 != $r13 goto label13;

        $r15 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r19 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r20 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceReferenceHeaderBackground>;

        $r19[0] = $r20;

        $r21 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r19);

        $r22 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r23 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam sequenceReferenceBorder>;

        $r22[0] = $r23;

        $r24 = virtualinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r17, r18, $r22);

        specialinvoke $r15.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r21, $r24);

        $r25 = <net.sourceforge.plantuml.LineParam: net.sourceforge.plantuml.LineParam sequenceReferenceBorder>;

        $r26 = staticinvoke <net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.LineParam,double)>(r17, $r25, 2.0);

        $r27 = virtualinvoke $r15.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r26);

        $d0 = specialinvoke r16.<net.sourceforge.plantuml.skin.rose.Rose: double deltaShadow(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r17, r0);

        $r28 = virtualinvoke $r27.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)>($d0);

        return $r28;

     label13:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r14;
    }

    public static net.sourceforge.plantuml.ugraphic.UStroke getStroke(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.LineParam, double)
    {
        net.sourceforge.plantuml.ISkinParam r0;
        net.sourceforge.plantuml.LineParam r1;
        net.sourceforge.plantuml.ugraphic.UStroke r2, $r3;
        double d0;

        r0 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r1 := @parameter1: net.sourceforge.plantuml.LineParam;

        d0 := @parameter2: double;

        r2 = interfaceinvoke r0.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UStroke getThickness(net.sourceforge.plantuml.LineParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r1, null);

        if r2 != null goto label1;

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(d0);

        return $r3;

     label1:
        return r2;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.skin.rose.Rose: double paddingY> = 5.0;

        return;
    }
}
