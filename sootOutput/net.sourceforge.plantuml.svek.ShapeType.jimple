public final enum class net.sourceforge.plantuml.svek.ShapeType extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.svek.ShapeType RECTANGLE;
    public static final enum net.sourceforge.plantuml.svek.ShapeType RECTANGLE_WITH_CIRCLE_INSIDE;
    public static final enum net.sourceforge.plantuml.svek.ShapeType RECTANGLE_HTML_FOR_PORTS;
    public static final enum net.sourceforge.plantuml.svek.ShapeType ROUND_RECTANGLE;
    public static final enum net.sourceforge.plantuml.svek.ShapeType CIRCLE;
    public static final enum net.sourceforge.plantuml.svek.ShapeType CIRCLE_IN_RECT;
    public static final enum net.sourceforge.plantuml.svek.ShapeType OVAL;
    public static final enum net.sourceforge.plantuml.svek.ShapeType DIAMOND;
    public static final enum net.sourceforge.plantuml.svek.ShapeType OCTAGON;
    public static final enum net.sourceforge.plantuml.svek.ShapeType FOLDER;
    public static final enum net.sourceforge.plantuml.svek.ShapeType HEXAGON;
    private static final net.sourceforge.plantuml.svek.ShapeType[] $VALUES;

    public static net.sourceforge.plantuml.svek.ShapeType[] values()
    {
        net.sourceforge.plantuml.svek.ShapeType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.svek.ShapeType[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.svek.ShapeType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.svek.ShapeType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/svek/ShapeType;", r0);

        $r2 = (net.sourceforge.plantuml.svek.ShapeType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.svek.ShapeType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.svek.ShapeType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    private static net.sourceforge.plantuml.svek.ShapeType[] $values()
    {
        net.sourceforge.plantuml.svek.ShapeType[] $r0;
        net.sourceforge.plantuml.svek.ShapeType $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;

        $r0 = newarray (net.sourceforge.plantuml.svek.ShapeType)[11];

        $r1 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE_WITH_CIRCLE_INSIDE>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE_HTML_FOR_PORTS>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType ROUND_RECTANGLE>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType CIRCLE>;

        $r0[4] = $r5;

        $r6 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType CIRCLE_IN_RECT>;

        $r0[5] = $r6;

        $r7 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType OVAL>;

        $r0[6] = $r7;

        $r8 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType DIAMOND>;

        $r0[7] = $r8;

        $r9 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType OCTAGON>;

        $r0[8] = $r9;

        $r10 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType FOLDER>;

        $r0[9] = $r10;

        $r11 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType HEXAGON>;

        $r0[10] = $r11;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        net.sourceforge.plantuml.svek.ShapeType[] $r11;

        $r0 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("RECTANGLE", 0);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE> = $r0;

        $r1 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r1.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("RECTANGLE_WITH_CIRCLE_INSIDE", 1);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE_WITH_CIRCLE_INSIDE> = $r1;

        $r2 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r2.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("RECTANGLE_HTML_FOR_PORTS", 2);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE_HTML_FOR_PORTS> = $r2;

        $r3 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r3.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("ROUND_RECTANGLE", 3);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType ROUND_RECTANGLE> = $r3;

        $r4 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r4.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("CIRCLE", 4);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType CIRCLE> = $r4;

        $r5 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r5.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("CIRCLE_IN_RECT", 5);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType CIRCLE_IN_RECT> = $r5;

        $r6 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r6.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("OVAL", 6);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType OVAL> = $r6;

        $r7 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r7.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("DIAMOND", 7);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType DIAMOND> = $r7;

        $r8 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r8.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("OCTAGON", 8);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType OCTAGON> = $r8;

        $r9 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r9.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("FOLDER", 9);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType FOLDER> = $r9;

        $r10 = new net.sourceforge.plantuml.svek.ShapeType;

        specialinvoke $r10.<net.sourceforge.plantuml.svek.ShapeType: void <init>(java.lang.String,int)>("HEXAGON", 10);

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType HEXAGON> = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType[] $values()>();

        <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType[] $VALUES> = $r11;

        return;
    }
}
