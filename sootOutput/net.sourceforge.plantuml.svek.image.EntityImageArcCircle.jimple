public class net.sourceforge.plantuml.svek.image.EntityImageArcCircle extends net.sourceforge.plantuml.svek.AbstractEntityImage
{
    private final net.sourceforge.plantuml.graphic.TextBlock name;
    private final net.sourceforge.plantuml.graphic.TextBlock stereo;

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.svek.image.EntityImageArcCircle r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2, $r6, $r12, $r17;
        net.sourceforge.plantuml.cucadiagram.Stereotype r3;
        net.sourceforge.plantuml.cucadiagram.Display $r4, $r15;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5, $r16;
        net.sourceforge.plantuml.FontParam $r7, $r18;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r8, $r19;
        net.sourceforge.plantuml.graphic.TextBlock $r9, $r20;
        net.sourceforge.plantuml.Guillemet $r10, $r13;
        java.lang.String $r11, $r14;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageArcCircle;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractEntityImage: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        r3 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r5 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam COMPONENT>;

        specialinvoke $r5.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r6, $r7, r3);

        $r8 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r9 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r5, $r8, r2);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock name> = $r9;

        if r3 == null goto label1;

        $r10 = <net.sourceforge.plantuml.Guillemet: net.sourceforge.plantuml.Guillemet DOUBLE_COMPARATOR>;

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)>($r10);

        if $r11 != null goto label2;

     label1:
        r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock stereo> = null;

        goto label3;

     label2:
        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.Guillemet guillemet()>();

        $r14 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.lang.String getLabel(net.sourceforge.plantuml.Guillemet)>($r13);

        $r15 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r14);

        $r16 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r18 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam COMPONENT_STEREOTYPE>;

        specialinvoke $r16.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r17, $r18, r3);

        $r19 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r20 = virtualinvoke $r15.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r16, $r19, r2);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock stereo> = $r20;

     label3:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.image.EntityImageArcCircle r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r4, $r5;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageArcCircle;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock name>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.awt.geom.Dimension2D getStereoDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D mergeTB(net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r4, r3);

        return $r5;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D getStereoDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.image.EntityImageArcCircle r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r3;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;
        net.sourceforge.plantuml.Dimension2DDouble $r5;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageArcCircle;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        if $r1 != null goto label1;

        $r5 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r5.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(0.0, 0.0);

        return $r5;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        return $r4;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r9, $r13;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.svek.image.EntityImageArcCircle r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r4, r6;
        net.sourceforge.plantuml.graphic.TextBlock $r5, $r8, $r10, $r11;
        double $d0, $d1, $d2, d3, d4, $d5, $d6, $d7, d8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r12;

        r2 := @this: net.sourceforge.plantuml.svek.image.EntityImageArcCircle;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.awt.geom.Dimension2D getStereoDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = virtualinvoke r2.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r2.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock name>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 - $d1;

        d3 = $d2 / 2.0;

        d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r8 = r2.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock name>;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d4);

        $r9 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

        $r10 = r2.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        if $r10 == null goto label1;

        $d5 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d7 = $d5 - $d6;

        d8 = $d7 / 2.0;

        $r11 = r2.<net.sourceforge.plantuml.svek.image.EntityImageArcCircle: net.sourceforge.plantuml.graphic.TextBlock stereo>;

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d8);

        $r13 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r11.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r13);

     label1:
        return;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.svek.image.EntityImageArcCircle r1;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageArcCircle;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE>;

        return $r0;
    }
}
