class net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final int val$index;
    final net.sourceforge.plantuml.sequencediagram.graphic.Page val$page;
    final net.sourceforge.plantuml.graphic.TextBlock val$compTitle;
    final net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area;
    final net.sourceforge.plantuml.graphic.TextBlock val$caption;
    final net.sourceforge.plantuml.AnnotatedWorker val$annotatedWorker;
    final net.sourceforge.plantuml.graphic.TextBlock val$legendBlock;
    final net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 this$0;

    void <init>(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2, int, net.sourceforge.plantuml.sequencediagram.graphic.Page, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.AnnotatedWorker, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r1;
        int i0;
        net.sourceforge.plantuml.sequencediagram.graphic.Page r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r5, r7;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea r4;
        net.sourceforge.plantuml.AnnotatedWorker r6;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        i0 := @parameter1: int;

        r2 := @parameter2: net.sourceforge.plantuml.sequencediagram.graphic.Page;

        r3 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter4: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea;

        r5 := @parameter5: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter6: net.sourceforge.plantuml.AnnotatedWorker;

        r7 := @parameter7: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 this$0> = r1;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: int val$index> = i0;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.Page val$page> = r2;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.graphic.TextBlock val$compTitle> = r3;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area> = r4;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.graphic.TextBlock val$caption> = r5;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.AnnotatedWorker val$annotatedWorker> = r6;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.graphic.TextBlock val$legendBlock> = r7;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1 r0;
        int $i0, $i2, $i3;
        byte $b1;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r5, $r30, $r35, r45, r46;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r7, $r22, $r32, $r37, $r41;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r10, $r28, $r38;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea $r4, $r6, $r8, $r9, $r11, $r12, $r23, $r25, $r27, $r29, $r31, $r39, $r40;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 $r14, $r16, $r18, $r24, $r26, $r33;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r15;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r17;
        net.sourceforge.plantuml.sequencediagram.graphic.Page $r19, $r42, $r43;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r20, $r34;
        boolean $z0, $z1;
        net.sourceforge.plantuml.AnnotatedWorker $r21;
        net.sourceforge.plantuml.ugraphic.UBackground $r36;
        net.sourceforge.plantuml.ugraphic.color.HColor r44;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d16 = 0.0;

        $i0 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: int val$index>;

        if $i0 <= 0 goto label1;

        $r42 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.Page val$page>;

        $d14 = virtualinvoke $r42.<net.sourceforge.plantuml.sequencediagram.graphic.Page: double getNewpage1()>();

        $r43 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.Page val$page>;

        $d15 = virtualinvoke $r43.<net.sourceforge.plantuml.sequencediagram.graphic.Page: double getHeaderHeight()>();

        d16 = $d14 - $d15;

     label1:
        $b1 = d16 cmpg 0.0;

        if $b1 >= 0 goto label2;

        d16 = 0.0;

     label2:
        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.graphic.TextBlock val$compTitle>;

        if $r1 == null goto label3;

        $r33 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 this$0>;

        $r34 = staticinvoke <net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram access$000(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2)>($r33);

        r44 = virtualinvoke $r34.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ugraphic.color.HColor calculateBackColor()>();

        $r35 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.graphic.TextBlock val$compTitle>;

        $r36 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r37 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r36);

        $r38 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r39 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d12 = virtualinvoke $r39.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getTitleX()>();

        $r40 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d13 = virtualinvoke $r40.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getTitleY()>();

        specialinvoke $r38.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d12, $d13);

        $r41 = interfaceinvoke $r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r38);

        interfaceinvoke $r35.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r41);

     label3:
        $r5 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.graphic.TextBlock val$caption>;

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r4 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getCaptionX()>();

        $r6 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d1 = virtualinvoke $r6.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getCaptionY()>();

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d0, $d1);

        $r7 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

        $r8 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d2 = virtualinvoke $r8.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getLegendWidth()>();

        $r9 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d3 = virtualinvoke $r9.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getWidth()>();

        $d4 = $d2 - $d3;

        d17 = staticinvoke <java.lang.Math: double max(double,double)>(0.0, $d4);

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r11 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d5 = virtualinvoke $r11.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getSequenceAreaX()>();

        $d6 = d17 / 2.0;

        $d7 = $d5 + $d6;

        $r12 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d8 = virtualinvoke $r12.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getSequenceAreaY()>();

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, $d8);

        $r14 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 this$0>;

        $r15 = staticinvoke <net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet access$200(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2)>($r14);

        $r16 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 this$0>;

        $r17 = staticinvoke <net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.awt.geom.Dimension2D access$100(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2)>($r16);

        $d9 = virtualinvoke $r17.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r19 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.Page val$page>;

        $r18 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 this$0>;

        $r20 = staticinvoke <net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram access$000(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2)>($r18);

        $z0 = virtualinvoke $r20.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: boolean isShowFootbox()>();

        r45 = virtualinvoke $r15.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.graphic.TextBlock asTextBlock(double,double,net.sourceforge.plantuml.sequencediagram.graphic.Page,boolean)>(d16, $d9, $r19, $z0);

        $r21 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.AnnotatedWorker val$annotatedWorker>;

        r46 = virtualinvoke $r21.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock addFrame(net.sourceforge.plantuml.graphic.TextBlock)>(r45);

        $r22 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke r46.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r22);

        $r24 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 this$0>;

        $r23 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $i2 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: int val$index>;

        staticinvoke <net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: void access$300(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2,net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea,net.sourceforge.plantuml.ugraphic.UGraphic,int)>($r24, $r23, r2, $i2);

        $r26 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 this$0>;

        $r25 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $i3 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: int val$index>;

        staticinvoke <net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: void access$400(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2,net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea,net.sourceforge.plantuml.ugraphic.UGraphic,int)>($r26, $r25, r2, $i3);

        $r27 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $z1 = virtualinvoke $r27.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: boolean hasLegend()>();

        if $z1 == 0 goto label4;

        $r30 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.graphic.TextBlock val$legendBlock>;

        $r28 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r29 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d10 = virtualinvoke $r29.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getLegendX()>();

        $r31 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea val$area>;

        $d11 = virtualinvoke $r31.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getLegendY()>();

        specialinvoke $r28.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d10, $d11);

        $r32 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r28);

        interfaceinvoke $r30.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r32);

     label4:
        return;
    }
}
