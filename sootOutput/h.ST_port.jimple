public final class h.ST_port extends smetana.core.UnsupportedStarStruct
{
    public final h.ST_pointf p;
    public double theta;
    public h.ST_boxf bp;
    public boolean defined;
    public boolean constrained;
    public boolean clip;
    public boolean dyna;
    public int order;
    public int side;
    public smetana.core.CString name;

    public void <init>()
    {
        h.ST_port r0;
        h.ST_pointf $r1;

        r0 := @this: h.ST_port;

        specialinvoke r0.<smetana.core.UnsupportedStarStruct: void <init>()>();

        $r1 = new h.ST_pointf;

        specialinvoke $r1.<h.ST_pointf: void <init>()>();

        r0.<h.ST_port: h.ST_pointf p> = $r1;

        return;
    }

    public void ___(smetana.core.__struct__)
    {
        smetana.core.__struct__ r0;
        h.ST_port r1, r2;
        h.ST_pointf $r3, $r4;
        double $d0;
        h.ST_boxf $r5;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        smetana.core.CString $r6;

        r2 := @this: h.ST_port;

        r0 := @parameter0: smetana.core.__struct__;

        r1 = (h.ST_port) r0;

        $r4 = r2.<h.ST_port: h.ST_pointf p>;

        $r3 = r1.<h.ST_port: h.ST_pointf p>;

        virtualinvoke $r4.<h.ST_pointf: void ___(smetana.core.__struct__)>($r3);

        $d0 = r1.<h.ST_port: double theta>;

        r2.<h.ST_port: double theta> = $d0;

        $r5 = r1.<h.ST_port: h.ST_boxf bp>;

        r2.<h.ST_port: h.ST_boxf bp> = $r5;

        $z0 = r1.<h.ST_port: boolean defined>;

        r2.<h.ST_port: boolean defined> = $z0;

        $z1 = r1.<h.ST_port: boolean constrained>;

        r2.<h.ST_port: boolean constrained> = $z1;

        $z2 = r1.<h.ST_port: boolean clip>;

        r2.<h.ST_port: boolean clip> = $z2;

        $z3 = r1.<h.ST_port: boolean dyna>;

        r2.<h.ST_port: boolean dyna> = $z3;

        $i0 = r1.<h.ST_port: int order>;

        r2.<h.ST_port: int order> = $i0;

        $i1 = r1.<h.ST_port: int side>;

        r2.<h.ST_port: int side> = $i1;

        $r6 = r1.<h.ST_port: smetana.core.CString name>;

        r2.<h.ST_port: smetana.core.CString name> = $r6;

        return;
    }

    public h.ST_port copy()
    {
        h.ST_port $r0, r2;
        h.ST_pointf $r3, $r4;
        double $d0;
        h.ST_boxf $r5;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        smetana.core.CString $r6;

        r2 := @this: h.ST_port;

        $r0 = new h.ST_port;

        specialinvoke $r0.<h.ST_port: void <init>()>();

        $r4 = $r0.<h.ST_port: h.ST_pointf p>;

        $r3 = r2.<h.ST_port: h.ST_pointf p>;

        virtualinvoke $r4.<h.ST_pointf: void ___(smetana.core.__struct__)>($r3);

        $d0 = r2.<h.ST_port: double theta>;

        $r0.<h.ST_port: double theta> = $d0;

        $r5 = r2.<h.ST_port: h.ST_boxf bp>;

        $r0.<h.ST_port: h.ST_boxf bp> = $r5;

        $z0 = r2.<h.ST_port: boolean defined>;

        $r0.<h.ST_port: boolean defined> = $z0;

        $z1 = r2.<h.ST_port: boolean constrained>;

        $r0.<h.ST_port: boolean constrained> = $z1;

        $z2 = r2.<h.ST_port: boolean clip>;

        $r0.<h.ST_port: boolean clip> = $z2;

        $z3 = r2.<h.ST_port: boolean dyna>;

        $r0.<h.ST_port: boolean dyna> = $z3;

        $i0 = r2.<h.ST_port: int order>;

        $r0.<h.ST_port: int order> = $i0;

        $i1 = r2.<h.ST_port: int side>;

        $r0.<h.ST_port: int side> = $i1;

        $r6 = r2.<h.ST_port: smetana.core.CString name>;

        $r0.<h.ST_port: smetana.core.CString name> = $r6;

        return $r0;
    }

    public volatile smetana.core.__struct__ copy()
    {
        h.ST_port r0, $r1;

        r0 := @this: h.ST_port;

        $r1 = virtualinvoke r0.<h.ST_port: h.ST_port copy()>();

        return $r1;
    }
}
