public class net.sourceforge.plantuml.api.ImageDataSimple extends net.sourceforge.plantuml.api.ImageDataAbstract
{

    public void <init>(int, int)
    {
        net.sourceforge.plantuml.api.ImageDataSimple r0;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataSimple;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<net.sourceforge.plantuml.api.ImageDataAbstract: void <init>(int,int)>(i0, i1);

        return;
    }

    public void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.api.ImageDataSimple r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataSimple;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        specialinvoke r0.<net.sourceforge.plantuml.api.ImageDataAbstract: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1);

        return;
    }

    public void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D, int)
    {
        net.sourceforge.plantuml.api.ImageDataSimple r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataSimple;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        i0 := @parameter1: int;

        specialinvoke r0.<net.sourceforge.plantuml.api.ImageDataAbstract: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1);

        virtualinvoke r0.<net.sourceforge.plantuml.api.ImageDataSimple: void setStatus(int)>(i0);

        return;
    }

    private void <init>()
    {
        net.sourceforge.plantuml.api.ImageDataSimple r0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataSimple;

        specialinvoke r0.<net.sourceforge.plantuml.api.ImageDataSimple: void <init>(int,int)>(0, 0);

        return;
    }

    public boolean containsCMapData()
    {
        net.sourceforge.plantuml.api.ImageDataSimple r0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataSimple;

        return 0;
    }

    public java.lang.String getCMapData(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.api.ImageDataSimple r1;
        java.lang.String r2;

        r1 := @this: net.sourceforge.plantuml.api.ImageDataSimple;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.String getWarningOrError()
    {
        net.sourceforge.plantuml.api.ImageDataSimple r0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataSimple;

        return null;
    }

    public static net.sourceforge.plantuml.core.ImageData error()
    {
        net.sourceforge.plantuml.api.ImageDataSimple $r0;

        $r0 = new net.sourceforge.plantuml.api.ImageDataSimple;

        specialinvoke $r0.<net.sourceforge.plantuml.api.ImageDataSimple: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.api.ImageDataSimple: void setStatus(int)>(503);

        return $r0;
    }

    public static net.sourceforge.plantuml.core.ImageData ok()
    {
        net.sourceforge.plantuml.api.ImageDataSimple $r0;

        $r0 = new net.sourceforge.plantuml.api.ImageDataSimple;

        specialinvoke $r0.<net.sourceforge.plantuml.api.ImageDataSimple: void <init>()>();

        return $r0;
    }
}
