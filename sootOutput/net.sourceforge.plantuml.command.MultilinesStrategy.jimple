public final enum class net.sourceforge.plantuml.command.MultilinesStrategy extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.command.MultilinesStrategy REMOVE_STARTING_QUOTE;
    public static final enum net.sourceforge.plantuml.command.MultilinesStrategy KEEP_STARTING_QUOTE;
    private static final net.sourceforge.plantuml.command.MultilinesStrategy[] $VALUES;

    public static net.sourceforge.plantuml.command.MultilinesStrategy[] values()
    {
        net.sourceforge.plantuml.command.MultilinesStrategy[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.command.MultilinesStrategy[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.command.MultilinesStrategy valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.command.MultilinesStrategy $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/command/MultilinesStrategy;", r0);

        $r2 = (net.sourceforge.plantuml.command.MultilinesStrategy) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.command.MultilinesStrategy r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.command.MultilinesStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public void cleanList(java.util.List)
    {
        net.sourceforge.plantuml.command.MultilinesStrategy r0, $r1;
        java.util.List r2;

        r0 := @this: net.sourceforge.plantuml.command.MultilinesStrategy;

        r2 := @parameter0: java.util.List;

        $r1 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy REMOVE_STARTING_QUOTE>;

        if r0 != $r1 goto label1;

        specialinvoke r0.<net.sourceforge.plantuml.command.MultilinesStrategy: void filterQuote(java.util.List)>(r2);

     label1:
        return;
    }

    private void filterQuote(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.StringLocated r3;
        net.sourceforge.plantuml.command.MultilinesStrategy r4;

        r4 := @this: net.sourceforge.plantuml.command.MultilinesStrategy;

        r0 := @parameter0: java.util.List;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.StringLocated) $r2;

        $z1 = specialinvoke r4.<net.sourceforge.plantuml.command.MultilinesStrategy: boolean hasStartingQuote(net.sourceforge.plantuml.StringLocated)>(r3);

        if $z1 == 0 goto label2;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

     label2:
        goto label1;

     label3:
        return;
    }

    private boolean hasStartingQuote(net.sourceforge.plantuml.StringLocated)
    {
        net.sourceforge.plantuml.StringLocated r0, $r1;
        java.lang.String $r2;
        boolean $z0;
        net.sourceforge.plantuml.command.MultilinesStrategy r3;

        r3 := @this: net.sourceforge.plantuml.command.MultilinesStrategy;

        r0 := @parameter0: net.sourceforge.plantuml.StringLocated;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated getTrimmed()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        return $z0;
    }

    private static net.sourceforge.plantuml.command.MultilinesStrategy[] $values()
    {
        net.sourceforge.plantuml.command.MultilinesStrategy[] $r0;
        net.sourceforge.plantuml.command.MultilinesStrategy $r1, $r2;

        $r0 = newarray (net.sourceforge.plantuml.command.MultilinesStrategy)[2];

        $r1 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy REMOVE_STARTING_QUOTE>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy KEEP_STARTING_QUOTE>;

        $r0[1] = $r2;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.command.MultilinesStrategy $r0, $r1;
        net.sourceforge.plantuml.command.MultilinesStrategy[] $r2;

        $r0 = new net.sourceforge.plantuml.command.MultilinesStrategy;

        specialinvoke $r0.<net.sourceforge.plantuml.command.MultilinesStrategy: void <init>(java.lang.String,int)>("REMOVE_STARTING_QUOTE", 0);

        <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy REMOVE_STARTING_QUOTE> = $r0;

        $r1 = new net.sourceforge.plantuml.command.MultilinesStrategy;

        specialinvoke $r1.<net.sourceforge.plantuml.command.MultilinesStrategy: void <init>(java.lang.String,int)>("KEEP_STARTING_QUOTE", 1);

        <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy KEEP_STARTING_QUOTE> = $r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy[] $values()>();

        <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy[] $VALUES> = $r2;

        return;
    }
}
