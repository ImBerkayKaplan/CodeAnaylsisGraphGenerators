public class net.sourceforge.plantuml.graphic.SpriteCommand extends java.lang.Object implements net.sourceforge.plantuml.graphic.HtmlCommand
{
    private final java.lang.String sprite;

    void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.SpriteCommand r0;
        java.lang.String r1, $r3, $r4;
        boolean $z0, $z1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.graphic.SpriteCommand;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("<$");

        if $z0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(">");

        if $z1 != 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(2, $i1);

        $r4 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r3);

        r0.<net.sourceforge.plantuml.graphic.SpriteCommand: java.lang.String sprite> = $r4;

        return;
    }

    public java.lang.String getSprite()
    {
        net.sourceforge.plantuml.graphic.SpriteCommand r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.SpriteCommand;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SpriteCommand: java.lang.String sprite>;

        return $r1;
    }
}
