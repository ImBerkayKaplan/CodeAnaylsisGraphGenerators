public class net.sourceforge.plantuml.creole.CreoleHorizontalLine extends net.sourceforge.plantuml.creole.atom.AbstractAtom implements net.sourceforge.plantuml.creole.atom.Atom
{
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final java.lang.String line;
    private final char style;
    private final net.sourceforge.plantuml.ISkinSimple skinParam;
    private static final double defaultThickness;

    public static net.sourceforge.plantuml.creole.CreoleHorizontalLine create(net.sourceforge.plantuml.graphic.FontConfiguration, java.lang.String, char, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.creole.CreoleHorizontalLine $r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        java.lang.String r2;
        char c0;
        net.sourceforge.plantuml.ISkinSimple r3;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter1: java.lang.String;

        c0 := @parameter2: char;

        r3 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.creole.CreoleHorizontalLine;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,java.lang.String,char,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, c0, r3);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.graphic.FontConfiguration, java.lang.String, char, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.creole.CreoleHorizontalLine r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;
        java.lang.String r2;
        char c0;
        net.sourceforge.plantuml.ISkinSimple r3;

        r0 := @this: net.sourceforge.plantuml.creole.CreoleHorizontalLine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter1: java.lang.String;

        c0 := @parameter2: char;

        r3 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<net.sourceforge.plantuml.creole.atom.AbstractAtom: void <init>()>();

        r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r1;

        r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: java.lang.String line> = r2;

        r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: char style> = c0;

        r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.ISkinSimple skinParam> = r3;

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UHorizontalLine getHorizontalLine()
    {
        net.sourceforge.plantuml.creole.CreoleHorizontalLine r0;
        java.lang.String $r1;
        int $i0;
        net.sourceforge.plantuml.graphic.TextBlock r2;
        char $c1, $c2;
        net.sourceforge.plantuml.ugraphic.UHorizontalLine $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.creole.CreoleHorizontalLine;

        $r1 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: java.lang.String line>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $c2 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: char style>;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.ugraphic.UHorizontalLine infinite(double,double,double,char)>(1.0, 0.0, 0.0, $c2);

        return $r4;

     label1:
        r2 = specialinvoke r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.graphic.TextBlock getTitle()>();

        $c1 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: char style>;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.ugraphic.UHorizontalLine infinite(double,double,double,net.sourceforge.plantuml.graphic.TextBlock,char)>(1.0, 0.0, 0.0, r2, $c1);

        return $r3;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTitle()
    {
        net.sourceforge.plantuml.creole.CreoleHorizontalLine r0;
        java.lang.String $r1, $r7;
        int $i0;
        net.sourceforge.plantuml.creole.CreoleMode $r2;
        net.sourceforge.plantuml.ISkinSimple $r3, $r11;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r4;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5;
        net.sourceforge.plantuml.creole.SheetBuilder r6;
        net.sourceforge.plantuml.cucadiagram.Display $r8;
        net.sourceforge.plantuml.creole.Sheet r9;
        net.sourceforge.plantuml.creole.SheetBlock1 $r10;
        net.sourceforge.plantuml.LineBreakStrategy $r12;
        double $d0;
        net.sourceforge.plantuml.graphic.TextBlock $r14;

        r0 := @this: net.sourceforge.plantuml.creole.CreoleHorizontalLine;

        $r1 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: java.lang.String line>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r14 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        return $r14;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r4 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r3 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r2 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        r6 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>($r5, $r4, $r3, $r2);

        $r7 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: java.lang.String line>;

        $r8 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r7);

        r9 = interfaceinvoke r6.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>($r8);

        $r10 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $r12 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $r11 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $d0 = interfaceinvoke $r11.<net.sourceforge.plantuml.ISkinSimple: double getPadding()>();

        specialinvoke $r10.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>(r9, $r12, $d0);

        return $r10;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.creole.CreoleHorizontalLine r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.ugraphic.UHorizontalLine $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, r6;

        r0 := @this: net.sourceforge.plantuml.creole.CreoleHorizontalLine;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = $d0 / 2.0;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d1);

        r6 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.ugraphic.UHorizontalLine getHorizontalLine()>();

        interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.CreoleHorizontalLine r0;
        java.lang.String $r1;
        int $i0;
        net.sourceforge.plantuml.graphic.TextBlock r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;
        net.sourceforge.plantuml.Dimension2DDouble $r5;

        r0 := @this: net.sourceforge.plantuml.creole.CreoleHorizontalLine;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: java.lang.String line>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r5 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r5.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(10.0, 10.0);

        return $r5;

     label1:
        r2 = specialinvoke r0.<net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.graphic.TextBlock getTitle()>();

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        return $r4;
    }

    public double getStartingAltitude(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.CreoleHorizontalLine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.creole.CreoleHorizontalLine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 0.0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.creole.CreoleHorizontalLine: double defaultThickness> = 1.0;

        return;
    }
}
