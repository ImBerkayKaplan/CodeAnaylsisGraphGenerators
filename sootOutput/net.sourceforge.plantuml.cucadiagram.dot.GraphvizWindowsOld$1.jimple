class net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld$1 extends java.lang.Object implements java.io.FileFilter
{
    final net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld this$0;

    void <init>(net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld)
    {
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld$1 r0;
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld$1;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld$1: net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean accept(java.io.File)
    {
        java.io.File r0;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld$1 r1;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.dot.GraphvizWindowsOld$1;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<java.io.File: boolean canRead()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }
}
