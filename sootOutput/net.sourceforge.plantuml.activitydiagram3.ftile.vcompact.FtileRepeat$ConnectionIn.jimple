class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    private final net.sourceforge.plantuml.graphic.TextBlock tbin;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;
        net.sourceforge.plantuml.graphic.TextBlock r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.graphic.TextBlock tbin> = r5;

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r3, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        java.awt.geom.Point2D $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat,net.sourceforge.plantuml.graphic.StringBounder)>($r4, r2);

        $r6 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry translate(net.sourceforge.plantuml.ugraphic.UTranslate)>($r5);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        return $r7;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r3, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        java.awt.geom.Point2D $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat,net.sourceforge.plantuml.graphic.StringBounder)>($r4, r2);

        $r6 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry translate(net.sourceforge.plantuml.ugraphic.UTranslate)>($r5);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        return $r7;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat $r3;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.graphic.Rainbow $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r7, r10;
        net.sourceforge.plantuml.graphic.TextBlock $r8;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r9;
        java.awt.geom.Point2D r11, r12;
        double $d0, $d1, $d2, $d3, $d4, d5, $d6, $d7;
        byte $b0;
        java.awt.geom.Point2D$Double $r13, $r14;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r4, $r5, $r6);

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.graphic.TextBlock tbin>;

        $r9 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r10 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r8, $r9);

        r11 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r12 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionIn: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r11);

        $d0 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>();

        $b0 = $d0 cmpl $d1;

        if $b0 == 0 goto label1;

        $d2 = virtualinvoke r11.<java.awt.geom.Point2D: double getY()>();

        $d3 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>();

        $d4 = $d2 + $d3;

        d5 = $d4 / 2.0;

        $r13 = new java.awt.geom.Point2D$Double;

        $d6 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        specialinvoke $r13.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d6, d5);

        virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r13);

        $r14 = new java.awt.geom.Point2D$Double;

        $d7 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>();

        specialinvoke $r14.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d7, d5);

        virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r14);

     label1:
        virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r12);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r10);

        return;
    }
}
