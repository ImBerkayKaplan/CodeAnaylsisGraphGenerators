public class net.sourceforge.plantuml.ugraphic.color.HColorAutomatic extends net.sourceforge.plantuml.ugraphic.color.HColorAbstract implements net.sourceforge.plantuml.ugraphic.color.HColor
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor colorForLight;
    private final net.sourceforge.plantuml.ugraphic.color.HColor colorForDark;
    private final net.sourceforge.plantuml.ugraphic.color.HColor colorForTransparent;

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, r2, r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForLight> = r1;

        r0.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForDark> = r2;

        r0.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForTransparent> = r3;

        return;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getAppropriateColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0, $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r5;
        boolean $z0, $z1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r0 == null goto label1;

        $z0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: boolean isTransparent(net.sourceforge.plantuml.ugraphic.color.HColor)>(r0);

        if $z0 == 0 goto label3;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForTransparent>;

        if $r2 == null goto label2;

        $r7 = r1.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForTransparent>;

        return $r7;

     label2:
        $r3 = r1.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForLight>;

        $r5 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r3;

        $r4 = r1.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForDark>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>($r4);

        return $r6;

     label3:
        $z1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColor: boolean isDark()>();

        if $z1 == 0 goto label4;

        $r9 = r1.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForDark>;

        return $r9;

     label4:
        $r8 = r1.<net.sourceforge.plantuml.ugraphic.color.HColorAutomatic: net.sourceforge.plantuml.ugraphic.color.HColor colorForLight>;

        return $r8;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

        return $r1;
    }

    public volatile java.lang.String asString()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: java.lang.String asString()>();

        return $r1;
    }

    public volatile boolean isDark()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: boolean isDark()>();

        return $z0;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor reverse()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor reverse()>();

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor reverseHsluv()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor reverseHsluv()>();

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor darken(int)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor darken(int)>(i0);

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor lighten(int)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor lighten(int)>(i0);

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.UBackground bg()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorAutomatic r0;
        net.sourceforge.plantuml.ugraphic.UBackground $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorAutomatic;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        return $r1;
    }
}
