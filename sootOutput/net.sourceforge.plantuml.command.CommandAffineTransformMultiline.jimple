public class net.sourceforge.plantuml.command.CommandAffineTransformMultiline extends net.sourceforge.plantuml.command.CommandMultilines
{

    public void <init>()
    {
        net.sourceforge.plantuml.command.CommandAffineTransformMultiline r0;

        r0 := @this: net.sourceforge.plantuml.command.CommandAffineTransformMultiline;

        specialinvoke r0.<net.sourceforge.plantuml.command.CommandMultilines: void <init>(java.lang.String)>("^!transformation[%s]+\\{[%s]*$");

        return;
    }

    public java.lang.String getPatternEnd()
    {
        net.sourceforge.plantuml.command.CommandAffineTransformMultiline r0;

        r0 := @this: net.sourceforge.plantuml.command.CommandAffineTransformMultiline;

        return "^[%s]*!\\}[%s]*$";
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.TitledDiagram, net.sourceforge.plantuml.command.BlocLines)
    {
        net.sourceforge.plantuml.command.CommandExecutionResult $r0;
        net.sourceforge.plantuml.command.CommandAffineTransformMultiline r1;
        net.sourceforge.plantuml.TitledDiagram r2;
        net.sourceforge.plantuml.command.BlocLines r3;

        r1 := @this: net.sourceforge.plantuml.command.CommandAffineTransformMultiline;

        r2 := @parameter0: net.sourceforge.plantuml.TitledDiagram;

        r3 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r0 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Not yet implemented");

        return $r0;
    }

    public volatile net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.CommandAffineTransformMultiline r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.TitledDiagram $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.command.CommandAffineTransformMultiline;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        $r3 = (net.sourceforge.plantuml.TitledDiagram) r1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.command.CommandAffineTransformMultiline: net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.TitledDiagram,net.sourceforge.plantuml.command.BlocLines)>($r3, r2);

        return $r4;
    }
}
