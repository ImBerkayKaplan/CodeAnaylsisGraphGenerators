public class net.sourceforge.plantuml.project.draw.TimeHeaderSimple extends net.sourceforge.plantuml.project.draw.TimeHeader
{
    private final java.util.Map colorDays;

    public double getFullHeaderHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: double getTimeHeaderHeight()>();

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: double getHeaderNameDayHeight()>();

        $d2 = $d0 + $d1;

        return $d2;
    }

    public double getTimeHeaderHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        return 16.0;
    }

    public double getTimeFooterHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        return 16.0;
    }

    private double getHeaderNameDayHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        return 0.0;
    }

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, double, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.ugraphic.color.HColorSet, net.sourceforge.plantuml.api.ThemeStyle, java.util.Map)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;
        net.sourceforge.plantuml.style.Style r1, r2;
        net.sourceforge.plantuml.project.time.Day r3, r4;
        net.sourceforge.plantuml.project.timescale.TimeScaleWink $r5;
        double d0;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r6;
        net.sourceforge.plantuml.api.ThemeStyle r7;
        java.util.Map r8;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r2 := @parameter1: net.sourceforge.plantuml.style.Style;

        d0 := @parameter2: double;

        r3 := @parameter3: net.sourceforge.plantuml.project.time.Day;

        r4 := @parameter4: net.sourceforge.plantuml.project.time.Day;

        r6 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        r7 := @parameter6: net.sourceforge.plantuml.api.ThemeStyle;

        r8 := @parameter7: java.util.Map;

        $r5 = new net.sourceforge.plantuml.project.timescale.TimeScaleWink;

        specialinvoke $r5.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: void <init>(double)>(d0);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeader: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.timescale.TimeScale,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.api.ThemeStyle)>(r1, r2, r3, r4, $r5, r6, r7);

        r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: java.util.Map colorDays> = r8;

        return;
    }

    private void drawSmallVlinesDay(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.project.timescale.TimeScale, double)
    {
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.ULine r0;
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r1;
        net.sourceforge.plantuml.project.time.Day $r2, $r3, r10;
        int $i0;
        net.sourceforge.plantuml.project.timescale.TimeScale r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, $r7, $r9;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;

        r1 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r4 := @parameter1: net.sourceforge.plantuml.project.timescale.TimeScale;

        d0 := @parameter2: double;

        r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(d0);

        r10 = r1.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day max>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        $i0 = virtualinvoke r10.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r3);

        if $i0 > 0 goto label2;

        d1 = interfaceinvoke r4.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r10);

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.ugraphic.color.HColor getBarColor()>();

        $r7 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d1);

        $r9 = interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

        r10 = virtualinvoke r10.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label2:
        return;
    }

    private void drawSimpleDayCounter(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.project.timescale.TimeScale)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;
        net.sourceforge.plantuml.project.time.Day $r1, $r2, $r17, $r18, r21;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r6;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8;
        net.sourceforge.plantuml.graphic.FontConfiguration $r9;
        net.sourceforge.plantuml.SpriteContainerEmpty $r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r11;
        net.sourceforge.plantuml.graphic.TextBlock r12;
        net.sourceforge.plantuml.project.timescale.TimeScale r13;
        double d0, d1, d2, $d3, d4, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.UGraphic r14, $r20;
        net.sourceforge.plantuml.graphic.StringBounder $r15;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r16;
        net.sourceforge.plantuml.ugraphic.UTranslate $r19;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r13 := @parameter1: net.sourceforge.plantuml.project.timescale.TimeScale;

        r21 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day max>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        $i0 = virtualinvoke r21.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r2);

        if $i0 > 0 goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i1 = virtualinvoke r21.<net.sourceforge.plantuml.project.time.Day: int getAbsoluteDayNum()>();

        $i2 = $i1 + 1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r6);

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>(10, 0, $r8);

        $r11 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r10 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r10.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        r12 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r9, $r11, $r10);

        d0 = interfaceinvoke r13.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r21);

        d1 = interfaceinvoke r13.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>(r21);

        $r15 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r16 = interfaceinvoke r12.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r15);

        d2 = virtualinvoke $r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = d1 - d0;

        d4 = $d3 - d2;

        $r17 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day max>;

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        $i3 = virtualinvoke r21.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r18);

        if $i3 >= 0 goto label2;

        $d5 = d4 / 2.0;

        $d6 = d0 + $d5;

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d6);

        $r20 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke r12.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r20);

     label2:
        r21 = virtualinvoke r21.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label3:
        return;
    }

    public void drawTimeHeader(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3, $r11, $r14, $r16;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r15;
        double d0, $d1, d2, d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.project.timescale.TimeScale $r4, $r6, $r8, $r9;
        net.sourceforge.plantuml.project.time.Day $r5, $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor $r10, $r13;
        net.sourceforge.plantuml.ugraphic.ULine $r12, $r17;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(-3.0);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $d1 = d0 + 6.0;

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: void drawTextsBackground(net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r3, $d1);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r5 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day min>;

        d2 = interfaceinvoke $r4.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r5);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r7 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day max>;

        d3 = interfaceinvoke $r6.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r7);

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: void drawSmallVlinesDay(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.timescale.TimeScale,double)>(r1, $r8, d0);

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: void drawSimpleDayCounter(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.timescale.TimeScale)>(r1, $r9);

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.ugraphic.color.HColor getBarColor()>();

        $r11 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $d4 = d3 - d2;

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d4);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.ugraphic.color.HColor getBarColor()>();

        $r14 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        $d5 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: double getFullHeaderHeight()>();

        $d6 = $d5 - 3.0;

        $r15 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d6);

        $r16 = interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $d7 = d3 - d2;

        $r17 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d7);

        interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r17);

        return;
    }

    public void drawTimeFooter(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r1, $r3, $r5, $r7;
        net.sourceforge.plantuml.project.time.Day $r2, $r4;
        double d0, d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8;
        net.sourceforge.plantuml.ugraphic.UGraphic $r9, r11, r12;
        net.sourceforge.plantuml.ugraphic.ULine $r10;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day min>;

        d0 = interfaceinvoke $r1.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r2);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day max>;

        d1 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r4);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: double getTimeFooterHeight()>();

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: void drawSmallVlinesDay(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.timescale.TimeScale,double)>(r11, $r5, $d2);

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(3.0);

        r12 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: void drawSimpleDayCounter(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.timescale.TimeScale)>(r12, $r7);

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.ugraphic.color.HColor getBarColor()>();

        $r9 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $d3 = d1 - d0;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d3);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        return;
    }

    protected final void drawTextsBackground(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        double d0, $d1, d2, d3, d4;
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r0;
        net.sourceforge.plantuml.project.time.Day $r1, r11;
        int $i0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r2, $r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor r6, $r8;
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending $r7, r10;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UGraphic r9;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        r9 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: double getFullHeaderHeight()>();

        d2 = d0 - $d1;

        r10 = null;

        r11 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.time.Day max>;

        $i0 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r1);

        if $i0 > 0 goto label7;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d3 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r11);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d4 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>(r11);

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: java.util.Map colorDays>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        r6 = (net.sourceforge.plantuml.ugraphic.color.HColor) $r5;

        if r6 != null goto label3;

        if r10 == null goto label2;

        virtualinvoke r10.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: void draw(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r9, d2);

     label2:
        r10 = null;

        goto label6;

     label3:
        if r10 == null goto label4;

        $r8 = r10.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $z0 = virtualinvoke $r8.<java.lang.Object: boolean equals(java.lang.Object)>(r6);

        if $z0 != 0 goto label4;

        virtualinvoke r10.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: void draw(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r9, d2);

        r10 = null;

     label4:
        if r10 != null goto label5;

        $r7 = new net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending;

        specialinvoke $r7.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: void <init>(net.sourceforge.plantuml.project.draw.TimeHeaderSimple,net.sourceforge.plantuml.ugraphic.color.HColor,double,double)>(r0, r6, d3, d4);

        r10 = $r7;

        goto label6;

     label5:
        r10.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: double x2> = d4;

     label6:
        r11 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label7:
        return;
    }
}
