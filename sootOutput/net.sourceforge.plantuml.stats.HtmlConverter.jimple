public class net.sourceforge.plantuml.stats.HtmlConverter extends java.lang.Object
{
    private final java.text.DateFormat formatter;
    private final net.sourceforge.plantuml.stats.api.Stats stats;

    public void <init>(net.sourceforge.plantuml.stats.api.Stats)
    {
        net.sourceforge.plantuml.stats.HtmlConverter r0;
        java.text.DateFormat $r1;
        net.sourceforge.plantuml.stats.api.Stats r2;

        r0 := @this: net.sourceforge.plantuml.stats.HtmlConverter;

        r2 := @parameter0: net.sourceforge.plantuml.stats.api.Stats;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int)>(3, 2);

        r0.<net.sourceforge.plantuml.stats.HtmlConverter: java.text.DateFormat formatter> = $r1;

        r0.<net.sourceforge.plantuml.stats.HtmlConverter: net.sourceforge.plantuml.stats.api.Stats stats> = r2;

        return;
    }

    public java.lang.String toHtml()
    {
        java.lang.StringBuilder $r0;
        net.sourceforge.plantuml.stats.HtmlConverter r9;
        net.sourceforge.plantuml.stats.api.Stats $r10, $r12, $r16, $r19, $r25;
        net.sourceforge.plantuml.stats.api.StatsTable $r11, r13, $r17, $r20, $r26;
        java.util.List $r14;
        int $i0;
        java.lang.String $r22;

        r9 := @this: net.sourceforge.plantuml.stats.HtmlConverter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<html>");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<style type=\"text/css\">");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("body { font-family: arial, helvetica, sans-serif; font-size: 12px; font-weight: normal; color: black; background: white;}");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("th,td { font-size: 12px;}");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("table { border-collapse: collapse; border-style: none;}");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</style>");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>Statistics</h2>");

        $r10 = r9.<net.sourceforge.plantuml.stats.HtmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getLastSessions()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.HtmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r11);

        $r12 = r9.<net.sourceforge.plantuml.stats.HtmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getCurrentSessionByDiagramType()>();

        $r14 = interfaceinvoke r13.<net.sourceforge.plantuml.stats.api.StatsTable: java.util.List getLines()>();

        $i0 = interfaceinvoke $r14.<java.util.List: int size()>();

        if $i0 <= 1 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>Current session statistics</h2>");

        specialinvoke r9.<net.sourceforge.plantuml.stats.HtmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, r13);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p>");

        $r25 = r9.<net.sourceforge.plantuml.stats.HtmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getCurrentSessionByFormat()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.HtmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r26);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h2>General statistics since ever</h2>");

        $r16 = r9.<net.sourceforge.plantuml.stats.HtmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getAllByDiagramType()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.HtmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r17);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<p>");

        $r19 = r9.<net.sourceforge.plantuml.stats.HtmlConverter: net.sourceforge.plantuml.stats.api.Stats stats>;

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.stats.api.Stats: net.sourceforge.plantuml.stats.api.StatsTable getAllByFormat()>();

        specialinvoke r9.<net.sourceforge.plantuml.stats.HtmlConverter: void printTableHtml(java.lang.StringBuilder,net.sourceforge.plantuml.stats.api.StatsTable)>($r0, $r20);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</html>");

        $r22 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }

    private void printTableHtml(java.lang.StringBuilder, net.sourceforge.plantuml.stats.api.StatsTable)
    {
        net.sourceforge.plantuml.stats.api.StatsTable r0;
        java.util.Collection r1;
        java.lang.StringBuilder r2;
        net.sourceforge.plantuml.stats.HtmlConverter r4;
        java.lang.String $r5, $r11;
        java.util.List r7;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r9;
        net.sourceforge.plantuml.stats.api.StatsLine r10;
        boolean $z1;

        r4 := @this: net.sourceforge.plantuml.stats.HtmlConverter;

        r2 := @parameter0: java.lang.StringBuilder;

        r0 := @parameter1: net.sourceforge.plantuml.stats.api.StatsTable;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.stats.api.StatsTable: java.util.Collection getColumnHeaders()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<table border=1 cellspacing=0 cellpadding=2>");

        $r5 = specialinvoke r4.<net.sourceforge.plantuml.stats.HtmlConverter: java.lang.String getHtmlHeader(java.util.Collection)>(r1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r7 = interfaceinvoke r0.<net.sourceforge.plantuml.stats.api.StatsTable: java.util.List getLines()>();

        i3 = 0;

     label1:
        $i0 = interfaceinvoke r7.<java.util.List: int size()>();

        if i3 >= $i0 goto label4;

        $r9 = interfaceinvoke r7.<java.util.List: java.lang.Object get(int)>(i3);

        r10 = (net.sourceforge.plantuml.stats.api.StatsLine) $r9;

        $i1 = interfaceinvoke r7.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i3 != $i2 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        $r11 = specialinvoke r4.<net.sourceforge.plantuml.stats.HtmlConverter: java.lang.String getCreoleLine(java.util.Collection,net.sourceforge.plantuml.stats.api.StatsLine,boolean)>(r1, r10, $z1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        i3 = i3 + 1;

        goto label1;

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</table>");

        return;
    }

    private java.lang.String getCreoleLine(java.util.Collection, net.sourceforge.plantuml.stats.api.StatsLine, boolean)
    {
        java.lang.StringBuilder $r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection r3;
        java.util.Iterator r4;
        java.lang.String $r6, $r15, $r16, $r20, $r23;
        java.lang.Object $r7, r10;
        net.sourceforge.plantuml.stats.api.StatsColumn r8;
        net.sourceforge.plantuml.stats.api.StatsLine r9;
        int $i0;
        net.sourceforge.plantuml.stats.HtmlConverter r18;
        java.text.DateFormat $r19;
        java.lang.Object[] $r22;

        r18 := @this: net.sourceforge.plantuml.stats.HtmlConverter;

        r3 := @parameter0: java.util.Collection;

        r9 := @parameter1: net.sourceforge.plantuml.stats.api.StatsLine;

        z0 := @parameter2: boolean;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        if z0 == 0 goto label01;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<tr bgcolor=#f0f0f0>");

        goto label02;

     label01:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<tr bgcolor=#fcfcfc>");

     label02:
        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z5 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label14;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.stats.api.StatsColumn) $r7;

        r10 = interfaceinvoke r9.<net.sourceforge.plantuml.stats.api.StatsLine: java.lang.Object getValue(net.sourceforge.plantuml.stats.api.StatsColumn)>(r8);

        $z1 = r10 instanceof java.lang.Long;

        if $z1 != 0 goto label04;

        $z4 = r10 instanceof net.sourceforge.plantuml.stats.HumanDuration;

        if $z4 == 0 goto label05;

     label04:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td align=right>");

        goto label06;

     label05:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td>");

     label06:
        if z0 == 0 goto label07;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<b>");

     label07:
        $z2 = r10 instanceof java.lang.Long;

        if $z2 == 0 goto label08;

        $r22 = newarray (java.lang.Object)[1];

        $r22[0] = r10;

        $r23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%,d", $r22);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        goto label12;

     label08:
        $z3 = r10 instanceof java.util.Date;

        if $z3 == 0 goto label09;

        $r19 = r18.<net.sourceforge.plantuml.stats.HtmlConverter: java.text.DateFormat formatter>;

        $r20 = virtualinvoke $r19.<java.text.DateFormat: java.lang.String format(java.lang.Object)>(r10);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        goto label12;

     label09:
        if r10 == null goto label10;

        $r15 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r15.<java.lang.String: int length()>();

        if $i0 != 0 goto label11;

     label10:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        goto label12;

     label11:
        $r16 = virtualinvoke r10.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

     label12:
        if z0 == 0 goto label13;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</b>");

     label13:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</td>");

        goto label03;

     label14:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</tr>");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private java.lang.String getHtmlHeader(java.util.Collection)
    {
        java.lang.StringBuilder $r0;
        java.util.Collection r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.String $r6, $r10, $r11;
        java.lang.Object $r7;
        net.sourceforge.plantuml.stats.api.StatsColumn r8;
        net.sourceforge.plantuml.stats.HtmlConverter r14;

        r14 := @this: net.sourceforge.plantuml.stats.HtmlConverter;

        r3 := @parameter0: java.util.Collection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<tr bgcolor=#e0e0e0>");

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.stats.api.StatsColumn) $r7;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<td><b>");

        $r10 = virtualinvoke r8.<net.sourceforge.plantuml.stats.api.StatsColumn: java.lang.String getTitle()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\n", "<br>");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</b></td>");

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</tr>");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
