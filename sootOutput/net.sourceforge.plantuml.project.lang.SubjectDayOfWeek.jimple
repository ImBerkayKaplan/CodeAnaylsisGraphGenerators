public class net.sourceforge.plantuml.project.lang.SubjectDayOfWeek extends java.lang.Object implements net.sourceforge.plantuml.project.lang.Subject
{

    public void <init>()
    {
        net.sourceforge.plantuml.project.lang.SubjectDayOfWeek r0;

        r0 := @this: net.sourceforge.plantuml.project.lang.SubjectDayOfWeek;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.command.regex.IRegex toRegex()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.lang.String $r3, $r6;
        net.sourceforge.plantuml.project.lang.SubjectDayOfWeek r7;

        r7 := @this: net.sourceforge.plantuml.project.lang.SubjectDayOfWeek;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r3 = staticinvoke <net.sourceforge.plantuml.project.time.DayOfWeek: java.lang.String getRegexString()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("SUBJECT", $r6);

        return $r0;
    }

    public net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1;
        net.sourceforge.plantuml.project.time.DayOfWeek $r2;
        net.sourceforge.plantuml.project.Failable $r3;
        net.sourceforge.plantuml.project.lang.SubjectDayOfWeek r4;
        net.sourceforge.plantuml.project.GanttDiagram r5;

        r4 := @this: net.sourceforge.plantuml.project.lang.SubjectDayOfWeek;

        r5 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("SUBJECT", 0);

        $r2 = staticinvoke <net.sourceforge.plantuml.project.time.DayOfWeek: net.sourceforge.plantuml.project.time.DayOfWeek fromString(java.lang.String)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.project.Failable: net.sourceforge.plantuml.project.Failable ok(java.lang.Object)>($r2);

        return $r3;
    }

    public java.util.Collection getSentences()
    {
        net.sourceforge.plantuml.project.lang.SentenceSimple[] $r0;
        net.sourceforge.plantuml.project.lang.SubjectDayOfWeek$AreClose $r1;
        net.sourceforge.plantuml.project.lang.SubjectDayOfWeek r2;
        net.sourceforge.plantuml.project.lang.SubjectDayOfWeek$InColor $r3;
        java.util.List $r4;

        r2 := @this: net.sourceforge.plantuml.project.lang.SubjectDayOfWeek;

        $r0 = newarray (net.sourceforge.plantuml.project.lang.SentenceSimple)[2];

        $r1 = new net.sourceforge.plantuml.project.lang.SubjectDayOfWeek$AreClose;

        specialinvoke $r1.<net.sourceforge.plantuml.project.lang.SubjectDayOfWeek$AreClose: void <init>(net.sourceforge.plantuml.project.lang.SubjectDayOfWeek)>(r2);

        $r0[0] = $r1;

        $r3 = new net.sourceforge.plantuml.project.lang.SubjectDayOfWeek$InColor;

        specialinvoke $r3.<net.sourceforge.plantuml.project.lang.SubjectDayOfWeek$InColor: void <init>(net.sourceforge.plantuml.project.lang.SubjectDayOfWeek)>(r2);

        $r0[1] = $r3;

        $r4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r4;
    }
}
