public class net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated extends net.sourceforge.plantuml.nwdiag.next.GridTextBlockSimple
{
    public static final int NETWORK_THIN;
    private final java.util.List groups;
    private final java.util.List networks;

    public void <init>(int, int, java.util.List, java.util.List, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r0;
        int i0, i1;
        net.sourceforge.plantuml.ISkinParam r1;
        java.util.List r2, r3;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r2 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r1 := @parameter4: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockSimple: void <init>(int,int,net.sourceforge.plantuml.ISkinParam)>(i0, i1, r1);

        r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: java.util.List groups> = r2;

        r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: java.util.List networks> = r3;

        return;
    }

    protected void drawGrid(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UGraphic r3;
        net.sourceforge.plantuml.ISkinParam $r4, $r8;
        net.sourceforge.plantuml.style.StyleBuilder $r5;
        java.lang.Object $r6;
        net.sourceforge.plantuml.nwdiag.core.NwGroup r7;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: java.util.List groups>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.nwdiag.core.NwGroup) $r6;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: void drawGroups(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.nwdiag.core.NwGroup,net.sourceforge.plantuml.ISkinParam)>(r3, r7, $r8);

        goto label1;

     label2:
        specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: void drawNetworkTube(net.sourceforge.plantuml.ugraphic.UGraphic)>(r3);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: void drawLinks(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.style.StyleBuilder)>(r3, $r5);

        return;
    }

    private void drawLinks(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r0;
        net.sourceforge.plantuml.style.SName $r1;
        net.sourceforge.plantuml.style.StyleSignature $r2;
        net.sourceforge.plantuml.style.StyleBuilder r3;
        net.sourceforge.plantuml.style.Style r4;
        net.sourceforge.plantuml.style.PName $r5;
        net.sourceforge.plantuml.style.Value $r6;
        net.sourceforge.plantuml.ISkinParam $r7, $r9;
        net.sourceforge.plantuml.api.ThemeStyle $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r10;
        net.sourceforge.plantuml.ugraphic.color.HColor r11;
        net.sourceforge.plantuml.graphic.StringBounder r12;
        net.sourceforge.plantuml.nwdiag.next.NwArray $r13, $r14, $r15, $r17;
        int $i0, $i1, i2, i3;
        double d0, d1, d2;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement $r16, $r18;
        net.sourceforge.plantuml.ugraphic.UGraphic r19, r20;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        r19 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r3 := @parameter1: net.sourceforge.plantuml.style.StyleBuilder;

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.style.StyleSignature getStyleDefinitionNetwork(net.sourceforge.plantuml.style.SName)>($r1);

        r4 = virtualinvoke $r2.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r3);

        $r5 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r5);

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r11 = interfaceinvoke $r6.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r8, $r10);

        r20 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r11);

        r12 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        i2 = 0;

     label1:
        $r13 = r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $i0 = virtualinvoke $r13.<net.sourceforge.plantuml.nwdiag.next.NwArray: int getNbLines()>();

        if i2 >= $i0 goto label5;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: double lineHeight(net.sourceforge.plantuml.graphic.StringBounder,int)>(r12, i2);

        d2 = 0.0;

        i3 = 0;

     label2:
        $r14 = r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $i1 = virtualinvoke $r14.<net.sourceforge.plantuml.nwdiag.next.NwArray: int getNbCols()>();

        if i3 >= $i1 goto label4;

        d1 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: double colWidth(net.sourceforge.plantuml.graphic.StringBounder,int)>(r12, i3);

        $r15 = r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.nwdiag.next.NwArray: net.sourceforge.plantuml.nwdiag.next.LinkedElement get(int,int)>(i2, i3);

        if $r16 == null goto label3;

        $r17 = r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.nwdiag.next.NwArray: net.sourceforge.plantuml.nwdiag.next.LinkedElement get(int,int)>(i2, i3);

        virtualinvoke $r18.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: void drawLinks(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r20, d2, d1, d0);

     label3:
        d2 = d2 + d1;

        i3 = i3 + 1;

        goto label2;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        return;
    }

    private void drawGroups(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.nwdiag.core.NwGroup, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r2;
        net.sourceforge.plantuml.nwdiag.next.NwArray $r3, $r6, $r7;
        int $i0, $i1, i2, i3;
        net.sourceforge.plantuml.nwdiag.core.NwGroup r4;
        net.sourceforge.plantuml.ISkinParam r5;
        double d0, d1, d2, d3;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r8;
        net.sourceforge.plantuml.nwdiag.core.NServer $r9;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.MinMax $r10, r12, r13, $r14;
        net.sourceforge.plantuml.ugraphic.UTranslate $r11;

        r2 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r4 := @parameter1: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r5 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r13 = null;

        d2 = 0.0;

        i2 = 0;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $i0 = virtualinvoke $r3.<net.sourceforge.plantuml.nwdiag.next.NwArray: int getNbLines()>();

        if i2 >= $i0 goto label7;

        d0 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: double lineHeight(net.sourceforge.plantuml.graphic.StringBounder,int)>(r1, i2);

        d3 = 0.0;

        i3 = 0;

     label2:
        $r6 = r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $i1 = virtualinvoke $r6.<net.sourceforge.plantuml.nwdiag.next.NwArray: int getNbCols()>();

        if i3 >= $i1 goto label6;

        d1 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: double colWidth(net.sourceforge.plantuml.graphic.StringBounder,int)>(r1, i3);

        $r7 = r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        r8 = virtualinvoke $r7.<net.sourceforge.plantuml.nwdiag.next.NwArray: net.sourceforge.plantuml.nwdiag.next.LinkedElement get(int,int)>(i2, i3);

        if r8 == null goto label5;

        $r9 = virtualinvoke r8.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.NServer getServer()>();

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.NwGroup: boolean contains(net.sourceforge.plantuml.nwdiag.core.NServer)>($r9);

        if $z0 == 0 goto label5;

        $r10 = virtualinvoke r8.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder,double,double)>(r1, d1, d0);

        $r11 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d2);

        r12 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax translate(net.sourceforge.plantuml.ugraphic.UTranslate)>($r11);

        if r13 != null goto label3;

        $r14 = r12;

        goto label4;

     label3:
        $r14 = virtualinvoke r13.<net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax addMinMax(net.sourceforge.plantuml.ugraphic.MinMax)>(r12);

     label4:
        r13 = $r14;

     label5:
        d3 = d3 + d1;

        i3 = i3 + 1;

        goto label2;

     label6:
        d2 = d2 + d0;

        i2 = i2 + 1;

        goto label1;

     label7:
        if r13 == null goto label8;

        virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.NwGroup: void drawGroup(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.MinMax,net.sourceforge.plantuml.ISkinParam)>(r0, r13, r5);

     label8:
        return;
    }

    private boolean isThereALink(int, net.sourceforge.plantuml.nwdiag.core.Network)
    {
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r0;
        net.sourceforge.plantuml.nwdiag.next.NwArray $r1, $r2;
        int $i0, i1, i2;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r3;
        net.sourceforge.plantuml.nwdiag.core.Network r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        i1 := @parameter0: int;

        r4 := @parameter1: net.sourceforge.plantuml.nwdiag.core.Network;

        i2 = 0;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.nwdiag.next.NwArray: int getNbLines()>();

        if i2 >= $i0 goto label3;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.nwdiag.next.NwArray: net.sourceforge.plantuml.nwdiag.next.LinkedElement get(int,int)>(i2, i1);

        if r3 == null goto label2;

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: boolean isLinkedTo(net.sourceforge.plantuml.nwdiag.core.Network)>(r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 0;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleDefinitionNetwork(net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r6;

        r6 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        r4 := @parameter0: net.sourceforge.plantuml.style.SName;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName nwdiagDiagram>;

        $r0[2] = $r3;

        $r0[3] = r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private void drawNetworkTube(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, r35, r36, r37;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r2;
        net.sourceforge.plantuml.nwdiag.next.NwArray $r3, $r5;
        int $i0, i1;
        net.sourceforge.plantuml.nwdiag.core.Network r4;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement[] $r6;
        net.sourceforge.plantuml.ugraphic.URectangle $r7;
        double $d0, $d1, $d2, $d3, d4, $d5, d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9;
        net.sourceforge.plantuml.ISkinParam $r10, $r19, $r21, $r26, $r28;
        net.sourceforge.plantuml.style.StyleBuilder r11;
        net.sourceforge.plantuml.style.SName $r12;
        net.sourceforge.plantuml.style.StyleSignature $r13;
        net.sourceforge.plantuml.style.Style r14;
        net.sourceforge.plantuml.style.PName $r15, $r17, $r24;
        net.sourceforge.plantuml.style.Value $r16, $r18, $r25;
        net.sourceforge.plantuml.api.ThemeStyle $r20, $r27;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r22, $r29;
        net.sourceforge.plantuml.ugraphic.color.HColor $r23, $r30, $r32, $r33;
        net.sourceforge.plantuml.ugraphic.UBackground $r31, $r34;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d6 = 0.0;

        i1 = 0;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $i0 = virtualinvoke $r3.<net.sourceforge.plantuml.nwdiag.next.NwArray: int getNbLines()>();

        if i1 >= $i0 goto label5;

        r4 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.core.Network getNetwork(int)>(i1);

        $r5 = r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.nwdiag.next.NwArray data>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.nwdiag.next.NwArray: net.sourceforge.plantuml.nwdiag.next.LinkedElement[] getLine(int)>(i1);

        specialinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: void computeMixMax(net.sourceforge.plantuml.nwdiag.next.LinkedElement[],net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.nwdiag.core.Network)>($r6, r1, r4);

        $r7 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.Network: double getXmax()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.Network: double getXmin()>();

        $d2 = $d0 - $d1;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d2, 5.0);

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.Network: double getXmin()>();

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, d6);

        r35 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName network>;

        $r13 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.style.StyleSignature getStyleDefinitionNetwork(net.sourceforge.plantuml.style.SName)>($r12);

        r14 = virtualinvoke $r13.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r11);

        $r15 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r16 = virtualinvoke r14.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r15);

        d4 = interfaceinvoke $r16.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        $r17 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r18 = virtualinvoke r14.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r17);

        $r19 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r21 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r23 = interfaceinvoke $r18.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r20, $r22);

        r36 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r23);

        $r24 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r25 = virtualinvoke r14.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r24);

        $r26 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r28 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r30 = interfaceinvoke $r25.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r27, $r29);

        $r31 = interfaceinvoke $r30.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r37 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r31);

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(d4);

        if r4 == null goto label2;

        $r32 = virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.Network: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r32 == null goto label2;

        $r33 = virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.Network: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r34 = interfaceinvoke $r33.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r37 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r34);

     label2:
        if r4 == null goto label3;

        virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.Network: void setY(double)>(d6);

     label3:
        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.nwdiag.core.Network: boolean isVisible()>();

        if $z0 == 0 goto label4;

        interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

     label4:
        $d5 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: double lineHeight(net.sourceforge.plantuml.graphic.StringBounder,int)>(r1, i1);

        d6 = d6 + $d5;

        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private void computeMixMax(net.sourceforge.plantuml.nwdiag.next.LinkedElement[], net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.nwdiag.core.Network)
    {
        net.sourceforge.plantuml.nwdiag.core.Network r0;
        boolean $z0, z1, $z2;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement[] r1;
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        byte $b0;
        double d0, $d1, d2, d3, $d4;
        int i1, $i2;

        r2 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.next.LinkedElement[];

        r3 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r0 := @parameter2: net.sourceforge.plantuml.nwdiag.core.Network;

        d0 = 0.0;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.core.Network: boolean isFullWidth()>();

        if $z0 == 0 goto label1;

        $d1 = 0.0;

        goto label2;

     label1:
        $d1 = -1.0;

     label2:
        d2 = $d1;

        d3 = 0.0;

        i1 = 0;

     label3:
        $i2 = lengthof r1;

        if i1 >= $i2 goto label7;

        z1 = specialinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: boolean isThereALink(int,net.sourceforge.plantuml.nwdiag.core.Network)>(i1, r0);

        if z1 == 0 goto label4;

        $b0 = d2 cmpg 0.0;

        if $b0 >= 0 goto label4;

        d2 = d0;

     label4:
        $d4 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: double colWidth(net.sourceforge.plantuml.graphic.StringBounder,int)>(r3, i1);

        d0 = d0 + $d4;

        if z1 != 0 goto label5;

        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.core.Network: boolean isFullWidth()>();

        if $z2 == 0 goto label6;

     label5:
        d3 = d0;

     label6:
        i1 = i1 + 1;

        goto label3;

     label7:
        virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.core.Network: void setMinMax(double,double)>(d2, d3);

        return;
    }

    private net.sourceforge.plantuml.nwdiag.core.Network getNetwork(int)
    {
        net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.nwdiag.core.Network $r3;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: java.util.List networks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (net.sourceforge.plantuml.nwdiag.core.Network) $r2;

        return $r3;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.nwdiag.next.GridTextBlockDecorated: int NETWORK_THIN> = 5;

        return;
    }
}
