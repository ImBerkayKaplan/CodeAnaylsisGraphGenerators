public class net.sourceforge.plantuml.sprite.StdlibDiagram extends net.sourceforge.plantuml.UmlDiagram
{
    private static final int WIDTH;
    private java.lang.String name;

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.sprite.StdlibDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.UmlDiagramType $r4;

        r0 := @this: net.sourceforge.plantuml.sprite.StdlibDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType HELP>;

        specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        return;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.sprite.StdlibDiagram r1;

        r1 := @this: net.sourceforge.plantuml.sprite.StdlibDiagram;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Sprites)");

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.sprite.StdlibDiagram r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.sprite.StdlibDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder annotations(boolean)>(0);

        return $r3;
    }

    protected net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.sprite.StdlibDiagram r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r4;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        java.io.OutputStream r5;
        net.sourceforge.plantuml.core.ImageData $r6;
        int i0;

        r0 := @this: net.sourceforge.plantuml.sprite.StdlibDiagram;

        r5 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r1 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: net.sourceforge.plantuml.graphic.TextBlock getTable()>();

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r3);

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r5);

        return $r6;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTable()
    {
        net.sourceforge.plantuml.sprite.StdlibDiagram$1 $r0;
        net.sourceforge.plantuml.sprite.StdlibDiagram r1;

        r1 := @this: net.sourceforge.plantuml.sprite.StdlibDiagram;

        $r0 = new net.sourceforge.plantuml.sprite.StdlibDiagram$1;

        specialinvoke $r0.<net.sourceforge.plantuml.sprite.StdlibDiagram$1: void <init>(net.sourceforge.plantuml.sprite.StdlibDiagram)>(r1);

        return $r0;
    }

    public void setStdlibName(java.lang.String)
    {
        net.sourceforge.plantuml.sprite.StdlibDiagram r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.sprite.StdlibDiagram;

        r1 := @parameter0: java.lang.String;

        r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: java.lang.String name> = r1;

        return;
    }

    private void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic) throws java.io.IOException
    {
        net.sourceforge.plantuml.sprite.StdlibDiagram r0;
        java.lang.String $r1, r29, r33;
        net.sourceforge.plantuml.preproc.Stdlib r2;
        net.sourceforge.plantuml.command.CommandFactorySprite $r3;
        net.sourceforge.plantuml.command.Command r5;
        java.util.List r6;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ISkinParam $r7, $r10, $r16;
        java.util.Collection $r8;
        java.lang.Object $r9, $r24;
        java.lang.CharSequence[] $r11;
        net.sourceforge.plantuml.cucadiagram.Display $r12;
        net.sourceforge.plantuml.ugraphic.UFont $r13;
        net.sourceforge.plantuml.graphic.FontConfiguration $r14;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r15, $r18;
        net.sourceforge.plantuml.ugraphic.color.HColor $r17;
        net.sourceforge.plantuml.ugraphic.UGraphic r19, $r21;
        net.sourceforge.plantuml.ugraphic.UTranslate $r20;
        net.sourceforge.plantuml.graphic.StringBounder $r22;
        net.sourceforge.plantuml.awt.geom.Dimension2D r23;
        double $d0, $d1, $d2, d3, d4, d5, d6;
        byte $b0, $b1;
        java.lang.String[] $r25;
        net.sourceforge.plantuml.ugraphic.color.NoSuchColorException $r27;
        java.util.Iterator r28, r32;
        net.sourceforge.plantuml.command.BlocLines r30;
        net.sourceforge.plantuml.sprite.Sprite r34;
        net.sourceforge.plantuml.graphic.TextBlock r35, r36, r37;

        r0 := @this: net.sourceforge.plantuml.sprite.StdlibDiagram;

        r19 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d3 = 0.0;

        d4 = 0.0;

        d5 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: java.lang.String name>;

        r2 = staticinvoke <net.sourceforge.plantuml.preproc.Stdlib: net.sourceforge.plantuml.preproc.Stdlib retrieve(java.lang.String)>($r1);

        $r3 = new net.sourceforge.plantuml.command.CommandFactorySprite;

        specialinvoke $r3.<net.sourceforge.plantuml.command.CommandFactorySprite: void <init>()>();

        r5 = virtualinvoke $r3.<net.sourceforge.plantuml.command.CommandFactorySprite: net.sourceforge.plantuml.command.Command createMultiLine(boolean)>(0);

        r6 = virtualinvoke r2.<net.sourceforge.plantuml.preproc.Stdlib: java.util.List extractAllSprites()>();

        r28 = interfaceinvoke r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r28.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r24 = interfaceinvoke r28.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.lang.String) $r24;

        $r25 = virtualinvoke r29.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        r30 = staticinvoke <net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.command.BlocLines fromArray(java.lang.String[])>($r25);

     label2:
        interfaceinvoke r5.<net.sourceforge.plantuml.command.Command: net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.core.Diagram,net.sourceforge.plantuml.command.BlocLines)>(r0, r30);

     label3:
        goto label5;

     label4:
        $r27 := @caughtexception;

        virtualinvoke $r27.<net.sourceforge.plantuml.ugraphic.color.NoSuchColorException: void printStackTrace()>();

     label5:
        goto label1;

     label6:
        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: java.util.Collection getAllSpriteNames()>();

        r32 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label7:
        $z1 = interfaceinvoke r32.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r9 = interfaceinvoke r32.<java.util.Iterator: java.lang.Object next()>();

        r33 = (java.lang.String) $r9;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r34 = interfaceinvoke $r10.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.sprite.Sprite getSprite(java.lang.String)>(r33);

        $r11 = newarray (java.lang.CharSequence)[1];

        $r11[0] = r33;

        $r12 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r11);

        $r13 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(14);

        $r14 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>($r13);

        $r15 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r35 = virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r14, $r15, $r16);

        $r17 = specialinvoke r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        r36 = interfaceinvoke r34.<net.sourceforge.plantuml.sprite.Sprite: net.sourceforge.plantuml.graphic.TextBlock asTextBlock(net.sourceforge.plantuml.ugraphic.color.HColor,double)>($r17, 1.0);

        $r18 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        r37 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock mergeTB(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r36, r35, $r18);

        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d4);

        $r21 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        interfaceinvoke r37.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r21);

        $r22 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r23 = interfaceinvoke r37.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r22);

        $d0 = virtualinvoke r23.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d5 = staticinvoke <java.lang.Math: double max(double,double)>(d5, $d0);

        $d1 = virtualinvoke r23.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d6 = d3 + $d1;

        d3 = d6 + 30.0;

        $b0 = d3 cmpl 1800.0;

        if $b0 <= 0 goto label8;

        d3 = 0.0;

        $d2 = d5 + 50.0;

        d4 = d4 + $d2;

        d5 = 0.0;

        $b1 = d4 cmpl 1024.0;

        if $b1 <= 0 goto label8;

     label8:
        goto label7;

     label9:
        return;

        catch net.sourceforge.plantuml.ugraphic.color.NoSuchColorException from label2 to label3 with label4;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getBlack()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0, $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.sprite.StdlibDiagram r3;

        r3 := @this: net.sourceforge.plantuml.sprite.StdlibDiagram;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>($r0);

        return $r2;
    }

    static void access$000(net.sourceforge.plantuml.sprite.StdlibDiagram, net.sourceforge.plantuml.ugraphic.UGraphic) throws java.io.IOException
    {
        net.sourceforge.plantuml.sprite.StdlibDiagram r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @parameter0: net.sourceforge.plantuml.sprite.StdlibDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.sprite.StdlibDiagram: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.sprite.StdlibDiagram: int WIDTH> = 1800;

        return;
    }
}
