public class net.sourceforge.plantuml.json.ParseException extends java.lang.RuntimeException
{
    private final net.sourceforge.plantuml.json.Location location;

    void <init>(java.lang.String, net.sourceforge.plantuml.json.Location)
    {
        net.sourceforge.plantuml.json.ParseException r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6;
        java.lang.String r2, $r7;
        net.sourceforge.plantuml.json.Location r5;

        r0 := @this: net.sourceforge.plantuml.json.ParseException;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: net.sourceforge.plantuml.json.Location;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        r0.<net.sourceforge.plantuml.json.ParseException: net.sourceforge.plantuml.json.Location location> = r5;

        return;
    }

    public net.sourceforge.plantuml.json.Location getLocation()
    {
        net.sourceforge.plantuml.json.ParseException r0;
        net.sourceforge.plantuml.json.Location $r1;

        r0 := @this: net.sourceforge.plantuml.json.ParseException;

        $r1 = r0.<net.sourceforge.plantuml.json.ParseException: net.sourceforge.plantuml.json.Location location>;

        return $r1;
    }

    public int getOffset()
    {
        net.sourceforge.plantuml.json.ParseException r0;
        net.sourceforge.plantuml.json.Location $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.json.ParseException;

        $r1 = r0.<net.sourceforge.plantuml.json.ParseException: net.sourceforge.plantuml.json.Location location>;

        $i0 = $r1.<net.sourceforge.plantuml.json.Location: int offset>;

        return $i0;
    }

    public int getLine()
    {
        net.sourceforge.plantuml.json.ParseException r0;
        net.sourceforge.plantuml.json.Location $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.json.ParseException;

        $r1 = r0.<net.sourceforge.plantuml.json.ParseException: net.sourceforge.plantuml.json.Location location>;

        $i0 = $r1.<net.sourceforge.plantuml.json.Location: int line>;

        return $i0;
    }

    public int getColumn()
    {
        net.sourceforge.plantuml.json.ParseException r0;
        net.sourceforge.plantuml.json.Location $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.json.ParseException;

        $r1 = r0.<net.sourceforge.plantuml.json.ParseException: net.sourceforge.plantuml.json.Location location>;

        $i0 = $r1.<net.sourceforge.plantuml.json.Location: int column>;

        return $i0;
    }
}
