public class net.sourceforge.plantuml.SignatureUtils extends java.lang.Object
{
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        net.sourceforge.plantuml.SignatureUtils r0;

        r0 := @this: net.sourceforge.plantuml.SignatureUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized byte[] salting(java.lang.String, byte[]) throws java.security.NoSuchAlgorithmException, java.security.spec.InvalidKeySpecException
    {
        javax.crypto.SecretKeyFactory r0;
        javax.crypto.spec.PBEKeySpec $r1;
        java.lang.String r2;
        char[] $r3;
        byte[] r4, r7;
        javax.crypto.SecretKey r6;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: byte[];

        r0 = staticinvoke <javax.crypto.SecretKeyFactory: javax.crypto.SecretKeyFactory getInstance(java.lang.String)>("PBKDF2WithHmacSHA1");

        $r1 = new javax.crypto.spec.PBEKeySpec;

        $r3 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

        specialinvoke $r1.<javax.crypto.spec.PBEKeySpec: void <init>(char[],byte[],int,int)>($r3, r4, 500, 512);

        r6 = virtualinvoke r0.<javax.crypto.SecretKeyFactory: javax.crypto.SecretKey generateSecret(java.security.spec.KeySpec)>($r1);

        r7 = interfaceinvoke r6.<javax.crypto.SecretKey: byte[] getEncoded()>();

        return r7;
    }

    public static java.lang.String getSignature(java.lang.String)
    {
        java.lang.String r0, $r1;
        java.io.UnsupportedEncodingException $r2;
        java.lang.UnsupportedOperationException $r3, $r5;
        java.security.NoSuchAlgorithmException $r4;
        byte[] r6;

        r0 := @parameter0: java.lang.String;

     label1:
        r6 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: byte[] getMD5raw(java.lang.String)>(r0);

        $r1 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String toString(byte[])>(r6);

     label2:
        return $r1;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

     label4:
        $r2 := @caughtexception;

        virtualinvoke $r2.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
        catch java.io.UnsupportedEncodingException from label1 to label2 with label4;
    }

    public static java.lang.String toString(byte[])
    {
        net.sourceforge.plantuml.code.AsciiEncoder $r0;
        byte[] r2;
        java.lang.String $r3;

        r2 := @parameter0: byte[];

        $r0 = new net.sourceforge.plantuml.code.AsciiEncoder;

        specialinvoke $r0.<net.sourceforge.plantuml.code.AsciiEncoder: void <init>()>();

        $r3 = virtualinvoke $r0.<net.sourceforge.plantuml.code.AsciiEncoder: java.lang.String encode(byte[])>(r2);

        return $r3;
    }

    public static java.lang.String toHexString(byte[])
    {
        java.lang.StringBuilder $r0;
        byte[] r1;
        int $i0, $i1, i2, i4;
        java.lang.String $r4, $r7;
        byte b3;
        java.lang.Object[] $r5;
        java.lang.Byte $r6;

        r1 := @parameter0: byte[];

        $r0 = new java.lang.StringBuilder;

        $i0 = lengthof r1;

        $i1 = $i0 * 2;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        i2 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i2 goto label2;

        b3 = r1[i4];

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(b3);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02x", $r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i4 = i4 + 1;

        goto label1;

     label2:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static java.lang.String getMD5Hex(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;
        int $i0;
        java.lang.AssertionError $r2;
        java.io.UnsupportedEncodingException $r3;
        java.lang.UnsupportedOperationException $r4, $r6;
        java.security.NoSuchAlgorithmException $r5;
        byte[] r7;

        r0 := @parameter0: java.lang.String;

     label1:
        r7 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: byte[] getMD5raw(java.lang.String)>(r0);

        $z0 = <net.sourceforge.plantuml.SignatureUtils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i0 = lengthof r7;

        if $i0 == 16 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r1 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String toHexString(byte[])>(r7);

     label3:
        return $r1;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label3 with label4;
        catch java.io.UnsupportedEncodingException from label1 to label3 with label5;
    }

    public static java.lang.String getSHA512Hex(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;
        int $i0;
        java.lang.AssertionError $r2;
        java.io.UnsupportedEncodingException $r3;
        java.lang.UnsupportedOperationException $r4, $r6;
        java.security.NoSuchAlgorithmException $r5;
        byte[] r7;

        r0 := @parameter0: java.lang.String;

     label1:
        r7 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: byte[] getSHA512raw(java.lang.String)>(r0);

        $z0 = <net.sourceforge.plantuml.SignatureUtils: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i0 = lengthof r7;

        if $i0 == 64 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        $r1 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String toHexString(byte[])>(r7);

     label3:
        return $r1;

     label4:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label5:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label3 with label4;
        catch java.io.UnsupportedEncodingException from label1 to label3 with label5;
    }

    public static synchronized byte[] getMD5raw(java.lang.String) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.security.MessageDigest r0;
        java.lang.String r1;
        java.nio.charset.Charset $r2;
        byte[] $r3, $r4;

        r1 := @parameter0: java.lang.String;

        r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        virtualinvoke r0.<java.security.MessageDigest: void update(byte[])>($r3);

        $r4 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>();

        return $r4;
    }

    public static byte[] getSHA512raw(java.lang.String) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.lang.String r0;
        java.nio.charset.Charset $r1;
        byte[] $r2, $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: byte[] getSHA512raw(byte[])>($r2);

        return $r3;
    }

    public static synchronized byte[] getSHA512raw(byte[]) throws java.security.NoSuchAlgorithmException, java.io.UnsupportedEncodingException
    {
        java.security.MessageDigest r0;
        byte[] r1, $r2;

        r1 := @parameter0: byte[];

        r0 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-512");

        virtualinvoke r0.<java.security.MessageDigest: void update(byte[])>(r1);

        $r2 = virtualinvoke r0.<java.security.MessageDigest: byte[] digest()>();

        return $r2;
    }

    public static java.lang.String getSignatureSha512(net.sourceforge.plantuml.security.SFile) throws java.io.IOException
    {
        net.sourceforge.plantuml.security.SFile r0;
        java.io.InputStream r1;
        java.lang.Throwable $r2, $r4;
        java.lang.String r5;

        r0 := @parameter0: net.sourceforge.plantuml.security.SFile;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.security.SFile: java.io.InputStream openFile()>();

     label1:
        r5 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String getSignatureSha512(java.io.InputStream)>(r1);

     label2:
        if r1 == null goto label3;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label3:
        return r5;

     label4:
        $r4 := @caughtexception;

        if r1 == null goto label8;

     label5:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label6:
        goto label8;

     label7:
        $r2 := @caughtexception;

        virtualinvoke $r4.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r2);

     label8:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    public static synchronized java.lang.String getSignatureSha512(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        int $i0;
        byte[] r1;
        java.lang.String $r2;
        byte $b1;
        java.io.UnsupportedEncodingException $r3;
        java.lang.UnsupportedOperationException $r4, $r6;
        java.security.NoSuchAlgorithmException $r5;
        java.security.MessageDigest r7;

        r0 := @parameter0: java.io.InputStream;

     label1:
        r7 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-512");

     label2:
        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if $i0 == -1 goto label3;

        $b1 = (byte) $i0;

        virtualinvoke r7.<java.security.MessageDigest: void update(byte)>($b1);

        goto label2;

     label3:
        r1 = virtualinvoke r7.<java.security.MessageDigest: byte[] digest()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String toString(byte[])>(r1);

     label4:
        return $r2;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r5);

        throw $r6;

     label6:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label1 to label4 with label5;
        catch java.io.UnsupportedEncodingException from label1 to label4 with label6;
    }

    public static java.lang.String getSignatureWithoutImgSrc(java.lang.String)
    {
        java.lang.String $r0, r1, r2;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String purge(java.lang.String)>(r1);

        r2 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String getSignature(java.lang.String)>($r0);

        return r2;
    }

    public static java.lang.String purge(java.lang.String)
    {
        java.lang.String r2, r3, r4;

        r2 := @parameter0: java.lang.String;

        r3 = virtualinvoke r2.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(?i)\\<img\\s+src=\"(?:[^\"]+[/\\\\])?([^/\\\\\\d.]+)\\d*(\\.\\w+)\"/\\>", "<img src=\"$1$2\"/>");

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("(?i)image=\"(?:[^\"]+[/\\\\])?([^/\\\\\\d.]+)\\d*(\\.\\w+)\"", "image=\"$1$2\"");

        return r4;
    }

    public static synchronized java.lang.String getSignature(net.sourceforge.plantuml.security.SFile) throws java.io.IOException
    {
        net.sourceforge.plantuml.security.SFile r0;
        int $i0;
        byte[] r1;
        java.lang.String r2;
        byte $b1;
        java.io.FileNotFoundException $r3;
        java.io.UnsupportedEncodingException $r4;
        java.lang.UnsupportedOperationException $r5, $r7;
        java.security.NoSuchAlgorithmException $r6;
        java.lang.Throwable $r8, $r9;
        java.io.InputStream r10;
        java.security.MessageDigest r11;

        r0 := @parameter0: net.sourceforge.plantuml.security.SFile;

     label01:
        r10 = virtualinvoke r0.<net.sourceforge.plantuml.security.SFile: java.io.InputStream openFile()>();

     label02:
        r11 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        if r10 != null goto label03;

        $r3 = new java.io.FileNotFoundException;

        specialinvoke $r3.<java.io.FileNotFoundException: void <init>()>();

        throw $r3;

     label03:
        $i0 = virtualinvoke r10.<java.io.InputStream: int read()>();

        if $i0 == -1 goto label04;

        $b1 = (byte) $i0;

        virtualinvoke r11.<java.security.MessageDigest: void update(byte)>($b1);

        goto label03;

     label04:
        r1 = virtualinvoke r11.<java.security.MessageDigest: byte[] digest()>();

        r2 = staticinvoke <net.sourceforge.plantuml.SignatureUtils: java.lang.String toString(byte[])>(r1);

     label05:
        if r10 == null goto label06;

        virtualinvoke r10.<java.io.InputStream: void close()>();

     label06:
        return r2;

     label07:
        $r9 := @caughtexception;

        if r10 == null goto label11;

     label08:
        virtualinvoke r10.<java.io.InputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r8);

     label11:
        throw $r9;

     label12:
        $r6 := @caughtexception;

        virtualinvoke $r6.<java.security.NoSuchAlgorithmException: void printStackTrace()>();

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label13:
        $r4 := @caughtexception;

        virtualinvoke $r4.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Throwable from label02 to label05 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.security.NoSuchAlgorithmException from label01 to label06 with label12;
        catch java.security.NoSuchAlgorithmException from label07 to label12 with label12;
        catch java.io.UnsupportedEncodingException from label01 to label06 with label13;
        catch java.io.UnsupportedEncodingException from label07 to label12 with label13;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/SignatureUtils;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.SignatureUtils: boolean $assertionsDisabled> = $z1;

        return;
    }
}
