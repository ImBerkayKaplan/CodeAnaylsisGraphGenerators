class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection implements net.sourceforge.plantuml.activitydiagram3.ftile.ConnectionTranslatable
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    private final net.sourceforge.plantuml.graphic.TextBlock tbout;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;
        net.sourceforge.plantuml.graphic.TextBlock r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.TextBlock tbout> = r5;

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r5;
        java.awt.geom.Point2D $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r7 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r6);

        return $r7;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r5;
        java.awt.geom.Point2D $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        $r7 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r6);

        return $r7;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.graphic.Rainbow $r7;
        net.sourceforge.plantuml.ugraphic.UPolygon $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r9, r12;
        net.sourceforge.plantuml.graphic.TextBlock $r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r11;
        java.awt.geom.Point2D $r13, $r14;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r6, $r7, $r8);

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.TextBlock tbout>;

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r12 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r10, $r11);

        $r13 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r13);

        $r14 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r14);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r12);

        return;
    }

    public void drawTranslate(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat $r5, $r15;
        net.sourceforge.plantuml.ISkinParam $r6, $r16;
        net.sourceforge.plantuml.graphic.Rainbow $r7, $r17;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r8, $r19, r22;
        net.sourceforge.plantuml.ugraphic.UTranslate r9, r12;
        java.awt.geom.Point2D $r10, r11, $r13, r14;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.UPolygon $r18;
        net.sourceforge.plantuml.graphic.TextBlock $r20;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r21;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r9 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r12 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r6, $r7);

        $r10 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r11 = virtualinvoke r9.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r10);

        $r13 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r14 = virtualinvoke r12.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r13);

        $d0 = virtualinvoke r11.<java.awt.geom.Point2D: double getY()>();

        $d1 = virtualinvoke r14.<java.awt.geom.Point2D: double getY()>();

        $d2 = $d0 + $d1;

        d3 = $d2 / 2.0;

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r11);

        $d4 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d4, d3);

        $d5 = virtualinvoke r14.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d5, d3);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r8);

        $r15 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat this$0>;

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r17 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        $r18 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r16, $r17, $r18);

        $r20 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.TextBlock tbout>;

        $r21 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileRepeat$ConnectionOut: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r22 = virtualinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r20, $r21);

        $d6 = virtualinvoke r14.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r22.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d6, d3);

        virtualinvoke r22.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r14);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r22);

        return;
    }
}
