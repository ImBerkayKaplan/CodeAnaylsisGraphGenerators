abstract class net.sourceforge.plantuml.salt.element.AbstractElementText extends net.sourceforge.plantuml.salt.element.AbstractElement
{
    private final net.sourceforge.plantuml.graphic.TextBlock block;
    private final net.sourceforge.plantuml.graphic.FontConfiguration config;
    private final int charLength;

    public void <init>(java.lang.String, net.sourceforge.plantuml.ugraphic.UFont, boolean, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.element.AbstractElementText r0;
        net.sourceforge.plantuml.ugraphic.UFont r1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r2, $r7;
        boolean z0;
        java.lang.CharSequence[] $r3;
        net.sourceforge.plantuml.cucadiagram.Display $r4;
        net.sourceforge.plantuml.ISkinSimple r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r6;
        net.sourceforge.plantuml.graphic.TextBlock $r8;
        int $i0;
        java.lang.String r9;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElementText;

        r9 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        z0 := @parameter2: boolean;

        r5 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: void <init>()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>(r1);

        r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: net.sourceforge.plantuml.graphic.FontConfiguration config> = $r2;

        if z0 == 0 goto label1;

        $i0 = specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: int getCharNumber(java.lang.String)>(r9);

        r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: int charLength> = $i0;

        r9 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>(r9);

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: int charLength> = 0;

     label2:
        $r3 = newarray (java.lang.CharSequence)[1];

        $r3[0] = r9;

        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r3);

        $r7 = r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: net.sourceforge.plantuml.graphic.FontConfiguration config>;

        $r6 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r8 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r7, $r6, r5);

        r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: net.sourceforge.plantuml.graphic.TextBlock block> = $r8;

        return;
    }

    private int getCharNumber(java.lang.String)
    {
        int $i0;
        net.sourceforge.plantuml.salt.element.AbstractElementText r0;
        java.lang.String r1, r2, r3;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElementText;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("<&[-\\w]+>", "00");

        r3 = staticinvoke <net.sourceforge.plantuml.graphic.Splitter: java.lang.String purgeAllTag(java.lang.String)>(r2);

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        return $i0;
    }

    protected void drawText(net.sourceforge.plantuml.ugraphic.UGraphic, double, double)
    {
        net.sourceforge.plantuml.salt.element.AbstractElementText r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        double d0, d1;
        net.sourceforge.plantuml.graphic.TextBlock $r3;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElementText;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r3 = r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: net.sourceforge.plantuml.graphic.TextBlock block>;

        $r2 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d1);

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r4);

        return;
    }

    protected net.sourceforge.plantuml.awt.geom.Dimension2D getPureTextDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.salt.element.AbstractElementText r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElementText;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: net.sourceforge.plantuml.graphic.TextBlock block>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }

    protected net.sourceforge.plantuml.awt.geom.Dimension2D getTextDimensionAt(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.salt.element.AbstractElementText r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        int $i0, $i1;
        double d0, $d1, $d2, $d3, $d4, $d5, d6;
        net.sourceforge.plantuml.Dimension2DDouble $r4;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElementText;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d6 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: net.sourceforge.plantuml.graphic.TextBlock block>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $i0 = r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: int charLength>;

        if $i0 != 0 goto label1;

        return r3;

     label1:
        d0 = specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: double getSingleSpace(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $i1 = r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: int charLength>;

        $d2 = (double) $i1;

        $d3 = $d2 * d0;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d3);

        $d5 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d4, $d5);

        return $r4;
    }

    private double getSingleSpace(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.salt.element.AbstractElementText r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElementText;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 8.0;
    }

    protected final net.sourceforge.plantuml.graphic.FontConfiguration getConfig()
    {
        net.sourceforge.plantuml.salt.element.AbstractElementText r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElementText;

        $r1 = r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: net.sourceforge.plantuml.graphic.FontConfiguration config>;

        return $r1;
    }
}
