public class net.sourceforge.plantuml.asciiart.TranslatedCharArea extends java.lang.Object implements net.sourceforge.plantuml.asciiart.UmlCharArea
{
    private final int dx;
    private final int dy;
    private final net.sourceforge.plantuml.asciiart.UmlCharArea charArea;

    public void <init>(net.sourceforge.plantuml.asciiart.UmlCharArea, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        net.sourceforge.plantuml.asciiart.UmlCharArea r1;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        r1 := @parameter0: net.sourceforge.plantuml.asciiart.UmlCharArea;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea> = r1;

        r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx> = i0;

        r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy> = i1;

        return;
    }

    public void drawBoxSimple(int, int, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        int i0, $i1, i2, $i3, i4, i5, $i6, $i7;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i7 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i6 = i2 + $i3;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawBoxSimple(int,int,int,int)>($i7, $i6, i4, i5);

        return;
    }

    public void drawBoxSimpleUnicode(int, int, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        int i0, $i1, i2, $i3, i4, i5, $i6, $i7;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i7 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i6 = i2 + $i3;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawBoxSimpleUnicode(int,int,int,int)>($i7, $i6, i4, i5);

        return;
    }

    public void drawNoteSimple(int, int, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        int i0, $i1, i2, $i3, i4, i5, $i6, $i7;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i7 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i6 = i2 + $i3;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawNoteSimple(int,int,int,int)>($i7, $i6, i4, i5);

        return;
    }

    public void drawNoteSimpleUnicode(int, int, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        int i0, $i1, i2, $i3, i4, i5, $i6, $i7;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i7 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i6 = i2 + $i3;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawNoteSimpleUnicode(int,int,int,int)>($i7, $i6, i4, i5);

        return;
    }

    public void drawShape(net.sourceforge.plantuml.asciiart.AsciiShape, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        net.sourceforge.plantuml.asciiart.AsciiShape r1;
        int i0, $i1, i2, $i3, $i4, $i5;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        r1 := @parameter0: net.sourceforge.plantuml.asciiart.AsciiShape;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i5 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i4 = i2 + $i3;

        interfaceinvoke $r2.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawShape(net.sourceforge.plantuml.asciiart.AsciiShape,int,int)>(r1, $i5, $i4);

        return;
    }

    public void drawChar(char, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        char c0;
        int i1, $i2, i3, $i4, $i5, $i6;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i6 = i1 + $i2;

        $i4 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i5 = i3 + $i4;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawChar(char,int,int)>(c0, $i6, $i5);

        return;
    }

    public void drawHLine(char, int, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        char c0;
        int i1, $i2, i3, $i4, i5, $i6, $i7, $i8, $i9;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i9 = i1 + $i2;

        $i4 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i8 = i3 + $i4;

        $i6 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i7 = i5 + $i6;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawHLine(char,int,int,int)>(c0, $i9, $i8, $i7);

        return;
    }

    public void drawHLine(char, int, int, int, char, char)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        char c0, c7, c8;
        int i1, $i2, i3, $i4, i5, $i6, $i9, $i10, $i11;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        i5 := @parameter3: int;

        c7 := @parameter4: char;

        c8 := @parameter5: char;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i11 = i1 + $i2;

        $i4 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i10 = i3 + $i4;

        $i6 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i9 = i5 + $i6;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawHLine(char,int,int,int,char,char)>(c0, $i11, $i10, $i9, c7, c8);

        return;
    }

    public void drawStringLR(java.lang.String, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        java.lang.String r1;
        int i0, $i1, i2, $i3, $i4, $i5;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i5 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i4 = i2 + $i3;

        interfaceinvoke $r2.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>(r1, $i5, $i4);

        return;
    }

    public void drawStringTB(java.lang.String, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        java.lang.String r1;
        int i0, $i1, i2, $i3, $i4, $i5;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i5 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i4 = i2 + $i3;

        interfaceinvoke $r2.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringTB(java.lang.String,int,int)>(r1, $i5, $i4);

        return;
    }

    public void drawVLine(char, int, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        char c0;
        int i1, $i2, i3, $i4, i5, $i6, $i7, $i8, $i9;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        i5 := @parameter3: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i9 = i1 + $i2;

        $i4 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i8 = i3 + $i4;

        $i6 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i7 = i5 + $i6;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawVLine(char,int,int,int)>(c0, $i9, $i8, $i7);

        return;
    }

    public int getHeight()
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i0 = interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: int getHeight()>();

        return $i0;
    }

    public int getWidth()
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i0 = interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: int getWidth()>();

        return $i0;
    }

    public java.lang.String getLine(int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        int i0;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: java.lang.String getLine(int)>(i0);

        return $r2;
    }

    public java.util.List getLines()
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: java.util.List getLines()>();

        return $r2;
    }

    public void print(java.io.PrintStream)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        java.io.PrintStream r1;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        r1 := @parameter0: java.io.PrintStream;

        $r2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.asciiart.UmlCharArea: void print(java.io.PrintStream)>(r1);

        return;
    }

    public void drawStringsLRSimple(java.util.Collection, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        java.util.Collection r1;
        int i0, $i1, i2, $i3, $i4, $i5;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        r1 := @parameter0: java.util.Collection;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i5 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i4 = i2 + $i3;

        interfaceinvoke $r2.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRSimple(java.util.Collection,int,int)>(r1, $i5, $i4);

        return;
    }

    public void drawStringsLRUnicode(java.util.Collection, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        java.util.Collection r1;
        int i0, $i1, i2, $i3, $i4, $i5;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        r1 := @parameter0: java.util.Collection;

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        $r2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i5 = i0 + $i1;

        $i3 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i4 = i2 + $i3;

        interfaceinvoke $r2.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRUnicode(java.util.Collection,int,int)>(r1, $i5, $i4);

        return;
    }

    public void fillRect(char, int, int, int, int)
    {
        net.sourceforge.plantuml.asciiart.TranslatedCharArea r0;
        char c0;
        int i1, $i2, i3, $i4, i5, i6, $i7, $i8;
        net.sourceforge.plantuml.asciiart.UmlCharArea $r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TranslatedCharArea;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        i5 := @parameter3: int;

        i6 := @parameter4: int;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: net.sourceforge.plantuml.asciiart.UmlCharArea charArea>;

        $i2 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dx>;

        $i8 = i1 + $i2;

        $i4 = r0.<net.sourceforge.plantuml.asciiart.TranslatedCharArea: int dy>;

        $i7 = i3 + $i4;

        interfaceinvoke $r1.<net.sourceforge.plantuml.asciiart.UmlCharArea: void fillRect(char,int,int,int,int)>(c0, $i8, $i7, i5, i6);

        return;
    }
}
