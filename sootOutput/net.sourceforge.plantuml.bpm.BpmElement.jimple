public class net.sourceforge.plantuml.bpm.BpmElement extends net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle implements net.sourceforge.plantuml.bpm.ConnectorPuzzle
{
    private final java.lang.String id;
    private final net.sourceforge.plantuml.bpm.BpmElementType type;
    private final net.sourceforge.plantuml.cucadiagram.Display display;
    private net.sourceforge.plantuml.awt.geom.Dimension2D dimension;

    public void <init>(java.lang.String, net.sourceforge.plantuml.bpm.BpmElementType, java.lang.String)
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        java.lang.String r1, r3;
        net.sourceforge.plantuml.bpm.BpmElementType r2;
        net.sourceforge.plantuml.cucadiagram.Display $r4;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.bpm.BpmElementType;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.AbstractConnectorPuzzle: void <init>()>();

        r0.<net.sourceforge.plantuml.bpm.BpmElement: java.lang.String id> = r1;

        r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.bpm.BpmElementType type> = r2;

        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r3);

        r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.cucadiagram.Display display> = $r4;

        return;
    }

    public void <init>(java.lang.String, net.sourceforge.plantuml.bpm.BpmElementType)
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        java.lang.String r1;
        net.sourceforge.plantuml.bpm.BpmElementType r2;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.bpm.BpmElementType;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.BpmElement: void <init>(java.lang.String,net.sourceforge.plantuml.bpm.BpmElementType,java.lang.String)>(r1, r2, null);

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        java.lang.String $r1, $r4, $r7, $r10, $r13, $r19;
        java.lang.StringBuilder $r2, $r5, $r6, $r8, $r9, $r11, $r14, $r15, $r17, $r18;
        net.sourceforge.plantuml.bpm.BpmElementType $r3, $r12;
        net.sourceforge.plantuml.cucadiagram.Display $r16;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        $r1 = r0.<net.sourceforge.plantuml.bpm.BpmElement: java.lang.String id>;

        if $r1 != null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.bpm.BpmElementType type>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.bpm.BpmElementType: java.lang.String toString()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r16 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r19;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.bpm.BpmElementType type>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.bpm.BpmElementType: java.lang.String toString()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r7 = r0.<net.sourceforge.plantuml.bpm.BpmElement: java.lang.String id>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public net.sourceforge.plantuml.bpm.BpmElementType getType()
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        net.sourceforge.plantuml.bpm.BpmElementType $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        $r1 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.bpm.BpmElementType type>;

        return $r1;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getDisplay()
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        $r1 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.cucadiagram.Display display>;

        return $r1;
    }

    public net.sourceforge.plantuml.graphic.TextBlock toTextBlock(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.TextBlock r2;
        net.sourceforge.plantuml.bpm.BpmElement$1 $r3;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.graphic.TextBlock toTextBlockInternal(net.sourceforge.plantuml.ISkinParam)>(r1);

        $r3 = new net.sourceforge.plantuml.bpm.BpmElement$1;

        specialinvoke $r3.<net.sourceforge.plantuml.bpm.BpmElement$1: void <init>(net.sourceforge.plantuml.bpm.BpmElement,net.sourceforge.plantuml.graphic.TextBlock)>(r0, r2);

        return $r3;
    }

    private void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.awt.geom.Dimension2D r0;
        double d0, d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6, $r8, $r11, $r14, $r17;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r10, $r13, $r16;
        net.sourceforge.plantuml.ugraphic.ULine $r9, $r12, $r15, $r18;
        net.sourceforge.plantuml.bpm.BpmElement r19;

        r19 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where;

        r0 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r2 = <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where WEST>;

        if r1 != $r2 goto label1;

        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = d1 / 2.0;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(-10.0, $d5);

        $r17 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(10.0);

        interfaceinvoke $r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r18);

     label1:
        $r3 = <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where EAST>;

        if r1 != $r3 goto label2;

        $r13 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d4 = d1 / 2.0;

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, $d4);

        $r14 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        $r15 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(10.0);

        interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r15);

     label2:
        $r4 = <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where NORTH>;

        if r1 != $r4 goto label3;

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = d0 / 2.0;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, -10.0);

        $r11 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(10.0);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

     label3:
        $r5 = <net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where SOUTH>;

        if r1 != $r5 goto label4;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d2 = d0 / 2.0;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d2, d1);

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(10.0);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

     label4:
        return;
    }

    private net.sourceforge.plantuml.style.StyleSignature getSignatureCircle()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.bpm.BpmElement r6;

        r6 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName circle>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private net.sourceforge.plantuml.style.Style getStyle(net.sourceforge.plantuml.ISkinParam)
    {
        boolean $z0;
        net.sourceforge.plantuml.bpm.BpmElement r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style $r4;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.style.StyleSignature getSignatureCircle()>();

        $r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        return $r4;

     label1:
        return null;
    }

    public net.sourceforge.plantuml.graphic.TextBlock toTextBlockInternal(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        net.sourceforge.plantuml.bpm.BpmElementType $r1, $r2, $r3, $r4, $r5, $r6, $r15;
        net.sourceforge.plantuml.graphic.FontConfiguration $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8, $r9, r31, r32;
        net.sourceforge.plantuml.cucadiagram.Display $r10, $r13, $r17, $r21;
        boolean $z0;
        net.sourceforge.plantuml.ISkinParam r11;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r12, $r18;
        net.sourceforge.plantuml.graphic.TextBlock $r14, $r19;
        java.lang.String $r16;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle $r20;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox $r22;
        net.sourceforge.plantuml.ColorParam[] $r23, $r25;
        net.sourceforge.plantuml.ColorParam $r24, $r26;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond $r27;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileCircleStart $r28;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r29;
        net.sourceforge.plantuml.style.Style $r30;
        net.sourceforge.plantuml.ugraphic.UFont r34;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        r11 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $r2 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.bpm.BpmElementType type>;

        $r1 = <net.sourceforge.plantuml.bpm.BpmElementType: net.sourceforge.plantuml.bpm.BpmElementType START>;

        if $r2 != $r1 goto label1;

        $r28 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileCircleStart;

        $r29 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r30 = specialinvoke r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.style.Style getStyle(net.sourceforge.plantuml.ISkinParam)>(r11);

        specialinvoke $r28.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileCircleStart: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.style.Style)>(r11, $r29, null, $r30);

        return $r28;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.bpm.BpmElementType type>;

        $r3 = <net.sourceforge.plantuml.bpm.BpmElementType: net.sourceforge.plantuml.bpm.BpmElementType MERGE>;

        if $r4 != $r3 goto label2;

        $r23 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r24 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityBorder>;

        $r23[0] = $r24;

        r31 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r11, null, $r23);

        $r25 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r26 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityBackground>;

        $r25[0] = $r26;

        r32 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r11, null, $r25);

        $r27 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        specialinvoke $r27.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r11, r32, r31, null);

        return $r27;

     label2:
        $r6 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.bpm.BpmElementType type>;

        $r5 = <net.sourceforge.plantuml.bpm.BpmElementType: net.sourceforge.plantuml.bpm.BpmElementType DOCKED_EVENT>;

        if $r6 != $r5 goto label3;

        staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont serif(int)>(14);

        $r21 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r20 = <net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle PLAIN>;

        $r22 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBox create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r11, $r21, null, $r20, null);

        return $r22;

     label3:
        r34 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont serif(int)>(14);

        $r7 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r9 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor RED>;

        $r8 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor RED>;

        specialinvoke $r7.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>(r34, $r9, $r8, 0);

        $r10 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.cucadiagram.Display display>;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r10);

        if $z0 == 0 goto label4;

        $r15 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.bpm.BpmElementType type>;

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.bpm.BpmElementType: java.lang.String toString()>();

        $r17 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r16);

        $r18 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r19 = virtualinvoke $r17.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r7, $r18, r11);

        return $r19;

     label4:
        $r13 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r12 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r7, $r12, r11);

        return $r14;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getDimension(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r1, $r2, $r6;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4;
        net.sourceforge.plantuml.graphic.StringBounder r5;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        $r1 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.awt.geom.Dimension2D dimension>;

        if $r1 != null goto label1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.graphic.TextBlock toTextBlock(net.sourceforge.plantuml.ISkinParam)>(r3);

        $r6 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r5);

        r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.awt.geom.Dimension2D dimension> = $r6;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.bpm.BpmElement: net.sourceforge.plantuml.awt.geom.Dimension2D dimension>;

        return $r2;
    }

    public final java.lang.String getId()
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmElement;

        $r1 = r0.<net.sourceforge.plantuml.bpm.BpmElement: java.lang.String id>;

        return $r1;
    }

    static void access$000(net.sourceforge.plantuml.bpm.BpmElement, net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.bpm.BpmElement r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;

        r0 := @parameter0: net.sourceforge.plantuml.bpm.BpmElement;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter2: net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where;

        r3 := @parameter3: net.sourceforge.plantuml.awt.geom.Dimension2D;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.BpmElement: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.bpm.ConnectorPuzzle$Where,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1, r2, r3);

        return;
    }
}
