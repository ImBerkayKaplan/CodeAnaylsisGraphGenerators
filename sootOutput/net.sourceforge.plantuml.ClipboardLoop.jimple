public class net.sourceforge.plantuml.ClipboardLoop extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.ClipboardLoop r0;

        r0 := @this: net.sourceforge.plantuml.ClipboardLoop;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void runLoop() throws java.io.IOException, java.lang.InterruptedException
    {
        net.sourceforge.plantuml.ClipboardLoop $r0;
        java.lang.String r2;
        boolean $z0;

        $r0 = new net.sourceforge.plantuml.ClipboardLoop;

        specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: void <init>()>();

     label1:
        r2 = specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: java.lang.String getClipboardText()>();

        $z0 = specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: boolean isTextOk(java.lang.String)>(r2);

        if $z0 == 0 goto label2;

        specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: void runText(java.lang.String)>(r2);

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(10000L);

        goto label1;
    }

    public static void runOnce() throws java.io.IOException, java.lang.InterruptedException
    {
        net.sourceforge.plantuml.ClipboardLoop $r0;
        java.lang.String r2;
        boolean $z0;
        java.awt.image.BufferedImage $r3;

        $r0 = new net.sourceforge.plantuml.ClipboardLoop;

        specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: void <init>()>();

        r2 = specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: java.lang.String getClipboardText()>();

        $z0 = specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: boolean isTextOk(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: void runText(java.lang.String)>(r2);

        goto label2;

     label1:
        $r3 = new java.awt.image.BufferedImage;

        specialinvoke $r3.<java.awt.image.BufferedImage: void <init>(int,int,int)>(10, 10, 2);

        specialinvoke $r0.<net.sourceforge.plantuml.ClipboardLoop: void setClipboardImage(java.awt.image.BufferedImage)>($r3);

     label2:
        return;
    }

    private boolean isTextOk(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;
        net.sourceforge.plantuml.ClipboardLoop r1;

        r1 := @this: net.sourceforge.plantuml.ClipboardLoop;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("@start");

        return $z0;
    }

    private void runText(java.lang.String) throws java.io.IOException, java.lang.InterruptedException
    {
        net.sourceforge.plantuml.SourceStringReader $r0;
        java.lang.String r1, $r8, $r10;
        java.io.ByteArrayOutputStream $r3;
        net.sourceforge.plantuml.core.DiagramDescription r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        byte[] $r11;
        java.awt.image.BufferedImage r12;
        net.sourceforge.plantuml.ClipboardLoop r13;

        r13 := @this: net.sourceforge.plantuml.ClipboardLoop;

        r1 := @parameter0: java.lang.String;

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>("Getting some text from clipboard");

        $r0 = new net.sourceforge.plantuml.SourceStringReader;

        specialinvoke $r0.<net.sourceforge.plantuml.SourceStringReader: void <init>(java.lang.String)>(r1);

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r5 = virtualinvoke $r0.<net.sourceforge.plantuml.SourceStringReader: net.sourceforge.plantuml.core.DiagramDescription outputImage(java.io.OutputStream)>($r3);

        if r5 != null goto label1;

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>("No image generated");

        goto label2;

     label1:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image ok ");

        $r8 = virtualinvoke r5.<net.sourceforge.plantuml.core.DiagramDescription: java.lang.String getDescription()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r10);

        virtualinvoke $r3.<java.io.ByteArrayOutputStream: void close()>();

        $r11 = virtualinvoke $r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r12 = staticinvoke <net.sourceforge.plantuml.security.SImageIO: java.awt.image.BufferedImage read(byte[])>($r11);

        specialinvoke r13.<net.sourceforge.plantuml.ClipboardLoop: void setClipboardImage(java.awt.image.BufferedImage)>(r12);

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>("Image copied in clipboard");

     label2:
        return;
    }

    private java.lang.String getClipboardText()
    {
        java.awt.Toolkit $r0;
        java.awt.datatransfer.Clipboard $r1;
        java.awt.datatransfer.Transferable r2;
        java.awt.datatransfer.DataFlavor $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;
        java.io.IOException $r6;
        java.lang.String $r7, $r9, r11;
        java.awt.datatransfer.UnsupportedFlavorException $r8;
        net.sourceforge.plantuml.ClipboardLoop r10;

        r10 := @this: net.sourceforge.plantuml.ClipboardLoop;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.datatransfer.Clipboard getSystemClipboard()>();

        r2 = virtualinvoke $r1.<java.awt.datatransfer.Clipboard: java.awt.datatransfer.Transferable getContents(java.lang.Object)>(null);

     label1:
        if r2 == null goto label3;

        $r3 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor stringFlavor>;

        $z0 = interfaceinvoke r2.<java.awt.datatransfer.Transferable: boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)>($r3);

        if $z0 == 0 goto label3;

        $r4 = <java.awt.datatransfer.DataFlavor: java.awt.datatransfer.DataFlavor stringFlavor>;

        $r5 = interfaceinvoke r2.<java.awt.datatransfer.Transferable: java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor)>($r4);

        r11 = (java.lang.String) $r5;

     label2:
        return r11;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<java.awt.datatransfer.UnsupportedFlavorException: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r9);

        goto label6;

     label5:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<java.io.IOException: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r7);

     label6:
        return null;

        catch java.awt.datatransfer.UnsupportedFlavorException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
    }

    private void setClipboardImage(java.awt.image.BufferedImage)
    {
        java.awt.Toolkit $r0;
        java.awt.datatransfer.Clipboard r1;
        net.sourceforge.plantuml.ImageSelection $r2;
        java.awt.image.BufferedImage r3;
        net.sourceforge.plantuml.ClipboardLoop r4;

        r4 := @this: net.sourceforge.plantuml.ClipboardLoop;

        r3 := @parameter0: java.awt.image.BufferedImage;

        $r0 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        r1 = virtualinvoke $r0.<java.awt.Toolkit: java.awt.datatransfer.Clipboard getSystemClipboard()>();

        $r2 = new net.sourceforge.plantuml.ImageSelection;

        specialinvoke $r2.<net.sourceforge.plantuml.ImageSelection: void <init>(java.awt.Image)>(r3);

        virtualinvoke r1.<java.awt.datatransfer.Clipboard: void setContents(java.awt.datatransfer.Transferable,java.awt.datatransfer.ClipboardOwner)>($r2, null);

        return;
    }
}
