public class net.sourceforge.plantuml.svek.extremity.ExtremityOther extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private final net.sourceforge.plantuml.ugraphic.UPolygon polygon;

    public void <init>(net.sourceforge.plantuml.ugraphic.UPolygon)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityOther r0;
        net.sourceforge.plantuml.ugraphic.UPolygon r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityOther;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityOther: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = r1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.svek.extremity.ExtremityOther r1;
        net.sourceforge.plantuml.ugraphic.UPolygon $r2;

        r1 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityOther;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityOther: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

        return;
    }

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityOther r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1;
        java.util.List $r2;
        java.lang.Object $r3;
        java.awt.geom.Point2D $r4;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityOther;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityOther: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.awt.geom.Point2D) $r3;

        return $r4;
    }
}
