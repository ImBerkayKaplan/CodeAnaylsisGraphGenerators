public class net.sourceforge.plantuml.timingdiagram.TimingDiagram extends net.sourceforge.plantuml.UmlDiagram implements net.sourceforge.plantuml.timingdiagram.Clocks
{
    public static final double marginX1;
    private final double marginX2;
    private final java.util.Map codes;
    private final java.util.Map players;
    private final java.util.Map clocks;
    private final java.util.List messages;
    private final java.util.List highlights;
    private final net.sourceforge.plantuml.timingdiagram.TimingRuler ruler;
    private net.sourceforge.plantuml.timingdiagram.TimeTick now;
    private net.sourceforge.plantuml.timingdiagram.Player lastPlayer;
    private boolean drawTimeAxis;
    private boolean compactByDefault;

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r1;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Timing Diagram)");

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.UmlDiagramType $r3;
        java.util.HashMap $r4, $r6;
        java.util.LinkedHashMap $r5;
        java.util.ArrayList $r7, $r8;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r9;
        net.sourceforge.plantuml.ISkinParam $r10;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        $r3 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType TIMING>;

        specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType)>(r1, r2, $r3);

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double marginX2> = 5.0;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double marginX2> = 5.0;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map codes> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players> = $r5;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map clocks> = $r6;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.List messages> = $r7;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.List highlights> = $r8;

        $r9 = new net.sourceforge.plantuml.timingdiagram.TimingRuler;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r9.<net.sourceforge.plantuml.timingdiagram.TimingRuler: void <init>(net.sourceforge.plantuml.ISkinParam)>($r10);

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler> = $r9;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean drawTimeAxis> = 1;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean compactByDefault> = 0;

        return;
    }

    protected net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r4;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r3;
        java.io.OutputStream r5;
        net.sourceforge.plantuml.core.ImageData $r6;
        int i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r5 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r1 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.svek.TextBlockBackcolored getTextBlock()>();

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r3);

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r5);

        return $r6;
    }

    private net.sourceforge.plantuml.svek.TextBlockBackcolored getTextBlock()
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram$1 $r0;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r1;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        $r0 = new net.sourceforge.plantuml.timingdiagram.TimingDiagram$1;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram$1: void <init>(net.sourceforge.plantuml.timingdiagram.TimingDiagram)>(r1);

        return $r0;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3;
        net.sourceforge.plantuml.style.StyleSignature $r4;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r5;

        r5 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timingDiagram>;

        $r0[2] = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r4;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor black()
    {
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r7, $r9;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style r4;
        net.sourceforge.plantuml.style.PName $r5;
        net.sourceforge.plantuml.style.Value $r6;
        net.sourceforge.plantuml.api.ThemeStyle $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r10;
        net.sourceforge.plantuml.ugraphic.color.HColor $r11;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r12;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r12 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        return $r12;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        $r5 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r5);

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r11 = interfaceinvoke $r6.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r8, $r10);

        return $r11;
    }

    private void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r1, $r6, $r12;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double d0, $d1, d2;
        net.sourceforge.plantuml.ugraphic.UTranslate r3, $r4, $r13, $r16, $r19, $r23, $r25, $r30;
        boolean $z0, $z1, $z2, $z3, z4, $z5, $z6;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, $r7, $r14, r17, $r20, $r22, $r24, $r26, $r29, $r31, r32, r33, r36;
        java.util.Map $r8;
        java.util.Collection $r9;
        java.util.List $r10;
        java.lang.Object $r11, $r15;
        net.sourceforge.plantuml.graphic.TextBlock $r18, $r27;
        net.sourceforge.plantuml.graphic.UDrawable $r21, $r28;
        java.util.Iterator r34, r37;
        net.sourceforge.plantuml.timingdiagram.Player r35;
        net.sourceforge.plantuml.timingdiagram.TimeMessage r38;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r32 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        virtualinvoke $r1.<net.sourceforge.plantuml.timingdiagram.TimingRuler: void ensureNotEmpty()>();

        r2 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getPart1MaxWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d0);

        $z0 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean compactByDefault>;

        if $z0 != 0 goto label01;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: void drawBorder(net.sourceforge.plantuml.ugraphic.UGraphic)>(r32);

     label01:
        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(5.0);

        r33 = interfaceinvoke r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r5 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: void drawHighlightsBack(net.sourceforge.plantuml.ugraphic.UGraphic)>($r5);

        $r6 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r7 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightInner(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        virtualinvoke $r6.<net.sourceforge.plantuml.timingdiagram.TimingRuler: void drawVlines(net.sourceforge.plantuml.ugraphic.UGraphic,double)>($r7, $d1);

        z4 = 1;

        $r8 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        r34 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label02:
        $z5 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label07;

        $r15 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (net.sourceforge.plantuml.timingdiagram.Player) $r15;

        $r16 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UTranslate getUTranslateForPlayer(net.sourceforge.plantuml.timingdiagram.Player,net.sourceforge.plantuml.graphic.StringBounder)>(r35, r2);

        r17 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        d2 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightForCaptions(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        if z4 == 0 goto label04;

        $z3 = virtualinvoke r35.<net.sourceforge.plantuml.timingdiagram.Player: boolean isCompact()>();

        if $z3 != 0 goto label03;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: void drawHorizontalSeparator(net.sourceforge.plantuml.ugraphic.UGraphic)>(r17);

     label03:
        $r27 = virtualinvoke r35.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.graphic.TextBlock getPart1(double,double)>(d0, d2);

        interfaceinvoke $r27.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r17);

        $r28 = virtualinvoke r35.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.graphic.UDrawable getPart2()>();

        $r29 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        $r30 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d2);

        $r31 = interfaceinvoke $r29.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r30);

        interfaceinvoke $r28.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r31);

        goto label06;

     label04:
        $z2 = virtualinvoke r35.<net.sourceforge.plantuml.timingdiagram.Player: boolean isCompact()>();

        if $z2 != 0 goto label05;

        $r25 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d2);

        $r26 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r25);

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: void drawHorizontalSeparator(net.sourceforge.plantuml.ugraphic.UGraphic)>($r26);

     label05:
        $r18 = virtualinvoke r35.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.graphic.TextBlock getPart1(double,double)>(d0, 0.0);

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d2);

        $r20 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke $r18.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r20);

        $r21 = virtualinvoke r35.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.graphic.UDrawable getPart2()>();

        $r22 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        $r23 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d2);

        $r24 = interfaceinvoke $r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r23);

        interfaceinvoke $r21.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r24);

     label06:
        z4 = 0;

        goto label02;

     label07:
        r36 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        $z1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean drawTimeAxis>;

        if $z1 == 0 goto label08;

        $r12 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r13 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UTranslate getLastTranslate(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r14 = interfaceinvoke r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        virtualinvoke $r12.<net.sourceforge.plantuml.timingdiagram.TimingRuler: void drawTimeAxis(net.sourceforge.plantuml.ugraphic.UGraphic)>($r14);

     label08:
        $r10 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.List messages>;

        r37 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z6 = interfaceinvoke r37.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label10;

        $r11 = interfaceinvoke r37.<java.util.Iterator: java.lang.Object next()>();

        r38 = (net.sourceforge.plantuml.timingdiagram.TimeMessage) $r11;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: void drawMessages(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.timingdiagram.TimeMessage)>(r36, r38);

        goto label09;

     label10:
        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: void drawHighlightsLines(net.sourceforge.plantuml.ugraphic.UGraphic)>(r36);

        return;
    }

    private void drawHorizontalSeparator(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        double $d0;
        net.sourceforge.plantuml.ugraphic.ULine $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6, r7, r8, r9;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.color.HColor black()>();

        r7 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r3 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UStroke getBorderStroke()>();

        r8 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(-5.0);

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $d0 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getWidthTotal(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d0);

        interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        return;
    }

    private void drawBorder(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r7;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.ULine r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, $r8, r9, r10;
        net.sourceforge.plantuml.ugraphic.UStroke $r6;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r9 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UTranslate getLastTranslate(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d0);

        $r4 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.color.HColor black()>();

        $r5 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r6 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UStroke getBorderStroke()>();

        r10 = interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r3);

        $d1 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getWidthTotal(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d1);

        $r8 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r3);

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UStroke getBorderStroke()
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.style.StyleBuilder $r2;
        net.sourceforge.plantuml.style.Style $r3;
        net.sourceforge.plantuml.ugraphic.UStroke $r4;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r2);

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        return $r4;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getLastTranslate(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r3, $r4;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UTranslate getUTranslateForPlayer(net.sourceforge.plantuml.timingdiagram.Player,net.sourceforge.plantuml.graphic.StringBounder)>(null, r1);

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightForCaptions(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r3);

        return $r4;
    }

    private void drawHighlightsBack(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        double d0;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.timingdiagram.Highlight r6;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r7;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightInner(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.List highlights>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.timingdiagram.Highlight) $r5;

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.Highlight: void drawHighlightsBack(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.timingdiagram.TimingRuler,double)>(r1, $r7, d0);

        goto label1;

     label2:
        return;
    }

    private void drawHighlightsLines(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r13;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        double d0, d1, $d2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.timingdiagram.Highlight r6;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r7, $r8;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r9;
        net.sourceforge.plantuml.ISkinParam $r10;
        net.sourceforge.plantuml.graphic.TextBlock $r11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r12;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightInner(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.List highlights>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.timingdiagram.Highlight) $r5;

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.Highlight: void drawHighlightsLines(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.timingdiagram.TimingRuler,double)>(r1, $r7, d0);

        $r8 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $r9 = virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.timingdiagram.TimeTick getTickFrom()>();

        d1 = virtualinvoke $r8.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getPosInPixel(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r9);

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r11 = virtualinvoke r6.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.graphic.TextBlock getCaption(net.sourceforge.plantuml.ISkinParam)>($r10);

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d2 = d1 + 3.0;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d2, 2.0);

        $r13 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r11.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r13);

        goto label1;

     label2:
        return;
    }

    private double getHeightTotal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightInner(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d1 = virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = $d0 + $d1;

        return $d2;
    }

    private double getHeightInner(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UTranslate getLastTranslate(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        return $d0;
    }

    private double getHeightForCaptions(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.Highlight r4;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.graphic.TextBlock r6;
        net.sourceforge.plantuml.graphic.StringBounder r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r8;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r7 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.List highlights>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.timingdiagram.Highlight) $r3;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r6 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.Highlight: net.sourceforge.plantuml.graphic.TextBlock getCaption(net.sourceforge.plantuml.ISkinParam)>($r5);

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        $d0 = virtualinvoke $r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    private double getWidthTotal(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getPart1MaxWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $d1 = virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingRuler: double getWidth()>();

        $d2 = $d0 + $d1;

        $d3 = $d2 + 5.0;

        $d4 = $d3 + 5.0;

        return $d4;
    }

    private double getPart1MaxWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r4;
        net.sourceforge.plantuml.timingdiagram.Player r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6;
        net.sourceforge.plantuml.graphic.StringBounder r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r8;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r7 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.timingdiagram.Player) $r4;

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.graphic.TextBlock getPart1(double,double)>(0.0, 0.0);

        $r8 = interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        $d0 = virtualinvoke $r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    private void drawMessages(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.timingdiagram.TimeMessage)
    {
        net.sourceforge.plantuml.timingdiagram.TimeMessage r0;
        net.sourceforge.plantuml.timingdiagram.Player r1, r2;
        net.sourceforge.plantuml.ugraphic.UGraphic r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r7, r8, $r9, $r10, r11;
        double $d0, $d1;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r12, $r14;
        net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint r13, r15, $r16, $r17;
        net.sourceforge.plantuml.cucadiagram.Display $r18;
        net.sourceforge.plantuml.ISkinParam $r19;
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow r20;

        r5 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeMessage;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeMessage: net.sourceforge.plantuml.timingdiagram.Player getPlayer1()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeMessage: net.sourceforge.plantuml.timingdiagram.Player getPlayer2()>();

        r4 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r6 = specialinvoke r5.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UTranslate getUTranslateForPlayer(net.sourceforge.plantuml.timingdiagram.Player,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r4);

        $d0 = specialinvoke r5.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightForCaptions(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r7);

        $r9 = specialinvoke r5.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ugraphic.UTranslate getUTranslateForPlayer(net.sourceforge.plantuml.timingdiagram.Player,net.sourceforge.plantuml.graphic.StringBounder)>(r2, r4);

        $d1 = specialinvoke r5.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightForCaptions(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d1);

        r11 = virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r10);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeMessage: net.sourceforge.plantuml.timingdiagram.TimeTick getTick1()>();

        r13 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint getTimeProjection(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.timingdiagram.TimeTick)>(r4, $r12);

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeMessage: net.sourceforge.plantuml.timingdiagram.TimeTick getTick2()>();

        r15 = virtualinvoke r2.<net.sourceforge.plantuml.timingdiagram.Player: net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint getTimeProjection(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.timingdiagram.TimeTick)>(r4, $r14);

        if r13 == null goto label1;

        if r15 != null goto label2;

     label1:
        return;

     label2:
        $r16 = virtualinvoke r13.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint translated(net.sourceforge.plantuml.ugraphic.UTranslate)>(r8);

        $r17 = virtualinvoke r15.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint translated(net.sourceforge.plantuml.ugraphic.UTranslate)>(r11);

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeMessage: net.sourceforge.plantuml.cucadiagram.Display getLabel()>();

        $r19 = virtualinvoke r5.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r20 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow create(net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint,net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.cucadiagram.WithLinkType)>($r16, $r17, $r18, $r19, r0);

        virtualinvoke r20.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r3);

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getUTranslateForPlayer(net.sourceforge.plantuml.timingdiagram.Player, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator r3;
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.Player r4, r8;
        java.lang.IllegalArgumentException $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r10;
        java.lang.Object $r7;
        net.sourceforge.plantuml.graphic.StringBounder r9;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r4 := @parameter0: net.sourceforge.plantuml.timingdiagram.Player;

        r9 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.timingdiagram.Player) $r7;

        if r4 != r8 goto label2;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d1);

        return $r10;

     label2:
        $d0 = virtualinvoke r8.<net.sourceforge.plantuml.timingdiagram.Player: double getFullHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r9);

        d1 = d1 + $d0;

        goto label1;

     label3:
        if r4 != null goto label4;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d1);

        return $r6;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult createRobustConcise(java.lang.String, java.lang.String, net.sourceforge.plantuml.timingdiagram.TimingStyle, boolean)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise $r0;
        net.sourceforge.plantuml.timingdiagram.TimingStyle r1;
        java.lang.String r2, r7;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r3;
        net.sourceforge.plantuml.ISkinParam $r4;
        boolean $z0, z1, $z2;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r5;
        java.util.Map $r8;
        net.sourceforge.plantuml.command.CommandExecutionResult $r10;

        r3 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r7 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: net.sourceforge.plantuml.timingdiagram.TimingStyle;

        z1 := @parameter3: boolean;

        $r0 = new net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r5 = r3.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $z0 = r3.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean compactByDefault>;

        if $z0 != 0 goto label1;

        if z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise: void <init>(net.sourceforge.plantuml.timingdiagram.TimingStyle,java.lang.String,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.timingdiagram.TimingRuler,boolean)>(r1, r2, $r4, $r5, $z2);

        $r8 = r3.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r0);

        r3.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.Player lastPlayer> = $r0;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r10;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult createClock(java.lang.String, java.lang.String, int, int, int, boolean)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerClock $r0;
        java.lang.String r1, r6;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        int i0, i1, i2;
        boolean $z0, z1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r4, $r15;
        java.util.Map $r7, $r9;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r11;
        java.math.BigDecimal $r12;
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r13;
        net.sourceforge.plantuml.command.CommandExecutionResult $r16;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z1 := @parameter5: boolean;

        $r0 = new net.sourceforge.plantuml.timingdiagram.PlayerClock;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r4 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $z0 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean compactByDefault>;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.PlayerClock: void <init>(java.lang.String,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.timingdiagram.TimingRuler,int,int,int,boolean)>(r1, $r3, $r4, i0, i1, i2, $z0);

        $r7 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r0);

        $r9 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map clocks>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r0);

        $r11 = new net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r12 = new java.math.BigDecimal;

        specialinvoke $r12.<java.math.BigDecimal: void <init>(int)>(i0);

        $r13 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DECIMAL>;

        specialinvoke $r11.<net.sourceforge.plantuml.timingdiagram.TimeTick: void <init>(java.math.BigDecimal,net.sourceforge.plantuml.timingdiagram.TimingFormat)>($r12, $r13);

        $r15 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        virtualinvoke $r15.<net.sourceforge.plantuml.timingdiagram.TimingRuler: void addTime(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r11);

        $r16 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r16;
    }

    public net.sourceforge.plantuml.timingdiagram.PlayerAnalog createAnalog(java.lang.String, java.lang.String, boolean)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerAnalog $r0;
        java.lang.String r1, r6;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        boolean $z0, z1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r4;
        java.util.Map $r7;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r0 = new net.sourceforge.plantuml.timingdiagram.PlayerAnalog;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r4 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $z0 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean compactByDefault>;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.PlayerAnalog: void <init>(java.lang.String,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.timingdiagram.TimingRuler,boolean)>(r1, $r3, $r4, $z0);

        $r7 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r0);

        return $r0;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult createBinary(java.lang.String, java.lang.String, boolean)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerBinary $r0;
        java.lang.String r1, r6;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        boolean $z0, z1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r4;
        java.util.Map $r7;
        net.sourceforge.plantuml.command.CommandExecutionResult $r9;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $r0 = new net.sourceforge.plantuml.timingdiagram.PlayerBinary;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r4 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        $z0 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean compactByDefault>;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.PlayerBinary: void <init>(java.lang.String,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.timingdiagram.TimingRuler,boolean)>(r1, $r3, $r4, $z0);

        $r7 = r2.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r0);

        $r9 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r9;
    }

    public net.sourceforge.plantuml.timingdiagram.TimeMessage createTimeMessage(net.sourceforge.plantuml.timingdiagram.Player, net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.timingdiagram.Player, net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String)
    {
        net.sourceforge.plantuml.timingdiagram.TimeMessage $r0;
        net.sourceforge.plantuml.timingdiagram.TickInPlayer $r1, $r4;
        net.sourceforge.plantuml.timingdiagram.Player r2, r5;
        net.sourceforge.plantuml.timingdiagram.TimeTick r3, r6;
        java.lang.String r7;
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r8;
        net.sourceforge.plantuml.ISkinParam $r9;
        java.util.List $r11;

        r8 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r2 := @parameter0: net.sourceforge.plantuml.timingdiagram.Player;

        r3 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r5 := @parameter2: net.sourceforge.plantuml.timingdiagram.Player;

        r6 := @parameter3: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r7 := @parameter4: java.lang.String;

        $r0 = new net.sourceforge.plantuml.timingdiagram.TimeMessage;

        $r1 = new net.sourceforge.plantuml.timingdiagram.TickInPlayer;

        specialinvoke $r1.<net.sourceforge.plantuml.timingdiagram.TickInPlayer: void <init>(net.sourceforge.plantuml.timingdiagram.Player,net.sourceforge.plantuml.timingdiagram.TimeTick)>(r2, r3);

        $r4 = new net.sourceforge.plantuml.timingdiagram.TickInPlayer;

        specialinvoke $r4.<net.sourceforge.plantuml.timingdiagram.TickInPlayer: void <init>(net.sourceforge.plantuml.timingdiagram.Player,net.sourceforge.plantuml.timingdiagram.TimeTick)>(r5, r6);

        $r9 = virtualinvoke r8.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.TimeMessage: void <init>(net.sourceforge.plantuml.timingdiagram.TickInPlayer,net.sourceforge.plantuml.timingdiagram.TickInPlayer,java.lang.String,net.sourceforge.plantuml.ISkinParam)>($r1, $r4, r7, $r9);

        $r11 = r8.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.List messages>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r0);

        return $r0;
    }

    public void addTime(net.sourceforge.plantuml.timingdiagram.TimeTick, java.lang.String)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick r1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r2;
        java.lang.String r3;
        java.util.Map $r4;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r3 := @parameter1: java.lang.String;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimeTick now> = r1;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingRuler: void addTime(net.sourceforge.plantuml.timingdiagram.TimeTick)>(r1);

        if r3 == null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map codes>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r1);

     label1:
        return;
    }

    public net.sourceforge.plantuml.timingdiagram.TimeTick getCodeValue(java.lang.String)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r4;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map codes>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (net.sourceforge.plantuml.timingdiagram.TimeTick) $r3;

        return $r4;
    }

    public void updateNow(net.sourceforge.plantuml.timingdiagram.TimeTick)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimeTick now> = r1;

        return;
    }

    public net.sourceforge.plantuml.timingdiagram.Player getPlayer(java.lang.String)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.Player $r4;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map players>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (net.sourceforge.plantuml.timingdiagram.Player) $r3;

        return $r4;
    }

    public net.sourceforge.plantuml.timingdiagram.TimeTick getNow()
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimeTick now>;

        return $r1;
    }

    public net.sourceforge.plantuml.timingdiagram.TimeTick getClockValue(java.lang.String, int)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.timingdiagram.PlayerClock r4;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r5;
        java.math.BigDecimal $r6;
        int i0, $i1, $i2;
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r7;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.Map clocks>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (net.sourceforge.plantuml.timingdiagram.PlayerClock) $r3;

        if r4 != null goto label1;

        return null;

     label1:
        $r5 = new net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r6 = new java.math.BigDecimal;

        $i1 = virtualinvoke r4.<net.sourceforge.plantuml.timingdiagram.PlayerClock: int getPeriod()>();

        $i2 = i0 * $i1;

        specialinvoke $r6.<java.math.BigDecimal: void <init>(int)>($i2);

        $r7 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DECIMAL>;

        specialinvoke $r5.<net.sourceforge.plantuml.timingdiagram.TimeTick: void <init>(java.math.BigDecimal,net.sourceforge.plantuml.timingdiagram.TimingFormat)>($r6, $r7);

        return $r5;
    }

    public void setLastPlayer(net.sourceforge.plantuml.timingdiagram.Player)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.timingdiagram.Player r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.Player;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.Player lastPlayer> = r1;

        return;
    }

    public net.sourceforge.plantuml.timingdiagram.Player getLastPlayer()
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.timingdiagram.Player $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.Player lastPlayer>;

        return $r1;
    }

    public void scaleInPixels(long, long)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        long l0, l1;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        virtualinvoke $r1.<net.sourceforge.plantuml.timingdiagram.TimingRuler: void scaleInPixels(long,long)>(l0, l1);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult hideTimeAxis()
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean drawTimeAxis> = 0;

        $r1 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r1;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult highlight(net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.timingdiagram.TimeTick, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.timingdiagram.Highlight $r1;
        java.util.List $r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.timingdiagram.TimeTick r4, r5;
        net.sourceforge.plantuml.cucadiagram.Display r6;
        net.sourceforge.plantuml.graphic.color.Colors r7;
        net.sourceforge.plantuml.command.CommandExecutionResult $r8;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r4 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r5 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r6 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r7 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: java.util.List highlights>;

        $r1 = new net.sourceforge.plantuml.timingdiagram.Highlight;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r1.<net.sourceforge.plantuml.timingdiagram.Highlight: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.timingdiagram.TimeTick,net.sourceforge.plantuml.timingdiagram.TimeTick,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.color.Colors)>($r3, r4, r5, r6, r7);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        $r8 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r8;
    }

    public void goCompactMode()
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: boolean compactByDefault> = 1;

        return;
    }

    static void access$000(net.sourceforge.plantuml.timingdiagram.TimingDiagram, net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    static double access$100(net.sourceforge.plantuml.timingdiagram.TimingDiagram, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getPart1MaxWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    static net.sourceforge.plantuml.timingdiagram.TimingRuler access$200(net.sourceforge.plantuml.timingdiagram.TimingDiagram)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.timingdiagram.TimingRuler $r1;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: net.sourceforge.plantuml.timingdiagram.TimingRuler ruler>;

        return $r1;
    }

    static double access$300(net.sourceforge.plantuml.timingdiagram.TimingDiagram, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.TimingDiagram r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimingDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingDiagram: double getHeightTotal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.timingdiagram.TimingDiagram: double marginX1> = 5.0;

        return;
    }
}
