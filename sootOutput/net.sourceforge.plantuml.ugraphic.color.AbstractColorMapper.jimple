public abstract class net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.color.ColorMapper
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0;
        net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper r1;
        java.awt.Color r2;
        int $i0;
        java.lang.String $r3;

        r1 := @this: net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r0 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r0);

        $i0 = virtualinvoke r2.<java.awt.Color: int getRGB()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String sharp000000(int)>($i0);

        return $r3;
    }

    public final java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper r0;
        java.awt.Color r1;
        int i0, $i1, $i2;
        java.lang.StringBuilder $r2, $r3, $r6, $r7, $r9, $r10;
        java.lang.String $r4, $r5, $r8, $r11, $r12, r15, r16;
        net.sourceforge.plantuml.ugraphic.color.HColorBackground $r13;
        net.sourceforge.plantuml.ugraphic.color.HColor r14;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r14 != null goto label1;

        return "none";

     label1:
        $z0 = r14 instanceof net.sourceforge.plantuml.ugraphic.color.HColorBackground;

        if $z0 == 0 goto label2;

        $r13 = (net.sourceforge.plantuml.ugraphic.color.HColorBackground) r14;

        r14 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.color.HColorBackground: net.sourceforge.plantuml.ugraphic.color.HColor getBack()>();

     label2:
        $z1 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: boolean isTransparent(net.sourceforge.plantuml.ugraphic.color.HColor)>(r14);

        if $z1 == 0 goto label3;

        return "#00000000";

     label3:
        r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r14);

        i0 = virtualinvoke r1.<java.awt.Color: int getAlpha()>();

        if i0 != 255 goto label4;

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>(r14);

        return $r12;

     label4:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String toUpperCase()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        r15 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $i1 = virtualinvoke r15.<java.lang.String: int length()>();

        $i2 = $i1 - 2;

        r16 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i2);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>(r14);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    private static java.lang.String sharpAlpha(int)
    {
        int i0, i1, $i2, $i3, $i6, i7;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r9, $r11, $r12, $r13, $r15;
        java.lang.String $r2, $r3, $r7, $r8, r10, $r14, $r16, r17, r18;
        long $l4, $l5;

        i0 := @parameter0: int;

        i1 = i0 & 16777215;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00000");

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        r17 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = virtualinvoke r17.<java.lang.String: int length()>();

        $i3 = $i2 - 6;

        r18 = virtualinvoke r17.<java.lang.String: java.lang.String substring(int)>($i3);

        $l4 = (long) i0;

        $l5 = $l4 & 255L;

        $i6 = (int) $l5;

        i7 = $i6 << 24;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i7);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18);

        $r14 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int,int)>(0, 2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }
}
