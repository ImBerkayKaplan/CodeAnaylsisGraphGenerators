public class net.sourceforge.plantuml.logo.PSystemLogoFactory extends net.sourceforge.plantuml.command.PSystemBasicFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.logo.PSystemLogoFactory r0;

        r0 := @this: net.sourceforge.plantuml.logo.PSystemLogoFactory;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemBasicFactory: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.logo.PSystemLogo initDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.logo.PSystemLogoFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        java.lang.String r3;

        r0 := @this: net.sourceforge.plantuml.logo.PSystemLogoFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: java.lang.String;

        return null;
    }

    public net.sourceforge.plantuml.logo.PSystemLogo executeLine(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.logo.PSystemLogo, java.lang.String)
    {
        net.sourceforge.plantuml.logo.PSystemLogo r0, $r2;
        java.lang.String r1;
        boolean $z0;
        net.sourceforge.plantuml.core.UmlSource r3;
        net.sourceforge.plantuml.logo.PSystemLogoFactory r4;
        net.sourceforge.plantuml.api.ThemeStyle r5;

        r4 := @this: net.sourceforge.plantuml.logo.PSystemLogoFactory;

        r5 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r3 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r0 := @parameter2: net.sourceforge.plantuml.logo.PSystemLogo;

        r1 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("logo");

        if $z0 == 0 goto label1;

        $r2 = new net.sourceforge.plantuml.logo.PSystemLogo;

        specialinvoke $r2.<net.sourceforge.plantuml.logo.PSystemLogo: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r3);

        return $r2;

     label1:
        if r0 != null goto label2;

        return null;

     label2:
        virtualinvoke r0.<net.sourceforge.plantuml.logo.PSystemLogo: void doCommandLine(java.lang.String)>(r1);

        return r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem initDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.logo.PSystemLogoFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        java.lang.String r3;
        net.sourceforge.plantuml.logo.PSystemLogo $r4;

        r0 := @this: net.sourceforge.plantuml.logo.PSystemLogoFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: java.lang.String;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.logo.PSystemLogoFactory: net.sourceforge.plantuml.logo.PSystemLogo initDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,java.lang.String)>(r1, r2, r3);

        return $r4;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem executeLine(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.AbstractPSystem, java.lang.String)
    {
        net.sourceforge.plantuml.logo.PSystemLogoFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.AbstractPSystem r3;
        java.lang.String r4;
        net.sourceforge.plantuml.logo.PSystemLogo $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.logo.PSystemLogoFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.AbstractPSystem;

        r4 := @parameter3: java.lang.String;

        $r5 = (net.sourceforge.plantuml.logo.PSystemLogo) r3;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.logo.PSystemLogoFactory: net.sourceforge.plantuml.logo.PSystemLogo executeLine(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.logo.PSystemLogo,java.lang.String)>(r1, r2, $r5, r4);

        return $r6;
    }
}
