class ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$EdgeXingComparator extends java.lang.Object implements java.util.Comparator
{

    private void <init>()
    {
        ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$EdgeXingComparator r0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$EdgeXingComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r2;
        ext.plantuml.com.ctreber.acearth.util.EdgeCrossing r1, r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9;
        java.lang.RuntimeException $r4;
        ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$EdgeXingComparator r5;

        r5 := @this: ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$EdgeXingComparator;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r1 = (ext.plantuml.com.ctreber.acearth.util.EdgeCrossing) r0;

        r3 = (ext.plantuml.com.ctreber.acearth.util.EdgeCrossing) r2;

        $d0 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getAngle()>();

        $d1 = virtualinvoke r3.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getAngle()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label01;

        return -1;

     label01:
        $d2 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getAngle()>();

        $d3 = virtualinvoke r3.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getAngle()>();

        $b1 = $d2 cmpl $d3;

        if $b1 <= 0 goto label02;

        return 1;

     label02:
        $d4 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getAngle()>();

        $b2 = $d4 cmpl 0.0;

        if $b2 != 0 goto label06;

        $d10 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getY()>();

        $d11 = virtualinvoke r3.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getY()>();

        $b6 = $d10 cmpg $d11;

        if $b6 >= 0 goto label03;

        $b8 = -1;

        goto label05;

     label03:
        $d12 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getY()>();

        $d13 = virtualinvoke r3.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getY()>();

        $b7 = $d12 cmpl $d13;

        if $b7 <= 0 goto label04;

        $b8 = 1;

        goto label05;

     label04:
        $b8 = 0;

     label05:
        return $b8;

     label06:
        $d5 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getAngle()>();

        $b3 = $d5 cmpl 2.0;

        if $b3 != 0 goto label10;

        $d6 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getY()>();

        $d7 = virtualinvoke r3.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getY()>();

        $b4 = $d6 cmpl $d7;

        if $b4 <= 0 goto label07;

        $b9 = -1;

        goto label09;

     label07:
        $d8 = virtualinvoke r1.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getY()>();

        $d9 = virtualinvoke r3.<ext.plantuml.com.ctreber.acearth.util.EdgeCrossing: double getY()>();

        $b5 = $d8 cmpg $d9;

        if $b5 >= 0 goto label08;

        $b9 = 1;

        goto label09;

     label08:
        $b9 = 0;

     label09:
        return $b9;

     label10:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("No result");

        throw $r4;
    }

    void <init>(ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$1)
    {
        ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$EdgeXingComparator r0;
        ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$1 r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$EdgeXingComparator;

        r1 := @parameter0: ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$1;

        specialinvoke r0.<ext.plantuml.com.ctreber.acearth.scanbit.BitGeneratorMapDefault$EdgeXingComparator: void <init>()>();

        return;
    }
}
