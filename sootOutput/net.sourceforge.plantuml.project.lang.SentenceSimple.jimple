public abstract class net.sourceforge.plantuml.project.lang.SentenceSimple extends java.lang.Object implements net.sourceforge.plantuml.project.lang.Sentence
{
    protected final net.sourceforge.plantuml.project.lang.Subject subjectii;
    private final net.sourceforge.plantuml.command.regex.IRegex verb;
    protected final net.sourceforge.plantuml.project.lang.Something complementii;

    public void <init>(net.sourceforge.plantuml.project.lang.Subject, net.sourceforge.plantuml.command.regex.IRegex, net.sourceforge.plantuml.project.lang.Something)
    {
        net.sourceforge.plantuml.project.lang.SentenceSimple r0;
        net.sourceforge.plantuml.project.lang.Subject r1;
        net.sourceforge.plantuml.command.regex.IRegex r2;
        net.sourceforge.plantuml.project.lang.Something r3;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceSimple;

        r1 := @parameter0: net.sourceforge.plantuml.project.lang.Subject;

        r2 := @parameter1: net.sourceforge.plantuml.command.regex.IRegex;

        r3 := @parameter2: net.sourceforge.plantuml.project.lang.Something;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Subject subjectii> = r1;

        r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.regex.IRegex verb> = r2;

        r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Something complementii> = r3;

        return;
    }

    public final net.sourceforge.plantuml.command.regex.IRegex toRegex()
    {
        net.sourceforge.plantuml.project.lang.SentenceSimple r0;
        net.sourceforge.plantuml.project.lang.Something $r1, $r10;
        boolean $z0;
        net.sourceforge.plantuml.command.regex.RegexConcat $r2, $r13;
        net.sourceforge.plantuml.command.regex.IRegex[] $r3, $r14;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r4, $r7, $r9, $r12, $r15, $r18, $r20;
        net.sourceforge.plantuml.project.lang.Subject $r5, $r16;
        net.sourceforge.plantuml.command.regex.IRegex $r6, $r8, $r11, $r17, $r19;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceSimple;

        $r1 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Something complementii>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.project.lang.ComplementEmpty;

        if $z0 == 0 goto label1;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r14 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r14[0] = $r15;

        $r16 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Subject subjectii>;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.project.lang.Subject: net.sourceforge.plantuml.command.regex.IRegex toRegex()>();

        $r14[1] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r14[2] = $r18;

        $r19 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.regex.IRegex verb>;

        $r14[3] = $r19;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r14[4] = $r20;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r14);

        return $r13;

     label1:
        $r2 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r3 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[7];

        $r4 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r3[0] = $r4;

        $r5 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Subject subjectii>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.project.lang.Subject: net.sourceforge.plantuml.command.regex.IRegex toRegex()>();

        $r3[1] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r3[2] = $r7;

        $r8 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.regex.IRegex verb>;

        $r3[3] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r3[4] = $r9;

        $r10 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Something complementii>;

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.command.regex.IRegex toRegex(java.lang.String)>("0");

        $r3[5] = $r11;

        $r12 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r3[6] = $r12;

        specialinvoke $r2.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r3);

        return $r2;
    }

    public final net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.project.lang.SentenceSimple r0;
        net.sourceforge.plantuml.project.GanttDiagram r1;
        net.sourceforge.plantuml.command.regex.RegexResult r2;
        net.sourceforge.plantuml.project.lang.Subject $r3;
        net.sourceforge.plantuml.project.Failable r4, r6;
        boolean $z0, $z1;
        net.sourceforge.plantuml.project.lang.Something $r5;
        java.lang.Object $r7, $r8;
        net.sourceforge.plantuml.command.CommandExecutionResult $r9, $r11, $r13;
        java.lang.String $r10, $r12;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceSimple;

        r1 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r2 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $r3 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Subject subjectii>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.lang.Subject: net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r1, r2);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.project.Failable: boolean isFail()>();

        if $z0 == 0 goto label1;

        $r12 = virtualinvoke r4.<net.sourceforge.plantuml.project.Failable: java.lang.String getError()>();

        $r13 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r12);

        return $r13;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.project.lang.Something complementii>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.project.lang.Something: net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>(r1, r2, "0");

        $z1 = virtualinvoke r6.<net.sourceforge.plantuml.project.Failable: boolean isFail()>();

        if $z1 == 0 goto label2;

        $r10 = virtualinvoke r6.<net.sourceforge.plantuml.project.Failable: java.lang.String getError()>();

        $r11 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r10);

        return $r11;

     label2:
        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.project.Failable: java.lang.Object get()>();

        $r8 = virtualinvoke r6.<net.sourceforge.plantuml.project.Failable: java.lang.Object get()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram,java.lang.Object,java.lang.Object)>(r1, $r7, $r8);

        return $r9;
    }

    public abstract net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram, java.lang.Object, java.lang.Object);

    public final java.lang.String getVerbPattern()
    {
        net.sourceforge.plantuml.project.lang.SentenceSimple r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceSimple;

        $r1 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.regex.IRegex verb>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.command.regex.IRegex: java.lang.String getPattern()>();

        return $r2;
    }

    public net.sourceforge.plantuml.command.regex.IRegex getVerbRegex()
    {
        net.sourceforge.plantuml.project.lang.SentenceSimple r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceSimple;

        $r1 = r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: net.sourceforge.plantuml.command.regex.IRegex verb>;

        return $r1;
    }
}
