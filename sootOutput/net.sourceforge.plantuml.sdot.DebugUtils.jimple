public class net.sourceforge.plantuml.sdot.DebugUtils extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.sdot.DebugUtils r0;

        r0 := @this: net.sourceforge.plantuml.sdot.DebugUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void printDebugEdge(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agrec_s $r1;
        smetana.core.__ptr__ $r2;
        h.ST_Agedgeinfo_t r3;
        h.ST_splines r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r14, $r16, $r19, $r21, $r23, $r26, $r28, $r30, $r33;
        java.io.PrintStream $r6, $r15, $r22, $r29;
        int $i0;
        java.lang.String $r9, $r18, $r20, $r25, $r27, $r32, $r34;
        smetana.core.CArray $r10;
        java.lang.Object $r11;
        h.ST_bezier $r12;
        h.ST_textlabel_t r13;
        h.ST_pointf $r17, $r24, $r31;

        r0 := @parameter0: h.ST_Agedge_s;

        $r1 = staticinvoke <smetana.core.Macro: h.ST_Agrec_s AGDATA(h.ST_Agobj_s)>(r0);

        $r2 = virtualinvoke $r1.<h.ST_Agrec_s: smetana.core.__ptr__ castTo(java.lang.Class)>(class "Lh/ST_Agedgeinfo_t;");

        r3 = (h.ST_Agedgeinfo_t) $r2;

        r4 = r3.<h.ST_Agedgeinfo_t: h.ST_splines spl>;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splines.size=");

        $i0 = r4.<h.ST_splines: int size>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = r4.<h.ST_splines: smetana.core.CArray list>;

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r12 = (h.ST_bezier) $r11;

        staticinvoke <net.sourceforge.plantuml.sdot.DebugUtils: void printDebugBezier(h.ST_bezier)>($r12);

        r13 = r3.<h.ST_Agedgeinfo_t: h.ST_textlabel_t label>;

        if r13 == null goto label1;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LABEL dimen=");

        $r17 = r13.<h.ST_textlabel_t: h.ST_pointf dimen>;

        $r18 = staticinvoke <net.sourceforge.plantuml.sdot.DebugUtils: java.lang.String pointftoString(h.ST_pointf)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r22 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LABEL space=");

        $r24 = r13.<h.ST_textlabel_t: h.ST_pointf space>;

        $r25 = staticinvoke <net.sourceforge.plantuml.sdot.DebugUtils: java.lang.String pointftoString(h.ST_pointf)>($r24);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $r29 = <java.lang.System: java.io.PrintStream err>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LABEL pos=");

        $r31 = r13.<h.ST_textlabel_t: h.ST_pointf pos>;

        $r32 = staticinvoke <net.sourceforge.plantuml.sdot.DebugUtils: java.lang.String pointftoString(h.ST_pointf)>($r31);

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r34);

     label1:
        return;
    }

    public static void printDebugBezier(h.ST_bezier)
    {
        java.lang.StringBuilder $r0, $r2, $r4, $r6, $r8, $r9, $r11, $r13, $r14, $r16, $r18, $r21, $r23, $r25, $r28, $r33, $r35, $r37;
        java.io.PrintStream $r1, $r7, $r12, $r17, $r24, $r34;
        h.ST_bezier r3;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String $r5, $r10, $r15, $r20, $r22, $r27, $r29, $r36, $r38;
        h.ST_pointf $r19, $r26, r32;
        smetana.core.CArray $r30;
        java.lang.Object $r31;

        r3 := @parameter0: h.ST_bezier;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bezier.size=");

        $i0 = r3.<h.ST_bezier: int size>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bezier.sflag=");

        $i1 = r3.<h.ST_bezier: int sflag>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("splines.eflag=");

        $i2 = r3.<h.ST_bezier: int eflag>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

        $r17 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bezier.sp=");

        $r19 = r3.<h.ST_bezier: h.ST_pointf sp>;

        $r20 = staticinvoke <net.sourceforge.plantuml.sdot.DebugUtils: java.lang.String pointftoString(h.ST_pointf)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r22);

        $r24 = <java.lang.System: java.io.PrintStream err>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bezier.ep=");

        $r26 = r3.<h.ST_bezier: h.ST_pointf ep>;

        $r27 = staticinvoke <net.sourceforge.plantuml.sdot.DebugUtils: java.lang.String pointftoString(h.ST_pointf)>($r26);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r29);

        i4 = 0;

     label1:
        $i3 = r3.<h.ST_bezier: int size>;

        if i4 >= $i3 goto label2;

        $r30 = r3.<h.ST_bezier: smetana.core.CArray list>;

        $r31 = virtualinvoke $r30.<smetana.core.CArray: java.lang.Object get__(int)>(i4);

        r32 = (h.ST_pointf) $r31;

        $r34 = <java.lang.System: java.io.PrintStream err>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pt=");

        $r36 = staticinvoke <net.sourceforge.plantuml.sdot.DebugUtils: java.lang.String pointftoString(h.ST_pointf)>(r32);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r38);

        i4 = i4 + 1;

        goto label1;

     label2:
        return;
    }

    public static void printDebugNode(h.ST_Agnode_s)
    {
        java.io.PrintStream $r0, $r6, $r11, $r16, $r21, $r26, $r31;
        h.ST_Agnode_s r1;
        h.ST_Agrec_s $r2;
        smetana.core.__ptr__ $r3;
        h.ST_Agnodeinfo_t r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r10, $r12, $r13, $r15, $r17, $r18, $r20, $r22, $r23, $r25, $r27, $r28, $r30, $r32, $r35;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.String $r9, $r14, $r19, $r24, $r29, $r34, $r36;
        h.ST_pointf $r33;

        r1 := @parameter0: h.ST_Agnode_s;

        $r0 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("*********** PRINT NODE ********** ");

        $r2 = staticinvoke <smetana.core.Macro: h.ST_Agrec_s AGDATA(h.ST_Agobj_s)>(r1);

        $r3 = virtualinvoke $r2.<h.ST_Agrec_s: smetana.core.__ptr__ castTo(java.lang.Class)>(class "Lh/ST_Agnodeinfo_t;");

        r4 = (h.ST_Agnodeinfo_t) $r3;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=");

        $d0 = r4.<h.ST_Agnodeinfo_t: double width>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r11 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height=");

        $d1 = r4.<h.ST_Agnodeinfo_t: double height>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r16 = <java.lang.System: java.io.PrintStream err>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ht=");

        $d2 = r4.<h.ST_Agnodeinfo_t: double ht>;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lw=");

        $d3 = r4.<h.ST_Agnodeinfo_t: double lw>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

        $r26 = <java.lang.System: java.io.PrintStream err>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("rw=");

        $d4 = r4.<h.ST_Agnodeinfo_t: double rw>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r31 = <java.lang.System: java.io.PrintStream err>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("coord=");

        $r33 = r4.<h.ST_Agnodeinfo_t: h.ST_pointf coord>;

        $r34 = staticinvoke <net.sourceforge.plantuml.sdot.DebugUtils: java.lang.String pointftoString(h.ST_pointf)>($r33);

        $r35 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r36);

        return;
    }

    public static java.lang.String pointftoString(h.ST_pointf)
    {
        java.lang.StringBuilder $r0;
        h.ST_pointf r3;
        double $d0, $d1;
        java.lang.String $r8;

        r3 := @parameter0: h.ST_pointf;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $d0 = r3.<h.ST_pointf: double x>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; ");

        $d1 = r3.<h.ST_pointf: double y>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }
}
