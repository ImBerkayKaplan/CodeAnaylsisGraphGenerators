public class net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 extends java.lang.Object implements net.sourceforge.plantuml.sequencediagram.graphic.FileMaker
{
    private final net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram;
    private final net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet drawableSet;
    private final net.sourceforge.plantuml.awt.geom.Dimension2D fullDimension;
    private final java.util.List pages;
    private final net.sourceforge.plantuml.FileFormatOption fileFormatOption;
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;

    public void <init>(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, net.sourceforge.plantuml.skin.rose.Rose, net.sourceforge.plantuml.FileFormatOption)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r1;
        net.sourceforge.plantuml.FileFormatOption r2;
        net.sourceforge.plantuml.ISkinParam $r3, $r7;
        net.sourceforge.plantuml.graphic.StringBounder $r4, $r11, $r26;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer $r5;
        net.sourceforge.plantuml.skin.rose.Rose r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int $i0;
        double $d0, $d1;
        java.util.Collection $r9, $r15;
        java.util.List $r10, $r23;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r12, $r14, $r16, $r19;
        java.util.ArrayList $r13;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r17;
        java.util.LinkedHashMap $r18;
        net.sourceforge.plantuml.cucadiagram.DisplayPositionned $r20;
        net.sourceforge.plantuml.cucadiagram.Display $r21;
        net.sourceforge.plantuml.sequencediagram.graphic.PageSplitter $r22;
        java.lang.Object $r24, $r29, $r31, $r32;
        net.sourceforge.plantuml.sequencediagram.Newpage r25, $r30;
        java.lang.Double $r27;
        net.sourceforge.plantuml.sequencediagram.ParticipantEnglober $r33;
        java.util.Iterator r34, r36, r39, r42;
        net.sourceforge.plantuml.sequencediagram.Participant r35;
        net.sourceforge.plantuml.sequencediagram.Event r37, r40;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r6 := @parameter1: net.sourceforge.plantuml.skin.rose.Rose;

        r2 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram> = r1;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder(net.sourceforge.plantuml.SvgCharSizeHack)>($r3);

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = $r4;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.FileFormatOption fileFormatOption> = r2;

        $r5 = new net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer;

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $z0 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: boolean isShowFootbox()>();

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: int getAutonewpage()>();

        $d0 = (double) $i0;

        specialinvoke $r5.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer: void <init>(net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,boolean,double)>(r6, $r7, $z0, $d0);

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.util.Collection participants()>();

        r34 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r32 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r35 = (net.sourceforge.plantuml.sequencediagram.Participant) $r32;

        $r33 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.sequencediagram.ParticipantEnglober getEnglober(net.sourceforge.plantuml.sequencediagram.Participant)>(r35);

        virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer: void addParticipant(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.ParticipantEnglober)>(r35, $r33);

        goto label1;

     label2:
        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.util.List events()>();

        r36 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r31 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (net.sourceforge.plantuml.sequencediagram.Event) $r31;

        virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer: void addEvent(net.sourceforge.plantuml.sequencediagram.Event)>(r37);

        goto label3;

     label4:
        $r11 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r12 = virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet createDrawableSet(net.sourceforge.plantuml.graphic.StringBounder)>($r11);

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet drawableSet> = $r12;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r14 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet drawableSet>;

        $r15 = virtualinvoke $r14.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: java.util.Collection getAllEvents()>();

        r39 = interfaceinvoke $r15.<java.util.Collection: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r39.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r29 = interfaceinvoke r39.<java.util.Iterator: java.lang.Object next()>();

        r40 = (net.sourceforge.plantuml.sequencediagram.Event) $r29;

        $z6 = r40 instanceof net.sourceforge.plantuml.sequencediagram.Newpage;

        if $z6 == 0 goto label6;

        $r30 = (net.sourceforge.plantuml.sequencediagram.Newpage) r40;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r30);

     label6:
        goto label5;

     label7:
        $r16 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet drawableSet>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.awt.geom.Dimension2D getDimension()>();

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.awt.geom.Dimension2D fullDimension> = $r17;

        $r18 = new java.util.LinkedHashMap;

        specialinvoke $r18.<java.util.LinkedHashMap: void <init>()>();

        r42 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label8:
        $z4 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label9;

        $r24 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r25 = (net.sourceforge.plantuml.sequencediagram.Newpage) $r24;

        $r26 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $d1 = virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSetInitializer: double getYposition(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.Newpage)>($r26, r25);

        $r27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r25, $r27);

        goto label8;

     label9:
        $r19 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet drawableSet>;

        $z5 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: boolean isShowFootbox()>();

        $r20 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositionned getTitle()>();

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.cucadiagram.DisplayPositionned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r22 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.PageSplitter create(net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet,java.util.Map,boolean,net.sourceforge.plantuml.cucadiagram.Display)>($r19, $r18, $z5, $r21);

        $r23 = virtualinvoke $r22.<net.sourceforge.plantuml.sequencediagram.graphic.PageSplitter: java.util.List getPages()>();

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: java.util.List pages> = $r23;

        return;
    }

    public int getNbPages()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: java.util.List pages>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    private net.sourceforge.plantuml.sequencediagram.graphic.PageSplitter create(net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet, java.util.Map, boolean, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet r0;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r3, $r7;
        double d0, d1, d3, $d4;
        boolean z0;
        net.sourceforge.plantuml.skin.rose.Rose $r4;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.skin.Component $r6;
        net.sourceforge.plantuml.sequencediagram.graphic.PageSplitter $r8;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r9;
        java.util.Map r10;
        net.sourceforge.plantuml.cucadiagram.Display r11;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet;

        r10 := @parameter1: java.util.Map;

        z0 := @parameter2: boolean;

        r11 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        $r2 = r1.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: double getHeadHeight(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r3 = r1.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: double getTailHeight(net.sourceforge.plantuml.graphic.StringBounder,boolean)>($r3, z0);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.skin.rose.Rose getSkin()>();

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.skin.Component createComponentNewPage(net.sourceforge.plantuml.ISkinParam)>($r5);

        $r7 = r1.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        d3 = interfaceinvoke $r6.<net.sourceforge.plantuml.skin.Component: double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)>($r7);

        $r8 = new net.sourceforge.plantuml.sequencediagram.graphic.PageSplitter;

        $r9 = r1.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.awt.geom.Dimension2D fullDimension>;

        $d4 = virtualinvoke $r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r8.<net.sourceforge.plantuml.sequencediagram.graphic.PageSplitter: void <init>(double,double,java.util.Map,double,double,double,net.sourceforge.plantuml.cucadiagram.Display)>($d4, d0, r10, d1, 0.0, d3, r11);

        return $r8;
    }

    public net.sourceforge.plantuml.core.ImageData createOne(java.io.OutputStream, int, boolean) throws java.io.IOException
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.sequencediagram.graphic.Page r3;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5, $r15, r65, r77;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.AnnotatedWorker $r7;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r8, $r9, $r26, $r29, $r38, $r41, $r44, $r47, $r54, $r58, $r61, $r72, $r78, $r82;
        net.sourceforge.plantuml.ISkinParam $r10, $r19, $r23, $r30, $r39, $r45, $r48, $r55, $r59, $r62;
        net.sourceforge.plantuml.graphic.StringBounder $r11, $r14, $r25, $r68, $r71, $r76;
        net.sourceforge.plantuml.graphic.TextBlock r13, $r24, r63, r74;
        net.sourceforge.plantuml.cucadiagram.Display $r16, $r21, $r28, $r43, $r57;
        boolean $z0, $z1, $z2, z3, $z4, $z5;
        net.sourceforge.plantuml.graphic.FontConfiguration $r17;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r18, $r22;
        net.sourceforge.plantuml.FontParam $r20, $r66, $r69;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned $r27, $r42, $r73, $r79;
        java.io.OutputStream r32;
        net.sourceforge.plantuml.style.SName[] $r33, $r49;
        net.sourceforge.plantuml.style.SName $r34, $r35, $r36, $r50, $r51, $r52;
        net.sourceforge.plantuml.style.StyleSignature $r37, $r53;
        net.sourceforge.plantuml.style.StyleBuilder $r40, $r56;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r46, $r60;
        net.sourceforge.plantuml.style.Style r64, r75;
        net.sourceforge.plantuml.png.PngTitler $r67, $r70;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r80;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1 $r81;
        net.sourceforge.plantuml.FileFormatOption $r83;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r84, $r85;
        net.sourceforge.plantuml.core.ImageData $r86;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        r32 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        z3 := @parameter2: boolean;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: java.util.List pages>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (net.sourceforge.plantuml.sequencediagram.graphic.Page) $r2;

        $r4 = new net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea;

        $r5 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.awt.geom.Dimension2D fullDimension>;

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.graphic.Page: double getHeight()>();

        specialinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: void <init>(double,double)>($d0, $d1);

        $r7 = new net.sourceforge.plantuml.AnnotatedWorker;

        $r9 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r8 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r10 = virtualinvoke $r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r11 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        specialinvoke $r7.<net.sourceforge.plantuml.AnnotatedWorker: void <init>(net.sourceforge.plantuml.Annotated,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder)>($r9, $r10, $r11);

        r13 = virtualinvoke $r7.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock getCaption()>();

        $r14 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r15 = interfaceinvoke r13.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r14);

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: void setCaptionArea(net.sourceforge.plantuml.awt.geom.Dimension2D)>($r15);

        $r16 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.graphic.Page: net.sourceforge.plantuml.cucadiagram.Display getTitle()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r16);

        if $z0 == 0 goto label1;

        r63 = null;

        goto label4;

     label1:
        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label2;

        $r49 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r50 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r49[0] = $r50;

        $r51 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r49[1] = $r51;

        $r52 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName title>;

        $r49[2] = $r52;

        $r53 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r49);

        $r54 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r55 = virtualinvoke $r54.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r56 = interfaceinvoke $r55.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r64 = virtualinvoke $r53.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r56);

        $r57 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.graphic.Page: net.sourceforge.plantuml.cucadiagram.Display getTitle()>();

        $r58 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r59 = virtualinvoke $r58.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r60 = interfaceinvoke $r59.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r61 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r62 = virtualinvoke $r61.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r63 = virtualinvoke r64.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.TextBlock createTextBlockBordered(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.ISkinSimple)>($r57, $r60, $r62);

        goto label3;

     label2:
        $r17 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r18 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet drawableSet>;

        $r19 = virtualinvoke $r18.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam TITLE>;

        specialinvoke $r17.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r19, $r20, null);

        $r21 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.graphic.Page: net.sourceforge.plantuml.cucadiagram.Display getTitle()>();

        $r22 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet drawableSet>;

        $r23 = virtualinvoke $r22.<net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r24 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock title(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>($r17, $r21, $r23);

        r63 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double)>($r24, 7.0, 7.0);

     label3:
        $r25 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r65 = interfaceinvoke r63.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r25);

        $d2 = virtualinvoke r65.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r65.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: void setTitleArea(double,double)>($d2, $d3);

     label4:
        $r66 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam FOOTER>;

        $r67 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.png.PngTitler getPngTitler(net.sourceforge.plantuml.FontParam,int)>($r66, i0);

        $r68 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: void initFooter(net.sourceforge.plantuml.png.PngTitler,net.sourceforge.plantuml.graphic.StringBounder)>($r67, $r68);

        $r69 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam HEADER>;

        $r70 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.png.PngTitler getPngTitler(net.sourceforge.plantuml.FontParam,int)>($r69, i0);

        $r71 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: void initHeader(net.sourceforge.plantuml.png.PngTitler,net.sourceforge.plantuml.graphic.StringBounder)>($r70, $r71);

        $r72 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r73 = virtualinvoke $r72.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $z4 = virtualinvoke $r73.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: boolean isNull()>();

        if $z4 == 0 goto label5;

        r74 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        goto label7;

     label5:
        $z2 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z2 == 0 goto label6;

        $r33 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r34 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r33[0] = $r34;

        $r35 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r33[1] = $r35;

        $r36 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName legend>;

        $r33[2] = $r36;

        $r37 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r33);

        $r38 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r39 = virtualinvoke $r38.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r40 = interfaceinvoke $r39.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r75 = virtualinvoke $r37.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r40);

        $r41 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r42 = virtualinvoke $r41.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r43 = virtualinvoke $r42.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r44 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r45 = virtualinvoke $r44.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r46 = interfaceinvoke $r45.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r47 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r48 = virtualinvoke $r47.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r74 = virtualinvoke r75.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.TextBlock createTextBlockBordered(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.ISkinSimple)>($r43, $r46, $r48);

        goto label7;

     label6:
        $r26 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r27 = virtualinvoke $r26.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r28 = virtualinvoke $r27.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r29 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r30 = virtualinvoke $r29.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r74 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.EntityImageLegend: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>($r28, $r30);

     label7:
        $r76 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        r77 = interfaceinvoke r74.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r76);

        $z5 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: boolean isLegendTop()>();

        $r78 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r79 = virtualinvoke $r78.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r80 = virtualinvoke $r79.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: void setLegend(net.sourceforge.plantuml.awt.geom.Dimension2D,boolean,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r77, $z5, $r80);

        $r81 = new net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1;

        specialinvoke $r81.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2$1: void <init>(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2,int,net.sourceforge.plantuml.sequencediagram.graphic.Page,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.AnnotatedWorker,net.sourceforge.plantuml.graphic.TextBlock)>(r0, i0, r3, r63, $r4, r13, $r7, r74);

        $r82 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r83 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.FileFormatOption fileFormatOption>;

        $r84 = virtualinvoke $r82.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>($r83);

        $r85 = virtualinvoke $r84.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r81);

        $r86 = virtualinvoke $r85.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r32);

        return $r86;
    }

    private void drawFooter(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea, net.sourceforge.plantuml.ugraphic.UGraphic, int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        int i0;
        net.sourceforge.plantuml.FontParam $r1;
        net.sourceforge.plantuml.png.PngTitler r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, $r10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea r6;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r7;
        net.sourceforge.plantuml.cucadiagram.DisplaySection $r8;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r9;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        r6 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter2: int;

        $r1 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam FOOTER>;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.png.PngTitler getPngTitler(net.sourceforge.plantuml.FontParam,int)>($r1, i0);

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.graphic.TextBlock getRibbonBlock()>();

        if r3 != null goto label1;

        return;

     label1:
        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r7 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplaySection getFooter()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $d0 = virtualinvoke r6.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getFooterX(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r9);

        $d1 = virtualinvoke r6.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getFooterY()>();

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d0, $d1);

        $r10 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r10);

        return;
    }

    private void drawHeader(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea, net.sourceforge.plantuml.ugraphic.UGraphic, int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        int i0;
        net.sourceforge.plantuml.FontParam $r1;
        net.sourceforge.plantuml.png.PngTitler r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, $r10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea r6;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r7;
        net.sourceforge.plantuml.cucadiagram.DisplaySection $r8;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r9;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        r6 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter2: int;

        $r1 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam HEADER>;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.png.PngTitler getPngTitler(net.sourceforge.plantuml.FontParam,int)>($r1, i0);

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.graphic.TextBlock getRibbonBlock()>();

        if r3 != null goto label1;

        return;

     label1:
        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r7 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplaySection getHeader()>();

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $d0 = virtualinvoke r6.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getHeaderX(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r9);

        $d1 = virtualinvoke r6.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea: double getHeaderY()>();

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d0, $d1);

        $r10 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r10);

        return;
    }

    private net.sourceforge.plantuml.png.PngTitler getPngTitler(net.sourceforge.plantuml.FontParam, int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r1, $r12;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r6;
        net.sourceforge.plantuml.FontParam[] $r4, $r7, $r10;
        net.sourceforge.plantuml.FontParam r5;
        net.sourceforge.plantuml.ugraphic.UFont $r8, $r11;
        java.lang.String r9;
        int i0, i1, $i2, $i3;
        net.sourceforge.plantuml.cucadiagram.DisplaySection $r13, r15;
        java.util.List $r14;
        boolean $z0, $z1;
        net.sourceforge.plantuml.png.PngTitler $r16;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r17;
        net.sourceforge.plantuml.style.StyleSignature r18;
        net.sourceforge.plantuml.style.StyleBuilder $r19;
        net.sourceforge.plantuml.style.Style r20;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        r5 := @parameter0: net.sourceforge.plantuml.FontParam;

        i1 := @parameter1: int;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getHyperlinkColor()>();

        $r4 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r4[0] = r5;

        r6 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getFontHtmlColor(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.FontParam[])>(null, $r4);

        $r7 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r7[0] = r5;

        $r8 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>(null, 0, $r7);

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UFont: java.lang.String getFamily(net.sourceforge.plantuml.ugraphic.UFontContext)>(null);

        $r10 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r10[0] = r5;

        $r11 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>(null, 0, $r10);

        i0 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UFont: int getSize()>();

        $r12 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplaySection getFooterOrHeaderTeoz(net.sourceforge.plantuml.FontParam)>(r5);

        $i2 = i1 + 1;

        $r14 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: java.util.List pages>;

        $i3 = interfaceinvoke $r14.<java.util.List: int size()>();

        r15 = virtualinvoke $r13.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.cucadiagram.DisplaySection withPage(int,int)>($i2, $i3);

        r20 = null;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        r18 = virtualinvoke r5.<net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.style.StyleSignature getStyleDefinition(net.sourceforge.plantuml.style.SName)>(null);

        $r19 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r20 = virtualinvoke r18.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r19);

     label1:
        $r16 = new net.sourceforge.plantuml.png.PngTitler;

        $z1 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: boolean useUnderlineForHyperlink()>();

        $r17 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        specialinvoke $r16.<net.sourceforge.plantuml.png.PngTitler: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.DisplaySection,int,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor,boolean,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.ISkinSimple)>(r6, r15, i0, r9, r3, $z1, r20, $r17, r2);

        return $r16;
    }

    private boolean isLegendTop()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r1, $r3;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned $r2, $r4;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: boolean isNull()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.VerticalAlignment getVerticalAlignment()>();

        $r6 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment TOP>;

        if $r5 != $r6 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    static net.sourceforge.plantuml.sequencediagram.SequenceDiagram access$000(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r1;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        return $r1;
    }

    static net.sourceforge.plantuml.awt.geom.Dimension2D access$100(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r1;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.awt.geom.Dimension2D fullDimension>;

        return $r1;
    }

    static net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet access$200(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet $r1;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: net.sourceforge.plantuml.sequencediagram.graphic.DrawableSet drawableSet>;

        return $r1;
    }

    static void access$300(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2, net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea, net.sourceforge.plantuml.ugraphic.UGraphic, int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        int i0;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        r1 := @parameter1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter3: int;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: void drawHeader(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea,net.sourceforge.plantuml.ugraphic.UGraphic,int)>(r1, r2, i0);

        return;
    }

    static void access$400(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2, net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea, net.sourceforge.plantuml.ugraphic.UGraphic, int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        int i0;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2;

        r1 := @parameter1: net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter3: int;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramFileMakerPuma2: void drawFooter(net.sourceforge.plantuml.sequencediagram.graphic.SequenceDiagramArea,net.sourceforge.plantuml.ugraphic.UGraphic,int)>(r1, r2, i0);

        return;
    }
}
