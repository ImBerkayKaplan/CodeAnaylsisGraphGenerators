public class net.sourceforge.plantuml.eggs.PSystemEgg extends net.sourceforge.plantuml.PlainStringsDiagram
{

    void <init>(net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.eggs.PSystemEgg r0;
        net.sourceforge.plantuml.core.UmlSource r1;
        java.util.StringTokenizer $r2;
        java.lang.String r3, $r6;
        boolean $z0;
        java.util.List $r5;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemEgg;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.PlainStringsDiagram: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        $r2 = new java.util.StringTokenizer;

        specialinvoke $r2.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r3, "|");

     label1:
        $z0 = virtualinvoke $r2.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r5 = r0.<net.sourceforge.plantuml.eggs.PSystemEgg: java.util.List strings>;

        $r6 = virtualinvoke $r2.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        return;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.eggs.PSystemEgg r1;

        r1 := @this: net.sourceforge.plantuml.eggs.PSystemEgg;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Easter Eggs)");

        return $r0;
    }
}
