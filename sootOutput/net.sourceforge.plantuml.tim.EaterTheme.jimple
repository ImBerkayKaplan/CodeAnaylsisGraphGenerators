public class net.sourceforge.plantuml.tim.EaterTheme extends net.sourceforge.plantuml.tim.Eater
{
    private java.lang.String realName;
    private java.lang.String name;
    private java.lang.String 'from';
    private net.sourceforge.plantuml.tim.TContext context;
    private final net.sourceforge.plantuml.preproc.ImportedFiles importedFiles;

    public void <init>(net.sourceforge.plantuml.StringLocated, net.sourceforge.plantuml.preproc.ImportedFiles)
    {
        net.sourceforge.plantuml.tim.EaterTheme r0;
        net.sourceforge.plantuml.StringLocated r1;
        net.sourceforge.plantuml.preproc.ImportedFiles r2;

        r0 := @this: net.sourceforge.plantuml.tim.EaterTheme;

        r1 := @parameter0: net.sourceforge.plantuml.StringLocated;

        r2 := @parameter1: net.sourceforge.plantuml.preproc.ImportedFiles;

        specialinvoke r0.<net.sourceforge.plantuml.tim.Eater: void <init>(net.sourceforge.plantuml.StringLocated)>(r1);

        r0.<net.sourceforge.plantuml.tim.EaterTheme: net.sourceforge.plantuml.preproc.ImportedFiles importedFiles> = r2;

        return;
    }

    public void analyze(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory) throws net.sourceforge.plantuml.tim.EaterException, net.sourceforge.plantuml.tim.EaterExceptionLocated
    {
        net.sourceforge.plantuml.tim.EaterTheme r0;
        java.lang.String $r1, $r2, $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        int i0, $i1, $i2;
        net.sourceforge.plantuml.tim.TContext r4;
        net.sourceforge.plantuml.tim.TMemory r5;
        net.sourceforge.plantuml.LineLocation $r6;

        r0 := @this: net.sourceforge.plantuml.tim.EaterTheme;

        r4 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r5 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterTheme: void skipSpaces()>();

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterTheme: void checkAndEatChar(java.lang.String)>("!theme");

        virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterTheme: void skipSpaces()>();

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String eatAllToEnd()>();

        r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String name> = $r1;

        $r2 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String name>;

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        i0 = virtualinvoke $r3.<java.lang.String: int indexOf(java.lang.String)>(" from ");

        if i0 == -1 goto label1;

        $r10 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String name>;

        $r9 = " from ";

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i2 = i0 + $i1;

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>($i2);

        r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String 'from'> = $r11;

        $r12 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String name>;

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String name> = $r13;

        r0.<net.sourceforge.plantuml.tim.EaterTheme: net.sourceforge.plantuml.tim.TContext context> = r4;

     label1:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterTheme: net.sourceforge.plantuml.LineLocation getLineLocation()>();

        $r7 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String name>;

        $r8 = virtualinvoke r4.<net.sourceforge.plantuml.tim.TContext: java.lang.String applyFunctionsAndVariables(net.sourceforge.plantuml.tim.TMemory,net.sourceforge.plantuml.LineLocation,java.lang.String)>(r5, $r6, $r7);

        r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName> = $r8;

        return;
    }

    public final net.sourceforge.plantuml.preproc.ReadLine getTheme() throws net.sourceforge.plantuml.tim.EaterException
    {
        net.sourceforge.plantuml.tim.EaterTheme r0;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r10, $r11, $r12, $r18, $r20, $r22, $r23, $r25, $r28, $r30, $r36, $r38, $r43, $r45;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.LineLocation $r6;
        java.nio.charset.Charset $r7, $r14;
        net.sourceforge.plantuml.preproc.ReadLine $r8, $r21, $r39, r50;
        net.sourceforge.plantuml.tim.EaterException $r9, $r31, $r46, $r48;
        net.sourceforge.plantuml.tim.TContext $r13;
        java.io.Reader $r15;
        java.lang.StringBuilder $r16, $r17, $r19, $r26, $r27, $r29, $r34, $r35, $r37, $r41, $r42, $r44;
        net.sourceforge.plantuml.preproc.ImportedFiles $r24;
        net.sourceforge.plantuml.security.SFile $r32;
        java.io.BufferedReader r33;
        java.io.IOException $r40, $r49;
        java.io.UnsupportedEncodingException $r47;
        net.sourceforge.plantuml.AFile r51;
        net.sourceforge.plantuml.security.SURL r53;
        net.sourceforge.plantuml.preproc.FileWithSuffix r55;

        r0 := @this: net.sourceforge.plantuml.tim.EaterTheme;

        $r1 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String 'from'>;

        if $r1 != null goto label06;

        $r22 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName>;

        r50 = staticinvoke <net.sourceforge.plantuml.theme.ThemeUtils: net.sourceforge.plantuml.preproc.ReadLine getReaderTheme(java.lang.String)>($r22);

        if r50 == null goto label01;

        return r50;

     label01:
        $r24 = r0.<net.sourceforge.plantuml.tim.EaterTheme: net.sourceforge.plantuml.preproc.ImportedFiles importedFiles>;

        $r23 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName>;

        $r25 = staticinvoke <net.sourceforge.plantuml.theme.ThemeUtils: java.lang.String getFilename(java.lang.String)>($r23);

        r51 = virtualinvoke $r24.<net.sourceforge.plantuml.preproc.ImportedFiles: net.sourceforge.plantuml.AFile getAFile(java.lang.String)>($r25);

        if r51 == null goto label03;

        $z2 = interfaceinvoke r51.<net.sourceforge.plantuml.AFile: boolean isOk()>();

        if $z2 == 0 goto label03;

        $r32 = interfaceinvoke r51.<net.sourceforge.plantuml.AFile: net.sourceforge.plantuml.security.SFile getUnderlyingFile()>();

        r33 = virtualinvoke $r32.<net.sourceforge.plantuml.security.SFile: java.io.BufferedReader openBufferedReader()>();

        if r33 == null goto label03;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("theme ");

        $r36 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = staticinvoke <net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.preproc.ReadLine create(java.io.Reader,java.lang.String)>(r33, $r38);

     label02:
        return $r39;

     label03:
        goto label05;

     label04:
        $r49 := @caughtexception;

        virtualinvoke $r49.<java.io.IOException: void printStackTrace()>();

     label05:
        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot load ");

        $r28 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = staticinvoke <net.sourceforge.plantuml.tim.EaterException: net.sourceforge.plantuml.tim.EaterException located(java.lang.String)>($r30);

        throw $r31;

     label06:
        $r2 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String 'from'>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

        if $z0 != 0 goto label07;

        $r10 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String 'from'>;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean startsWith(java.lang.String)>("https://");

        if $z1 == 0 goto label11;

     label07:
        $r4 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String 'from'>;

        $r3 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName>;

        $r5 = staticinvoke <net.sourceforge.plantuml.theme.ThemeUtils: java.lang.String getFullPath(java.lang.String,java.lang.String)>($r4, $r3);

        r53 = staticinvoke <net.sourceforge.plantuml.security.SURL: net.sourceforge.plantuml.security.SURL create(java.lang.String)>($r5);

        if r53 != null goto label08;

        $r9 = staticinvoke <net.sourceforge.plantuml.tim.EaterException: net.sourceforge.plantuml.tim.EaterException located(java.lang.String)>("Cannot open URL");

        throw $r9;

     label08:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.tim.EaterTheme: net.sourceforge.plantuml.LineLocation getLineLocation()>();

        $r7 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r8 = staticinvoke <net.sourceforge.plantuml.preproc2.PreprocessorUtils: net.sourceforge.plantuml.preproc.ReadLine getReaderInclude(net.sourceforge.plantuml.security.SURL,net.sourceforge.plantuml.LineLocation,java.nio.charset.Charset)>(r53, $r6, $r7);

     label09:
        return $r8;

     label10:
        $r47 := @caughtexception;

        virtualinvoke $r47.<java.io.UnsupportedEncodingException: void printStackTrace()>();

        $r48 = staticinvoke <net.sourceforge.plantuml.tim.EaterException: net.sourceforge.plantuml.tim.EaterException located(java.lang.String)>("Cannot decode charset");

        throw $r48;

     label11:
        $r13 = r0.<net.sourceforge.plantuml.tim.EaterTheme: net.sourceforge.plantuml.tim.TContext context>;

        $r12 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String 'from'>;

        $r11 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName>;

        r55 = virtualinvoke $r13.<net.sourceforge.plantuml.tim.TContext: net.sourceforge.plantuml.preproc.FileWithSuffix getFileWithSuffix(java.lang.String,java.lang.String)>($r12, $r11);

        $r14 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r15 = virtualinvoke r55.<net.sourceforge.plantuml.preproc.FileWithSuffix: java.io.Reader getReader(java.nio.charset.Charset)>($r14);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("theme ");

        $r18 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = staticinvoke <net.sourceforge.plantuml.preproc.ReadLineReader: net.sourceforge.plantuml.preproc.ReadLine create(java.io.Reader,java.lang.String)>($r15, $r20);

     label12:
        return $r21;

     label13:
        $r40 := @caughtexception;

        virtualinvoke $r40.<java.io.IOException: void printStackTrace()>();

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot load ");

        $r43 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String realName>;

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        $r46 = staticinvoke <net.sourceforge.plantuml.tim.EaterException: net.sourceforge.plantuml.tim.EaterException located(java.lang.String)>($r45);

        throw $r46;

        catch java.io.IOException from label01 to label02 with label04;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
        catch java.io.IOException from label11 to label12 with label13;
    }

    public java.lang.String getName()
    {
        net.sourceforge.plantuml.tim.EaterTheme r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.tim.EaterTheme;

        $r1 = r0.<net.sourceforge.plantuml.tim.EaterTheme: java.lang.String name>;

        return $r1;
    }
}
