class net.sourceforge.plantuml.svek.SvekLine$1 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final java.awt.geom.Point2D val$contact;
    final java.awt.geom.Point2D val$center;
    final net.sourceforge.plantuml.svek.SvekLine this$0;

    void <init>(net.sourceforge.plantuml.svek.SvekLine, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.SvekLine$1 r0;
        net.sourceforge.plantuml.svek.SvekLine r1;
        java.awt.geom.Point2D r2, r3;

        r0 := @this: net.sourceforge.plantuml.svek.SvekLine$1;

        r1 := @parameter0: net.sourceforge.plantuml.svek.SvekLine;

        r2 := @parameter1: java.awt.geom.Point2D;

        r3 := @parameter2: java.awt.geom.Point2D;

        r0.<net.sourceforge.plantuml.svek.SvekLine$1: net.sourceforge.plantuml.svek.SvekLine this$0> = r1;

        r0.<net.sourceforge.plantuml.svek.SvekLine$1: java.awt.geom.Point2D val$contact> = r2;

        r0.<net.sourceforge.plantuml.svek.SvekLine$1: java.awt.geom.Point2D val$center> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.ULine $r0;
        net.sourceforge.plantuml.svek.SvekLine$1 r1;
        java.awt.geom.Point2D $r2, $r3, $r4, $r5, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        net.sourceforge.plantuml.ugraphic.UGraphic r9, r10;

        r1 := @this: net.sourceforge.plantuml.svek.SvekLine$1;

        r9 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.ULine;

        $r2 = r1.<net.sourceforge.plantuml.svek.SvekLine$1: java.awt.geom.Point2D val$contact>;

        $d0 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $r3 = r1.<net.sourceforge.plantuml.svek.SvekLine$1: java.awt.geom.Point2D val$center>;

        $d1 = virtualinvoke $r3.<java.awt.geom.Point2D: double getX()>();

        $d2 = $d0 - $d1;

        $r4 = r1.<net.sourceforge.plantuml.svek.SvekLine$1: java.awt.geom.Point2D val$contact>;

        $d3 = virtualinvoke $r4.<java.awt.geom.Point2D: double getY()>();

        $r5 = r1.<net.sourceforge.plantuml.svek.SvekLine$1: java.awt.geom.Point2D val$center>;

        $d4 = virtualinvoke $r5.<java.awt.geom.Point2D: double getY()>();

        $d5 = $d3 - $d4;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d2, $d5);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r8 = r1.<net.sourceforge.plantuml.svek.SvekLine$1: java.awt.geom.Point2D val$center>;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>($r8);

        r10 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        return;
    }
}
