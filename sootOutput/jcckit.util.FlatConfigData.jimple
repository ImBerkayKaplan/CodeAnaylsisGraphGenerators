public abstract class jcckit.util.FlatConfigData extends java.lang.Object implements jcckit.util.ConfigData
{
    private final java.lang.String _path;

    public void <init>(java.lang.String)
    {
        jcckit.util.FlatConfigData r0;
        java.lang.String r1;

        r0 := @this: jcckit.util.FlatConfigData;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jcckit.util.FlatConfigData: java.lang.String _path> = r1;

        return;
    }

    public java.lang.String getFullKey(java.lang.String)
    {
        jcckit.util.FlatConfigData r0;
        java.lang.String $r1, $r3, r5, $r7;
        java.lang.StringBuilder $r2, $r4, $r6;

        r0 := @this: jcckit.util.FlatConfigData;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<jcckit.util.FlatConfigData: java.lang.String _path>;

        if $r1 != null goto label1;

        $r7 = r5;

        goto label2;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<jcckit.util.FlatConfigData: java.lang.String _path>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r7;
    }

    public java.lang.String get(java.lang.String)
    {
        jcckit.util.FlatConfigData r0;
        java.lang.String r1, $r2, $r3;

        r0 := @this: jcckit.util.FlatConfigData;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jcckit.util.FlatConfigData: java.lang.String _path>;

        $r3 = specialinvoke r0.<jcckit.util.FlatConfigData: java.lang.String get(java.lang.String,java.lang.String,int)>($r2, r1, 0);

        return $r3;
    }

    private java.lang.String get(java.lang.String, java.lang.String, int)
    {
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String r0, r3, $r7, r8, $r11, $r13, r14, $r15;
        java.lang.StringBuilder $r1, $r2, $r4, $r9, $r10, $r12;
        jcckit.util.FlatConfigData r6;

        r6 := @this: jcckit.util.FlatConfigData;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r14 = null;

        if i0 >= 20 goto label7;

        if r0 != null goto label1;

        $r15 = r3;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r15 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        r14 = virtualinvoke r6.<jcckit.util.FlatConfigData: java.lang.String getValue(java.lang.String)>($r15);

        if r14 != null goto label7;

        if r0 != null goto label3;

        $i4 = -1;

        goto label4;

     label3:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

     label4:
        i5 = $i4;

     label5:
        if i5 <= 0 goto label7;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i5);

        r8 = virtualinvoke r6.<jcckit.util.FlatConfigData: java.lang.String getValue(java.lang.String)>($r7);

        if r8 == null goto label6;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i5);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $i3 = i0 + 1;

        r14 = specialinvoke r6.<jcckit.util.FlatConfigData: java.lang.String get(java.lang.String,java.lang.String,int)>($r13, r3, $i3);

        goto label7;

     label6:
        $i1 = i5 - 2;

        $i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(47, $i1);

        i5 = $i2 + 1;

        goto label5;

     label7:
        return r14;
    }

    public jcckit.util.ConfigData getNode(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r3, $r5, $r7, $r8, $r9;
        jcckit.util.FlatConfigData r1;
        java.lang.String $r2, $r4, r6, r10, $r12;
        jcckit.util.ConfigData $r11;

        r1 := @this: jcckit.util.FlatConfigData;

        r6 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<jcckit.util.FlatConfigData: java.lang.String _path>;

        if $r2 != null goto label1;

        $r12 = r6;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r1.<jcckit.util.FlatConfigData: java.lang.String _path>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r12 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r1.<jcckit.util.FlatConfigData: jcckit.util.ConfigData createConfigData(java.lang.String)>(r10);

        return $r11;
    }

    protected abstract java.lang.String getValue(java.lang.String);

    protected abstract jcckit.util.ConfigData createConfigData(java.lang.String);
}
