class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow arrowColor;
    private final net.sourceforge.plantuml.ugraphic.UTranslate diamondTranslate;
    private final net.sourceforge.plantuml.ugraphic.UTranslate translate0;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;
        net.sourceforge.plantuml.ugraphic.UTranslate r5, r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r6 := @parameter4: net.sourceforge.plantuml.ugraphic.UTranslate;

        r5 := @parameter5: net.sourceforge.plantuml.ugraphic.UTranslate;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.graphic.Rainbow arrowColor> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UTranslate diamondTranslate> = r5;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UTranslate translate0> = r6;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical r2;
        java.awt.geom.Point2D r3, r4;
        double $d0, d1, d2, d3, d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.UTranslate r5;
        byte $b0, $b1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r6;
        net.sourceforge.plantuml.ugraphic.UPolygon r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge $r8;
        net.sourceforge.plantuml.ISkinParam $r9;
        net.sourceforge.plantuml.graphic.Rainbow $r10;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder,double)>(r1, $d0);

        d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        d2 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        d3 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        d4 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();

        $d5 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        r5 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UTranslate arrivalOnDiamond(net.sourceforge.plantuml.graphic.StringBounder,double)>(r1, $d5);

        $d6 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $b0 = $d6 cmpg 0.0;

        if $b0 >= 0 goto label1;

        r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToRight()>();

        goto label3;

     label1:
        $d7 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $b1 = $d7 cmpl 0.0;

        if $b1 <= 0 goto label2;

        r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToLeft()>();

        goto label3;

     label2:
        r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

     label3:
        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge this$0>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.graphic.Rainbow arrowColor>;

        r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r9, $r10, r7);

        virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d1, d2);

        virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d1, d4);

        virtualinvoke r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d3, d4);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r6);

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4;
        java.awt.geom.Point2D $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UTranslate translate0>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r6 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r5);

        return $r6;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0;
        net.sourceforge.plantuml.ugraphic.UTranslate r2;
        java.awt.geom.Point2D $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UTranslate arrivalOnDiamond(net.sourceforge.plantuml.graphic.StringBounder,double)>(r1, d0);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: java.awt.geom.Point2D getDiamondOut(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r3);

        return $r4;
    }

    public java.awt.geom.Point2D getDiamondOut(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4;
        java.awt.geom.Point2D $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UTranslate diamondTranslate>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r6 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r5);

        return $r6;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate arrivalOnDiamond(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        java.awt.geom.Point2D r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        byte $b0, $b1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r6, $r7, r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d8 := @parameter1: double;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: java.awt.geom.Point2D getDiamondOut(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 / 2.0;

        d3 = $d0 - $d2;

        $d4 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d5 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = $d5 / 2.0;

        d7 = $d4 + $d6;

        $b0 = d8 cmpg d3;

        if $b0 >= 0 goto label1;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d16 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d17 = neg $d16;

        $d18 = $d17 / 2.0;

        $d19 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d20 = neg $d19;

        $d21 = $d20 / 2.0;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d18, $d21);

        r8 = $r7;

        goto label3;

     label1:
        $b1 = d8 cmpl d7;

        if $b1 <= 0 goto label2;

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d11 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d12 = $d11 / 2.0;

        $d13 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d14 = neg $d13;

        $d15 = $d14 / 2.0;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d12, $d15);

        r8 = $r6;

        goto label3;

     label2:
        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d9 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d10 = neg $d9;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(0.0, $d10);

        r8 = $r5;

     label3:
        return r8;
    }
}
