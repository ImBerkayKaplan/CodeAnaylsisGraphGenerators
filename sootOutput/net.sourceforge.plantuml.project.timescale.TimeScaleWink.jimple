public class net.sourceforge.plantuml.project.timescale.TimeScaleWink extends java.lang.Object implements net.sourceforge.plantuml.project.timescale.TimeScale
{
    private final double scale;

    public void <init>(double)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleWink r0;
        double d0, $d1;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleWink;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $d1 = 16.0 * d0;

        r0.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double scale> = $d1;

        return;
    }

    public double getStartingPosition(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.time.Day r0;
        long l0;
        net.sourceforge.plantuml.project.timescale.TimeScaleWink r1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleWink;

        r0 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        l0 = virtualinvoke r0.<net.sourceforge.plantuml.project.time.Day: long getMillis()>();

        $d1 = (double) l0;

        $d0 = r1.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double scale>;

        $d2 = $d1 * $d0;

        $d3 = $d2 / 8.64E7;

        return $d3;
    }

    public double getEndingPosition(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleWink r0;
        net.sourceforge.plantuml.project.time.Day r1;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleWink;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r1);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double getWidth(net.sourceforge.plantuml.project.time.Day)>(r1);

        $d2 = $d0 + $d1;

        return $d2;
    }

    public double getWidth(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleWink r0;
        double $d0;
        net.sourceforge.plantuml.project.time.Day r1;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleWink;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $d0 = r0.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double scale>;

        return $d0;
    }

    public boolean isBreaking(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleWink r0;
        net.sourceforge.plantuml.project.time.Day r1;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleWink;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        return 1;
    }
}
