public class net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy extends java.lang.Object
{
    private java.util.Map myFatherIs;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile root;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy r0;
        java.util.HashMap $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: java.util.Map myFatherIs> = $r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile root> = r2;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: void process(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2);

        return;
    }

    private void process(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, r4;
        java.util.Collection r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy r5;

        r5 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Collection getMyChildren()>();

        r2 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r3;

        specialinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: void setMyFather(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r4, r0);

        specialinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: void process(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r4);

        goto label1;

     label2:
        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getMyFather(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, $r4;
        java.util.Map $r2;
        java.lang.Object $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: java.util.Map myFatherIs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r3;

        return $r4;
    }

    private void setMyFather(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, r3;
        java.util.Map $r2, $r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: java.util.Map myFatherIs>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: java.util.Map myFatherIs>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r3, r4, r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, r6, r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy r2;
        net.sourceforge.plantuml.graphic.StringBounder r5;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r7 = r0;

        $r1 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>()>();

        r8 = $r1;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile root>;

        if r7 == $r3 goto label2;

        r4 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Genealogy: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getMyFather(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r7);

        r6 = interfaceinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r7, r5);

        r8 = virtualinvoke r6.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>(r8);

        r7 = r4;

        goto label1;

     label2:
        return r8;
    }
}
