class net.sourceforge.plantuml.project.lang.SubjectProject$Starts extends net.sourceforge.plantuml.project.lang.SentenceSimple
{
    static final boolean $assertionsDisabled;
    final net.sourceforge.plantuml.project.lang.SubjectProject this$0;

    public void <init>(net.sourceforge.plantuml.project.lang.SubjectProject)
    {
        net.sourceforge.plantuml.project.lang.SubjectProject$Starts r0;
        net.sourceforge.plantuml.project.lang.SubjectProject r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2;
        net.sourceforge.plantuml.project.lang.ComplementDate $r3;

        r0 := @this: net.sourceforge.plantuml.project.lang.SubjectProject$Starts;

        r1 := @parameter0: net.sourceforge.plantuml.project.lang.SubjectProject;

        r0.<net.sourceforge.plantuml.project.lang.SubjectProject$Starts: net.sourceforge.plantuml.project.lang.SubjectProject this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.project.lang.Verbs: net.sourceforge.plantuml.command.regex.IRegex starts()>();

        $r3 = new net.sourceforge.plantuml.project.lang.ComplementDate;

        specialinvoke $r3.<net.sourceforge.plantuml.project.lang.ComplementDate: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: void <init>(net.sourceforge.plantuml.project.lang.Subject,net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.project.lang.Something)>(r1, $r2, $r3);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r4;
        net.sourceforge.plantuml.project.time.Day r1;
        boolean $z0;
        net.sourceforge.plantuml.project.GanttDiagram r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3;
        java.lang.AssertionError $r5;
        net.sourceforge.plantuml.project.lang.SubjectProject$Starts r6;

        r6 := @this: net.sourceforge.plantuml.project.lang.SubjectProject$Starts;

        r2 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r4 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.lang.Object;

        r1 = (net.sourceforge.plantuml.project.time.Day) r0;

        $z0 = <net.sourceforge.plantuml.project.lang.SubjectProject$Starts: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 == r4 goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        virtualinvoke r2.<net.sourceforge.plantuml.project.GanttDiagram: void setStartingDate(net.sourceforge.plantuml.project.time.Day)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/project/lang/SubjectProject;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.project.lang.SubjectProject$Starts: boolean $assertionsDisabled> = $z1;

        return;
    }
}
