public class net.sourceforge.plantuml.png.PngTitler extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor textColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor hyperlinkColor;
    private final net.sourceforge.plantuml.cucadiagram.DisplaySection text;
    private final int fontSize;
    private final java.lang.String fontFamily;
    private final boolean useUnderlineForHyperlink;
    private final net.sourceforge.plantuml.style.Style style;
    private final net.sourceforge.plantuml.ugraphic.color.HColorSet set;
    private final net.sourceforge.plantuml.ISkinSimple spriteContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.DisplaySection, int, java.lang.String, net.sourceforge.plantuml.ugraphic.color.HColor, boolean, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.ugraphic.color.HColorSet, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.png.PngTitler r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        boolean $z0, z1;
        net.sourceforge.plantuml.cucadiagram.DisplaySection r4;
        net.sourceforge.plantuml.style.PName $r5, $r8, $r10, $r12;
        net.sourceforge.plantuml.style.Value $r6, $r9, $r11, $r13;
        net.sourceforge.plantuml.api.ThemeStyle $r7, $r14;
        net.sourceforge.plantuml.ugraphic.color.HColor r15, r17;
        int i0;
        java.lang.String r16;

        r0 := @this: net.sourceforge.plantuml.png.PngTitler;

        r15 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter1: net.sourceforge.plantuml.cucadiagram.DisplaySection;

        i0 := @parameter2: int;

        r16 := @parameter3: java.lang.String;

        r17 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        z1 := @parameter5: boolean;

        r1 := @parameter6: net.sourceforge.plantuml.style.Style;

        r2 := @parameter7: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        r3 := @parameter8: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.style.Style style> = r1;

        r0.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.ugraphic.color.HColorSet set> = r2;

        r0.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.ISkinSimple spriteContainer> = r3;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r5 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r5);

        $r7 = interfaceinvoke r3.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r15 = interfaceinvoke $r6.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r7, r2);

        $r8 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontSize>;

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r8);

        i0 = interfaceinvoke $r9.<net.sourceforge.plantuml.style.Value: int asInt()>();

        $r10 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontName>;

        $r11 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r10);

        r16 = interfaceinvoke $r11.<net.sourceforge.plantuml.style.Value: java.lang.String asString()>();

        $r12 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName HyperLinkColor>;

        $r13 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r12);

        $r14 = interfaceinvoke r3.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r17 = interfaceinvoke $r13.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r14, r2);

     label1:
        r0.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.ugraphic.color.HColor textColor> = r15;

        r0.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.cucadiagram.DisplaySection text> = r4;

        r0.<net.sourceforge.plantuml.png.PngTitler: int fontSize> = i0;

        r0.<net.sourceforge.plantuml.png.PngTitler: java.lang.String fontFamily> = r16;

        r0.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.ugraphic.color.HColor hyperlinkColor> = r17;

        r0.<net.sourceforge.plantuml.png.PngTitler: boolean useUnderlineForHyperlink> = z1;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getTextDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.png.PngTitler r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.png.PngTitler;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.graphic.TextBlock getRibbonBlock()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        return $r3;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getRibbonBlock()
    {
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.UFont $r0;
        net.sourceforge.plantuml.png.PngTitler r1;
        int $i0;
        java.lang.String $r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r5;
        net.sourceforge.plantuml.cucadiagram.DisplaySection $r6, $r9;
        net.sourceforge.plantuml.SpriteContainerEmpty $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8, $r13;
        net.sourceforge.plantuml.ISkinSimple $r10;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r11;
        net.sourceforge.plantuml.style.Style $r12;
        net.sourceforge.plantuml.cucadiagram.Display r14;

        r1 := @this: net.sourceforge.plantuml.png.PngTitler;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label2;

        $r9 = r1.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.cucadiagram.DisplaySection text>;

        r14 = virtualinvoke $r9.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        if r14 != null goto label1;

        return null;

     label1:
        $r12 = r1.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.style.Style style>;

        $r11 = r1.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.ugraphic.color.HColorSet set>;

        $r10 = r1.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.ISkinSimple spriteContainer>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.TextBlock createTextBlockBordered(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.ISkinSimple)>(r14, $r11, $r10);

        return $r13;

     label2:
        $r0 = new net.sourceforge.plantuml.ugraphic.UFont;

        $r2 = r1.<net.sourceforge.plantuml.png.PngTitler: java.lang.String fontFamily>;

        $i0 = r1.<net.sourceforge.plantuml.png.PngTitler: int fontSize>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UFont: void <init>(java.lang.String,int,int)>($r2, 0, $i0);

        $r6 = r1.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.cucadiagram.DisplaySection text>;

        $r3 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r5 = r1.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.ugraphic.color.HColor textColor>;

        $r4 = r1.<net.sourceforge.plantuml.png.PngTitler: net.sourceforge.plantuml.ugraphic.color.HColor hyperlinkColor>;

        $z1 = r1.<net.sourceforge.plantuml.png.PngTitler: boolean useUnderlineForHyperlink>;

        specialinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>($r0, $r5, $r4, $z1);

        $r7 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r7.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.TextBlock createRibbon(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.style.Style)>($r3, $r7, null);

        return $r8;
    }
}
