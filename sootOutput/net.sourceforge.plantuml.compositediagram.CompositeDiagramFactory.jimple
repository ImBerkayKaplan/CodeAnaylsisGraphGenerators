public class net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory extends net.sourceforge.plantuml.command.PSystemCommandFactory
{
    private final net.sourceforge.plantuml.ISkinSimple skinParam;

    public void <init>(net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory r0;
        net.sourceforge.plantuml.ISkinSimple r1;

        r0 := @this: net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>()>();

        r0.<net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory: net.sourceforge.plantuml.ISkinSimple skinParam> = r1;

        return;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.compositediagram.command.CommandCreateBlock $r2;
        net.sourceforge.plantuml.compositediagram.command.CommandLinkBlock $r3;
        net.sourceforge.plantuml.compositediagram.command.CommandCreatePackageBlock $r4;
        net.sourceforge.plantuml.compositediagram.command.CommandEndPackageBlock $r5;
        net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory r6;

        r6 := @this: net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new net.sourceforge.plantuml.compositediagram.command.CommandCreateBlock;

        specialinvoke $r2.<net.sourceforge.plantuml.compositediagram.command.CommandCreateBlock: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.compositediagram.command.CommandLinkBlock;

        specialinvoke $r3.<net.sourceforge.plantuml.compositediagram.command.CommandLinkBlock: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.compositediagram.command.CommandCreatePackageBlock;

        specialinvoke $r4.<net.sourceforge.plantuml.compositediagram.command.CommandCreatePackageBlock: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new net.sourceforge.plantuml.compositediagram.command.CommandEndPackageBlock;

        specialinvoke $r5.<net.sourceforge.plantuml.compositediagram.command.CommandEndPackageBlock: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands1(java.util.List)>($r0);

        return $r0;
    }

    public net.sourceforge.plantuml.compositediagram.CompositeDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.compositediagram.CompositeDiagram $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory r4;

        r4 := @this: net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.compositediagram.CompositeDiagram;

        specialinvoke $r0.<net.sourceforge.plantuml.compositediagram.CompositeDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.compositediagram.CompositeDiagram $r4;

        r0 := @this: net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.compositediagram.CompositeDiagramFactory: net.sourceforge.plantuml.compositediagram.CompositeDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }
}
