public class net.sourceforge.plantuml.gitlog.GNode extends java.lang.Object
{
    private final java.util.List up;
    private final java.util.List down;
    private final java.util.List texts;
    private java.lang.String comment;

    public void <init>()
    {
        net.sourceforge.plantuml.gitlog.GNode r0;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List up> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List texts> = $r3;

        return;
    }

    public void addText(java.lang.String)
    {
        net.sourceforge.plantuml.gitlog.GNode r0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List texts>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public boolean isTop()
    {
        net.sourceforge.plantuml.gitlog.GNode r0;
        java.util.List $r1;
        int $i0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        $r1 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List up>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.lang.String getComment()
    {
        net.sourceforge.plantuml.gitlog.GNode r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        $r1 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.lang.String comment>;

        return $r1;
    }

    public void setComment(java.lang.String)
    {
        net.sourceforge.plantuml.gitlog.GNode r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        r1 := @parameter0: java.lang.String;

        r0.<net.sourceforge.plantuml.gitlog.GNode: java.lang.String comment> = r1;

        return;
    }

    public static void link(net.sourceforge.plantuml.gitlog.GNode, net.sourceforge.plantuml.gitlog.GNode)
    {
        net.sourceforge.plantuml.gitlog.GNode r0, r1;
        java.util.List $r2, $r3;

        r0 := @parameter0: net.sourceforge.plantuml.gitlog.GNode;

        r1 := @parameter1: net.sourceforge.plantuml.gitlog.GNode;

        $r2 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = r1.<net.sourceforge.plantuml.gitlog.GNode: java.util.List up>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r0);

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.gitlog.GNode r0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        $r1 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List texts>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getDisplay()
    {
        net.sourceforge.plantuml.gitlog.GNode r0;
        java.util.List $r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        $r1 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List texts>;

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r1);

        return $r2;
    }

    public java.util.Collection getDowns()
    {
        net.sourceforge.plantuml.gitlog.GNode r0;
        java.util.List $r1;
        java.util.Collection $r2;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        $r1 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down>;

        $r2 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r1);

        return $r2;
    }

    public boolean canEatTheNextOne()
    {
        net.sourceforge.plantuml.gitlog.GNode r0, r5;
        java.util.List $r1, $r2, $r3, $r6, $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r4;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        $r1 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List up>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 == 1 goto label1;

        return 0;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 == 1 goto label2;

        return 0;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (net.sourceforge.plantuml.gitlog.GNode) $r4;

        $r6 = r5.<net.sourceforge.plantuml.gitlog.GNode: java.util.List up>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i2 == 1 goto label3;

        return 0;

     label3:
        $r7 = r5.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down>;

        $i3 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i3 == 1 goto label4;

        return 0;

     label4:
        return 1;
    }

    public net.sourceforge.plantuml.gitlog.GNode eatTheNextOne()
    {
        net.sourceforge.plantuml.gitlog.GNode r0, r3, r6;
        boolean $z0, $z2;
        java.util.List $r1, $r4, $r7, $r8, $r9, $r11, $r12;
        java.lang.Object $r2, $r5;
        java.lang.IllegalStateException $r13, $r14;

        r0 := @this: net.sourceforge.plantuml.gitlog.GNode;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.gitlog.GNode: boolean canEatTheNextOne()>();

        if $z0 != 0 goto label1;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>()>();

        throw $r14;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (net.sourceforge.plantuml.gitlog.GNode) $r2;

        $r4 = r3.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        r6 = (net.sourceforge.plantuml.gitlog.GNode) $r5;

        $r8 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List texts>;

        $r7 = r3.<net.sourceforge.plantuml.gitlog.GNode: java.util.List texts>;

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r9 = r0.<net.sourceforge.plantuml.gitlog.GNode: java.util.List down>;

        interfaceinvoke $r9.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, r6);

        $r11 = r6.<net.sourceforge.plantuml.gitlog.GNode: java.util.List up>;

        $z2 = interfaceinvoke $r11.<java.util.List: boolean remove(java.lang.Object)>(r3);

        if $z2 != 0 goto label2;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>()>();

        throw $r13;

     label2:
        $r12 = r6.<net.sourceforge.plantuml.gitlog.GNode: java.util.List up>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r0);

        return r3;
    }
}
