class net.sourceforge.plantuml.svek.extremity.ExtremityCircle extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private static final double radius;
    private final java.awt.geom.Point2D dest;
    private final boolean fill;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor;

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircle r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircle;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: java.awt.geom.Point2D dest>;

        return $r1;
    }

    public static net.sourceforge.plantuml.graphic.UDrawable create(java.awt.geom.Point2D, boolean, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircle $r0;
        java.awt.geom.Point2D r1;
        double $d0, $d1, d2;
        boolean z0;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;

        r1 := @parameter0: java.awt.geom.Point2D;

        z0 := @parameter1: boolean;

        d2 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.svek.extremity.ExtremityCircle;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: void <init>(double,double,boolean,double,net.sourceforge.plantuml.ugraphic.color.HColor)>($d0, $d1, z0, d2, r2);

        return $r0;
    }

    private void <init>(double, double, boolean, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircle r0;
        java.awt.geom.Point2D$Double $r1;
        double d0, d1, $d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircle;

        d0 := @parameter0: double;

        d5 := @parameter1: double;

        z0 := @parameter2: boolean;

        d1 := @parameter3: double;

        r2 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        $r1 = new java.awt.geom.Point2D$Double;

        $d2 = d1 + 1.5707963267948966;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d4 = 6.0 * $d3;

        $d7 = d0 - $d4;

        $d6 = d1 + 1.5707963267948966;

        $d8 = staticinvoke <java.lang.Math: double sin(double)>($d6);

        $d9 = 6.0 * $d8;

        $d10 = d5 - $d9;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d7, $d10);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: java.awt.geom.Point2D dest> = $r1;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = r2;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: boolean fill> = z0;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UStroke $r0;
        net.sourceforge.plantuml.svek.extremity.ExtremityCircle r1;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.ugraphic.UBackground $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        java.awt.geom.Point2D $r5, $r6;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UEllipse $r7;
        net.sourceforge.plantuml.ugraphic.UChange $r8;
        net.sourceforge.plantuml.ugraphic.UGraphic r9, r10, r11, r12;

        r1 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircle;

        r9 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        r10 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $z0 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: boolean fill>;

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.UChange changeBack(net.sourceforge.plantuml.ugraphic.UGraphic)>(r10);

        r11 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        goto label2;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r11 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

     label2:
        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r5 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: java.awt.geom.Point2D dest>;

        $d0 = virtualinvoke $r5.<java.awt.geom.Point2D: double getX()>();

        $d1 = $d0 - 6.0;

        $r6 = r1.<net.sourceforge.plantuml.svek.extremity.ExtremityCircle: java.awt.geom.Point2D dest>;

        $d2 = virtualinvoke $r6.<java.awt.geom.Point2D: double getY()>();

        $d3 = $d2 - 6.0;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d3);

        r12 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r7 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(12.0, 12.0);

        interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.svek.extremity.ExtremityCircle: double radius> = 6.0;

        return;
    }
}
