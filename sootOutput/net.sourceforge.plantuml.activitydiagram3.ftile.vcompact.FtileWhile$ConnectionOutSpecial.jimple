class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow afterEndwhileColor;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: net.sourceforge.plantuml.graphic.Rainbow afterEndwhileColor> = r4;

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        java.awt.geom.Point2D$Double $r4;
        java.awt.geom.Point2D $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        $r4 = new java.awt.geom.Point2D$Double;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r4);

        return $r5;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        java.awt.geom.Point2D $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r4);

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        $r8 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r3, $r8;
        net.sourceforge.plantuml.ISkinParam $r4;
        net.sourceforge.plantuml.graphic.Rainbow $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r10;
        java.awt.geom.Point2D r11, r12;
        double d0, $d1, $d2, $d3, d4, $d5, $d6, $d7, d8, d9, d10;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: net.sourceforge.plantuml.graphic.Rainbow afterEndwhileColor>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r4, $r5, $r6);

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r8);

        r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r11 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r12 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOutSpecial: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d2 = virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d3 = $d1 - $d2;

        d4 = $d3 / 2.0;

        $d5 = virtualinvoke r11.<java.awt.geom.Point2D: double getY()>();

        $d6 = virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d7 = $d5 + $d6;

        d8 = $d7 + d4;

        d9 = virtualinvoke r12.<java.awt.geom.Point2D: double getX()>();

        d10 = virtualinvoke r12.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d8);

        virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d9, d8);

        virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d9, d10);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r7);

        return;
    }
}
