public class net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility;

        $r1 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        net.sourceforge.plantuml.command.regex.RegexConcat $r10;

        $r0 = class "Lnet/sourceforge/plantuml/classdiagram/command/CommandHideShowByVisibility;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[7];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("COMMAND", "(hide|show)");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("VISIBILITY", "((?:public|private|protected|package)?(?:[,%s]+(?:public|private|protected|package))*)");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[4] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("PORTION", "(members?|attributes?|fields?|methods?)");

        $r2[5] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[6] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r10;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.UmlDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.UmlDiagram r0;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r1, $r5;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.classdiagram.ClassDiagram $r4;
        net.sourceforge.plantuml.LineLocation r6;

        r2 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility;

        r0 := @parameter0: net.sourceforge.plantuml.UmlDiagram;

        r6 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $z0 = r0 instanceof net.sourceforge.plantuml.classdiagram.ClassDiagram;

        if $z0 == 0 goto label1;

        $r4 = (net.sourceforge.plantuml.classdiagram.ClassDiagram) r0;

        $r5 = specialinvoke r2.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility: net.sourceforge.plantuml.command.CommandExecutionResult executeArgClass(net.sourceforge.plantuml.classdiagram.ClassDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r3);

        return $r5;

     label1:
        $r1 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r1;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeArgClass(net.sourceforge.plantuml.classdiagram.ClassDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, $r6, $r7, $r10, $r12;
        net.sourceforge.plantuml.cucadiagram.EntityPortion r3;
        java.util.EnumSet r4;
        java.util.StringTokenizer $r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.classdiagram.ClassDiagram r9;
        net.sourceforge.plantuml.command.CommandExecutionResult $r11;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility;

        r9 := @parameter0: net.sourceforge.plantuml.classdiagram.ClassDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("PORTION", 0);

        r3 = specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility: net.sourceforge.plantuml.cucadiagram.EntityPortion getEntityPortion(java.lang.String)>($r2);

        r4 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>(class "Lnet/sourceforge/plantuml/skin/VisibilityModifier;");

        $r5 = new java.util.StringTokenizer;

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("VISIBILITY", 0);

        $r7 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goLowerCase(java.lang.String)>($r6);

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r7, " ,");

     label1:
        $z0 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r12 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility: void addVisibilities(java.lang.String,net.sourceforge.plantuml.cucadiagram.EntityPortion,java.util.Set)>($r12, r3, r4);

        goto label1;

     label2:
        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COMMAND", 0);

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("show");

        virtualinvoke r9.<net.sourceforge.plantuml.classdiagram.ClassDiagram: void hideOrShow(java.util.Set,boolean)>(r4, $z1);

        $r11 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r11;
    }

    private void addVisibilities(java.lang.String, net.sourceforge.plantuml.cucadiagram.EntityPortion, java.util.Set)
    {
        java.lang.String r0;
        boolean $z0, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        net.sourceforge.plantuml.cucadiagram.EntityPortion r1, $r2, $r5, $r6, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r26;
        java.util.Set r3;
        net.sourceforge.plantuml.skin.VisibilityModifier $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility r27;

        r27 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.EntityPortion;

        r3 := @parameter2: java.util.Set;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("public");

        if $z0 == 0 goto label02;

        $r24 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r1 == $r24 goto label01;

        $r26 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        if r1 != $r26 goto label02;

     label01:
        $r25 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_FIELD>;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r25);

     label02:
        $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("public");

        if $z9 == 0 goto label04;

        $r21 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r1 == $r21 goto label03;

        $r23 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        if r1 != $r23 goto label04;

     label03:
        $r22 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PUBLIC_METHOD>;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r22);

     label04:
        $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("private");

        if $z10 == 0 goto label06;

        $r18 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r1 == $r18 goto label05;

        $r20 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        if r1 != $r20 goto label06;

     label05:
        $r19 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_FIELD>;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r19);

     label06:
        $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("private");

        if $z11 == 0 goto label08;

        $r15 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r1 == $r15 goto label07;

        $r17 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        if r1 != $r17 goto label08;

     label07:
        $r16 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PRIVATE_METHOD>;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r16);

     label08:
        $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("protected");

        if $z12 == 0 goto label10;

        $r12 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r1 == $r12 goto label09;

        $r14 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        if r1 != $r14 goto label10;

     label09:
        $r13 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_FIELD>;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r13);

     label10:
        $z13 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("protected");

        if $z13 == 0 goto label12;

        $r9 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r1 == $r9 goto label11;

        $r11 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        if r1 != $r11 goto label12;

     label11:
        $r10 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PROTECTED_METHOD>;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r10);

     label12:
        $z14 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z14 == 0 goto label14;

        $r6 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r1 == $r6 goto label13;

        $r8 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        if r1 != $r8 goto label14;

     label13:
        $r7 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_FIELD>;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label14:
        $z15 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z15 == 0 goto label16;

        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        if r1 == $r2 goto label15;

        $r5 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        if r1 != $r5 goto label16;

     label15:
        $r4 = <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier PACKAGE_PRIVATE_METHOD>;

        interfaceinvoke r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

     label16:
        return;
    }

    private net.sourceforge.plantuml.cucadiagram.EntityPortion getEntityPortion(java.lang.String)
    {
        java.lang.String r0, $r1, r2;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.cucadiagram.EntityPortion $r3, $r5, $r6;
        java.lang.IllegalArgumentException $r4;
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility r7;

        r7 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, 3);

        r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goLowerCase(java.lang.String)>($r1);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("met");

        if $z0 == 0 goto label1;

        $r6 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion METHOD>;

        return $r6;

     label1:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("mem");

        if $z1 == 0 goto label2;

        $r5 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion MEMBER>;

        return $r5;

     label2:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("att");

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("fie");

        if $z3 == 0 goto label4;

     label3:
        $r3 = <net.sourceforge.plantuml.cucadiagram.EntityPortion: net.sourceforge.plantuml.cucadiagram.EntityPortion FIELD>;

        return $r3;

     label4:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.UmlDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.UmlDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandHideShowByVisibility: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.UmlDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
