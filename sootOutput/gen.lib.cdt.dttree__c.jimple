public class gen.lib.cdt.dttree__c extends java.lang.Object
{
    public static smetana.core.CFunction dttree;

    public void <init>()
    {
        gen.lib.cdt.dttree__c r0;

        r0 := @this: gen.lib.cdt.dttree__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object dttree(h.ST_dt_s, smetana.core.__ptr__, int)
    {
        h.ST_dtlink_s $r0, $r31, $r33, $r34, $r36, $r37, $r41, $r64, $r65, $r67, $r68, $r76, $r78, $r92, $r93, $r94, $r97, $r98, $r104, $r106, $r107, $r108, $r110, $r111, r116, $r117, r119, r123, r124;
        h.ST_dt_s r2;
        h.ST_dtdisc_s r3;
        smetana.core.OFFSET r4, r5, $r81, $r88;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54;
        smetana.core.CFunction r6, $r12, $r18, $r23, $r24, $r27, $r42, $r48, $r53, $r54, $r57, $r79, $r80, $r85;
        h.ST_dtdata_s $r7, $r10, $r14, $r16, $r44, $r46, $r61, $r77, $r82, $r83, $r95, $r100, $r112;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        h.ST_dtmethod_s $r8, $r40, $r99, $r103;
        java.lang.UnsupportedOperationException $r9, $r11, $r13, $r30, $r38, $r39, $r43, $r63, $r73, $r75, $r87, $r101, $r113;
        gen.lib.cdt.dttree__c$has_root $r15, $r35, $r45, $r59, $r69, $r70, $r96;
        java.lang.Object[] $r17, $r26, $r47, $r56, $r84;
        smetana.core.size_t $r19, $r49;
        java.lang.Object $r20, $r28, $r50, $r58, $r60, $r71, r115, r122, $r125, r126, r128, r130, r131, r133, r134, r137;
        h.ST_dthold_s $r21, $r25, $r51, $r55;
        smetana.core.__ptr__ $r22, $r52, $r105, $r109, r114, $r127, $r139;
        gen.lib.cdt.dttree__c$no_root $r29, $r32, $r62, $r66, $r91;
        gen.lib.cdt.dttree__c$do_search $r72, $r74, $r102;
        java.lang.Throwable $r89;

        r2 := @parameter0: h.ST_dt_s;

        r114 := @parameter1: smetana.core.__ptr__;

        i4 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("abqfzg1d1vkzk51225tcdlik5", "dttree");

     label01:
        $r0 = new h.ST_dtlink_s;

        specialinvoke $r0.<h.ST_dtlink_s: void <init>()>();

        r115 = null;

        staticinvoke <gen.lib.cdt.dttree__c: void UNFLATTEN(h.ST_dt_s)>(r2);

        r3 = r2.<h.ST_dt_s: h.ST_dtdisc_s disc>;

        r4 = r3.<h.ST_dtdisc_s: smetana.core.OFFSET key>;

        i0 = r3.<h.ST_dtdisc_s: int size>;

        r5 = r3.<h.ST_dtdisc_s: smetana.core.OFFSET link>;

        r6 = r3.<h.ST_dtdisc_s: smetana.core.CFunction comparf>;

        $i1 = r2.<h.ST_dt_s: int type>;

        $i2 = $i1 & -32769;

        r2.<h.ST_dt_s: int type> = $i2;

        $r7 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        r116 = $r7.<h.ST_dtdata_s: h.ST_dtlink_s here>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>(r114);

        if $z0 == 0 goto label15;

        $z2 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>(r116);

        if $z2 != 0 goto label02;

        $i40 = i4 & 448;

        $z3 = staticinvoke <smetana.core.Macro: boolean N(int)>($i40);

        if $z3 == 0 goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("abqfzg1d1vkzk51225tcdlik5", "dttree");

        return null;

     label03:
        $i41 = i4 & 64;

        if $i41 == 0 goto label10;

        $r79 = r3.<h.ST_dtdisc_s: smetana.core.CFunction freef>;

        if $r79 != null goto label04;

        $r88 = r3.<h.ST_dtdisc_s: smetana.core.OFFSET link>;

        $i44 = virtualinvoke $r88.<smetana.core.OFFSET: int getSign()>();

        if $i44 >= 0 goto label08;

     label04:
        $r117 = r116.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        if $r117 == null goto label05;

        staticinvoke <smetana.core.Macro: void rrotate(h.ST_dtlink_s,h.ST_dtlink_s)>(r116, $r117);

        r116 = $r117;

        goto label04;

     label05:
        r119 = r116.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        $r80 = r3.<h.ST_dtdisc_s: smetana.core.CFunction freef>;

        if $r80 == null goto label06;

        $r87 = new java.lang.UnsupportedOperationException;

        specialinvoke $r87.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r87;

     label06:
        $r81 = r3.<h.ST_dtdisc_s: smetana.core.OFFSET link>;

        $i43 = virtualinvoke $r81.<smetana.core.OFFSET: int getSign()>();

        if $i43 >= 0 goto label07;

        $r85 = r2.<h.ST_dt_s: smetana.core.CFunction memoryf>;

        $r84 = newarray (java.lang.Object)[4];

        $r84[0] = r2;

        $r84[1] = r116;

        $r84[2] = null;

        $r84[3] = r3;

        interfaceinvoke $r85.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r84);

     label07:
        r116 = r119;

        if r119 != null goto label04;

     label08:
        $r82 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $r82.<h.ST_dtdata_s: int size> = 0;

        $r83 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $r83.<h.ST_dtdata_s: h.ST_dtlink_s here> = null;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("abqfzg1d1vkzk51225tcdlik5", "dttree");

        return null;

     label10:
        $i42 = i4 & 256;

        if $i42 == 0 goto label12;

     label11:
        $r78 = r116.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        if $r78 == null goto label13;

        staticinvoke <smetana.core.Macro: void lrotate(h.ST_dtlink_s,h.ST_dtlink_s)>(r116, $r78);

        r116 = $r78;

        goto label11;

     label12:
        $r76 = r116.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        if $r76 == null goto label13;

        staticinvoke <smetana.core.Macro: void rrotate(h.ST_dtlink_s,h.ST_dtlink_s)>(r116, $r76);

        r116 = $r76;

        goto label12;

     label13:
        $r77 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $r77.<h.ST_dtdata_s: h.ST_dtlink_s here> = r116;

        r122 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTOBJ(h.ST_dtlink_s,smetana.core.OFFSET)>(r116, r5);

     label14:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("abqfzg1d1vkzk51225tcdlik5", "dttree");

        return r122;

     label15:
        r123 = $r0;

        r124 = $r0;

     label16:
        $r8 = r2.<h.ST_dt_s: h.ST_dtmethod_s meth>;

        $i3 = $r8.<h.ST_dtmethod_s: int type>;

        if $i3 != 8 goto label17;

        $i39 = i4 & 4098;

        if $i39 == 0 goto label17;

        $r75 = new java.lang.UnsupportedOperationException;

        specialinvoke $r75.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r75;

     label17:
        $i5 = i4 & 2565;

        if $i5 == 0 goto label20;

        $i38 = i4 & 512;

        if $i38 == 0 goto label18;

        $r125 = r114;

        goto label19;

     label18:
        $r125 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTKEY(smetana.core.__ptr__,smetana.core.OFFSET)>(r114, r4);

     label19:
        r115 = $r125;

        if r116 == null goto label22;

        $r74 = new gen.lib.cdt.dttree__c$do_search;

        specialinvoke $r74.<gen.lib.cdt.dttree__c$do_search: void <init>()>();

        throw $r74;

     label20:
        $i6 = i4 & 32;

        if $i6 == 0 goto label21;

        $r73 = new java.lang.UnsupportedOperationException;

        specialinvoke $r73.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r73;

     label21:
        if r116 == null goto label22;

        $r71 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTOBJ(h.ST_dtlink_s,smetana.core.OFFSET)>(r116, r5);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r71, r114);

        if $z1 != 0 goto label22;

        r115 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTKEY(smetana.core.__ptr__,smetana.core.OFFSET)>(r114, r4);

        $r72 = new gen.lib.cdt.dttree__c$do_search;

        specialinvoke $r72.<gen.lib.cdt.dttree__c$do_search: void <init>()>();

        throw $r72;

     label22:
        goto label33;

     label23:
        $r102 := @caughtexception;

        $r103 = r2.<h.ST_dt_s: h.ST_dtmethod_s meth>;

        $i49 = $r103.<h.ST_dtmethod_s: int type>;

        if $i49 != 4 goto label24;

        $r112 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $i52 = $r112.<h.ST_dtdata_s: int minp>;

        if $i52 == 0 goto label24;

        $i53 = i4 & 516;

        if $i53 == 0 goto label24;

        $r113 = new java.lang.UnsupportedOperationException;

        specialinvoke $r113.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("do_search1");

        throw $r113;

     label24:
        r126 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTOBJ(h.ST_dtlink_s,smetana.core.OFFSET)>(r116, r5);

        $r127 = (smetana.core.__ptr__) r126;

        r128 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTKEY(smetana.core.__ptr__,smetana.core.OFFSET)>($r127, r4);

        $i54 = staticinvoke <gen.lib.cdt.dttree__c: int _DTCMP(h.ST_dt_s,java.lang.Object,java.lang.Object,h.ST_dtdisc_s,smetana.core.CFunction,int)>(r2, r115, r128, r3, r6, i0);

        if $i54 != 0 goto label25;

        goto label33;

     label25:
        if $i54 >= 0 goto label29;

        $r108 = r116.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        if $r108 == null goto label28;

        r130 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTOBJ(h.ST_dtlink_s,smetana.core.OFFSET)>($r108, r5);

        $r109 = (smetana.core.__ptr__) r130;

        r131 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTKEY(smetana.core.__ptr__,smetana.core.OFFSET)>($r109, r4);

        $i51 = staticinvoke <gen.lib.cdt.dttree__c: int _DTCMP(h.ST_dt_s,java.lang.Object,java.lang.Object,h.ST_dtdisc_s,smetana.core.CFunction,int)>(r2, r115, r131, r3, r6, i0);

        if $i51 >= 0 goto label26;

        staticinvoke <smetana.core.Macro: void rrotate(h.ST_dtlink_s,h.ST_dtlink_s)>(r116, $r108);

        r123 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s rlink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r123, $r108);

        $r111 = $r108.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        r116 = $r111;

        $z7 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r111);

        if $z7 == 0 goto label24;

        goto label33;

     label26:
        if $i51 != 0 goto label27;

        r123 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s rlink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r123, r116);

        r116 = $r108;

        goto label33;

     label27:
        r124 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s llink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r124, $r108);

        r123 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s rlink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r123, r116);

        $r110 = $r108.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        r116 = $r110;

        $z6 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r110);

        if $z6 == 0 goto label24;

        goto label33;

     label28:
        r123 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s rlink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r123, r116);

        r116 = null;

        goto label33;

     label29:
        $r104 = r116.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        if $r104 == null goto label32;

        r133 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTOBJ(h.ST_dtlink_s,smetana.core.OFFSET)>($r104, r5);

        $r105 = (smetana.core.__ptr__) r133;

        r134 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTKEY(smetana.core.__ptr__,smetana.core.OFFSET)>($r105, r4);

        $i50 = staticinvoke <gen.lib.cdt.dttree__c: int _DTCMP(h.ST_dt_s,java.lang.Object,java.lang.Object,h.ST_dtdisc_s,smetana.core.CFunction,int)>(r2, r115, r134, r3, r6, i0);

        if $i50 <= 0 goto label30;

        staticinvoke <smetana.core.Macro: void lrotate(h.ST_dtlink_s,h.ST_dtlink_s)>(r116, $r104);

        r124 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s llink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r124, $r104);

        $r107 = $r104.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        r116 = $r107;

        $z5 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r107);

        if $z5 == 0 goto label24;

        goto label33;

     label30:
        if $i50 != 0 goto label31;

        r124 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s llink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r124, r116);

        r116 = $r104;

        goto label33;

     label31:
        r123 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s rlink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r123, $r104);

        r124 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s llink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r124, r116);

        $r106 = $r104.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        r116 = $r106;

        $z4 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>($r106);

        if $z4 == 0 goto label24;

        goto label33;

     label32:
        r124 = staticinvoke <smetana.core.Macro: h.ST_dtlink_s llink____warning(h.ST_dtlink_s,h.ST_dtlink_s)>(r124, r116);

        r116 = null;

        goto label33;

     label33:
        if r116 == null goto label50;

        $i20 = r2.<h.ST_dt_s: int type>;

        $i21 = $i20 | 32768;

        r2.<h.ST_dt_s: int type> = $i21;

        $r36 = r116.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        r124.<h.ST_dtlink_s: h.ST_dtlink_s right> = $r36;

        $r37 = r116.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        r123.<h.ST_dtlink_s: h.ST_dtlink_s _left> = $r37;

        $i22 = i4 & 516;

        if $i22 == 0 goto label34;

        $r70 = new gen.lib.cdt.dttree__c$has_root;

        specialinvoke $r70.<gen.lib.cdt.dttree__c$has_root: void <init>()>();

        throw $r70;

     label34:
        $i23 = i4 & 8;

        if $i23 == 0 goto label38;

        $r64 = $r0.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        r116.<h.ST_dtlink_s: h.ST_dtlink_s _left> = $r64;

        r116.<h.ST_dtlink_s: h.ST_dtlink_s right> = null;

        $r0.<h.ST_dtlink_s: h.ST_dtlink_s right> = r116;

        $r65 = $r0.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        r116 = $r65;

        if $r65 == null goto label37;

     label35:
        $r67 = r116.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        if $r67 == null goto label36;

        staticinvoke <smetana.core.Macro: void rrotate(h.ST_dtlink_s,h.ST_dtlink_s)>(r116, $r67);

        r116 = $r67;

        goto label35;

     label36:
        $r68 = r116.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        $r0.<h.ST_dtlink_s: h.ST_dtlink_s _left> = $r68;

        $r69 = new gen.lib.cdt.dttree__c$has_root;

        specialinvoke $r69.<gen.lib.cdt.dttree__c$has_root: void <init>()>();

        throw $r69;

     label37:
        $r66 = new gen.lib.cdt.dttree__c$no_root;

        specialinvoke $r66.<gen.lib.cdt.dttree__c$no_root: void <init>()>();

        throw $r66;

     label38:
        $i24 = i4 & 16;

        if $i24 == 0 goto label39;

        $r63 = new java.lang.UnsupportedOperationException;

        specialinvoke $r63.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r63;

     label39:
        $i25 = i4 & 4098;

        if $i25 == 0 goto label41;

        $r60 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTOBJ(h.ST_dtlink_s,smetana.core.OFFSET)>(r116, r5);

        r114 = (smetana.core.__ptr__) $r60;

        $r61 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $i36 = $r61.<h.ST_dtdata_s: int size>;

        $i37 = $i36 - 1;

        $r61.<h.ST_dtdata_s: int size> = $i37;

        if $i37 >= 0 goto label40;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("//\t\t\t\tdt->data->size = -1;");

     label40:
        $r62 = new gen.lib.cdt.dttree__c$no_root;

        specialinvoke $r62.<gen.lib.cdt.dttree__c$no_root: void <init>()>();

        throw $r62;

     label41:
        $i26 = i4 & 2049;

        if $i26 == 0 goto label49;

        $r40 = r2.<h.ST_dt_s: h.ST_dtmethod_s meth>;

        $i28 = $r40.<h.ST_dtmethod_s: int type>;

        $i29 = $i28 & 4;

        if $i29 == 0 goto label42;

        $r59 = new gen.lib.cdt.dttree__c$has_root;

        specialinvoke $r59.<gen.lib.cdt.dttree__c$has_root: void <init>()>();

        throw $r59;

     label42:
        r116.<h.ST_dtlink_s: h.ST_dtlink_s _left> = null;

        $r41 = $r0.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        r116.<h.ST_dtlink_s: h.ST_dtlink_s right> = $r41;

        $r0.<h.ST_dtlink_s: h.ST_dtlink_s _left> = r116;

        $r42 = r3.<h.ST_dtdisc_s: smetana.core.CFunction makef>;

        if $r42 == null goto label43;

        $i35 = i4 & 1;

        if $i35 == 0 goto label43;

        $r57 = r3.<h.ST_dtdisc_s: smetana.core.CFunction makef>;

        $r56 = newarray (java.lang.Object)[3];

        $r56[0] = r2;

        $r56[1] = r114;

        $r56[2] = r3;

        $r58 = interfaceinvoke $r57.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r56);

        r114 = (smetana.core.__ptr__) $r58;

     label43:
        if r114 == null goto label46;

        $i33 = virtualinvoke r5.<smetana.core.OFFSET: int getSign()>();

        if $i33 < 0 goto label44;

        r116 = staticinvoke <gen.lib.cdt.dttree__c: h.ST_dtlink_s _DTLNK(smetana.core.__ptr__,smetana.core.OFFSET)>(r114, r5);

        goto label46;

     label44:
        $r48 = r2.<h.ST_dt_s: smetana.core.CFunction memoryf>;

        $r47 = newarray (java.lang.Object)[4];

        $r47[0] = r2;

        $r47[1] = null;

        $r49 = staticinvoke <smetana.core.JUtils: smetana.core.size_t sizeof(java.lang.Class)>(class "Lh/ST_dthold_s;");

        $r47[2] = $r49;

        $r47[3] = r3;

        $r50 = interfaceinvoke $r48.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r47);

        $r51 = (h.ST_dthold_s) $r50;

        $r52 = virtualinvoke $r51.<h.ST_dthold_s: smetana.core.__ptr__ castTo(java.lang.Class)>(class "Lh/ST_dtlink_s;");

        r116 = (h.ST_dtlink_s) $r52;

        if r116 == null goto label45;

        $r55 = (h.ST_dthold_s) r116;

        $r55.<h.ST_dthold_s: smetana.core.__ptr__ obj> = r114;

        goto label46;

     label45:
        $r53 = r3.<h.ST_dtdisc_s: smetana.core.CFunction makef>;

        if $r53 == null goto label46;

        $r54 = r3.<h.ST_dtdisc_s: smetana.core.CFunction freef>;

        if $r54 == null goto label46;

        $i34 = i4 & 1;

        if $i34 == 0 goto label46;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("(*disc->freef)(dt,obj,disc);");

     label46:
        if r116 == null goto label48;

        $r44 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $i30 = $r44.<h.ST_dtdata_s: int size>;

        if $i30 < 0 goto label47;

        $r46 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $i31 = $r46.<h.ST_dtdata_s: int size>;

        $i32 = $i31 + 1;

        $r46.<h.ST_dtdata_s: int size> = $i32;

     label47:
        $r45 = new gen.lib.cdt.dttree__c$has_root;

        specialinvoke $r45.<gen.lib.cdt.dttree__c$has_root: void <init>()>();

        throw $r45;

     label48:
        $r43 = new java.lang.UnsupportedOperationException;

        specialinvoke $r43.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("goto no_root");

        throw $r43;

     label49:
        $i27 = i4 & 32;

        if $i27 == 0 goto label65;

        $r39 = new java.lang.UnsupportedOperationException;

        specialinvoke $r39.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r39;

     label50:
        r123.<h.ST_dtlink_s: h.ST_dtlink_s _left> = null;

        r124.<h.ST_dtlink_s: h.ST_dtlink_s right> = null;

        $i7 = i4 & 8;

        if $i7 == 0 goto label54;

        $r31 = $r0.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        r116 = $r31;

        if $r31 == null goto label53;

     label51:
        $r33 = r116.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        if $r33 == null goto label52;

        staticinvoke <smetana.core.Macro: void rrotate(h.ST_dtlink_s,h.ST_dtlink_s)>(r116, $r33);

        r116 = $r33;

        goto label51;

     label52:
        $r34 = r116.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        $r0.<h.ST_dtlink_s: h.ST_dtlink_s _left> = $r34;

        $r35 = new gen.lib.cdt.dttree__c$has_root;

        specialinvoke $r35.<gen.lib.cdt.dttree__c$has_root: void <init>()>();

        throw $r35;

     label53:
        $r32 = new gen.lib.cdt.dttree__c$no_root;

        specialinvoke $r32.<gen.lib.cdt.dttree__c$no_root: void <init>()>();

        throw $r32;

     label54:
        $i8 = i4 & 16;

        if $i8 == 0 goto label55;

        $r30 = new java.lang.UnsupportedOperationException;

        specialinvoke $r30.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("goto dt_prev");

        throw $r30;

     label55:
        $i9 = i4 & 516;

        if $i9 == 0 goto label56;

        $r29 = new gen.lib.cdt.dttree__c$no_root;

        specialinvoke $r29.<gen.lib.cdt.dttree__c$no_root: void <init>()>();

        throw $r29;

     label56:
        $i10 = i4 & 2049;

        if $i10 == 0 goto label63;

        $r12 = r3.<h.ST_dtdisc_s: smetana.core.CFunction makef>;

        if $r12 == null goto label57;

        $i19 = i4 & 1;

        if $i19 == 0 goto label57;

        $r27 = r3.<h.ST_dtdisc_s: smetana.core.CFunction makef>;

        $r26 = newarray (java.lang.Object)[3];

        $r26[0] = r2;

        $r26[1] = r114;

        $r26[2] = r3;

        $r28 = interfaceinvoke $r27.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r26);

        r114 = (smetana.core.__ptr__) $r28;

     label57:
        if r114 == null goto label60;

        $i17 = virtualinvoke r5.<smetana.core.OFFSET: int getSign()>();

        if $i17 < 0 goto label58;

        r116 = staticinvoke <gen.lib.cdt.dttree__c: h.ST_dtlink_s _DTLNK(smetana.core.__ptr__,smetana.core.OFFSET)>(r114, r5);

        goto label60;

     label58:
        $r18 = r2.<h.ST_dt_s: smetana.core.CFunction memoryf>;

        $r17 = newarray (java.lang.Object)[4];

        $r17[0] = r2;

        $r17[1] = null;

        $r19 = staticinvoke <smetana.core.JUtils: smetana.core.size_t sizeof(java.lang.Class)>(class "Lh/ST_dthold_s;");

        $r17[2] = $r19;

        $r17[3] = r3;

        $r20 = interfaceinvoke $r18.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r17);

        $r21 = (h.ST_dthold_s) $r20;

        $r22 = virtualinvoke $r21.<h.ST_dthold_s: smetana.core.__ptr__ castTo(java.lang.Class)>(class "Lh/ST_dtlink_s;");

        r116 = (h.ST_dtlink_s) $r22;

        if r116 == null goto label59;

        $r25 = (h.ST_dthold_s) r116;

        $r25.<h.ST_dthold_s: smetana.core.__ptr__ obj> = r114;

        goto label60;

     label59:
        $r23 = r3.<h.ST_dtdisc_s: smetana.core.CFunction makef>;

        if $r23 == null goto label60;

        $r24 = r3.<h.ST_dtdisc_s: smetana.core.CFunction freef>;

        if $r24 == null goto label60;

        $i18 = i4 & 1;

        if $i18 == 0 goto label60;

        staticinvoke <smetana.core.Macro: smetana.core.__ptr__ UNSUPPORTED(java.lang.String)>("(*disc->freef)(dt,obj,disc);");

     label60:
        if r116 == null goto label62;

        $r14 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $i14 = $r14.<h.ST_dtdata_s: int size>;

        if $i14 < 0 goto label61;

        $r16 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $i15 = $r16.<h.ST_dtdata_s: int size>;

        $i16 = $i15 + 1;

        $r16.<h.ST_dtdata_s: int size> = $i16;

     label61:
        $r15 = new gen.lib.cdt.dttree__c$has_root;

        specialinvoke $r15.<gen.lib.cdt.dttree__c$has_root: void <init>()>();

        throw $r15;

     label62:
        $r13 = new java.lang.UnsupportedOperationException;

        specialinvoke $r13.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("goto no_root");

        throw $r13;

     label63:
        $i11 = i4 & 32;

        if $i11 == 0 goto label64;

        r116 = null;

        $r10 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $i12 = $r10.<h.ST_dtdata_s: int size>;

        $i13 = $i12 + 1;

        $r10.<h.ST_dtdata_s: int size> = $i13;

        $r11 = new java.lang.UnsupportedOperationException;

        specialinvoke $r11.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("goto has_root");

        throw $r11;

     label64:
        r114 = null;

        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("goto no_root");

        throw $r9;

     label65:
        goto label74;

     label66:
        $r96 := @caughtexception;

        $r97 = $r0.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        r116.<h.ST_dtlink_s: h.ST_dtlink_s _left> = $r97;

        $r98 = $r0.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        r116.<h.ST_dtlink_s: h.ST_dtlink_s right> = $r98;

        $r99 = r2.<h.ST_dt_s: h.ST_dtmethod_s meth>;

        $i46 = $r99.<h.ST_dtmethod_s: int type>;

        $i47 = $i46 & 8;

        if $i47 == 0 goto label67;

        $i48 = i4 & 516;

        if $i48 == 0 goto label67;

        $r101 = new java.lang.UnsupportedOperationException;

        specialinvoke $r101.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r101;

     label67:
        $r100 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $r100.<h.ST_dtdata_s: h.ST_dtlink_s here> = r116;

        r137 = staticinvoke <gen.lib.cdt.dttree__c: java.lang.Object _DTOBJ(h.ST_dtlink_s,smetana.core.OFFSET)>(r116, r5);

     label68:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("abqfzg1d1vkzk51225tcdlik5", "dttree");

        return r137;

     label69:
        $r91 := @caughtexception;

     label70:
        $r92 = r123.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        if $r92 == null goto label71;

        r123 = $r92;

        goto label70;

     label71:
        $r93 = $r0.<h.ST_dtlink_s: h.ST_dtlink_s right>;

        r123.<h.ST_dtlink_s: h.ST_dtlink_s _left> = $r93;

        $r95 = r2.<h.ST_dt_s: h.ST_dtdata_s data>;

        $r94 = $r0.<h.ST_dtlink_s: h.ST_dtlink_s _left>;

        $r95.<h.ST_dtdata_s: h.ST_dtlink_s here> = $r94;

        $i45 = i4 & 2;

        if $i45 == 0 goto label72;

        $r139 = r114;

        goto label73;

     label72:
        $r139 = null;

     label73:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("abqfzg1d1vkzk51225tcdlik5", "dttree");

        return $r139;

     label74:
        $r38 = new java.lang.UnsupportedOperationException;

        specialinvoke $r38.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r38;

     label75:
        $r89 := @caughtexception;

     label76:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("abqfzg1d1vkzk51225tcdlik5", "dttree");

        throw $r89;

        catch gen.lib.cdt.dttree__c$do_search from label17 to label22 with label23;
        catch gen.lib.cdt.dttree__c$has_root from label16 to label65 with label66;
        catch gen.lib.cdt.dttree__c$no_root from label16 to label65 with label69;
        catch java.lang.Throwable from label01 to label02 with label75;
        catch java.lang.Throwable from label03 to label09 with label75;
        catch java.lang.Throwable from label10 to label14 with label75;
        catch java.lang.Throwable from label15 to label68 with label75;
        catch java.lang.Throwable from label69 to label73 with label75;
        catch java.lang.Throwable from label74 to label76 with label75;
    }

    private static h.ST_dtlink_s _DTLNK(smetana.core.__ptr__, smetana.core.OFFSET)
    {
        smetana.core.__ptr__ r0, r3, r4;
        smetana.core.OFFSET r1;
        java.lang.Object $r2;
        h.ST_dtlink_s $r5;

        r0 := @parameter0: smetana.core.__ptr__;

        r1 := @parameter1: smetana.core.OFFSET;

        $r2 = interfaceinvoke r0.<smetana.core.__ptr__: java.lang.Object getTheField(smetana.core.OFFSET)>(r1);

        r3 = (smetana.core.__ptr__) $r2;

        r4 = interfaceinvoke r3.<smetana.core.__ptr__: smetana.core.__ptr__ castTo(java.lang.Class)>(class "Lh/ST_dtlink_s;");

        $r5 = (h.ST_dtlink_s) r4;

        return $r5;
    }

    private static int _DTCMP(h.ST_dt_s, java.lang.Object, java.lang.Object, h.ST_dtdisc_s, smetana.core.CFunction, int)
    {
        smetana.core.CFunction r0;
        java.lang.Object[] $r1;
        h.ST_dt_s r2;
        java.lang.Object r3, r4, $r6;
        h.ST_dtdisc_s r5;
        java.lang.Integer $r7;
        int $i0, i1, $i2;
        java.lang.UnsupportedOperationException $r8;
        smetana.core.CString $r9, $r10;

        r2 := @parameter0: h.ST_dt_s;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r5 := @parameter3: h.ST_dtdisc_s;

        r0 := @parameter4: smetana.core.CFunction;

        i1 := @parameter5: int;

        if r0 != null goto label2;

        if i1 > 0 goto label1;

        $r10 = (smetana.core.CString) r3;

        $r9 = (smetana.core.CString) r4;

        $i2 = staticinvoke <smetana.core.JUtils: int strcmp(smetana.core.CString,smetana.core.CString)>($r10, $r9);

        return $i2;

     label1:
        $r8 = new java.lang.UnsupportedOperationException;

        specialinvoke $r8.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("memcmp(key,k,sz))");

        throw $r8;

     label2:
        $r1 = newarray (java.lang.Object)[4];

        $r1[0] = r2;

        $r1[1] = r3;

        $r1[2] = r4;

        $r1[3] = r5;

        $r6 = interfaceinvoke r0.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r1);

        $r7 = (java.lang.Integer) $r6;

        $i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    private static java.lang.Object _DTOBJ(h.ST_dtlink_s, smetana.core.OFFSET)
    {
        smetana.core.OFFSET r0, $r2;
        int $i0;
        h.ST_dtlink_s r1;
        java.lang.Object $r3;
        h.ST_dthold_s $r4;
        smetana.core.__ptr__ $r5;

        r1 := @parameter0: h.ST_dtlink_s;

        r0 := @parameter1: smetana.core.OFFSET;

        $i0 = virtualinvoke r0.<smetana.core.OFFSET: int getSign()>();

        if $i0 >= 0 goto label1;

        $r4 = (h.ST_dthold_s) r1;

        $r5 = $r4.<h.ST_dthold_s: smetana.core.__ptr__ obj>;

        return $r5;

     label1:
        $r2 = virtualinvoke r0.<smetana.core.OFFSET: smetana.core.OFFSET negative()>();

        $r3 = virtualinvoke r1.<h.ST_dtlink_s: java.lang.Object getTheField(smetana.core.OFFSET)>($r2);

        return $r3;
    }

    private static java.lang.Object _DTKEY(smetana.core.__ptr__, smetana.core.OFFSET)
    {
        smetana.core.__ptr__ r0;
        smetana.core.OFFSET r1;
        java.lang.Object $r2;

        r0 := @parameter0: smetana.core.__ptr__;

        r1 := @parameter1: smetana.core.OFFSET;

        $r2 = interfaceinvoke r0.<smetana.core.__ptr__: java.lang.Object getTheField(smetana.core.OFFSET)>(r1);

        return $r2;
    }

    private static void UNFLATTEN(h.ST_dt_s)
    {
        h.ST_dt_s r0;
        h.ST_dtdata_s $r1;
        int $i0, $i1;

        r0 := @parameter0: h.ST_dt_s;

        $r1 = r0.<h.ST_dt_s: h.ST_dtdata_s data>;

        $i0 = $r1.<h.ST_dtdata_s: int type>;

        $i1 = $i0 & 4096;

        if $i1 == 0 goto label1;

        staticinvoke <gen.lib.cdt.dtrestore__c: int dtrestore(h.ST_dt_s,h.ST_dtlink_s)>(r0, null);

     label1:
        return;
    }

    static void <clinit>()
    {
        gen.lib.cdt.dttree__c$1 $r0;

        $r0 = new gen.lib.cdt.dttree__c$1;

        specialinvoke $r0.<gen.lib.cdt.dttree__c$1: void <init>(java.lang.String)>("dttree");

        <gen.lib.cdt.dttree__c: smetana.core.CFunction dttree> = $r0;

        return;
    }
}
