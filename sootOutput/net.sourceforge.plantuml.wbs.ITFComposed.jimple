class net.sourceforge.plantuml.wbs.ITFComposed extends net.sourceforge.plantuml.wbs.WBSTextBlock implements net.sourceforge.plantuml.wbs.ITF
{
    private final java.util.List left;
    private final java.util.List right;
    private final net.sourceforge.plantuml.graphic.TextBlock main;
    private final double delta1x;
    private final double marginBottom;

    private void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.wbs.WElement, java.util.List, java.util.List)
    {
        net.sourceforge.plantuml.wbs.ITFComposed r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.wbs.WElement r2;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        int $i0;
        java.util.List r4, r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6;
        net.sourceforge.plantuml.style.Style r7;
        net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft $r8;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.wbs.WElement;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: java.util.List;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.StyleBuilder getStyleBuilder()>();

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.wbs.WElement: int getLevel()>();

        specialinvoke r0.<net.sourceforge.plantuml.wbs.WBSTextBlock: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.StyleBuilder,int)>(r1, $r3, $i0);

        r0.<net.sourceforge.plantuml.wbs.ITFComposed: double delta1x> = 10.0;

        r0.<net.sourceforge.plantuml.wbs.ITFComposed: double delta1x> = 10.0;

        r0.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List left> = r4;

        r0.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List right> = r5;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock buildMain(net.sourceforge.plantuml.wbs.WElement)>(r2);

        r0.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock main> = $r6;

        r7 = virtualinvoke r2.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.Style getStyle()>();

        $r8 = virtualinvoke r7.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft getMargin()>();

        $d0 = virtualinvoke $r8.<net.sourceforge.plantuml.style.ClockwiseTopRightBottomLeft: double getBottom()>();

        r0.<net.sourceforge.plantuml.wbs.ITFComposed: double marginBottom> = $d0;

        return;
    }

    public static net.sourceforge.plantuml.wbs.ITF build2(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.wbs.WElement)
    {
        net.sourceforge.plantuml.wbs.WElement r0, r21, r23;
        boolean $z0, $z1, $z2;
        java.util.ArrayList $r1, $r3;
        net.sourceforge.plantuml.Direction $r5, $r7;
        java.util.Collection $r6, $r8;
        net.sourceforge.plantuml.wbs.ITFComposed $r9;
        net.sourceforge.plantuml.ISkinParam r10, $r17;
        java.lang.Object $r11, $r13;
        net.sourceforge.plantuml.wbs.ITF $r12, $r14;
        net.sourceforge.plantuml.wbs.ITFLeaf $r15;
        net.sourceforge.plantuml.style.Style $r16;
        net.sourceforge.plantuml.cucadiagram.Display $r18;
        net.sourceforge.plantuml.mindmap.IdeaShape $r19;
        java.util.Iterator r20, r22;

        r10 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r0 := @parameter1: net.sourceforge.plantuml.wbs.WElement;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: boolean isLeaf()>();

        if $z0 == 0 goto label1;

        $r15 = new net.sourceforge.plantuml.wbs.ITFLeaf;

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.Style getStyle()>();

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.ISkinParam withBackColor(net.sourceforge.plantuml.ISkinParam)>(r10);

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.cucadiagram.Display getLabel()>();

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.mindmap.IdeaShape getShape()>();

        specialinvoke $r15.<net.sourceforge.plantuml.wbs.ITFLeaf: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.mindmap.IdeaShape)>($r16, $r17, $r18, $r19);

        return $r15;

     label1:
        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r5 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: java.util.Collection getChildren(net.sourceforge.plantuml.Direction)>($r5);

        r20 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r13 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (net.sourceforge.plantuml.wbs.WElement) $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.wbs.ITF build2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.wbs.WElement)>(r10, r21);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label2;

     label3:
        $r7 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: java.util.Collection getChildren(net.sourceforge.plantuml.Direction)>($r7);

        r22 = interfaceinvoke $r8.<java.util.Collection: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r11 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (net.sourceforge.plantuml.wbs.WElement) $r11;

        $r12 = staticinvoke <net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.wbs.ITF build2(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.wbs.WElement)>(r10, r23);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label4;

     label5:
        $r9 = new net.sourceforge.plantuml.wbs.ITFComposed;

        specialinvoke $r9.<net.sourceforge.plantuml.wbs.ITFComposed: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.wbs.WElement,java.util.List,java.util.List)>(r10, r0, $r1, $r3);

        return $r9;
    }

    protected final double getw1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFComposed r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double d0, $d1, $d2, $d3, $d4;
        java.util.List $r4;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock main>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = d0 / 2.0;

        $r4 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List left>;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getCollWidth(net.sourceforge.plantuml.graphic.StringBounder,java.util.Collection)>(r1, $r4);

        $d3 = 10.0 + $d2;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d3);

        return $d4;
    }

    public final java.awt.geom.Point2D getT1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFComposed r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0;
        java.awt.geom.Point2D$Double $r2;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getw1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = new java.awt.geom.Point2D$Double;

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, 0.0);

        return $r2;
    }

    public final java.awt.geom.Point2D getT2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFComposed r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double d0, d1;
        java.awt.geom.Point2D$Double $r4;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock main>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getw1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r4 = new java.awt.geom.Point2D$Double;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, d1);

        return $r4;
    }

    public final java.awt.geom.Point2D getF1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFComposed r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1, $d2, d3, $d4, d5;
        java.awt.geom.Point2D$Double $r4;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock main>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getw1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 / 2.0;

        d3 = $d0 - $d2;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d5 = $d4 / 2.0;

        $r4 = new java.awt.geom.Point2D$Double;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d3, d5);

        return $r4;
    }

    public final java.awt.geom.Point2D getF2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFComposed r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1, $d2, d3, $d4, d5;
        java.awt.geom.Point2D$Double $r4;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock main>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getw1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 / 2.0;

        d3 = $d0 + $d2;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d5 = $d4 / 2.0;

        $r4 = new java.awt.geom.Point2D$Double;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d3, d5);

        return $r4;
    }

    public final net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wbs.ITFComposed r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16;
        java.util.List $r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.Dimension2DDouble $r8;

        r0 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock main>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r4 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List left>;

        $d2 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: double marginBottom>;

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getCollHeight(net.sourceforge.plantuml.graphic.StringBounder,java.util.Collection,double)>(r1, $r4, $d2);

        $r5 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List right>;

        $d4 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: double marginBottom>;

        $d5 = specialinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getCollHeight(net.sourceforge.plantuml.graphic.StringBounder,java.util.Collection,double)>(r1, $r5, $d4);

        $d6 = staticinvoke <java.lang.Math: double max(double,double)>($d3, $d5);

        d7 = $d1 + $d6;

        $d8 = d0 / 2.0;

        $r6 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List left>;

        $d9 = specialinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getCollWidth(net.sourceforge.plantuml.graphic.StringBounder,java.util.Collection)>(r1, $r6);

        $d10 = 10.0 + $d9;

        $d11 = staticinvoke <java.lang.Math: double max(double,double)>($d8, $d10);

        $d12 = d0 / 2.0;

        $r7 = r0.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List right>;

        $d13 = specialinvoke r0.<net.sourceforge.plantuml.wbs.ITFComposed: double getCollWidth(net.sourceforge.plantuml.graphic.StringBounder,java.util.Collection)>(r1, $r7);

        $d14 = 10.0 + $d13;

        $d15 = staticinvoke <java.lang.Math: double max(double,double)>($d12, $d14);

        d16 = $d11 + $d15;

        $r8 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r8.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d16, d7);

        return $r8;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r7, $r16, $r22;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.wbs.ITFComposed r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3, $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4, r12, r24;
        double $d0, $d1, $d2, d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, d25, d26, d27, d28, d29, d30;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r15, $r21;
        java.util.List $r8, $r9;
        boolean $z0, $z1;
        java.lang.Object $r10, $r17;
        net.sourceforge.plantuml.wbs.ITF r11, r18;
        java.awt.geom.Point2D $r13, $r14, $r19, $r20;
        java.util.Iterator r23, r25;

        r2 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock main>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.wbs.ITFComposed: double getw1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 / 2.0;

        d3 = $d0 - $d2;

        $r5 = r2.<net.sourceforge.plantuml.wbs.ITFComposed: net.sourceforge.plantuml.graphic.TextBlock main>;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d3);

        $r7 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r7);

        d4 = virtualinvoke r2.<net.sourceforge.plantuml.wbs.ITFComposed: double getw1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d25 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d26 = d25;

        $r8 = r2.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List left>;

        r23 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r17 = interfaceinvoke r23.<java.util.Iterator: java.lang.Object next()>();

        r18 = (net.sourceforge.plantuml.wbs.ITF) $r17;

        $d14 = r2.<net.sourceforge.plantuml.wbs.ITFComposed: double marginBottom>;

        d27 = d25 + $d14;

        r24 = interfaceinvoke r18.<net.sourceforge.plantuml.wbs.ITF: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r19 = interfaceinvoke r18.<net.sourceforge.plantuml.wbs.ITF: java.awt.geom.Point2D getF2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d15 = virtualinvoke $r19.<java.awt.geom.Point2D: double getY()>();

        d26 = d27 + $d15;

        $d16 = virtualinvoke r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d17 = d4 - $d16;

        $d18 = $d17 - 10.0;

        $r20 = interfaceinvoke r18.<net.sourceforge.plantuml.wbs.ITF: java.awt.geom.Point2D getF2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d19 = virtualinvoke $r20.<java.awt.geom.Point2D: double getX()>();

        $d20 = $d18 + $d19;

        virtualinvoke r2.<net.sourceforge.plantuml.wbs.ITFComposed: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double)>(r0, $d20, d26, d4, d26);

        $r21 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d21 = virtualinvoke r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d22 = d4 - $d21;

        $d23 = $d22 - 10.0;

        specialinvoke $r21.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d23, d27);

        $r22 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        interfaceinvoke r18.<net.sourceforge.plantuml.wbs.ITF: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r22);

        $d24 = virtualinvoke r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d25 = d27 + $d24;

        goto label1;

     label2:
        d28 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d29 = d28;

        $r9 = r2.<net.sourceforge.plantuml.wbs.ITFComposed: java.util.List right>;

        r25 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r25.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r25.<java.util.Iterator: java.lang.Object next()>();

        r11 = (net.sourceforge.plantuml.wbs.ITF) $r10;

        $d7 = r2.<net.sourceforge.plantuml.wbs.ITFComposed: double marginBottom>;

        d30 = d28 + $d7;

        r12 = interfaceinvoke r11.<net.sourceforge.plantuml.wbs.ITF: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r13 = interfaceinvoke r11.<net.sourceforge.plantuml.wbs.ITF: java.awt.geom.Point2D getF1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d8 = virtualinvoke $r13.<java.awt.geom.Point2D: double getY()>();

        d29 = d30 + $d8;

        $d9 = d4 + 10.0;

        $r14 = interfaceinvoke r11.<net.sourceforge.plantuml.wbs.ITF: java.awt.geom.Point2D getF1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d10 = virtualinvoke $r14.<java.awt.geom.Point2D: double getX()>();

        $d11 = $d9 + $d10;

        virtualinvoke r2.<net.sourceforge.plantuml.wbs.ITFComposed: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double)>(r0, d4, d29, $d11, d29);

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d12 = d4 + 10.0;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d12, d30);

        $r16 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        interfaceinvoke r11.<net.sourceforge.plantuml.wbs.ITF: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r16);

        $d13 = virtualinvoke r12.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d28 = d30 + $d13;

        goto label3;

     label4:
        $d5 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d6 = staticinvoke <java.lang.Math: double max(double,double)>(d26, d29);

        virtualinvoke r2.<net.sourceforge.plantuml.wbs.ITFComposed: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double)>(r0, d4, $d5, d4, $d6);

        return;
    }

    private final double getCollWidth(net.sourceforge.plantuml.graphic.StringBounder, java.util.Collection)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5;
        double $d0, d1;
        net.sourceforge.plantuml.wbs.ITFComposed r6;

        r6 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r0 := @parameter1: java.util.Collection;

        d1 = 0.0;

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.graphic.TextBlock) $r2;

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    private final double getCollHeight(net.sourceforge.plantuml.graphic.StringBounder, java.util.Collection, double)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;
        double d0, $d1, $d2, d3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5;
        net.sourceforge.plantuml.wbs.ITFComposed r6;

        r6 := @this: net.sourceforge.plantuml.wbs.ITFComposed;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r0 := @parameter1: java.util.Collection;

        d0 := @parameter2: double;

        d3 = 0.0;

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.graphic.TextBlock) $r2;

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d1 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = d0 + $d1;

        d3 = d3 + $d2;

        goto label1;

     label2:
        return d3;
    }
}
