public class net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath extends java.lang.Object implements java.awt.Shape, java.lang.Cloneable
{
    private java.awt.geom.GeneralPath path;
    private int numVals;
    private int numSeg;
    private double[] values;
    private int[] types;
    private double mx;
    private double my;
    private double cx;
    private double cy;

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.GeneralPath $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values> = null;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types> = null;

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path> = $r1;

        return;
    }

    public void <init>(int)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.GeneralPath $r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values> = null;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types> = null;

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>(int)>(i0);

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path> = $r1;

        return;
    }

    public void <init>(int, int)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.GeneralPath $r1;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values> = null;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types> = null;

        $r1 = new java.awt.geom.GeneralPath;

        specialinvoke $r1.<java.awt.geom.GeneralPath: void <init>(int,int)>(i0, i1);

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path> = $r1;

        return;
    }

    public void <init>(java.awt.Shape)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.Shape r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.Shape;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void append(java.awt.Shape,boolean)>(r1, 0);

        return;
    }

    public void arcTo(double, double, double, boolean, boolean, double, double)
    {
        double d0, d1, d2, d3, d4, d5, d6, $d7, $d8, $d9, $d12, $d13;
        byte $b0, $b1, $b2, $b19;
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        boolean z0, z1;
        java.awt.geom.Arc2D r1;
        java.awt.geom.AffineTransform r2;
        java.awt.Shape r3;
        java.awt.geom.GeneralPath $r4;
        int $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        int[] $r5;
        double[] $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d3 := @parameter1: double;

        d6 := @parameter2: double;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        d1 := @parameter5: double;

        d2 := @parameter6: double;

        $b0 = d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b1 = d3 cmpl 0.0;

        if $b1 != 0 goto label2;

     label1:
        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void lineTo(double,double)>(d1, d2);

        return;

     label2:
        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void checkMoveTo()>();

        d4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx>;

        d5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy>;

        $b2 = d4 cmpl d1;

        if $b2 != 0 goto label3;

        $b19 = d5 cmpl d2;

        if $b19 != 0 goto label3;

        return;

     label3:
        r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.Arc2D computeArc(double,double,double,double,double,boolean,boolean,double,double)>(d4, d5, d0, d3, d6, z0, z1, d1, d2);

        if r1 != null goto label4;

        return;

     label4:
        $d7 = staticinvoke <java.lang.Math: double toRadians(double)>(d6);

        $d8 = virtualinvoke r1.<java.awt.geom.Arc2D: double getCenterX()>();

        $d9 = virtualinvoke r1.<java.awt.geom.Arc2D: double getCenterY()>();

        r2 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d7, $d8, $d9);

        r3 = virtualinvoke r2.<java.awt.geom.AffineTransform: java.awt.Shape createTransformedShape(java.awt.Shape)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r4.<java.awt.geom.GeneralPath: void append(java.awt.Shape,boolean)>(r3, 1);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void makeRoom(int)>(7);

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i4 = $i3 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = $i4;

        $r5[$i3] = 4321;

        $r6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i6 = $i5 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i6;

        $r6[$i5] = d0;

        $r7 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i7 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i8 = $i7 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i8;

        $r7[$i7] = d3;

        $r8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i9 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i10 = $i9 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i10;

        $r8[$i9] = d6;

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i11 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i12 = $i11 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i12;

        if z0 == 0 goto label5;

        $d12 = 1.0;

        goto label6;

     label5:
        $d12 = 0.0;

     label6:
        $r9[$i11] = $d12;

        $r10 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i13 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i14 = $i13 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i14;

        if z1 == 0 goto label7;

        $d13 = 1.0;

        goto label8;

     label7:
        $d13 = 0.0;

     label8:
        $r10[$i13] = $d13;

        $r11 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i15 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i16 = $i15 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i16;

        $r11[$i15] = d1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx> = d1;

        $r12 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i17 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i18 = $i17 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i18;

        $r12[$i17] = d2;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy> = d2;

        return;
    }

    public static java.awt.geom.Arc2D computeArc(double, double, double, double, double, boolean, boolean, double, double)
    {
        double d0, d1, $d2, d3, d4, d5, $d6, d7, $d8, d9, d10, $d11, $d12, d13, $d14, $d15, $d16, d17, d18, d19, $d20, $d21, d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, d32, $d33, $d34, d35, $d36, $d37, $d38, d39, $d40, d41, $d42, d43, $d44, $d45, $d46, d47, $d48, $d49, $d50, d51, $d52, d53, $d54, d55, $d56, $d57, d58, $d59, $d60, d61, $d62, $d63, $d64, $d65, $d66, $d67, $d68, $d69, $d70, $d71, $d72, $d73, $d74, $d75, $d76, $d77, $d78, $d79, $d80, $d81, $d82, $d83, $d84, d85, d86, d87, d88, d89, d90, d91, d92, $d93, d94, d95, $d96, d98, $d100, d102, d103, d104, $d105, d107, d108, d109, $d110, $d111, $d112, $d113, $d114, $d115;
        byte $b0, $b1, $b2, $b3, $b4, $b5;
        boolean z0, z1;
        java.awt.geom.Arc2D$Double $r1;

        d0 := @parameter0: double;

        d4 := @parameter1: double;

        d85 := @parameter2: double;

        d86 := @parameter3: double;

        d87 := @parameter4: double;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        d1 := @parameter7: double;

        d5 := @parameter8: double;

        $d2 = d0 - d1;

        d3 = $d2 / 2.0;

        $d6 = d4 - d5;

        d7 = $d6 / 2.0;

        $d8 = d87 % 360.0;

        d88 = staticinvoke <java.lang.Math: double toRadians(double)>($d8);

        d9 = staticinvoke <java.lang.Math: double cos(double)>(d88);

        d10 = staticinvoke <java.lang.Math: double sin(double)>(d88);

        $d12 = d9 * d3;

        $d11 = d10 * d7;

        d13 = $d12 + $d11;

        $d14 = neg d10;

        $d16 = $d14 * d3;

        $d15 = d9 * d7;

        d17 = $d16 + $d15;

        d89 = staticinvoke <java.lang.Math: double abs(double)>(d85);

        d90 = staticinvoke <java.lang.Math: double abs(double)>(d86);

        d91 = d89 * d89;

        d92 = d90 * d90;

        d18 = d13 * d13;

        d19 = d17 * d17;

        $d21 = d18 / d91;

        $d20 = d19 / d92;

        d22 = $d21 + $d20;

        $b0 = d22 cmpl 1.0;

        if $b0 <= 0 goto label01;

        $d83 = staticinvoke <java.lang.Math: double sqrt(double)>(d22);

        d89 = $d83 * d89;

        $d84 = staticinvoke <java.lang.Math: double sqrt(double)>(d22);

        d90 = $d84 * d90;

        d91 = d89 * d89;

        d92 = d90 * d90;

     label01:
        if z0 != z1 goto label02;

        $d93 = -1.0;

        goto label03;

     label02:
        $d93 = 1.0;

     label03:
        d94 = $d93;

        $d24 = d91 * d92;

        $d23 = d91 * d19;

        $d26 = $d24 - $d23;

        $d25 = d92 * d18;

        $d30 = $d26 - $d25;

        $d28 = d91 * d19;

        $d27 = d92 * d18;

        $d29 = $d28 + $d27;

        d95 = $d30 / $d29;

        $b1 = d95 cmpg 0.0;

        if $b1 >= 0 goto label04;

        $d96 = 0.0;

        goto label05;

     label04:
        $d96 = d95;

     label05:
        $d31 = staticinvoke <java.lang.Math: double sqrt(double)>($d96);

        d32 = d94 * $d31;

        $d33 = d89 * d17;

        $d34 = $d33 / d90;

        d35 = d32 * $d34;

        $d36 = d90 * d13;

        $d37 = $d36 / d89;

        $d38 = neg $d37;

        d39 = d32 * $d38;

        $d40 = d0 + d1;

        d41 = $d40 / 2.0;

        $d42 = d4 + d5;

        d43 = $d42 / 2.0;

        $d45 = d9 * d35;

        $d44 = d10 * d39;

        $d46 = $d45 - $d44;

        d47 = d41 + $d46;

        $d49 = d10 * d35;

        $d48 = d9 * d39;

        $d50 = $d49 + $d48;

        d51 = d43 + $d50;

        $d52 = d13 - d35;

        d53 = $d52 / d89;

        $d54 = d17 - d39;

        d55 = $d54 / d90;

        $d56 = neg d13;

        $d57 = $d56 - d35;

        d58 = $d57 / d89;

        $d59 = neg d17;

        $d60 = $d59 - d39;

        d61 = $d60 / d90;

        $d63 = d53 * d53;

        $d62 = d55 * d55;

        $d64 = $d63 + $d62;

        d98 = staticinvoke <java.lang.Math: double sqrt(double)>($d64);

        $b2 = d55 cmpg 0.0;

        if $b2 >= 0 goto label06;

        $d100 = -1.0;

        goto label07;

     label06:
        $d100 = 1.0;

     label07:
        $d65 = d53 / d98;

        $d66 = staticinvoke <java.lang.Math: double acos(double)>($d65);

        $d67 = $d100 * $d66;

        d102 = staticinvoke <java.lang.Math: double toDegrees(double)>($d67);

        $d69 = d53 * d53;

        $d68 = d55 * d55;

        $d73 = $d69 + $d68;

        $d71 = d58 * d58;

        $d70 = d61 * d61;

        $d72 = $d71 + $d70;

        $d74 = $d73 * $d72;

        d103 = staticinvoke <java.lang.Math: double sqrt(double)>($d74);

        $d76 = d53 * d58;

        $d75 = d55 * d61;

        d104 = $d76 + $d75;

        $d78 = d53 * d61;

        $d77 = d55 * d58;

        $d79 = $d78 - $d77;

        $b3 = $d79 cmpg 0.0;

        if $b3 >= 0 goto label08;

        $d105 = -1.0;

        goto label09;

     label08:
        $d105 = 1.0;

     label09:
        $d80 = d104 / d103;

        $d81 = staticinvoke <java.lang.Math: double acos(double)>($d80);

        $d82 = $d105 * $d81;

        d107 = staticinvoke <java.lang.Math: double toDegrees(double)>($d82);

        if z1 != 0 goto label10;

        $b5 = d107 cmpl 0.0;

        if $b5 <= 0 goto label10;

        d107 = d107 - 360.0;

        goto label11;

     label10:
        if z1 == 0 goto label11;

        $b4 = d107 cmpg 0.0;

        if $b4 >= 0 goto label11;

        d107 = d107 + 360.0;

     label11:
        d108 = d107 % 360.0;

        d109 = d102 % 360.0;

        $r1 = new java.awt.geom.Arc2D$Double;

        specialinvoke $r1.<java.awt.geom.Arc2D$Double: void <init>()>();

        $d110 = d47 - d89;

        $r1.<java.awt.geom.Arc2D$Double: double x> = $d110;

        $d111 = d51 - d90;

        $r1.<java.awt.geom.Arc2D$Double: double y> = $d111;

        $d112 = d89 * 2.0;

        $r1.<java.awt.geom.Arc2D$Double: double width> = $d112;

        $d113 = d90 * 2.0;

        $r1.<java.awt.geom.Arc2D$Double: double height> = $d113;

        $d114 = neg d109;

        $r1.<java.awt.geom.Arc2D$Double: double start> = $d114;

        $d115 = neg d108;

        $r1.<java.awt.geom.Arc2D$Double: double extent> = $d115;

        return $r1;
    }

    public void moveTo(double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r1;
        double[] $r2, $r3;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void makeRoom(int)>(2);

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = $i1;

        $r1[$i0] = 0;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i3 = $i2 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i3;

        $r2[$i2] = d0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double mx> = d0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx> = d0;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i5 = $i4 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i5;

        $r3[$i4] = d1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double my> = d1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy> = d1;

        return;
    }

    public void lineTo(double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        double d0, d1;
        java.awt.geom.GeneralPath $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r2;
        double[] $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void checkMoveTo()>();

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void lineTo(double,double)>(d0, d1);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void makeRoom(int)>(2);

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = $i1;

        $r2[$i0] = 1;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i3 = $i2 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i3;

        $r3[$i2] = d0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx> = d0;

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i5 = $i4 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i5;

        $r4[$i4] = d1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy> = d1;

        return;
    }

    public void quadTo(double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        double d0, d1, d2, d3;
        java.awt.geom.GeneralPath $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r2;
        double[] $r3, $r4, $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void checkMoveTo()>();

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void quadTo(double,double,double,double)>(d0, d1, d2, d3);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void makeRoom(int)>(4);

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = $i1;

        $r2[$i0] = 2;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i3 = $i2 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i3;

        $r3[$i2] = d0;

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i5 = $i4 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i5;

        $r4[$i4] = d1;

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i7 = $i6 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i7;

        $r5[$i6] = d2;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx> = d2;

        $r6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i9 = $i8 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i9;

        $r6[$i8] = d3;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy> = d3;

        return;
    }

    public void curveTo(double, double, double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        double d0, d1, d2, d3, d4, d5;
        java.awt.geom.GeneralPath $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        int[] $r2;
        double[] $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void checkMoveTo()>();

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void curveTo(double,double,double,double,double,double)>(d0, d1, d2, d3, d4, d5);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void makeRoom(int)>(6);

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = $i1;

        $r2[$i0] = 3;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i3 = $i2 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i3;

        $r3[$i2] = d0;

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i5 = $i4 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i5;

        $r4[$i4] = d1;

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i7 = $i6 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i7;

        $r5[$i6] = d2;

        $r6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i9 = $i8 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i9;

        $r6[$i8] = d3;

        $r7 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i10 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i11 = $i10 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i11;

        $r7[$i10] = d4;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx> = d4;

        $r8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i12 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i13 = $i12 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i13;

        $r8[$i12] = d5;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy> = d5;

        return;
    }

    public void closePath()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r1, $r3, $r4;
        java.awt.geom.GeneralPath $r2;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        if $i0 == 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i6 = $i5 - 1;

        $i7 = $r3[$i6];

        if $i7 != 4 goto label1;

        return;

     label1:
        $i1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        if $i1 == 0 goto label2;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i3 = $i2 - 1;

        $i4 = $r1[$i3];

        if $i4 == 0 goto label2;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r2.<java.awt.geom.GeneralPath: void closePath()>();

     label2:
        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void makeRoom(int)>(0);

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i9 = $i8 + 1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = $i9;

        $r4[$i8] = 4;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double mx>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx> = $d0;

        $d1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double my>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy> = $d1;

        return;
    }

    protected void checkMoveTo()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        int[] $r1, $r2;
        double[] $r3, $r4, $r6, $r7;
        double $d0, $d1, $d2, $d3;
        java.awt.geom.GeneralPath $r5, $r8;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i2 = $i1 - 1;

        $i3 = $r1[$i2];

        lookupswitch($i3)
        {
            case 0: goto label2;
            case 4: goto label3;
            default: goto label5;
        };

     label2:
        $r8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i12 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i13 = $i12 - 2;

        $d3 = $r6[$i13];

        $r7 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i14 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i15 = $i14 - 1;

        $d2 = $r7[$i15];

        virtualinvoke $r8.<java.awt.geom.GeneralPath: void moveTo(double,double)>($d3, $d2);

        goto label5;

     label3:
        $i4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        if $i4 != 1 goto label4;

        return;

     label4:
        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $i6 = $i5 - 2;

        $i7 = $r2[$i6];

        if $i7 != 0 goto label5;

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i9 = $i8 - 2;

        $d1 = $r3[$i9];

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i10 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        $i11 = $i10 - 1;

        $d0 = $r4[$i11];

        virtualinvoke $r5.<java.awt.geom.GeneralPath: void moveTo(double,double)>($d1, $d0);

        goto label5;

     label5:
        return;
    }

    public void append(java.awt.Shape, boolean)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.Shape r1;
        java.awt.geom.AffineTransform $r2;
        java.awt.geom.PathIterator $r3;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.Shape;

        z0 := @parameter1: boolean;

        $r2 = new java.awt.geom.AffineTransform;

        specialinvoke $r2.<java.awt.geom.AffineTransform: void <init>()>();

        $r3 = interfaceinvoke r1.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>($r2);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void append(java.awt.geom.PathIterator,boolean)>($r3, z0);

        return;
    }

    public void append(java.awt.geom.PathIterator, boolean)
    {
        double[] r0;
        java.awt.geom.PathIterator r1;
        boolean $z0, $z1, z2;
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, d15, $d16, $d17;
        int $i0, i3;
        byte $b1, $b2;

        r2 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.PathIterator;

        z2 := @parameter1: boolean;

        r0 = newarray (double)[6];

     label01:
        $z0 = interfaceinvoke r1.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z0 != 0 goto label13;

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r0, 0.0);

        i3 = interfaceinvoke r1.<java.awt.geom.PathIterator: int currentSegment(double[])>(r0);

        interfaceinvoke r1.<java.awt.geom.PathIterator: void next()>();

        if z2 == 0 goto label06;

        $i0 = r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        if $i0 == 0 goto label06;

        if i3 != 0 goto label05;

        d14 = r0[0];

        d15 = r0[1];

        $d16 = r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx>;

        $b1 = d14 cmpl $d16;

        if $b1 != 0 goto label02;

        $d17 = r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy>;

        $b2 = d15 cmpl $d17;

        if $b2 == 0 goto label03;

     label02:
        i3 = 1;

        goto label05;

     label03:
        $z1 = interfaceinvoke r1.<java.awt.geom.PathIterator: boolean isDone()>();

        if $z1 == 0 goto label04;

        goto label13;

     label04:
        i3 = interfaceinvoke r1.<java.awt.geom.PathIterator: int currentSegment(double[])>(r0);

        interfaceinvoke r1.<java.awt.geom.PathIterator: void next()>();

     label05:
        z2 = 0;

     label06:
        tableswitch(i3)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label07;
            default: goto label12;
        };

     label07:
        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void closePath()>();

        goto label12;

     label08:
        $d13 = r0[0];

        $d12 = r0[1];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void moveTo(double,double)>($d13, $d12);

        goto label12;

     label09:
        $d11 = r0[0];

        $d10 = r0[1];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void lineTo(double,double)>($d11, $d10);

        goto label12;

     label10:
        $d9 = r0[0];

        $d8 = r0[1];

        $d7 = r0[2];

        $d6 = r0[3];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void quadTo(double,double,double,double)>($d9, $d8, $d7, $d6);

        goto label12;

     label11:
        $d5 = r0[0];

        $d4 = r0[1];

        $d3 = r0[2];

        $d2 = r0[3];

        $d1 = r0[4];

        $d0 = r0[5];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void curveTo(double,double,double,double,double,double)>($d5, $d4, $d3, $d2, $d1, $d0);

     label12:
        goto label01;

     label13:
        return;
    }

    public void append(net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator, boolean)
    {
        double[] r0;
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator r1;
        boolean $z0, $z1, z2, $z3, $z4;
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24;
        byte $b0, $b1, $b3, $b4;
        int $i2, i5;

        r2 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator;

        z2 := @parameter1: boolean;

        r0 = newarray (double)[7];

     label01:
        $z0 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator: boolean isDone()>();

        if $z0 != 0 goto label18;

        staticinvoke <java.util.Arrays: void fill(double[],double)>(r0, 0.0);

        i5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator: int currentSegment(double[])>(r0);

        interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator: void next()>();

        if z2 == 0 goto label06;

        $i2 = r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        if $i2 == 0 goto label06;

        if i5 != 0 goto label05;

        d16 = r0[0];

        d17 = r0[1];

        $d18 = r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx>;

        $b3 = d16 cmpl $d18;

        if $b3 != 0 goto label02;

        $d19 = r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy>;

        $b4 = d17 cmpl $d19;

        if $b4 == 0 goto label03;

     label02:
        i5 = 1;

        goto label05;

     label03:
        $z1 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator: boolean isDone()>();

        if $z1 == 0 goto label04;

        goto label18;

     label04:
        i5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator: int currentSegment(double[])>(r0);

        interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator: void next()>();

     label05:
        z2 = 0;

     label06:
        lookupswitch(i5)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label07;
            case 4321: goto label12;
            default: goto label17;
        };

     label07:
        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void closePath()>();

        goto label17;

     label08:
        $d15 = r0[0];

        $d14 = r0[1];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void moveTo(double,double)>($d15, $d14);

        goto label17;

     label09:
        $d13 = r0[0];

        $d12 = r0[1];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void lineTo(double,double)>($d13, $d12);

        goto label17;

     label10:
        $d11 = r0[0];

        $d10 = r0[1];

        $d9 = r0[2];

        $d8 = r0[3];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void quadTo(double,double,double,double)>($d11, $d10, $d9, $d8);

        goto label17;

     label11:
        $d7 = r0[0];

        $d6 = r0[1];

        $d5 = r0[2];

        $d4 = r0[3];

        $d3 = r0[4];

        $d2 = r0[5];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void curveTo(double,double,double,double,double,double)>($d7, $d6, $d5, $d4, $d3, $d2);

        goto label17;

     label12:
        $d20 = r0[0];

        $d21 = r0[1];

        $d22 = r0[2];

        $d0 = r0[3];

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label13;

        $z3 = 1;

        goto label14;

     label13:
        $z3 = 0;

     label14:
        $d1 = r0[4];

        $b1 = $d1 cmpl 0.0;

        if $b1 == 0 goto label15;

        $z4 = 1;

        goto label16;

     label15:
        $z4 = 0;

     label16:
        $d23 = r0[5];

        $d24 = r0[6];

        virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: void arcTo(double,double,double,boolean,boolean,double,double)>($d20, $d21, $d22, $z3, $z4, $d23, $d24);

     label17:
        goto label01;

     label18:
        return;
    }

    public int getWindingRule()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.GeneralPath $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $i0 = virtualinvoke $r1.<java.awt.geom.GeneralPath: int getWindingRule()>();

        return $i0;
    }

    public void setWindingRule(int)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        int i0;
        java.awt.geom.GeneralPath $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void setWindingRule(int)>(i0);

        return;
    }

    public java.awt.geom.Point2D getCurrentPoint()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        int $i0;
        java.awt.geom.Point2D$Double $r1;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r1 = new java.awt.geom.Point2D$Double;

        $d1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cx>;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double cy>;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        return $r1;
    }

    public void reset()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.GeneralPath $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        virtualinvoke $r1.<java.awt.geom.GeneralPath: void reset()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values> = null;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types> = null;

        return;
    }

    public void transform(java.awt.geom.AffineTransform)
    {
        java.awt.geom.AffineTransform r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r2;

        r2 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r0 := @parameter0: java.awt.geom.AffineTransform;

        $i0 = virtualinvoke r0.<java.awt.geom.AffineTransform: int getType()>();

        if $i0 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("ExtendedGeneralPaths can not be transformed");

        throw $r1;

     label1:
        return;
    }

    public java.awt.Shape createTransformedShape(java.awt.geom.AffineTransform)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.AffineTransform r1;
        java.awt.geom.GeneralPath $r2;
        java.awt.Shape $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = virtualinvoke $r2.<java.awt.geom.GeneralPath: java.awt.Shape createTransformedShape(java.awt.geom.AffineTransform)>(r1);

        return $r3;
    }

    public java.awt.Rectangle getBounds()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.GeneralPath $r1;
        java.awt.Rectangle $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r2 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.Rectangle getBounds()>();

        return $r2;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.GeneralPath $r1;
        java.awt.geom.Rectangle2D $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r2 = virtualinvoke $r1.<java.awt.geom.GeneralPath: java.awt.geom.Rectangle2D getBounds2D()>();

        return $r2;
    }

    public boolean contains(double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        double d0, d1;
        java.awt.geom.GeneralPath $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r1.<java.awt.geom.GeneralPath: boolean contains(double,double)>(d0, d1);

        return $z0;
    }

    public boolean contains(java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.Point2D r1;
        java.awt.geom.GeneralPath $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.Point2D;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r2.<java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Point2D)>(r1);

        return $z0;
    }

    public boolean contains(double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        double d0, d1, d2, d3;
        java.awt.geom.GeneralPath $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r1.<java.awt.geom.GeneralPath: boolean contains(double,double,double,double)>(d0, d1, d2, d3);

        return $z0;
    }

    public boolean contains(java.awt.geom.Rectangle2D)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.Rectangle2D r1;
        java.awt.geom.GeneralPath $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r2.<java.awt.geom.GeneralPath: boolean contains(java.awt.geom.Rectangle2D)>(r1);

        return $z0;
    }

    public boolean intersects(double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        double d0, d1, d2, d3;
        java.awt.geom.GeneralPath $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r1.<java.awt.geom.GeneralPath: boolean intersects(double,double,double,double)>(d0, d1, d2, d3);

        return $z0;
    }

    public boolean intersects(java.awt.geom.Rectangle2D)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.Rectangle2D r1;
        java.awt.geom.GeneralPath $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.Rectangle2D;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $z0 = virtualinvoke $r2.<java.awt.geom.GeneralPath: boolean intersects(java.awt.geom.Rectangle2D)>(r1);

        return $z0;
    }

    public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.AffineTransform r1;
        java.awt.geom.GeneralPath $r2;
        java.awt.geom.PathIterator $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = virtualinvoke $r2.<java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(r1);

        return $r3;
    }

    public java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.AffineTransform r1;
        double d0;
        java.awt.geom.GeneralPath $r2;
        java.awt.geom.PathIterator $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        d0 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = virtualinvoke $r2.<java.awt.geom.GeneralPath: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform,double)>(r1, d0);

        return $r3;
    }

    public net.sourceforge.plantuml.ugraphic.g2d.ExtendedPathIterator getExtendedPathIterator()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath$EPI $r0;
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $r0 = new net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath$EPI;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath$EPI: void <init>(net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath)>(r1);

        return $r0;
    }

    public java.lang.Object clone()
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0, r19;
        java.lang.Object $r1, $r3;
        java.awt.geom.GeneralPath $r2, $r4;
        double[] $r5, $r13, $r14, $r15, $r16, $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.CloneNotSupportedException $r18;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r19 = (net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath) $r1;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        $r3 = virtualinvoke $r2.<java.awt.geom.GeneralPath: java.lang.Object clone()>();

        $r4 = (java.awt.geom.GeneralPath) $r3;

        r19.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path> = $r4;

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        if $r5 == null goto label2;

        $r13 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i4 = lengthof $r13;

        $r14 = newarray (double)[$i4];

        r19.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values> = $r14;

        $r17 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $r16 = r19.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $r15 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i5 = lengthof $r15;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, $r16, 0, $i5);

     label2:
        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        r19.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = $i0;

        $r6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        if $r6 == null goto label3;

        $r7 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i2 = lengthof $r7;

        $r8 = newarray (int)[$i2];

        r19.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types> = $r8;

        $r11 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $r10 = r19.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i3 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, $i3);

     label3:
        $i1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        r19.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = $i1;

     label4:
        return r19;

     label5:
        $r18 := @caughtexception;

        virtualinvoke $r18.<java.lang.CloneNotSupportedException: void printStackTrace()>();

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label4 with label5;
    }

    private void makeRoom(int)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        double[] $r1, $r2, $r6, r7, $r8, $r9;
        int i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12;
        int[] $r3, $r4, $r5, $r10, $r11, r12;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        if $r1 != null goto label1;

        $i9 = 2 * i0;

        $r9 = newarray (double)[$i9];

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values> = $r9;

        $r10 = newarray (int)[2];

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types> = $r10;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals> = 0;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg> = 0;

        return;

     label1:
        $i1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        i2 = $i1 + i0;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i3 = lengthof $r2;

        if i2 <= $i3 goto label3;

        $r6 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i7 = lengthof $r6;

        i10 = $i7 * 2;

        if i10 >= i2 goto label2;

        i10 = i2;

     label2:
        r7 = newarray (double)[i10];

        $r8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        $i8 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numVals>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r7, 0, $i8);

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values> = r7;

     label3:
        $i11 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        $r11 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i12 = lengthof $r11;

        if $i11 != $i12 goto label4;

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i4 = lengthof $r3;

        $i5 = $i4 * 2;

        r12 = newarray (int)[$i5];

        $r5 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        $i6 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r12, 0, $i6);

        r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types> = r12;

     label4:
        return;
    }

    static int[] access$000(net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        int[] $r1;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int[] types>;

        return $r1;
    }

    static double[] access$100(net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        double[] $r1;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: double[] values>;

        return $r1;
    }

    static java.awt.geom.GeneralPath access$200(net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        java.awt.geom.GeneralPath $r1;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: java.awt.geom.GeneralPath path>;

        return $r1;
    }

    static int access$300(net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath)
    {
        net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath r0;
        int $i0;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.ExtendedGeneralPath: int numSeg>;

        return $i0;
    }
}
