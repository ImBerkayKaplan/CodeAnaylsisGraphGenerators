public class net.sourceforge.plantuml.wire.WBlock extends java.lang.Object
{
    private static final int STARTING_Y;
    private final java.lang.String name;
    private final double forcedWidth;
    private final double forcedHeight;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;
    private final java.util.List children;
    private final net.sourceforge.plantuml.ugraphic.UTranslate position;
    private net.sourceforge.plantuml.wire.WBlock parent;
    private net.sourceforge.plantuml.ugraphic.UTranslate cursor;
    private net.sourceforge.plantuml.wire.WBlock addedToCursor;
    private net.sourceforge.plantuml.ugraphic.UTranslate futureOutHorizontal;
    private net.sourceforge.plantuml.ugraphic.UTranslate futureOutVertical;
    private final java.util.List prints;

    public net.sourceforge.plantuml.ugraphic.UTranslate getAbsolutePosition(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.wire.WBlock r0, $r1, $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate r3, $r4, $r6, $r8, $r9;
        double $d0, $d1, $d2, $d3, d4, $d5, $d6, $d7, $d8, d9;
        java.lang.String r5, r7;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        r5 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock parent>;

        if $r1 != null goto label1;

        $r9 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate position>;

        return $r9;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock parent>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getAbsolutePosition(java.lang.String,java.lang.String)>("0", "0");

        $r4 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate position>;

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d2 = $d0 + $d1;

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: double parseWidth(java.lang.String)>(r5);

        d4 = $d2 + $d3;

        $r6 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate position>;

        $d5 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $d6 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $d7 = $d5 + $d6;

        $d8 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: double parseHeight(java.lang.String)>(r7);

        d9 = $d7 + $d8;

        $r8 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d4, d9);

        return $r8;
    }

    private double parseWidth(java.lang.String)
    {
        java.lang.String r0, r2, r3, $r6;
        boolean $z0, $z1;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10;
        java.util.StringTokenizer $r1;
        net.sourceforge.plantuml.wire.WBlock r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5, $r7;
        int $i0, $i1;

        r4 := @this: net.sourceforge.plantuml.wire.WBlock;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("%");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $d7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

        d10 = $d7 / 100.0;

        $r7 = specialinvoke r4.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getMaxDimension()>();

        $d8 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d9 = $d8 * d10;

        return $d9;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("%");

        if $z1 == 0 goto label2;

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, "%");

        r2 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r3 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r2);

        d2 = $d1 / 100.0;

        $r5 = specialinvoke r4.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getMaxDimension()>();

        $d3 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = $d3 * d2;

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

        $d6 = $d4 + $d5;

        return $d6;

     label2:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

        return $d0;
    }

    private double parseHeight(java.lang.String)
    {
        java.lang.String r0, r2, r3, $r6;
        boolean $z0, $z1;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10;
        java.util.StringTokenizer $r1;
        net.sourceforge.plantuml.wire.WBlock r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5, $r7;
        int $i0, $i1;

        r4 := @this: net.sourceforge.plantuml.wire.WBlock;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("%");

        if $z0 == 0 goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $d7 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r6);

        d10 = $d7 / 100.0;

        $r7 = specialinvoke r4.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getMaxDimension()>();

        $d8 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d9 = $d8 * d10;

        return $d9;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("%");

        if $z1 == 0 goto label2;

        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, "%");

        r2 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r3 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r2);

        d2 = $d1 / 100.0;

        $r5 = specialinvoke r4.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getMaxDimension()>();

        $d3 = virtualinvoke $r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d4 = $d3 * d2;

        $d5 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r3);

        $d6 = $d4 + $d5;

        return $d6;

     label2:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

        return $d0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        net.sourceforge.plantuml.wire.WBlock r1;
        java.lang.String $r2, $r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r1 := @this: net.sourceforge.plantuml.wire.WBlock;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.wire.WBlock: java.lang.String name>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate position>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void <init>(java.lang.String, net.sourceforge.plantuml.ugraphic.UTranslate, double, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.wire.WBlock r0;
        java.util.ArrayList $r1, $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, r6;
        java.lang.String r4;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.HColor r5;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        r4 := @parameter0: java.lang.String;

        r6 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r5 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List children> = $r1;

        $r2 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(10.0, 10.0);

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor> = $r2;

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock addedToCursor> = null;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List prints> = $r3;

        r0.<net.sourceforge.plantuml.wire.WBlock: java.lang.String name> = r4;

        r0.<net.sourceforge.plantuml.wire.WBlock: double forcedWidth> = d0;

        r0.<net.sourceforge.plantuml.wire.WBlock: double forcedHeight> = d1;

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.color.HColor color> = r5;

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate position> = r6;

        return;
    }

    private net.sourceforge.plantuml.wire.WBlock getChildByName(java.lang.String)
    {
        net.sourceforge.plantuml.wire.WBlock r0, r4;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.String r5, $r6;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List children>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.wire.WBlock) $r3;

        $r6 = specialinvoke r4.<net.sourceforge.plantuml.wire.WBlock: java.lang.String getName()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public net.sourceforge.plantuml.wire.WBlock getBlock(java.lang.String)
    {
        java.lang.String r0, $r2, $r4;
        int i0, $i1;
        net.sourceforge.plantuml.wire.WBlock r1, r3, $r5, $r6;

        r1 := @this: net.sourceforge.plantuml.wire.WBlock;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        if i0 != -1 goto label1;

        $r6 = specialinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getChildByName(java.lang.String)>(r0);

        return $r6;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r3 = specialinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getChildByName(java.lang.String)>($r2);

        if r3 != null goto label2;

        return null;

     label2:
        $i1 = i0 + 1;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getBlock(java.lang.String)>($r4);

        return $r5;
    }

    private java.lang.String getName()
    {
        net.sourceforge.plantuml.wire.WBlock r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        $r1 = r0.<net.sourceforge.plantuml.wire.WBlock: java.lang.String name>;

        return $r1;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult newColumn(int)
    {
        int i0, $i1;
        net.sourceforge.plantuml.wire.WBlock r0, $r1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        r3 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getNaturalDimension()>();

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 + 10.0;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, 10.0);

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor> = $r4;

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock addedToCursor> = null;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r5;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getLastChild()>();

        $i1 = i0 - 1;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult newColumn(int)>($i1);

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult wgoto(int, double, double)
    {
        int i0, $i1;
        net.sourceforge.plantuml.wire.WBlock r0, $r1;
        double d0, d1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        if i0 != 0 goto label1;

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d1);

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor> = $r3;

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock addedToCursor> = null;

        $r4 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r4;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getLastChild()>();

        $i1 = i0 - 1;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult wgoto(int,double,double)>($i1, d0, d1);

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult wmove(int, double, double)
    {
        int i0, $i1;
        net.sourceforge.plantuml.wire.WBlock r0, $r1;
        double d0, d1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r2, $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        if i0 != 0 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor>;

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d1);

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r3);

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor> = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r6;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getLastChild()>();

        $i1 = i0 - 1;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult wmove(int,double,double)>($i1, d0, d1);

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult print(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ISkinParam, int, java.lang.String)
    {
        int i0, $i1;
        net.sourceforge.plantuml.wire.WBlock r0, $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ISkinParam r3;
        java.lang.String r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5, $r14;
        net.sourceforge.plantuml.wire.WPrint $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r11, $r12, $r13;
        net.sourceforge.plantuml.cucadiagram.Display $r8;
        java.util.List $r10;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        i0 := @parameter2: int;

        r4 := @parameter3: java.lang.String;

        if i0 != 0 goto label1;

        $r6 = new net.sourceforge.plantuml.wire.WPrint;

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getNextPosition()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r4);

        specialinvoke $r6.<net.sourceforge.plantuml.wire.WPrint: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.UTranslate,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.Display)>(r3, $r7, null, $r8);

        $r10 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List prints>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r11 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor>;

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.wire.WPrint: double getHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        $r13 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r12);

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor> = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r14;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getLastChild()>();

        $i1 = i0 - 1;

        $r5 = virtualinvoke $r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult print(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam,int,java.lang.String)>(r2, r3, $i1, r4);

        return $r5;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addBlock(int, java.lang.String, double, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        java.lang.String r0;
        boolean $z0;
        net.sourceforge.plantuml.wire.WBlock r1, $r2, $r8, r18;
        int i0, $i1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4, $r14, $r15;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        java.util.List $r13;
        java.lang.IllegalArgumentException $r16;

        r1 := @this: net.sourceforge.plantuml.wire.WBlock;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z0 == 0 goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r16;

     label1:
        $r2 = specialinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getChildByName(java.lang.String)>(r0);

        if $r2 == null goto label2;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Component exists already");

        return $r15;

     label2:
        if i0 != 0 goto label3;

        $r5 = r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor>;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(10.0);

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r6);

        r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor> = $r7;

        $r8 = new net.sourceforge.plantuml.wire.WBlock;

        $r9 = specialinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getNextPosition()>();

        specialinvoke $r8.<net.sourceforge.plantuml.wire.WBlock: void <init>(java.lang.String,net.sourceforge.plantuml.ugraphic.UTranslate,double,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r0, $r9, d0, d1, r3);

        $r10 = r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor>;

        $r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(10.0);

        $r12 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r11);

        r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor> = $r12;

        r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock addedToCursor> = $r8;

        $r13 = r1.<net.sourceforge.plantuml.wire.WBlock: java.util.List children>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r8.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock parent> = r1;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r14;

     label3:
        r18 = specialinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock getLastChild()>();

        $i1 = i0 - 1;

        $r4 = virtualinvoke r18.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.command.CommandExecutionResult addBlock(int,java.lang.String,double,double,net.sourceforge.plantuml.ugraphic.color.HColor)>($i1, r0, d0, d1, r3);

        return $r4;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getNextPosition()
    {
        net.sourceforge.plantuml.wire.WBlock r0, $r1, $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r5, $r6, $r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        $r1 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock addedToCursor>;

        if $r1 == null goto label1;

        $r3 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock addedToCursor>;

        r4 = specialinvoke $r3.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getMaxDimension()>();

        $r5 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor>;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r6);

        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor> = $r7;

     label1:
        r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.wire.WBlock addedToCursor> = null;

        $r2 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate cursor>;

        return $r2;
    }

    private net.sourceforge.plantuml.wire.WBlock getLastChild()
    {
        net.sourceforge.plantuml.wire.WBlock r0, $r5;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        $r1 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List children>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List children>;

        $r2 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List children>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (net.sourceforge.plantuml.wire.WBlock) $r4;

        return $r5;
    }

    public void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wire.WBlock r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r15;
        net.sourceforge.plantuml.ugraphic.UFont r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r5;
        java.lang.CharSequence[] $r7;
        java.lang.String $r8, $r9;
        net.sourceforge.plantuml.cucadiagram.Display r10;
        net.sourceforge.plantuml.SpriteContainerEmpty $r11;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r12;
        net.sourceforge.plantuml.graphic.TextBlock r13;
        net.sourceforge.plantuml.ugraphic.UTranslate $r14;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: void drawBox(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(12);

        $r3 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        specialinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>(r2, $r4, $r5, 0);

        $r7 = newarray (java.lang.CharSequence)[1];

        $r8 = r0.<net.sourceforge.plantuml.wire.WBlock: java.lang.String name>;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(char,char)>(95, 32);

        $r7[0] = $r9;

        r10 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r7);

        $r12 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r11 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r11.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        r13 = virtualinvoke r10.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r3, $r12, $r11);

        $r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(5.0);

        $r15 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        interfaceinvoke r13.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r15);

        return;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getBlack()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0, $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.wire.WBlock r3;

        r3 := @this: net.sourceforge.plantuml.wire.WBlock;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>($r0);

        return $r2;
    }

    private void drawBox(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wire.WBlock r0, r21;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r12, $r13;
        java.lang.String $r2;
        int $i0;
        java.util.List $r3, $r19;
        boolean $z0, $z1;
        java.lang.Object $r4, $r7;
        net.sourceforge.plantuml.ugraphic.UChange $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, $r9, r15, r16, r18;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        net.sourceforge.plantuml.ugraphic.URectangle $r10;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r11;
        net.sourceforge.plantuml.ugraphic.UBackground $r14;
        java.util.Iterator r20, r22;
        net.sourceforge.plantuml.wire.WPrint r23;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        r15 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        r16 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = r0.<net.sourceforge.plantuml.wire.WBlock: java.lang.String name>;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r10 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getMaxDimension()>();

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>($r11);

        r18 = r16;

        $r12 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        if $r12 == null goto label1;

        $r13 = r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r18 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

     label1:
        interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

     label2:
        $r19 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List children>;

        r20 = interfaceinvoke $r19.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r7 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (net.sourceforge.plantuml.wire.WBlock) $r7;

        $r8 = r21.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate position>;

        $r9 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        virtualinvoke r21.<net.sourceforge.plantuml.wire.WBlock: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

        goto label3;

     label4:
        $r3 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List prints>;

        r22 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (net.sourceforge.plantuml.wire.WPrint) $r4;

        $r5 = virtualinvoke r23.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.ugraphic.UChange getPosition()>();

        $r6 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        virtualinvoke r23.<net.sourceforge.plantuml.wire.WPrint: void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)>($r6);

        goto label5;

     label6:
        return;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D getMaxDimension()
    {
        net.sourceforge.plantuml.wire.WBlock r0;
        java.util.List $r1;
        int $i0;
        double $d0, d1, $d2, $d4, $d5, $d6, $d7, $d8;
        byte $b1, $b2, $b3;
        net.sourceforge.plantuml.Dimension2DDouble $r2, $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        $r1 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List children>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $d4 = r0.<net.sourceforge.plantuml.wire.WBlock: double forcedWidth>;

        $b3 = $d4 cmpl 0.0;

        if $b3 == 0 goto label1;

        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d6 = r0.<net.sourceforge.plantuml.wire.WBlock: double forcedWidth>;

        $d5 = r0.<net.sourceforge.plantuml.wire.WBlock: double forcedHeight>;

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d6, $d5);

        return $r4;

     label1:
        $r3 = specialinvoke r0.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getNaturalDimension()>();

        return $r3;

     label2:
        $d0 = r0.<net.sourceforge.plantuml.wire.WBlock: double forcedWidth>;

        $b1 = $d0 cmpl 0.0;

        if $b1 != 0 goto label3;

        $d7 = 100.0;

        goto label4;

     label3:
        $d7 = r0.<net.sourceforge.plantuml.wire.WBlock: double forcedWidth>;

     label4:
        d1 = $d7;

        $d2 = r0.<net.sourceforge.plantuml.wire.WBlock: double forcedHeight>;

        $b2 = $d2 cmpl 0.0;

        if $b2 != 0 goto label5;

        $d8 = 100.0;

        goto label6;

     label5:
        $d8 = r0.<net.sourceforge.plantuml.wire.WBlock: double forcedHeight>;

     label6:
        $r2 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r2.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d1, $d8);

        return $r2;
    }

    private net.sourceforge.plantuml.awt.geom.Dimension2D getNaturalDimension()
    {
        net.sourceforge.plantuml.wire.WBlock r0, r5;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        net.sourceforge.plantuml.Dimension2DDouble $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r8;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, d8, d9;

        r0 := @this: net.sourceforge.plantuml.wire.WBlock;

        d8 = 0.0;

        d9 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.wire.WBlock: java.util.List children>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.wire.WBlock) $r4;

        r6 = specialinvoke r5.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.awt.geom.Dimension2D getMaxDimension()>();

        $r7 = r5.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate position>;

        $d0 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d1 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 + $d1;

        $d3 = $d2 + 10.0;

        d8 = staticinvoke <java.lang.Math: double max(double,double)>(d8, $d3);

        $r8 = r5.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate position>;

        $d4 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $d5 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d6 = $d4 + $d5;

        $d7 = $d6 + 10.0;

        d9 = staticinvoke <java.lang.Math: double max(double,double)>(d9, $d7);

        goto label1;

     label2:
        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d8, d9);

        return $r3;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getNextOutHorizontal(java.lang.String, java.lang.String, net.sourceforge.plantuml.wire.WLinkType)
    {
        java.lang.String r0, r4;
        net.sourceforge.plantuml.wire.WBlock r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, r5, $r6, $r7;
        net.sourceforge.plantuml.wire.WLinkType r3;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.wire.WBlock;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r3 := @parameter2: net.sourceforge.plantuml.wire.WLinkType;

        if r0 == null goto label1;

        if r4 == null goto label1;

        r5 = virtualinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getAbsolutePosition(java.lang.String,java.lang.String)>(r0, r4);

        goto label3;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate futureOutHorizontal>;

        if $r2 != null goto label2;

        r5 = virtualinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getAbsolutePosition(java.lang.String,java.lang.String)>("100%", "5");

        goto label3;

     label2:
        r5 = r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate futureOutHorizontal>;

     label3:
        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.wire.WLinkType: double spaceForNext()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        $r7 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r6);

        r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate futureOutHorizontal> = $r7;

        return r5;
    }

    public net.sourceforge.plantuml.ugraphic.UTranslate getNextOutVertical(java.lang.String, java.lang.String, net.sourceforge.plantuml.wire.WLinkType)
    {
        java.lang.String r0, r4;
        net.sourceforge.plantuml.wire.WBlock r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, r5, $r6, $r7;
        net.sourceforge.plantuml.wire.WLinkType r3;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.wire.WBlock;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r3 := @parameter2: net.sourceforge.plantuml.wire.WLinkType;

        if r0 == null goto label1;

        if r4 == null goto label1;

        r5 = virtualinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getAbsolutePosition(java.lang.String,java.lang.String)>(r0, r4);

        goto label3;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate futureOutVertical>;

        if $r2 != null goto label2;

        r5 = virtualinvoke r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate getAbsolutePosition(java.lang.String,java.lang.String)>("5", "100%");

        goto label3;

     label2:
        r5 = r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate futureOutVertical>;

     label3:
        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.wire.WLinkType: double spaceForNext()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        $r7 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r6);

        r1.<net.sourceforge.plantuml.wire.WBlock: net.sourceforge.plantuml.ugraphic.UTranslate futureOutVertical> = $r7;

        return r5;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.wire.WBlock: int STARTING_Y> = 10;

        return;
    }
}
