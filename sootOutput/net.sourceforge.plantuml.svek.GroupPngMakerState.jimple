public final class net.sourceforge.plantuml.svek.GroupPngMakerState extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram;
    private final net.sourceforge.plantuml.cucadiagram.IGroup group;
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;
    private final net.sourceforge.plantuml.skin.rose.Rose rose;

    public void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram, net.sourceforge.plantuml.cucadiagram.IGroup, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.GroupPngMakerState r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.cucadiagram.IGroup r4;
        boolean $z0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: net.sourceforge.plantuml.svek.GroupPngMakerState;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r4 := @parameter1: net.sourceforge.plantuml.cucadiagram.IGroup;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.skin.rose.Rose rose> = $r1;

        r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram> = r2;

        r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r3;

        r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group> = r4;

        $z0 = interfaceinvoke r4.<net.sourceforge.plantuml.cucadiagram.IGroup: boolean isGroup()>();

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        return;
    }

    private java.util.List getPureInnerLinks()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.svek.GroupPngMakerState r2;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r3;
        java.util.List $r4;
        java.util.Iterator r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        net.sourceforge.plantuml.cucadiagram.Link r7;
        net.sourceforge.plantuml.cucadiagram.IGroup $r8;

        r2 := @this: net.sourceforge.plantuml.svek.GroupPngMakerState;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.util.List getLinks()>();

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.cucadiagram.Link) $r6;

        $r8 = r2.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $z1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityUtils: boolean isPureInnerLink12(net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.Link)>($r8, r7);

        if $z1 == 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r7);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    private net.sourceforge.plantuml.style.Style getStyleStateHeader()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.style.StyleSignature $r6, $r10;
        net.sourceforge.plantuml.svek.GroupPngMakerState r7;
        net.sourceforge.plantuml.cucadiagram.IGroup $r8;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r9;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r11;
        net.sourceforge.plantuml.ISkinParam $r12;
        net.sourceforge.plantuml.style.StyleBuilder $r13;
        net.sourceforge.plantuml.style.Style $r14;

        r7 := @this: net.sourceforge.plantuml.svek.GroupPngMakerState;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stateDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName state>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName header>;

        $r0[4] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        $r8 = r7.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r10 = virtualinvoke $r6.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature 'with'(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r9);

        $r11 = r7.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r14 = virtualinvoke $r10.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r13);

        return $r14;
    }

    private net.sourceforge.plantuml.style.Style getStyleState()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5, $r9;
        net.sourceforge.plantuml.svek.GroupPngMakerState r6;
        net.sourceforge.plantuml.cucadiagram.IGroup $r7;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r8;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r10;
        net.sourceforge.plantuml.ISkinParam $r11;
        net.sourceforge.plantuml.style.StyleBuilder $r12;
        net.sourceforge.plantuml.style.Style $r13;

        r6 := @this: net.sourceforge.plantuml.svek.GroupPngMakerState;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stateDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName state>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        $r7 = r6.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r9 = virtualinvoke $r5.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature 'with'(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r8);

        $r10 = r6.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r13 = virtualinvoke $r9.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r12);

        return $r13;
    }

    public net.sourceforge.plantuml.svek.IEntityImage getImage()
    {
        net.sourceforge.plantuml.svek.GroupPngMakerState r0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1, $r6, $r9, $r14, $r15, $r41, $r44, $r47, $r57, $r67, $r76, $r81, $r85, $r100, $r102, $r103, $r107, $r110, $r111;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r3, $r17, $r20, $r22, $r24, $r25, $r28, $r32, $r34, $r36, $r84, $r98;
        net.sourceforge.plantuml.ISkinParam r4, $r86, $r99;
        boolean $z0, $z1, $z2, z3, z4, $z5, $z6, $z7, $z8, $z9;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5, r96;
        net.sourceforge.plantuml.FontParam $r7;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r8, $r10, r50, r53, $r69;
        net.sourceforge.plantuml.graphic.TextBlock r11, r52;
        java.util.List r12;
        net.sourceforge.plantuml.cucadiagram.dot.DotData $r13;
        java.util.Collection $r16, $r82;
        net.sourceforge.plantuml.UmlDiagramType $r18;
        net.sourceforge.plantuml.svek.GroupPngMakerState$InnerGroupHierarchy $r19;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper $r21;
        net.sourceforge.plantuml.cucadiagram.entity.EntityFactory $r23, $r33;
        net.sourceforge.plantuml.svek.DotMode $r26;
        java.lang.String $r27, $r78;
        net.sourceforge.plantuml.Pragma $r29, $r37;
        net.sourceforge.plantuml.svek.GeneralImageBuilder $r31;
        net.sourceforge.plantuml.core.UmlSource $r35;
        net.sourceforge.plantuml.style.SName $r38;
        net.sourceforge.plantuml.graphic.StringBounder $r39;
        net.sourceforge.plantuml.cucadiagram.GroupType $r42, $r43, $r45, $r46, $r77;
        net.sourceforge.plantuml.graphic.color.Colors $r48, $r104, $r108;
        net.sourceforge.plantuml.graphic.color.ColorType $r49, $r105;
        net.sourceforge.plantuml.ugraphic.color.HColor r51, r101, r106;
        java.lang.String[] $r54, $r79;
        net.sourceforge.plantuml.svek.InnerStateAutonom $r56;
        net.sourceforge.plantuml.Url $r58;
        net.sourceforge.plantuml.ugraphic.UStroke $r59, r109;
        net.sourceforge.plantuml.style.Style $r60, $r62, $r70, $r87, $r90, $r93;
        net.sourceforge.plantuml.ColorParam $r61, $r68;
        net.sourceforge.plantuml.style.PName $r63, $r71, $r88, $r91;
        net.sourceforge.plantuml.style.Value $r64, $r72, $r89, $r92;
        net.sourceforge.plantuml.api.ThemeStyle $r65, $r73, $r94;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r66, $r74, $r95;
        java.lang.UnsupportedOperationException $r75;
        net.sourceforge.plantuml.svek.IEntityImage $r80, $r112;
        int $i0, $i1;
        net.sourceforge.plantuml.svek.image.EntityImageState $r83;
        double d0, d1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r97;

        r0 := @this: net.sourceforge.plantuml.svek.GroupPngMakerState;

        $r1 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r3 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        d0 = 0.0;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label01;

        $r87 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.style.Style getStyleState()>();

        $r88 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r89 = virtualinvoke $r87.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r88);

        d1 = interfaceinvoke $r89.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        $r90 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.style.Style getStyleState()>();

        $r91 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r92 = virtualinvoke $r90.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r91);

        d0 = interfaceinvoke $r92.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        $r93 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.style.Style getStyleStateHeader()>();

        $r94 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r95 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r96 = virtualinvoke $r93.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r94, $r95);

        goto label02;

     label01:
        d1 = 25.0;

        $r5 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r7 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam STATE>;

        $r6 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r8 = interfaceinvoke $r6.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        specialinvoke $r5.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r4, $r7, $r8);

        r96 = $r5;

        $r9 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $z1 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r10);

        if $z1 == 0 goto label02;

        d0 = 3.0;

     label02:
        $r97 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r98 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r99 = virtualinvoke $r98.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r11 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r96, $r97, $r99);

        $r100 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $i1 = interfaceinvoke $r100.<net.sourceforge.plantuml.cucadiagram.IGroup: int size()>();

        if $i1 != 0 goto label03;

        $r81 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r82 = interfaceinvoke $r81.<net.sourceforge.plantuml.cucadiagram.IGroup: java.util.Collection getChildren()>();

        $i0 = interfaceinvoke $r82.<java.util.Collection: int size()>();

        if $i0 != 0 goto label03;

        $r83 = new net.sourceforge.plantuml.svek.image.EntityImageState;

        $r85 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r84 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r86 = virtualinvoke $r84.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r83.<net.sourceforge.plantuml.svek.image.EntityImageState: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>($r85, $r86);

        return $r83;

     label03:
        r12 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: java.util.List getPureInnerLinks()>();

        $r13 = new net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r15 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r14 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r16 = interfaceinvoke $r14.<net.sourceforge.plantuml.cucadiagram.IGroup: java.util.Collection getLeafsDirect()>();

        $r17 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $r19 = new net.sourceforge.plantuml.svek.GroupPngMakerState$InnerGroupHierarchy;

        specialinvoke $r19.<net.sourceforge.plantuml.svek.GroupPngMakerState$InnerGroupHierarchy: void <init>(net.sourceforge.plantuml.svek.GroupPngMakerState)>(r0);

        $r20 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ugraphic.color.ColorMapper getColorMapper()>();

        $r22 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r23 = virtualinvoke $r22.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory getEntityFactory()>();

        $r24 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $z2 = virtualinvoke $r24.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: boolean isHideEmptyDescriptionForState()>();

        $r26 = <net.sourceforge.plantuml.svek.DotMode: net.sourceforge.plantuml.svek.DotMode NORMAL>;

        $r25 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r27 = virtualinvoke $r25.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: java.lang.String getNamespaceSeparator()>();

        $r28 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r29 = virtualinvoke $r28.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.Pragma getPragma()>();

        specialinvoke $r13.<net.sourceforge.plantuml.cucadiagram.dot.DotData: void <init>(net.sourceforge.plantuml.cucadiagram.IGroup,java.util.List,java.util.Collection,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.GroupHierarchy,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.cucadiagram.entity.EntityFactory,boolean,net.sourceforge.plantuml.svek.DotMode,java.lang.String,net.sourceforge.plantuml.Pragma)>($r15, r12, $r16, $r18, r4, $r19, $r21, $r23, $z2, $r26, $r27, $r29);

        $r31 = new net.sourceforge.plantuml.svek.GeneralImageBuilder;

        $r32 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r33 = virtualinvoke $r32.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.cucadiagram.entity.EntityFactory getEntityFactory()>();

        $r34 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r35 = virtualinvoke $r34.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.core.UmlSource getSource()>();

        $r36 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        $r37 = virtualinvoke $r36.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.Pragma getPragma()>();

        $r39 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r38 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stateDiagram>;

        specialinvoke $r31.<net.sourceforge.plantuml.svek.GeneralImageBuilder: void <init>(boolean,net.sourceforge.plantuml.cucadiagram.dot.DotData,net.sourceforge.plantuml.cucadiagram.entity.EntityFactory,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.Pragma,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.style.SName)>(0, $r13, $r33, $r35, $r37, $r39, $r38);

        $r41 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r42 = interfaceinvoke $r41.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r43 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType CONCURRENT_STATE>;

        if $r42 != $r43 goto label04;

        $r79 = newarray (java.lang.String)[0];

        $r80 = virtualinvoke $r31.<net.sourceforge.plantuml.svek.GeneralImageBuilder: net.sourceforge.plantuml.svek.IEntityImage buildImage(net.sourceforge.plantuml.BaseFile,java.lang.String[])>(null, $r79);

        return $r80;

     label04:
        $r44 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r45 = interfaceinvoke $r44.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r46 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType STATE>;

        if $r45 == $r46 goto label05;

        $r75 = new java.lang.UnsupportedOperationException;

        $r76 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r77 = interfaceinvoke $r76.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.GroupType getGroupType()>();

        $r78 = virtualinvoke $r77.<net.sourceforge.plantuml.cucadiagram.GroupType: java.lang.String toString()>();

        specialinvoke $r75.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r78);

        throw $r75;

     label05:
        $r47 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r48 = interfaceinvoke $r47.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r49 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        r101 = virtualinvoke $r48.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r49);

        if r101 != null goto label07;

        $z8 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z8 == 0 goto label06;

        $r70 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.style.Style getStyleState()>();

        $r71 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r72 = virtualinvoke $r70.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r71);

        $r73 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r74 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r101 = interfaceinvoke $r72.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r73, $r74);

        goto label07;

     label06:
        $r68 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam stateBorder>;

        $r67 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r69 = interfaceinvoke $r67.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        r101 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r68, $r69);

     label07:
        $r102 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        r50 = interfaceinvoke $r102.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $r103 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r104 = interfaceinvoke $r103.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r105 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        r51 = virtualinvoke $r104.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r105);

        if r51 != null goto label09;

        $z7 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z7 == 0 goto label08;

        $r62 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.style.Style getStyleState()>();

        $r63 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r64 = virtualinvoke $r62.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r63);

        $r65 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r66 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r106 = interfaceinvoke $r64.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r65, $r66);

        goto label10;

     label08:
        $r61 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam stateBackground>;

        r106 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r61, r50);

        goto label10;

     label09:
        r106 = r51;

     label10:
        $r107 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r108 = interfaceinvoke $r107.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        r109 = virtualinvoke $r108.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.UStroke getSpecificLineStroke()>();

        if r109 != null goto label12;

        $z6 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z6 == 0 goto label11;

        $r60 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.style.Style getStyleState()>();

        r109 = virtualinvoke $r60.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label12;

     label11:
        $r59 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r59.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        r109 = $r59;

     label12:
        $r110 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        r52 = staticinvoke <net.sourceforge.plantuml.svek.GeneralImageBuilder: net.sourceforge.plantuml.graphic.TextBlock stateHeader(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ISkinParam)>($r110, null, r4);

        $r111 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        r53 = interfaceinvoke $r111.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        if r53 == null goto label13;

        $z5 = virtualinvoke r53.<net.sourceforge.plantuml.cucadiagram.Stereotype: boolean isWithOOSymbol()>();

        if $z5 == 0 goto label13;

        $z9 = 1;

        goto label14;

     label13:
        $z9 = 0;

     label14:
        z3 = $z9;

        z4 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: boolean containsOnlyConcurrentStates(net.sourceforge.plantuml.cucadiagram.dot.DotData)>($r13);

        if z4 == 0 goto label15;

        $r112 = specialinvoke r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.svek.IEntityImage buildImageForConcurrentState(net.sourceforge.plantuml.cucadiagram.dot.DotData)>($r13);

        goto label16;

     label15:
        $r54 = newarray (java.lang.String)[0];

        $r112 = virtualinvoke $r31.<net.sourceforge.plantuml.svek.GeneralImageBuilder: net.sourceforge.plantuml.svek.IEntityImage buildImage(net.sourceforge.plantuml.BaseFile,java.lang.String[])>(null, $r54);

     label16:
        $r56 = new net.sourceforge.plantuml.svek.InnerStateAutonom;

        $r57 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r58 = interfaceinvoke $r57.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.Url getUrl99()>();

        specialinvoke $r56.<net.sourceforge.plantuml.svek.InnerStateAutonom: void <init>(net.sourceforge.plantuml.svek.IEntityImage,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.Url,boolean,net.sourceforge.plantuml.ugraphic.UStroke,double,double)>($r112, r11, r52, r101, r106, $r58, z3, r109, d1, d0);

        return $r56;
    }

    private net.sourceforge.plantuml.svek.IEntityImage buildImageForConcurrentState(net.sourceforge.plantuml.cucadiagram.dot.DotData)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.dot.DotData r2;
        java.util.Collection $r3;
        java.util.Iterator r4;
        boolean $z0;
        net.sourceforge.plantuml.svek.CucaDiagramFileMakerSvek2InternalImage $r5;
        net.sourceforge.plantuml.cucadiagram.IGroup $r6, $r9;
        char $c0;
        net.sourceforge.plantuml.ISkinParam $r7;
        net.sourceforge.plantuml.svek.GroupPngMakerState r8;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r10;
        java.lang.Object $r11;
        net.sourceforge.plantuml.cucadiagram.ILeaf r12;
        net.sourceforge.plantuml.svek.IEntityImage $r13;

        r8 := @this: net.sourceforge.plantuml.svek.GroupPngMakerState;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.Collection getLeafs()>();

        r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r12 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r11;

        $r13 = interfaceinvoke r12.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.svek.IEntityImage getSvekImage()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r5 = new net.sourceforge.plantuml.svek.CucaDiagramFileMakerSvek2InternalImage;

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.cucadiagram.IGroup getTopParent()>();

        $c0 = interfaceinvoke $r6.<net.sourceforge.plantuml.cucadiagram.IGroup: char getConcurrentSeparator()>();

        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.cucadiagram.dot.DotData: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = r8.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        specialinvoke $r5.<net.sourceforge.plantuml.svek.CucaDiagramFileMakerSvek2InternalImage: void <init>(java.util.List,char,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r0, $c0, $r7, $r10);

        return $r5;
    }

    private boolean containsOnlyConcurrentStates(net.sourceforge.plantuml.cucadiagram.dot.DotData)
    {
        net.sourceforge.plantuml.cucadiagram.dot.DotData r0;
        java.util.Collection $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.cucadiagram.ILeaf r4;
        net.sourceforge.plantuml.cucadiagram.IGroup $r5;
        net.sourceforge.plantuml.cucadiagram.LeafType $r6, $r7;
        net.sourceforge.plantuml.svek.GroupPngMakerState r8;

        r8 := @this: net.sourceforge.plantuml.svek.GroupPngMakerState;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.dot.DotData;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.DotData: java.util.Collection getLeafs()>();

        r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        $z1 = r4 instanceof net.sourceforge.plantuml.cucadiagram.IGroup;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r5 = (net.sourceforge.plantuml.cucadiagram.IGroup) r4;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.cucadiagram.IGroup: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType STATE_CONCURRENT>;

        if $r6 == $r7 goto label3;

        return 0;

     label3:
        goto label1;

     label4:
        return 1;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ColorParam, net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        net.sourceforge.plantuml.svek.GroupPngMakerState r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.cucadiagram.Stereotype r3;
        net.sourceforge.plantuml.ColorParam[] $r4;
        net.sourceforge.plantuml.ColorParam r5;
        net.sourceforge.plantuml.skin.rose.Rose $r6;
        net.sourceforge.plantuml.ugraphic.color.HColor $r7;

        r0 := @this: net.sourceforge.plantuml.svek.GroupPngMakerState;

        r5 := @parameter0: net.sourceforge.plantuml.ColorParam;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r4 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r4[0] = r5;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>(r2, r3, $r4);

        return $r7;
    }

    static net.sourceforge.plantuml.cucadiagram.IGroup access$000(net.sourceforge.plantuml.svek.GroupPngMakerState)
    {
        net.sourceforge.plantuml.svek.GroupPngMakerState r0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r1;

        r0 := @parameter0: net.sourceforge.plantuml.svek.GroupPngMakerState;

        $r1 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.IGroup group>;

        return $r1;
    }

    static net.sourceforge.plantuml.cucadiagram.CucaDiagram access$100(net.sourceforge.plantuml.svek.GroupPngMakerState)
    {
        net.sourceforge.plantuml.svek.GroupPngMakerState r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r1;

        r0 := @parameter0: net.sourceforge.plantuml.svek.GroupPngMakerState;

        $r1 = r0.<net.sourceforge.plantuml.svek.GroupPngMakerState: net.sourceforge.plantuml.cucadiagram.CucaDiagram diagram>;

        return $r1;
    }
}
