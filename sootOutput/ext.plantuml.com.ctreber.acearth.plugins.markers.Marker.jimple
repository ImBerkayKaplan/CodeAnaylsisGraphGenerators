public class ext.plantuml.com.ctreber.acearth.plugins.markers.Marker extends java.lang.Object
{
    private static final int MARKER_SIZE;
    private static final int MarkerAlignDefault;
    private static final int MarkerAlignLeft;
    private static final int MarkerAlignRight;
    private static final int MarkerAlignAbove;
    private static final int MarkerAlignBelow;
    private ext.plantuml.com.ctreber.acearth.util.Coordinate fCoordinate;
    private java.lang.String fLabel;
    private int fAlign;

    private void <init>(ext.plantuml.com.ctreber.acearth.util.Coordinate, java.lang.String, int)
    {
        ext.plantuml.com.ctreber.acearth.plugins.markers.Marker r0;
        ext.plantuml.com.ctreber.acearth.util.Coordinate r1;
        java.lang.String r2;
        int i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.plugins.markers.Marker;

        r1 := @parameter0: ext.plantuml.com.ctreber.acearth.util.Coordinate;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: ext.plantuml.com.ctreber.acearth.util.Coordinate fCoordinate> = r1;

        r0.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: java.lang.String fLabel> = r2;

        r0.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int fAlign> = i0;

        return;
    }

    private static ext.plantuml.com.ctreber.acearth.plugins.markers.Marker createFromLine(java.lang.String)
    {
        java.lang.String r0, $r3, $r5, r7, r10;
        java.util.List r1;
        java.lang.Object $r2, $r4, $r6, $r9;
        double d0, d1;
        int $i0;
        ext.plantuml.com.ctreber.acearth.plugins.markers.Marker $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        byte b1;
        ext.plantuml.com.ctreber.acearth.util.Coordinate $r11;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <ext.plantuml.com.ctreber.acearth.util.StringParser: java.util.List parse(java.lang.String)>(r0);

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(1);

        $r5 = (java.lang.String) $r4;

        d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r5);

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(2);

        r7 = (java.lang.String) $r6;

        b1 = 0;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 < 4 goto label4;

        $r9 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(3);

        r10 = (java.lang.String) $r9;

        $z0 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("left");

        if $z0 == 0 goto label1;

        b1 = 1;

     label1:
        $z1 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("right");

        if $z1 == 0 goto label2;

        b1 = 2;

     label2:
        $z2 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("above");

        if $z2 == 0 goto label3;

        b1 = 3;

     label3:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("below");

        if $z3 == 0 goto label4;

        b1 = 4;

     label4:
        $r11 = new ext.plantuml.com.ctreber.acearth.util.Coordinate;

        specialinvoke $r11.<ext.plantuml.com.ctreber.acearth.util.Coordinate: void <init>(double,double)>(d0, d1);

        $z4 = virtualinvoke $r11.<ext.plantuml.com.ctreber.acearth.util.Coordinate: boolean check()>();

        if $z4 != 0 goto label5;

        return null;

     label5:
        $r8 = new ext.plantuml.com.ctreber.acearth.plugins.markers.Marker;

        specialinvoke $r8.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: void <init>(ext.plantuml.com.ctreber.acearth.util.Coordinate,java.lang.String,int)>($r11, r7, b1);

        return $r8;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r8;
        ext.plantuml.com.ctreber.acearth.plugins.markers.Marker r1;
        java.lang.String $r2, $r9;
        ext.plantuml.com.ctreber.acearth.util.Coordinate $r5;
        int $i0;

        r1 := @this: ext.plantuml.com.ctreber.acearth.plugins.markers.Marker;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: java.lang.String fLabel>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r5 = r1.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: ext.plantuml.com.ctreber.acearth.util.Coordinate fCoordinate>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), align: ");

        $i0 = r1.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int fAlign>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public void render(ext.plantuml.com.ctreber.acearth.gui.PixelCanvas, ext.plantuml.com.ctreber.acearth.projection.Projection)
    {
        ext.plantuml.com.ctreber.acearth.projection.Projection r0;
        ext.plantuml.com.ctreber.acearth.plugins.markers.Marker r1;
        ext.plantuml.com.ctreber.acearth.util.Coordinate $r2;
        ext.plantuml.com.ctreber.acearth.util.Point3D $r3, r4;
        boolean $z0;
        ext.plantuml.com.ctreber.acearth.util.Point2D $r5, r6;
        double $d0, $d1, $d2;
        int i0, i1, $i2, $i3, $i4, $i5;
        ext.plantuml.com.ctreber.acearth.gui.PixelCanvas r7;
        java.awt.Graphics2D r8;
        java.awt.Color $r9;
        java.lang.String $r10, $r12;
        java.awt.Font $r11;
        byte $b6;

        r1 := @this: ext.plantuml.com.ctreber.acearth.plugins.markers.Marker;

        r7 := @parameter0: ext.plantuml.com.ctreber.acearth.gui.PixelCanvas;

        r0 := @parameter1: ext.plantuml.com.ctreber.acearth.projection.Projection;

        $r2 = r1.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: ext.plantuml.com.ctreber.acearth.util.Coordinate fCoordinate>;

        $r3 = virtualinvoke $r2.<ext.plantuml.com.ctreber.acearth.util.Coordinate: ext.plantuml.com.ctreber.acearth.util.Point3D getPoint3D()>();

        r4 = virtualinvoke r0.<ext.plantuml.com.ctreber.acearth.projection.Projection: ext.plantuml.com.ctreber.acearth.util.Point3D rotate(ext.plantuml.com.ctreber.acearth.util.Point3D)>($r3);

        $z0 = r0 instanceof ext.plantuml.com.ctreber.acearth.projection.ProjectionOrtho;

        if $z0 == 0 goto label1;

        $d2 = virtualinvoke r4.<ext.plantuml.com.ctreber.acearth.util.Point3D: double getZ()>();

        $b6 = $d2 cmpg 0.0;

        if $b6 > 0 goto label1;

        return;

     label1:
        $r5 = virtualinvoke r0.<ext.plantuml.com.ctreber.acearth.projection.Projection: ext.plantuml.com.ctreber.acearth.util.Point2D project2D(ext.plantuml.com.ctreber.acearth.util.Point3D)>(r4);

        r6 = virtualinvoke r0.<ext.plantuml.com.ctreber.acearth.projection.Projection: ext.plantuml.com.ctreber.acearth.util.Point2D finalize(ext.plantuml.com.ctreber.acearth.util.Point2D)>($r5);

        $d0 = virtualinvoke r6.<ext.plantuml.com.ctreber.acearth.util.Point2D: double getX()>();

        i0 = (int) $d0;

        $d1 = virtualinvoke r6.<ext.plantuml.com.ctreber.acearth.util.Point2D: double getY()>();

        i1 = (int) $d1;

        r8 = virtualinvoke r7.<ext.plantuml.com.ctreber.acearth.gui.PixelCanvas: java.awt.Graphics2D getGraphics2D()>();

        $r9 = <java.awt.Color: java.awt.Color red>;

        virtualinvoke r8.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r9);

        virtualinvoke r8.<java.awt.Graphics2D: void drawOval(int,int,int,int)>(i0, i1, 4, 4);

        $r10 = r1.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: java.lang.String fLabel>;

        if $r10 == null goto label5;

        $i2 = r1.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int fAlign>;

        tableswitch($i2)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label5;
        };

     label2:
        goto label5;

     label3:
        $r11 = new java.awt.Font;

        specialinvoke $r11.<java.awt.Font: void <init>(java.lang.String,int,int)>("", 0, 9);

        virtualinvoke r8.<java.awt.Graphics2D: void setFont(java.awt.Font)>($r11);

        $r12 = r1.<ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: java.lang.String fLabel>;

        $i3 = i0 + 4;

        $i5 = $i3 + 1;

        $i4 = i1 + 2;

        virtualinvoke r8.<java.awt.Graphics2D: void drawString(java.lang.String,int,int)>($r12, $i5, $i4);

        goto label5;

     label4:
        goto label5;

     label5:
        return;
    }

    public static ext.plantuml.com.ctreber.acearth.plugins.markers.Marker loadMarkerFile(java.lang.String)
    {
        java.lang.String r0;
        ext.plantuml.com.ctreber.acearth.plugins.markers.Marker $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: ext.plantuml.com.ctreber.acearth.plugins.markers.Marker createFromLine(java.lang.String)>(r0);

        return $r1;
    }

    public static void <clinit>()
    {
        <ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int MarkerAlignBelow> = 4;

        <ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int MarkerAlignAbove> = 3;

        <ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int MarkerAlignRight> = 2;

        <ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int MarkerAlignLeft> = 1;

        <ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int MarkerAlignDefault> = 0;

        <ext.plantuml.com.ctreber.acearth.plugins.markers.Marker: int MARKER_SIZE> = 4;

        return;
    }
}
