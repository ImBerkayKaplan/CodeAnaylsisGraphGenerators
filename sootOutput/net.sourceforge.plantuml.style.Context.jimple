class net.sourceforge.plantuml.style.Context extends java.lang.Object
{
    private final java.util.List data;

    void <init>()
    {
        net.sourceforge.plantuml.style.Context r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.style.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.style.Context: java.util.List data> = $r1;

        return;
    }

    public net.sourceforge.plantuml.style.Context push(java.lang.String)
    {
        net.sourceforge.plantuml.style.Context $r0, r2;
        java.util.List $r3, $r4, $r6;
        java.lang.String r5;

        r2 := @this: net.sourceforge.plantuml.style.Context;

        r5 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.style.Context;

        specialinvoke $r0.<net.sourceforge.plantuml.style.Context: void <init>()>();

        $r4 = $r0.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        $r3 = r2.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r6 = $r0.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

        return $r0;
    }

    public net.sourceforge.plantuml.style.Context pop()
    {
        net.sourceforge.plantuml.style.Context r0, $r1;
        int $i0, $i1, $i2;
        java.util.List $r3, $r4, $r5, $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: net.sourceforge.plantuml.style.Context;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.style.Context: int size()>();

        if $i0 != 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label1:
        $r1 = new net.sourceforge.plantuml.style.Context;

        specialinvoke $r1.<net.sourceforge.plantuml.style.Context: void <init>()>();

        $r4 = $r1.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        $r5 = r0.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        $r3 = r0.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.List subList(int,int)>(0, $i2);

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r6);

        return $r1;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.style.Context r0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.style.Context;

        $r1 = r0.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public int size()
    {
        net.sourceforge.plantuml.style.Context r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.style.Context;

        $r1 = r0.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.util.Collection toSignatures()
    {
        java.util.ArrayList $r0, $r10, r18;
        net.sourceforge.plantuml.style.StyleSignature $r1, $r7, r14, $r17, r22;
        java.util.List $r2, $r4;
        net.sourceforge.plantuml.style.Context r3;
        boolean $z0, $z1, $z2, z4, $z5;
        java.util.Collection $r5;
        java.lang.Object $r6, $r8, $r13;
        java.lang.String[] r9;
        java.util.Iterator r12, r19;
        int i0, $i1, $i2, i3;
        java.lang.String r16, r20;
        java.util.ListIterator r21;

        r3 := @this: net.sourceforge.plantuml.style.Context;

        $r0 = new java.util.ArrayList;

        $r1 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature empty()>();

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        r18 = $r0;

        z4 = 0;

        $r4 = r3.<net.sourceforge.plantuml.style.Context: java.util.List data>;

        r19 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r8 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r8;

        $z2 = virtualinvoke r20.<java.lang.String: boolean endsWith(java.lang.String)>("*");

        if $z2 == 0 goto label2;

        z4 = 1;

        $i1 = virtualinvoke r20.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r20 = virtualinvoke r20.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label2:
        r9 = virtualinvoke r20.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        r12 = interfaceinvoke r18.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label6;

        $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (net.sourceforge.plantuml.style.StyleSignature) $r13;

        i0 = lengthof r9;

        i3 = 0;

     label4:
        if i3 >= i0 goto label5;

        r16 = r9[i3];

        $r17 = virtualinvoke r14.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>(r16);

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r17);

        i3 = i3 + 1;

        goto label4;

     label5:
        goto label3;

     label6:
        r18 = $r10;

        goto label1;

     label7:
        if z4 == 0 goto label9;

        r21 = interfaceinvoke r18.<java.util.List: java.util.ListIterator listIterator()>();

     label8:
        $z1 = interfaceinvoke r21.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r6 = interfaceinvoke r21.<java.util.ListIterator: java.lang.Object next()>();

        $r7 = (net.sourceforge.plantuml.style.StyleSignature) $r6;

        r22 = virtualinvoke $r7.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature addStar()>();

        interfaceinvoke r21.<java.util.ListIterator: void set(java.lang.Object)>(r22);

        goto label8;

     label9:
        $r5 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(r18);

        return $r5;
    }
}
