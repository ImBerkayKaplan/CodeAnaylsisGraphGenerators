public class net.sourceforge.plantuml.preproc.ReadLineList extends java.lang.Object implements net.sourceforge.plantuml.preproc.ReadLine
{
    private final java.util.Iterator iterator;
    private final net.sourceforge.plantuml.LineLocation location;

    public void <init>(java.util.List, net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.preproc.ReadLineList r0;
        java.util.List r1;
        java.util.Iterator $r2;
        net.sourceforge.plantuml.LineLocation r3;

        r0 := @this: net.sourceforge.plantuml.preproc.ReadLineList;

        r1 := @parameter0: java.util.List;

        r3 := @parameter1: net.sourceforge.plantuml.LineLocation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

        r0.<net.sourceforge.plantuml.preproc.ReadLineList: java.util.Iterator iterator> = $r2;

        r0.<net.sourceforge.plantuml.preproc.ReadLineList: net.sourceforge.plantuml.LineLocation location> = r3;

        return;
    }

    public void close()
    {
        net.sourceforge.plantuml.preproc.ReadLineList r0;

        r0 := @this: net.sourceforge.plantuml.preproc.ReadLineList;

        return;
    }

    public net.sourceforge.plantuml.StringLocated readLine()
    {
        net.sourceforge.plantuml.preproc.ReadLineList r0;
        java.util.Iterator $r1, $r3;
        boolean $z0;
        net.sourceforge.plantuml.StringLocated $r2;
        java.lang.Object $r4;
        net.sourceforge.plantuml.LineLocation $r5;
        java.lang.String $r6;

        r0 := @this: net.sourceforge.plantuml.preproc.ReadLineList;

        $r1 = r0.<net.sourceforge.plantuml.preproc.ReadLineList: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = new net.sourceforge.plantuml.StringLocated;

        $r3 = r0.<net.sourceforge.plantuml.preproc.ReadLineList: java.util.Iterator iterator>;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (java.lang.String) $r4;

        $r5 = r0.<net.sourceforge.plantuml.preproc.ReadLineList: net.sourceforge.plantuml.LineLocation location>;

        specialinvoke $r2.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation)>($r6, $r5);

        return $r2;
    }
}
