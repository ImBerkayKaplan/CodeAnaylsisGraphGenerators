public class net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant extends net.sourceforge.plantuml.skin.AbstractTextualComponent
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor back;
    private final net.sourceforge.plantuml.ugraphic.color.HColor foregroundColor;
    private final double deltaShadow;
    private final double roundCorner;
    private final double diagonalCorner;
    private final net.sourceforge.plantuml.ugraphic.UStroke stroke;
    private final double minWidth;
    private final boolean collections;
    private final double padding;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ISkinSimple, double, double, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor, double, boolean, double)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant r0;
        net.sourceforge.plantuml.style.Style r1, r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        net.sourceforge.plantuml.ISkinSimple r5;
        net.sourceforge.plantuml.ugraphic.UFont r6;
        net.sourceforge.plantuml.ugraphic.color.HColor r7, $r11, $r12;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r8;
        net.sourceforge.plantuml.LineBreakStrategy $r9;
        boolean $z0, z1;
        double d0, d1, d2, d3, $d4, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.UStroke $r10, $r19;
        net.sourceforge.plantuml.style.PName $r13, $r15;
        net.sourceforge.plantuml.style.Value $r14, $r16;
        int $i0, $i1;
        net.sourceforge.plantuml.api.ThemeStyle $r17;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r18;
        net.sourceforge.plantuml.graphic.SymbolContext r20;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r2 := @parameter1: net.sourceforge.plantuml.style.Style;

        r20 := @parameter2: net.sourceforge.plantuml.graphic.SymbolContext;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter4: net.sourceforge.plantuml.cucadiagram.Display;

        r5 := @parameter5: net.sourceforge.plantuml.ISkinSimple;

        d0 := @parameter6: double;

        d1 := @parameter7: double;

        r6 := @parameter8: net.sourceforge.plantuml.ugraphic.UFont;

        r7 := @parameter9: net.sourceforge.plantuml.ugraphic.color.HColor;

        d3 := @parameter10: double;

        z1 := @parameter11: boolean;

        d2 := @parameter12: double;

        $r9 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $r8 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r2, $r9, r3, r4, $r8, 7, 7, 7, r5, 0, r6, r7);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r13 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r14 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r13);

        $i0 = interfaceinvoke $r14.<net.sourceforge.plantuml.style.Value: int asInt()>();

        $d5 = (double) $i0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double roundCorner> = $d5;

        $r15 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName DiagonalCorner>;

        $r16 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r15);

        $i1 = interfaceinvoke $r16.<net.sourceforge.plantuml.style.Value: int asInt()>();

        $d6 = (double) $i1;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double diagonalCorner> = $d6;

        $r17 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r20 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r17, $r18);

        $r19 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.ugraphic.UStroke stroke> = $r19;

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double roundCorner> = d0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double diagonalCorner> = d1;

        $r10 = virtualinvoke r20.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.ugraphic.UStroke stroke> = $r10;

     label2:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double padding> = d2;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double minWidth> = d3;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: boolean collections> = z1;

        $r11 = virtualinvoke r20.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.ugraphic.color.HColor back> = $r11;

        $d4 = virtualinvoke r20.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double deltaShadow> = $d4;

        $r12 = virtualinvoke r20.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getForeColor()>();

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.ugraphic.color.HColor foregroundColor> = $r12;

        return;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r13, $r15, $r17;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r6;
        net.sourceforge.plantuml.ugraphic.UBackground $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, $r14, $r16, r19, r20, r21, r22, r23;
        net.sourceforge.plantuml.ugraphic.UStroke $r7, $r11;
        net.sourceforge.plantuml.ugraphic.URectangle $r8, $r9;
        net.sourceforge.plantuml.ugraphic.Shadowable r10;
        boolean $z0;
        net.sourceforge.plantuml.graphic.TextBlock r12;
        int $i0, $i1;
        net.sourceforge.plantuml.skin.Area r18;

        r1 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        r19 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r18 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r0 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d0 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double padding>;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        r20 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r3 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.ugraphic.color.HColor back>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r5 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r6 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.ugraphic.color.HColor foregroundColor>;

        r21 = interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r7 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        r22 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r8 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d2 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d1, $d2);

        $d3 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double roundCorner>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d3);

        $d4 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double diagonalCorner>;

        r10 = virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.Shadowable diagonalCorner(double)>($d4);

        $d5 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double deltaShadow>;

        interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.Shadowable: void setDeltaShadow(double)>($d5);

        $z0 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: boolean collections>;

        if $z0 == 0 goto label1;

        $d11 = specialinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getDeltaCollection()>();

        $r15 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d11);

        $r16 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r10);

        $d12 = specialinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getDeltaCollection()>();

        $r17 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d12);

        r22 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

     label1:
        interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r10);

        $r11 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r23 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        r12 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r13 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: int getMarginX1()>();

        $d6 = (double) $i0;

        $d7 = specialinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double suppWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d8 = $d7 / 2.0;

        $d9 = $d6 + $d8;

        $i1 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: int getMarginY()>();

        $d10 = (double) $i1;

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d9, $d10);

        $r14 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        interfaceinvoke r12.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r14);

        return;
    }

    private double getDeltaCollection()
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        $z0 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: boolean collections>;

        if $z0 == 0 goto label1;

        return 4.0;

     label1:
        return 0.0;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double deltaShadow>;

        $d2 = $d0 + $d1;

        $d3 = $d2 + 1.0;

        $d4 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getDeltaCollection()>();

        $d5 = $d3 + $d4;

        return $d5;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double deltaShadow>;

        $d2 = $d0 + $d1;

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getDeltaCollection()>();

        $d6 = $d2 + $d3;

        $d4 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double padding>;

        $d5 = 2.0 * $d4;

        $d7 = $d6 + $d5;

        return $d7;
    }

    protected double getPureTextWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: double getPureTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double minWidth>;

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        return $d2;
    }

    private final double suppWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseParticipant: double getPureTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: double getPureTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = $d0 - $d1;

        return $d2;
    }
}
