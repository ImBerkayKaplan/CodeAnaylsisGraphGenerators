class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow endInlinkColor;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor> = r4;

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r1, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        double d0, $d1, $d2, $d3, d4, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        java.awt.geom.Point2D$Double $r7;
        java.awt.geom.Point2D $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>($r1);

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        d0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d3 = $d1 - $d2;

        d4 = $d3 / 2.0;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r3);

        $r7 = new java.awt.geom.Point2D$Double;

        $d5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d6 = $d5 + d4;

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, $d6);

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }

    protected java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r1, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        double d0, $d1, $d2, $d3, d4, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        java.awt.geom.Point2D$Double $r7;
        java.awt.geom.Point2D $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>($r1);

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        d0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d3 = $d1 - $d2;

        d4 = $d3 / 2.0;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r3);

        $r7 = new java.awt.geom.Point2D$Double;

        $d5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d6 = $d5 + d4;

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, $d6);

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }

    protected java.awt.geom.Point2D getP3(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r1, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        double d0, $d1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        java.awt.geom.Point2D$Double $r7;
        java.awt.geom.Point2D $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>($r1);

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        d0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate access$700(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r3);

        $r7 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d0, $d1);

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline r2;
        java.awt.geom.Point2D r3, r6, r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown $r4, $r8, $r11, $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r5, r10;
        boolean $z0;
        double d0, d2, d3, d4, d5, $d6, $d7, $d8, $d9, d10;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r12;
        net.sourceforge.plantuml.ISkinParam $r14;
        net.sourceforge.plantuml.graphic.Rainbow $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r16, r18;
        net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy $r17;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r6 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r7 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: java.awt.geom.Point2D getP3(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        d2 = virtualinvoke r6.<java.awt.geom.Point2D: double getX()>();

        d3 = virtualinvoke r6.<java.awt.geom.Point2D: double getY()>();

        d4 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>();

        d5 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>();

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown)>($r8);

        r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d6 = d0 + 12.0;

        $r11 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown,net.sourceforge.plantuml.graphic.StringBounder)>($r11, r1);

        $d7 = virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $d8 = virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d9 = $d7 + $d8;

        d10 = staticinvoke <java.lang.Math: double max(double,double)>($d6, $d9);

        $r13 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown this$0>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r15 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfDown$ConnectionHline: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor>;

        $r16 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r14, $r15);

        $r17 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy NONE>;

        r18 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r17);

        virtualinvoke r18.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d10, d3);

        virtualinvoke r18.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d3);

        virtualinvoke r18.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d4, d5);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r18);

        return;
    }
}
