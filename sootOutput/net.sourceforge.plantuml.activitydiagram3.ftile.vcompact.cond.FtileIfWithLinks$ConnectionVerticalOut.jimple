class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow color;
    private final net.sourceforge.plantuml.graphic.TextBlock out2;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2;
        net.sourceforge.plantuml.graphic.Rainbow r3;
        net.sourceforge.plantuml.graphic.TextBlock r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.Rainbow;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, null);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.Rainbow color> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.TextBlock out2> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4, $r6, $r9;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        java.awt.geom.Point2D r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r8, $r12;
        double d0, $d1;
        java.awt.geom.Point2D$Double $r10;
        net.sourceforge.plantuml.ISkinParam $r13;
        net.sourceforge.plantuml.graphic.Rainbow $r14;
        net.sourceforge.plantuml.ugraphic.UPolygon $r15;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r16, r19;
        net.sourceforge.plantuml.graphic.TextBlock $r17;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r18;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.ugraphic.UTranslate translate(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry translate(net.sourceforge.plantuml.ugraphic.UTranslate)>($r5);

        r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        if r7 != null goto label2;

        return;

     label2:
        $r10 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>();

        specialinvoke $r10.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, d0);

        $r12 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r14 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.Rainbow color>;

        $r15 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r16 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r13, $r14, $r15);

        $r17 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.TextBlock out2>;

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r19 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r17, $r18);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r7);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r10);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r19);

        return;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate translate(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r3, $r4, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r2, $r5, $r9, $r11;
        java.lang.IllegalStateException $r7;
        net.sourceforge.plantuml.graphic.StringBounder r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10, $r12;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r3 = $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        if $r1 != $r3 goto label1;

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        return $r12;

     label1:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r6 = $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        if $r4 != $r6 goto label2;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        return $r10;

     label2:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;
    }
}
