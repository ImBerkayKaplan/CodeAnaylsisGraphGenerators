class net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy extends net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike
{
    private static final double XSUFFIX;
    private static final double DOTHSIZE;
    private final net.sourceforge.plantuml.ugraphic.UTranslate pos1;
    private final net.sourceforge.plantuml.ugraphic.UTranslate pos2;
    private final net.sourceforge.plantuml.ugraphic.UEllipse dot;

    private static net.sourceforge.plantuml.ugraphic.UTranslate getDotPos(double, double, double, double, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point $r0;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7;
        java.awt.geom.Point2D r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r2 := @parameter4: java.awt.geom.Point2D;

        $r0 = new net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: void <init>(double,double)>(d0, d1);

        virtualinvoke $r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: void rotate(double)>(d2);

        $d4 = $r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: double x>;

        $d5 = $d4 - d3;

        $r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: double x> = $d5;

        $d6 = $r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: double y>;

        $d7 = $d6 - d3;

        $r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: double y> = $d7;

        $r3 = virtualinvoke $r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Point: net.sourceforge.plantuml.ugraphic.UTranslate getPos(java.awt.geom.Point2D)>(r2);

        return $r3;
    }

    public void <init>(java.awt.geom.Point2D, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy r0;
        java.awt.geom.Point2D r1;
        double d0, $d2;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r4;
        net.sourceforge.plantuml.ugraphic.UEllipse $r5;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy;

        r1 := @parameter0: java.awt.geom.Point2D;

        d0 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike: void <init>(java.awt.geom.Point2D,double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$1)>(r1, d0, r2, null);

        $d2 = neg 5.0;

        $r3 = staticinvoke <net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UTranslate getDotPos(double,double,double,double,java.awt.geom.Point2D)>(-24.7, $d2, d0, 2.0, r1);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UTranslate pos1> = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UTranslate getDotPos(double,double,double,double,java.awt.geom.Point2D)>(-24.7, 5.0, d0, 2.0, r1);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UTranslate pos2> = $r4;

        $r5 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(4.0, 4.0);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UEllipse dot> = $r5;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy r0;
        net.sourceforge.plantuml.ugraphic.UParam $r1, $r9;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic $r4, $r7, r12;
        net.sourceforge.plantuml.ugraphic.UEllipse $r5, $r8;
        net.sourceforge.plantuml.ugraphic.UBackground $r11;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r12);

        $r1 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r2 == null goto label1;

        $r9 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r12 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

     label1:
        $r3 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UTranslate pos1>;

        $r4 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UEllipse dot>;

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        $r6 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UTranslate pos2>;

        $r7 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: net.sourceforge.plantuml.ugraphic.UEllipse dot>;

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: double DOTHSIZE> = 2.0;

        <net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: double XSUFFIX> = -24.7;

        return;
    }
}
