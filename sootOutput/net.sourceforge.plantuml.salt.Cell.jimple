public class net.sourceforge.plantuml.salt.Cell extends java.lang.Object
{
    private int minRow;
    private int maxRow;
    private int minCol;
    private int maxCol;

    public void <init>(int, int)
    {
        net.sourceforge.plantuml.salt.Cell r0;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.salt.Cell;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.salt.Cell: int minRow> = i0;

        r0.<net.sourceforge.plantuml.salt.Cell: int maxRow> = i0;

        r0.<net.sourceforge.plantuml.salt.Cell: int minCol> = i1;

        r0.<net.sourceforge.plantuml.salt.Cell: int maxCol> = i1;

        return;
    }

    public void mergeLeft()
    {
        net.sourceforge.plantuml.salt.Cell r0;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.salt.Cell;

        $i0 = r0.<net.sourceforge.plantuml.salt.Cell: int maxCol>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.salt.Cell: int maxCol> = $i1;

        return;
    }

    public int getMinRow()
    {
        net.sourceforge.plantuml.salt.Cell r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.salt.Cell;

        $i0 = r0.<net.sourceforge.plantuml.salt.Cell: int minRow>;

        return $i0;
    }

    public int getMaxRow()
    {
        net.sourceforge.plantuml.salt.Cell r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.salt.Cell;

        $i0 = r0.<net.sourceforge.plantuml.salt.Cell: int maxRow>;

        return $i0;
    }

    public int getMinCol()
    {
        net.sourceforge.plantuml.salt.Cell r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.salt.Cell;

        $i0 = r0.<net.sourceforge.plantuml.salt.Cell: int minCol>;

        return $i0;
    }

    public int getMaxCol()
    {
        net.sourceforge.plantuml.salt.Cell r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.salt.Cell;

        $i0 = r0.<net.sourceforge.plantuml.salt.Cell: int maxCol>;

        return $i0;
    }

    public int getNbRows()
    {
        net.sourceforge.plantuml.salt.Cell r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.sourceforge.plantuml.salt.Cell;

        $i1 = r0.<net.sourceforge.plantuml.salt.Cell: int maxRow>;

        $i0 = r0.<net.sourceforge.plantuml.salt.Cell: int minRow>;

        $i2 = $i1 - $i0;

        $i3 = $i2 + 1;

        return $i3;
    }

    public int getNbCols()
    {
        net.sourceforge.plantuml.salt.Cell r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.sourceforge.plantuml.salt.Cell;

        $i1 = r0.<net.sourceforge.plantuml.salt.Cell: int maxCol>;

        $i0 = r0.<net.sourceforge.plantuml.salt.Cell: int minCol>;

        $i2 = $i1 - $i0;

        $i3 = $i2 + 1;

        return $i3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        net.sourceforge.plantuml.salt.Cell r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r11;

        r2 := @this: net.sourceforge.plantuml.salt.Cell;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = r2.<net.sourceforge.plantuml.salt.Cell: int minRow>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = r2.<net.sourceforge.plantuml.salt.Cell: int minCol>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")-(");

        $i2 = r2.<net.sourceforge.plantuml.salt.Cell: int maxRow>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i3 = r2.<net.sourceforge.plantuml.salt.Cell: int maxCol>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
