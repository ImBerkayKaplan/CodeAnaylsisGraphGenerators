public class net.sourceforge.plantuml.awt.geom.CubicCurve2D extends java.lang.Object implements net.sourceforge.plantuml.awt.Shape
{
    public double x1;
    public double y1;
    public double ctrlx1;
    public double ctrly1;
    public double ctrlx2;
    public double ctrly2;
    public double x2;
    public double y2;

    public void <init>(double, double, double, double, double, double, double, double)
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double d0, d1, d2, d3, d4, d5, d6, d7;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x1> = d0;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y1> = d1;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx1> = d2;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly1> = d3;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx2> = d4;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly2> = d5;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x2> = d6;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y2> = d7;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Point2D getP1()
    {
        net.sourceforge.plantuml.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r1;
        double $d0, $d1;

        r1 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $r0 = new net.sourceforge.plantuml.awt.geom.Point2D$Double;

        $d1 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x1>;

        $d0 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y1>;

        specialinvoke $r0.<net.sourceforge.plantuml.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    public net.sourceforge.plantuml.awt.geom.Point2D getP2()
    {
        net.sourceforge.plantuml.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r1;
        double $d0, $d1;

        r1 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $r0 = new net.sourceforge.plantuml.awt.geom.Point2D$Double;

        $d1 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x2>;

        $d0 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y2>;

        specialinvoke $r0.<net.sourceforge.plantuml.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    public void setCurve(double, double, double, double, double, double, double, double)
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double d0, d1, d2, d3, d4, d5, d6, d7;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        d4 := @parameter4: double;

        d5 := @parameter5: double;

        d6 := @parameter6: double;

        d7 := @parameter7: double;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x1> = d0;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y1> = d1;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx1> = d2;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly1> = d3;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx2> = d4;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly2> = d5;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x2> = d6;

        r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y2> = d7;

        return;
    }

    public void setCurve(net.sourceforge.plantuml.awt.geom.CubicCurve2D)
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d7 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x1>;

        $d6 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y1>;

        $d5 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx1>;

        $d4 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly1>;

        $d3 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx2>;

        $d2 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly2>;

        $d1 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx2>;

        $d0 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly2>;

        virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>($d7, $d6, $d5, $d4, $d3, $d2, $d1, $d0);

        return;
    }

    public void subdivide(net.sourceforge.plantuml.awt.geom.CubicCurve2D, net.sourceforge.plantuml.awt.geom.CubicCurve2D)
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0, r1, r2;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, d13, $d14, d15, $d16, d17, $d18, $d19, d20, d21, d22, d23, d24, d25, d26, d27, d28, d29, d30, d31;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        r2 := @parameter1: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double getX1()>();

        d1 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double getY1()>();

        d20 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double getCtrlX1()>();

        d21 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double getCtrlY1()>();

        d22 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double getCtrlX2()>();

        d23 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double getCtrlY2()>();

        d2 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double getX2()>();

        d3 = virtualinvoke r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double getY2()>();

        $d4 = d20 + d22;

        d24 = $d4 / 2.0;

        $d5 = d21 + d23;

        d25 = $d5 / 2.0;

        $d6 = d0 + d20;

        d26 = $d6 / 2.0;

        $d7 = d1 + d21;

        d27 = $d7 / 2.0;

        $d8 = d2 + d22;

        d28 = $d8 / 2.0;

        $d9 = d3 + d23;

        d29 = $d9 / 2.0;

        $d10 = d26 + d24;

        d11 = $d10 / 2.0;

        $d12 = d27 + d25;

        d13 = $d12 / 2.0;

        $d14 = d28 + d24;

        d15 = $d14 / 2.0;

        $d16 = d29 + d25;

        d17 = $d16 / 2.0;

        $d18 = d11 + d15;

        d30 = $d18 / 2.0;

        $d19 = d13 + d17;

        d31 = $d19 / 2.0;

        if r1 == null goto label1;

        virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>(d0, d1, d26, d27, d11, d13, d30, d31);

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: void setCurve(double,double,double,double,double,double,double,double)>(d30, d31, d15, d17, d28, d29, d2, d3);

     label2:
        return;
    }

    public final double getX1()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x1>;

        return $d0;
    }

    public final double getY1()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y1>;

        return $d0;
    }

    public final double getCtrlX1()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx1>;

        return $d0;
    }

    public final double getCtrlY1()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly1>;

        return $d0;
    }

    public final double getCtrlX2()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx2>;

        return $d0;
    }

    public final double getCtrlY2()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly2>;

        return $d0;
    }

    public final double getX2()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double x2>;

        return $d0;
    }

    public final double getY2()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $d0 = r0.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double y2>;

        return $d0;
    }

    public net.sourceforge.plantuml.awt.geom.Point2D getCtrlP1()
    {
        net.sourceforge.plantuml.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r1;
        double $d0, $d1;

        r1 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $r0 = new net.sourceforge.plantuml.awt.geom.Point2D$Double;

        $d1 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx1>;

        $d0 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly1>;

        specialinvoke $r0.<net.sourceforge.plantuml.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    public net.sourceforge.plantuml.awt.geom.Point2D getCtrlP2()
    {
        net.sourceforge.plantuml.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r1;
        double $d0, $d1;

        r1 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        $r0 = new net.sourceforge.plantuml.awt.geom.Point2D$Double;

        $d1 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrlx2>;

        $d0 = r1.<net.sourceforge.plantuml.awt.geom.CubicCurve2D: double ctrly2>;

        specialinvoke $r0.<net.sourceforge.plantuml.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    public double getFlatnessSq()
    {
        net.sourceforge.plantuml.awt.geom.CubicCurve2D r0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.CubicCurve2D;

        return 0.0;
    }
}
