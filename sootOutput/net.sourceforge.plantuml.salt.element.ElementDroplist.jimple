public class net.sourceforge.plantuml.salt.element.ElementDroplist extends net.sourceforge.plantuml.salt.element.AbstractElementText implements net.sourceforge.plantuml.salt.element.Element
{
    private final int box;
    private final net.sourceforge.plantuml.graphic.TextBlock openDrop;

    public void <init>(java.lang.String, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.element.ElementDroplist r0;
        java.lang.String r1, $r2, $r14;
        net.sourceforge.plantuml.ugraphic.UFont r3;
        net.sourceforge.plantuml.ISkinSimple r4;
        java.util.StringTokenizer $r5;
        java.util.ArrayList $r7;
        boolean $z0;
        int $i0, $i1;
        net.sourceforge.plantuml.cucadiagram.Display $r9;
        net.sourceforge.plantuml.graphic.FontConfiguration $r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r11;
        net.sourceforge.plantuml.graphic.TextBlock $r12;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementDroplist;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r2 = staticinvoke <net.sourceforge.plantuml.salt.element.ElementDroplist: java.lang.String extract(java.lang.String)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElementText: void <init>(java.lang.String,net.sourceforge.plantuml.ugraphic.UFont,boolean,net.sourceforge.plantuml.ISkinSimple)>($r2, r3, 1, r4);

        r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: int box> = 12;

        r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: int box> = 12;

        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, "^");

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

     label1:
        $z0 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r14 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label1;

     label2:
        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(0);

     label3:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i1 != 0 goto label4;

        r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.graphic.TextBlock openDrop> = null;

        goto label5;

     label4:
        $r9 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>($r7);

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.graphic.FontConfiguration getConfig()>();

        $r11 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r12 = virtualinvoke $r9.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r10, $r11, r4);

        r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.graphic.TextBlock openDrop> = $r12;

     label5:
        return;
    }

    private static java.lang.String extract(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(94);

        if i0 != -1 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        return $r1;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder, double, double)
    {
        net.sourceforge.plantuml.salt.element.ElementDroplist r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0, $d1, d2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, $r3;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementDroplist;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        $d1 = d0 + 2.0;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.awt.geom.Dimension2D getTextDimensionAt(net.sourceforge.plantuml.graphic.StringBounder,double)>(r1, $d1);

        $r3 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r2, 16.0, 4.0);

        return $r3;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, int, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.salt.element.ElementDroplist r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1, $r6, $r23;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, $r7, r24, r29, r32;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r9, $r14;
        int i0;
        net.sourceforge.plantuml.graphic.TextBlock $r4, $r5, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8, $r18, $r27;
        net.sourceforge.plantuml.ugraphic.UBackground $r10, $r15;
        net.sourceforge.plantuml.ugraphic.UGraphic $r11, $r16, $r19, $r26, $r28, r30, r31, r33;
        net.sourceforge.plantuml.ugraphic.URectangle $r12, $r17;
        net.sourceforge.plantuml.ugraphic.ULine $r20;
        net.sourceforge.plantuml.ugraphic.UPolygon $r21;
        net.sourceforge.plantuml.ugraphic.UChange $r25;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementDroplist;

        r30 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter1: int;

        r29 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $r1 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder,double,double)>($r1, 0.0, 0.0);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        r31 = interfaceinvoke r30.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        if i0 != 0 goto label1;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.ugraphic.color.HColor getColorEE()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r16 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r17 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d8 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d9 = $d8 - 1.0;

        $d10 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d11 = $d10 - 1.0;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d9, $d11);

        interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r17);

        virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: void drawText(net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>(r31, 2.0, 2.0);

        $d12 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d18 = $d12 - 12.0;

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d18);

        $r19 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        $d13 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d14 = $d13 - 1.0;

        $r20 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d14);

        interfaceinvoke $r19.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r20);

        $r21 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r21.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r21.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r21.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(6.0, 0.0);

        $r23 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r24 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.awt.geom.Dimension2D getPureTextDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r23);

        $d15 = virtualinvoke r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d16 = $d15 - 8.0;

        virtualinvoke $r21.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(3.0, $d16);

        $r25 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.UChange changeBack(net.sourceforge.plantuml.ugraphic.UGraphic)>(r31);

        $r26 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r25);

        $r27 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d17 = d18 + 3.0;

        specialinvoke $r27.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d17, 6.0);

        $r28 = interfaceinvoke $r26.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        interfaceinvoke $r28.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r21);

     label1:
        $r4 = r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.graphic.TextBlock openDrop>;

        if $r4 == null goto label2;

        $r5 = r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.graphic.TextBlock openDrop>;

        $r6 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r7 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r6);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 - 1.0;

        r32 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D atLeast(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r7, $d1, 0.0);

        $d2 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d3 = $d2 - 1.0;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d3);

        r33 = interfaceinvoke r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.ugraphic.color.HColor getColorEE()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r11 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r12 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d4 = virtualinvoke r32.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = $d4 - 1.0;

        $d6 = virtualinvoke r32.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d7 = $d6 - 1.0;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d5, $d7);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        $r13 = r0.<net.sourceforge.plantuml.salt.element.ElementDroplist: net.sourceforge.plantuml.graphic.TextBlock openDrop>;

        interfaceinvoke $r13.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r33);

     label2:
        return;
    }
}
