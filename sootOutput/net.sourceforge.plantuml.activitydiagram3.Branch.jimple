public class net.sourceforge.plantuml.activitydiagram3.Branch extends java.lang.Object
{
    private final net.sourceforge.plantuml.activitydiagram3.InstructionList list;
    private final net.sourceforge.plantuml.cucadiagram.Display labelTest;
    private final net.sourceforge.plantuml.activitydiagram3.LinkRendering labelPositive;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering inlinkRendering;
    private final net.sourceforge.plantuml.activitydiagram3.LinkRendering inlabel;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering special;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;
    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile ftile;
    private net.sourceforge.plantuml.activitydiagram3.gtile.Gtile gtile;

    public net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionArrow()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.Branch r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionDiamond()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.style.StyleSignature $r6;
        net.sourceforge.plantuml.activitydiagram3.Branch r7;

        r7 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName diamond>;

        $r0[4] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r6;
    }

    public boolean containsBreak()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean containsBreak()>();

        return $z0;
    }

    public void <init>(net.sourceforge.plantuml.style.StyleBuilder, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1, r2, $r4, r8, $r10;
        java.lang.Object $r3, $r6, $r9;
        net.sourceforge.plantuml.cucadiagram.Display r5, $r7;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.color.HColor r11, $r24;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r12;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r13;
        net.sourceforge.plantuml.style.StyleSignature $r14;
        net.sourceforge.plantuml.style.StyleBuilder r15;
        net.sourceforge.plantuml.style.Style r16;
        net.sourceforge.plantuml.style.PName $r17;
        net.sourceforge.plantuml.style.Value $r18;
        net.sourceforge.plantuml.SkinParam $r19, $r21;
        net.sourceforge.plantuml.api.ThemeStyle $r20;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r22;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r15 := @parameter0: net.sourceforge.plantuml.style.StyleBuilder;

        r13 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r8 := @parameter2: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r5 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r11 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter5: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering inlinkRendering> = $r1;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (net.sourceforge.plantuml.activitydiagram3.LinkRendering) $r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering inlabel> = $r4;

        $r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        $r7 = (net.sourceforge.plantuml.cucadiagram.Display) $r6;

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display labelTest> = $r7;

        $r9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r8);

        $r10 = (net.sourceforge.plantuml.activitydiagram3.LinkRendering) $r9;

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering labelPositive> = $r10;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label3;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionDiamond()>();

        r16 = virtualinvoke $r14.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r15);

        if r11 != null goto label1;

        $r17 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r18 = virtualinvoke r16.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r17);

        $r19 = virtualinvoke r15.<net.sourceforge.plantuml.style.StyleBuilder: net.sourceforge.plantuml.SkinParam getSkinParam()>();

        $r20 = virtualinvoke $r19.<net.sourceforge.plantuml.SkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r21 = virtualinvoke r15.<net.sourceforge.plantuml.style.StyleBuilder: net.sourceforge.plantuml.SkinParam getSkinParam()>();

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.SkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r24 = interfaceinvoke $r18.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r20, $r22);

        goto label2;

     label1:
        $r24 = r11;

     label2:
        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor color> = $r24;

        goto label4;

     label3:
        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor color> = r11;

     label4:
        $r12 = new net.sourceforge.plantuml.activitydiagram3.InstructionList;

        specialinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.InstructionList: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r13);

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list> = $r12;

        return;
    }

    public java.util.Collection getWeldingPoints()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile ftile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.List getWeldingPoints()>();

        return $r2;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction r1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>(r1);

        $r4 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r4;
    }

    public boolean kill()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean kill()>();

        return $z0;
    }

    public boolean addNote(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.sequencediagram.NoteType, net.sourceforge.plantuml.graphic.color.Colors, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.sequencediagram.NotePosition r2;
        net.sourceforge.plantuml.sequencediagram.NoteType r3;
        net.sourceforge.plantuml.graphic.color.Colors r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r5;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r6;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r3 := @parameter2: net.sourceforge.plantuml.sequencediagram.NoteType;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $z0 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean addNote(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, r2, r3, r4, r5);

        return $z0;
    }

    public final void setInlinkRendering(net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r1, $r3;
        java.lang.Object $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.activitydiagram3.LinkRendering) $r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering inlinkRendering> = $r3;

        return;
    }

    public void updateFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r5;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering inlinkRendering>;

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile decorateOut(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r3, $r4);

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile ftile> = $r5;

        return;
    }

    public void updateGtile(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r3;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createGtile(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile gtile> = $r4;

        return;
    }

    public java.util.Collection getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getLabelTest()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display labelTest>;

        return $r1;
    }

    public final net.sourceforge.plantuml.graphic.Rainbow getOut()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1, $r2, $r3, $r5;
        net.sourceforge.plantuml.graphic.Rainbow $r4, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering special>;

        if $r1 == null goto label1;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering special>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        return $r6;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering inlinkRendering>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering inlinkRendering>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        return $r4;
    }

    public net.sourceforge.plantuml.graphic.Rainbow getInColor(net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1, r4, $r7, $r10;
        net.sourceforge.plantuml.graphic.Rainbow $r2, r5, r6, $r8, $r11;
        int $i0, $i1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.Rainbow;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r5);

        return $r11;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering labelPositive>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        $i0 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i0 <= 0 goto label2;

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering labelPositive>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow()>();

        return $r8;

     label2:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        r6 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r5);

        $i1 = virtualinvoke r6.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i1 != 0 goto label3;

        return r5;

     label3:
        return r6;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getInlabel()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering inlabel>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        return $r2;
    }

    public net.sourceforge.plantuml.graphic.Rainbow getInRainbow(net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.graphic.Rainbow r1, $r3;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.Rainbow;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering inlabel>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r1);

        return $r3;
    }

    public net.sourceforge.plantuml.graphic.Rainbow getLabelPositiveRainbow(net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.graphic.Rainbow r1, $r3;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.Rainbow;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering labelPositive>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r1);

        return $r3;
    }

    public final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile ftile>;

        return $r1;
    }

    public net.sourceforge.plantuml.activitydiagram3.gtile.Gtile getGtile()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile gtile>;

        return $r1;
    }

    public net.sourceforge.plantuml.ISkinParam skinParam()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile $r1, $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.ISkinParam $r3, $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile gtile>;

        if $r1 == null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile gtile>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.gtile.Gtile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        return $r5;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile ftile>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        return $r3;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getColor()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        return $r1;
    }

    public boolean isEmpty()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean isEmpty()>();

        return $z0;
    }

    public net.sourceforge.plantuml.activitydiagram3.Instruction getLast()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.Instruction getLast()>();

        return $r2;
    }

    public boolean isOnlySingleStopOrSpot()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.InstructionList list>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean isOnlySingleStopOrSpot()>();

        return $z0;
    }

    public void setSpecial(net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering special> = r1;

        return;
    }

    public final net.sourceforge.plantuml.activitydiagram3.LinkRendering getSpecial()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering special>;

        return $r1;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getDisplayPositive()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r2;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r3, $r6;
        net.sourceforge.plantuml.cucadiagram.Display $r4, $r5, $r7;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile ftile>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile ftile>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r4);

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        return $r5;

     label1:
        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering labelPositive>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        return $r7;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getSpecialDisplay()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1, $r2, $r4;
        net.sourceforge.plantuml.cucadiagram.Display $r3, $r5;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering special>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering special>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r3);

        if $z0 != 0 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.LinkRendering special>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        return $r5;

     label1:
        return null;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        boolean $z0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1, r19;
        net.sourceforge.plantuml.activitydiagram3.Branch r2;
        net.sourceforge.plantuml.ISkinParam $r3, $r6, $r10, $r13, $r15;
        net.sourceforge.plantuml.FontParam $r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.creole.CreoleMode $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8, $r17;
        net.sourceforge.plantuml.style.StyleSignature $r9;
        net.sourceforge.plantuml.style.StyleBuilder $r11;
        net.sourceforge.plantuml.style.Style r12;
        net.sourceforge.plantuml.api.ThemeStyle $r14;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r16;
        net.sourceforge.plantuml.LineBreakStrategy r18;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        if r0 != null goto label1;

        $r17 = <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock EMPTY_TEXT_BLOCK>;

        return $r17;

     label1:
        r18 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionArrow()>();

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r12 = virtualinvoke $r9.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r11);

        r18 = virtualinvoke r12.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r15 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r19 = virtualinvoke r12.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r14, $r16);

        goto label3;

     label2:
        $r1 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r4 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ARROW>;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r3, $r4, null);

        r19 = $r1;

     label3:
        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r19, $r5, $r6, r18, $r7, null, null);

        return $r8;
    }

    public final net.sourceforge.plantuml.graphic.TextBlock getTextBlockPositive()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getDisplayPositive()>();

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        return $r2;
    }

    public final net.sourceforge.plantuml.graphic.TextBlock getTextBlockSpecial()
    {
        net.sourceforge.plantuml.activitydiagram3.Branch r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.Branch;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.cucadiagram.Display getSpecialDisplay()>();

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        return $r2;
    }
}
