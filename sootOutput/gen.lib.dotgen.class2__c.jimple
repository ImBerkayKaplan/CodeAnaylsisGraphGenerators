public class gen.lib.dotgen.class2__c extends java.lang.Object
{

    public void <init>()
    {
        gen.lib.dotgen.class2__c r0;

        r0 := @this: gen.lib.dotgen.class2__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static h.ST_Agnode_s label_vnode(h.ST_Agraph_s, h.ST_Agedge_s)
    {
        h.ST_pointf $r0, $r4;
        h.ST_Agedge_s r2;
        h.ST_textlabel_t $r3, $r7;
        h.ST_Agraph_s r5, $r8, $r10;
        h.ST_Agnode_s r6;
        int $i0;
        double $d0, $d1, $d2, $d3, $d4;
        boolean $z0, $z1, $z2;
        java.lang.Throwable $r11;

        r5 := @parameter0: h.ST_Agraph_s;

        r2 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2zn7c6ulmwwzaibdxo127jf04", "label_vnode");

     label1:
        $r0 = new h.ST_pointf;

        specialinvoke $r0.<h.ST_pointf: void <init>()>();

        $r3 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r2);

        $r4 = $r3.<h.ST_textlabel_t: h.ST_pointf dimen>;

        virtualinvoke $r0.<h.ST_pointf: void ___(smetana.core.__struct__)>($r4);

        r6 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s virtual_node(h.ST_Agraph_s)>(r5);

        $r7 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r2);

        staticinvoke <smetana.core.Macro: void ND_label(h.ST_Agnode_s,h.ST_textlabel_t)>(r6, $r7);

        $r8 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r6);

        $i0 = staticinvoke <smetana.core.Macro: int GD_nodesep(h.ST_Agraph_s)>($r8);

        $d0 = (double) $i0;

        staticinvoke <smetana.core.Macro: void ND_lw(h.ST_Agnode_s,double)>(r6, $d0);

        $z0 = staticinvoke <smetana.core.Macro: boolean ED_label_ontop(h.ST_Agedge_s)>(r2);

        $z1 = staticinvoke <smetana.core.Macro: boolean N(boolean)>($z0);

        if $z1 == 0 goto label3;

        $r10 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r5);

        $z2 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>($r10);

        if $z2 == 0 goto label2;

        $d3 = $r0.<h.ST_pointf: double x>;

        staticinvoke <smetana.core.Macro: void ND_ht(h.ST_Agnode_s,double)>(r6, $d3);

        $d4 = $r0.<h.ST_pointf: double y>;

        staticinvoke <smetana.core.Macro: void ND_rw(h.ST_Agnode_s,double)>(r6, $d4);

        goto label3;

     label2:
        $d1 = $r0.<h.ST_pointf: double y>;

        staticinvoke <smetana.core.Macro: void ND_ht(h.ST_Agnode_s,double)>(r6, $d1);

        $d2 = $r0.<h.ST_pointf: double x>;

        staticinvoke <smetana.core.Macro: void ND_rw(h.ST_Agnode_s,double)>(r6, $d2);

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2zn7c6ulmwwzaibdxo127jf04", "label_vnode");

        return r6;

     label4:
        $r11 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2zn7c6ulmwwzaibdxo127jf04", "label_vnode");

        throw $r11;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void incr_width(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agraph_s r0;
        int $i0, i1;
        h.ST_Agnode_s r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_Agraph_s;

        r1 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("49tji49jdm9uges7v8lf2j2rn", "incr_width");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int GD_nodesep(h.ST_Agraph_s)>(r0);

        i1 = $i0 / 2;

        $d0 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>(r1);

        $d1 = (double) i1;

        $d2 = $d0 + $d1;

        staticinvoke <smetana.core.Macro: void ND_lw(h.ST_Agnode_s,double)>(r1, $d2);

        $d3 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r1);

        $d4 = (double) i1;

        $d5 = $d3 + $d4;

        staticinvoke <smetana.core.Macro: void ND_rw(h.ST_Agnode_s,double)>(r1, $d5);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("49tji49jdm9uges7v8lf2j2rn", "incr_width");

        goto label4;

     label3:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("49tji49jdm9uges7v8lf2j2rn", "incr_width");

        throw $r2;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static h.ST_Agnode_s plain_vnode(h.ST_Agraph_s, h.ST_Agedge_s)
    {
        h.ST_Agraph_s r0;
        h.ST_Agnode_s r1;
        java.lang.Throwable $r3;
        h.ST_Agedge_s r5;

        r0 := @parameter0: h.ST_Agraph_s;

        r5 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("xujihq6vep3ez275shtrbilo", "plain_vnode");

     label1:
        r1 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s virtual_node(h.ST_Agraph_s)>(r0);

        staticinvoke <gen.lib.dotgen.class2__c: void incr_width(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r1);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("xujihq6vep3ez275shtrbilo", "plain_vnode");

        return r1;

     label3:
        $r3 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("xujihq6vep3ez275shtrbilo", "plain_vnode");

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static h.ST_Agnode_s leader_of(h.ST_Agraph_s, h.ST_Agnode_s)
    {
        h.ST_Agnode_s r0, r8;
        int $i0, $i1;
        h.ST_Agraph_s r1, r7;
        smetana.core.CArrayOfStar $r2;
        java.lang.Object $r3;
        java.lang.Throwable $r5;

        r7 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9fmfj1b2jik7skv6ms0657t8r", "leader_of");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int ND_ranktype(h.ST_Agnode_s)>(r0);

        if $i0 == 7 goto label2;

        r8 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s UF_find(h.ST_Agnode_s)>(r0);

        goto label3;

     label2:
        r1 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r0);

        $r2 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_rankleader(h.ST_Agraph_s)>(r1);

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r0);

        $r3 = virtualinvoke $r2.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i1);

        r8 = (h.ST_Agnode_s) $r3;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9fmfj1b2jik7skv6ms0657t8r", "leader_of");

        return r8;

     label4:
        $r5 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9fmfj1b2jik7skv6ms0657t8r", "leader_of");

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void make_chain(h.ST_Agraph_s, h.ST_Agnode_s, h.ST_Agnode_s, h.ST_Agedge_s)
    {
        h.ST_Agnode_s r0, r3, r8, r9;
        h.ST_Agedge_s r1, r4;
        h.ST_textlabel_t $r2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i7;
        h.ST_Agraph_s r5;
        java.lang.Throwable $r6;

        r5 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agnode_s;

        r3 := @parameter2: h.ST_Agnode_s;

        r1 := @parameter3: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("6sbvlvurvkodunw2qt1ug70c2", "make_chain");

     label01:
        r8 = r0;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r1);

        if $r2 == null goto label02;

        $i2 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r0);

        $i3 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r3);

        $i4 = $i2 + $i3;

        i5 = $i4 / 2;

        goto label03;

     label02:
        i5 = -1;

     label03:
        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r0);

        i6 = $i0 + 1;

     label04:
        $i7 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r3);

        if i6 > $i7 goto label09;

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r3);

        if i6 >= $i1 goto label07;

        if i6 != i5 goto label05;

        r9 = staticinvoke <gen.lib.dotgen.class2__c: h.ST_Agnode_s label_vnode(h.ST_Agraph_s,h.ST_Agedge_s)>(r5, r1);

        goto label06;

     label05:
        r9 = staticinvoke <gen.lib.dotgen.class2__c: h.ST_Agnode_s plain_vnode(h.ST_Agraph_s,h.ST_Agedge_s)>(r5, r1);

     label06:
        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r9, i6);

        goto label08;

     label07:
        r9 = r3;

     label08:
        r4 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s virtual_edge(h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r8, r9, r1);

        staticinvoke <gen.lib.dotgen.mincross__c: void virtual_weight(h.ST_Agedge_s)>(r4);

        r8 = r9;

        i6 = i6 + 1;

        goto label04;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6sbvlvurvkodunw2qt1ug70c2", "make_chain");

        goto label12;

     label10:
        $r6 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("6sbvlvurvkodunw2qt1ug70c2", "make_chain");

        throw $r6;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void interclrep(h.ST_Agraph_s, h.ST_Agedge_s)
    {
        h.ST_Agraph_s r0, $r4, $r5;
        h.ST_Agedge_s r1, $r6, r18;
        h.ST_Agnode_s $r2, $r3, $r7, $r8, r12, r15, r16;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        h.ST_elist $r9;
        smetana.core.CArrayOfStar $r10;
        java.lang.Object $r11;
        java.lang.Throwable $r13;

        r0 := @parameter0: h.ST_Agraph_s;

        r1 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("659ld5tcseo3l0hopxb3pf0vv", "interclrep");

     label01:
        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r1);

        r15 = staticinvoke <gen.lib.dotgen.class2__c: h.ST_Agnode_s leader_of(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, $r2);

        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r1);

        r16 = staticinvoke <gen.lib.dotgen.class2__c: h.ST_Agnode_s leader_of(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, $r3);

        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r15);

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r16);

        if $i0 <= $i1 goto label02;

        r12 = r15;

        r15 = r16;

        r16 = r12;

     label02:
        $r4 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r15);

        $r5 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r16);

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z0 == 0 goto label08;

        $r6 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s find_fast_edge(h.ST_Agnode_s,h.ST_Agnode_s)>(r15, r16);

        if $r6 == null goto label04;

        staticinvoke <gen.lib.dotgen.class2__c: void merge_chain(h.ST_Agraph_s,h.ST_Agedge_s,h.ST_Agedge_s,boolean)>(r0, r1, $r6, 1);

     label03:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("659ld5tcseo3l0hopxb3pf0vv", "interclrep");

        return;

     label04:
        $i2 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r15);

        $i3 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r16);

        if $i2 != $i3 goto label06;

     label05:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("659ld5tcseo3l0hopxb3pf0vv", "interclrep");

        return;

     label06:
        staticinvoke <gen.lib.dotgen.class2__c: void make_chain(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, r15, r16, r1);

        r18 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r1);

     label07:
        if r18 == null goto label08;

        $r7 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r18);

        $i4 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r7);

        $i5 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r16);

        if $i4 > $i5 goto label08;

        staticinvoke <smetana.core.Macro: void ED_edge_type(h.ST_Agedge_s,int)>(r18, 5);

        $r8 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r18);

        $r9 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>($r8);

        $r10 = $r9.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r11 = virtualinvoke $r10.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r18 = (h.ST_Agedge_s) $r11;

        goto label07;

     label08:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("659ld5tcseo3l0hopxb3pf0vv", "interclrep");

        goto label11;

     label09:
        $r13 := @caughtexception;

     label10:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("659ld5tcseo3l0hopxb3pf0vv", "interclrep");

        throw $r13;

     label11:
        return;

        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label05 with label09;
        catch java.lang.Throwable from label06 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public static boolean is_cluster_edge(h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0;
        h.ST_Agnode_s $r1, $r2;
        int $i0, $i1;
        java.lang.Throwable $r3;
        boolean $z1;

        r0 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("c0cx00ki1i1kx0bp84e7xjg8d", "is_cluster_edge");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $i0 = staticinvoke <smetana.core.Macro: int ND_ranktype(h.ST_Agnode_s)>($r1);

        if $i0 == 7 goto label2;

        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $i1 = staticinvoke <smetana.core.Macro: int ND_ranktype(h.ST_Agnode_s)>($r2);

        if $i1 != 7 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c0cx00ki1i1kx0bp84e7xjg8d", "is_cluster_edge");

        return $z1;

     label5:
        $r3 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c0cx00ki1i1kx0bp84e7xjg8d", "is_cluster_edge");

        throw $r3;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public static void merge_chain(h.ST_Agraph_s, h.ST_Agedge_s, h.ST_Agedge_s, boolean)
    {
        h.ST_Agedge_s r0, r3, r13;
        h.ST_Agnode_s $r1, $r2, $r4, $r6, $r7;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0;
        h.ST_Agraph_s r5;
        h.ST_elist $r8;
        smetana.core.CArrayOfStar $r9;
        java.lang.Object $r10;
        java.lang.Throwable $r11;

        r5 := @parameter0: h.ST_Agraph_s;

        r0 := @parameter1: h.ST_Agedge_s;

        r3 := @parameter2: h.ST_Agedge_s;

        z0 := @parameter3: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("c45973dtaighb3u0auuekcs1y", "merge_chain");

     label1:
        $r1 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r1);

        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r2);

        i2 = staticinvoke <smetana.core.Macro: int MAX(int,int)>($i0, $i1);

        staticinvoke <smetana.core.Macro: void ED_to_virt(h.ST_Agedge_s,h.ST_Agedge_s)>(r0, r3);

        r13 = r3;

     label2:
        if z0 == 0 goto label3;

        $i10 = staticinvoke <smetana.core.Macro: int ED_count(h.ST_Agedge_s)>(r13);

        $i11 = staticinvoke <smetana.core.Macro: int ED_count(h.ST_Agedge_s)>(r0);

        $i12 = $i10 + $i11;

        staticinvoke <smetana.core.Macro: void ED_count(h.ST_Agedge_s,int)>(r13, $i12);

     label3:
        $i3 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>(r13);

        $i4 = staticinvoke <smetana.core.Macro: int ED_xpenalty(h.ST_Agedge_s)>(r0);

        $i5 = $i3 + $i4;

        staticinvoke <smetana.core.Macro: void ED_xpenalty(h.ST_Agedge_s,int)>(r13, $i5);

        $i6 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r13);

        $i7 = staticinvoke <smetana.core.Macro: int ED_weight(h.ST_Agedge_s)>(r0);

        $i8 = $i6 + $i7;

        staticinvoke <smetana.core.Macro: void ED_weight(h.ST_Agedge_s,int)>(r13, $i8);

        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r13);

        $i9 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r4);

        if $i9 != i2 goto label4;

        goto label5;

     label4:
        $r6 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r13);

        staticinvoke <gen.lib.dotgen.class2__c: void incr_width(h.ST_Agraph_s,h.ST_Agnode_s)>(r5, $r6);

        $r7 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r13);

        $r8 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>($r7);

        $r9 = $r8.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r10 = virtualinvoke $r9.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r13 = (h.ST_Agedge_s) $r10;

        if r13 != null goto label2;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c45973dtaighb3u0auuekcs1y", "merge_chain");

        goto label8;

     label6:
        $r11 := @caughtexception;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("c45973dtaighb3u0auuekcs1y", "merge_chain");

        throw $r11;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static boolean mergeable(h.ST_Agedge_s, h.ST_Agedge_s)
    {
        h.ST_Agedge_s r0, r1;
        h.ST_Agnode_s $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;
        h.ST_textlabel_t $r6, $r7;
        java.lang.Throwable $r8;

        r0 := @parameter0: h.ST_Agedge_s;

        r1 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bg5r9wlego0d8pv0hr96zt45c", "mergeable");

     label1:
        if r0 == null goto label3;

        if r1 == null goto label3;

        $r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r0);

        $r3 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r1);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r0);

        $r5 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r1);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r4, $r5);

        if $z1 == 0 goto label3;

        $r6 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r0);

        $r7 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r1);

        $z2 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r6, $r7);

        if $z2 == 0 goto label3;

        $z3 = staticinvoke <gen.lib.dotgen.position__c: boolean ports_eq(h.ST_Agedge_s,h.ST_Agedge_s)>(r0, r1);

        if $z3 == 0 goto label3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bg5r9wlego0d8pv0hr96zt45c", "mergeable");

        return 1;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bg5r9wlego0d8pv0hr96zt45c", "mergeable");

        return 0;

     label4:
        $r8 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bg5r9wlego0d8pv0hr96zt45c", "mergeable");

        throw $r8;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label3 to label3 with label4;
    }

    public static void class2(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r1, $r9, $r59;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        h.ST_nlist_t $r2, $r3, $r6;
        smetana.core.CArrayOfStar $r4, $r5, $r7, $r57;
        h.ST_Agnode_s $r8, $r11, r12, $r13, r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r47, $r48, $r50, $r51, $r52, $r53, $r54, $r55, $r56, r62, r64, $r67, $r68, $r69, $r70;
        h.ST_Agedge_s $r10, $r23, $r27, $r31, $r45, $r46, $r49, r63, r65, r66;
        h.ST_textlabel_t $r28, $r29, $r42, $r43;
        smetana.core.Z $r30, $r44;
        java.lang.Object $r58;
        java.lang.Throwable $r60;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("d0bxlkysxucmww7t74u9krrgz", "class2");

     label01:
        staticinvoke <smetana.core.Macro: void GD_nlist(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, null);

        staticinvoke <smetana.core.Macro: void GD_n_nodes(h.ST_Agraph_s,int)>(r0, 0);

        staticinvoke <gen.lib.dotgen.cluster__c: void mark_clusters(h.ST_Agraph_s)>(r0);

        i17 = 1;

     label02:
        $i0 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if i17 > $i0 goto label03;

        $r57 = staticinvoke <smetana.core.Macro: smetana.core.CArrayOfStar GD_clust(h.ST_Agraph_s)>(r0);

        $r58 = virtualinvoke $r57.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i17);

        $r59 = (h.ST_Agraph_s) $r58;

        staticinvoke <gen.lib.dotgen.cluster__c: void build_skeleton(h.ST_Agraph_s,h.ST_Agraph_s)>(r0, $r59);

        i17 = i17 + 1;

        goto label02;

     label03:
        r62 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agfstnode(h.ST_Agraph_s)>(r0);

     label04:
        if r62 == null goto label09;

        r63 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agedge_s agfstout(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r62);

     label05:
        if r63 == null goto label08;

        $r51 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r63);

        $i11 = staticinvoke <smetana.core.Macro: int ND_weight_class(h.ST_Agnode_s)>($r51);

        if $i11 > 2 goto label06;

        $r55 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r63);

        $r56 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r63);

        $i15 = staticinvoke <smetana.core.Macro: int ND_weight_class(h.ST_Agnode_s)>($r56);

        $i16 = $i15 + 1;

        staticinvoke <smetana.core.Macro: void ND_weight_class(h.ST_Agnode_s,int)>($r55, $i16);

     label06:
        $r52 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r63);

        $i12 = staticinvoke <smetana.core.Macro: int ND_weight_class(h.ST_Agnode_s)>($r52);

        if $i12 > 2 goto label07;

        $r53 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r63);

        $r54 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r63);

        $i13 = staticinvoke <smetana.core.Macro: int ND_weight_class(h.ST_Agnode_s)>($r54);

        $i14 = $i13 + 1;

        staticinvoke <smetana.core.Macro: void ND_weight_class(h.ST_Agnode_s,int)>($r53, $i14);

     label07:
        r63 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agedge_s agnxtout(h.ST_Agraph_s,h.ST_Agedge_s)>(r0, r63);

        goto label05;

     label08:
        r62 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agnxtnode(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r62);

        goto label04;

     label09:
        r64 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agfstnode(h.ST_Agraph_s)>(r0);

     label10:
        if r64 == null goto label29;

        $r9 = staticinvoke <smetana.core.Macro: h.ST_Agraph_s ND_clust(h.ST_Agnode_s)>(r64);

        if $r9 != null goto label11;

        $r50 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s UF_find(h.ST_Agnode_s)>(r64);

        $z12 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r64, $r50);

        if $z12 == 0 goto label11;

        staticinvoke <gen.lib.dotgen.fastgr__c: void fast_node(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r64);

        $i9 = staticinvoke <smetana.core.Macro: int GD_n_nodes(h.ST_Agraph_s)>(r0);

        $i10 = $i9 + 1;

        staticinvoke <smetana.core.Macro: void GD_n_nodes(h.ST_Agraph_s,int)>(r0, $i10);

     label11:
        r65 = null;

        r66 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agedge_s agfstout(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r64);

     label12:
        if r66 == null goto label28;

        $r10 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r66);

        if $r10 == null goto label13;

        r65 = r66;

        goto label27;

     label13:
        $z1 = staticinvoke <gen.lib.dotgen.class2__c: boolean is_cluster_edge(h.ST_Agedge_s)>(r66);

        if $z1 == 0 goto label16;

        $z11 = staticinvoke <gen.lib.dotgen.class2__c: boolean mergeable(h.ST_Agedge_s,h.ST_Agedge_s)>(r65, r66);

        if $z11 == 0 goto label15;

        $r46 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r65);

        if $r46 == null goto label14;

        $r49 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r65);

        staticinvoke <gen.lib.dotgen.class2__c: void merge_chain(h.ST_Agraph_s,h.ST_Agedge_s,h.ST_Agedge_s,boolean)>(r0, r66, $r49, 0);

        staticinvoke <gen.lib.dotgen.fastgr__c: void other_edge(h.ST_Agedge_s)>(r66);

        goto label27;

     label14:
        $r47 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $i7 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r47);

        $r48 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $i8 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r48);

        if $i7 != $i8 goto label27;

        staticinvoke <gen.lib.dotgen.fastgr__c: void merge_oneway(h.ST_Agedge_s,h.ST_Agedge_s)>(r66, r65);

        staticinvoke <gen.lib.dotgen.fastgr__c: void other_edge(h.ST_Agedge_s)>(r66);

        goto label27;

     label15:
        staticinvoke <gen.lib.dotgen.class2__c: void interclrep(h.ST_Agraph_s,h.ST_Agedge_s)>(r0, r66);

        r65 = r66;

        goto label27;

     label16:
        if r65 == null goto label19;

        $r36 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $r37 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r65);

        $z7 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r36, $r37);

        if $z7 == 0 goto label19;

        $r38 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $r39 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r65);

        $z8 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r38, $r39);

        if $z8 == 0 goto label19;

        $r40 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $i5 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r40);

        $r41 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $i6 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r41);

        if $i5 != $i6 goto label17;

        staticinvoke <gen.lib.dotgen.fastgr__c: void merge_oneway(h.ST_Agedge_s,h.ST_Agedge_s)>(r66, r65);

        staticinvoke <gen.lib.dotgen.fastgr__c: void other_edge(h.ST_Agedge_s)>(r66);

        goto label27;

     label17:
        $r42 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r66);

        if $r42 != null goto label19;

        $r43 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r65);

        if $r43 != null goto label19;

        $z9 = staticinvoke <gen.lib.dotgen.position__c: boolean ports_eq(h.ST_Agedge_s,h.ST_Agedge_s)>(r66, r65);

        if $z9 == 0 goto label19;

        $r44 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $z10 = $r44.<smetana.core.Z: boolean Concentrate>;

        if $z10 == 0 goto label18;

        staticinvoke <smetana.core.Macro: void ED_edge_type(h.ST_Agedge_s,int)>(r66, 6);

        goto label27;

     label18:
        $r45 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r65);

        staticinvoke <gen.lib.dotgen.class2__c: void merge_chain(h.ST_Agraph_s,h.ST_Agedge_s,h.ST_Agedge_s,boolean)>(r0, r66, $r45, 1);

        staticinvoke <gen.lib.dotgen.fastgr__c: void other_edge(h.ST_Agedge_s)>(r66);

        goto label27;

     label19:
        $r67 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $r68 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $z13 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r67, $r68);

        if $z13 == 0 goto label20;

        staticinvoke <gen.lib.dotgen.fastgr__c: void other_edge(h.ST_Agedge_s)>(r66);

        r65 = r66;

        goto label27;

     label20:
        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        r12 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s UF_find(h.ST_Agnode_s)>($r11);

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        r14 = staticinvoke <gen.lib.common.utils__c: h.ST_Agnode_s UF_find(h.ST_Agnode_s)>($r13);

        $r15 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $z2 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r15, r12);

        if $z2 != 0 goto label27;

        $r16 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $z3 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r16, r14);

        if $z3 == 0 goto label21;

        goto label27;

     label21:
        $r17 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r17);

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $i2 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r18);

        if $i1 != $i2 goto label22;

        staticinvoke <gen.lib.dotgen.fastgr__c: void flat_edge(h.ST_Agraph_s,h.ST_Agedge_s)>(r0, r66);

        r65 = r66;

        goto label27;

     label22:
        $r19 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $i3 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r19);

        $r20 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $i4 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r20);

        if $i3 <= $i4 goto label23;

        $r34 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $r35 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        staticinvoke <gen.lib.dotgen.class2__c: void make_chain(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, $r34, $r35, r66);

        r65 = r66;

        goto label27;

     label23:
        $r21 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $r22 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        $r23 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s agfindedge(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agnode_s)>(r0, $r21, $r22);

        if $r23 == null goto label26;

        $r25 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r23);

        $r26 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $z4 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>($r25, $r26);

        if $z4 == 0 goto label26;

        $r27 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>($r23);

        if $r27 != null goto label24;

        $r32 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>($r23);

        $r33 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r23);

        staticinvoke <gen.lib.dotgen.class2__c: void make_chain(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, $r32, $r33, $r23);

     label24:
        $r28 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r66);

        if $r28 != null goto label26;

        $r29 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>($r23);

        if $r29 != null goto label26;

        $z5 = staticinvoke <gen.lib.dotgen.position__c: boolean ports_eq(h.ST_Agedge_s,h.ST_Agedge_s)>(r66, $r23);

        if $z5 == 0 goto label26;

        $r30 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $z6 = $r30.<smetana.core.Z: boolean Concentrate>;

        if $z6 == 0 goto label25;

        staticinvoke <smetana.core.Macro: void ED_edge_type(h.ST_Agedge_s,int)>(r66, 6);

        staticinvoke <smetana.core.Macro: void ED_conc_opp_flag(h.ST_Agedge_s,boolean)>($r23, 1);

        goto label27;

     label25:
        staticinvoke <gen.lib.dotgen.fastgr__c: void other_edge(h.ST_Agedge_s)>(r66);

        $r31 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>($r23);

        staticinvoke <gen.lib.dotgen.class2__c: void merge_chain(h.ST_Agraph_s,h.ST_Agedge_s,h.ST_Agedge_s,boolean)>(r0, r66, $r31, 1);

        goto label27;

     label26:
        $r69 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r66);

        $r70 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r66);

        staticinvoke <gen.lib.dotgen.class2__c: void make_chain(h.ST_Agraph_s,h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r0, $r69, $r70, r66);

        r65 = r66;

     label27:
        r66 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agedge_s agnxtout(h.ST_Agraph_s,h.ST_Agedge_s)>(r0, r66);

        goto label12;

     label28:
        r64 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agnxtnode(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r64);

        goto label10;

     label29:
        $r1 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean NEQ(java.lang.Object,java.lang.Object)>(r0, $r1);

        if $z0 == 0 goto label30;

        $r2 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $r3 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $r4 = $r3.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r5 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar REALLOC(int,smetana.core.CArrayOfStar,java.lang.Class)>(1, $r4, class "Lh/ST_Agnode_s;");

        $r2.<h.ST_nlist_t: smetana.core.CArrayOfStar list> = $r5;

        $r6 = staticinvoke <smetana.core.Macro: h.ST_nlist_t GD_comp(h.ST_Agraph_s)>(r0);

        $r7 = $r6.<h.ST_nlist_t: smetana.core.CArrayOfStar list>;

        $r8 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

        virtualinvoke $r7.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(0, $r8);

     label30:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d0bxlkysxucmww7t74u9krrgz", "class2");

        goto label33;

     label31:
        $r60 := @caughtexception;

     label32:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d0bxlkysxucmww7t74u9krrgz", "class2");

        throw $r60;

     label33:
        return;

        catch java.lang.Throwable from label01 to label30 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
    }
}
