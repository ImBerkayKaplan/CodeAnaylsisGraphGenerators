public class jcckit.util.ConfigParameters extends java.lang.Object
{
    private final jcckit.util.ConfigData _configData;
    private static net.sourceforge.plantuml.ugraphic.color.HColorSet colors;

    public void <init>(jcckit.util.ConfigData)
    {
        jcckit.util.ConfigParameters r0;
        jcckit.util.ConfigData r1;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: jcckit.util.ConfigData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData> = r1;

        return;
    }

    public java.lang.String getFullKey(java.lang.String)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, $r3;
        jcckit.util.ConfigData $r2;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        $r3 = interfaceinvoke $r2.<jcckit.util.ConfigData: java.lang.String getFullKey(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String get(java.lang.String)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, r3, $r5;
        jcckit.util.ConfigData $r2;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        r3 = interfaceinvoke $r2.<jcckit.util.ConfigData: java.lang.String get(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke r0.<jcckit.util.ConfigParameters: java.lang.String getFullKey(java.lang.String)>(r1);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label1:
        return r3;
    }

    public java.lang.String get(java.lang.String, java.lang.String)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, r3, r4;
        jcckit.util.ConfigData $r2;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r2 = r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        r4 = interfaceinvoke $r2.<jcckit.util.ConfigData: java.lang.String get(java.lang.String)>(r1);

        if r4 != null goto label1;

        r4 = r3;

     label1:
        return r4;
    }

    public boolean getBoolean(java.lang.String)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<jcckit.util.ConfigParameters: java.lang.String get(java.lang.String)>(r1);

        $z0 = specialinvoke r0.<jcckit.util.ConfigParameters: boolean parseBoolean(java.lang.String,java.lang.String)>($r2, r1);

        return $z0;
    }

    public boolean getBoolean(java.lang.String, boolean)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, r3;
        jcckit.util.ConfigData $r2;
        boolean z0, $z1;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        r3 = interfaceinvoke $r2.<jcckit.util.ConfigData: java.lang.String get(java.lang.String)>(r1);

        if r3 != null goto label1;

        $z1 = z0;

        goto label2;

     label1:
        $z1 = specialinvoke r0.<jcckit.util.ConfigParameters: boolean parseBoolean(java.lang.String,java.lang.String)>(r3, r1);

     label2:
        return $z1;
    }

    private boolean parseBoolean(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r2;
        boolean $z0, $z1;
        jcckit.util.ConfigParameters r1;
        java.lang.NumberFormatException $r3;

        r1 := @this: jcckit.util.ConfigParameters;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r3 = specialinvoke r1.<jcckit.util.ConfigParameters: java.lang.NumberFormatException createNumberFormatException(java.lang.String,java.lang.String,java.lang.String)>("boolean", r0, r2);

        throw $r3;
    }

    private java.lang.NumberFormatException createNumberFormatException(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.NumberFormatException $r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r9, $r10, $r12;
        java.lang.String r3, r7, $r8, r11, $r13;
        jcckit.util.ConfigParameters r6;

        r6 := @this: jcckit.util.ConfigParameters;

        r3 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $r0 = new java.lang.NumberFormatException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke r6.<jcckit.util.ConfigParameters: java.lang.String getFullKey(java.lang.String)>(r7);

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r13);

        return $r0;
    }

    public int getInt(java.lang.String)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, $r2;
        int $i0;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<jcckit.util.ConfigParameters: java.lang.String get(java.lang.String)>(r1);

        $i0 = specialinvoke r0.<jcckit.util.ConfigParameters: int parseInt(java.lang.String,java.lang.String)>($r2, r1);

        return $i0;
    }

    public int getInt(java.lang.String, int)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, r3;
        jcckit.util.ConfigData $r2;
        int i0, $i1;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        r3 = interfaceinvoke $r2.<jcckit.util.ConfigData: java.lang.String get(java.lang.String)>(r1);

        if r3 != null goto label1;

        $i1 = i0;

        goto label2;

     label1:
        $i1 = specialinvoke r0.<jcckit.util.ConfigParameters: int parseInt(java.lang.String,java.lang.String)>(r3, r1);

     label2:
        return $i1;
    }

    private int parseInt(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r5;
        java.lang.Integer $r1;
        int $i0;
        java.lang.NumberFormatException $r2, $r6;
        jcckit.util.ConfigParameters r4;

        r4 := @this: jcckit.util.ConfigParameters;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>(r0);

        $i0 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

     label2:
        return $i0;

     label3:
        $r2 := @caughtexception;

        $r6 = specialinvoke r4.<jcckit.util.ConfigParameters: java.lang.NumberFormatException createNumberFormatException(java.lang.String,java.lang.String,java.lang.String)>("number", r0, r5);

        throw $r6;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public double getDouble(java.lang.String)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, $r2;
        double $d0;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<jcckit.util.ConfigParameters: java.lang.String get(java.lang.String)>(r1);

        $d0 = specialinvoke r0.<jcckit.util.ConfigParameters: double parseDouble(java.lang.String,java.lang.String)>($r2, r1);

        return $d0;
    }

    public double getDouble(java.lang.String, double)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, r3;
        jcckit.util.ConfigData $r2;
        double d0, $d1;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r2 = r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        r3 = interfaceinvoke $r2.<jcckit.util.ConfigData: java.lang.String get(java.lang.String)>(r1);

        if r3 != null goto label1;

        $d1 = d0;

        goto label2;

     label1:
        $d1 = specialinvoke r0.<jcckit.util.ConfigParameters: double parseDouble(java.lang.String,java.lang.String)>(r3, r1);

     label2:
        return $d1;
    }

    private double parseDouble(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r4;
        double $d0;
        java.lang.NumberFormatException $r1, $r5;
        jcckit.util.ConfigParameters r3;

        r3 := @this: jcckit.util.ConfigParameters;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r0);

     label2:
        return $d0;

     label3:
        $r1 := @caughtexception;

        $r5 = specialinvoke r3.<jcckit.util.ConfigParameters: java.lang.NumberFormatException createNumberFormatException(java.lang.String,java.lang.String,java.lang.String)>("number", r0, r4);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public double[] getDoubleArray(java.lang.String)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, $r2;
        double[] $r3;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<jcckit.util.ConfigParameters: java.lang.String get(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<jcckit.util.ConfigParameters: double[] parseDoubleArray(java.lang.String,java.lang.String)>($r2, r1);

        return $r3;
    }

    public double[] getDoubleArray(java.lang.String, double[])
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, r3;
        jcckit.util.ConfigData $r2;
        double[] r4, $r5;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: double[];

        $r2 = r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        r3 = interfaceinvoke $r2.<jcckit.util.ConfigData: java.lang.String get(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r5 = r4;

        goto label2;

     label1:
        $r5 = specialinvoke r0.<jcckit.util.ConfigParameters: double[] parseDoubleArray(java.lang.String,java.lang.String)>(r3, r1);

     label2:
        return $r5;
    }

    private double[] parseDoubleArray(java.lang.String, java.lang.String)
    {
        java.util.StringTokenizer $r0;
        java.lang.String r1, $r3, r6;
        int $i0, $i1, i2;
        double[] r2;
        double $d0;
        java.lang.NumberFormatException $r4, $r7;
        jcckit.util.ConfigParameters r5;

        r5 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

     label1:
        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String)>(r1);

        $i0 = virtualinvoke $r0.<java.util.StringTokenizer: int countTokens()>();

        r2 = newarray (double)[$i0];

        i2 = 0;

     label2:
        $i1 = lengthof r2;

        if i2 >= $i1 goto label3;

        $r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        r2[i2] = $d0;

        i2 = i2 + 1;

        goto label2;

     label3:
        return r2;

     label4:
        $r4 := @caughtexception;

        $r7 = specialinvoke r5.<jcckit.util.ConfigParameters: java.lang.NumberFormatException createNumberFormatException(java.lang.String,java.lang.String,java.lang.String)>("sequence of numbers", r1, r6);

        throw $r7;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    public java.awt.Color getColor(java.lang.String)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, $r2;
        java.awt.Color $r3;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<jcckit.util.ConfigParameters: java.lang.String get(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<jcckit.util.ConfigParameters: java.awt.Color parseColor(java.lang.String,java.lang.String)>($r2, r1);

        return $r3;
    }

    public java.awt.Color getColor(java.lang.String, java.awt.Color)
    {
        jcckit.util.ConfigParameters r0;
        java.lang.String r1, r3;
        jcckit.util.ConfigData $r2;
        java.awt.Color r4, $r5;

        r0 := @this: jcckit.util.ConfigParameters;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.awt.Color;

        $r2 = r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        r3 = interfaceinvoke $r2.<jcckit.util.ConfigData: java.lang.String get(java.lang.String)>(r1);

        if r3 != null goto label1;

        $r5 = r4;

        goto label2;

     label1:
        $r5 = specialinvoke r0.<jcckit.util.ConfigParameters: java.awt.Color parseColor(java.lang.String,java.lang.String)>(r3, r1);

     label2:
        return $r5;
    }

    private java.awt.Color parseColor(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r4;
        int $i0;
        jcckit.util.ConfigParameters r1;
        java.lang.NumberFormatException $r2, $r5;
        java.awt.Color $r6;

        r1 := @this: jcckit.util.ConfigParameters;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r6 = null;

        goto label3;

     label2:
        $r6 = specialinvoke r1.<jcckit.util.ConfigParameters: java.awt.Color decodeInternal(java.lang.String)>(r0);

     label3:
        return $r6;

     label4:
        $r2 := @caughtexception;

        $r5 = specialinvoke r1.<jcckit.util.ConfigParameters: java.lang.NumberFormatException createNumberFormatException(java.lang.String,java.lang.String,java.lang.String)>("number", r0, r4);

        throw $r5;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    private java.awt.Color decodeInternal(java.lang.String)
    {
        java.lang.String r0;
        java.awt.Color $r1, $r6, $r9;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r2;
        net.sourceforge.plantuml.api.ThemeStyle $r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5;
        net.sourceforge.plantuml.ugraphic.color.NoSuchColorException $r7;
        jcckit.util.ConfigParameters r10;

        r10 := @this: jcckit.util.ConfigParameters;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label4;

     label1:
        $r2 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        $r4 = <jcckit.util.ConfigParameters: net.sourceforge.plantuml.ugraphic.color.HColorSet colors>;

        $r3 = <net.sourceforge.plantuml.api.ThemeStyle: net.sourceforge.plantuml.api.ThemeStyle LIGHT_REGULAR>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor)>($r3, r0, null);

        $r6 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r5);

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r9 = <java.awt.Color: java.awt.Color WHITE>;

        return $r9;

     label4:
        $r1 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>(r0);

        return $r1;

        catch net.sourceforge.plantuml.ugraphic.color.NoSuchColorException from label1 to label2 with label3;
    }

    public jcckit.util.ConfigParameters getNode(java.lang.String)
    {
        jcckit.util.ConfigParameters $r0, r1;
        java.lang.String r2;
        jcckit.util.ConfigData $r3, $r4;

        r1 := @this: jcckit.util.ConfigParameters;

        r2 := @parameter0: java.lang.String;

        $r0 = new jcckit.util.ConfigParameters;

        $r3 = r1.<jcckit.util.ConfigParameters: jcckit.util.ConfigData _configData>;

        $r4 = interfaceinvoke $r3.<jcckit.util.ConfigData: jcckit.util.ConfigData getNode(java.lang.String)>(r2);

        specialinvoke $r0.<jcckit.util.ConfigParameters: void <init>(jcckit.util.ConfigData)>($r4);

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r0;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        <jcckit.util.ConfigParameters: net.sourceforge.plantuml.ugraphic.color.HColorSet colors> = $r0;

        return;
    }
}
