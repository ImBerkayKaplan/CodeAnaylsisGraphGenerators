class net.sourceforge.plantuml.sprite.SpriteImage$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.ugraphic.color.HColor val$color;
    final double val$scale;
    final net.sourceforge.plantuml.sprite.SpriteImage this$0;

    void <init>(net.sourceforge.plantuml.sprite.SpriteImage, net.sourceforge.plantuml.ugraphic.color.HColor, double)
    {
        net.sourceforge.plantuml.sprite.SpriteImage$1 r0;
        net.sourceforge.plantuml.sprite.SpriteImage r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteImage$1;

        r1 := @parameter0: net.sourceforge.plantuml.sprite.SpriteImage;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter2: double;

        r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: net.sourceforge.plantuml.sprite.SpriteImage this$0> = r1;

        r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: net.sourceforge.plantuml.ugraphic.color.HColor val$color> = r2;

        r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: double val$scale> = d0;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sprite.SpriteImage$1 r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.sprite.SpriteImage $r3, $r10;
        net.sourceforge.plantuml.ugraphic.UImage $r4, $r8, $r9, $r11, $r12;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r6;
        java.awt.Color $r7;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteImage$1;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: net.sourceforge.plantuml.ugraphic.color.HColor val$color>;

        if $r1 != null goto label1;

        $r10 = r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: net.sourceforge.plantuml.sprite.SpriteImage this$0>;

        $r11 = staticinvoke <net.sourceforge.plantuml.sprite.SpriteImage: net.sourceforge.plantuml.ugraphic.UImage access$000(net.sourceforge.plantuml.sprite.SpriteImage)>($r10);

        $d1 = r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: double val$scale>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UImage: net.sourceforge.plantuml.ugraphic.UImage scale(double)>($d1);

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        goto label2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: net.sourceforge.plantuml.sprite.SpriteImage this$0>;

        $r4 = staticinvoke <net.sourceforge.plantuml.sprite.SpriteImage: net.sourceforge.plantuml.ugraphic.UImage access$000(net.sourceforge.plantuml.sprite.SpriteImage)>($r3);

        $r5 = r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: net.sourceforge.plantuml.ugraphic.color.HColor val$color>;

        $r6 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r5;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: java.awt.Color getColor999()>();

        $r8 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UImage: net.sourceforge.plantuml.ugraphic.UImage muteColor(java.awt.Color)>($r7);

        $d0 = r0.<net.sourceforge.plantuml.sprite.SpriteImage$1: double val$scale>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UImage: net.sourceforge.plantuml.ugraphic.UImage scale(double)>($d0);

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

     label2:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.sprite.SpriteImage$1 r1;
        net.sourceforge.plantuml.sprite.SpriteImage $r2, $r4;
        net.sourceforge.plantuml.ugraphic.UImage $r3, $r5;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.graphic.StringBounder r6;

        r1 := @this: net.sourceforge.plantuml.sprite.SpriteImage$1;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r2 = r1.<net.sourceforge.plantuml.sprite.SpriteImage$1: net.sourceforge.plantuml.sprite.SpriteImage this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.sprite.SpriteImage: net.sourceforge.plantuml.ugraphic.UImage access$000(net.sourceforge.plantuml.sprite.SpriteImage)>($r2);

        $i0 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UImage: int getWidth()>();

        $d1 = (double) $i0;

        $d0 = r1.<net.sourceforge.plantuml.sprite.SpriteImage$1: double val$scale>;

        $d2 = $d1 * $d0;

        $r4 = r1.<net.sourceforge.plantuml.sprite.SpriteImage$1: net.sourceforge.plantuml.sprite.SpriteImage this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.sprite.SpriteImage: net.sourceforge.plantuml.ugraphic.UImage access$000(net.sourceforge.plantuml.sprite.SpriteImage)>($r4);

        $i1 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UImage: int getHeight()>();

        $d4 = (double) $i1;

        $d3 = r1.<net.sourceforge.plantuml.sprite.SpriteImage$1: double val$scale>;

        $d5 = $d4 * $d3;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d2, $d5);

        return $r0;
    }
}
