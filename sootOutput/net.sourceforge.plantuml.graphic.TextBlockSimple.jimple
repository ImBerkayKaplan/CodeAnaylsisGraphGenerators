public final class net.sourceforge.plantuml.graphic.TextBlockSimple extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private java.util.List lines;
    private final net.sourceforge.plantuml.cucadiagram.Display texts;
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment;
    private final net.sourceforge.plantuml.SpriteContainer spriteContainer;
    private final double maxMessageSize;

    public void <init>(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.SpriteContainer, double)
    {
        net.sourceforge.plantuml.graphic.TextBlockSimple r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.graphic.FontConfiguration r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r3;
        net.sourceforge.plantuml.SpriteContainer r4;
        double d0;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r4 := @parameter3: net.sourceforge.plantuml.SpriteContainer;

        d0 := @parameter4: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.cucadiagram.Display texts> = r1;

        r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r2;

        r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment> = r3;

        r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.SpriteContainer spriteContainer> = r4;

        r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: double maxMessageSize> = d0;

        return;
    }

    private java.util.List getLines(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlockSimple r0;
        java.util.List $r1, $r2, $r11;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        java.util.ArrayList $r4;
        net.sourceforge.plantuml.cucadiagram.Display $r5;
        java.util.ListIterator r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.CharSequence r8;
        java.lang.String $r9;
        net.sourceforge.plantuml.EmbeddedDiagram $r10;
        net.sourceforge.plantuml.EmbeddedDiagram$Draw $r12;
        java.lang.IllegalStateException $r13;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: java.util.List lines>;

        if $r1 != null goto label5;

        if r3 != null goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>()>();

        throw $r13;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: java.util.List lines> = $r4;

        $r5 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.cucadiagram.Display texts>;

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.Display: java.util.ListIterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.CharSequence) $r7;

        $z1 = r8 instanceof net.sourceforge.plantuml.EmbeddedDiagram;

        if $z1 == 0 goto label3;

        $r11 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: java.util.List lines>;

        $r10 = (net.sourceforge.plantuml.EmbeddedDiagram) r8;

        $r12 = virtualinvoke $r10.<net.sourceforge.plantuml.EmbeddedDiagram: net.sourceforge.plantuml.EmbeddedDiagram$Draw asDraw(net.sourceforge.plantuml.ISkinSimple)>(null);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        goto label4;

     label3:
        $r9 = interfaceinvoke r8.<java.lang.CharSequence: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: void addInLines(net.sourceforge.plantuml.graphic.StringBounder,java.lang.String)>(r3, $r9);

     label4:
        goto label2;

     label5:
        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: java.util.List lines>;

        return $r2;
    }

    private void addInLines(net.sourceforge.plantuml.graphic.StringBounder, java.lang.String)
    {
        net.sourceforge.plantuml.graphic.TextBlockSimple r0;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7;
        byte $b0, $b1, $b2, $b4, $b5;
        java.lang.StringBuilder $r1, $r5, $r7, $r8, $r14, $r16, $r17, $r18;
        java.lang.String r2, $r3, $r6, $r9, $r11, $r15, $r19, $r21, r25;
        int $i3, i6;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        java.util.StringTokenizer $r13;
        boolean $z0, $z1;
        char c7;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 := @parameter1: java.lang.String;

        $d0 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: double maxMessageSize>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label01;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: void addSingleLine(java.lang.String)>(r2);

        goto label11;

     label01:
        $d1 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: double maxMessageSize>;

        $b1 = $d1 cmpl 0.0;

        if $b1 <= 0 goto label06;

        $r13 = new java.util.StringTokenizer;

        specialinvoke $r13.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r2, " ", 1);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

     label02:
        $z0 = virtualinvoke $r13.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label05;

        r25 = virtualinvoke $r13.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        d6 = specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder,java.lang.String)>(r4, $r19);

        $d5 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: double maxMessageSize>;

        $b5 = d6 cmpl $d5;

        if $b5 <= 0 goto label03;

        $r21 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: void addSingleLineNoSpace(java.lang.String)>($r21);

        virtualinvoke $r14.<java.lang.StringBuilder: void setLength(int)>(0);

        $z1 = virtualinvoke r25.<java.lang.String: boolean startsWith(java.lang.String)>(" ");

        if $z1 != 0 goto label04;

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        goto label04;

     label03:
        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

     label04:
        goto label02;

     label05:
        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: void addSingleLineNoSpace(java.lang.String)>($r15);

        goto label11;

     label06:
        $d2 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: double maxMessageSize>;

        $b2 = $d2 cmpg 0.0;

        if $b2 >= 0 goto label11;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        i6 = 0;

     label07:
        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if i6 >= $i3 goto label10;

        c7 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i6);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        d7 = specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder,java.lang.String)>(r4, $r9);

        $d3 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: double maxMessageSize>;

        $d4 = neg $d3;

        $b4 = d7 cmpl $d4;

        if $b4 <= 0 goto label08;

        $r11 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: void addSingleLineNoSpace(java.lang.String)>($r11);

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        if c7 == 32 goto label09;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

        goto label09;

     label08:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c7);

     label09:
        i6 = i6 + 1;

        goto label07;

     label10:
        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: void addSingleLineNoSpace(java.lang.String)>($r3);

     label11:
        return;
    }

    private void addSingleLineNoSpace(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0;
        net.sourceforge.plantuml.graphic.TextBlockSimple r1;
        net.sourceforge.plantuml.SpriteContainer $r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        java.util.List $r5;
        net.sourceforge.plantuml.graphic.SingleLine $r6;

        r1 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: boolean mtches(java.lang.CharSequence,java.lang.String)>(r0, "^[%s]*$ ");

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        $r5 = r1.<net.sourceforge.plantuml.graphic.TextBlockSimple: java.util.List lines>;

        $r4 = r1.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = r1.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r2 = r1.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.SpriteContainer spriteContainer>;

        $r6 = staticinvoke <net.sourceforge.plantuml.graphic.SingleLine: net.sourceforge.plantuml.graphic.SingleLine withSomeHtmlTag(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.SpriteContainer)>(r0, $r4, $r3, $r2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    private void addSingleLine(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.TextBlockSimple r0;
        java.lang.String r1;
        net.sourceforge.plantuml.SpriteContainer $r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        java.util.List $r5;
        net.sourceforge.plantuml.graphic.SingleLine $r6;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: java.util.List lines>;

        $r4 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.SpriteContainer spriteContainer>;

        $r6 = staticinvoke <net.sourceforge.plantuml.graphic.SingleLine: net.sourceforge.plantuml.graphic.SingleLine withSomeHtmlTag(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.SpriteContainer)>(r1, $r4, $r3, $r2);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        return;
    }

    private double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder, java.lang.String)
    {
        java.lang.String r0;
        net.sourceforge.plantuml.graphic.TextBlockSimple r1;
        net.sourceforge.plantuml.SpriteContainer $r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.graphic.SingleLine r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r7;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r0 := @parameter1: java.lang.String;

        $r4 = r1.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r3 = r1.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r2 = r1.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.SpriteContainer spriteContainer>;

        r5 = staticinvoke <net.sourceforge.plantuml.graphic.SingleLine: net.sourceforge.plantuml.graphic.SingleLine withSomeHtmlTag(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.SpriteContainer)>(r0, $r4, $r3, $r2);

        $r7 = interfaceinvoke r5.<net.sourceforge.plantuml.graphic.Line: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d0 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        return $d0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlockSimple r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.awt.geom.Dimension2D getTextDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }

    protected final net.sourceforge.plantuml.awt.geom.Dimension2D getTextDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlockSimple r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        java.util.List $r2;
        java.util.Iterator r3;
        boolean $z0;
        net.sourceforge.plantuml.Dimension2DDouble $r4;
        java.lang.Object $r5;
        net.sourceforge.plantuml.graphic.Line r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;
        double $d0, $d1, d2, d3;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 = 0.0;

        d3 = 0.0;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: java.util.List getLines(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.graphic.Line) $r5;

        r7 = interfaceinvoke r6.<net.sourceforge.plantuml.graphic.Line: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d3 = d3 + $d0;

        $d1 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = staticinvoke <java.lang.Math: double max(double,double)>(d2, $d1);

        goto label1;

     label2:
        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d2, d3);

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.TextBlockSimple r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r17;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r4, $r12, $r14, $r18;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r13, $r15, $r19;
        java.util.List $r5;
        java.util.Iterator r6;
        boolean $z0;
        java.lang.Object $r7;
        net.sourceforge.plantuml.graphic.Line r8;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r9, $r10, $r11;
        double $d0, $d1, $d2, $d3, d4, d5, d6, d7, $d8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r16;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockSimple;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d4 = 0.0;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: net.sourceforge.plantuml.awt.geom.Dimension2D getTextDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockSimple: java.util.List getLines(net.sourceforge.plantuml.graphic.StringBounder)>($r4);

        r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.graphic.Line) $r7;

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.graphic.Line: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        d5 = 0.0;

        $r10 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if r9 != $r10 goto label2;

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r14 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r15 = interfaceinvoke r8.<net.sourceforge.plantuml.graphic.Line: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r14);

        $d3 = virtualinvoke $r15.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d6 = $d2 - $d3;

        d5 = d6 / 2.0;

        goto label3;

     label2:
        $r11 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if r9 != $r11 goto label3;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r12 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r13 = interfaceinvoke r8.<net.sourceforge.plantuml.graphic.Line: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r12);

        $d1 = virtualinvoke $r13.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d7 = $d0 - $d1;

        d5 = d7;

     label3:
        $r16 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d5, d4);

        $r17 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke r8.<net.sourceforge.plantuml.graphic.Line: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r17);

        $r18 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r19 = interfaceinvoke r8.<net.sourceforge.plantuml.graphic.Line: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r18);

        $d8 = virtualinvoke $r19.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d4 = d4 + $d8;

        goto label1;

     label4:
        return;
    }
}
