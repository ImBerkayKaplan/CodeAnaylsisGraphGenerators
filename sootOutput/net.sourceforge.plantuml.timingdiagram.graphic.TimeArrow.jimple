public class net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final java.awt.geom.Point2D start;
    private final java.awt.geom.Point2D end;
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private final net.sourceforge.plantuml.ISkinSimple spriteContainer;
    private final net.sourceforge.plantuml.cucadiagram.WithLinkType type;

    public static net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow create(net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint, net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.cucadiagram.WithLinkType)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow $r0, $r9, $r13, $r17, $r21;
        net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint r1, r3;
        java.awt.geom.Point2D $r2, $r4, $r10, $r11, $r14, $r15, $r18, $r19;
        net.sourceforge.plantuml.cucadiagram.Display r5;
        net.sourceforge.plantuml.ISkinSimple r6;
        net.sourceforge.plantuml.cucadiagram.WithLinkType r7;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint;

        r3 := @parameter1: net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint;

        r5 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r6 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        r7 := @parameter4: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        $r0 = new net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: java.awt.geom.Point2D getPointA()>();

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: java.awt.geom.Point2D getPointA()>();

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.cucadiagram.WithLinkType)>($r2, $r4, r5, r6, r7);

        $r9 = new net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: java.awt.geom.Point2D getPointA()>();

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: java.awt.geom.Point2D getPointB()>();

        specialinvoke $r9.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.cucadiagram.WithLinkType)>($r10, $r11, r5, r6, r7);

        $r13 = new net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $r14 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: java.awt.geom.Point2D getPointB()>();

        $r15 = virtualinvoke r3.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: java.awt.geom.Point2D getPointA()>();

        specialinvoke $r13.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.cucadiagram.WithLinkType)>($r14, $r15, r5, r6, r7);

        $r17 = new net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $r18 = virtualinvoke r1.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: java.awt.geom.Point2D getPointB()>();

        $r19 = virtualinvoke r3.<net.sourceforge.plantuml.timingdiagram.graphic.IntricatedPoint: java.awt.geom.Point2D getPointB()>();

        specialinvoke $r17.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.cucadiagram.WithLinkType)>($r18, $r19, r5, r6, r7);

        $r21 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow shorter(net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow,net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow,net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow,net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow)>($r0, $r9, $r13, $r17);

        return $r21;
    }

    private void <init>(java.awt.geom.Point2D, java.awt.geom.Point2D, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.cucadiagram.WithLinkType)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow r0;
        java.awt.geom.Point2D r1, r3;
        net.sourceforge.plantuml.cucadiagram.WithLinkType r2;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.ISkinSimple r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        r1 := @parameter0: java.awt.geom.Point2D;

        r3 := @parameter1: java.awt.geom.Point2D;

        r4 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r5 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        r2 := @parameter4: net.sourceforge.plantuml.cucadiagram.WithLinkType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.WithLinkType type> = r2;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end> = r3;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.Display label> = r4;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.ISkinSimple spriteContainer> = r5;

        return;
    }

    private double getAngle()
    {
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow r0;
        java.awt.geom.Point2D $r1, $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d0 = virtualinvoke $r1.<java.awt.geom.Point2D: double getX()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start>;

        $d1 = virtualinvoke $r2.<java.awt.geom.Point2D: double getX()>();

        $d2 = $d0 - $d1;

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d3 = virtualinvoke $r3.<java.awt.geom.Point2D: double getY()>();

        $r4 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start>;

        $d4 = virtualinvoke $r4.<java.awt.geom.Point2D: double getY()>();

        $d5 = $d3 - $d4;

        $d6 = staticinvoke <java.lang.Math: double atan2(double,double)>($d2, $d5);

        return $d6;
    }

    private static net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow shorter(net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow, net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow r0, r1;
        double $d0, $d1;
        byte $b0;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        r1 := @parameter1: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: double len()>();

        $d1 = specialinvoke r1.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: double len()>();

        $b0 = $d0 cmpg $d1;

        if $b0 >= 0 goto label1;

        return r0;

     label1:
        return r1;
    }

    private static net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow shorter(net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow, net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow, net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow, net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow r0, r1, $r2, r3, r4, $r5, $r6;

        r0 := @parameter0: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        r1 := @parameter1: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        r3 := @parameter2: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        r4 := @parameter3: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $r2 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow shorter(net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow,net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow)>(r0, r1);

        $r5 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow shorter(net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow,net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow)>(r3, r4);

        $r6 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow shorter(net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow,net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow)>($r2, $r5);

        return $r6;
    }

    private double len()
    {
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow r0;
        java.awt.geom.Point2D $r1, $r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start>;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d0 = virtualinvoke $r2.<java.awt.geom.Point2D: double distance(java.awt.geom.Point2D)>($r1);

        return $d0;
    }

    public net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow translate(net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow $r0, r2;
        net.sourceforge.plantuml.ugraphic.UTranslate r1;
        java.awt.geom.Point2D $r3, $r4, $r5, $r6;
        net.sourceforge.plantuml.cucadiagram.WithLinkType $r7;
        net.sourceforge.plantuml.ISkinSimple $r8;
        net.sourceforge.plantuml.cucadiagram.Display $r9;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UTranslate;

        $r0 = new net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        $r3 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start>;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r3);

        $r5 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r5);

        $r9 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r8 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.ISkinSimple spriteContainer>;

        $r7 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.WithLinkType type>;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.cucadiagram.WithLinkType)>($r4, $r6, $r9, $r8, $r7);

        return $r0;
    }

    public static java.awt.geom.Point2D onCircle(java.awt.geom.Point2D, double)
    {
        java.awt.geom.Point2D r0;
        double $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, d9;
        java.awt.geom.Point2D$Double $r1;

        r0 := @parameter0: java.awt.geom.Point2D;

        d2 := @parameter1: double;

        $d1 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d3 = staticinvoke <java.lang.Math: double sin(double)>(d2);

        $d4 = $d3 * 8.0;

        d5 = $d1 - $d4;

        $d6 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d7 = staticinvoke <java.lang.Math: double cos(double)>(d2);

        $d8 = $d7 * 8.0;

        d9 = $d6 - $d8;

        $r1 = new java.awt.geom.Point2D$Double;

        specialinvoke $r1.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d5, d9);

        return $r1;
    }

    private net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()
    {
        net.sourceforge.plantuml.ugraphic.UFont r0;
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow r1;
        net.sourceforge.plantuml.cucadiagram.WithLinkType $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;

        r1 := @this: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont serif(int)>(14);

        $r2 = r1.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.WithLinkType type>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.ugraphic.color.HColor getSpecificColor()>();

        $r4 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>(r0, r3, r3, 0);

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow r0;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, d19, $d20, $d21, $d22, $d23, $d24, $d25, d26;
        net.sourceforge.plantuml.cucadiagram.WithLinkType $r1, $r4, $r23;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r24;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, $r14, $r34, r37, r38, r39;
        net.sourceforge.plantuml.ugraphic.UStroke $r5;
        net.sourceforge.plantuml.ugraphic.ULine $r6;
        java.awt.geom.Point2D $r7, $r8, $r9, $r10, $r13, $r15, r16, $r17, r18, $r21, $r22, $r31, $r32;
        net.sourceforge.plantuml.ugraphic.UTranslate $r12, $r33;
        net.sourceforge.plantuml.ugraphic.UPolygon $r19;
        net.sourceforge.plantuml.ugraphic.UBackground $r25;
        net.sourceforge.plantuml.cucadiagram.Display $r26;
        net.sourceforge.plantuml.graphic.FontConfiguration $r27;
        net.sourceforge.plantuml.ISkinSimple $r28;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r29;
        net.sourceforge.plantuml.graphic.TextBlock r30;
        byte $b0;
        net.sourceforge.plantuml.graphic.StringBounder $r35;
        net.sourceforge.plantuml.awt.geom.Dimension2D r36;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow;

        r37 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: double getAngle()>();

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.WithLinkType type>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.ugraphic.color.HColor getSpecificColor()>();

        $r3 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.WithLinkType type>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.ugraphic.UStroke getUStroke()>();

        r38 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r6 = new net.sourceforge.plantuml.ugraphic.ULine;

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d1 = virtualinvoke $r7.<java.awt.geom.Point2D: double getX()>();

        $r8 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start>;

        $d2 = virtualinvoke $r8.<java.awt.geom.Point2D: double getX()>();

        $d3 = $d1 - $d2;

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d4 = virtualinvoke $r9.<java.awt.geom.Point2D: double getY()>();

        $r10 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start>;

        $d5 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>();

        $d6 = $d4 - $d5;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d3, $d6);

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r13 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start>;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>($r13);

        $r14 = interfaceinvoke r38.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        $r15 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d8 = d0 + 0.3490658503988659;

        r16 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D onCircle(java.awt.geom.Point2D,double)>($r15, $d8);

        $r17 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d9 = d0 - 0.3490658503988659;

        r18 = staticinvoke <net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D onCircle(java.awt.geom.Point2D,double)>($r17, $d9);

        $r19 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        $d10 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>();

        $d11 = virtualinvoke r16.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke $r19.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d10, $d11);

        $d12 = virtualinvoke r18.<java.awt.geom.Point2D: double getX()>();

        $d13 = virtualinvoke r18.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke $r19.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d12, $d13);

        $r21 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d14 = virtualinvoke $r21.<java.awt.geom.Point2D: double getX()>();

        $r22 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d15 = virtualinvoke $r22.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke $r19.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d14, $d15);

        $r23 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.WithLinkType type>;

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.cucadiagram.WithLinkType: net.sourceforge.plantuml.ugraphic.color.HColor getSpecificColor()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r39 = interfaceinvoke r38.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r25);

        interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r19);

        $r26 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r27 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r29 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r28 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: net.sourceforge.plantuml.ISkinSimple spriteContainer>;

        r30 = virtualinvoke $r26.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r27, $r29, $r28);

        $d16 = virtualinvoke r16.<java.awt.geom.Point2D: double getX()>();

        $d17 = virtualinvoke r18.<java.awt.geom.Point2D: double getX()>();

        $d18 = $d16 + $d17;

        d19 = $d18 / 2.0;

        $d20 = virtualinvoke r16.<java.awt.geom.Point2D: double getY()>();

        $d21 = virtualinvoke r18.<java.awt.geom.Point2D: double getY()>();

        $d22 = $d20 + $d21;

        d26 = $d22 / 2.0;

        $r31 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D start>;

        $d23 = virtualinvoke $r31.<java.awt.geom.Point2D: double getY()>();

        $r32 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.TimeArrow: java.awt.geom.Point2D end>;

        $d24 = virtualinvoke $r32.<java.awt.geom.Point2D: double getY()>();

        $b0 = $d23 cmpg $d24;

        if $b0 >= 0 goto label1;

        $r35 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r36 = interfaceinvoke r30.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r35);

        $d25 = virtualinvoke r36.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d26 = d26 - $d25;

     label1:
        $r33 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r33.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d19, d26);

        $r34 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r33);

        interfaceinvoke r30.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r34);

        return;
    }
}
