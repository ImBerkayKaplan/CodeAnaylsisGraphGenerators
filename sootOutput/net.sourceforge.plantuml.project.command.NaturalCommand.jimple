public class net.sourceforge.plantuml.project.command.NaturalCommand extends net.sourceforge.plantuml.command.SingleLineCommand2
{
    private final net.sourceforge.plantuml.project.lang.Sentence sentence;

    public void <init>(net.sourceforge.plantuml.project.lang.Sentence)
    {
        net.sourceforge.plantuml.project.command.NaturalCommand r0;
        net.sourceforge.plantuml.project.lang.Sentence r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2;

        r0 := @this: net.sourceforge.plantuml.project.command.NaturalCommand;

        r1 := @parameter0: net.sourceforge.plantuml.project.lang.Sentence;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.project.lang.Sentence: net.sourceforge.plantuml.command.regex.IRegex toRegex()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r2);

        r0.<net.sourceforge.plantuml.project.command.NaturalCommand: net.sourceforge.plantuml.project.lang.Sentence sentence> = r1;

        return;
    }

    protected final net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.project.command.NaturalCommand r0;
        net.sourceforge.plantuml.project.GanttDiagram r1;
        net.sourceforge.plantuml.command.regex.RegexResult r2;
        net.sourceforge.plantuml.project.lang.Sentence $r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;
        net.sourceforge.plantuml.LineLocation r5;

        r0 := @this: net.sourceforge.plantuml.project.command.NaturalCommand;

        r1 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r5 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r2 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r3 = r0.<net.sourceforge.plantuml.project.command.NaturalCommand: net.sourceforge.plantuml.project.lang.Sentence sentence>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.lang.Sentence: net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.command.regex.RegexResult)>(r1, r2);

        return $r4;
    }

    public static net.sourceforge.plantuml.project.command.NaturalCommand create(net.sourceforge.plantuml.project.lang.Sentence)
    {
        net.sourceforge.plantuml.project.command.NaturalCommand $r0;
        net.sourceforge.plantuml.project.lang.Sentence r1;

        r1 := @parameter0: net.sourceforge.plantuml.project.lang.Sentence;

        $r0 = new net.sourceforge.plantuml.project.command.NaturalCommand;

        specialinvoke $r0.<net.sourceforge.plantuml.project.command.NaturalCommand: void <init>(net.sourceforge.plantuml.project.lang.Sentence)>(r1);

        return $r0;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.project.command.NaturalCommand r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.project.GanttDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.project.command.NaturalCommand;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.project.GanttDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.project.command.NaturalCommand: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
