class net.sourceforge.plantuml.cucadiagram.SquareMaker extends java.lang.Object
{

    void <init>()
    {
        net.sourceforge.plantuml.cucadiagram.SquareMaker r0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.SquareMaker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void putInSquare(java.util.List, net.sourceforge.plantuml.cucadiagram.SquareLinker)
    {
        java.util.List r0;
        int $i0, i1, $i2, i3, $i4, i5, i6;
        java.lang.Object r1, r4, r5;
        net.sourceforge.plantuml.cucadiagram.SquareLinker r2;
        net.sourceforge.plantuml.cucadiagram.SquareMaker r3;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.SquareMaker;

        r0 := @parameter0: java.util.List;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.SquareLinker;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        i1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.SquareMaker: int computeBranch(int)>($i0);

        i5 = 0;

        i6 = 1;

     label1:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i6 >= $i2 goto label4;

        i3 = i6 - i5;

        r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i6);

        if i3 != i1 goto label2;

        r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i5);

        interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.SquareLinker: void topDown(java.lang.Object,java.lang.Object)>(r4, r1);

        i5 = i6;

        goto label3;

     label2:
        $i4 = i6 - 1;

        r5 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i4);

        interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.SquareLinker: void leftRight(java.lang.Object,java.lang.Object)>(r5, r1);

     label3:
        i6 = i6 + 1;

        goto label1;

     label4:
        return;
    }

    static int computeBranch(int)
    {
        int i0, i1, $i2, $i3;
        double $d0, d1;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i1 = (int) d1;

        $i2 = i1 * i1;

        if $i2 != i0 goto label1;

        return i1;

     label1:
        $i3 = i1 + 1;

        return $i3;
    }

    static int getBottomLeft(int)
    {
        int i0, i1, $i2, i3, $i4;

        i0 := @parameter0: int;

        i1 = staticinvoke <net.sourceforge.plantuml.cucadiagram.SquareMaker: int computeBranch(int)>(i0);

        $i2 = i0 - 1;

        i3 = $i2 / i1;

        $i4 = i3 * i1;

        return $i4;
    }
}
