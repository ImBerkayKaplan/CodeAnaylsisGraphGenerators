public class net.sourceforge.plantuml.posimo.Path extends java.lang.Object
{
    private final net.sourceforge.plantuml.posimo.Label label;
    private final net.sourceforge.plantuml.posimo.Block start;
    private final net.sourceforge.plantuml.posimo.Block end;
    private final int length;
    private net.sourceforge.plantuml.posimo.DotPath dotPath;
    private final boolean invis;

    public void <init>(net.sourceforge.plantuml.posimo.Block, net.sourceforge.plantuml.posimo.Block, net.sourceforge.plantuml.posimo.Label)
    {
        net.sourceforge.plantuml.posimo.Path r0;
        net.sourceforge.plantuml.posimo.Block r1, r2;
        net.sourceforge.plantuml.posimo.Label r3;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        r1 := @parameter0: net.sourceforge.plantuml.posimo.Block;

        r2 := @parameter1: net.sourceforge.plantuml.posimo.Block;

        r3 := @parameter2: net.sourceforge.plantuml.posimo.Label;

        specialinvoke r0.<net.sourceforge.plantuml.posimo.Path: void <init>(net.sourceforge.plantuml.posimo.Block,net.sourceforge.plantuml.posimo.Block,net.sourceforge.plantuml.posimo.Label,int,boolean)>(r1, r2, r3, 2, 0);

        return;
    }

    public void <init>(net.sourceforge.plantuml.posimo.Block, net.sourceforge.plantuml.posimo.Block, net.sourceforge.plantuml.posimo.Label, int, boolean)
    {
        net.sourceforge.plantuml.posimo.Path r0;
        int i0;
        boolean z0;
        net.sourceforge.plantuml.posimo.Block r1, $r3, r4, $r6;
        java.lang.Object $r2, $r5;
        net.sourceforge.plantuml.posimo.Label r7;
        java.lang.IllegalArgumentException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        r1 := @parameter0: net.sourceforge.plantuml.posimo.Block;

        r4 := @parameter1: net.sourceforge.plantuml.posimo.Block;

        r7 := @parameter2: net.sourceforge.plantuml.posimo.Label;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 >= 1 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("length=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        r0.<net.sourceforge.plantuml.posimo.Path: boolean invis> = z0;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.posimo.Block) $r2;

        r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block start> = $r3;

        $r5 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r4);

        $r6 = (net.sourceforge.plantuml.posimo.Block) $r5;

        r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block end> = $r6;

        r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Label label> = r7;

        r0.<net.sourceforge.plantuml.posimo.Path: int length> = i0;

        return;
    }

    public final net.sourceforge.plantuml.posimo.Label getLabel()
    {
        net.sourceforge.plantuml.posimo.Path r0;
        net.sourceforge.plantuml.posimo.Label $r1;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Label label>;

        return $r1;
    }

    public final net.sourceforge.plantuml.posimo.Block getStart()
    {
        net.sourceforge.plantuml.posimo.Path r0;
        net.sourceforge.plantuml.posimo.Block $r1;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block start>;

        return $r1;
    }

    public final net.sourceforge.plantuml.posimo.Block getEnd()
    {
        net.sourceforge.plantuml.posimo.Path r0;
        net.sourceforge.plantuml.posimo.Block $r1;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Block end>;

        return $r1;
    }

    public void setLabelPositionCenter(double, double)
    {
        net.sourceforge.plantuml.posimo.Path r0;
        double d0, d1;
        net.sourceforge.plantuml.posimo.Label $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Label label>;

        virtualinvoke $r1.<net.sourceforge.plantuml.posimo.Label: void setCenterX(double)>(d0);

        $r2 = r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Label label>;

        virtualinvoke $r2.<net.sourceforge.plantuml.posimo.Label: void setCenterY(double)>(d1);

        return;
    }

    public void setLabelPosition(double, double)
    {
        net.sourceforge.plantuml.posimo.Path r0;
        double d0, d1;
        net.sourceforge.plantuml.posimo.Label $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Label label>;

        virtualinvoke $r1.<net.sourceforge.plantuml.posimo.Label: void setX(double)>(d0);

        $r2 = r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.Label label>;

        virtualinvoke $r2.<net.sourceforge.plantuml.posimo.Label: void setY(double)>(d1);

        return;
    }

    public void setDotPath(net.sourceforge.plantuml.posimo.DotPath)
    {
        net.sourceforge.plantuml.posimo.Path r0;
        net.sourceforge.plantuml.posimo.DotPath r1;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        r1 := @parameter0: net.sourceforge.plantuml.posimo.DotPath;

        r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.DotPath dotPath> = r1;

        return;
    }

    public final net.sourceforge.plantuml.posimo.DotPath getDotPath()
    {
        net.sourceforge.plantuml.posimo.Path r0;
        net.sourceforge.plantuml.posimo.DotPath $r1;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        $r1 = r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.DotPath dotPath>;

        return $r1;
    }

    public int getLength()
    {
        net.sourceforge.plantuml.posimo.Path r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        $i0 = r0.<net.sourceforge.plantuml.posimo.Path: int length>;

        return $i0;
    }

    public final boolean isInvis()
    {
        net.sourceforge.plantuml.posimo.Path r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.posimo.Path;

        $z0 = r0.<net.sourceforge.plantuml.posimo.Path: boolean invis>;

        return $z0;
    }
}
