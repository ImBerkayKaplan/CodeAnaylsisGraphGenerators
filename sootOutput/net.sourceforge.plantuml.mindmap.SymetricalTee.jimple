public class net.sourceforge.plantuml.mindmap.SymetricalTee extends java.lang.Object
{
    private final double thickness1;
    private final double elongation1;
    private final double thickness2;
    private final double elongation2;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        net.sourceforge.plantuml.mindmap.SymetricalTee r2;
        double $d0, $d1, $d2, $d3;
        java.lang.String $r10;

        r2 := @this: net.sourceforge.plantuml.mindmap.SymetricalTee;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("t1=");

        $d0 = r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double thickness1>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" e1=");

        $d1 = r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double elongation1>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" t2=");

        $d2 = r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double thickness2>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" e2=");

        $d3 = r2.<net.sourceforge.plantuml.mindmap.SymetricalTee: double elongation2>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public void <init>(double, double, double, double)
    {
        net.sourceforge.plantuml.mindmap.SymetricalTee r0;
        double d0, d1, d2, d3;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTee;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double thickness1> = d0;

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double elongation1> = d1;

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double thickness2> = d2;

        r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double elongation2> = d3;

        return;
    }

    public double getThickness1()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTee r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTee;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double thickness1>;

        return $d0;
    }

    public double getElongation1()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTee r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTee;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double elongation1>;

        return $d0;
    }

    public double getThickness2()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTee r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTee;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double thickness2>;

        return $d0;
    }

    public double getElongation2()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTee r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTee;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double elongation2>;

        return $d0;
    }

    public double getFullElongation()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTee r0;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTee;

        $d1 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double elongation1>;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double elongation2>;

        $d2 = $d1 + $d0;

        return $d2;
    }

    public double getFullThickness()
    {
        net.sourceforge.plantuml.mindmap.SymetricalTee r0;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.mindmap.SymetricalTee;

        $d1 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double thickness1>;

        $d0 = r0.<net.sourceforge.plantuml.mindmap.SymetricalTee: double thickness2>;

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d1, $d0);

        return $d2;
    }
}
