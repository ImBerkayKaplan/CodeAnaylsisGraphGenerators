public final enum class net.sourceforge.plantuml.cucadiagram.EntityPosition extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition ENTRY_POINT;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition EXIT_POINT;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition INPUT_PIN;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition OUTPUT_PIN;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_INPUT;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_OUTPUT;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition PORT;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition PORTIN;
    public static final enum net.sourceforge.plantuml.cucadiagram.EntityPosition PORTOUT;
    public static final double RADIUS;
    private static final net.sourceforge.plantuml.cucadiagram.EntityPosition[] $VALUES;

    public static net.sourceforge.plantuml.cucadiagram.EntityPosition[] values()
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.cucadiagram.EntityPosition[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.cucadiagram.EntityPosition valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/cucadiagram/EntityPosition;", r0);

        $r2 = (net.sourceforge.plantuml.cucadiagram.EntityPosition) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.EntityPosition;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public void drawSymbol(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.cucadiagram.Rankdir)
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition r0, $r1, $r2, $r5, $r10, $r11, $r12, $r13, $r14, $r33;
        net.sourceforge.plantuml.ugraphic.UEllipse $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, $r19, $r21, $r23, $r25, $r28, $r30, $r32;
        java.awt.geom.Point2D $r6, $r7, $r8, $r9;
        net.sourceforge.plantuml.cucadiagram.Rankdir r15, $r16;
        net.sourceforge.plantuml.ugraphic.URectangle $r17, $r26, $r36;
        net.sourceforge.plantuml.ugraphic.UTranslate $r18, $r20, $r22, $r24, $r27, $r29, $r31;
        java.lang.IllegalStateException $r34;
        net.sourceforge.plantuml.ugraphic.ULine r39, r41;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.EntityPosition;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r15 := @parameter1: net.sourceforge.plantuml.cucadiagram.Rankdir;

        $r1 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        if r0 != $r1 goto label1;

        $r34 = new java.lang.IllegalStateException;

        specialinvoke $r34.<java.lang.IllegalStateException: void <init>()>();

        throw $r34;

     label1:
        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition ENTRY_POINT>;

        if r0 == $r2 goto label2;

        $r10 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXIT_POINT>;

        if r0 != $r10 goto label4;

     label2:
        $r3 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(12.0, 12.0);

        interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        $r5 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXIT_POINT>;

        if r0 != $r5 goto label3;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.EntityPosition: java.awt.geom.Point2D getPointOnCircle(double,double,double,double)>(6.5, 6.5, 0.7853981633974483, 5.5);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.EntityPosition: java.awt.geom.Point2D getPointOnCircle(double,double,double,double)>(6.5, 6.5, 3.9269908169872414, 5.5);

        staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityPosition: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r4, $r6, $r7);

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.EntityPosition: java.awt.geom.Point2D getPointOnCircle(double,double,double,double)>(6.5, 6.5, -0.7853981633974483, 5.5);

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.EntityPosition: java.awt.geom.Point2D getPointOnCircle(double,double,double,double)>(6.5, 6.5, 2.356194490192345, 5.5);

        staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityPosition: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r4, $r8, $r9);

     label3:
        goto label9;

     label4:
        $r11 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition INPUT_PIN>;

        if r0 == $r11 goto label5;

        $r12 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition OUTPUT_PIN>;

        if r0 == $r12 goto label5;

        $r13 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORT>;

        if r0 != $r13 goto label6;

     label5:
        $r36 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r36.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(12.0, 12.0);

        interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r36);

        goto label9;

     label6:
        $r14 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_INPUT>;

        if r0 == $r14 goto label7;

        $r33 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_OUTPUT>;

        if r0 != $r33 goto label9;

     label7:
        $r16 = <net.sourceforge.plantuml.cucadiagram.Rankdir: net.sourceforge.plantuml.cucadiagram.Rankdir TOP_TO_BOTTOM>;

        if r15 != $r16 goto label8;

        $r26 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r26.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(48.0, 12.0);

        interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r26);

        r39 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(12.0);

        $r27 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(12.0);

        $r28 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        interfaceinvoke $r28.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r39);

        $r29 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(24.0);

        $r30 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r29);

        interfaceinvoke $r30.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r39);

        $r31 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(36.0);

        $r32 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r31);

        interfaceinvoke $r32.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r39);

        goto label9;

     label8:
        $r17 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(12.0, 48.0);

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(0.0);

        $r19 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        interfaceinvoke $r19.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r17);

        r41 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(12.0);

        $r20 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(12.0);

        $r21 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r41);

        $r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(24.0);

        $r23 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        interfaceinvoke $r23.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r41);

        $r24 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(36.0);

        $r25 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r41);

     label9:
        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getDimension(net.sourceforge.plantuml.cucadiagram.Rankdir)
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition r0, $r1, $r6;
        net.sourceforge.plantuml.cucadiagram.Rankdir r2, $r3;
        net.sourceforge.plantuml.Dimension2DDouble $r4, $r5, $r7;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.EntityPosition;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Rankdir;

        $r1 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_INPUT>;

        if r0 == $r1 goto label1;

        $r6 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_OUTPUT>;

        if r0 != $r6 goto label3;

     label1:
        $r3 = <net.sourceforge.plantuml.cucadiagram.Rankdir: net.sourceforge.plantuml.cucadiagram.Rankdir TOP_TO_BOTTOM>;

        if r2 != $r3 goto label2;

        $r5 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r5.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(48.0, 12.0);

        return $r5;

     label2:
        $r4 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r4.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(12.0, 48.0);

        return $r4;

     label3:
        $r7 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r7.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(12.0, 12.0);

        return $r7;
    }

    private java.awt.geom.Point2D getPointOnCircle(double, double, double, double)
    {
        double d0, d1, d2, $d3, $d4, d5, d6, $d7, $d8, d9;
        java.awt.geom.Point2D$Double $r0;
        net.sourceforge.plantuml.cucadiagram.EntityPosition r1;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.EntityPosition;

        d0 := @parameter0: double;

        d6 := @parameter1: double;

        d2 := @parameter2: double;

        d1 := @parameter3: double;

        $d3 = staticinvoke <java.lang.Math: double cos(double)>(d2);

        $d4 = d1 * $d3;

        d5 = d0 + $d4;

        $d7 = staticinvoke <java.lang.Math: double sin(double)>(d2);

        $d8 = d1 * $d7;

        d9 = d6 + $d8;

        $r0 = new java.awt.geom.Point2D$Double;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d5, d9);

        return $r0;
    }

    private static void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        net.sourceforge.plantuml.ugraphic.ULine $r5;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: java.awt.geom.Point2D;

        r0 := @parameter2: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        d5 = $d3 - $d4;

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d6 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d7 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d6, $d7);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.ULine;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>(d2, d5);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        return;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition r0, $r1, $r2, $r4;
        net.sourceforge.plantuml.svek.ShapeType $r3, $r5;
        java.lang.IllegalStateException $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.EntityPosition;

        $r1 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        if r0 != $r1 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label1:
        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition ENTRY_POINT>;

        if r0 == $r2 goto label2;

        $r4 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXIT_POINT>;

        if r0 != $r4 goto label3;

     label2:
        $r3 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType CIRCLE>;

        return $r3;

     label3:
        $r5 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE>;

        return $r5;
    }

    public static net.sourceforge.plantuml.cucadiagram.EntityPosition fromStereotype(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r0 := @parameter0: java.lang.String;

        $r1 = "<<port>>";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r15 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORT>;

        return $r15;

     label1:
        $r2 = "<<entrypoint>>";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $r14 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition ENTRY_POINT>;

        return $r14;

     label2:
        $r3 = "<<exitpoint>>";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 == 0 goto label3;

        $r13 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXIT_POINT>;

        return $r13;

     label3:
        $r4 = "<<inputpin>>";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z3 == 0 goto label4;

        $r12 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition INPUT_PIN>;

        return $r12;

     label4:
        $r5 = "<<outputpin>>";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z4 == 0 goto label5;

        $r11 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition OUTPUT_PIN>;

        return $r11;

     label5:
        $r6 = "<<expansioninput>>";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z5 == 0 goto label6;

        $r10 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_INPUT>;

        return $r10;

     label6:
        $r7 = "<<expansionoutput>>";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z6 == 0 goto label7;

        $r9 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_OUTPUT>;

        return $r9;

     label7:
        $r8 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        return $r8;
    }

    public static java.util.EnumSet getInputs()
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r0, $r1, $r2, $r3;
        java.util.EnumSet $r4;

        $r3 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition ENTRY_POINT>;

        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition INPUT_PIN>;

        $r1 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_INPUT>;

        $r0 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTIN>;

        $r4 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)>($r3, $r2, $r1, $r0);

        return $r4;
    }

    public static java.util.EnumSet getOutputs()
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r0, $r1, $r2, $r3;
        java.util.EnumSet $r4;

        $r3 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXIT_POINT>;

        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition OUTPUT_PIN>;

        $r1 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_OUTPUT>;

        $r0 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTOUT>;

        $r4 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum,java.lang.Enum)>($r3, $r2, $r1, $r0);

        return $r4;
    }

    public static java.util.EnumSet getSame()
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r0;
        java.util.EnumSet $r1;

        $r0 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORT>;

        $r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r0);

        return $r1;
    }

    public boolean isPort()
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition r0, $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.EntityPosition;

        $r1 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORT>;

        if r0 == $r1 goto label1;

        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTIN>;

        if r0 == $r2 goto label1;

        $r3 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTOUT>;

        if r0 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static net.sourceforge.plantuml.cucadiagram.EntityPosition[] $values()
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition[] $r0;
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = newarray (net.sourceforge.plantuml.cucadiagram.EntityPosition)[10];

        $r1 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition ENTRY_POINT>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXIT_POINT>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition INPUT_PIN>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition OUTPUT_PIN>;

        $r0[4] = $r5;

        $r6 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_INPUT>;

        $r0[5] = $r6;

        $r7 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_OUTPUT>;

        $r0[6] = $r7;

        $r8 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORT>;

        $r0[7] = $r8;

        $r9 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTIN>;

        $r0[8] = $r9;

        $r10 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTOUT>;

        $r0[9] = $r10;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        net.sourceforge.plantuml.cucadiagram.EntityPosition[] $r10;

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: double RADIUS> = 6.0;

        $r0 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("NORMAL", 0);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL> = $r0;

        $r1 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r1.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("ENTRY_POINT", 1);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition ENTRY_POINT> = $r1;

        $r2 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r2.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("EXIT_POINT", 2);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXIT_POINT> = $r2;

        $r3 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r3.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("INPUT_PIN", 3);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition INPUT_PIN> = $r3;

        $r4 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r4.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("OUTPUT_PIN", 4);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition OUTPUT_PIN> = $r4;

        $r5 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r5.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("EXPANSION_INPUT", 5);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_INPUT> = $r5;

        $r6 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("EXPANSION_OUTPUT", 6);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition EXPANSION_OUTPUT> = $r6;

        $r7 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r7.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("PORT", 7);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORT> = $r7;

        $r8 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r8.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("PORTIN", 8);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTIN> = $r8;

        $r9 = new net.sourceforge.plantuml.cucadiagram.EntityPosition;

        specialinvoke $r9.<net.sourceforge.plantuml.cucadiagram.EntityPosition: void <init>(java.lang.String,int)>("PORTOUT", 9);

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition PORTOUT> = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition[] $values()>();

        <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition[] $VALUES> = $r10;

        return;
    }
}
