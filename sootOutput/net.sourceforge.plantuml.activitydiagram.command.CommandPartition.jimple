public class net.sourceforge.plantuml.activitydiagram.command.CommandPartition extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram.command.CommandPartition r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandPartition;

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandPartition: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r9;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        net.sourceforge.plantuml.command.regex.RegexOr $r8;
        net.sourceforge.plantuml.graphic.color.ColorParser $r10;
        net.sourceforge.plantuml.command.regex.RegexConcat $r18;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram/command/CommandPartition;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[11];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("partition");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NAME", "([%g][^%g]+[%g]|\\S+)");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r9 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r10 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandPartition: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r9[0] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LEGACYCOLORIGNORED", "(#[0-9a-fA-F]{6}|#?\\w+)?");

        $r9[1] = $r12;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r9);

        $r2[5] = $r8;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREOTYPE", "(\\<\\<.*\\>\\>)?");

        $r2[7] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r15;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\{?");

        $r2[9] = $r16;

        $r17 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[10] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r18;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorParser color()
    {
        net.sourceforge.plantuml.graphic.color.ColorType $r0;
        net.sourceforge.plantuml.graphic.color.ColorParser $r1;

        $r0 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.ColorParser simpleColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r0);

        return $r1;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram.ActivityDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String $r1, r2, $r17, $r19;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r3;
        net.sourceforge.plantuml.cucadiagram.Ident r4;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.IGroup r6, r10;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r8;
        net.sourceforge.plantuml.cucadiagram.GroupType $r9;
        net.sourceforge.plantuml.graphic.color.ColorParser $r11;
        net.sourceforge.plantuml.ISkinParam $r12, $r14;
        net.sourceforge.plantuml.api.ThemeStyle $r13;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r15;
        net.sourceforge.plantuml.graphic.color.Colors r16;
        net.sourceforge.plantuml.command.CommandExecutionResult $r18;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r20;
        net.sourceforge.plantuml.activitydiagram.command.CommandPartition r21;
        net.sourceforge.plantuml.LineLocation r22;
        net.sourceforge.plantuml.cucadiagram.Code $r23;

        r21 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandPartition;

        r3 := @parameter0: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r22 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("NAME", 0);

        r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r1);

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r23 = r4;

        goto label2;

     label1:
        $r23 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

     label2:
        r6 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>($r23);

        $r9 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType PACKAGE>;

        $r8 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r4, $r23, $r7, $r9, r6, $r8);

        r10 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        $r11 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandPartition: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r12 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r14 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r16 = virtualinvoke $r11.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r13, r0, $r15);

        $z1 = virtualinvoke r16.<net.sourceforge.plantuml.graphic.color.Colors: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        interfaceinvoke r10.<net.sourceforge.plantuml.cucadiagram.IEntity: void setColors(net.sourceforge.plantuml.graphic.color.Colors)>(r16);

     label3:
        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE", 0);

        if $r17 == null goto label4;

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE", 0);

        $r20 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>($r19);

        interfaceinvoke r10.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r20);

     label4:
        $r18 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r18;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram.command.CommandPartition r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandPartition;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.activitydiagram.ActivityDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.command.CommandPartition: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
