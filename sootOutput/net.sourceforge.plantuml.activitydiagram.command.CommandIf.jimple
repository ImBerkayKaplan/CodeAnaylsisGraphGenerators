public class net.sourceforge.plantuml.activitydiagram.command.CommandIf extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram.command.CommandIf r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandIf;

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandIf: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r6, $r14, $r26;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r7, $r8, $r9, $r10, $r11, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r24, $r27, $r28, $r29, $r31, $r32;
        net.sourceforge.plantuml.command.regex.RegexOptional $r4, $r12, $r22, $r30;
        net.sourceforge.plantuml.command.regex.RegexOr $r5, $r25;
        net.sourceforge.plantuml.command.regex.RegexConcat $r13, $r33;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram/command/CommandIf;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[11];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r6 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STAR", "(\\(\\*(top)?\\))");

        $r6[0] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE", "([%pLN_.]+)");

        $r6[1] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BAR", "(?:==+)[%s]*([%pLN_.]+)[%s]*(?:==+)");

        $r6[2] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("QUOTED", "[%g]([^%g]+)[%g](?:[%s]+as[%s]+([%pLN_.]+))?");

        $r6[3] = $r10;

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>("FIRST", $r6);

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r5);

        $r2[1] = $r4;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r14 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[6];

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODY1", "([-.]+)");

        $r14[0] = $r15;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE1", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r14[1] = $r16;

        $r17 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_DIRECTION", "(\\*|left|right|up|down|le?|ri?|up?|do?)?");

        $r14[2] = $r17;

        $r18 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE2", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r14[3] = $r18;

        $r19 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r19.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODY2", "([-.]*)");

        $r14[4] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\>");

        $r14[5] = $r20;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r14);

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r13);

        $r2[3] = $r12;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r21;

        $r22 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r23 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BRACKET", "\\[([^\\]*]+[^\\]]*)\\]");

        specialinvoke $r22.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r23);

        $r2[5] = $r22;

        $r24 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r24;

        $r25 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r26 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r27 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r27.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("IF1", "if[%s]*[%g]([^%g]*)[%g][%s]*(?:as[%s]+([%pLN_.]+)[%s]+)?");

        $r26[0] = $r27;

        $r28 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r28.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("IF2", "if[%s]+(.+?)");

        $r26[1] = $r28;

        specialinvoke $r25.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r26);

        $r2[7] = $r25;

        $r29 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r29;

        $r30 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r31 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r31.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("then");

        specialinvoke $r30.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r31);

        $r2[9] = $r30;

        $r32 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[10] = $r32;

        $r33 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r33;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram.ActivityDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        net.sourceforge.plantuml.cucadiagram.IEntity r2, r38;
        java.lang.String $r3, $r4, $r10, $r12, $r13, $r16, $r17, $r20, $r21, $r22, $r28, r29, r33, r34, r35, r36, r37, $r43;
        net.sourceforge.plantuml.activitydiagram.ConditionalContext $r5;
        net.sourceforge.plantuml.cucadiagram.Link $r6, r39;
        net.sourceforge.plantuml.cucadiagram.LinkType $r7;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r8, $r9;
        net.sourceforge.plantuml.cucadiagram.Display $r11;
        net.sourceforge.plantuml.ISkinParam $r14, $r41;
        net.sourceforge.plantuml.style.StyleBuilder $r15;
        net.sourceforge.plantuml.Direction $r18, $r19, r40;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r27;
        int $i0, i1;
        net.sourceforge.plantuml.command.CommandExecutionResult $r30, $r44;
        net.sourceforge.plantuml.activitydiagram.command.CommandIf r31;
        net.sourceforge.plantuml.LineLocation r32;
        net.sourceforge.plantuml.api.ThemeStyle $r42;

        r31 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandIf;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r32 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r1 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.cucadiagram.IEntity getEntity(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.command.regex.RegexResult,boolean)>(r0, r1, 1);

        if r2 != null goto label1;

        $r30 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("No if possible at this point");

        return $r30;

     label1:
        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("IF2", 0);

        if $r3 != null goto label2;

        r33 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("IF1", 1);

        r34 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("IF1", 0);

        goto label3;

     label2:
        r33 = null;

        r34 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("IF2", 0);

     label3:
        virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void startIf(java.lang.String)>(r33);

        i1 = 2;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY1", 0);

        if $r4 == null goto label4;

        $r20 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY1", 0);

        r35 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r20);

        $r21 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY2", 0);

        r36 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r21);

        $r22 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_DIRECTION", 0);

        r37 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r22);

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r35);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r37);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r29 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String manageArrowForCuca(java.lang.String)>($r28);

        $i0 = virtualinvoke r29.<java.lang.String: int length()>();

        i1 = $i0 - 1;

     label4:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.activitydiagram.ConditionalContext getCurrentContext()>();

        r38 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: net.sourceforge.plantuml.cucadiagram.IEntity getBranch()>();

        $r6 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r7 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        $r9 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW>;

        $r8 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        specialinvoke $r7.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r9, $r8);

        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BRACKET", 0);

        $r11 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r10);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: java.lang.String getLabeldistance()>();

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: java.lang.String getLabelangle()>();

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.style.StyleBuilder)>(r2, r38, $r7, $r11, i1, null, r34, $r12, $r13, $r15);

        r39 = $r6;

        $r16 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW", 0);

        if $r16 == null goto label6;

        $r17 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW", 0);

        r40 = staticinvoke <net.sourceforge.plantuml.StringUtils: net.sourceforge.plantuml.Direction getArrowDirection(java.lang.String)>($r17);

        $r18 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r40 == $r18 goto label5;

        $r19 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction UP>;

        if r40 != $r19 goto label6;

     label5:
        r39 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Link getInv()>();

     label6:
        $r41 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r42 = interfaceinvoke $r41.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r43 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_STYLE", 0);

        virtualinvoke r39.<net.sourceforge.plantuml.cucadiagram.Link: void applyStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r42, $r43);

        virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>(r39);

        $r44 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r44;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram.command.CommandIf r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandIf;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.activitydiagram.ActivityDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.command.CommandIf: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
