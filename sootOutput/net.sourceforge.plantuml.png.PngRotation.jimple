public class net.sourceforge.plantuml.png.PngRotation extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.png.PngRotation r0;

        r0 := @this: net.sourceforge.plantuml.png.PngRotation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.awt.image.BufferedImage process(java.awt.image.BufferedImage)
    {
        java.awt.image.BufferedImage $r0, r1;
        int $i0, $i1, $i2;
        java.awt.Graphics2D r3;
        java.awt.geom.AffineTransform $r4, $r6;
        float $f0;

        r1 := @parameter0: java.awt.image.BufferedImage;

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>("Rotation");

        $r0 = new java.awt.image.BufferedImage;

        $i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();

        $i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, 1);

        r3 = virtualinvoke $r0.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        $r4 = new java.awt.geom.AffineTransform;

        specialinvoke $r4.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>(0.0F, 1.0F, 1.0F, 0.0F, 0.0F, 0.0F);

        $r6 = new java.awt.geom.AffineTransform;

        $i2 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        $f0 = (float) $i2;

        specialinvoke $r6.<java.awt.geom.AffineTransform: void <init>(float,float,float,float,float,float)>(-1.0F, 0.0F, 0.0F, 1.0F, $f0, 0.0F);

        virtualinvoke $r4.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r6);

        virtualinvoke r3.<java.awt.Graphics2D: void setTransform(java.awt.geom.AffineTransform)>($r4);

        virtualinvoke r3.<java.awt.Graphics2D: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r1, 0, 0, null);

        virtualinvoke r3.<java.awt.Graphics2D: void dispose()>();

        return $r0;
    }
}
