class net.sourceforge.plantuml.svek.extremity.MiddleCircle extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private final double radius;
    private final net.sourceforge.plantuml.ugraphic.UEllipse circle;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backColor;

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.svek.extremity.MiddleCircle r0;
        net.sourceforge.plantuml.ugraphic.UEllipse $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.MiddleCircle;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.MiddleCircle: double radius> = 6.0;

        r0.<net.sourceforge.plantuml.svek.extremity.MiddleCircle: double radius> = 6.0;

        $r1 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(12.0, 12.0);

        r0.<net.sourceforge.plantuml.svek.extremity.MiddleCircle: net.sourceforge.plantuml.ugraphic.UEllipse circle> = $r1;

        r0.<net.sourceforge.plantuml.svek.extremity.MiddleCircle: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = r2;

        return;
    }

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.MiddleCircle r0;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.MiddleCircle;

        return null;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r4, $r6, $r8;
        net.sourceforge.plantuml.svek.extremity.MiddleCircle r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.ugraphic.UBackground $r3;
        net.sourceforge.plantuml.ugraphic.UStroke $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        net.sourceforge.plantuml.ugraphic.UEllipse $r9;

        r1 := @this: net.sourceforge.plantuml.svek.extremity.MiddleCircle;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r1.<net.sourceforge.plantuml.svek.extremity.MiddleCircle: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r6 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(-6.0, -6.0);

        $r8 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = r1.<net.sourceforge.plantuml.svek.extremity.MiddleCircle: net.sourceforge.plantuml.ugraphic.UEllipse circle>;

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

        return;
    }
}
