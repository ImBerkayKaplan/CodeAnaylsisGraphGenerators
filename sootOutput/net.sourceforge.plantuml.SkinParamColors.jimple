public class net.sourceforge.plantuml.SkinParamColors extends net.sourceforge.plantuml.SkinParamDelegator
{
    private final net.sourceforge.plantuml.graphic.color.Colors colors;
    static final boolean $assertionsDisabled;

    public final net.sourceforge.plantuml.graphic.color.Colors getColors()
    {
        net.sourceforge.plantuml.SkinParamColors r0;
        net.sourceforge.plantuml.graphic.color.Colors $r1;

        r0 := @this: net.sourceforge.plantuml.SkinParamColors;

        $r1 = r0.<net.sourceforge.plantuml.SkinParamColors: net.sourceforge.plantuml.graphic.color.Colors colors>;

        return $r1;
    }

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.SkinParamColors r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.color.Colors r2;

        r0 := @this: net.sourceforge.plantuml.SkinParamColors;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.color.Colors;

        specialinvoke r0.<net.sourceforge.plantuml.SkinParamDelegator: void <init>(net.sourceforge.plantuml.ISkinParam)>(r1);

        r0.<net.sourceforge.plantuml.SkinParamColors: net.sourceforge.plantuml.graphic.color.Colors colors> = r2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        net.sourceforge.plantuml.SkinParamColors r2;
        net.sourceforge.plantuml.graphic.color.Colors $r3;
        java.lang.String $r5;

        r2 := @this: net.sourceforge.plantuml.SkinParamColors;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SkinParamColors::");

        $r3 = r2.<net.sourceforge.plantuml.SkinParamColors: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        net.sourceforge.plantuml.SkinParamColors r0;
        net.sourceforge.plantuml.graphic.color.Colors $r1, $r3;
        java.lang.Boolean $r2, $r4;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.Stereotype r5;

        r0 := @this: net.sourceforge.plantuml.SkinParamColors;

        r5 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = r0.<net.sourceforge.plantuml.SkinParamColors: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.color.Colors: java.lang.Boolean getShadowing()>();

        if $r2 != null goto label1;

        $z1 = specialinvoke r0.<net.sourceforge.plantuml.SkinParamDelegator: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(r5);

        return $z1;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.SkinParamColors: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.color.Colors: java.lang.Boolean getShadowing()>();

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public transient net.sourceforge.plantuml.ugraphic.color.HColor getFontHtmlColor(net.sourceforge.plantuml.cucadiagram.Stereotype, net.sourceforge.plantuml.FontParam[])
    {
        net.sourceforge.plantuml.SkinParamColors r0;
        net.sourceforge.plantuml.graphic.color.ColorType $r1;
        net.sourceforge.plantuml.graphic.color.Colors $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, $r6;
        net.sourceforge.plantuml.cucadiagram.Stereotype r4;
        net.sourceforge.plantuml.FontParam[] r5;

        r0 := @this: net.sourceforge.plantuml.SkinParamColors;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r5 := @parameter1: net.sourceforge.plantuml.FontParam[];

        $r2 = r0.<net.sourceforge.plantuml.SkinParamColors: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $r1 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType TEXT>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r1);

        if r3 != null goto label1;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.SkinParamDelegator: net.sourceforge.plantuml.ugraphic.color.HColor getFontHtmlColor(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.FontParam[])>(r4, r5);

        return $r6;

     label1:
        return r3;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ColorParam, net.sourceforge.plantuml.cucadiagram.Stereotype, boolean)
    {
        net.sourceforge.plantuml.ColorParam r0;
        net.sourceforge.plantuml.graphic.color.ColorType r1;
        net.sourceforge.plantuml.SkinParamColors r2;
        net.sourceforge.plantuml.graphic.color.Colors $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor r4, $r6, $r8;
        boolean $z0, z1;
        net.sourceforge.plantuml.cucadiagram.Stereotype r5;
        java.lang.AssertionError $r7;

        r2 := @this: net.sourceforge.plantuml.SkinParamColors;

        r0 := @parameter0: net.sourceforge.plantuml.ColorParam;

        r5 := @parameter1: net.sourceforge.plantuml.cucadiagram.Stereotype;

        z1 := @parameter2: boolean;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.graphic.color.ColorType getColorType()>();

        if r1 != null goto label1;

        $r8 = specialinvoke r2.<net.sourceforge.plantuml.SkinParamDelegator: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype,boolean)>(r0, r5, z1);

        return $r8;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.SkinParamColors: net.sourceforge.plantuml.graphic.color.Colors colors>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>(r1);

        if r4 == null goto label2;

        return r4;

     label2:
        $z0 = <net.sourceforge.plantuml.SkinParamColors: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        if r4 == null goto label3;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label3:
        $r6 = specialinvoke r2.<net.sourceforge.plantuml.SkinParamDelegator: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ColorParam,net.sourceforge.plantuml.cucadiagram.Stereotype,boolean)>(r0, r5, z1);

        return $r6;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/SkinParamColors;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.SkinParamColors: boolean $assertionsDisabled> = $z1;

        return;
    }
}
