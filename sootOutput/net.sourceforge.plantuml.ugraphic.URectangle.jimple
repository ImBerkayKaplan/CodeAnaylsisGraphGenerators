public class net.sourceforge.plantuml.ugraphic.URectangle extends net.sourceforge.plantuml.ugraphic.AbstractShadowable implements net.sourceforge.plantuml.ugraphic.UShapeSized, net.sourceforge.plantuml.ugraphic.UShapeIgnorableForCompression
{
    private final double width;
    private final double height;
    private final double rx;
    private final double ry;
    private final java.lang.String comment;
    private final java.lang.String codeLine;
    private final boolean ignoreForCompressionOnX;
    private final boolean ignoreForCompressionOnY;

    public net.sourceforge.plantuml.ugraphic.URectangle withHeight(double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1;
        double d0, $d1, $d2, $d3, $d4;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double rx>;

        $d1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double ry>;

        $r3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String comment>;

        $z1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnX>;

        $z0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnY>;

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String codeLine>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double,double,double,java.lang.String,boolean,boolean,java.lang.String)>($d3, d0, $d2, $d1, $r3, $z1, $z0, $r2);

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getDeltaShadow()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>($d4);

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.URectangle withWidth(double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1;
        double d0, $d1, $d2, $d3, $d4;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $d2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double rx>;

        $d1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double ry>;

        $r3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String comment>;

        $z1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnX>;

        $z0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnY>;

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String codeLine>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double,double,double,java.lang.String,boolean,boolean,java.lang.String)>(d0, $d3, $d2, $d1, $r3, $z1, $z0, $r2);

        $d4 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.URectangle: double getDeltaShadow()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>($d4);

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.URectangle withCommentAndCodeLine(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1;
        java.lang.String r2, r3;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3;

        r1 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $d1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double rx>;

        $d0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double ry>;

        $z1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnX>;

        $z0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnY>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double,double,double,java.lang.String,boolean,boolean,java.lang.String)>($d3, $d2, $d1, $d0, r2, $z1, $z0, r3);

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.URectangle rounded(double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1;
        double d0, $d1, $d2;
        java.lang.String $r2, $r3;
        boolean $z0, $z1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $r3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String comment>;

        $z1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnX>;

        $z0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnY>;

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String codeLine>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double,double,double,java.lang.String,boolean,boolean,java.lang.String)>($d2, $d1, d0, d0, $r3, $z1, $z0, $r2);

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.Shadowable diagonalCorner(double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        boolean $z0, $z1;
        java.lang.IllegalStateException $r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.UPath $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        d0 := @parameter0: double;

        $z0 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnX>;

        if $z0 != 0 goto label1;

        $z1 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnY>;

        if $z1 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label2:
        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label3;

        return r0;

     label3:
        $r2 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(d0, 0.0);

        $d1 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d2 = $d1 - d0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d2, 0.0);

        $d3 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d3, d0);

        $d6 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d4 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $d5 = $d4 - d0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d6, $d5);

        $d7 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d9 = $d7 - d0;

        $d8 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d9, $d8);

        $d10 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d0, $d10);

        $d11 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $d12 = $d11 - d0;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d12);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, d0);

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d0, 0.0);

        return $r2;
    }

    public final net.sourceforge.plantuml.ugraphic.URectangle ignoreForCompressionOnX()
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        double $d0, $d1, $d2, $d3;

        r1 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $d1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double rx>;

        $d0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double ry>;

        $r3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String comment>;

        $z0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnY>;

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String codeLine>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double,double,double,java.lang.String,boolean,boolean,java.lang.String)>($d3, $d2, $d1, $d0, $r3, 1, $z0, $r2);

        return $r0;
    }

    public final net.sourceforge.plantuml.ugraphic.URectangle ignoreForCompressionOnY()
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, r1;
        java.lang.String $r2, $r3;
        boolean $z0;
        double $d0, $d1, $d2, $d3;

        r1 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $d1 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double rx>;

        $d0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: double ry>;

        $r3 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String comment>;

        $z0 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnX>;

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String codeLine>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double,double,double,java.lang.String,boolean,boolean,java.lang.String)>($d3, $d2, $d1, $d0, $r3, $z0, 1, $r2);

        return $r0;
    }

    public void <init>(double, double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double,double,double,java.lang.String,boolean,boolean,java.lang.String)>(d0, d1, 0.0, 0.0, null, 0, 0, null);

        return;
    }

    public void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        return;
    }

    private void <init>(double, double, double, double, java.lang.String, boolean, boolean, java.lang.String)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double d0, d1, d2, d3;
        byte $b0, $b1;
        boolean z0, z1;
        java.lang.String r1, r2, $r7, $r12;
        java.lang.IllegalArgumentException $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        r1 := @parameter4: java.lang.String;

        z0 := @parameter5: boolean;

        z1 := @parameter6: boolean;

        r2 := @parameter7: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractShadowable: void <init>()>();

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("height=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label1:
        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        r0.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnX> = z0;

        r0.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnY> = z1;

        r0.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String comment> = r1;

        r0.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String codeLine> = r2;

        r0.<net.sourceforge.plantuml.ugraphic.URectangle: double width> = d1;

        r0.<net.sourceforge.plantuml.ugraphic.URectangle: double height> = d0;

        r0.<net.sourceforge.plantuml.ugraphic.URectangle: double rx> = d2;

        r0.<net.sourceforge.plantuml.ugraphic.URectangle: double ry> = d3;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5;
        net.sourceforge.plantuml.ugraphic.URectangle r2;
        double $d0, $d1;
        java.lang.String $r6;

        r2 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("width=");

        $d0 = r2.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" height=");

        $d1 = r2.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public double getWidth()
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        return $d0;
    }

    public double getHeight()
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        return $d0;
    }

    public double getRx()
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double rx>;

        return $d0;
    }

    public double getRy()
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double ry>;

        return $d0;
    }

    public net.sourceforge.plantuml.ugraphic.URectangle clip(net.sourceforge.plantuml.ugraphic.UClip)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        net.sourceforge.plantuml.ugraphic.UClip r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UClip;

        return r0;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax()
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.MinMax $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $d1 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double width>;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: double height>;

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax fromMax(double,double)>($d1, $d0);

        return $r1;
    }

    public final java.lang.String getComment()
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String comment>;

        return $r1;
    }

    public java.lang.String getCodeLine()
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String codeLine>;

        return $r1;
    }

    public void drawWhenCompressed(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.comp.CompressionMode)
    {
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode r0, $r1, $r2;
        net.sourceforge.plantuml.ugraphic.UGraphic r3, $r7, $r11;
        net.sourceforge.plantuml.ugraphic.UEmpty $r4, $r8, $r9, $r12;
        net.sourceforge.plantuml.ugraphic.URectangle r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r10;

        r5 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.ugraphic.comp.CompressionMode;

        $r1 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if r0 != $r1 goto label1;

        $r9 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        $d4 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>(2.0, $d4);

        interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

        $d5 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        $d6 = $d5 - 2.0;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d6);

        $r11 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r12 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        $d7 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>(2.0, $d7);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

     label1:
        $r2 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_Y>;

        if r0 != $r2 goto label2;

        $r4 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        $d0 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>($d0, 2.0);

        interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        $d2 = $d1 - 2.0;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d2);

        $r7 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        $d3 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>($d3, 2.0);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

     label2:
        return;
    }

    public boolean isIgnoreForCompressionOn(net.sourceforge.plantuml.ugraphic.comp.CompressionMode)
    {
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode r0, $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        net.sourceforge.plantuml.ugraphic.URectangle r4;
        boolean $z0, $z1;

        r4 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.comp.CompressionMode;

        $r1 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if r0 != $r1 goto label1;

        $z1 = r4.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnX>;

        return $z1;

     label1:
        $r2 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_Y>;

        if r0 != $r2 goto label2;

        $z0 = r4.<net.sourceforge.plantuml.ugraphic.URectangle: boolean ignoreForCompressionOnY>;

        return $z0;

     label2:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;
    }

    public volatile void setDeltaShadow(double)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        d0 := @parameter0: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractShadowable: void setDeltaShadow(double)>(d0);

        return;
    }

    public volatile double getDeltaShadow()
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractShadowable: double getDeltaShadow()>();

        return $d0;
    }
}
