public class net.sourceforge.plantuml.preproc.DefineSignature extends java.lang.Object
{
    private final java.lang.String key;
    private final java.lang.String fonctionName;
    private final java.util.List variables;
    private final boolean isMethod;

    public void <init>(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.preproc.DefineSignature r0;
        java.util.ArrayList $r1;
        java.lang.String r2, $r5, $r6, r8, $r9, $r13, r15;
        boolean $z0, $z1;
        java.util.StringTokenizer $r3;
        net.sourceforge.plantuml.preproc.Variables $r7, $r12;
        java.util.List $r11;
        net.sourceforge.plantuml.preproc.DefineVariable $r14;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.preproc.DefineSignature;

        r2 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.preproc.DefineSignature: java.util.List variables> = $r1;

        r0.<net.sourceforge.plantuml.preproc.DefineSignature: java.lang.String key> = r2;

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("(");

        r0.<net.sourceforge.plantuml.preproc.DefineSignature: boolean isMethod> = $z0;

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, "(),");

        $r5 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>();

        r0.<net.sourceforge.plantuml.preproc.DefineSignature: java.lang.String fonctionName> = $r6;

        $r7 = new net.sourceforge.plantuml.preproc.Variables;

        $r9 = r0.<net.sourceforge.plantuml.preproc.DefineSignature: java.lang.String fonctionName>;

        specialinvoke $r7.<net.sourceforge.plantuml.preproc.Variables: void <init>(java.lang.String,java.lang.String)>($r9, r8);

     label1:
        $z1 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label2;

        $r13 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r15 = virtualinvoke $r13.<java.lang.String: java.lang.String trim()>();

        $r14 = new net.sourceforge.plantuml.preproc.DefineVariable;

        specialinvoke $r14.<net.sourceforge.plantuml.preproc.DefineVariable: void <init>(java.lang.String)>(r15);

        virtualinvoke $r7.<net.sourceforge.plantuml.preproc.Variables: void add(net.sourceforge.plantuml.preproc.DefineVariable)>($r14);

        goto label1;

     label2:
        i0 = virtualinvoke $r7.<net.sourceforge.plantuml.preproc.Variables: int countDefaultValue()>();

        i1 = 0;

     label3:
        if i1 > i0 goto label4;

        $r11 = r0.<net.sourceforge.plantuml.preproc.DefineSignature: java.util.List variables>;

        $r12 = virtualinvoke $r7.<net.sourceforge.plantuml.preproc.Variables: net.sourceforge.plantuml.preproc.Variables removeSomeDefaultValues(int)>(i1);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        i1 = i1 + 1;

        goto label3;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        net.sourceforge.plantuml.preproc.DefineSignature r1;
        java.lang.String $r2, $r5, $r7;

        r1 := @this: net.sourceforge.plantuml.preproc.DefineSignature;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.preproc.DefineSignature: java.lang.String key>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r5 = r1.<net.sourceforge.plantuml.preproc.DefineSignature: java.lang.String fonctionName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public boolean isMethod()
    {
        net.sourceforge.plantuml.preproc.DefineSignature r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.preproc.DefineSignature;

        $z0 = r0.<net.sourceforge.plantuml.preproc.DefineSignature: boolean isMethod>;

        return $z0;
    }

    public java.lang.String getKey()
    {
        net.sourceforge.plantuml.preproc.DefineSignature r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.preproc.DefineSignature;

        $r1 = r0.<net.sourceforge.plantuml.preproc.DefineSignature: java.lang.String key>;

        return $r1;
    }

    public java.util.List getVariationVariables()
    {
        net.sourceforge.plantuml.preproc.DefineSignature r0;
        java.util.List $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.preproc.DefineSignature;

        $r1 = r0.<net.sourceforge.plantuml.preproc.DefineSignature: java.util.List variables>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public final java.lang.String getFonctionName()
    {
        net.sourceforge.plantuml.preproc.DefineSignature r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.preproc.DefineSignature;

        $r1 = r0.<net.sourceforge.plantuml.preproc.DefineSignature: java.lang.String fonctionName>;

        return $r1;
    }
}
