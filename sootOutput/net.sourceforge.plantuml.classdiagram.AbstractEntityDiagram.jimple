public abstract class net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram extends net.sourceforge.plantuml.cucadiagram.CucaDiagram
{

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.UmlDiagramType, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.UmlDiagramType r3;
        net.sourceforge.plantuml.ISkinSimple r4;

        r0 := @this: net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.UmlDiagramType;

        r4 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3, r4);

        return;
    }

    protected final java.util.List getDotStrings()
    {
        java.lang.String[] $r0;
        java.util.List r1, $r8;
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram r2;
        net.sourceforge.plantuml.Pragma $r3, $r4;
        boolean $z0;
        java.lang.String r5;
        java.util.ArrayList $r6;

        r2 := @this: net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;

        $r0 = newarray (java.lang.String)[4];

        $r0[0] = "nodesep=.35;";

        $r0[1] = "ranksep=0.8;";

        $r0[2] = "edge [fontsize=11,labelfontsize=11];";

        $r0[3] = "node [fontsize=11,height=.35,width=.55];";

        r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.Pragma getPragma()>();

        $z0 = virtualinvoke $r3.<net.sourceforge.plantuml.Pragma: boolean isDefine(java.lang.String)>("graphattributes");

        if $z0 != 0 goto label1;

        return r1;

     label1:
        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.Pragma getPragma()>();

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.Pragma: java.lang.String getValue(java.lang.String)>("graphattributes");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(java.util.Collection)>(r1);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

        $r8 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r6);

        return $r8;
    }

    public final net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r5;
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram r3;
        int $i0;
        java.lang.String $r6, r11, $r15;
        net.sourceforge.plantuml.core.UmlSource $r8, $r10;
        net.sourceforge.plantuml.core.DiagramDescription $r14;

        r3 := @this: net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;

        $r0 = new java.lang.StringBuilder;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: int getLeafssize()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" entities");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r6);

        $r8 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.core.UmlSource getSource()>();

        if $r8 == null goto label1;

        $r10 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.core.UmlSource getSource()>();

        r11 = virtualinvoke $r10.<net.sourceforge.plantuml.core.UmlSource: java.lang.String getId()>();

        if r11 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = new net.sourceforge.plantuml.core.DiagramDescription;

        $r15 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>($r15);

        return $r14;
    }
}
