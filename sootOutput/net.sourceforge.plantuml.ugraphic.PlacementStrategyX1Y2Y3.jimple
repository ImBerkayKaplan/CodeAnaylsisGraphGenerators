public class net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3 extends net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy
{

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractPlacementStrategy: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return;
    }

    public java.util.Map getPositions(double, double)
    {
        net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3 r0;
        java.util.Map $r1, $r10, $r25;
        java.util.Collection $r2;
        java.util.Iterator $r3, $r6, $r7, r12;
        java.lang.Object $r4, $r13, $r15, $r17, $r21, $r23, $r26, $r30;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5, $r16, r27, $r31;
        double d0, d1, d2, $d3, $d4, $d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, d19, d20;
        java.util.LinkedHashMap $r8;
        java.util.Set $r11;
        java.util.Map$Entry r14, r22;
        java.awt.geom.Point2D$Double $r18, $r28;
        net.sourceforge.plantuml.graphic.TextBlock $r19, r24;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3;

        d2 := @parameter0: double;

        d7 := @parameter1: double;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3: java.util.Map getDimensions()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r4;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3: java.util.Iterator butFirst()>();

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3: double getMaxWidth(java.util.Iterator)>($r6);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3: java.util.Iterator butFirst()>();

        d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3: double getSumHeight(java.util.Iterator)>($r7);

        $d3 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = d2 - $d3;

        $d5 = $d4 - d0;

        d6 = $d5 / 3.0;

        $r8 = new java.util.LinkedHashMap;

        specialinvoke $r8.<java.util.LinkedHashMap: void <init>()>();

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3: java.util.Map getDimensions()>();

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set entrySet()>();

        r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

        $r13 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.util.Map$Entry) $r13;

        $r15 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r16 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r15;

        $d8 = virtualinvoke $r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d9 = d7 - $d8;

        d19 = $d9 / 2.0;

        $r17 = interfaceinvoke r14.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (net.sourceforge.plantuml.graphic.TextBlock) $r17;

        $r18 = new java.awt.geom.Point2D$Double;

        specialinvoke $r18.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d6, d19);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r19, $r18);

        $d10 = d7 - d1;

        d20 = $d10 / 2.0;

     label1:
        $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r21 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r21;

        $r23 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        r24 = (net.sourceforge.plantuml.graphic.TextBlock) $r23;

        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3: java.util.Map getDimensions()>();

        $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>(r24);

        r27 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r26;

        $d11 = 2.0 * d6;

        $d12 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d13 = $d11 + $d12;

        $d14 = virtualinvoke r27.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d15 = d0 - $d14;

        $d16 = $d15 / 2.0;

        d17 = $d13 + $d16;

        $r28 = new java.awt.geom.Point2D$Double;

        specialinvoke $r28.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d17, d20);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r24, $r28);

        $r30 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r31 = (net.sourceforge.plantuml.awt.geom.Dimension2D) $r30;

        $d18 = virtualinvoke $r31.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d20 = d20 + $d18;

        goto label1;

     label2:
        return $r8;
    }

    private java.util.Iterator butFirst()
    {
        net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3 r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.PlacementStrategyX1Y2Y3: java.util.Map getDimensions()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        return r3;
    }
}
