class net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1 extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator it;
    final net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1 this$1;

    void <init>(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1 r1, $r2;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox $r3;
        java.util.List $r4;
        java.util.Iterator $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1;

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1 this$1>;

        $r3 = $r2.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox this$0>;

        $r4 = staticinvoke <net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox: java.util.List access$000(net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1: java.util.Iterator it> = $r5;

        return;
    }

    public boolean hasNext()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1: java.util.Iterator it>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public net.sourceforge.plantuml.sequencediagram.graphic.Segment next()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.sequencediagram.graphic.GraphicalDelayText r3;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment $r4;
        double $d0, $d1;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1 $r5;
        net.sourceforge.plantuml.graphic.StringBounder $r6;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1: java.util.Iterator it>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.sequencediagram.graphic.GraphicalDelayText) $r2;

        $r4 = new net.sourceforge.plantuml.sequencediagram.graphic.Segment;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.graphic.GraphicalDelayText: double getStartingY()>();

        $r5 = r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1 this$1>;

        $r6 = $r5.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1: net.sourceforge.plantuml.graphic.StringBounder val$stringBounder>;

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.graphic.GraphicalDelayText: double getEndingY(net.sourceforge.plantuml.graphic.StringBounder)>($r6);

        specialinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: void <init>(double,double)>($d0, $d1);

        return $r4;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1 r1;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1 r0;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.ParticipantBox$1$1: net.sourceforge.plantuml.sequencediagram.graphic.Segment next()>();

        return $r1;
    }
}
