class net.sourceforge.plantuml.svek.extremity.ExtremityArrow extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private net.sourceforge.plantuml.ugraphic.UPolygon polygon;
    private final net.sourceforge.plantuml.ugraphic.ULine line;
    private final java.awt.geom.Point2D contact;

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityArrow r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityArrow;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: java.awt.geom.Point2D contact>;

        return $r1;
    }

    public void <init>(java.awt.geom.Point2D, double, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityArrow r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1, $r2, $r4, $r5;
        int i0;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, d21, d22;
        java.awt.geom.Point2D r3, r8, $r9, $r10;
        java.awt.geom.Point2D$Double $r6;
        net.sourceforge.plantuml.ugraphic.ULine $r7;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityArrow;

        r3 := @parameter0: java.awt.geom.Point2D;

        d21 := @parameter1: double;

        r8 := @parameter2: java.awt.geom.Point2D;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        $r1 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r1;

        d22 = virtualinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: double manageround(double)>(d21);

        i0 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: int buildPolygon()>();

        $r2 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d0 = d22 + 1.5707963267948966;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>($d0);

        $r4 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d2 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPolygon: net.sourceforge.plantuml.ugraphic.UPolygon translate(double,double)>($d1, $d2);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r5;

        $r6 = new java.awt.geom.Point2D$Double;

        $d3 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d5 = (double) i0;

        $d4 = d22 + 1.5707963267948966;

        $d6 = staticinvoke <java.lang.Math: double cos(double)>($d4);

        $d7 = $d5 * $d6;

        $d8 = $d3 - $d7;

        $d9 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $d11 = (double) i0;

        $d10 = d22 + 1.5707963267948966;

        $d12 = staticinvoke <java.lang.Math: double sin(double)>($d10);

        $d13 = $d11 * $d12;

        $d14 = $d9 - $d13;

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d8, $d14);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: java.awt.geom.Point2D contact> = $r6;

        $r7 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d15 = virtualinvoke r8.<java.awt.geom.Point2D: double getX()>();

        $r9 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: java.awt.geom.Point2D contact>;

        $d16 = virtualinvoke $r9.<java.awt.geom.Point2D: double getX()>();

        $d17 = $d15 - $d16;

        $d18 = virtualinvoke r8.<java.awt.geom.Point2D: double getY()>();

        $r10 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: java.awt.geom.Point2D contact>;

        $d19 = virtualinvoke $r10.<java.awt.geom.Point2D: double getY()>();

        $d20 = $d18 - $d19;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d17, $d20);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.ULine line> = $r7;

        return;
    }

    public void <init>(java.awt.geom.Point2D, double)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityArrow r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1, $r2, $r4, $r5;
        java.awt.geom.Point2D r3;
        double $d0, $d1, d2, d3;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityArrow;

        r3 := @parameter0: java.awt.geom.Point2D;

        d2 := @parameter1: double;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        $r1 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r1;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.ULine line> = null;

        d3 = virtualinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: double manageround(double)>(d2);

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: int buildPolygon()>();

        $r2 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>(d3);

        $r4 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPolygon: net.sourceforge.plantuml.ugraphic.UPolygon translate(double,double)>($d0, $d1);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r5;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: java.awt.geom.Point2D contact> = r3;

        return;
    }

    private int buildPolygon()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityArrow r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1, $r2, $r3, $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityArrow;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $r2 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-9.0, -4.0);

        $r3 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-5.0, 0.0);

        $r4 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-9.0, 4.0);

        $r5 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        return 5;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UParam $r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.UBackground $r2, $r12;
        net.sourceforge.plantuml.svek.extremity.ExtremityArrow r3;
        net.sourceforge.plantuml.ugraphic.UPolygon $r4;
        net.sourceforge.plantuml.ugraphic.ULine $r5, $r6, $r10;
        double $d0;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;
        java.awt.geom.Point2D $r8;
        net.sourceforge.plantuml.ugraphic.UGraphic $r9, r13, r14;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r11;

        r3 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityArrow;

        r13 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        r1 = interfaceinvoke $r0.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if r1 != null goto label1;

        $r11 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r14 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        goto label2;

     label1:
        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r14 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

     label2:
        $r4 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        $r5 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.ULine line>;

        if $r5 == null goto label3;

        $r6 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.ULine line>;

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.ULine: double getLength()>();

        $b0 = $d0 cmpl 2.0;

        if $b0 <= 0 goto label3;

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r8 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: java.awt.geom.Point2D contact>;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>($r8);

        $r9 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r10 = r3.<net.sourceforge.plantuml.svek.extremity.ExtremityArrow: net.sourceforge.plantuml.ugraphic.ULine line>;

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

     label3:
        return;
    }
}
