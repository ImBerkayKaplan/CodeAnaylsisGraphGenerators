public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch extends net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactoryDelegator
{

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactoryDelegator: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)>(r1);

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createSwitch(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, java.util.List, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r1;
        java.util.List r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r5, r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r2 := @parameter1: java.util.List;

        r5 := @parameter2: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r6 := @parameter3: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r3 := @parameter4: net.sourceforge.plantuml.cucadiagram.Display;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createWithLinks(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,java.util.List,net.sourceforge.plantuml.cucadiagram.Display)>(r1, r2, r3);

        return $r4;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createNude(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, java.util.List)
    {
        java.util.ArrayList $r0;
        java.util.List r2;
        java.util.Iterator r3;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r5;
        java.lang.Object $r6;
        net.sourceforge.plantuml.activitydiagram3.Branch r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch r10;

        r10 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch;

        r5 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r2 := @parameter1: java.util.List;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r3 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r6;

        $r8 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r9 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r9, 30.0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude;

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude: void <init>(java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r0, r5);

        return $r4;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createWithDiamonds(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, java.util.List, net.sourceforge.plantuml.cucadiagram.Display)
    {
        java.util.ArrayList $r0;
        java.util.List r2;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r4;
        java.lang.Object $r5, $r8, $r12;
        net.sourceforge.plantuml.cucadiagram.Display r6;
        net.sourceforge.plantuml.activitydiagram3.Branch $r7, $r9, r16;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds $r10;
        net.sourceforge.plantuml.graphic.StringBounder $r11;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r14, r17, r18;
        java.util.Iterator r15;

        r3 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch;

        r4 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r2 := @parameter1: java.util.List;

        r6 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r15 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r16 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r12;

        $r13 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered;

        $r14 = virtualinvoke r16.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMinWidthCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>($r14, 30.0);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r5;

        r17 = specialinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond1(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.cucadiagram.Display)>(r4, $r7, r6);

        $r8 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r8;

        r18 = specialinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond2(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.Branch)>(r4, $r9);

        $r10 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: void <init>(java.util.List,java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r0, r2, r4, r17, r18, $r11);

        return $r10;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createWithLinks(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, java.util.List, net.sourceforge.plantuml.cucadiagram.Display)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r3;
        java.util.List r4;
        java.lang.Object $r5, $r9, $r28;
        net.sourceforge.plantuml.cucadiagram.Display r6;
        net.sourceforge.plantuml.activitydiagram3.Branch $r7, $r10, r39;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r8, r11, $r16, $r20, $r37;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ISkinParam $r12, $r22, $r24, $r26;
        int $i0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks $r13;
        net.sourceforge.plantuml.graphic.StringBounder $r14, $r15, $r18, $r19, $r30, $r33;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink $r17;
        net.sourceforge.plantuml.style.StyleSignature $r21;
        net.sourceforge.plantuml.style.StyleBuilder $r23;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r25;
        net.sourceforge.plantuml.api.ThemeStyle $r27;
        net.sourceforge.plantuml.graphic.TextBlock $r29, $r32;
        net.sourceforge.plantuml.awt.geom.Dimension2D r31, r34;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorateOutLabel $r35;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorateInLabel $r36;
        java.util.Iterator r38;
        net.sourceforge.plantuml.style.Style r40;
        net.sourceforge.plantuml.graphic.Rainbow r41;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch;

        r3 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r4 := @parameter1: java.util.List;

        r6 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r5;

        r8 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond1(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.Branch,net.sourceforge.plantuml.cucadiagram.Display)>(r3, $r7, r6);

        $r9 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r10 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r9;

        r11 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond2(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.Branch)>(r3, $r10);

        r38 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r28 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (net.sourceforge.plantuml.activitydiagram3.Branch) $r28;

        $r29 = virtualinvoke r39.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlockPositive()>();

        $r30 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r31 = interfaceinvoke $r29.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r30);

        $r32 = virtualinvoke r39.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.TextBlock getTextBlockSpecial()>();

        $r33 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r34 = interfaceinvoke $r32.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r33);

        $r35 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorateOutLabel;

        $r36 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorateInLabel;

        $r37 = virtualinvoke r39.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile()>();

        specialinvoke $r36.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorateInLabel: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r37, r31);

        specialinvoke $r35.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorateOutLabel: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r36, r34);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r35);

        goto label1;

     label2:
        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label3;

        $r21 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionArrow()>();

        $r22 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r40 = virtualinvoke $r21.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r23);

        $r24 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r26 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r41 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.api.ThemeStyle)>(r40, $r25, $r27);

        goto label4;

     label3:
        $r12 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r41 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.ISkinParam)>($r12);

     label4:
        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        if $i0 != 1 goto label5;

        $r17 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink;

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r17.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink: void <init>(java.util.List,java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.Rainbow)>($r0, r4, r3, r8, r11, $r18, r41);

        $r19 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r20 = virtualinvoke $r17.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithOneLink: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addLinks(net.sourceforge.plantuml.graphic.StringBounder)>($r19);

        return $r20;

     label5:
        $r13 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks;

        $r14 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: void <init>(java.util.List,java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.Rainbow)>($r0, r4, r3, r8, r11, $r14, r41);

        $r15 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r16 = virtualinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithManyLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addLinks(net.sourceforge.plantuml.graphic.StringBounder)>($r15);

        return $r16;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond1(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.Branch, net.sourceforge.plantuml.cucadiagram.Display)
    {
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r0, r43;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r5, $r11, $r13, $r16, $r19, $r22, $r24, $r26, $r30, $r32, $r37, $r39;
        net.sourceforge.plantuml.FontParam $r3;
        net.sourceforge.plantuml.skin.rose.Rose $r4, $r18;
        net.sourceforge.plantuml.ColorParam $r6, $r20;
        net.sourceforge.plantuml.activitydiagram3.Branch r7;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8, $r34, r44, $r45, r46, $r47;
        net.sourceforge.plantuml.cucadiagram.Display r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r12;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r14, $r15;
        net.sourceforge.plantuml.creole.CreoleMode $r17;
        net.sourceforge.plantuml.style.StyleSignature $r21;
        net.sourceforge.plantuml.style.StyleBuilder $r23;
        net.sourceforge.plantuml.api.ThemeStyle $r25, $r31, $r38;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r27, $r33, $r40;
        net.sourceforge.plantuml.style.PName $r28, $r35;
        net.sourceforge.plantuml.style.Value $r29, $r36;
        net.sourceforge.plantuml.LineBreakStrategy r41;
        net.sourceforge.plantuml.style.Style r42;
        net.sourceforge.plantuml.graphic.TextBlock r48;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch;

        r12 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r7 := @parameter1: net.sourceforge.plantuml.activitydiagram3.Branch;

        r9 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r41 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label3;

        $r21 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionDiamond()>();

        $r22 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r42 = virtualinvoke $r21.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r23);

        r41 = virtualinvoke r42.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        $r24 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r26 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r43 = virtualinvoke r42.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r25, $r27);

        $r28 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r29 = virtualinvoke r42.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r28);

        $r30 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r31 = interfaceinvoke $r30.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r32 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r33 = interfaceinvoke $r32.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r44 = interfaceinvoke $r29.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r31, $r33);

        $r34 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r34 != null goto label1;

        $r35 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r36 = virtualinvoke r42.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r35);

        $r37 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r38 = interfaceinvoke $r37.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r39 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r40 = interfaceinvoke $r39.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r45 = interfaceinvoke $r36.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r38, $r40);

        goto label2;

     label1:
        $r45 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

     label2:
        r46 = $r45;

        goto label6;

     label3:
        $r0 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r3 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ACTIVITY_DIAMOND>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r2, $r3, null);

        r43 = $r0;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.skin.rose.Rose getRose()>();

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityDiamondBorder>;

        r44 = virtualinvoke $r4.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r5, $r6);

        $r8 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r8 != null goto label4;

        $r18 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.skin.rose.Rose getRose()>();

        $r19 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r20 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityDiamondBackground>;

        $r47 = virtualinvoke $r18.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r19, $r20);

        goto label5;

     label4:
        $r47 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

     label5:
        r46 = $r47;

     label6:
        $z2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>(r9);

        if $z2 != 0 goto label7;

        $z1 = virtualinvoke r9.<net.sourceforge.plantuml.cucadiagram.Display: boolean isWhite()>();

        if $z1 == 0 goto label8;

     label7:
        r48 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        goto label9;

     label8:
        $r13 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r14 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r15 = interfaceinvoke $r13.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r14);

        $r16 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r17 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        r48 = virtualinvoke r9.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r43, $r15, $r16, r41, $r17, null, null);

     label9:
        $r10 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r11 = virtualinvoke r7.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r48, $r11, r46, r44, r12);

        return $r10;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getDiamond2(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.Branch)
    {
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1, $r7;
        net.sourceforge.plantuml.ISkinParam $r2, $r8, $r11, $r16, $r18, $r23, $r25, $r33;
        net.sourceforge.plantuml.ColorParam $r3, $r9;
        net.sourceforge.plantuml.activitydiagram3.Branch r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r20, r27, $r28, r29, $r30;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r6;
        net.sourceforge.plantuml.style.StyleSignature $r10;
        net.sourceforge.plantuml.style.StyleBuilder $r12;
        net.sourceforge.plantuml.style.Style r13;
        net.sourceforge.plantuml.style.PName $r14, $r21;
        net.sourceforge.plantuml.style.Value $r15, $r22;
        net.sourceforge.plantuml.api.ThemeStyle $r17, $r24;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r19, $r26;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside $r31;
        net.sourceforge.plantuml.graphic.TextBlock $r32;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch;

        r6 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r4 := @parameter1: net.sourceforge.plantuml.activitydiagram3.Branch;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label3;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionDiamond()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r13 = virtualinvoke $r10.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r12);

        $r14 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r15 = virtualinvoke r13.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r14);

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r27 = interfaceinvoke $r15.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r17, $r19);

        $r20 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r20 != null goto label1;

        $r21 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r22 = virtualinvoke r13.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r21);

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r24 = interfaceinvoke $r23.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r28 = interfaceinvoke $r22.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r24, $r26);

        goto label2;

     label1:
        $r28 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

     label2:
        r29 = $r28;

        goto label6;

     label3:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.skin.rose.Rose getRose()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r3 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityDiamondBorder>;

        r27 = virtualinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r2, $r3);

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if $r5 != null goto label4;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.skin.rose.Rose getRose()>();

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileFactoryDelegatorSwitch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r9 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityDiamondBackground>;

        $r30 = virtualinvoke $r7.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r8, $r9);

        goto label5;

     label4:
        $r30 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

     label5:
        r29 = $r30;

     label6:
        $r31 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside;

        $r32 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        $r33 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke $r31.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamondInside: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r32, $r33, r29, r27, r6);

        return $r31;
    }
}
