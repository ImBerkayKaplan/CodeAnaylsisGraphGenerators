public class net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts extends net.sourceforge.plantuml.creole.atom.AbstractAtom implements net.sourceforge.plantuml.creole.atom.Atom
{
    private final java.util.List all;

    public void <init>(java.util.List)
    {
        net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts r0;
        java.util.List r1;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<net.sourceforge.plantuml.creole.atom.AbstractAtom: void <init>()>();

        r0.<net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts: java.util.List all> = r1;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        net.sourceforge.plantuml.Dimension2DDouble $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.creole.atom.Atom r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;
        double $d0, $d1, d2, d3;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 = 0.0;

        d3 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts: java.util.List all>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.creole.atom.Atom) $r4;

        r7 = interfaceinvoke r5.<net.sourceforge.plantuml.creole.atom.Atom: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d3 = staticinvoke <java.lang.Math: double max(double,double)>(d3, $d0);

        $d1 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = d2 + $d1;

        goto label1;

     label2:
        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d2, d3);

        return $r3;
    }

    public double getStartingAltitude(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts r0;
        java.util.List $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.creole.atom.Atom $r5;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts: java.util.List all>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return 0.0;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts: java.util.List all>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (net.sourceforge.plantuml.creole.atom.Atom) $r3;

        $d0 = interfaceinvoke $r5.<net.sourceforge.plantuml.creole.atom.Atom: double getStartingAltitude(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        return $d0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.creole.atom.Atom r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, $r9;
        net.sourceforge.plantuml.graphic.StringBounder $r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.creole.atom.AtomHorizontalTexts: java.util.List all>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.creole.atom.Atom) $r3;

        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r7 = interfaceinvoke r4.<net.sourceforge.plantuml.creole.atom.Atom: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r6);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d1);

        $r9 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke r4.<net.sourceforge.plantuml.creole.atom.Atom: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = d1 + $d0;

        goto label1;

     label2:
        return;
    }
}
