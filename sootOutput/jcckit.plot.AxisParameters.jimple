public class jcckit.plot.AxisParameters extends java.lang.Object
{
    public static final java.lang.String LOG_SCALE_KEY;
    public static final java.lang.String MINIMUM_KEY;
    public static final java.lang.String MAXIMUM_KEY;
    public static final java.lang.String AXIS_LENGTH_KEY;
    public static final java.lang.String AXIS_ATTRIBUTES_KEY;
    public static final java.lang.String AXIS_LABEL_KEY;
    public static final java.lang.String AXIS_LABEL_POSITION_KEY;
    public static final java.lang.String AXIS_LABEL_ATTRIBUTES_KEY;
    public static final java.lang.String AUTOMATIC_TIC_CALCULATION_KEY;
    public static final java.lang.String MINIMUM_TIC_KEY;
    public static final java.lang.String MAXIMUM_TIC_KEY;
    public static final java.lang.String NUMBER_OF_TICS_KEY;
    public static final java.lang.String TIC_LENGTH_KEY;
    public static final java.lang.String TIC_ATTRIBUTES_KEY;
    public static final java.lang.String TIC_LABEL_FORMAT_KEY;
    public static final java.lang.String TIC_LABEL_POSITION_KEY;
    public static final java.lang.String TIC_LABEL_ATTRIBUTES_KEY;
    public static final java.lang.String GRID_KEY;
    public static final java.lang.String GRID_ATTRIBUTES_KEY;
    private static final double LN10;
    boolean logScale;
    double minimum;
    double maximum;
    double axisLength;
    jcckit.graphic.LineAttributes axisAttributes;
    boolean automaticTicCalculation;
    double minimumTic;
    double maximumTic;
    int numberOfTics;
    double ticLength;
    jcckit.graphic.LineAttributes ticAttributes;
    jcckit.util.TicLabelFormat ticLabelFormat;
    jcckit.graphic.GraphPoint ticLabelPosition;
    jcckit.graphic.TextAttributes ticLabelAttributes;
    boolean grid;
    jcckit.graphic.LineAttributes gridAttributes;
    java.lang.String axisLabel;
    jcckit.graphic.GraphPoint axisLabelPosition;
    jcckit.graphic.TextAttributes axisLabelAttributes;

    public void <init>()
    {
        jcckit.plot.AxisParameters r0;

        r0 := @this: jcckit.plot.AxisParameters;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    double[] calculateTics()
    {
        jcckit.plot.AxisParameters r0;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10;
        double[] r1;
        double $d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, $d16, d17;

        r0 := @this: jcckit.plot.AxisParameters;

        $z0 = r0.<jcckit.plot.AxisParameters: boolean automaticTicCalculation>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<jcckit.plot.AxisParameters: void calculateTicsParameters()>();

     label1:
        $i0 = r0.<jcckit.plot.AxisParameters: int numberOfTics>;

        r1 = newarray (double)[$i0];

        $i1 = r0.<jcckit.plot.AxisParameters: int numberOfTics>;

        if $i1 <= 0 goto label6;

        $d0 = r0.<jcckit.plot.AxisParameters: double minimumTic>;

        $z1 = r0.<jcckit.plot.AxisParameters: boolean logScale>;

        d1 = staticinvoke <jcckit.util.Util: double log(double,boolean)>($d0, $z1);

        $d2 = r0.<jcckit.plot.AxisParameters: double maximumTic>;

        $z2 = r0.<jcckit.plot.AxisParameters: boolean logScale>;

        d15 = staticinvoke <jcckit.util.Util: double log(double,boolean)>($d2, $z2);

        $i2 = r0.<jcckit.plot.AxisParameters: int numberOfTics>;

        if $i2 <= 1 goto label2;

        $d14 = d15 - d1;

        $i7 = r0.<jcckit.plot.AxisParameters: int numberOfTics>;

        $i8 = $i7 - 1;

        $d13 = (double) $i8;

        $d16 = $d14 / $d13;

        goto label3;

     label2:
        $d16 = 0.0;

     label3:
        d17 = $d16;

        i9 = 0;

     label4:
        $i10 = lengthof r1;

        if i9 >= $i10 goto label5;

        $d9 = (double) i9;

        $d10 = d17 * $d9;

        $d11 = $d10 + d1;

        $z3 = r0.<jcckit.plot.AxisParameters: boolean logScale>;

        $d12 = staticinvoke <jcckit.util.Util: double exp(double,boolean)>($d11, $z3);

        r1[i9] = $d12;

        i9 = i9 + 1;

        goto label4;

     label5:
        $d4 = r0.<jcckit.plot.AxisParameters: double minimum>;

        $d3 = r1[0];

        $d5 = staticinvoke <jcckit.plot.AxisParameters: double adjust(double,double)>($d4, $d3);

        r1[0] = $d5;

        $i3 = r0.<jcckit.plot.AxisParameters: int numberOfTics>;

        $i6 = $i3 - 1;

        $d7 = r0.<jcckit.plot.AxisParameters: double maximum>;

        $i4 = r0.<jcckit.plot.AxisParameters: int numberOfTics>;

        $i5 = $i4 - 1;

        $d6 = r1[$i5];

        $d8 = staticinvoke <jcckit.plot.AxisParameters: double adjust(double,double)>($d7, $d6);

        r1[$i6] = $d8;

     label6:
        return r1;
    }

    private void calculateTicsParameters()
    {
        jcckit.plot.AxisParameters r0;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, d39;
        boolean $z0;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;

        r0 := @this: jcckit.plot.AxisParameters;

        $d1 = r0.<jcckit.plot.AxisParameters: double minimum>;

        $d0 = r0.<jcckit.plot.AxisParameters: double maximum>;

        d2 = staticinvoke <java.lang.Math: double min(double,double)>($d1, $d0);

        $d4 = r0.<jcckit.plot.AxisParameters: double minimum>;

        $d3 = r0.<jcckit.plot.AxisParameters: double maximum>;

        d5 = staticinvoke <java.lang.Math: double max(double,double)>($d4, $d3);

        $z0 = r0.<jcckit.plot.AxisParameters: boolean logScale>;

        if $z0 == 0 goto label1;

        $d23 = staticinvoke <java.lang.Math: double log(double)>(d2);

        $d24 = <jcckit.plot.AxisParameters: double LN10>;

        $d25 = $d23 / $d24;

        $d26 = 199.9999 + $d25;

        $i8 = (int) $d26;

        i12 = $i8 - 199;

        $d27 = staticinvoke <java.lang.Math: double log(double)>(d5);

        $d28 = <jcckit.plot.AxisParameters: double LN10>;

        $d29 = $d27 / $d28;

        $d30 = 200.0001 + $d29;

        $i9 = (int) $d30;

        i13 = $i9 - 200;

        $d32 = <jcckit.plot.AxisParameters: double LN10>;

        $d31 = (double) i12;

        $d33 = $d32 * $d31;

        $d34 = staticinvoke <java.lang.Math: double exp(double)>($d33);

        r0.<jcckit.plot.AxisParameters: double minimumTic> = $d34;

        $d36 = <jcckit.plot.AxisParameters: double LN10>;

        $d35 = (double) i13;

        $d37 = $d36 * $d35;

        $d38 = staticinvoke <java.lang.Math: double exp(double)>($d37);

        r0.<jcckit.plot.AxisParameters: double maximumTic> = $d38;

        $i10 = i13 - i12;

        $i11 = $i10 + 1;

        r0.<jcckit.plot.AxisParameters: int numberOfTics> = $i11;

        goto label3;

     label1:
        $d6 = d5 - d2;

        $d7 = staticinvoke <java.lang.Math: double log(double)>($d6);

        $d8 = <jcckit.plot.AxisParameters: double LN10>;

        $d9 = $d7 / $d8;

        $d10 = 199.69 + $d9;

        $i0 = (int) $d10;

        i14 = $i0 - 200;

        $d12 = <jcckit.plot.AxisParameters: double LN10>;

        $d11 = (double) i14;

        $d13 = $d12 * $d11;

        $d14 = staticinvoke <java.lang.Math: double exp(double)>($d13);

        d39 = 0.2 * $d14;

     label2:
        d39 = d39 * 5.0;

        $d15 = d2 / d39;

        $d16 = 999999.999999 + $d15;

        $i1 = (int) $d16;

        i2 = $i1 - 999999;

        $d17 = d5 / d39;

        $d18 = 1000000.000001 + $d17;

        $i3 = (int) $d18;

        i4 = $i3 - 1000000;

        $d19 = (double) i2;

        $d20 = $d19 * d39;

        r0.<jcckit.plot.AxisParameters: double minimumTic> = $d20;

        $d21 = (double) i4;

        $d22 = $d21 * d39;

        r0.<jcckit.plot.AxisParameters: double maximumTic> = $d22;

        $i5 = i4 - i2;

        $i6 = $i5 + 1;

        r0.<jcckit.plot.AxisParameters: int numberOfTics> = $i6;

        $i7 = r0.<jcckit.plot.AxisParameters: int numberOfTics>;

        if $i7 > 11 goto label2;

     label3:
        return;
    }

    private static double adjust(double, double)
    {
        double d0, d1, $d2, $d3, $d4, $d5;
        byte $b0, $b1;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        $b0 = d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $d2 = d1 / d0;

        $d3 = $d2 - 1.0;

        $d4 = staticinvoke <java.lang.Math: double abs(double)>($d3);

        $b1 = $d4 cmpg 1.0E-11;

        if $b1 >= 0 goto label1;

        $d5 = d1;

        goto label2;

     label1:
        $d5 = d0;

     label2:
        return $d5;
    }

    private static java.util.Properties createDefaultAxisProperties()
    {
        java.util.Properties $r0;
        java.lang.Class $r6, $r11, $r17, $r22, $r28;
        java.lang.String $r7, $r12, $r18, $r23, $r29;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("logScale", "false");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("minimum", "0");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("maximum", "1");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLength", "0.8");

        $r6 = class "Ljcckit/graphic/ShapeAttributes;";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisAttributes/className", $r7);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabel", "x");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabelPosition", "0 -0.05");

        $r11 = class "Ljcckit/graphic/BasicGraphicAttributes;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabelAttributes/className", $r12);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabelAttributes/horizontalAnchor", "center");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("automaticTicCalculation", "true");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLength", "0.01");

        $r17 = class "Ljcckit/graphic/ShapeAttributes;";

        $r18 = virtualinvoke $r17.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticAttributes/className", $r18);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelPosition", "0 -0.01");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelFormat", "%1.1f");

        $r22 = class "Ljcckit/graphic/BasicGraphicAttributes;";

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelAttributes/className", $r23);

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelAttributes/horizontalAnchor", "center");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelAttributes/verticalAnchor", "top");

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("grid", "false");

        $r28 = class "Ljcckit/graphic/ShapeAttributes;";

        $r29 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("gridAttributes/className", $r29);

        return $r0;
    }

    private static java.util.Properties createDefaultXAxisProperties()
    {
        java.util.Properties r0;

        r0 = staticinvoke <jcckit.plot.AxisParameters: java.util.Properties createDefaultAxisProperties()>();

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabel", "x");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabelPosition", "0 -0.05");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabelAttributes/verticalAnchor", "top");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelPosition", "0 -0.01");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelAttributes/horizontalAnchor", "center");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelAttributes/verticalAnchor", "top");

        return r0;
    }

    public static jcckit.plot.AxisParameters createXAxis(jcckit.util.ConfigParameters)
    {
        jcckit.util.ConfigParameters r0;
        java.util.Properties $r1;
        jcckit.plot.AxisParameters $r2;

        r0 := @parameter0: jcckit.util.ConfigParameters;

        $r1 = staticinvoke <jcckit.plot.AxisParameters: java.util.Properties createDefaultXAxisProperties()>();

        $r2 = staticinvoke <jcckit.plot.AxisParameters: jcckit.plot.AxisParameters createAxis(jcckit.util.ConfigParameters,java.util.Properties)>(r0, $r1);

        return $r2;
    }

    private static java.util.Properties createDefaultYAxisProperties()
    {
        java.util.Properties r0;

        r0 = staticinvoke <jcckit.plot.AxisParameters: java.util.Properties createDefaultAxisProperties()>();

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLength", "0.45");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabel", "y");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabelPosition", "-0.1 0");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabelAttributes/verticalAnchor", "bottom");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("axisLabelAttributes/orientationAngle", "90");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelPosition", "-0.01 0");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelAttributes/horizontalAnchor", "right");

        virtualinvoke r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("ticLabelAttributes/verticalAnchor", "center");

        return r0;
    }

    public static jcckit.plot.AxisParameters createYAxis(jcckit.util.ConfigParameters)
    {
        jcckit.util.ConfigParameters r0;
        java.util.Properties $r1;
        jcckit.plot.AxisParameters $r2;

        r0 := @parameter0: jcckit.util.ConfigParameters;

        $r1 = staticinvoke <jcckit.plot.AxisParameters: java.util.Properties createDefaultYAxisProperties()>();

        $r2 = staticinvoke <jcckit.plot.AxisParameters: jcckit.plot.AxisParameters createAxis(jcckit.util.ConfigParameters,java.util.Properties)>(r0, $r1);

        return $r2;
    }

    private static jcckit.plot.AxisParameters createAxis(jcckit.util.ConfigParameters, java.util.Properties)
    {
        jcckit.util.PropertiesBasedConfigData $r0;
        java.util.Properties r1;
        jcckit.util.ConfigParameters $r2, r4, $r5, $r8, $r14, $r17, $r23, $r26;
        jcckit.util.ConfigParametersBasedConfigData $r3;
        jcckit.plot.AxisParameters $r6;
        boolean $z0, $z1, $z2, $z3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.lang.Object $r9, $r15, $r18, $r24, $r27;
        jcckit.graphic.LineAttributes $r10, $r19, $r28;
        java.lang.String $r11;
        jcckit.graphic.GraphPoint $r12, $r21;
        double[] $r13, $r22;
        jcckit.graphic.TextAttributes $r16, $r25;
        jcckit.util.TicLabelFormat $r20;
        int $i0, $i1;

        r4 := @parameter0: jcckit.util.ConfigParameters;

        r1 := @parameter1: java.util.Properties;

        $r0 = new jcckit.util.PropertiesBasedConfigData;

        specialinvoke $r0.<jcckit.util.PropertiesBasedConfigData: void <init>(java.util.Properties)>(r1);

        $r2 = new jcckit.util.ConfigParameters;

        specialinvoke $r2.<jcckit.util.ConfigParameters: void <init>(jcckit.util.ConfigData)>($r0);

        $r3 = new jcckit.util.ConfigParametersBasedConfigData;

        specialinvoke $r3.<jcckit.util.ConfigParametersBasedConfigData: void <init>(jcckit.util.ConfigParameters,jcckit.util.ConfigParameters)>(r4, $r2);

        $r5 = new jcckit.util.ConfigParameters;

        specialinvoke $r5.<jcckit.util.ConfigParameters: void <init>(jcckit.util.ConfigData)>($r3);

        $r6 = new jcckit.plot.AxisParameters;

        specialinvoke $r6.<jcckit.plot.AxisParameters: void <init>()>();

        $z0 = virtualinvoke $r5.<jcckit.util.ConfigParameters: boolean getBoolean(java.lang.String)>("logScale");

        $r6.<jcckit.plot.AxisParameters: boolean logScale> = $z0;

        $d0 = virtualinvoke $r5.<jcckit.util.ConfigParameters: double getDouble(java.lang.String)>("minimum");

        $r6.<jcckit.plot.AxisParameters: double minimum> = $d0;

        $d1 = virtualinvoke $r5.<jcckit.util.ConfigParameters: double getDouble(java.lang.String)>("maximum");

        $r6.<jcckit.plot.AxisParameters: double maximum> = $d1;

        $d2 = virtualinvoke $r5.<jcckit.util.ConfigParameters: double getDouble(java.lang.String)>("axisLength");

        $r6.<jcckit.plot.AxisParameters: double axisLength> = $d2;

        $r8 = virtualinvoke $r5.<jcckit.util.ConfigParameters: jcckit.util.ConfigParameters getNode(java.lang.String)>("axisAttributes");

        $r9 = staticinvoke <jcckit.util.Factory: java.lang.Object create(jcckit.util.ConfigParameters)>($r8);

        $r10 = (jcckit.graphic.LineAttributes) $r9;

        $r6.<jcckit.plot.AxisParameters: jcckit.graphic.LineAttributes axisAttributes> = $r10;

        $r11 = virtualinvoke $r5.<jcckit.util.ConfigParameters: java.lang.String get(java.lang.String)>("axisLabel");

        $r6.<jcckit.plot.AxisParameters: java.lang.String axisLabel> = $r11;

        $r12 = new jcckit.graphic.GraphPoint;

        $r13 = virtualinvoke $r5.<jcckit.util.ConfigParameters: double[] getDoubleArray(java.lang.String)>("axisLabelPosition");

        specialinvoke $r12.<jcckit.graphic.GraphPoint: void <init>(double[])>($r13);

        $r6.<jcckit.plot.AxisParameters: jcckit.graphic.GraphPoint axisLabelPosition> = $r12;

        $r14 = virtualinvoke $r5.<jcckit.util.ConfigParameters: jcckit.util.ConfigParameters getNode(java.lang.String)>("axisLabelAttributes");

        $r15 = staticinvoke <jcckit.util.Factory: java.lang.Object create(jcckit.util.ConfigParameters)>($r14);

        $r16 = (jcckit.graphic.TextAttributes) $r15;

        $r6.<jcckit.plot.AxisParameters: jcckit.graphic.TextAttributes axisLabelAttributes> = $r16;

        $d3 = virtualinvoke $r5.<jcckit.util.ConfigParameters: double getDouble(java.lang.String)>("ticLength");

        $r6.<jcckit.plot.AxisParameters: double ticLength> = $d3;

        $z1 = virtualinvoke $r5.<jcckit.util.ConfigParameters: boolean getBoolean(java.lang.String)>("automaticTicCalculation");

        $r6.<jcckit.plot.AxisParameters: boolean automaticTicCalculation> = $z1;

        $z2 = $r6.<jcckit.plot.AxisParameters: boolean automaticTicCalculation>;

        if $z2 != 0 goto label1;

        specialinvoke $r6.<jcckit.plot.AxisParameters: void calculateTicsParameters()>();

        $d4 = $r6.<jcckit.plot.AxisParameters: double minimumTic>;

        $d5 = virtualinvoke $r5.<jcckit.util.ConfigParameters: double getDouble(java.lang.String,double)>("minimumTic", $d4);

        $r6.<jcckit.plot.AxisParameters: double minimumTic> = $d5;

        $d6 = $r6.<jcckit.plot.AxisParameters: double maximumTic>;

        $d7 = virtualinvoke $r5.<jcckit.util.ConfigParameters: double getDouble(java.lang.String,double)>("maximumTic", $d6);

        $r6.<jcckit.plot.AxisParameters: double maximumTic> = $d7;

        $i0 = $r6.<jcckit.plot.AxisParameters: int numberOfTics>;

        $i1 = virtualinvoke $r5.<jcckit.util.ConfigParameters: int getInt(java.lang.String,int)>("numberOfTics", $i0);

        $r6.<jcckit.plot.AxisParameters: int numberOfTics> = $i1;

     label1:
        $r17 = virtualinvoke $r5.<jcckit.util.ConfigParameters: jcckit.util.ConfigParameters getNode(java.lang.String)>("ticAttributes");

        $r18 = staticinvoke <jcckit.util.Factory: java.lang.Object create(jcckit.util.ConfigParameters)>($r17);

        $r19 = (jcckit.graphic.LineAttributes) $r18;

        $r6.<jcckit.plot.AxisParameters: jcckit.graphic.LineAttributes ticAttributes> = $r19;

        $r20 = staticinvoke <jcckit.plot.AxisParameters: jcckit.util.TicLabelFormat createTicLabelFormat(jcckit.util.ConfigParameters)>($r5);

        $r6.<jcckit.plot.AxisParameters: jcckit.util.TicLabelFormat ticLabelFormat> = $r20;

        $r21 = new jcckit.graphic.GraphPoint;

        $r22 = virtualinvoke $r5.<jcckit.util.ConfigParameters: double[] getDoubleArray(java.lang.String)>("ticLabelPosition");

        specialinvoke $r21.<jcckit.graphic.GraphPoint: void <init>(double[])>($r22);

        $r6.<jcckit.plot.AxisParameters: jcckit.graphic.GraphPoint ticLabelPosition> = $r21;

        $r23 = virtualinvoke $r5.<jcckit.util.ConfigParameters: jcckit.util.ConfigParameters getNode(java.lang.String)>("ticLabelAttributes");

        $r24 = staticinvoke <jcckit.util.Factory: java.lang.Object create(jcckit.util.ConfigParameters)>($r23);

        $r25 = (jcckit.graphic.TextAttributes) $r24;

        $r6.<jcckit.plot.AxisParameters: jcckit.graphic.TextAttributes ticLabelAttributes> = $r25;

        $z3 = virtualinvoke $r5.<jcckit.util.ConfigParameters: boolean getBoolean(java.lang.String)>("grid");

        $r6.<jcckit.plot.AxisParameters: boolean grid> = $z3;

        $r26 = virtualinvoke $r5.<jcckit.util.ConfigParameters: jcckit.util.ConfigParameters getNode(java.lang.String)>("gridAttributes");

        $r27 = staticinvoke <jcckit.util.Factory: java.lang.Object create(jcckit.util.ConfigParameters)>($r26);

        $r28 = (jcckit.graphic.LineAttributes) $r27;

        $r6.<jcckit.plot.AxisParameters: jcckit.graphic.LineAttributes gridAttributes> = $r28;

        return $r6;
    }

    private static jcckit.util.TicLabelFormat createTicLabelFormat(jcckit.util.ConfigParameters)
    {
        jcckit.util.ConfigParameters r0, r1;
        java.lang.String $r2;
        java.lang.Object $r3;
        jcckit.util.TicLabelFormat r4;

        r0 := @parameter0: jcckit.util.ConfigParameters;

        r4 = staticinvoke <jcckit.util.Format: jcckit.util.Format create(jcckit.util.ConfigParameters,java.lang.String)>(r0, "ticLabelFormat");

        r1 = virtualinvoke r0.<jcckit.util.ConfigParameters: jcckit.util.ConfigParameters getNode(java.lang.String)>("ticLabelFormat");

        $r2 = virtualinvoke r1.<jcckit.util.ConfigParameters: java.lang.String get(java.lang.String,java.lang.String)>("className", null);

        if $r2 == null goto label1;

        $r3 = staticinvoke <jcckit.util.Factory: java.lang.Object create(jcckit.util.ConfigParameters)>(r1);

        r4 = (jcckit.util.TicLabelFormat) $r3;

     label1:
        return r4;
    }

    static void <clinit>()
    {
        double $d0;

        <jcckit.plot.AxisParameters: java.lang.String GRID_ATTRIBUTES_KEY> = "gridAttributes";

        <jcckit.plot.AxisParameters: java.lang.String GRID_KEY> = "grid";

        <jcckit.plot.AxisParameters: java.lang.String TIC_LABEL_ATTRIBUTES_KEY> = "ticLabelAttributes";

        <jcckit.plot.AxisParameters: java.lang.String TIC_LABEL_POSITION_KEY> = "ticLabelPosition";

        <jcckit.plot.AxisParameters: java.lang.String TIC_LABEL_FORMAT_KEY> = "ticLabelFormat";

        <jcckit.plot.AxisParameters: java.lang.String TIC_ATTRIBUTES_KEY> = "ticAttributes";

        <jcckit.plot.AxisParameters: java.lang.String TIC_LENGTH_KEY> = "ticLength";

        <jcckit.plot.AxisParameters: java.lang.String NUMBER_OF_TICS_KEY> = "numberOfTics";

        <jcckit.plot.AxisParameters: java.lang.String MAXIMUM_TIC_KEY> = "maximumTic";

        <jcckit.plot.AxisParameters: java.lang.String MINIMUM_TIC_KEY> = "minimumTic";

        <jcckit.plot.AxisParameters: java.lang.String AUTOMATIC_TIC_CALCULATION_KEY> = "automaticTicCalculation";

        <jcckit.plot.AxisParameters: java.lang.String AXIS_LABEL_ATTRIBUTES_KEY> = "axisLabelAttributes";

        <jcckit.plot.AxisParameters: java.lang.String AXIS_LABEL_POSITION_KEY> = "axisLabelPosition";

        <jcckit.plot.AxisParameters: java.lang.String AXIS_LABEL_KEY> = "axisLabel";

        <jcckit.plot.AxisParameters: java.lang.String AXIS_ATTRIBUTES_KEY> = "axisAttributes";

        <jcckit.plot.AxisParameters: java.lang.String AXIS_LENGTH_KEY> = "axisLength";

        <jcckit.plot.AxisParameters: java.lang.String MAXIMUM_KEY> = "maximum";

        <jcckit.plot.AxisParameters: java.lang.String MINIMUM_KEY> = "minimum";

        <jcckit.plot.AxisParameters: java.lang.String LOG_SCALE_KEY> = "logScale";

        $d0 = staticinvoke <java.lang.Math: double log(double)>(10.0);

        <jcckit.plot.AxisParameters: double LN10> = $d0;

        return;
    }
}
