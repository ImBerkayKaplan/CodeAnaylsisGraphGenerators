public class smetana.core.debug.SmetanaDebug extends java.lang.Object
{
    public static boolean TRACE;
    public static boolean TRACE_FINAL_CALL;
    public static boolean VERY_VERBOSE;
    private static smetana.core.debug.Purify purify;

    public void <init>()
    {
        smetana.core.debug.SmetanaDebug r0;

        r0 := @this: smetana.core.debug.SmetanaDebug;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static smetana.core.debug.Purify purify()
    {
        smetana.core.debug.Purify $r0, $r1, $r2;

        $r0 = <smetana.core.debug.SmetanaDebug: smetana.core.debug.Purify purify>;

        if $r0 != null goto label1;

        $r2 = new smetana.core.debug.Purify;

        specialinvoke $r2.<smetana.core.debug.Purify: void <init>()>();

        <smetana.core.debug.SmetanaDebug: smetana.core.debug.Purify purify> = $r2;

     label1:
        $r1 = <smetana.core.debug.SmetanaDebug: smetana.core.debug.Purify purify>;

        return $r1;
    }

    public static void LOG(java.lang.String)
    {
        boolean $z0;
        smetana.core.debug.Purify $r0;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $z0 = <smetana.core.debug.SmetanaDebug: boolean TRACE>;

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <smetana.core.debug.SmetanaDebug: smetana.core.debug.Purify purify()>();

        virtualinvoke $r0.<smetana.core.debug.Purify: void logline(java.lang.String)>(r1);

     label1:
        return;
    }

    public static void ENTERING(java.lang.String, java.lang.String)
    {
        boolean $z0;
        smetana.core.debug.Purify $r0;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = <smetana.core.debug.SmetanaDebug: boolean TRACE>;

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <smetana.core.debug.SmetanaDebug: smetana.core.debug.Purify purify()>();

        virtualinvoke $r0.<smetana.core.debug.Purify: void entering(java.lang.String,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    public static void LEAVING(java.lang.String, java.lang.String)
    {
        boolean $z0;
        smetana.core.debug.Purify $r0;
        java.lang.String r1, r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = <smetana.core.debug.SmetanaDebug: boolean TRACE>;

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <smetana.core.debug.SmetanaDebug: smetana.core.debug.Purify purify()>();

        virtualinvoke $r0.<smetana.core.debug.Purify: void leaving(java.lang.String,java.lang.String)>(r1, r2);

     label1:
        return;
    }

    public static void reset()
    {
        boolean $z0;
        smetana.core.debug.Purify $r0;

        $z0 = <smetana.core.debug.SmetanaDebug: boolean TRACE>;

        if $z0 == 0 goto label1;

        $r0 = staticinvoke <smetana.core.debug.SmetanaDebug: smetana.core.debug.Purify purify()>();

        virtualinvoke $r0.<smetana.core.debug.Purify: void reset()>();

     label1:
        return;
    }

    public static void printMe()
    {
        boolean $z0, $z1;
        smetana.core.debug.Purify $r0;

        $z0 = <smetana.core.debug.SmetanaDebug: boolean TRACE>;

        if $z0 == 0 goto label1;

        $z1 = <smetana.core.debug.SmetanaDebug: boolean TRACE_FINAL_CALL>;

        if $z1 == 0 goto label1;

        $r0 = staticinvoke <smetana.core.debug.SmetanaDebug: smetana.core.debug.Purify purify()>();

        virtualinvoke $r0.<smetana.core.debug.Purify: void printMe()>();

     label1:
        return;
    }

    static void <clinit>()
    {
        <smetana.core.debug.SmetanaDebug: boolean TRACE> = 0;

        <smetana.core.debug.SmetanaDebug: boolean TRACE_FINAL_CALL> = 0;

        <smetana.core.debug.SmetanaDebug: boolean VERY_VERBOSE> = 0;

        return;
    }
}
