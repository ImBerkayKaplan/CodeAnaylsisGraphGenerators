public class org.stathissideris.ascii2image.text.StringUtils extends java.lang.Object
{

    public void <init>()
    {
        org.stathissideris.ascii2image.text.StringUtils r0;

        r0 := @this: org.stathissideris.ascii2image.text.StringUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean contains(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1);

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static java.lang.String repeatString(java.lang.String, int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, r4;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 != 0 goto label1;

        return "";

     label1:
        r4 = "";

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = i1 + 1;

        goto label2;

     label3:
        return r4;
    }

    public static boolean isBlank(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean matches(java.lang.String)>("^\\s*$");

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static java.lang.String firstToUpper(java.lang.String)
    {
        java.lang.StringBuilder $r0, $r4, $r6;
        java.lang.String r1, $r2, $r3, $r5, $r7;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, 1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static java.lang.String insertSpaceAtCaps(java.lang.String)
    {
        java.lang.String r0, $r2, $r3, $r4;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, i12, i13, i14, i15, i16, $i17, i18;
        char $c1, $c9, $c11;
        boolean $z0, $z1, $z2;
        java.lang.StringBuffer $r1;
        int[] r5;

        r0 := @parameter0: java.lang.String;

        i12 = 0;

        i13 = 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i13 >= $i0 goto label03;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);

        $z2 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c11);

        if $z2 == 0 goto label02;

        i12 = i12 + 1;

     label02:
        i13 = i13 + 1;

        goto label01;

     label03:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c1);

        if $z0 == 0 goto label04;

        r5 = newarray (int)[i12];

        goto label05;

     label04:
        i14 = i12 + 1;

        r5 = newarray (int)[i14];

     label05:
        r5[0] = 0;

        i15 = 1;

        i16 = 1;

     label06:
        $i17 = virtualinvoke r0.<java.lang.String: int length()>();

        if i16 >= $i17 goto label08;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16);

        $z1 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c9);

        if $z1 == 0 goto label07;

        $i10 = i15;

        i15 = i15 + 1;

        r5[$i10] = i16;

     label07:
        i16 = i16 + 1;

        goto label06;

     label08:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>("");

        i18 = 0;

     label09:
        $i2 = lengthof r5;

        if i18 >= $i2 goto label12;

        $i4 = i18 + 1;

        $i3 = lengthof r5;

        if $i4 >= $i3 goto label10;

        $i8 = r5[i18];

        $i6 = i18 + 1;

        $i7 = r5[$i6];

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i8, $i7);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        goto label11;

     label10:
        $i5 = r5[i18];

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i5);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label11:
        i18 = i18 + 1;

        goto label09;

     label12:
        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static boolean isOneOf(char, char[])
    {
        char[] r0;
        int $i0, i3;
        char c1, $c2;

        c1 := @parameter0: char;

        r0 := @parameter1: char[];

        i3 = 0;

     label1:
        $i0 = lengthof r0;

        if i3 >= $i0 goto label3;

        $c2 = r0[i3];

        if c1 != $c2 goto label2;

        return 1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static boolean isOneOf(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0, i1;
        java.lang.String r1, $r2;
        boolean $z0;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String[];

        i1 = 0;

     label1:
        $i0 = lengthof r0;

        if i1 >= $i0 goto label3;

        $r2 = r0[i1];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static java.lang.String getPath(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, $i1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("\\");

        if $i0 == -1 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("\\");

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        return $r1;

     label1:
        return "";
    }

    public static java.lang.String getBaseFilename(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if $i0 == -1 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("\\");

        if $i1 == -1 goto label1;

        $i2 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>("\\");

        $i3 = $i2 + 1;

        $i4 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        return $r1;

     label1:
        return r0;
    }

    public static java.lang.String getExtension(java.lang.String)
    {
        java.lang.String r0, $r1;
        int $i0, $i1, $i2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        if $i0 == -1 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $i2 = $i1 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r1;

     label1:
        return "";
    }

    public static void main(java.lang.String[])
    {
        java.lang.StringBuilder $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61;
        java.io.PrintStream $r1, $r7, $r13, $r19, $r25, $r30, $r31, $r33, $r35, $r37, $r38, $r40, $r42, $r44, $r46, $r52, $r58;
        java.lang.String $r3, $r5, $r9, $r11, $r15, $r17, $r21, $r23, $r27, $r29, $r32, $r34, $r36, $r39, $r41, $r43, $r48, $r50, $r54, $r56, $r60, $r62;
        java.lang.String[] r63;

        r63 := @parameter0: java.lang.String[];

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("1 ");

        $r3 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String firstToUpper(java.lang.String)>("testing");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("2 ");

        $r9 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String firstToUpper(java.lang.String)>(" testing");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("3 ");

        $r15 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String firstToUpper(java.lang.String)>("_testing");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("4 ");

        $r21 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String firstToUpper(java.lang.String)>("Testing");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

        $r25 = <java.lang.System: java.io.PrintStream out>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("5 ");

        $r27 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String firstToUpper(java.lang.String)>("ttesting");

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r25.<java.io.PrintStream: void println(java.lang.String)>($r29);

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("C:\\Files\\test.txt");

        $r31 = <java.lang.System: java.io.PrintStream out>;

        $r32 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getPath(java.lang.String)>("C:\\Files\\test.txt");

        virtualinvoke $r31.<java.io.PrintStream: void println(java.lang.String)>($r32);

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r34 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getBaseFilename(java.lang.String)>("C:\\Files\\test.txt");

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r34);

        $r35 = <java.lang.System: java.io.PrintStream out>;

        $r36 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getExtension(java.lang.String)>("C:\\Files\\test.txt");

        virtualinvoke $r35.<java.io.PrintStream: void println(java.lang.String)>($r36);

        $r37 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("test.txt");

        $r38 = <java.lang.System: java.io.PrintStream out>;

        $r39 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getPath(java.lang.String)>("test.txt");

        virtualinvoke $r38.<java.io.PrintStream: void println(java.lang.String)>($r39);

        $r40 = <java.lang.System: java.io.PrintStream out>;

        $r41 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getBaseFilename(java.lang.String)>("test.txt");

        virtualinvoke $r40.<java.io.PrintStream: void println(java.lang.String)>($r41);

        $r42 = <java.lang.System: java.io.PrintStream out>;

        $r43 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getExtension(java.lang.String)>("test.txt");

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r43);

        $r44 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r44.<java.io.PrintStream: void println(java.lang.String)>("test");

        $r46 = <java.lang.System: java.io.PrintStream out>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("path: ");

        $r48 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getPath(java.lang.String)>("test");

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r46.<java.io.PrintStream: void println(java.lang.String)>($r50);

        $r52 = <java.lang.System: java.io.PrintStream out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("base: ");

        $r54 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getBaseFilename(java.lang.String)>("test");

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<java.io.PrintStream: void println(java.lang.String)>($r56);

        $r58 = <java.lang.System: java.io.PrintStream out>;

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ext: ");

        $r60 = staticinvoke <org.stathissideris.ascii2image.text.StringUtils: java.lang.String getExtension(java.lang.String)>("test");

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r58.<java.io.PrintStream: void println(java.lang.String)>($r62);

        return;
    }
}
