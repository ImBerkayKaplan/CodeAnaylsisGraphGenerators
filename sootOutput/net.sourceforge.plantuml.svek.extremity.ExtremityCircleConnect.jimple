class net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private final double px;
    private final double py;
    private final java.awt.geom.Point2D dest;
    private final double radius;
    private final double radius2;
    private final double ortho;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor;

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: java.awt.geom.Point2D dest>;

        return $r1;
    }

    public void <init>(java.awt.geom.Point2D, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect r0;
        java.awt.geom.Point2D r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;
        java.awt.geom.Point2D$Double $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect;

        r1 := @parameter0: java.awt.geom.Point2D;

        d6 := @parameter1: double;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: double radius2> = 10.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: double radius> = 6.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: double radius> = 6.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: double radius2> = 10.0;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = $d0 - 6.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: double px> = $d1;

        $d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d3 = $d2 - 6.0;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: double py> = $d3;

        $r2 = new java.awt.geom.Point2D$Double;

        $d4 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, $d5);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: java.awt.geom.Point2D dest> = $r2;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: double ortho> = d6;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = r3;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UStroke $r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1, $r8, $r15, r16, r17;
        net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        net.sourceforge.plantuml.ugraphic.UBackground $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r12;
        java.awt.geom.Point2D $r6, $r7, $r13, $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13;
        net.sourceforge.plantuml.ugraphic.UEllipse $r9, $r10;

        r2 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect;

        r16 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r1 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r3 = r2.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r17 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r6 = r2.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: java.awt.geom.Point2D dest>;

        $d0 = virtualinvoke $r6.<java.awt.geom.Point2D: double getX()>();

        $d1 = $d0 - 6.0;

        $r7 = r2.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: java.awt.geom.Point2D dest>;

        $d2 = virtualinvoke $r7.<java.awt.geom.Point2D: double getY()>();

        $d3 = $d2 - 6.0;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d3);

        $r8 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r9 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(12.0, 12.0);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

        $d4 = r2.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: double ortho>;

        $d5 = neg $d4;

        $d6 = $d5 * 180.0;

        $d7 = $d6 / 3.141592653589793;

        $d8 = $d7 + 90.0;

        d9 = $d8 - 45.0;

        $r10 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double,double,double)>(20.0, 20.0, d9, 90.0);

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r13 = r2.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: java.awt.geom.Point2D dest>;

        $d10 = virtualinvoke $r13.<java.awt.geom.Point2D: double getX()>();

        $d11 = $d10 - 10.0;

        $r14 = r2.<net.sourceforge.plantuml.svek.extremity.ExtremityCircleConnect: java.awt.geom.Point2D dest>;

        $d12 = virtualinvoke $r14.<java.awt.geom.Point2D: double getY()>();

        $d13 = $d12 - 10.0;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d11, $d13);

        $r15 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r15.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        return;
    }
}
