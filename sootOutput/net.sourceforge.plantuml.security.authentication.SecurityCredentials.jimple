public class net.sourceforge.plantuml.security.authentication.SecurityCredentials extends java.lang.Object implements net.sourceforge.plantuml.security.authentication.SecurityCredentialsContainer
{
    private static final java.util.Map EMPTY_MAP;
    public static final net.sourceforge.plantuml.security.authentication.SecurityCredentials NONE;
    private final java.lang.String name;
    private final java.lang.String type;
    private final java.lang.String identifier;
    private final char[] secret;
    private final java.util.Map properties;
    private final java.net.Proxy proxy;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, char[])
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.lang.String r1, r2, r3;
        char[] r4;
        java.util.Map $r5;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: char[];

        $r5 = <net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map EMPTY_MAP>;

        specialinvoke r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: void <init>(java.lang.String,java.lang.String,java.lang.String,char[],java.util.Map,java.net.Proxy)>(r1, r2, r3, r4, $r5, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, char[], java.util.Map, java.net.Proxy)
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.util.HashMap $r1;
        java.lang.String r2, r3, r4;
        char[] r5;
        java.net.Proxy r6;
        java.util.Map r7, $r8;
        java.lang.NullPointerException $r9;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: char[];

        r7 := @parameter4: java.util.Map;

        r6 := @parameter5: java.net.Proxy;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map properties> = $r1;

        if r2 != null goto label1;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("Credential name should not be null");

        throw $r9;

     label1:
        r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String name> = r2;

        r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String type> = r3;

        r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String identifier> = r4;

        r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: char[] secret> = r5;

        r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.net.Proxy proxy> = r6;

        $r8 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map properties>;

        interfaceinvoke $r8.<java.util.Map: void putAll(java.util.Map)>(r7);

        return;
    }

    public static net.sourceforge.plantuml.security.authentication.SecurityCredentials basicAuth(java.lang.String, char[])
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials $r0;
        java.lang.String r1;
        char[] r2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: char[];

        $r0 = new net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        specialinvoke $r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: void <init>(java.lang.String,java.lang.String,java.lang.String,char[])>(r1, "basicauth", r1, r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.security.authentication.SecurityCredentials fromJson(net.sourceforge.plantuml.json.JsonValue)
    {
        net.sourceforge.plantuml.json.JsonValue r0, r1, r2, r3, r4, $r7, $r15, $r25;
        java.util.HashMap $r5;
        net.sourceforge.plantuml.security.authentication.SecurityCredentials $r8, $r13, $r21;
        java.lang.String $r9, $r11, $r12, $r14, $r19, $r20, $r22, $r23;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.net.Proxy $r16, $r26;
        java.lang.UnsupportedOperationException $r17;
        net.sourceforge.plantuml.json.JsonObject r18;
        char[] $r24;

        r0 := @parameter0: net.sourceforge.plantuml.json.JsonValue;

     label1:
        r18 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: net.sourceforge.plantuml.json.JsonObject asObject()>();

        r1 = virtualinvoke r18.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("name");

        r2 = virtualinvoke r18.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("type");

        r3 = virtualinvoke r18.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("identifier");

        r4 = virtualinvoke r18.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("secret");

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        $r7 = virtualinvoke r18.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("properties");

        staticinvoke <net.sourceforge.plantuml.security.authentication.SecurityCredentials: void buildProperties(java.lang.String,net.sourceforge.plantuml.json.JsonValue,java.util.Map)>("", $r7, $r5);

        if r2 == null goto label3;

        $z2 = virtualinvoke r2.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z2 != 0 goto label3;

        $r11 = "tokenauth";

        $r12 = virtualinvoke r2.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z3 == 0 goto label3;

        $r13 = new net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r14 = virtualinvoke r1.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $r15 = virtualinvoke r18.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("proxy");

        $r16 = staticinvoke <net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.net.Proxy proxyFromJson(net.sourceforge.plantuml.json.JsonValue)>($r15);

        specialinvoke $r13.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: void <init>(java.lang.String,java.lang.String,java.lang.String,char[],java.util.Map,java.net.Proxy)>($r14, "tokenauth", null, null, $r5, $r16);

     label2:
        return $r13;

     label3:
        $r19 = virtualinvoke r1.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $z4 = staticinvoke <net.sourceforge.plantuml.StringUtils: boolean isNotEmpty(java.lang.CharSequence)>($r19);

        if $z4 == 0 goto label7;

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.StringUtils: boolean isNotEmpty(java.lang.CharSequence)>($r9);

        if $z0 == 0 goto label7;

        if r2 == null goto label4;

        $z1 = virtualinvoke r2.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z1 != 0 goto label4;

        $r20 = virtualinvoke r2.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        goto label5;

     label4:
        $r20 = "basicauth";

     label5:
        $r21 = new net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r22 = virtualinvoke r1.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $r23 = virtualinvoke r3.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $r24 = staticinvoke <net.sourceforge.plantuml.security.authentication.SecurityCredentials: char[] extractSecret(net.sourceforge.plantuml.json.JsonValue)>(r4);

        $r25 = virtualinvoke r18.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("proxy");

        $r26 = staticinvoke <net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.net.Proxy proxyFromJson(net.sourceforge.plantuml.json.JsonValue)>($r25);

        specialinvoke $r21.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: void <init>(java.lang.String,java.lang.String,java.lang.String,char[],java.util.Map,java.net.Proxy)>($r22, $r20, $r23, $r24, $r5, $r26);

     label6:
        return $r21;

     label7:
        goto label9;

     label8:
        $r17 := @caughtexception;

     label9:
        $r8 = <net.sourceforge.plantuml.security.authentication.SecurityCredentials: net.sourceforge.plantuml.security.authentication.SecurityCredentials NONE>;

        return $r8;

        catch java.lang.UnsupportedOperationException from label1 to label2 with label8;
        catch java.lang.UnsupportedOperationException from label3 to label6 with label8;
    }

    private static java.net.Proxy proxyFromJson(net.sourceforge.plantuml.json.JsonValue)
    {
        net.sourceforge.plantuml.json.JsonValue r0, r2, r3, r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.json.JsonObject r1;
        java.net.InetSocketAddress $r5;
        java.lang.String $r6, $r10, $r11;
        int $i0;
        java.net.Proxy $r8, $r9;
        java.net.Proxy$Type r12, $r13;

        r0 := @parameter0: net.sourceforge.plantuml.json.JsonValue;

        if r0 == null goto label3;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: boolean isObject()>();

        if $z1 == 0 goto label3;

        r12 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: net.sourceforge.plantuml.json.JsonObject asObject()>();

        r2 = virtualinvoke r1.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("type");

        if r2 == null goto label1;

        $z5 = virtualinvoke r2.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z5 != 0 goto label1;

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toUpperCase()>();

        r12 = staticinvoke <java.net.Proxy$Type: java.net.Proxy$Type valueOf(java.lang.String)>($r11);

     label1:
        $r13 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if r12 != $r13 goto label2;

        $r9 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        return $r9;

     label2:
        r3 = virtualinvoke r1.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("address");

        r4 = virtualinvoke r1.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>("port");

        if r3 == null goto label3;

        $z2 = virtualinvoke r3.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z2 != 0 goto label3;

        $z3 = virtualinvoke r4.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z3 != 0 goto label3;

        $z4 = virtualinvoke r4.<net.sourceforge.plantuml.json.JsonValue: boolean isNumber()>();

        if $z4 == 0 goto label3;

        $r5 = new java.net.InetSocketAddress;

        $r6 = virtualinvoke r3.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $i0 = virtualinvoke r4.<net.sourceforge.plantuml.json.JsonValue: int asInt()>();

        specialinvoke $r5.<java.net.InetSocketAddress: void <init>(java.lang.String,int)>($r6, $i0);

        $r8 = new java.net.Proxy;

        specialinvoke $r8.<java.net.Proxy: void <init>(java.net.Proxy$Type,java.net.SocketAddress)>(r12, $r5);

        return $r8;

     label3:
        return null;
    }

    private static char[] extractSecret(net.sourceforge.plantuml.json.JsonValue)
    {
        net.sourceforge.plantuml.json.JsonValue r0;
        boolean $z0, $z1;
        java.lang.String r1;
        char[] $r2;

        r0 := @parameter0: net.sourceforge.plantuml.json.JsonValue;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z0 == 0 goto label2;

     label1:
        return null;

     label2:
        r1 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        $z1 = staticinvoke <net.sourceforge.plantuml.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 == 0 goto label3;

        return null;

     label3:
        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        return $r2;
    }

    private static void buildProperties(java.lang.String, net.sourceforge.plantuml.json.JsonValue, java.util.Map)
    {
        net.sourceforge.plantuml.json.JsonValue r0, r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        net.sourceforge.plantuml.json.JsonObject r1;
        java.util.List $r2;
        java.util.Iterator r3;
        java.lang.Object $r4;
        java.lang.String r5, r7, $r18, $r20;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.util.Map r13;
        double $d0;
        java.lang.Double $r14;
        java.lang.Boolean $r16;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: net.sourceforge.plantuml.json.JsonValue;

        r13 := @parameter2: java.util.Map;

        $z0 = staticinvoke <net.sourceforge.plantuml.security.authentication.SecurityCredentials: boolean isJsonObjectWithMembers(net.sourceforge.plantuml.json.JsonValue)>(r0);

        if $z0 != 0 goto label01;

        return;

     label01:
        r1 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: net.sourceforge.plantuml.json.JsonObject asObject()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.json.JsonObject: java.util.List names()>();

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z9 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label10;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        r6 = virtualinvoke r1.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonValue get(java.lang.String)>(r5);

        $z1 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: boolean isArray()>();

        if $z1 != 0 goto label02;

        $z2 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z2 == 0 goto label03;

        goto label02;

     label03:
        $z3 = staticinvoke <net.sourceforge.plantuml.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r7);

        if $z3 == 0 goto label04;

        $r20 = r5;

        goto label05;

     label04:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $z4 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: boolean isObject()>();

        if $z4 == 0 goto label06;

        staticinvoke <net.sourceforge.plantuml.security.authentication.SecurityCredentials: void buildProperties(java.lang.String,net.sourceforge.plantuml.json.JsonValue,java.util.Map)>($r20, r6, r13);

        goto label09;

     label06:
        $z5 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: boolean isString()>();

        if $z5 == 0 goto label07;

        $r18 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: java.lang.String asString()>();

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r18);

        goto label09;

     label07:
        $z6 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: boolean isBoolean()>();

        if $z6 == 0 goto label08;

        $z8 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: boolean asBoolean()>();

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r16);

        goto label09;

     label08:
        $z7 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: boolean isNumber()>();

        if $z7 == 0 goto label09;

        $d0 = virtualinvoke r6.<net.sourceforge.plantuml.json.JsonValue: double asDouble()>();

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r14);

     label09:
        goto label02;

     label10:
        return;
    }

    private static boolean isJsonObjectWithMembers(net.sourceforge.plantuml.json.JsonValue)
    {
        net.sourceforge.plantuml.json.JsonValue r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.json.JsonObject $r1;

        r0 := @parameter0: net.sourceforge.plantuml.json.JsonValue;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: boolean isNull()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: boolean isObject()>();

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonValue: net.sourceforge.plantuml.json.JsonObject asObject()>();

        $z2 = virtualinvoke $r1.<net.sourceforge.plantuml.json.JsonObject: boolean isEmpty()>();

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public java.lang.String getName()
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getType()
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String type>;

        return $r1;
    }

    public java.lang.String getIdentifier()
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String identifier>;

        return $r1;
    }

    public char[] getSecret()
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        char[] $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: char[] secret>;

        return $r1;
    }

    public java.util.Map getProperties()
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.util.Map $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map properties>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    public java.lang.String getPropertyStr(java.lang.String)
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.util.Map $r1;
        java.lang.String r2, $r4;
        java.lang.Object r3;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map getProperties()>();

        r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        return $r4;

     label1:
        return null;
    }

    public char[] getPropertyChars(java.lang.String)
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.util.Map $r1;
        java.lang.String r2, $r4;
        java.lang.Object r3;
        char[] $r5;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map getProperties()>();

        r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        return $r5;

     label1:
        return null;
    }

    public boolean getPropertyBool(java.lang.String)
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.util.Map $r1;
        java.lang.String r2, $r4;
        java.lang.Object r3;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Boolean $r5;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map getProperties()>();

        r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if r3 == null goto label2;

        $z0 = r3 instanceof java.lang.Boolean;

        if $z0 == 0 goto label1;

        $r5 = (java.lang.Boolean) r3;

        $z3 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z3;

     label1:
        $z1 = r3 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r4 = (java.lang.String) r3;

        $z2 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r4);

        return $z2;

     label2:
        return 0;
    }

    public java.lang.Number getPropertyNum(java.lang.String)
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.util.Map $r1;
        java.lang.String r2, $r4;
        java.lang.Object r3;
        boolean $z0, $z1;
        double $d0;
        java.lang.Double $r5;
        java.lang.Number $r6;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map getProperties()>();

        r3 = interfaceinvoke $r1.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        if r3 == null goto label2;

        $z0 = r3 instanceof java.lang.Number;

        if $z0 == 0 goto label1;

        $r6 = (java.lang.Number) r3;

        return $r6;

     label1:
        $z1 = r3 instanceof java.lang.String;

        if $z1 == 0 goto label2;

        $r4 = (java.lang.String) r3;

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $r5 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r5;

     label2:
        return null;
    }

    public java.net.Proxy getProxy()
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        java.net.Proxy $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.net.Proxy proxy>;

        return $r1;
    }

    public void eraseCredentials()
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0;
        char[] $r1, $r2, $r3;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: char[] secret>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: char[] secret>;

        $i0 = lengthof $r2;

        if $i0 <= 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: char[] secret>;

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r3, 42);

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.lang.String $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (net.sourceforge.plantuml.security.authentication.SecurityCredentials) r1;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String getName()>();

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String getName()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        java.lang.Object[] $r0;
        net.sourceforge.plantuml.security.authentication.SecurityCredentials r1;
        java.lang.String $r2;
        int $i0;

        r1 := @this: net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        $r0 = newarray (java.lang.Object)[1];

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.lang.String getName()>();

        $r0[0] = $r2;

        $i0 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r0);

        return $i0;
    }

    static void <clinit>()
    {
        java.util.Map $r0;
        net.sourceforge.plantuml.security.authentication.SecurityCredentials $r1;

        $r0 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        <net.sourceforge.plantuml.security.authentication.SecurityCredentials: java.util.Map EMPTY_MAP> = $r0;

        $r1 = new net.sourceforge.plantuml.security.authentication.SecurityCredentials;

        specialinvoke $r1.<net.sourceforge.plantuml.security.authentication.SecurityCredentials: void <init>(java.lang.String,java.lang.String,java.lang.String,char[])>("<NONE>", "public", null, null);

        <net.sourceforge.plantuml.security.authentication.SecurityCredentials: net.sourceforge.plantuml.security.authentication.SecurityCredentials NONE> = $r1;

        return;
    }
}
