public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds extends net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude
{
    private static final double SUPP15;
    protected final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1;
    protected final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2;
    protected final java.util.List branches;
    protected final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode mode;
    private final double w13;
    private final double w9;

    public void <init>(java.util.List, java.util.List, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        java.util.List r1, r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r4, r5, $r9, $r12;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r7, $r10, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.lang.Object $r8, $r11;
        int $i0, $i1;
        byte $b2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode $r14, $r15;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r1 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r2 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r4 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r6 := @parameter5: net.sourceforge.plantuml.graphic.StringBounder;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude: void <init>(java.util.List,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List branches> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2> = r5;

        $r7 = interfaceinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d0 = virtualinvoke $r7.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r8;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d1 = virtualinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getRight()>();

        $d2 = $d0 - $d1;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r12 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r11;

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        $d3 = virtualinvoke $r13.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d4 = $d2 - $d3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double w13> = $d4;

        $d5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double getW9(net.sourceforge.plantuml.graphic.StringBounder)>(r6);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double w9> = $d5;

        $d7 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double w13>;

        $d6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double w9>;

        $b2 = $d7 cmpl $d6;

        if $b2 <= 0 goto label1;

        $r15 = <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode BIG_DIAMOND>;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode mode> = $r15;

        goto label2;

     label1:
        $r14 = <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode SMALL_DIAMOND>;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode mode> = $r14;

     label2:
        return;
    }

    private double getW9(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        java.util.List $r1, $r2;
        int $i0, $i1, i2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        i2 = 1;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        if i2 >= $i1 goto label2;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r5 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r3;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d1 = d1 + $d0;

        i2 = i2 + 1;

        goto label1;

     label2:
        return d1;
    }

    public final java.util.Collection getMyChildren()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r1;
        java.util.Collection $r2, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4, $r5;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        $r0 = new java.util.ArrayList;

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude: java.util.Collection getMyChildren()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r4);

        $r5 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        interfaceinvoke $r0.<java.util.Collection: boolean add(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>($r0);

        return $r6;
    }

    protected double getYdelta1a(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 20.0;
    }

    protected final double getYdelta1b(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 10.0;
    }

    protected final net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternalSlow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r4, $r14, $r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, r5, $r6, $r9, r10, $r11, r15, $r20, $r21, r22;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, $d19, $d20, $d21, d22;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode $r7, $r8;
        java.util.List $r12, $r16, $r17;
        java.lang.Object $r13, $r18;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternalSlow(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode mode>;

        $r7 = <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode BIG_DIAMOND>;

        if $r8 != $r7 goto label1;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d5 = $d4 + d0;

        $d6 = virtualinvoke r5.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d7 = $d5 + $d6;

        $d8 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double getYdelta1a(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d9 = $d7 + $d8;

        $d10 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double getYdelta1b(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d22 = $d9 + $d10;

        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $r13 = interfaceinvoke $r12.<java.util.List: java.lang.Object get(int)>(0);

        $r14 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r13;

        r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d11 = virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d13 = $d11 + 15.0;

        $d12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double w13>;

        $d14 = $d13 + $d12;

        $d15 = $d14 + 15.0;

        $r17 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $r16 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $i0 = interfaceinvoke $r16.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>($i1);

        $r19 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r18;

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d16 = virtualinvoke $r20.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        d17 = $d15 + $d16;

        $r21 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d18 = virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d19 = $d18 + 15.0;

        $d20 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d21 = $d19 + $d20;

        specialinvoke $r21.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double,double)>(d17, d22, $d21, 0.0, d22);

        return $r21;

     label1:
        r22 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternalSlow(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry appendBottom(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry)>(r22);

        r10 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry appendBottom(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry)>(r5);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double getYdelta1a(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double getYdelta1b(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d3 = $d1 + $d2;

        $r11 = virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry addDim(double,double)>(0.0, $d3);

        return $r11;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r4, $r9, $r12, $r19;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r8, $r11, $r18;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r5, $r13, r17;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode $r6, $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r10;
        boolean $z0, $z1;
        java.util.List $r14;
        java.util.Iterator r15;
        java.lang.Object $r16;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode mode>;

        $r6 = <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode BIG_DIAMOND>;

        if $r7 != $r6 goto label3;

        $r14 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r16 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r17 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r16;

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOf(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r17, r1);

        $r19 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        interfaceinvoke r17.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r19);

        goto label1;

     label2:
        goto label4;

     label3:
        $r8 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateMain(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r9 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchNude: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

     label4:
        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $z0 = virtualinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 == 0 goto label5;

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r12 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        $r13 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        interfaceinvoke $r12.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r13);

     label5:
        return;
    }

    protected final net.sourceforge.plantuml.ugraphic.UTranslate getTranslateOf(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate r2, $r6, $r7, $r18, $r19, $r26, $r27;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode $r3, $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r5, $r16, $r24;
        double $d0, $d1, $d2, $d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, d12;
        java.util.List $r8, $r9, $r10, $r11, $r14, $r20, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Object $r12, $r15, $r21, $r23;
        java.lang.IllegalArgumentException $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r17, $r25;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r5 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateMain(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode mode>;

        $r3 = <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds$Mode BIG_DIAMOND>;

        if $r4 != $r3 goto label5;

        d11 = 0.0;

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double w13>;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double w9>;

        $d2 = $d1 - $d0;

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $d3 = (double) $i1;

        d4 = $d2 / $d3;

        i6 = 0;

     label1:
        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        if i6 >= $i3 goto label3;

        $r20 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.lang.Object get(int)>(i6);

        if r5 != $r21 goto label2;

        $r26 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d11);

        $r27 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r26);

        return $r27;

     label2:
        $r22 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $r23 = interfaceinvoke $r22.<java.util.List: java.lang.Object get(int)>(i6);

        $r24 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r23;

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d9 = virtualinvoke $r25.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d10 = $d9 + d4;

        d11 = d11 + $d10;

        i6 = i6 + 1;

        goto label1;

     label3:
        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $i4 = interfaceinvoke $r10.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>($i5);

        if r5 != $r12 goto label4;

        $r14 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: java.util.List tiles>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(0);

        $r16 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r15;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d5 = virtualinvoke $r17.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double w13>;

        $d7 = $d5 + $d6;

        $d8 = $d7 + 15.0;

        d12 = $d8 + 15.0;

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d12);

        $r19 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r18);

        return $r19;

     label4:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r13;

     label5:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateNude(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>(r5, r1);

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>(r2);

        return $r7;
    }

    protected final net.sourceforge.plantuml.ugraphic.UTranslate getTranslateMain(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        double $d0, $d1, d2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double getYdelta1a(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d2 = $d0 + $d1;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d2);

        return $r4;
    }

    protected final net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        double $d1, $d2, d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d2 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        d3 = $d1 - $d2;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, 0.0);

        return $r5;
    }

    protected final net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        double $d0, $d1, d2, $d3, $d4, $d5, d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionInternal(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond2>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        d2 = $d0 - $d1;

        $d3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d4 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d5 = $d4 / 2.0;

        d6 = $d3 - $d5;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d6, d2);

        return $r5;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileSwitchWithDiamonds: double SUPP15> = 15.0;

        return;
    }
}
