class net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point: net.sourceforge.plantuml.ugraphic.color.HColor color> = r1;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point r1;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = specialinvoke r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point: double getDiameter()>();

        $d1 = specialinvoke r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point: double getDiameter()>();

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d0, $d1);

        return $r0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UEllipse $r0;
        net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point r1;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic $r4, r7, r8;
        net.sourceforge.plantuml.ugraphic.UBackground $r6;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        $d0 = specialinvoke r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point: double getDiameter()>();

        $d1 = specialinvoke r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point: double getDiameter()>();

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>($d0, $d1);

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $r4 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = r1.<net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r8 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        return;
    }

    private double getDiameter()
    {
        net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point r0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.TextBlockMap$Point;

        return 7.0;
    }
}
