public class net.sourceforge.plantuml.style.ValueImpl extends java.lang.Object implements net.sourceforge.plantuml.style.Value
{
    private final net.sourceforge.plantuml.style.DarkString value;

    public static net.sourceforge.plantuml.style.ValueImpl dark(java.lang.String, net.sourceforge.plantuml.style.AutomaticCounter)
    {
        net.sourceforge.plantuml.style.ValueImpl $r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        java.lang.String r2, $r5;
        java.lang.Object $r3;
        net.sourceforge.plantuml.style.AutomaticCounter r4;
        int $i0;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: net.sourceforge.plantuml.style.AutomaticCounter;

        $r0 = new net.sourceforge.plantuml.style.ValueImpl;

        $r1 = new net.sourceforge.plantuml.style.DarkString;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r5 = (java.lang.String) $r3;

        $i0 = interfaceinvoke r4.<net.sourceforge.plantuml.style.AutomaticCounter: int getNextInt()>();

        specialinvoke $r1.<net.sourceforge.plantuml.style.DarkString: void <init>(java.lang.String,java.lang.String,int)>(null, $r5, $i0);

        specialinvoke $r0.<net.sourceforge.plantuml.style.ValueImpl: void <init>(net.sourceforge.plantuml.style.DarkString)>($r1);

        return $r0;
    }

    public static net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String, net.sourceforge.plantuml.style.AutomaticCounter)
    {
        net.sourceforge.plantuml.style.ValueImpl $r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        java.lang.String r2, $r5;
        java.lang.Object $r3;
        net.sourceforge.plantuml.style.AutomaticCounter r4;
        int $i0;

        r2 := @parameter0: java.lang.String;

        r4 := @parameter1: net.sourceforge.plantuml.style.AutomaticCounter;

        $r0 = new net.sourceforge.plantuml.style.ValueImpl;

        $r1 = new net.sourceforge.plantuml.style.DarkString;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r5 = (java.lang.String) $r3;

        $i0 = interfaceinvoke r4.<net.sourceforge.plantuml.style.AutomaticCounter: int getNextInt()>();

        specialinvoke $r1.<net.sourceforge.plantuml.style.DarkString: void <init>(java.lang.String,java.lang.String,int)>($r5, null, $i0);

        specialinvoke $r0.<net.sourceforge.plantuml.style.ValueImpl: void <init>(net.sourceforge.plantuml.style.DarkString)>($r1);

        return $r0;
    }

    public static net.sourceforge.plantuml.style.ValueImpl regular(java.lang.String, int)
    {
        net.sourceforge.plantuml.style.ValueImpl $r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        java.lang.String r2, $r4;
        java.lang.Object $r3;
        int i0;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new net.sourceforge.plantuml.style.ValueImpl;

        $r1 = new net.sourceforge.plantuml.style.DarkString;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (java.lang.String) $r3;

        specialinvoke $r1.<net.sourceforge.plantuml.style.DarkString: void <init>(java.lang.String,java.lang.String,int)>($r4, null, i0);

        specialinvoke $r0.<net.sourceforge.plantuml.style.ValueImpl: void <init>(net.sourceforge.plantuml.style.DarkString)>($r1);

        return $r0;
    }

    public net.sourceforge.plantuml.style.Value mergeWith(net.sourceforge.plantuml.style.Value)
    {
        net.sourceforge.plantuml.style.Value r0;
        boolean $z0, $z1;
        java.lang.UnsupportedOperationException $r1;
        int $i0, $i1;
        net.sourceforge.plantuml.style.ValueImpl r2, $r3, $r4;
        net.sourceforge.plantuml.style.DarkString $r5, $r6, $r7;

        r2 := @this: net.sourceforge.plantuml.style.ValueImpl;

        r0 := @parameter0: net.sourceforge.plantuml.style.Value;

        if r0 != null goto label1;

        return r2;

     label1:
        $z0 = r0 instanceof net.sourceforge.plantuml.style.ValueImpl;

        if $z0 == 0 goto label2;

        $r3 = new net.sourceforge.plantuml.style.ValueImpl;

        $r6 = r2.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r4 = (net.sourceforge.plantuml.style.ValueImpl) r0;

        $r5 = $r4.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.style.DarkString: net.sourceforge.plantuml.style.DarkString mergeWith(net.sourceforge.plantuml.style.DarkString)>($r5);

        specialinvoke $r3.<net.sourceforge.plantuml.style.ValueImpl: void <init>(net.sourceforge.plantuml.style.DarkString)>($r7);

        return $r3;

     label2:
        $z1 = r0 instanceof net.sourceforge.plantuml.style.ValueColor;

        if $z1 == 0 goto label4;

        $i0 = interfaceinvoke r0.<net.sourceforge.plantuml.style.Value: int getPriority()>();

        $i1 = virtualinvoke r2.<net.sourceforge.plantuml.style.ValueImpl: int getPriority()>();

        if $i0 <= $i1 goto label3;

        return r0;

     label3:
        return r2;

     label4:
        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r1;
    }

    private void <init>(net.sourceforge.plantuml.style.DarkString)
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString r1;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        r1 := @parameter0: net.sourceforge.plantuml.style.DarkString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value> = r1;

        return;
    }

    public net.sourceforge.plantuml.style.Value addPriority(int)
    {
        net.sourceforge.plantuml.style.ValueImpl $r0, r1;
        int i0;
        net.sourceforge.plantuml.style.DarkString $r2, $r3;

        r1 := @this: net.sourceforge.plantuml.style.ValueImpl;

        i0 := @parameter0: int;

        $r0 = new net.sourceforge.plantuml.style.ValueImpl;

        $r2 = r1.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.style.DarkString: net.sourceforge.plantuml.style.DarkString addPriority(int)>(i0);

        specialinvoke $r0.<net.sourceforge.plantuml.style.ValueImpl: void <init>(net.sourceforge.plantuml.style.DarkString)>($r3);

        return $r0;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        $r1 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.style.DarkString: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String asString()
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        $r1 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue1()>();

        return $r2;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.ugraphic.color.HColorSet)
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString $r1, $r8, $r10, $r16;
        java.lang.String r2, $r3, $r4, $r9, $r11, $r17;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r5;
        net.sourceforge.plantuml.api.ThemeStyle r6;
        net.sourceforge.plantuml.ugraphic.color.HColor r7, r12, $r14, $r18;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r13;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        r6 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r5 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        $r1 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue1()>();

        $r3 = "none";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = "transparent";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label2;

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColor transparent()>();

        return $r18;

     label2:
        if r2 != null goto label3;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.style.DarkString: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r15;

     label3:
        r7 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>(r6, r2);

        $r8 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue2()>();

        if $r9 == null goto label4;

        $r10 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue2()>();

        r12 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>(r6, $r11);

        $r13 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) r7;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>(r12);

        return $r14;

     label4:
        return r7;
    }

    public boolean asBoolean()
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        java.lang.String $r2, $r3;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        $r2 = "true";

        $r1 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue1()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        return $z0;
    }

    public int asInt()
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        java.lang.String $r2;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        $r1 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue1()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        return $i0;
    }

    public double asDouble()
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        java.lang.String $r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        $r1 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue1()>();

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        return $d0;
    }

    public int asFontStyle()
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString $r1, $r3;
        java.lang.String $r2, $r4;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        $r1 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue1()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("bold");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.style.DarkString: java.lang.String getValue1()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("italic");

        if $z1 == 0 goto label2;

        return 2;

     label2:
        return 0;
    }

    public net.sourceforge.plantuml.graphic.HorizontalAlignment asHorizontalAlignment()
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r2;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.style.ValueImpl: java.lang.String asString()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment fromString(java.lang.String)>($r1);

        return $r2;
    }

    public int getPriority()
    {
        net.sourceforge.plantuml.style.ValueImpl r0;
        net.sourceforge.plantuml.style.DarkString $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.style.ValueImpl;

        $r1 = r0.<net.sourceforge.plantuml.style.ValueImpl: net.sourceforge.plantuml.style.DarkString value>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.style.DarkString: int getPriority()>();

        return $i0;
    }
}
