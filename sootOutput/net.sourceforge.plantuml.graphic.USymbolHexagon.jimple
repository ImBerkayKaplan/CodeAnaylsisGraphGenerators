public class net.sourceforge.plantuml.graphic.USymbolHexagon extends net.sourceforge.plantuml.graphic.USymbol
{
    private final double marginY;

    public void <init>()
    {
        net.sourceforge.plantuml.graphic.USymbolHexagon r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolHexagon;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.USymbolHexagon: double marginY> = 5.0;

        r0.<net.sourceforge.plantuml.graphic.USymbolHexagon: double marginY> = 5.0;

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolHexagon r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolHexagon;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter HEXAGON>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolHexagon r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolHexagon;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName hexagon>;

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolHexagon$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolHexagon r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, r3, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4;
        net.sourceforge.plantuml.graphic.SymbolContext r6;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolHexagon;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r4 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolHexagon$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolHexagon$1: void <init>(net.sourceforge.plantuml.graphic.USymbolHexagon,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r1, r2, r3, r4);

        return $r0;
    }

    private void drawRect(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPath $r0;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, d8, d9, d10;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.graphic.USymbolHexagon r3;

        r3 := @this: net.sourceforge.plantuml.graphic.USymbolHexagon;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        d8 := @parameter3: double;

        d9 := @parameter4: double;

        d10 := @parameter5: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        d1 = d0 / 8.0;

        $d3 = d2 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, $d3);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d1, 0.0);

        $d4 = d0 - d1;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d4, 0.0);

        $d5 = d2 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d0, $d5);

        $d6 = d0 - d1;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d6, d2);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d1, d2);

        $d7 = d2 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d7);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void setDeltaShadow(double)>(d8);

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        return;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolHexagon r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolHexagon;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(10.0, 10.0, 10.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolHexagon$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolHexagon r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4, r6;
        double d0, d1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolHexagon;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r4 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolHexagon$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolHexagon$2: void <init>(net.sourceforge.plantuml.graphic.USymbolHexagon,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,double,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,double)>(r1, r2, r3, r4, d0, r5, r6, d1);

        return $r0;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolHexagon, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolHexagon r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2, d3, d4;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolHexagon;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        d4 := @parameter6: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolHexagon: void drawRect(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,double,double)>(r1, d0, d1, d2, d3, d4);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolHexagon)
    {
        net.sourceforge.plantuml.graphic.USymbolHexagon r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolHexagon;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolHexagon: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }
}
