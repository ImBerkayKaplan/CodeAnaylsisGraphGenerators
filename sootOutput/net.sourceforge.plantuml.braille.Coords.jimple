public class net.sourceforge.plantuml.braille.Coords extends java.lang.Object
{
    private final int x;
    private final int y;

    public void <init>(int, int)
    {
        net.sourceforge.plantuml.braille.Coords r0;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.braille.Coords;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.braille.Coords: int x> = i0;

        r0.<net.sourceforge.plantuml.braille.Coords: int y> = i1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.braille.Coords r1, r2;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.braille.Coords;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.braille.Coords) r0;

        $i1 = r2.<net.sourceforge.plantuml.braille.Coords: int x>;

        $i0 = r1.<net.sourceforge.plantuml.braille.Coords: int x>;

        if $i1 != $i0 goto label1;

        $i3 = r2.<net.sourceforge.plantuml.braille.Coords: int y>;

        $i2 = r1.<net.sourceforge.plantuml.braille.Coords: int y>;

        if $i3 != $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.braille.Coords r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: net.sourceforge.plantuml.braille.Coords;

        $i2 = r0.<net.sourceforge.plantuml.braille.Coords: int x>;

        $i0 = r0.<net.sourceforge.plantuml.braille.Coords: int y>;

        $i1 = $i0 * 8192;

        $i3 = $i2 + $i1;

        return $i3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6;
        net.sourceforge.plantuml.braille.Coords r2;
        int $i0, $i1;
        java.lang.String $r7;

        r2 := @this: net.sourceforge.plantuml.braille.Coords;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( ");

        $i0 = r2.<net.sourceforge.plantuml.braille.Coords: int x>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ; ");

        $i1 = r2.<net.sourceforge.plantuml.braille.Coords: int y>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public int getX()
    {
        net.sourceforge.plantuml.braille.Coords r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.braille.Coords;

        $i0 = r0.<net.sourceforge.plantuml.braille.Coords: int x>;

        return $i0;
    }

    public int getY()
    {
        net.sourceforge.plantuml.braille.Coords r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.braille.Coords;

        $i0 = r0.<net.sourceforge.plantuml.braille.Coords: int y>;

        return $i0;
    }
}
