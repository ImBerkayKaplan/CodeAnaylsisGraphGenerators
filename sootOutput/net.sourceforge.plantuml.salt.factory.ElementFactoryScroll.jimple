public class net.sourceforge.plantuml.salt.factory.ElementFactoryScroll extends net.sourceforge.plantuml.salt.factory.AbstractElementFactoryComplex
{
    static final boolean $assertionsDisabled;

    public void <init>(net.sourceforge.plantuml.salt.DataSource, net.sourceforge.plantuml.salt.Dictionary)
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryScroll r0;
        net.sourceforge.plantuml.salt.DataSource r1;
        net.sourceforge.plantuml.salt.Dictionary r2;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryScroll;

        r1 := @parameter0: net.sourceforge.plantuml.salt.DataSource;

        r2 := @parameter1: net.sourceforge.plantuml.salt.Dictionary;

        specialinvoke r0.<net.sourceforge.plantuml.salt.factory.AbstractElementFactoryComplex: void <init>(net.sourceforge.plantuml.salt.DataSource,net.sourceforge.plantuml.salt.Dictionary)>(r1, r2);

        return;
    }

    public net.sourceforge.plantuml.salt.Terminated create()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryScroll r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.salt.DataSource $r1, $r8, $r17;
        java.lang.Object $r2, $r4, $r9, $r19;
        net.sourceforge.plantuml.salt.Terminated r3, $r10, $r18, r21, r22;
        java.lang.String r5, $r20;
        net.sourceforge.plantuml.salt.Positionner2 $r6;
        net.sourceforge.plantuml.salt.element.ElementPyramidScrolled $r11;
        net.sourceforge.plantuml.salt.Dictionary $r12;
        net.sourceforge.plantuml.salt.factory.ScrollStrategy $r13;
        net.sourceforge.plantuml.salt.Terminator $r14;
        java.lang.AssertionError $r15;
        java.lang.IllegalStateException $r16;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryScroll;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: boolean ready()>();

        if $z0 != 0 goto label1;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>()>();

        throw $r16;

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.salt.Terminated) $r2;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r5 = (java.lang.String) $r4;

        $z1 = <net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("{");

        if $z2 != 0 goto label2;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label2:
        $r6 = new net.sourceforge.plantuml.salt.Positionner2;

        specialinvoke $r6.<net.sourceforge.plantuml.salt.Positionner2: void <init>()>();

     label3:
        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r19 = virtualinvoke $r18.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        $r20 = (java.lang.String) $r19;

        $z3 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("}");

        if $z3 != 0 goto label4;

        r21 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: net.sourceforge.plantuml.salt.Terminated getNextElement()>();

        virtualinvoke $r6.<net.sourceforge.plantuml.salt.Positionner2: void add(net.sourceforge.plantuml.salt.Terminated)>(r21);

        goto label3;

     label4:
        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r22 = (net.sourceforge.plantuml.salt.Terminated) $r9;

        $r10 = new net.sourceforge.plantuml.salt.Terminated;

        $r11 = new net.sourceforge.plantuml.salt.element.ElementPyramidScrolled;

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: net.sourceforge.plantuml.salt.Dictionary getDictionary()>();

        $r13 = staticinvoke <net.sourceforge.plantuml.salt.factory.ScrollStrategy: net.sourceforge.plantuml.salt.factory.ScrollStrategy fromDesc(java.lang.String)>(r5);

        specialinvoke $r11.<net.sourceforge.plantuml.salt.element.ElementPyramidScrolled: void <init>(net.sourceforge.plantuml.salt.Positionner2,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.salt.factory.ScrollStrategy)>($r6, $r12, $r13);

        $r14 = virtualinvoke r22.<net.sourceforge.plantuml.salt.Terminated: net.sourceforge.plantuml.salt.Terminator getTerminator()>();

        specialinvoke $r10.<net.sourceforge.plantuml.salt.Terminated: void <init>(java.lang.Object,net.sourceforge.plantuml.salt.Terminator)>($r11, $r14);

        return $r10;
    }

    public boolean ready()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryScroll r0;
        net.sourceforge.plantuml.salt.DataSource $r1;
        net.sourceforge.plantuml.salt.Terminated $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0, $z1, $z2;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryScroll;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: net.sourceforge.plantuml.salt.DataSource getDataSource()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("{S");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("{S-");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("{SI");

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/salt/factory/ElementFactoryScroll;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.salt.factory.ElementFactoryScroll: boolean $assertionsDisabled> = $z1;

        return;
    }
}
