public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge extends net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder
{

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder, java.util.List)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        java.util.List r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder,java.util.List)>(r1, r2, r3);

        return;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.Ftile doStep1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, $r12, r22, r39;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge r3;
        net.sourceforge.plantuml.skin.rose.Rose $r4;
        net.sourceforge.plantuml.ISkinParam $r5, $r9, $r25, $r29, $r31, $r33;
        net.sourceforge.plantuml.ColorParam $r6;
        net.sourceforge.plantuml.ugraphic.color.HColor r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock $r8, $r17;
        java.util.List $r10, $r15;
        java.lang.Object $r11, $r21;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r13;
        java.util.Iterator r16;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.StringBounder $r18, $r23;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r19, r24;
        double $d0, $d1, d2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple $r20;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r26;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionIn $r27;
        net.sourceforge.plantuml.style.StyleSignature $r28;
        net.sourceforge.plantuml.style.StyleBuilder $r30;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r32;
        net.sourceforge.plantuml.api.ThemeStyle $r34;
        net.sourceforge.plantuml.style.Style r36;
        net.sourceforge.plantuml.graphic.Rainbow r37, r38;

        r3 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.skin.rose.Rose getRose()>();

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityBar>;

        r7 = virtualinvoke $r4.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r5, $r6);

        $r8 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: java.util.List list99>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(0);

        $r12 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r11;

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        specialinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r9, r7, $r13);

        d2 = 0.0;

        $r15 = r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: java.util.List list99>;

        r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r21 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r22 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r21;

        $r23 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r24 = interfaceinvoke r22.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r23);

        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label2;

        $r28 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r29 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r30 = interfaceinvoke $r29.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r36 = virtualinvoke $r28.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r30);

        $r31 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r32 = interfaceinvoke $r31.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r33 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r34 = interfaceinvoke $r33.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r37 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.api.ThemeStyle)>(r36, $r32, $r34);

        goto label3;

     label2:
        $r25 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r37 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.ISkinParam)>($r25);

     label3:
        $r26 = interfaceinvoke r22.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        r38 = virtualinvoke $r26.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r37);

        $r27 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionIn;

        specialinvoke $r27.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionIn: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double,net.sourceforge.plantuml.graphic.Rainbow)>(r3, $r8, r22, d2, r38);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r27);

        $d1 = virtualinvoke r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = d2 + $d1;

        goto label1;

     label4:
        r39 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>(r0, $r1);

        $r17 = (net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock) $r8;

        $r18 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r19 = interfaceinvoke r39.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r18);

        $d0 = virtualinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        virtualinvoke $r17.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: void setBlackBlockDimension(double,double)>($d0, 6.0);

        $r20 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        specialinvoke $r20.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r8, r39);

        return $r20;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.Ftile doStep2(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r6, $r9, $r12, $r29, $r35, $r37, $r41, $r43, $r47, $r49;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style r4;
        boolean $z0, $z1, $z2, $z4;
        net.sourceforge.plantuml.skin.rose.Rose $r5, $r8;
        net.sourceforge.plantuml.ColorParam $r7, $r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond $r11;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r13;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple $r15;
        java.util.ArrayList $r16;
        net.sourceforge.plantuml.graphic.StringBounder $r18, $r25, $r32;
        net.sourceforge.plantuml.ugraphic.UTranslate r19, $r27;
        java.util.List $r20;
        java.util.Iterator r21;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r22, r24, r51, r52;
        java.lang.Object $r23;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r26, $r33;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r30;
        net.sourceforge.plantuml.graphic.Rainbow r31, r56;
        double $d0, d1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical $r34;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r36, $r44, $r50;
        net.sourceforge.plantuml.api.ThemeStyle $r38, $r42, $r48;
        net.sourceforge.plantuml.style.PName $r39, $r45;
        net.sourceforge.plantuml.style.Value $r40, $r46;
        net.sourceforge.plantuml.ugraphic.color.HColor r53, r54;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge;

        r51 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r52 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r39 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r40 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r39);

        $r41 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r42 = interfaceinvoke $r41.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r43 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r44 = interfaceinvoke $r43.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r53 = interfaceinvoke $r40.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r42, $r44);

        $r45 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r46 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r45);

        $r47 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r48 = interfaceinvoke $r47.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r49 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r50 = interfaceinvoke $r49.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r54 = interfaceinvoke $r46.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r48, $r50);

        goto label2;

     label1:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.skin.rose.Rose getRose()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityDiamondBorder>;

        r53 = virtualinvoke $r5.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r6, $r7);

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.skin.rose.Rose getRose()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityDiamondBackground>;

        r54 = virtualinvoke $r8.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r9, $r10);

     label2:
        $r11 = new net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond;

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneOutForStep2()>();

        specialinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDiamond: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r12, r54, r53, $r13);

        $r15 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple;

        specialinvoke $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileAssemblySimple: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r52, $r11);

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>()>();

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r19 = interfaceinvoke $r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateFor(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r11, $r18);

        d1 = 0.0;

        $r20 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: java.util.List list99>;

        r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $r23 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r24 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r23;

        $r25 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r26 = interfaceinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r25);

        $r27 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r27.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d1, 6.0);

        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label4;

        $r35 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r36 = interfaceinvoke $r35.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r37 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r38 = interfaceinvoke $r37.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r56 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.api.ThemeStyle)>(r4, $r36, $r38);

        goto label5;

     label4:
        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.ISkinParam skinParam()>();

        r56 = staticinvoke <net.sourceforge.plantuml.graphic.Rainbow: net.sourceforge.plantuml.graphic.Rainbow build(net.sourceforge.plantuml.ISkinParam)>($r29);

     label5:
        $r30 = interfaceinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        r31 = virtualinvoke $r30.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.graphic.Rainbow getRainbow(net.sourceforge.plantuml.graphic.Rainbow)>(r56);

        $r32 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r33 = interfaceinvoke r24.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r32);

        $z2 = virtualinvoke $r33.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z2 == 0 goto label6;

        $r34 = new net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical;

        specialinvoke $r34.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge$ConnectionHorizontalThenVertical: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.ParallelBuilderMerge,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UTranslate,net.sourceforge.plantuml.ugraphic.UTranslate)>(r0, r24, $r11, r31, $r27, r19);

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r34);

     label6:
        $d0 = virtualinvoke r26.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = d1 + $d0;

        goto label3;

     label7:
        $r22 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addConnection(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,java.util.Collection)>($r15, $r16);

        return $r22;
    }
}
