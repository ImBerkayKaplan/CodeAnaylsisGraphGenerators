public final enum class net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement extends java.lang.Enum implements net.sourceforge.plantuml.elk.proxy.ElkObjectProxy
{
    public static final enum net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement INSIDE;
    public static final enum net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement V_CENTER;
    public static final enum net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement H_CENTER;
    private static final net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] $VALUES;

    public static net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] values()
    {
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/elk/proxy/core/options/NodeLabelPlacement;", r0);

        $r2 = (net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public java.lang.Enum getTrueObject()
    {
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement r0;
        java.lang.String $r1;
        java.lang.Enum $r2;

        r0 := @this: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: java.lang.String name()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.elk.proxy.Reflect: java.lang.Enum getEnum(java.lang.String,java.lang.String)>("org.eclipse.elk.core.options.NodeLabelPlacement", $r1);

        return $r2;
    }

    public volatile java.lang.Object getTrueObject()
    {
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement r0;
        java.lang.Enum $r1;

        r0 := @this: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: java.lang.Enum getTrueObject()>();

        return $r1;
    }

    private static net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] $values()
    {
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] $r0;
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement $r1, $r2, $r3;

        $r0 = newarray (net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement)[3];

        $r1 = <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement INSIDE>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement V_CENTER>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement H_CENTER>;

        $r0[2] = $r3;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement $r0, $r1, $r2;
        net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] $r3;

        $r0 = new net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement;

        specialinvoke $r0.<net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: void <init>(java.lang.String,int)>("INSIDE", 0);

        <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement INSIDE> = $r0;

        $r1 = new net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement;

        specialinvoke $r1.<net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: void <init>(java.lang.String,int)>("V_CENTER", 1);

        <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement V_CENTER> = $r1;

        $r2 = new net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement;

        specialinvoke $r2.<net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: void <init>(java.lang.String,int)>("H_CENTER", 2);

        <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement H_CENTER> = $r2;

        $r3 = staticinvoke <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] $values()>();

        <net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement: net.sourceforge.plantuml.elk.proxy.core.options.NodeLabelPlacement[] $VALUES> = $r3;

        return;
    }
}
