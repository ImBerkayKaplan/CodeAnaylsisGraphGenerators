class net.sourceforge.plantuml.stats.HistoricalData$1 extends java.lang.Object implements java.util.Comparator
{
    final net.sourceforge.plantuml.stats.HistoricalData this$0;

    void <init>(net.sourceforge.plantuml.stats.HistoricalData)
    {
        net.sourceforge.plantuml.stats.HistoricalData$1 r0;
        net.sourceforge.plantuml.stats.HistoricalData r1;

        r0 := @this: net.sourceforge.plantuml.stats.HistoricalData$1;

        r1 := @parameter0: net.sourceforge.plantuml.stats.HistoricalData;

        r0.<net.sourceforge.plantuml.stats.HistoricalData$1: net.sourceforge.plantuml.stats.HistoricalData this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(net.sourceforge.plantuml.stats.ParsedGenerated, net.sourceforge.plantuml.stats.ParsedGenerated)
    {
        net.sourceforge.plantuml.stats.ParsedGenerated r0, r1;
        long l0, l1;
        byte $b2, $b3;
        net.sourceforge.plantuml.stats.HistoricalData$1 r2;

        r2 := @this: net.sourceforge.plantuml.stats.HistoricalData$1;

        r0 := @parameter0: net.sourceforge.plantuml.stats.ParsedGenerated;

        r1 := @parameter1: net.sourceforge.plantuml.stats.ParsedGenerated;

        l0 = virtualinvoke r0.<net.sourceforge.plantuml.stats.ParsedGenerated: long getId()>();

        l1 = virtualinvoke r1.<net.sourceforge.plantuml.stats.ParsedGenerated: long getId()>();

        $b2 = l0 cmp l1;

        if $b2 <= 0 goto label1;

        return 1;

     label1:
        $b3 = l0 cmp l1;

        if $b3 >= 0 goto label2;

        return -1;

     label2:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        net.sourceforge.plantuml.stats.HistoricalData$1 r0;
        java.lang.Object r1, r2;
        net.sourceforge.plantuml.stats.ParsedGenerated $r3, $r4;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.stats.HistoricalData$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (net.sourceforge.plantuml.stats.ParsedGenerated) r1;

        $r3 = (net.sourceforge.plantuml.stats.ParsedGenerated) r2;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.stats.HistoricalData$1: int compare(net.sourceforge.plantuml.stats.ParsedGenerated,net.sourceforge.plantuml.stats.ParsedGenerated)>($r4, $r3);

        return $i0;
    }
}
