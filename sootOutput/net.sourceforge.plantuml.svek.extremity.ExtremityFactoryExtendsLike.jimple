public class net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike extends net.sourceforge.plantuml.svek.AbstractExtremityFactory implements net.sourceforge.plantuml.svek.extremity.ExtremityFactory
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor;
    private final boolean definedBy;

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, boolean)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        z0 := @parameter1: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractExtremityFactory: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = r1;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: boolean definedBy> = z0;

        return;
    }

    public net.sourceforge.plantuml.graphic.UDrawable createUDrawable(java.awt.geom.Point2D, double, net.sourceforge.plantuml.svek.Side)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike r0;
        boolean $z0;
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines $r1;
        java.awt.geom.Point2D r2;
        double d0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r5;
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy $r4;
        net.sourceforge.plantuml.svek.Side r6;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike;

        r2 := @parameter0: java.awt.geom.Point2D;

        d0 := @parameter1: double;

        r6 := @parameter2: net.sourceforge.plantuml.svek.Side;

        $z0 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: boolean definedBy>;

        if $z0 == 0 goto label1;

        $r4 = new net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy;

        $r5 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        specialinvoke $r4.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: void <init>(java.awt.geom.Point2D,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r2, d0, $r5);

        return $r4;

     label1:
        $r1 = new net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines;

        $r3 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        specialinvoke $r1.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: void <init>(java.awt.geom.Point2D,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r2, d0, $r3);

        return $r1;
    }

    public net.sourceforge.plantuml.graphic.UDrawable createUDrawable(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, net.sourceforge.plantuml.svek.Side)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike r0;
        java.awt.geom.Point2D r1, r2, r4;
        double $d0, d1;
        boolean $z0;
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r7;
        net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy $r6;
        net.sourceforge.plantuml.svek.Side r8;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike;

        r1 := @parameter0: java.awt.geom.Point2D;

        r4 := @parameter1: java.awt.geom.Point2D;

        r2 := @parameter2: java.awt.geom.Point2D;

        r8 := @parameter3: net.sourceforge.plantuml.svek.Side;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: double atan2(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, r2);

        d1 = $d0 + 1.5707963267948966;

        $z0 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: boolean definedBy>;

        if $z0 == 0 goto label1;

        $r6 = new net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy;

        $r7 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        specialinvoke $r6.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$DefinedBy: void <init>(java.awt.geom.Point2D,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r4, d1, $r7);

        return $r6;

     label1:
        $r3 = new net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines;

        $r5 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityFactoryExtendsLike: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        specialinvoke $r3.<net.sourceforge.plantuml.svek.extremity.ExtremityExtendsLike$Redefines: void <init>(java.awt.geom.Point2D,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r4, d1, $r5);

        return $r3;
    }
}
