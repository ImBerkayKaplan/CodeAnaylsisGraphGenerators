final class net.sourceforge.plantuml.wbs.WElement extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor backColor;
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private final int level;
    private final java.lang.String stereotype;
    private final net.sourceforge.plantuml.wbs.WElement parent;
    private final net.sourceforge.plantuml.style.StyleBuilder styleBuilder;
    private final java.util.List childrenLeft;
    private final java.util.List childrenRight;
    private final net.sourceforge.plantuml.mindmap.IdeaShape shape;
    private static final int STEP_BY_PARENT;

    private net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionNode(int)
    {
        int i0;
        java.lang.String r0, $r12, $r22, $r32, $r43, $r53;
        net.sourceforge.plantuml.wbs.WElement r1;
        net.sourceforge.plantuml.mindmap.IdeaShape $r2, $r3, $r4, $r5;
        boolean $z0, $z1;
        net.sourceforge.plantuml.style.SName[] $r6, $r15, $r25, $r35, $r46;
        net.sourceforge.plantuml.style.SName $r7, $r8, $r9, $r10, $r16, $r17, $r18, $r19, $r20, $r26, $r27, $r28, $r29, $r30, $r36, $r37, $r38, $r39, $r40, $r41, $r47, $r48, $r49, $r50, $r51;
        net.sourceforge.plantuml.style.StyleSignature $r11, $r13, $r14, $r21, $r23, $r24, $r31, $r33, $r34, $r42, $r44, $r45, $r52, $r54, $r55;

        r1 := @this: net.sourceforge.plantuml.wbs.WElement;

        i0 := @parameter0: int;

        r0 = staticinvoke <net.sourceforge.plantuml.style.SName: java.lang.String depth(int)>(i0);

        if i0 != 0 goto label1;

        $r46 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r47 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r46[0] = $r47;

        $r48 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r46[1] = $r48;

        $r49 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName wbsDiagram>;

        $r46[2] = $r49;

        $r50 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName node>;

        $r46[3] = $r50;

        $r51 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName rootNode>;

        $r46[4] = $r51;

        $r52 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r46);

        $r53 = r1.<net.sourceforge.plantuml.wbs.WElement: java.lang.String stereotype>;

        $r54 = virtualinvoke $r52.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>(r0);

        return $r55;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.mindmap.IdeaShape shape>;

        $r2 = <net.sourceforge.plantuml.mindmap.IdeaShape: net.sourceforge.plantuml.mindmap.IdeaShape NONE>;

        if $r3 != $r2 goto label2;

        $z1 = virtualinvoke r1.<net.sourceforge.plantuml.wbs.WElement: boolean isLeaf()>();

        if $z1 == 0 goto label2;

        $r35 = newarray (net.sourceforge.plantuml.style.SName)[6];

        $r36 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r35[0] = $r36;

        $r37 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r35[1] = $r37;

        $r38 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName wbsDiagram>;

        $r35[2] = $r38;

        $r39 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName node>;

        $r35[3] = $r39;

        $r40 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName leafNode>;

        $r35[4] = $r40;

        $r41 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName boxless>;

        $r35[5] = $r41;

        $r42 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r35);

        $r43 = r1.<net.sourceforge.plantuml.wbs.WElement: java.lang.String stereotype>;

        $r44 = virtualinvoke $r42.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>(r0);

        return $r45;

     label2:
        $z0 = virtualinvoke r1.<net.sourceforge.plantuml.wbs.WElement: boolean isLeaf()>();

        if $z0 == 0 goto label3;

        $r25 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r26 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r25[0] = $r26;

        $r27 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r25[1] = $r27;

        $r28 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName wbsDiagram>;

        $r25[2] = $r28;

        $r29 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName node>;

        $r25[3] = $r29;

        $r30 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName leafNode>;

        $r25[4] = $r30;

        $r31 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r25);

        $r32 = r1.<net.sourceforge.plantuml.wbs.WElement: java.lang.String stereotype>;

        $r33 = virtualinvoke $r31.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>(r0);

        return $r34;

     label3:
        $r5 = r1.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.mindmap.IdeaShape shape>;

        $r4 = <net.sourceforge.plantuml.mindmap.IdeaShape: net.sourceforge.plantuml.mindmap.IdeaShape NONE>;

        if $r5 != $r4 goto label4;

        $r15 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r16 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r15[0] = $r16;

        $r17 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r15[1] = $r17;

        $r18 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName wbsDiagram>;

        $r15[2] = $r18;

        $r19 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName node>;

        $r15[3] = $r19;

        $r20 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName boxless>;

        $r15[4] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r15);

        $r22 = r1.<net.sourceforge.plantuml.wbs.WElement: java.lang.String stereotype>;

        $r23 = virtualinvoke $r21.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>(r0);

        return $r24;

     label4:
        $r6 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r7 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r6[0] = $r7;

        $r8 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r6[1] = $r8;

        $r9 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName wbsDiagram>;

        $r6[2] = $r9;

        $r10 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName node>;

        $r6[3] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r6);

        $r12 = r1.<net.sourceforge.plantuml.wbs.WElement: java.lang.String stereotype>;

        $r13 = virtualinvoke $r11.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>(r0);

        return $r14;
    }

    public net.sourceforge.plantuml.ISkinParam withBackColor(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r5;
        net.sourceforge.plantuml.SkinParamColors $r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.graphic.color.Colors $r4, $r7;
        net.sourceforge.plantuml.graphic.color.ColorType $r6;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        r3 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $r1 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        if $r1 != null goto label1;

        return r3;

     label1:
        $r2 = new net.sourceforge.plantuml.SkinParamColors;

        $r4 = staticinvoke <net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors empty()>();

        $r6 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r5 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r7 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r6, $r5);

        specialinvoke $r2.<net.sourceforge.plantuml.SkinParamColors: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.color.Colors)>(r3, $r7);

        return $r2;
    }

    public net.sourceforge.plantuml.style.Style getStyle()
    {
        net.sourceforge.plantuml.wbs.WElement r0, r8;
        int $i0, $i1, i2;
        net.sourceforge.plantuml.style.StyleBuilder $r1, $r5;
        net.sourceforge.plantuml.style.StyleSignature $r2, $r3, r4;
        net.sourceforge.plantuml.style.Style r6, r7;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        i2 = 1411065408;

        $r1 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        $i0 = r0.<net.sourceforge.plantuml.wbs.WElement: int level>;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionNode(int)>($i0);

        r7 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleBuilder: net.sourceforge.plantuml.style.Style getMergedStyleSpecial(net.sourceforge.plantuml.style.StyleSignature,int)>($r2, 1411065408);

        r8 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.wbs.WElement parent>;

     label1:
        if r8 == null goto label2;

        $i1 = r0.<net.sourceforge.plantuml.wbs.WElement: int level>;

        $r3 = specialinvoke r8.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionNode(int)>($i1);

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature addStar()>();

        i2 = i2 - 10001000;

        $r5 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.style.StyleBuilder: net.sourceforge.plantuml.style.Style getMergedStyleSpecial(net.sourceforge.plantuml.style.StyleSignature,int)>(r4, i2);

        r7 = virtualinvoke r7.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Style mergeWith(net.sourceforge.plantuml.style.Style)>(r6);

        r8 = r8.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.wbs.WElement parent>;

        goto label1;

     label2:
        return r7;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display, java.lang.String, net.sourceforge.plantuml.style.StyleBuilder, net.sourceforge.plantuml.mindmap.IdeaShape)
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        java.lang.String r3;
        net.sourceforge.plantuml.mindmap.IdeaShape r4;
        net.sourceforge.plantuml.style.StyleBuilder r5;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: net.sourceforge.plantuml.style.StyleBuilder;

        r4 := @parameter4: net.sourceforge.plantuml.mindmap.IdeaShape;

        specialinvoke r0.<net.sourceforge.plantuml.wbs.WElement: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,int,net.sourceforge.plantuml.cucadiagram.Display,java.lang.String,net.sourceforge.plantuml.wbs.WElement,net.sourceforge.plantuml.mindmap.IdeaShape,net.sourceforge.plantuml.style.StyleBuilder)>(r1, 0, r2, r3, null, r4, r5);

        return;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, int, net.sourceforge.plantuml.cucadiagram.Display, java.lang.String, net.sourceforge.plantuml.wbs.WElement, net.sourceforge.plantuml.mindmap.IdeaShape, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.wbs.WElement r0, r5;
        java.util.ArrayList $r1, $r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.ugraphic.color.HColor r4;
        int i0;
        net.sourceforge.plantuml.mindmap.IdeaShape r6;
        net.sourceforge.plantuml.style.StyleBuilder r7;
        java.lang.String r8;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 := @parameter1: int;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r8 := @parameter3: java.lang.String;

        r5 := @parameter4: net.sourceforge.plantuml.wbs.WElement;

        r6 := @parameter5: net.sourceforge.plantuml.mindmap.IdeaShape;

        r7 := @parameter6: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenLeft> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenRight> = $r2;

        r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.cucadiagram.Display label> = r3;

        r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = r4;

        r0.<net.sourceforge.plantuml.wbs.WElement: int level> = i0;

        r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.wbs.WElement parent> = r5;

        r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.mindmap.IdeaShape shape> = r6;

        r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.StyleBuilder styleBuilder> = r7;

        r0.<net.sourceforge.plantuml.wbs.WElement: java.lang.String stereotype> = r8;

        return;
    }

    public boolean isLeaf()
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        $r1 = r0.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenLeft>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r2 = r0.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenRight>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.wbs.WElement createElement(net.sourceforge.plantuml.ugraphic.color.HColor, int, net.sourceforge.plantuml.cucadiagram.Display, java.lang.String, net.sourceforge.plantuml.Direction, net.sourceforge.plantuml.mindmap.IdeaShape, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.wbs.WElement $r0, r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        int i0;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        java.lang.String r3;
        net.sourceforge.plantuml.mindmap.IdeaShape r5;
        net.sourceforge.plantuml.style.StyleBuilder r6;
        net.sourceforge.plantuml.Direction r8, $r9, $r13;
        java.util.List $r10, $r11, $r12;

        r4 := @this: net.sourceforge.plantuml.wbs.WElement;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 := @parameter1: int;

        r2 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter3: java.lang.String;

        r8 := @parameter4: net.sourceforge.plantuml.Direction;

        r5 := @parameter5: net.sourceforge.plantuml.mindmap.IdeaShape;

        r6 := @parameter6: net.sourceforge.plantuml.style.StyleBuilder;

        $r0 = new net.sourceforge.plantuml.wbs.WElement;

        specialinvoke $r0.<net.sourceforge.plantuml.wbs.WElement: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,int,net.sourceforge.plantuml.cucadiagram.Display,java.lang.String,net.sourceforge.plantuml.wbs.WElement,net.sourceforge.plantuml.mindmap.IdeaShape,net.sourceforge.plantuml.style.StyleBuilder)>(r1, i0, r2, r3, r4, r5, r6);

        $r9 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r8 != $r9 goto label1;

        if i0 != 1 goto label1;

        $r12 = r4.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenRight>;

        interfaceinvoke $r12.<java.util.List: void add(int,java.lang.Object)>(0, $r0);

     label1:
        $r13 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r8 != $r13 goto label2;

        $r11 = r4.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenLeft>;

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r0);

        goto label3;

     label2:
        $r10 = r4.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenRight>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r0);

     label3:
        return $r0;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        $r1 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.String toString()>();

        return $r2;
    }

    public final int getLevel()
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        $i0 = r0.<net.sourceforge.plantuml.wbs.WElement: int level>;

        return $i0;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getLabel()
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        $r1 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.cucadiagram.Display label>;

        return $r1;
    }

    public java.util.Collection getChildren(net.sourceforge.plantuml.Direction)
    {
        net.sourceforge.plantuml.Direction r0, $r1;
        net.sourceforge.plantuml.wbs.WElement r2;
        java.util.List $r3, $r4, $r5, $r6;

        r2 := @this: net.sourceforge.plantuml.wbs.WElement;

        r0 := @parameter0: net.sourceforge.plantuml.Direction;

        $r1 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r0 != $r1 goto label1;

        $r5 = r2.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenLeft>;

        $r6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r5);

        return $r6;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.wbs.WElement: java.util.List childrenRight>;

        $r4 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r3);

        return $r4;
    }

    public net.sourceforge.plantuml.wbs.WElement getParent()
    {
        net.sourceforge.plantuml.wbs.WElement r0, $r1;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        $r1 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.wbs.WElement parent>;

        return $r1;
    }

    public final net.sourceforge.plantuml.mindmap.IdeaShape getShape()
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        net.sourceforge.plantuml.mindmap.IdeaShape $r1;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        $r1 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.mindmap.IdeaShape shape>;

        return $r1;
    }

    public final net.sourceforge.plantuml.style.StyleBuilder getStyleBuilder()
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        net.sourceforge.plantuml.style.StyleBuilder $r1;

        r0 := @this: net.sourceforge.plantuml.wbs.WElement;

        $r1 = r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        return $r1;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.wbs.WElement: int STEP_BY_PARENT> = 10001000;

        return;
    }
}
