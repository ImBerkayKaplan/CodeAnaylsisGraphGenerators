public class net.sourceforge.plantuml.project.lang.SentenceEnds extends net.sourceforge.plantuml.project.lang.SentenceSimple
{

    public void <init>()
    {
        net.sourceforge.plantuml.project.lang.SentenceEnds r0;
        net.sourceforge.plantuml.project.lang.SubjectTask $r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2;
        net.sourceforge.plantuml.project.lang.ComplementBeforeOrAfterOrAtTaskStartOrEnd $r3;

        r0 := @this: net.sourceforge.plantuml.project.lang.SentenceEnds;

        $r1 = new net.sourceforge.plantuml.project.lang.SubjectTask;

        specialinvoke $r1.<net.sourceforge.plantuml.project.lang.SubjectTask: void <init>()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.project.lang.Verbs: net.sourceforge.plantuml.command.regex.IRegex ends()>();

        $r3 = new net.sourceforge.plantuml.project.lang.ComplementBeforeOrAfterOrAtTaskStartOrEnd;

        specialinvoke $r3.<net.sourceforge.plantuml.project.lang.ComplementBeforeOrAfterOrAtTaskStartOrEnd: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: void <init>(net.sourceforge.plantuml.project.lang.Subject,net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.project.lang.Something)>($r1, $r2, $r3);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r2;
        net.sourceforge.plantuml.project.core.Task r1;
        net.sourceforge.plantuml.project.core.TaskInstant r3, $r10;
        net.sourceforge.plantuml.project.time.Day $r4, $r5;
        net.sourceforge.plantuml.project.GanttDiagram r6;
        net.sourceforge.plantuml.project.GanttConstraint $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r8;
        net.sourceforge.plantuml.style.StyleBuilder $r9;
        net.sourceforge.plantuml.project.core.TaskAttribute $r11;
        net.sourceforge.plantuml.command.CommandExecutionResult $r12;
        net.sourceforge.plantuml.project.lang.SentenceEnds r13;

        r13 := @this: net.sourceforge.plantuml.project.lang.SentenceEnds;

        r6 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r1 = (net.sourceforge.plantuml.project.core.Task) r0;

        r3 = (net.sourceforge.plantuml.project.core.TaskInstant) r2;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.time.Day getInstantPrecise()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day decrement()>();

        interfaceinvoke r1.<net.sourceforge.plantuml.project.core.Task: void setEnd(net.sourceforge.plantuml.project.time.Day)>($r5);

        $r7 = new net.sourceforge.plantuml.project.GanttConstraint;

        $r8 = virtualinvoke r6.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r9 = virtualinvoke r6.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r10 = new net.sourceforge.plantuml.project.core.TaskInstant;

        $r11 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        specialinvoke $r10.<net.sourceforge.plantuml.project.core.TaskInstant: void <init>(net.sourceforge.plantuml.project.core.Moment,net.sourceforge.plantuml.project.core.TaskAttribute)>(r1, $r11);

        specialinvoke $r7.<net.sourceforge.plantuml.project.GanttConstraint: void <init>(net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.style.StyleBuilder,net.sourceforge.plantuml.project.core.TaskInstant,net.sourceforge.plantuml.project.core.TaskInstant)>($r8, $r9, r3, $r10);

        virtualinvoke r6.<net.sourceforge.plantuml.project.GanttDiagram: void addContraint(net.sourceforge.plantuml.project.GanttConstraint)>($r7);

        $r12 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r12;
    }
}
