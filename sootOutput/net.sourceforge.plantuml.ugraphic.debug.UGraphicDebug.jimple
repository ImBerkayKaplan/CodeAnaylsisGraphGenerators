public class net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug extends net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic implements net.sourceforge.plantuml.ugraphic.ClipContainer
{
    private final java.util.List output;
    private final double scaleFactor;
    private final net.sourceforge.plantuml.awt.geom.Dimension2D dim;
    private final java.lang.String svgLinkTarget;
    private final java.lang.String hoverPathColorRGB;
    private final long seed;
    private final java.lang.String preserveAspectRatio;

    protected net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic copyUGraphic()
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug $r0, r1;
        java.lang.String $r2, $r3, $r4;
        long $l0;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5;
        double $d0;
        java.util.List $r6;

        r1 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        $r0 = new net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        $r6 = r1.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $d0 = r1.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double scaleFactor>;

        $r5 = r1.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $r4 = r1.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String svgLinkTarget>;

        $r3 = r1.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String hoverPathColorRGB>;

        $l0 = r1.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: long seed>;

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String preserveAspectRatio>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void <init>(net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug,java.util.List,double,net.sourceforge.plantuml.awt.geom.Dimension2D,java.lang.String,java.lang.String,long,java.lang.String)>(r1, $r6, $d0, $r5, $r4, $r3, $l0, $r2);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug, java.util.List, double, net.sourceforge.plantuml.awt.geom.Dimension2D, java.lang.String, java.lang.String, long, java.lang.String)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0, r1;
        java.util.List r2;
        double d0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        java.lang.String r4, r5, r6;
        long l0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r2 := @parameter1: java.util.List;

        d0 := @parameter2: double;

        r3 := @parameter3: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: java.lang.String;

        l0 := @parameter6: long;

        r6 := @parameter7: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic)>(r1);

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output> = r2;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double scaleFactor> = d0;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.awt.geom.Dimension2D dim> = r3;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String svgLinkTarget> = r4;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String hoverPathColorRGB> = r5;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: long seed> = l0;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String preserveAspectRatio> = r6;

        return;
    }

    public void <init>(double, net.sourceforge.plantuml.awt.geom.Dimension2D, java.lang.String, java.lang.String, long, java.lang.String)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2;
        net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug $r3;
        java.util.ArrayList $r4;
        double d0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        java.lang.String r6, r7, r8;
        long l0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        d0 := @parameter0: double;

        r5 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r6 := @parameter2: java.lang.String;

        r7 := @parameter3: java.lang.String;

        l0 := @parameter4: long;

        r8 := @parameter5: java.lang.String;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r1 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        $r3 = new net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.debug.StringBounderDebug: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder)>($r2, $r1, $r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output> = $r4;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double scaleFactor> = d0;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.awt.geom.Dimension2D dim> = r5;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String svgLinkTarget> = r6;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String hoverPathColorRGB> = r7;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: long seed> = l0;

        r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String preserveAspectRatio> = r8;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.ugraphic.UShape r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.StringBuilder $r1, $r3, $r6, $r9, $r11, $r14, $r15, $r17;
        java.io.PrintStream $r2;
        java.lang.Class $r4, $r12;
        java.lang.String $r5, $r7, $r13, $r18;
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r8;
        java.util.List $r10;
        java.util.Date $r16;
        net.sourceforge.plantuml.ugraphic.UCenteredCharacter $r19;
        net.sourceforge.plantuml.posimo.DotPath $r20;
        net.sourceforge.plantuml.ugraphic.UPath $r21, $r23;
        net.sourceforge.plantuml.ugraphic.UComment $r22;
        net.sourceforge.plantuml.ugraphic.UEmpty $r24;
        net.sourceforge.plantuml.ugraphic.UEllipse $r25;
        net.sourceforge.plantuml.ugraphic.UPolygon $r26;
        net.sourceforge.plantuml.ugraphic.UText $r27;
        net.sourceforge.plantuml.ugraphic.URectangle $r28;
        net.sourceforge.plantuml.ugraphic.ULine $r29;

        r8 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $z0 = r0 instanceof net.sourceforge.plantuml.ugraphic.ULine;

        if $z0 == 0 goto label01;

        $r29 = (net.sourceforge.plantuml.ugraphic.ULine) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outLine(net.sourceforge.plantuml.ugraphic.ULine)>($r29);

        goto label11;

     label01:
        $z1 = r0 instanceof net.sourceforge.plantuml.ugraphic.URectangle;

        if $z1 == 0 goto label02;

        $r28 = (net.sourceforge.plantuml.ugraphic.URectangle) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outRectangle(net.sourceforge.plantuml.ugraphic.URectangle)>($r28);

        goto label11;

     label02:
        $z2 = r0 instanceof net.sourceforge.plantuml.ugraphic.UText;

        if $z2 == 0 goto label03;

        $r27 = (net.sourceforge.plantuml.ugraphic.UText) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outText(net.sourceforge.plantuml.ugraphic.UText)>($r27);

        goto label11;

     label03:
        $z3 = r0 instanceof net.sourceforge.plantuml.ugraphic.UPolygon;

        if $z3 == 0 goto label04;

        $r26 = (net.sourceforge.plantuml.ugraphic.UPolygon) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outPolygon(net.sourceforge.plantuml.ugraphic.UPolygon)>($r26);

        goto label11;

     label04:
        $z4 = r0 instanceof net.sourceforge.plantuml.ugraphic.UEllipse;

        if $z4 == 0 goto label05;

        $r25 = (net.sourceforge.plantuml.ugraphic.UEllipse) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outEllipse(net.sourceforge.plantuml.ugraphic.UEllipse)>($r25);

        goto label11;

     label05:
        $z5 = r0 instanceof net.sourceforge.plantuml.ugraphic.UEmpty;

        if $z5 == 0 goto label06;

        $r24 = (net.sourceforge.plantuml.ugraphic.UEmpty) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outEmpty(net.sourceforge.plantuml.ugraphic.UEmpty)>($r24);

        goto label11;

     label06:
        $z6 = r0 instanceof net.sourceforge.plantuml.ugraphic.UPath;

        if $z6 == 0 goto label07;

        $r23 = (net.sourceforge.plantuml.ugraphic.UPath) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outPath(net.sourceforge.plantuml.ugraphic.UPath)>($r23);

        goto label11;

     label07:
        $z7 = r0 instanceof net.sourceforge.plantuml.ugraphic.UComment;

        if $z7 == 0 goto label08;

        $r22 = (net.sourceforge.plantuml.ugraphic.UComment) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outComment(net.sourceforge.plantuml.ugraphic.UComment)>($r22);

        goto label11;

     label08:
        $z8 = r0 instanceof net.sourceforge.plantuml.posimo.DotPath;

        if $z8 == 0 goto label09;

        $r20 = (net.sourceforge.plantuml.posimo.DotPath) r0;

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.posimo.DotPath: net.sourceforge.plantuml.ugraphic.UPath toUPath()>();

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outPath(net.sourceforge.plantuml.ugraphic.UPath)>($r21);

        goto label11;

     label09:
        $z9 = r0 instanceof net.sourceforge.plantuml.ugraphic.UCenteredCharacter;

        if $z9 == 0 goto label10;

        $r19 = (net.sourceforge.plantuml.ugraphic.UCenteredCharacter) r0;

        specialinvoke r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void outCenteredCharacter(net.sourceforge.plantuml.ugraphic.UCenteredCharacter)>($r19);

        goto label11;

     label10:
        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UGraphicDebug ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r10 = r8.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UGraphicDebug ");

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke $r12.<java.lang.Class: java.lang.String getSimpleName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r16 = new java.util.Date;

        specialinvoke $r16.<java.util.Date: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r18);

     label11:
        return;
    }

    private void outCenteredCharacter(net.sourceforge.plantuml.ugraphic.UCenteredCharacter)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.util.List $r1, $r3, $r9, $r15, $r22, $r29;
        java.lang.StringBuilder $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r19, $r21, $r23, $r27;
        net.sourceforge.plantuml.ugraphic.UCenteredCharacter r5;
        char $c0;
        java.lang.String $r7, $r11, $r13, $r18, $r20, $r26, $r28;
        double $d0, $d1;
        net.sourceforge.plantuml.ugraphic.UFont $r17;
        net.sourceforge.plantuml.ugraphic.UParam $r24;
        net.sourceforge.plantuml.ugraphic.color.HColor $r25;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UCenteredCharacter;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("CENTERED_CHAR:");

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  char: ");

        $c0 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UCenteredCharacter: char getChar()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  position: ");

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $r11 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d0, $d1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r15 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  font: ");

        $r17 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UCenteredCharacter: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.ugraphic.UFont: java.lang.String toStringDebug()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r20);

        $r22 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  color: ");

        $r24 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r26 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r25);

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r28);

        $r29 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>("");

        return;
    }

    private void outComment(net.sourceforge.plantuml.ugraphic.UComment)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.lang.StringBuilder $r1, $r3, $r6;
        java.util.List $r2;
        net.sourceforge.plantuml.ugraphic.UComment r4;
        java.lang.String $r5, $r7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UComment;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("COMMENT: ");

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UComment: java.lang.String getComment()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }

    private void outPath(net.sourceforge.plantuml.ugraphic.UPath)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.util.List $r1, $r5, $r12, $r17, $r25, $r32, $r38, $r49, $r55, $r61, $r66, $r71, $r76;
        net.sourceforge.plantuml.ugraphic.UPath r2;
        java.util.Iterator r3;
        boolean $z1, $z14, $z15;
        java.lang.StringBuilder $r4, $r6, $r9, $r11, $r13, $r14, $r16, $r18, $r22, $r24, $r26, $r30, $r37, $r39, $r40, $r43, $r44, $r45, $r46, $r48, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r63, $r65, $r67, $r68, $r70, $r72, $r73, $r75, $r77, $r79;
        net.sourceforge.plantuml.ugraphic.UParam $r7, $r19, $r27;
        net.sourceforge.plantuml.ugraphic.UStroke $r8;
        java.lang.String $r10, $r15, $r21, $r23, $r29, $r31, $r41, r47, $r51, $r53, $r57, $r59, $r64, $r69, $r74, $r78, $r80;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        int $i0, $i1, $i2, $i3, $i4, $i5, i8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r20, $r28;
        java.lang.Object $r33;
        net.sourceforge.plantuml.ugraphic.USegment r34;
        net.sourceforge.plantuml.ugraphic.USegmentType r35, $r42;
        double[] r36;
        byte $b6, $b7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UPath;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("PATH:");

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UPath: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label9;

        $r33 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r34 = (net.sourceforge.plantuml.ugraphic.USegment) $r33;

        r35 = virtualinvoke r34.<net.sourceforge.plantuml.ugraphic.USegment: net.sourceforge.plantuml.ugraphic.USegmentType getSegmentType()>();

        r36 = virtualinvoke r34.<net.sourceforge.plantuml.ugraphic.USegment: double[] getCoord()>();

        $r38 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   - type: ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r41);

        $r42 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_ARCTO>;

        if r35 != $r42 goto label6;

        $r55 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     radius: ");

        $d4 = r36[0];

        $d3 = r36[1];

        $r57 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d4, $d3);

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r55.<java.util.List: boolean add(java.lang.Object)>($r59);

        $r61 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     angle: ");

        $d5 = r36[2];

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r61.<java.util.List: boolean add(java.lang.Object)>($r64);

        $r66 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     largeArcFlag: ");

        $d6 = r36[3];

        $b6 = $d6 cmpl 0.0;

        if $b6 == 0 goto label2;

        $z14 = 1;

        goto label3;

     label2:
        $z14 = 0;

     label3:
        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z14);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r66.<java.util.List: boolean add(java.lang.Object)>($r69);

        $r71 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     sweepFlag: ");

        $d7 = r36[4];

        $b7 = $d7 cmpl 0.0;

        if $b7 == 0 goto label4;

        $z15 = 1;

        goto label5;

     label4:
        $z15 = 0;

     label5:
        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z15);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r71.<java.util.List: boolean add(java.lang.Object)>($r74);

        $r76 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     dest: ");

        $d9 = r36[5];

        $d8 = r36[6];

        $r78 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d9, $d8);

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r76.<java.util.List: boolean add(java.lang.Object)>($r80);

        goto label8;

     label6:
        i8 = 0;

     label7:
        $i1 = virtualinvoke r35.<net.sourceforge.plantuml.ugraphic.USegmentType: int getNbPoints()>();

        if i8 >= $i1 goto label8;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("     pt");

        $i2 = i8 + 1;

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r47);

        $i3 = 2 * i8;

        $d2 = r36[$i3];

        $i4 = 2 * i8;

        $i5 = $i4 + 1;

        $d1 = r36[$i5];

        $r51 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d2, $d1);

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<java.util.List: boolean add(java.lang.Object)>($r53);

        i8 = i8 + 1;

        goto label7;

     label8:
        goto label1;

     label9:
        $r5 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  stroke: ");

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r10);

        $r12 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  shadow: ");

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.ugraphic.UPath: double getDeltaShadow()>();

        $i0 = (int) $d0;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r17 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  color: ");

        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r21 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r20);

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r23);

        $r25 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  backcolor: ");

        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $r29 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r28);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r32 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r32.<java.util.List: boolean add(java.lang.Object)>("");

        return;
    }

    private void outPolygon(net.sourceforge.plantuml.ugraphic.UPolygon)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.util.List $r1, $r2, $r4, $r7, $r14, $r19, $r27, $r34, $r38;
        net.sourceforge.plantuml.ugraphic.UPolygon r3;
        java.util.Iterator r5;
        boolean $z2;
        java.lang.StringBuilder $r6, $r8, $r11, $r13, $r15, $r16, $r18, $r20, $r24, $r26, $r28, $r32, $r37, $r39, $r41;
        net.sourceforge.plantuml.ugraphic.UParam $r9, $r21, $r29;
        net.sourceforge.plantuml.ugraphic.UStroke $r10;
        java.lang.String $r12, $r17, $r23, $r25, $r31, $r33, $r40, $r42;
        double $d0, $d1, $d2, d3, $d4, $d5, d6;
        int $i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r22, $r30;
        java.lang.Object $r35;
        java.awt.geom.Point2D r36;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UPolygon;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("POLYGON:");

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>("  points:");

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label2;

        $r35 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r36 = (java.awt.geom.Point2D) $r35;

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d2 = virtualinvoke r36.<java.awt.geom.Point2D: double getX()>();

        d3 = $d1 + $d2;

        $d4 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $d5 = virtualinvoke r36.<java.awt.geom.Point2D: double getY()>();

        d6 = $d4 + $d5;

        $r38 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   - ");

        $r40 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>(d3, d6);

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r42);

        goto label1;

     label2:
        $r7 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  stroke: ");

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r14 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  shadow: ");

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UPolygon: double getDeltaShadow()>();

        $i0 = (int) $d0;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r19 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  color: ");

        $r21 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r23 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r22);

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r25);

        $r27 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  backcolor: ");

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r30 = interfaceinvoke $r29.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $r31 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r30);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<java.util.List: boolean add(java.lang.Object)>($r33);

        $r34 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r34.<java.util.List: boolean add(java.lang.Object)>("");

        return;
    }

    private void outText(net.sourceforge.plantuml.ugraphic.UText)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.util.List $r1, $r3, $r10, $r16, $r21, $r28, $r36, $r43;
        java.lang.StringBuilder $r2, $r4, $r7, $r9, $r11, $r13, $r15, $r17, $r18, $r20, $r22, $r25, $r27, $r29, $r33, $r35, $r37, $r41;
        net.sourceforge.plantuml.ugraphic.UText r5;
        java.lang.String $r6, $r8, $r12, $r14, $r19, $r24, $r26, $r32, $r34, $r40, $r42;
        double $d0, $d1;
        int $i0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r23, $r30, $r38;
        net.sourceforge.plantuml.ugraphic.color.HColor $r31, $r39;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UText;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("TEXT:");

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  text: ");

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UText: java.lang.String getText()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r10 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  position: ");

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d0, $d1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r16 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  orientation: ");

        $i0 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UText: int getOrientation()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r21 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  font: ");

        $r23 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UText: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.graphic.FontConfiguration: java.lang.String toStringDebug()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r28 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  color: ");

        $r30 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UText: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r31 = virtualinvoke $r30.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r32 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r31);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r36 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  extendedColor: ");

        $r38 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UText: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration()>();

        $r39 = virtualinvoke $r38.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getExtendedColor()>();

        $r40 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r39);

        $r41 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r36.<java.util.List: boolean add(java.lang.Object)>($r42);

        $r43 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>("");

        return;
    }

    private void outEmpty(net.sourceforge.plantuml.ugraphic.UEmpty)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.util.List $r1, $r3, $r9, $r15;
        java.lang.StringBuilder $r2, $r4, $r6, $r8, $r10, $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.lang.String $r5, $r7, $r12, $r14;
        net.sourceforge.plantuml.ugraphic.UEmpty r11;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.UEmpty;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("EMPTY:");

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pt1: ");

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d0, $d1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pt2: ");

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d3 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.UEmpty: double getWidth()>();

        $d4 = $d2 + $d3;

        $d5 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $d6 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.UEmpty: double getHeight()>();

        $d7 = $d5 + $d6;

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d4, $d7);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r15 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>("");

        return;
    }

    private void outEllipse(net.sourceforge.plantuml.ugraphic.UEllipse)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.util.List $r1, $r3, $r9, $r16, $r21, $r26, $r33, $r38, $r46, $r53;
        java.lang.StringBuilder $r2, $r4, $r6, $r8, $r10, $r13, $r15, $r17, $r18, $r20, $r22, $r23, $r25, $r27, $r30, $r32, $r34, $r35, $r37, $r39, $r43, $r45, $r47, $r51;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.lang.String $r5, $r7, $r12, $r14, $r19, $r24, $r31, $r36, $r42, $r44, $r50, $r52;
        net.sourceforge.plantuml.ugraphic.UEllipse r11;
        net.sourceforge.plantuml.ugraphic.UParam $r28, $r40, $r48;
        net.sourceforge.plantuml.ugraphic.UStroke $r29;
        int $i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r41, $r49;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.UEllipse;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("ELLIPSE:");

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pt1: ");

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d0, $d1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pt2: ");

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d3 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        $d4 = $d2 + $d3;

        $d5 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $d6 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        $d7 = $d5 + $d6;

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d4, $d7);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r16 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  start: ");

        $d8 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.UEllipse: double getStart()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r21 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  extend: ");

        $d9 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.UEllipse: double getExtend()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d9);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r26 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  stroke: ");

        $r28 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r33 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  shadow: ");

        $d10 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.UEllipse: double getDeltaShadow()>();

        $i0 = (int) $d10;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r36);

        $r38 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  color: ");

        $r40 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r41 = interfaceinvoke $r40.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r42 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r41);

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r44);

        $r46 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  backcolor: ");

        $r48 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r49 = interfaceinvoke $r48.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $r50 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r49);

        $r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<java.util.List: boolean add(java.lang.Object)>($r52);

        $r53 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>("");

        return;
    }

    private void outRectangle(net.sourceforge.plantuml.ugraphic.URectangle)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.util.List $r1, $r3, $r9, $r16, $r21, $r26, $r33, $r38, $r46, $r53;
        java.lang.StringBuilder $r2, $r4, $r6, $r8, $r10, $r13, $r15, $r17, $r18, $r20, $r22, $r23, $r25, $r27, $r30, $r32, $r34, $r35, $r37, $r39, $r43, $r45, $r47, $r51;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.lang.String $r5, $r7, $r12, $r14, $r19, $r24, $r31, $r36, $r42, $r44, $r50, $r52;
        net.sourceforge.plantuml.ugraphic.URectangle r11;
        int $i0, $i1, $i2;
        net.sourceforge.plantuml.ugraphic.UParam $r28, $r40, $r48;
        net.sourceforge.plantuml.ugraphic.UStroke $r29;
        net.sourceforge.plantuml.ugraphic.color.HColor $r41, $r49;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.URectangle;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("RECTANGLE:");

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pt1: ");

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d0, $d1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pt2: ");

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d3 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        $d4 = $d2 + $d3;

        $d5 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $d6 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        $d7 = $d5 + $d6;

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d4, $d7);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r16 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  xCorner: ");

        $d8 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.URectangle: double getRx()>();

        $i0 = (int) $d8;

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r21 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  yCorner: ");

        $d9 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.URectangle: double getRy()>();

        $i1 = (int) $d9;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r24);

        $r26 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  stroke: ");

        $r28 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r26.<java.util.List: boolean add(java.lang.Object)>($r31);

        $r33 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  shadow: ");

        $d10 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.URectangle: double getDeltaShadow()>();

        $i2 = (int) $d10;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<java.util.List: boolean add(java.lang.Object)>($r36);

        $r38 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  color: ");

        $r40 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r41 = interfaceinvoke $r40.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r42 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r41);

        $r43 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r44);

        $r46 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  backcolor: ");

        $r48 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r49 = interfaceinvoke $r48.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $r50 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r49);

        $r51 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<java.util.List: boolean add(java.lang.Object)>($r52);

        $r53 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r53.<java.util.List: boolean add(java.lang.Object)>("");

        return;
    }

    private void outLine(net.sourceforge.plantuml.ugraphic.ULine)
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.util.List $r1, $r3, $r9, $r16, $r23, $r28, $r35;
        java.lang.StringBuilder $r2, $r4, $r6, $r8, $r10, $r13, $r15, $r17, $r20, $r22, $r24, $r25, $r27, $r29, $r33;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        java.lang.String $r5, $r7, $r12, $r14, $r21, $r26, $r32, $r34;
        net.sourceforge.plantuml.ugraphic.ULine r11;
        net.sourceforge.plantuml.ugraphic.UParam $r18, $r30;
        net.sourceforge.plantuml.ugraphic.UStroke $r19;
        int $i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r31;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.ULine;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>("LINE:");

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pt1: ");

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d0, $d1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  pt2: ");

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateX()>();

        $d3 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.ULine: double getDX()>();

        $d4 = $d2 + $d3;

        $d5 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double getTranslateY()>();

        $d6 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.ULine: double getDY()>();

        $d7 = $d5 + $d6;

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d4, $d7);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r14);

        $r16 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  stroke: ");

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<java.util.List: boolean add(java.lang.Object)>($r21);

        $r23 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  shadow: ");

        $d8 = virtualinvoke r11.<net.sourceforge.plantuml.ugraphic.ULine: double getDeltaShadow()>();

        $i0 = (int) $d8;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r28 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  color: ");

        $r30 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        $r31 = interfaceinvoke $r30.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r32 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r31);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r35 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>("");

        return;
    }

    private java.lang.String pointd(double, double)
    {
        java.lang.Object[] $r0;
        double d0, d1;
        java.util.Locale $r1;
        java.lang.Double $r2, $r3;
        java.lang.String $r4;
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r5;

        r5 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = <java.util.Locale: java.util.Locale US>;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        $r0[0] = $r2;

        $r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1);

        $r0[1] = $r3;

        $r4 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r1, "[ %.4f ; %.4f ]", $r0);

        return $r4;
    }

    private java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0, $r19, $r23;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r1, $r3, $r6, $r8, $r11, $r12, $r14, $r16, $r17, $r21, $r22, $r25, $r26, $r30, $r31, $r33;
        java.io.PrintStream $r2;
        java.lang.Class $r4, $r9;
        java.lang.String $r5, $r7, $r10, $r15, $r20, $r24, $r27, $r29, $r32, $r34;
        java.util.Date $r13;
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r18;
        java.awt.Color r28;
        int $i0, $i1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple r35;
        net.sourceforge.plantuml.ugraphic.color.HColorMiddle r36;

        r18 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r0 != null goto label1;

        return "NULL_COLOR";

     label1:
        $z0 = r0 instanceof net.sourceforge.plantuml.ugraphic.color.HColorSimple;

        if $z0 == 0 goto label3;

        r35 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) r0;

        r28 = virtualinvoke r35.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: java.awt.Color getColor999()>();

        $z2 = virtualinvoke r35.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: boolean isMonochrome()>();

        if $z2 == 0 goto label2;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("monochrome ");

        $i1 = virtualinvoke r28.<java.awt.Color: int getRGB()>();

        $r32 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i1);

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r34;

     label2:
        $i0 = virtualinvoke r28.<java.awt.Color: int getRGB()>();

        $r29 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        return $r29;

     label3:
        $z1 = r0 instanceof net.sourceforge.plantuml.ugraphic.color.HColorMiddle;

        if $z1 == 0 goto label4;

        r36 = (net.sourceforge.plantuml.ugraphic.color.HColorMiddle) r0;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("middle(");

        $r19 = virtualinvoke r36.<net.sourceforge.plantuml.ugraphic.color.HColorMiddle: net.sourceforge.plantuml.ugraphic.color.HColor getC1()>();

        $r20 = specialinvoke r18.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" & ");

        $r23 = virtualinvoke r36.<net.sourceforge.plantuml.ugraphic.color.HColorMiddle: net.sourceforge.plantuml.ugraphic.color.HColor getC1()>();

        $r24 = specialinvoke r18.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String colorToString(net.sourceforge.plantuml.ugraphic.color.HColor)>($r23);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;

     label4:
        $r2 = <java.lang.System: java.io.PrintStream err>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error colorToString ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getSimpleName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getSimpleName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r13 = new java.util.Date;

        specialinvoke $r13.<java.util.Date: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public void writeToStream(java.io.OutputStream, java.lang.String, int) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r0;
        java.io.OutputStream r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r6, $r7, $r11, $r13, $r14, $r19, $r21, $r22, $r23, $r25, $r26, $r28, $r30, $r31, $r33, $r35, $r36, $r38;
        int i0;
        java.lang.String $r5, $r10, $r12, $r18, $r20, $r24, $r27, $r29, $r32, $r34, $r37, $r39, r43, r44;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r8, $r9;
        double $d0, $d1, $d2;
        java.lang.Object[] $r15;
        java.util.Locale $r16;
        java.lang.Double $r17;
        long $l1;
        java.util.List $r40;
        java.util.Iterator r41;
        boolean $z0;
        java.lang.Object $r42;

        r0 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r1 := @parameter0: java.io.OutputStream;

        r44 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DPI: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, $r5);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dimension: ");

        $r8 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $d0 = virtualinvoke $r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r9 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: net.sourceforge.plantuml.awt.geom.Dimension2D dim>;

        $d1 = virtualinvoke $r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String pointd(double,double)>($d0, $d1);

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, $r12);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scaleFactor: ");

        $r16 = <java.util.Locale: java.util.Locale US>;

        $r15 = newarray (java.lang.Object)[1];

        $d2 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: double scaleFactor>;

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r15[0] = $r17;

        $r18 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r16, "%.4f", $r15);

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, $r20);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seed: ");

        $l1 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: long seed>;

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, $r24);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("svgLinkTarget: ");

        $r27 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String svgLinkTarget>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, $r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hoverPathColorRGB: ");

        $r32 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String hoverPathColorRGB>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, $r34);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("preserveAspectRatio: ");

        $r37 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.lang.String preserveAspectRatio>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, $r39);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, "");

        $r40 = r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: java.util.List output>;

        r41 = interfaceinvoke $r40.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r42 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r43 = (java.lang.String) $r42;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug: void print(java.io.OutputStream,java.lang.String)>(r1, r43);

        goto label1;

     label2:
        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        return;
    }

    private void print(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException, java.io.IOException
    {
        java.io.OutputStream r0;
        java.lang.String r1, $r5;
        java.nio.charset.Charset $r2, $r4;
        byte[] $r3, $r6;
        net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug r7;

        r7 := @this: net.sourceforge.plantuml.ugraphic.debug.UGraphicDebug;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        $r5 = "\n";

        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r6 = virtualinvoke $r5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r4);

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r6);

        return;
    }
}
