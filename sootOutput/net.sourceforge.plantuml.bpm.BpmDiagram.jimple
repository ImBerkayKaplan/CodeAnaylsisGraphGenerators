public class net.sourceforge.plantuml.bpm.BpmDiagram extends net.sourceforge.plantuml.UmlDiagram
{
    private final net.sourceforge.plantuml.bpm.BpmElement start;
    private java.util.List events;
    private java.util.Deque branches;
    private net.sourceforge.plantuml.bpm.Coord current;
    private net.sourceforge.plantuml.bpm.Cell last;

    private void cleanGrid(net.sourceforge.plantuml.bpm.Grid)
    {
        net.sourceforge.plantuml.bpm.CleanerEmptyLine $r0;
        net.sourceforge.plantuml.bpm.Grid r1;
        boolean z0, z1, z2;
        net.sourceforge.plantuml.bpm.CleanerInterleavingLines $r2;
        net.sourceforge.plantuml.bpm.CleanerMoveBlock $r3;
        net.sourceforge.plantuml.bpm.BpmDiagram r4;

        r4 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.Grid;

     label1:
        $r0 = new net.sourceforge.plantuml.bpm.CleanerEmptyLine;

        specialinvoke $r0.<net.sourceforge.plantuml.bpm.CleanerEmptyLine: void <init>()>();

        z0 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.CleanerEmptyLine: boolean clean(net.sourceforge.plantuml.bpm.Grid)>(r1);

        $r2 = new net.sourceforge.plantuml.bpm.CleanerInterleavingLines;

        specialinvoke $r2.<net.sourceforge.plantuml.bpm.CleanerInterleavingLines: void <init>()>();

        z1 = virtualinvoke $r2.<net.sourceforge.plantuml.bpm.CleanerInterleavingLines: boolean clean(net.sourceforge.plantuml.bpm.Grid)>(r1);

        $r3 = new net.sourceforge.plantuml.bpm.CleanerMoveBlock;

        specialinvoke $r3.<net.sourceforge.plantuml.bpm.CleanerMoveBlock: void <init>()>();

        z2 = virtualinvoke $r3.<net.sourceforge.plantuml.bpm.CleanerMoveBlock: boolean clean(net.sourceforge.plantuml.bpm.Grid)>(r1);

        if z0 != 0 goto label2;

        if z1 != 0 goto label2;

        if z2 != 0 goto label2;

        return;

     label2:
        goto label1;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.bpm.BpmDiagram r1;

        r1 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Bpm Diagram)");

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.bpm.BpmDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.UmlDiagramType $r3;
        net.sourceforge.plantuml.bpm.BpmElement $r4;
        net.sourceforge.plantuml.bpm.BpmElementType $r5;
        java.util.ArrayList $r6;
        java.util.ArrayDeque $r7;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        $r3 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType BPM>;

        specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType)>(r1, r2, $r3);

        $r4 = new net.sourceforge.plantuml.bpm.BpmElement;

        $r5 = <net.sourceforge.plantuml.bpm.BpmElementType: net.sourceforge.plantuml.bpm.BpmElementType START>;

        specialinvoke $r4.<net.sourceforge.plantuml.bpm.BpmElement: void <init>(java.lang.String,net.sourceforge.plantuml.bpm.BpmElementType)>(null, $r5);

        r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.BpmElement start> = $r4;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.bpm.BpmDiagram: java.util.List events> = $r6;

        $r7 = new java.util.ArrayDeque;

        specialinvoke $r7.<java.util.ArrayDeque: void <init>()>();

        r0.<net.sourceforge.plantuml.bpm.BpmDiagram: java.util.Deque branches> = $r7;

        return;
    }

    public net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.bpm.BpmDiagram r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.UmlDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder annotations(boolean)>(0);

        return $r3;
    }

    protected net.sourceforge.plantuml.core.ImageData exportDiagramInternal(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.bpm.BpmDiagram r0;
        net.sourceforge.plantuml.FileFormatOption r1;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r2, $r4;
        net.sourceforge.plantuml.graphic.UDrawable $r3;
        java.io.OutputStream r5;
        net.sourceforge.plantuml.core.ImageData $r6;
        int i0;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        r5 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r1 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>(r1);

        $r3 = specialinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.graphic.UDrawable getUDrawable()>();

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r3);

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r5);

        return $r6;
    }

    private net.sourceforge.plantuml.graphic.UDrawable getUDrawable()
    {
        net.sourceforge.plantuml.bpm.BpmDiagram r0;
        net.sourceforge.plantuml.bpm.Grid r1;
        net.sourceforge.plantuml.UmlDiagramType $r2;
        net.sourceforge.plantuml.api.ThemeStyle $r3;
        net.sourceforge.plantuml.SkinParam $r4;
        net.sourceforge.plantuml.bpm.GridArray r5;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        r1 = specialinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Grid createGrid()>();

        specialinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: void cleanGrid(net.sourceforge.plantuml.bpm.Grid)>(r1);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()>();

        $r3 = <net.sourceforge.plantuml.api.ThemeStyle: net.sourceforge.plantuml.api.ThemeStyle LIGHT_REGULAR>;

        $r4 = staticinvoke <net.sourceforge.plantuml.SkinParam: net.sourceforge.plantuml.SkinParam create(net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.api.ThemeStyle)>($r2, $r3);

        r5 = virtualinvoke r1.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.GridArray toArray(net.sourceforge.plantuml.ISkinParam)>($r4);

        return r5;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult addEvent(net.sourceforge.plantuml.bpm.BpmEvent)
    {
        net.sourceforge.plantuml.bpm.BpmDiagram r0;
        net.sourceforge.plantuml.bpm.BpmEvent r1;
        java.util.List $r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.BpmEvent;

        $r2 = r0.<net.sourceforge.plantuml.bpm.BpmDiagram: java.util.List events>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r3;
    }

    private net.sourceforge.plantuml.bpm.Grid createGrid()
    {
        net.sourceforge.plantuml.bpm.Grid $r0;
        net.sourceforge.plantuml.bpm.BpmDiagram r2;
        net.sourceforge.plantuml.bpm.Coord $r3, $r4, $r6, $r14, $r15, $r18, $r21, $r23, $r28, $r29, $r32, $r34, $r35;
        net.sourceforge.plantuml.bpm.Cell $r5, $r7, $r16, $r17, $r24, $r30, $r31, r45;
        net.sourceforge.plantuml.bpm.BpmElement $r8, $r37;
        java.util.List $r9;
        java.util.Iterator r10;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r11;
        net.sourceforge.plantuml.bpm.BpmEvent r12;
        java.lang.IllegalStateException $r13, $r26, $r36;
        net.sourceforge.plantuml.bpm.Line $r19, $r33;
        net.sourceforge.plantuml.bpm.Col r22, r42;
        net.sourceforge.plantuml.bpm.Placeable $r25;
        net.sourceforge.plantuml.bpm.BpmEventResume $r27;
        net.sourceforge.plantuml.bpm.BpmEventAdd r38;
        java.lang.String r39, r44;
        net.sourceforge.plantuml.bpm.Navigator r40, r46;
        net.sourceforge.plantuml.bpm.BpmEventGoto r43;

        r2 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        $r0 = new net.sourceforge.plantuml.bpm.Grid;

        specialinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: void <init>()>();

        $r3 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Coord getRoot()>();

        r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current> = $r3;

        $r4 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        $r5 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Coord)>($r4);

        r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last> = $r5;

        $r6 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        $r7 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Coord)>($r6);

        $r8 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.BpmElement start>;

        virtualinvoke $r7.<net.sourceforge.plantuml.bpm.Cell: void setData(net.sourceforge.plantuml.bpm.Placeable)>($r8);

        $r9 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: java.util.List events>;

        r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label8;

        $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (net.sourceforge.plantuml.bpm.BpmEvent) $r11;

        $z1 = r12 instanceof net.sourceforge.plantuml.bpm.BpmEventAdd;

        if $z1 == 0 goto label2;

        r38 = (net.sourceforge.plantuml.bpm.BpmEventAdd) r12;

        $r37 = virtualinvoke r38.<net.sourceforge.plantuml.bpm.BpmEventAdd: net.sourceforge.plantuml.bpm.BpmElement getElement()>();

        specialinvoke r2.<net.sourceforge.plantuml.bpm.BpmDiagram: void addInGrid(net.sourceforge.plantuml.bpm.Grid,net.sourceforge.plantuml.bpm.BpmElement)>($r0, $r37);

        goto label7;

     label2:
        $z2 = r12 instanceof net.sourceforge.plantuml.bpm.BpmEventResume;

        if $z2 == 0 goto label4;

        $r27 = (net.sourceforge.plantuml.bpm.BpmEventResume) r12;

        r39 = virtualinvoke $r27.<net.sourceforge.plantuml.bpm.BpmEventResume: java.lang.String getId()>();

        $r28 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Coord getById(java.lang.String)>(r39);

        r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current> = $r28;

        $r29 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        $r30 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Coord)>($r29);

        r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last> = $r30;

        $r31 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last>;

        if $r31 != null goto label3;

        $r36 = new java.lang.IllegalStateException;

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>()>();

        throw $r36;

     label3:
        $r32 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        r40 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Navigator linesOf(net.sourceforge.plantuml.bpm.Coord)>($r32);

        $r33 = new net.sourceforge.plantuml.bpm.Line;

        specialinvoke $r33.<net.sourceforge.plantuml.bpm.Line: void <init>()>();

        interfaceinvoke r40.<net.sourceforge.plantuml.bpm.Navigator: void insertAfter(java.lang.Object)>($r33);

        $r34 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        r42 = virtualinvoke $r34.<net.sourceforge.plantuml.bpm.Coord: net.sourceforge.plantuml.bpm.Col getCol()>();

        $r35 = new net.sourceforge.plantuml.bpm.Coord;

        specialinvoke $r35.<net.sourceforge.plantuml.bpm.Coord: void <init>(net.sourceforge.plantuml.bpm.Line,net.sourceforge.plantuml.bpm.Col)>($r33, r42);

        r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current> = $r35;

        goto label7;

     label4:
        $z3 = r12 instanceof net.sourceforge.plantuml.bpm.BpmEventGoto;

        if $z3 == 0 goto label6;

        r43 = (net.sourceforge.plantuml.bpm.BpmEventGoto) r12;

        r44 = virtualinvoke r43.<net.sourceforge.plantuml.bpm.BpmEventGoto: java.lang.String getId()>();

        $r14 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Coord getById(java.lang.String)>(r44);

        r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current> = $r14;

        r45 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last>;

        $r15 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        $r16 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Coord)>($r15);

        r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last> = $r16;

        $r17 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last>;

        if $r17 != null goto label5;

        $r26 = new java.lang.IllegalStateException;

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>()>();

        throw $r26;

     label5:
        $r18 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        r46 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Navigator linesOf(net.sourceforge.plantuml.bpm.Coord)>($r18);

        $r19 = new net.sourceforge.plantuml.bpm.Line;

        specialinvoke $r19.<net.sourceforge.plantuml.bpm.Line: void <init>()>();

        interfaceinvoke r46.<net.sourceforge.plantuml.bpm.Navigator: void insertAfter(java.lang.Object)>($r19);

        $r21 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        r22 = virtualinvoke $r21.<net.sourceforge.plantuml.bpm.Coord: net.sourceforge.plantuml.bpm.Col getCol()>();

        $r23 = new net.sourceforge.plantuml.bpm.Coord;

        specialinvoke $r23.<net.sourceforge.plantuml.bpm.Coord: void <init>(net.sourceforge.plantuml.bpm.Line,net.sourceforge.plantuml.bpm.Col)>($r19, r22);

        r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current> = $r23;

        $r24 = r2.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last>;

        $r25 = virtualinvoke $r24.<net.sourceforge.plantuml.bpm.Cell: net.sourceforge.plantuml.bpm.Placeable getData()>();

        virtualinvoke r45.<net.sourceforge.plantuml.bpm.Cell: void addConnectionTo2(net.sourceforge.plantuml.bpm.Placeable)>($r25);

        goto label7;

     label6:
        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>()>();

        throw $r13;

     label7:
        goto label1;

     label8:
        virtualinvoke $r0.<net.sourceforge.plantuml.bpm.Grid: void addConnections()>();

        return $r0;
    }

    private void addInGrid(net.sourceforge.plantuml.bpm.Grid, net.sourceforge.plantuml.bpm.BpmElement)
    {
        net.sourceforge.plantuml.bpm.Grid r0;
        net.sourceforge.plantuml.bpm.BpmDiagram r1;
        net.sourceforge.plantuml.bpm.Coord $r2, $r6, $r7, $r9, $r12, $r16;
        net.sourceforge.plantuml.bpm.Navigator r3;
        net.sourceforge.plantuml.bpm.Col $r4;
        net.sourceforge.plantuml.bpm.Line $r8;
        net.sourceforge.plantuml.bpm.Cell $r10, $r13, $r14, $r17;
        net.sourceforge.plantuml.bpm.BpmElement r11;
        net.sourceforge.plantuml.bpm.Placeable $r15;

        r1 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        r0 := @parameter0: net.sourceforge.plantuml.bpm.Grid;

        r11 := @parameter1: net.sourceforge.plantuml.bpm.BpmElement;

        $r2 = r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Navigator colsOf(net.sourceforge.plantuml.bpm.Coord)>($r2);

        $r4 = new net.sourceforge.plantuml.bpm.Col;

        specialinvoke $r4.<net.sourceforge.plantuml.bpm.Col: void <init>()>();

        interfaceinvoke r3.<net.sourceforge.plantuml.bpm.Navigator: void insertAfter(java.lang.Object)>($r4);

        $r6 = new net.sourceforge.plantuml.bpm.Coord;

        $r7 = r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.bpm.Coord: net.sourceforge.plantuml.bpm.Line getLine()>();

        specialinvoke $r6.<net.sourceforge.plantuml.bpm.Coord: void <init>(net.sourceforge.plantuml.bpm.Line,net.sourceforge.plantuml.bpm.Col)>($r8, $r4);

        r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current> = $r6;

        $r9 = r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Coord)>($r9);

        virtualinvoke $r10.<net.sourceforge.plantuml.bpm.Cell: void setData(net.sourceforge.plantuml.bpm.Placeable)>(r11);

        $r13 = r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last>;

        $r12 = r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Coord)>($r12);

        $r15 = virtualinvoke $r14.<net.sourceforge.plantuml.bpm.Cell: net.sourceforge.plantuml.bpm.Placeable getData()>();

        virtualinvoke $r13.<net.sourceforge.plantuml.bpm.Cell: void addConnectionTo2(net.sourceforge.plantuml.bpm.Placeable)>($r15);

        $r16 = r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Coord current>;

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Coord)>($r16);

        r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.bpm.Cell last> = $r17;

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult newBranch()
    {
        net.sourceforge.plantuml.bpm.BpmBranch $r0;
        net.sourceforge.plantuml.bpm.BpmDiagram r1;
        java.util.List $r2;
        int $i0;
        java.util.Deque $r4;
        net.sourceforge.plantuml.bpm.BpmEventAdd $r5;
        net.sourceforge.plantuml.bpm.BpmElement $r6;
        net.sourceforge.plantuml.command.CommandExecutionResult $r7;

        r1 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        $r0 = new net.sourceforge.plantuml.bpm.BpmBranch;

        $r2 = r1.<net.sourceforge.plantuml.bpm.BpmDiagram: java.util.List events>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        specialinvoke $r0.<net.sourceforge.plantuml.bpm.BpmBranch: void <init>(int)>($i0);

        $r4 = r1.<net.sourceforge.plantuml.bpm.BpmDiagram: java.util.Deque branches>;

        interfaceinvoke $r4.<java.util.Deque: void addLast(java.lang.Object)>($r0);

        $r5 = new net.sourceforge.plantuml.bpm.BpmEventAdd;

        $r6 = virtualinvoke $r0.<net.sourceforge.plantuml.bpm.BpmBranch: net.sourceforge.plantuml.bpm.BpmElement getEntryElement()>();

        specialinvoke $r5.<net.sourceforge.plantuml.bpm.BpmEventAdd: void <init>(net.sourceforge.plantuml.bpm.BpmElement)>($r6);

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addEvent(net.sourceforge.plantuml.bpm.BpmEvent)>($r5);

        return $r7;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult elseBranch()
    {
        net.sourceforge.plantuml.bpm.BpmDiagram r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.bpm.BpmBranch r3;
        int i0;
        net.sourceforge.plantuml.bpm.BpmEvent $r4, $r6, $r11;
        net.sourceforge.plantuml.command.CommandExecutionResult $r7, $r12;
        net.sourceforge.plantuml.bpm.BpmEventAdd $r8;
        net.sourceforge.plantuml.bpm.BpmElement $r9;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        $r1 = r0.<net.sourceforge.plantuml.bpm.BpmDiagram: java.util.Deque branches>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object getLast()>();

        r3 = (net.sourceforge.plantuml.bpm.BpmBranch) $r2;

        i0 = virtualinvoke r3.<net.sourceforge.plantuml.bpm.BpmBranch: int incAndGetCounter()>();

        if i0 != 2 goto label1;

        $r8 = new net.sourceforge.plantuml.bpm.BpmEventAdd;

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.bpm.BpmBranch: net.sourceforge.plantuml.bpm.BpmElement getElseElement()>();

        specialinvoke $r8.<net.sourceforge.plantuml.bpm.BpmEventAdd: void <init>(net.sourceforge.plantuml.bpm.BpmElement)>($r9);

        virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addEvent(net.sourceforge.plantuml.bpm.BpmEvent)>($r8);

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.bpm.BpmBranch: net.sourceforge.plantuml.bpm.BpmEvent getResumeEntryEvent()>();

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addEvent(net.sourceforge.plantuml.bpm.BpmEvent)>($r11);

        return $r12;

     label1:
        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.bpm.BpmBranch: net.sourceforge.plantuml.bpm.BpmEvent getGoToEndEvent()>();

        virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addEvent(net.sourceforge.plantuml.bpm.BpmEvent)>($r4);

        $r6 = virtualinvoke r3.<net.sourceforge.plantuml.bpm.BpmBranch: net.sourceforge.plantuml.bpm.BpmEvent getResumeEntryEvent()>();

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addEvent(net.sourceforge.plantuml.bpm.BpmEvent)>($r6);

        return $r7;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult endBranch()
    {
        net.sourceforge.plantuml.bpm.BpmDiagram r0;
        java.util.Deque $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.bpm.BpmBranch r3;
        net.sourceforge.plantuml.bpm.BpmEvent $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.bpm.BpmDiagram;

        $r1 = r0.<net.sourceforge.plantuml.bpm.BpmDiagram: java.util.Deque branches>;

        $r2 = interfaceinvoke $r1.<java.util.Deque: java.lang.Object removeLast()>();

        r3 = (net.sourceforge.plantuml.bpm.BpmBranch) $r2;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.bpm.BpmBranch: net.sourceforge.plantuml.bpm.BpmEvent getGoToEndEvent()>();

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.BpmDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addEvent(net.sourceforge.plantuml.bpm.BpmEvent)>($r4);

        return $r5;
    }
}
