public class ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit extends java.lang.Object implements ext.plantuml.com.ctreber.acearth.renderer.RowTypeRenderer
{
    private int fScanBitIndex;
    private ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] fScanBits;
    private final int[] fScanToPixelType;

    public void <init>()
    {
        ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit r0;
        int[] $r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (int)[256];

        r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int[] fScanToPixelType> = $r1;

        return;
    }

    public void startNewRun()
    {
        ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit r0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit;

        r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int fScanBitIndex> = 0;

        specialinvoke r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: void generateScanToPixelTypeTable()>();

        return;
    }

    public void getPixelTypes(int, int[])
    {
        ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit r0;
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] $r1, $r4, $r6, $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, $i19;
        int[] r2, $r3;
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit $r5, $r7, $r9, $r11;

        r0 := @this: ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit;

        i7 := @parameter0: int;

        r2 := @parameter1: int[];

     label1:
        $i1 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int fScanBitIndex>;

        $r1 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] fScanBits>;

        $i0 = lengthof $r1;

        if $i1 >= $i0 goto label4;

        $r4 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] fScanBits>;

        $i5 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int fScanBitIndex>;

        $r5 = $r4[$i5];

        $i6 = virtualinvoke $r5.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int getY()>();

        if $i6 != i7 goto label4;

        $r6 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] fScanBits>;

        $i8 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int fScanBitIndex>;

        $r7 = $r6[$i8];

        i17 = virtualinvoke $r7.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int getlXFrom()>();

     label2:
        $r8 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] fScanBits>;

        $i9 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int fScanBitIndex>;

        $r9 = $r8[$i9];

        $i10 = virtualinvoke $r9.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int getXTo()>();

        if i17 > $i10 goto label3;

        $i14 = r2[i17];

        $r10 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] fScanBits>;

        $i13 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int fScanBitIndex>;

        $r11 = $r10[$i13];

        $i15 = virtualinvoke $r11.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int getType()>();

        $i16 = $i14 + $i15;

        r2[i17] = $i16;

        i17 = i17 + 1;

        goto label2;

     label3:
        $i11 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int fScanBitIndex>;

        $i12 = $i11 + 1;

        r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int fScanBitIndex> = $i12;

        goto label1;

     label4:
        i18 = 0;

     label5:
        $i19 = lengthof r2;

        if i18 >= $i19 goto label6;

        $r3 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int[] fScanToPixelType>;

        $i2 = r2[i18];

        $i3 = $i2 & 255;

        $i4 = $r3[$i3];

        r2[i18] = $i4;

        i18 = i18 + 1;

        goto label5;

     label6:
        return;
    }

    private void generateScanToPixelTypeTable()
    {
        ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit r0;
        int[] $r1, $r2, $r3;
        int i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit;

        i0 = 0;

     label1:
        if i0 >= 256 goto label5;

        if i0 != 0 goto label2;

        $r3 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int[] fScanToPixelType>;

        $r3[i0] = 0;

        goto label4;

     label2:
        if i0 <= 64 goto label3;

        $r2 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int[] fScanToPixelType>;

        $r2[i0] = 1;

        goto label4;

     label3:
        $r1 = r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: int[] fScanToPixelType>;

        $r1[i0] = 2;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        return;
    }

    public void setScanBits(ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[])
    {
        ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit r0;
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] r1;

        r0 := @this: ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit;

        r1 := @parameter0: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[];

        r0.<ext.plantuml.com.ctreber.acearth.renderer.RowTypeRendererScanBit: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit[] fScanBits> = r1;

        return;
    }
}
