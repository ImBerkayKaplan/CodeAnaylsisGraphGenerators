class net.sourceforge.plantuml.salt.PSystemSalt$1 extends java.lang.Object implements net.sourceforge.plantuml.svek.TextBlockBackcolored
{
    final net.sourceforge.plantuml.salt.element.Element val$salt;
    final net.sourceforge.plantuml.awt.geom.Dimension2D val$size;
    final net.sourceforge.plantuml.salt.PSystemSalt this$0;

    void <init>(net.sourceforge.plantuml.salt.PSystemSalt, net.sourceforge.plantuml.salt.element.Element, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.salt.PSystemSalt$1 r0;
        net.sourceforge.plantuml.salt.PSystemSalt r1;
        net.sourceforge.plantuml.salt.element.Element r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSalt$1;

        r1 := @parameter0: net.sourceforge.plantuml.salt.PSystemSalt;

        r2 := @parameter1: net.sourceforge.plantuml.salt.element.Element;

        r3 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.salt.PSystemSalt this$0> = r1;

        r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.salt.element.Element val$salt> = r2;

        r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$size> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.salt.PSystemSalt$1 r0;
        net.sourceforge.plantuml.salt.PSystemSalt $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.Dimension2DDouble $r3, $r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4, $r6, $r8, $r10;
        net.sourceforge.plantuml.salt.element.Element $r5, $r9;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UGraphic r11, r12;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSalt$1;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.salt.PSystemSalt this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.salt.PSystemSalt: net.sourceforge.plantuml.ugraphic.color.HColor access$000(net.sourceforge.plantuml.salt.PSystemSalt)>($r1);

        r12 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r5 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.salt.element.Element val$salt>;

        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r4 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$size>;

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r6 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$size>;

        $d1 = virtualinvoke $r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d0, $d1);

        interfaceinvoke $r5.<net.sourceforge.plantuml.salt.element.Element: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,int,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r12, 0, $r3);

        $r9 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.salt.element.Element val$salt>;

        $r7 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r8 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$size>;

        $d2 = virtualinvoke $r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r10 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$size>;

        $d3 = virtualinvoke $r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r7.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d2, $d3);

        interfaceinvoke $r9.<net.sourceforge.plantuml.salt.element.Element: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,int,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r12, 1, $r7);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.salt.PSystemSalt$1 r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSalt$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$size>;

        return $r1;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.salt.PSystemSalt$1 r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.salt.PSystemSalt$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.salt.PSystemSalt$1 r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.InnerStrategy r3;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSalt$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        return null;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()
    {
        net.sourceforge.plantuml.salt.PSystemSalt$1 r0;
        net.sourceforge.plantuml.salt.PSystemSalt $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;

        r0 := @this: net.sourceforge.plantuml.salt.PSystemSalt$1;

        $r1 = r0.<net.sourceforge.plantuml.salt.PSystemSalt$1: net.sourceforge.plantuml.salt.PSystemSalt this$0>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.salt.PSystemSalt: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackgroundColor()>();

        return $r3;
    }
}
