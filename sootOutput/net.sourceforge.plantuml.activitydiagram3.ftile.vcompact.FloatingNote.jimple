public class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.creole.Stencil, net.sourceforge.plantuml.graphic.TextBlock
{
    private final net.sourceforge.plantuml.svek.image.Opale opale;

    public void <init>(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1;
        net.sourceforge.plantuml.ugraphic.UStroke $r3, r29;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ISkinParam r4;
        net.sourceforge.plantuml.ColorParam $r5, $r6;
        net.sourceforge.plantuml.graphic.FontConfiguration $r7, $r18, r32;
        net.sourceforge.plantuml.FontParam $r8;
        net.sourceforge.plantuml.cucadiagram.Display r9;
        net.sourceforge.plantuml.style.SName[] $r11;
        net.sourceforge.plantuml.style.SName $r12, $r13, $r14, $r15;
        net.sourceforge.plantuml.style.StyleSignature $r16;
        net.sourceforge.plantuml.style.StyleBuilder $r17;
        net.sourceforge.plantuml.style.PName $r19, $r23, $r27;
        net.sourceforge.plantuml.style.Value $r20, $r24, $r28;
        net.sourceforge.plantuml.api.ThemeStyle $r21, $r25;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r22, $r26;
        net.sourceforge.plantuml.style.Style r30;
        net.sourceforge.plantuml.LineBreakStrategy r31;
        net.sourceforge.plantuml.ugraphic.color.HColor r33, r34;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r35, $r36;
        net.sourceforge.plantuml.creole.CreoleMode $r37;
        net.sourceforge.plantuml.creole.SheetBuilder $r38;
        net.sourceforge.plantuml.creole.Sheet r39;
        net.sourceforge.plantuml.creole.SheetBlock2 $r40;
        net.sourceforge.plantuml.creole.SheetBlock1 $r41;
        net.sourceforge.plantuml.svek.image.Opale $r42;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote;

        r9 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r29 = $r3;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r11 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r11[0] = $r12;

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r11[1] = $r13;

        $r14 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r11[2] = $r14;

        $r15 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r11[3] = $r15;

        $r16 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r11);

        $r17 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r30 = virtualinvoke $r16.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r17);

        r31 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        $r18 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        specialinvoke $r18.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.style.Style)>(r4, r30);

        r32 = $r18;

        $r19 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r20 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r19);

        $r21 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r22 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r33 = interfaceinvoke $r20.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r21, $r22);

        $r23 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r24 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r23);

        $r25 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r26 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r34 = interfaceinvoke $r24.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r25, $r26);

        r29 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r27 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r28 = virtualinvoke r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r27);

        d0 = interfaceinvoke $r28.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        goto label4;

     label1:
        $z1 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z1 == 0 goto label2;

        $d1 = 4.0;

        goto label3;

     label2:
        $d1 = 0.0;

     label3:
        d0 = $d1;

        $r5 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBackground>;

        r33 = virtualinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r4, $r5);

        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        r34 = virtualinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r4, $r6);

        $r7 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r8 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        specialinvoke $r7.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r4, $r8, null);

        r32 = $r7;

        r31 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

     label4:
        $r35 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r36 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.graphic.HorizontalAlignment getDefaultTextAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r35);

        $r37 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $r38 = staticinvoke <net.sourceforge.plantuml.creole.Parser: net.sourceforge.plantuml.creole.SheetBuilder build(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r32, $r36, r4, $r37);

        r39 = interfaceinvoke $r38.<net.sourceforge.plantuml.creole.SheetBuilder: net.sourceforge.plantuml.creole.Sheet createSheet(net.sourceforge.plantuml.cucadiagram.Display)>(r9);

        $r40 = new net.sourceforge.plantuml.creole.SheetBlock2;

        $r41 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $d2 = interfaceinvoke r4.<net.sourceforge.plantuml.ISkinParam: double getPadding()>();

        specialinvoke $r41.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>(r39, r31, $d2);

        specialinvoke $r40.<net.sourceforge.plantuml.creole.SheetBlock2: void <init>(net.sourceforge.plantuml.creole.SheetBlock1,net.sourceforge.plantuml.creole.Stencil,net.sourceforge.plantuml.ugraphic.UStroke)>($r41, r0, r29);

        $r42 = new net.sourceforge.plantuml.svek.image.Opale;

        specialinvoke $r42.<net.sourceforge.plantuml.svek.image.Opale: void <init>(double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.TextBlock,boolean,net.sourceforge.plantuml.ugraphic.UStroke)>(d0, r34, r33, $r40, 0, r29);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote: net.sourceforge.plantuml.svek.image.Opale opale> = $r42;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.svek.image.Opale $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote: net.sourceforge.plantuml.svek.image.Opale opale>;

        virtualinvoke $r2.<net.sourceforge.plantuml.svek.image.Opale: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.svek.image.Opale $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote: net.sourceforge.plantuml.svek.image.Opale opale>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote r0;
        net.sourceforge.plantuml.svek.image.Opale $r1;
        int $i0, $i1;
        double $d0, d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote: net.sourceforge.plantuml.svek.image.Opale opale>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.svek.image.Opale: int getMarginX1()>();

        $i1 = neg $i0;

        $d0 = (double) $i1;

        return $d0;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.svek.image.Opale $r2, $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double $d0, $d1, $d2, d3;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d3 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote: net.sourceforge.plantuml.svek.image.Opale opale>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FloatingNote: net.sourceforge.plantuml.svek.image.Opale opale>;

        $i0 = virtualinvoke $r4.<net.sourceforge.plantuml.svek.image.Opale: int getMarginX1()>();

        $d1 = (double) $i0;

        $d2 = $d0 - $d1;

        return $d2;
    }
}
