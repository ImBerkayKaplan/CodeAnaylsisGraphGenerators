public final class net.sourceforge.plantuml.project.timescale.TimeScaleDaily extends java.lang.Object implements net.sourceforge.plantuml.project.timescale.TimeScale
{
    private final net.sourceforge.plantuml.project.timescale.TimeScaleWink basic;
    private final double delta;

    public void <init>(double, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleDaily r0;
        net.sourceforge.plantuml.project.timescale.TimeScaleWink $r1, $r3, $r5;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.project.time.Day r2, r4;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleDaily;

        d0 := @parameter0: double;

        r4 := @parameter1: net.sourceforge.plantuml.project.time.Day;

        r2 := @parameter2: net.sourceforge.plantuml.project.time.Day;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.project.timescale.TimeScaleWink;

        specialinvoke $r1.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: void <init>(double)>(d0);

        r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: net.sourceforge.plantuml.project.timescale.TimeScaleWink basic> = $r1;

        if r2 != null goto label1;

        $r5 = r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: net.sourceforge.plantuml.project.timescale.TimeScaleWink basic>;

        $d2 = virtualinvoke $r5.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r4);

        r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: double delta> = $d2;

        goto label2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: net.sourceforge.plantuml.project.timescale.TimeScaleWink basic>;

        $d1 = virtualinvoke $r3.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r2);

        r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: double delta> = $d1;

     label2:
        return;
    }

    public double getStartingPosition(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleDaily r0;
        net.sourceforge.plantuml.project.time.Day r1;
        net.sourceforge.plantuml.project.timescale.TimeScaleWink $r2;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleDaily;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $r2 = r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: net.sourceforge.plantuml.project.timescale.TimeScaleWink basic>;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r1);

        $d1 = r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: double delta>;

        $d2 = $d0 - $d1;

        return $d2;
    }

    public double getEndingPosition(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleDaily r0;
        net.sourceforge.plantuml.project.time.Day r1;
        net.sourceforge.plantuml.project.timescale.TimeScaleWink $r2;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleDaily;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $r2 = r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: net.sourceforge.plantuml.project.timescale.TimeScaleWink basic>;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>(r1);

        $d1 = r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: double delta>;

        $d2 = $d0 - $d1;

        return $d2;
    }

    public double getWidth(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleDaily r0;
        net.sourceforge.plantuml.project.time.Day r1;
        net.sourceforge.plantuml.project.timescale.TimeScaleWink $r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleDaily;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $r2 = r0.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: net.sourceforge.plantuml.project.timescale.TimeScaleWink basic>;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScaleWink: double getWidth(net.sourceforge.plantuml.project.time.Day)>(r1);

        return $d0;
    }

    public boolean isBreaking(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.timescale.TimeScaleDaily r0;
        net.sourceforge.plantuml.project.time.Day r1;

        r0 := @this: net.sourceforge.plantuml.project.timescale.TimeScaleDaily;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        return 1;
    }
}
