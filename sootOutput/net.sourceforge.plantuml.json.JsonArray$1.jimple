class net.sourceforge.plantuml.json.JsonArray$1 extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator val$iterator;
    final net.sourceforge.plantuml.json.JsonArray this$0;

    void <init>(net.sourceforge.plantuml.json.JsonArray, java.util.Iterator)
    {
        net.sourceforge.plantuml.json.JsonArray$1 r0;
        net.sourceforge.plantuml.json.JsonArray r1;
        java.util.Iterator r2;

        r0 := @this: net.sourceforge.plantuml.json.JsonArray$1;

        r1 := @parameter0: net.sourceforge.plantuml.json.JsonArray;

        r2 := @parameter1: java.util.Iterator;

        r0.<net.sourceforge.plantuml.json.JsonArray$1: net.sourceforge.plantuml.json.JsonArray this$0> = r1;

        r0.<net.sourceforge.plantuml.json.JsonArray$1: java.util.Iterator val$iterator> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        net.sourceforge.plantuml.json.JsonArray$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.json.JsonArray$1;

        $r1 = r0.<net.sourceforge.plantuml.json.JsonArray$1: java.util.Iterator val$iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public net.sourceforge.plantuml.json.JsonValue next()
    {
        net.sourceforge.plantuml.json.JsonArray$1 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.json.JsonValue $r3;

        r0 := @this: net.sourceforge.plantuml.json.JsonArray$1;

        $r1 = r0.<net.sourceforge.plantuml.json.JsonArray$1: java.util.Iterator val$iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (net.sourceforge.plantuml.json.JsonValue) $r2;

        return $r3;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.json.JsonArray$1 r1;

        r1 := @this: net.sourceforge.plantuml.json.JsonArray$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        net.sourceforge.plantuml.json.JsonArray$1 r0;
        net.sourceforge.plantuml.json.JsonValue $r1;

        r0 := @this: net.sourceforge.plantuml.json.JsonArray$1;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonArray$1: net.sourceforge.plantuml.json.JsonValue next()>();

        return $r1;
    }
}
