public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.ISkinParam $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile> = r1;

        return;
    }

    public java.util.Collection getMyChildren()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        java.util.Collection $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Collection getMyChildren()>();

        return $r2;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, $r4, $r6;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>($r6, $d0, $d1);

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

        return;
    }
}
