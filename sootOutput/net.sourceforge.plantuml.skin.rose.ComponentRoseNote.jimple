public final class net.sourceforge.plantuml.skin.rose.ComponentRoseNote extends net.sourceforge.plantuml.skin.AbstractTextualComponent implements net.sourceforge.plantuml.creole.Stencil
{
    private final double paddingX;
    private final double paddingY;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContext;
    private final double roundCorner;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment position;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.cucadiagram.Display, double, double, net.sourceforge.plantuml.ISkinSimple, double, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.ISkinSimple r2;
        net.sourceforge.plantuml.LineBreakStrategy $r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.graphic.FontConfiguration r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r6, $r7, r8;
        double d0, d1, d2, $d3;
        boolean $z0;
        net.sourceforge.plantuml.graphic.SymbolContext r9, $r12;
        net.sourceforge.plantuml.api.ThemeStyle $r10;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r11;
        net.sourceforge.plantuml.style.PName $r13;
        net.sourceforge.plantuml.style.Value $r14;
        int $i0;
        byte $b1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r9 := @parameter1: net.sourceforge.plantuml.graphic.SymbolContext;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.FontConfiguration;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        d0 := @parameter4: double;

        d1 := @parameter5: double;

        r2 := @parameter6: net.sourceforge.plantuml.ISkinSimple;

        d2 := @parameter7: double;

        r6 := @parameter8: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r8 := @parameter9: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        $r7 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if r6 != $r7 goto label1;

        $b1 = 15;

        goto label2;

     label1:
        $b1 = 6;

     label2:
        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, $r3, r4, r5, r6, $b1, 15, 5, r2, 1, null, null);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double paddingX> = d0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double paddingY> = d1;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.HorizontalAlignment position> = r8;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r10, $r11);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = $r12;

        $r13 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r14 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r13);

        $i0 = interfaceinvoke $r14.<net.sourceforge.plantuml.style.Value: int asInt()>();

        $d3 = (double) $i0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double roundCorner> = $d3;

        goto label4;

     label3:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = r9;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double roundCorner> = d2;

     label4:
        return;
    }

    public final double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4, d5;
        net.sourceforge.plantuml.graphic.SymbolContext $r2;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getPaddingX()>();

        $d2 = 2.0 * $d1;

        $d3 = $d0 + $d2;

        $r2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d4 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        d5 = $d3 + $d4;

        return d5;
    }

    public final double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.graphic.SymbolContext $r2;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getPaddingY()>();

        $d2 = 2.0 * $d1;

        $d3 = $d0 + $d2;

        $r2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d4 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        $d5 = $d3 + $d4;

        return $d5;
    }

    public double getPaddingX()
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        $d0 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double paddingX>;

        return $d0;
    }

    public double getPaddingY()
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        $d0 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double paddingY>;

        return $d0;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote r1;
        double $d0, $d1, $d2, $d3, d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26;
        int i0, $i3, $i4, $i5, $i6, $i7, i8;
        net.sourceforge.plantuml.skin.Area r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3, $r4, $r16, $r18;
        byte $b1, $b2;
        net.sourceforge.plantuml.ugraphic.UPath r5, $r8;
        net.sourceforge.plantuml.graphic.SymbolContext $r6, $r7;
        net.sourceforge.plantuml.ugraphic.UStroke $r9;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r10, $r11, $r12, $r13;
        net.sourceforge.plantuml.ugraphic.UTranslate $r14, $r15, $r17;
        java.lang.IllegalArgumentException $r19;
        net.sourceforge.plantuml.ugraphic.UGraphic r20, r21, r22, r23;
        net.sourceforge.plantuml.graphic.TextBlock $r24;

        r1 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        r20 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r0 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        i0 = (int) $d0;

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        i8 = (int) $d1;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $d2 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        d4 = $d2 - $d3;

        $b1 = d4 cmpg 0.0;

        if $b1 >= 0 goto label1;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r19;

     label1:
        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $d5 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $b2 = $d5 cmpl $d6;

        if $b2 <= 0 goto label2;

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $d23 = virtualinvoke $r18.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d24 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getPaddingX()>();

        $d25 = 2.0 * $d24;

        $d26 = $d23 - $d25;

        i8 = (int) $d26;

     label2:
        $d9 = (double) i8;

        $d8 = (double) i0;

        $d7 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double roundCorner>;

        r5 = staticinvoke <net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.ugraphic.UPath getPolygonNormal(double,double,double)>($d9, $d8, $d7);

        $r6 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d10 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UPath: void setDeltaShadow(double)>($d10);

        $r7 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        r21 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r20);

        interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r5);

        $d12 = (double) i8;

        $d11 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double roundCorner>;

        $r8 = staticinvoke <net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.ugraphic.UPath getCorner(double,double)>($d12, $d11);

        interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        $r9 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.UGraphicStencil: net.sourceforge.plantuml.ugraphic.UGraphic create(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.creole.Stencil,net.sourceforge.plantuml.ugraphic.UStroke)>(r21, r1, $r9);

        $r11 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.HorizontalAlignment position>;

        $r10 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        if $r11 != $r10 goto label3;

        $r17 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i6 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: int getMarginX1()>();

        $d21 = (double) $i6;

        $i7 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: int getMarginY()>();

        $d22 = (double) $i7;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d21, $d22);

        r23 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        goto label5;

     label3:
        $r13 = r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.HorizontalAlignment position>;

        $r12 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if $r13 != $r12 goto label4;

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r16 = virtualinvoke r2.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $d17 = virtualinvoke $r16.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d18 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $d19 = $d17 - $d18;

        $i5 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: int getMarginY()>();

        $d20 = (double) $i5;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d19, $d20);

        r23 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        goto label5;

     label4:
        $r14 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i3 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: int getMarginX1()>();

        $d14 = (double) $i3;

        $d13 = d4 / 2.0;

        $d15 = $d14 + $d13;

        $i4 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: int getMarginY()>();

        $d16 = (double) $i4;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d15, $d16);

        r23 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

     label5:
        $r24 = virtualinvoke r1.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        interfaceinvoke $r24.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r23);

        return;
    }

    public double getStartingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        return 0.0;
    }

    public double getEndingX(net.sourceforge.plantuml.graphic.StringBounder, double)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseNote r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseNote;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 := @parameter1: double;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseNote: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }
}
