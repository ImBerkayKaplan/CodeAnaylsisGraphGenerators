public class net.sourceforge.plantuml.command.regex.RegexLeaf extends java.lang.Object implements net.sourceforge.plantuml.command.regex.IRegex
{
    private static final net.sourceforge.plantuml.command.regex.RegexLeaf END;
    private static final net.sourceforge.plantuml.command.regex.RegexLeaf START;
    private final java.lang.String pattern;
    private final java.lang.String name;
    private int count;
    private static final java.util.Set UNKNOWN;
    private static final java.util.regex.Pattern p1;
    private static final java.util.regex.Pattern p2;
    private static final java.util.regex.Pattern p3;

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>(null, r1);

        return;
    }

    public static net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("[%s]*");

        return $r0;
    }

    public static net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("[%s]+");

        return $r0;
    }

    public static net.sourceforge.plantuml.command.regex.RegexLeaf start()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0;

        $r0 = <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf START>;

        return $r0;
    }

    public static net.sourceforge.plantuml.command.regex.RegexLeaf end()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0;

        $r0 = <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf END>;

        return $r0;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf r0;
        java.lang.String r1, r2;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: int count> = -1;

        r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern> = r1;

        r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String name> = r2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9;
        net.sourceforge.plantuml.command.regex.RegexLeaf r1;
        java.lang.String $r2, $r5, $r8, $r10;

        r1 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String name>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r1.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String getName()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getPattern()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        return $r1;
    }

    public int count()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf r0;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.Pattern2 $r2;
        net.sourceforge.plantuml.command.regex.Matcher2 $r3;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        $i0 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: int count>;

        if $i0 != -1 goto label1;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $r2 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>($r1);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>("");

        $i2 = virtualinvoke $r3.<net.sourceforge.plantuml.command.regex.Matcher2: int groupCount()>();

        r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: int count> = $i2;

     label1:
        $i1 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: int count>;

        return $i1;
    }

    public java.util.Map createPartialMatch(java.util.Iterator)
    {
        net.sourceforge.plantuml.command.regex.RegexPartialMatch $r0;
        net.sourceforge.plantuml.command.regex.RegexLeaf r1;
        java.lang.String $r2, $r4, $r5, r10;
        int $i0, i1;
        java.util.Map $r6, $r7;
        java.util.Iterator r8;
        java.lang.Object $r9;

        r1 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        r8 := @parameter0: java.util.Iterator;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexPartialMatch;

        $r2 = r1.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String name>;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: void <init>(java.lang.String)>($r2);

        i1 = 0;

     label1:
        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexLeaf: int count()>();

        if i1 >= $i0 goto label2;

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r9;

        virtualinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: void add(java.lang.String)>(r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r1.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String name>;

        if $r4 != null goto label3;

        $r7 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r7;

     label3:
        $r5 = r1.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String name>;

        $r6 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>($r5, $r0);

        return $r6;
    }

    public boolean match(net.sourceforge.plantuml.StringLocated)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.command.regex.RegexLeaf r1;
        net.sourceforge.plantuml.StringLocated r2;

        r1 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        r2 := @parameter0: net.sourceforge.plantuml.StringLocated;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public net.sourceforge.plantuml.command.regex.RegexResult matcher(java.lang.String)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.command.regex.RegexLeaf r1;
        java.lang.String r2;

        r1 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private static long getSignatureP3(java.lang.String)
    {
        java.util.StringTokenizer $r0;
        java.lang.String r1, r3, $r4;
        boolean $z0, $z1;
        long l0, l3;
        int $i1, $i2;

        r1 := @parameter0: java.lang.String;

        l3 = -1L;

        $r0 = new java.util.StringTokenizer;

        specialinvoke $r0.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, "()|");

     label1:
        $z0 = virtualinvoke $r0.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label4;

        r3 = virtualinvoke $r0.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean endsWith(java.lang.String)>("?");

        if $z1 == 0 goto label2;

        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        $i2 = $i1 - 2;

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        goto label3;

     label2:
        $r4 = r3;

     label3:
        l0 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>($r4);

        l3 = l3 & l0;

        goto label1;

     label4:
        return l3;
    }

    public long getFoxSignatureNone()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf r0;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        return 0L;
    }

    public long getFoxSignature()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf r0;
        java.lang.String $r1, $r4, $r7, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28;
        java.util.regex.Pattern $r2, $r5, $r8;
        java.util.regex.Matcher $r3, $r6, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        int $i0, $i9, $i10;
        long $l1, $l2, $l3, $l4, $l5, $l7, $l8, $l11, $l12;
        char $c6;

        r0 := @this: net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r2 = <net.sourceforge.plantuml.command.regex.RegexLeaf: java.util.regex.Pattern p1>;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label01;

        $r27 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $l12 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>($r27);

        return $l12;

     label01:
        $r5 = <net.sourceforge.plantuml.command.regex.RegexLeaf: java.util.regex.Pattern p2>;

        $r4 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $z1 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z1 == 0 goto label02;

        $r25 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $r24 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $i9 = virtualinvoke $r24.<java.lang.String: int length()>();

        $i10 = $i9 - 2;

        $r26 = virtualinvoke $r25.<java.lang.String: java.lang.String substring(int,int)>(0, $i10);

        $l11 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>($r26);

        return $l11;

     label02:
        $r8 = <net.sourceforge.plantuml.command.regex.RegexLeaf: java.util.regex.Pattern p3>;

        $r7 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $r9 = virtualinvoke $r8.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r7);

        $z2 = virtualinvoke $r9.<java.util.regex.Matcher: boolean matches()>();

        if $z2 == 0 goto label03;

        $r23 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $l8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: long getSignatureP3(java.lang.String)>($r23);

        return $l8;

     label03:
        $r10 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $i0 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i0 != 2 goto label04;

        $r19 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z11 = virtualinvoke $r19.<java.lang.String: boolean startsWith(java.lang.String)>("\\");

        if $z11 == 0 goto label04;

        $r20 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $c6 = virtualinvoke $r20.<java.lang.String: char charAt(int)>(1);

        $z12 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c6);

        if $z12 != 0 goto label04;

        $r21 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String substring(int)>(1);

        $l7 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>($r22);

        return $l7;

     label04:
        $r28 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z13 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("\\<\\>");

        if $z13 != 0 goto label05;

        $r11 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("(\\<\\<.*\\>\\>)");

        if $z3 == 0 goto label06;

     label05:
        $l1 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>("<>");

        return $l1;

     label06:
        $r12 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("\\<-\\>");

        if $z4 == 0 goto label07;

        $l5 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>("<->");

        return $l5;

     label07:
        $r13 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("(-+)");

        if $z5 == 0 goto label08;

        $l4 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>("-");

        return $l4;

     label08:
        $r14 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("\\|+");

        if $z6 != 0 goto label09;

        $r15 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("\\|\\|");

        if $z7 == 0 goto label10;

     label09:
        $l2 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>("|");

        return $l2;

     label10:
        $r16 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z8 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>("([*]+)");

        if $z8 == 0 goto label11;

        $l3 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>("*");

        return $l3;

     label11:
        $r17 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z9 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("[%s]+");

        if $z9 != 0 goto label12;

        $r18 = r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: java.lang.String pattern>;

        $z10 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("[%s]*");

        if $z10 == 0 goto label13;

     label12:
        return 0L;

     label13:
        return 0L;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.command.regex.RegexLeaf $r0, $r1;
        java.util.HashSet $r2;
        java.util.regex.Pattern $r3, $r4, $r5;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("$");

        <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf END> = $r0;

        $r1 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r1.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("^");

        <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf START> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        <net.sourceforge.plantuml.command.regex.RegexLeaf: java.util.Set UNKNOWN> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[-0A-Za-z_!:@;/=,\"]+$");

        <net.sourceforge.plantuml.command.regex.RegexLeaf: java.util.regex.Pattern p1> = $r3;

        $r4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[-0A-Za-z_!:@;/=,\"]+\\?$");

        <net.sourceforge.plantuml.command.regex.RegexLeaf: java.util.regex.Pattern p2> = $r4;

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^\\(?[-0A-Za-z_!:@;/=\" ]+\\??(\\|[-0A-Za-z_!:@;/=,\" ]+\\??)+\\)?$");

        <net.sourceforge.plantuml.command.regex.RegexLeaf: java.util.regex.Pattern p3> = $r5;

        return;
    }
}
