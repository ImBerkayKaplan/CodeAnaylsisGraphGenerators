public class net.sourceforge.plantuml.eggs.PSystemPathFactory extends net.sourceforge.plantuml.command.PSystemSingleLineFactory
{
    private static final net.sourceforge.plantuml.command.regex.Pattern2 p;

    public void <init>()
    {
        net.sourceforge.plantuml.eggs.PSystemPathFactory r0;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemPathFactory;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemSingleLineFactory: void <init>()>();

        return;
    }

    protected net.sourceforge.plantuml.AbstractPSystem executeLine(net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        java.lang.String r0, $r5;
        net.sourceforge.plantuml.command.regex.Pattern2 $r1;
        net.sourceforge.plantuml.command.regex.Matcher2 r2;
        boolean $z0;
        net.sourceforge.plantuml.eggs.PSystemPath $r3;
        net.sourceforge.plantuml.core.UmlSource r4;
        net.sourceforge.plantuml.eggs.PSystemPathFactory r6;

        r6 := @this: net.sourceforge.plantuml.eggs.PSystemPathFactory;

        r4 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r0 := @parameter1: java.lang.String;

        $r1 = <net.sourceforge.plantuml.eggs.PSystemPathFactory: net.sourceforge.plantuml.command.regex.Pattern2 p>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = new net.sourceforge.plantuml.eggs.PSystemPath;

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        specialinvoke $r3.<net.sourceforge.plantuml.eggs.PSystemPath: void <init>(net.sourceforge.plantuml.core.UmlSource,java.lang.String)>(r4, $r5);

        return $r3;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.command.regex.Pattern2 $r0;

        $r0 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("^path[%s]+([0-9A-Za-z]+)$");

        <net.sourceforge.plantuml.eggs.PSystemPathFactory: net.sourceforge.plantuml.command.regex.Pattern2 p> = $r0;

        return;
    }
}
