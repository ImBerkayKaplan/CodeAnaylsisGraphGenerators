class net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending extends java.lang.Object
{
    final double x1;
    double x2;
    final net.sourceforge.plantuml.ugraphic.color.HColor color;
    final net.sourceforge.plantuml.project.draw.TimeHeaderSimple this$0;

    void <init>(net.sourceforge.plantuml.project.draw.TimeHeaderSimple, net.sourceforge.plantuml.ugraphic.color.HColor, double, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending r0;
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending;

        r1 := @parameter0: net.sourceforge.plantuml.project.draw.TimeHeaderSimple;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: net.sourceforge.plantuml.project.draw.TimeHeaderSimple this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: double x1> = d0;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: double x2> = d1;

        r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: net.sourceforge.plantuml.ugraphic.color.HColor color> = r2;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.project.draw.TimeHeaderSimple $r3;
        net.sourceforge.plantuml.ugraphic.UBackground $r4;
        double d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        $r3 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: net.sourceforge.plantuml.project.draw.TimeHeaderSimple this$0>;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        $r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $d2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: double x1>;

        $d1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple$Pending: double x2>;

        virtualinvoke $r3.<net.sourceforge.plantuml.project.draw.TimeHeaderSimple: void drawRectangle(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>($r5, d0, $d2, $d1);

        return;
    }
}
