public class net.sourceforge.plantuml.tim.TFunctionArgument extends java.lang.Object
{
    private final java.lang.String name;
    private final net.sourceforge.plantuml.tim.expression.TValue def;

    public void <init>(java.lang.String, net.sourceforge.plantuml.tim.expression.TValue)
    {
        net.sourceforge.plantuml.tim.TFunctionArgument r0;
        java.lang.String r1;
        net.sourceforge.plantuml.tim.expression.TValue r2;

        r0 := @this: net.sourceforge.plantuml.tim.TFunctionArgument;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.tim.expression.TValue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.tim.TFunctionArgument: java.lang.String name> = r1;

        r0.<net.sourceforge.plantuml.tim.TFunctionArgument: net.sourceforge.plantuml.tim.expression.TValue def> = r2;

        return;
    }

    public final java.lang.String getName()
    {
        net.sourceforge.plantuml.tim.TFunctionArgument r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.tim.TFunctionArgument;

        $r1 = r0.<net.sourceforge.plantuml.tim.TFunctionArgument: java.lang.String name>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        net.sourceforge.plantuml.tim.TFunctionArgument r2;
        java.lang.String $r3, $r5;

        r2 := @this: net.sourceforge.plantuml.tim.TFunctionArgument;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ARG:");

        $r3 = r2.<net.sourceforge.plantuml.tim.TFunctionArgument: java.lang.String name>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public final net.sourceforge.plantuml.tim.expression.TValue getOptionalDefaultValue()
    {
        net.sourceforge.plantuml.tim.TFunctionArgument r0;
        net.sourceforge.plantuml.tim.expression.TValue $r1;

        r0 := @this: net.sourceforge.plantuml.tim.TFunctionArgument;

        $r1 = r0.<net.sourceforge.plantuml.tim.TFunctionArgument: net.sourceforge.plantuml.tim.expression.TValue def>;

        return $r1;
    }
}
