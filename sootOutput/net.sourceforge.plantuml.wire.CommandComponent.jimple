public class net.sourceforge.plantuml.wire.CommandComponent extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.wire.CommandComponent r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.wire.CommandComponent;

        $r1 = staticinvoke <net.sourceforge.plantuml.wire.CommandComponent: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(boolean,net.sourceforge.plantuml.command.regex.IRegex)>(0, $r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r10, $r19;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23;
        net.sourceforge.plantuml.command.regex.RegexOptional $r8, $r17;
        net.sourceforge.plantuml.command.regex.RegexConcat $r9, $r18, $r24;

        $r0 = class "Lnet/sourceforge/plantuml/wire/CommandComponent;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[9];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("INDENT", "([\\s\\t]*)");

        $r2[1] = $r4;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\*");

        $r2[2] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[3] = $r6;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NAME", "([\\w]+)");

        $r2[4] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r10 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[6];

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r10[0] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\[");

        $r10[1] = $r12;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("WIDTH", "([\\d]+)");

        $r10[2] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("[x*]");

        $r10[3] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("HEIGHT", "([\\d]+)");

        $r10[4] = $r15;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\]");

        $r10[5] = $r16;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r10);

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r9);

        $r2[5] = $r8;

        $r17 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r18 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r19 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r19[0] = $r20;

        $r21 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r21.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("COLOR", "(#\\w+)?");

        $r19[1] = $r21;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r19);

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r18);

        $r2[6] = $r17;

        $r22 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[7] = $r22;

        $r23 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[8] = $r23;

        $r24 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r24;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.wire.WireDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, r3, r4, r5;
        net.sourceforge.plantuml.wire.WireDiagram r6;
        net.sourceforge.plantuml.command.CommandExecutionResult $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r8;
        net.sourceforge.plantuml.ISkinParam $r9;
        net.sourceforge.plantuml.api.ThemeStyle $r10;
        net.sourceforge.plantuml.wire.CommandComponent r11;
        net.sourceforge.plantuml.LineLocation r12;
        int i0, i1;
        net.sourceforge.plantuml.ugraphic.color.HColor r13;

        r11 := @this: net.sourceforge.plantuml.wire.CommandComponent;

        r6 := @parameter0: net.sourceforge.plantuml.wire.WireDiagram;

        r12 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("INDENT", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("NAME", 0);

        i0 = 0;

        i1 = 0;

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("WIDTH", 0);

        r4 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("HEIGHT", 0);

        if r3 == null goto label1;

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

     label1:
        r5 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("COLOR", 0);

        r13 = null;

        if r5 == null goto label2;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        $r9 = virtualinvoke r6.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r13 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r10, r5);

     label2:
        $r7 = virtualinvoke r6.<net.sourceforge.plantuml.wire.WireDiagram: net.sourceforge.plantuml.command.CommandExecutionResult addComponent(java.lang.String,java.lang.String,int,int,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r2, i0, i1, r13);

        return $r7;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.wire.CommandComponent r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.wire.WireDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.wire.CommandComponent;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.wire.WireDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.wire.CommandComponent: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.wire.WireDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
