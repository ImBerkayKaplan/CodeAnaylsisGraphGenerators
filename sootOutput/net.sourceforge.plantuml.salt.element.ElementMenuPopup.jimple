public class net.sourceforge.plantuml.salt.element.ElementMenuPopup extends net.sourceforge.plantuml.salt.element.AbstractElement
{
    private final java.util.Collection entries;
    private final net.sourceforge.plantuml.ugraphic.UFont font;
    private final net.sourceforge.plantuml.ISkinSimple spriteContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.element.ElementMenuPopup r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.ugraphic.UFont r2;
        net.sourceforge.plantuml.ISkinSimple r3;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuPopup;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        r3 := @parameter1: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: java.util.Collection entries> = $r1;

        r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: net.sourceforge.plantuml.ugraphic.UFont font> = r2;

        r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: net.sourceforge.plantuml.ISkinSimple spriteContainer> = r3;

        return;
    }

    public void addEntry(java.lang.String)
    {
        net.sourceforge.plantuml.salt.element.ElementMenuPopup r0;
        net.sourceforge.plantuml.salt.element.ElementMenuEntry $r1;
        java.lang.String r2;
        net.sourceforge.plantuml.ISkinSimple $r3;
        net.sourceforge.plantuml.ugraphic.UFont $r4;
        java.util.Collection $r5;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuPopup;

        r2 := @parameter0: java.lang.String;

        $r5 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: java.util.Collection entries>;

        $r1 = new net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        $r4 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: net.sourceforge.plantuml.ugraphic.UFont font>;

        $r3 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: net.sourceforge.plantuml.ISkinSimple spriteContainer>;

        specialinvoke $r1.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: void <init>(java.lang.String,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ISkinSimple)>(r2, $r4, $r3);

        interfaceinvoke $r5.<java.util.Collection: boolean add(java.lang.Object)>($r1);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder, double, double)
    {
        net.sourceforge.plantuml.salt.element.ElementMenuPopup r0;
        java.util.Collection $r1;
        java.util.Iterator r2;
        boolean $z0;
        net.sourceforge.plantuml.Dimension2DDouble $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r5;
        net.sourceforge.plantuml.graphic.StringBounder r6;
        double d0, d1, $d2, $d3, d4, d5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuPopup;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d4 = 0.0;

        d5 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: java.util.Collection entries>;

        r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.salt.element.ElementMenuEntry) $r4;

        r7 = virtualinvoke r5.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder,double,double)>(r6, d0, d1);

        $d2 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d4 = staticinvoke <java.lang.Math: double max(double,double)>(d4, $d2);

        $d3 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d5 = d5 + $d3;

        goto label1;

     label2:
        $r3 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r3.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d4, d5);

        return $r3;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, int, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        int i0;
        net.sourceforge.plantuml.salt.element.ElementMenuPopup r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2;
        net.sourceforge.plantuml.ugraphic.UBackground $r3;
        net.sourceforge.plantuml.ugraphic.UGraphic $r4, $r15, $r17, r19, r20;
        net.sourceforge.plantuml.ugraphic.URectangle $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6, $r12;
        double $d0, $d1, d2, $d3, $d4, $d5, d6;
        java.util.Collection $r7;
        java.util.Iterator r8;
        boolean $z0, $z1;
        java.lang.Object $r9;
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r10;
        net.sourceforge.plantuml.graphic.StringBounder $r11;
        java.lang.String $r13;
        net.sourceforge.plantuml.ugraphic.UTranslate $r14, $r16;
        net.sourceforge.plantuml.ugraphic.ULine $r18;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuPopup;

        r19 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter1: int;

        r6 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        if i0 == 1 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        r20 = interfaceinvoke r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: net.sourceforge.plantuml.ugraphic.color.HColor getColorDD()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r4 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        d6 = 0.0;

        $r7 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuPopup: java.util.Collection entries>;

        r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (net.sourceforge.plantuml.salt.element.ElementMenuEntry) $r9;

        $r11 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r12 = virtualinvoke r10.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder,double,double)>($r11, 0.0, d6);

        d2 = virtualinvoke $r12.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r13 = virtualinvoke r10.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: java.lang.String getText()>();

        $z1 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z1 == 0 goto label3;

        $d3 = d2 / 2.0;

        $d4 = d6 + $d3;

        $r16 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d4);

        $r17 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        $d5 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d5);

        interfaceinvoke $r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r18);

        goto label4;

     label3:
        $r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d6);

        $r15 = interfaceinvoke r20.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        virtualinvoke r10.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,int,net.sourceforge.plantuml.awt.geom.Dimension2D)>($r15, i0, r6);

     label4:
        d6 = d6 + d2;

        goto label2;

     label5:
        return;
    }
}
