abstract class net.sourceforge.plantuml.creole.command.CommandCreoleCache extends java.lang.Object implements net.sourceforge.plantuml.creole.command.Command
{
    private static final java.util.Map cache;
    protected final net.sourceforge.plantuml.command.regex.Pattern2 mypattern;

    protected void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleCache r0;
        java.lang.String r1;
        java.util.Map $r2, $r4;
        java.lang.Object $r3;
        net.sourceforge.plantuml.command.regex.Pattern2 r6;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleCache;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <net.sourceforge.plantuml.creole.command.CommandCreoleCache: java.util.Map cache>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (net.sourceforge.plantuml.command.regex.Pattern2) $r3;

        if r6 != null goto label1;

        r6 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>(r1);

        $r4 = <net.sourceforge.plantuml.creole.command.CommandCreoleCache: java.util.Map cache>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r6);

     label1:
        r0.<net.sourceforge.plantuml.creole.command.CommandCreoleCache: net.sourceforge.plantuml.command.regex.Pattern2 mypattern> = r6;

        return;
    }

    static void <clinit>()
    {
        java.util.concurrent.ConcurrentHashMap $r0;

        $r0 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        <net.sourceforge.plantuml.creole.command.CommandCreoleCache: java.util.Map cache> = $r0;

        return;
    }
}
