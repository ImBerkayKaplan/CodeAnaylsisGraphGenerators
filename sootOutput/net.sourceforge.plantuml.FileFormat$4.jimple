class net.sourceforge.plantuml.FileFormat$4 extends net.sourceforge.plantuml.graphic.StringBounderRaw
{
    final net.sourceforge.plantuml.TikzFontDistortion val$tikzFontDistortion;
    final net.sourceforge.plantuml.FileFormat this$0;

    void <init>(net.sourceforge.plantuml.FileFormat, net.sourceforge.plantuml.TikzFontDistortion)
    {
        net.sourceforge.plantuml.FileFormat$4 r0;
        net.sourceforge.plantuml.FileFormat r1;
        net.sourceforge.plantuml.TikzFontDistortion r2;

        r0 := @this: net.sourceforge.plantuml.FileFormat$4;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormat;

        r2 := @parameter1: net.sourceforge.plantuml.TikzFontDistortion;

        r0.<net.sourceforge.plantuml.FileFormat$4: net.sourceforge.plantuml.FileFormat this$0> = r1;

        r0.<net.sourceforge.plantuml.FileFormat$4: net.sourceforge.plantuml.TikzFontDistortion val$tikzFontDistortion> = r2;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.StringBounderRaw: void <init>()>();

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.FileFormat$4 r0;

        r0 := @this: net.sourceforge.plantuml.FileFormat$4;

        return "FileFormat::getTikzStringBounder";
    }

    protected net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimensionInternal(net.sourceforge.plantuml.ugraphic.UFont, java.lang.String)
    {
        net.sourceforge.plantuml.ugraphic.UFont r0, $r1, $r4, $r6;
        java.lang.String r2;
        net.sourceforge.plantuml.Dimension2DDouble r3, r5, r7, $r11;
        double $d0, $d1, $d2, $d3, d4, d5, d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16;
        net.sourceforge.plantuml.FileFormat$4 r8;
        net.sourceforge.plantuml.TikzFontDistortion $r9, $r10;

        r8 := @this: net.sourceforge.plantuml.FileFormat$4;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        r2 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont goTikz(int)>(-1);

        r3 = staticinvoke <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.Dimension2DDouble access$000(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r1, r2);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont goTikz(int)>(0);

        r5 = staticinvoke <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.Dimension2DDouble access$000(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r4, r2);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont goTikz(int)>(1);

        r7 = staticinvoke <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.Dimension2DDouble access$000(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>($r6, r2);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.Dimension2DDouble: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.Dimension2DDouble: double getWidth()>();

        $d2 = $d0 - $d1;

        $d3 = virtualinvoke r5.<net.sourceforge.plantuml.Dimension2DDouble: double getWidth()>();

        d4 = $d2 / $d3;

        $r9 = r8.<net.sourceforge.plantuml.FileFormat$4: net.sourceforge.plantuml.TikzFontDistortion val$tikzFontDistortion>;

        d5 = virtualinvoke $r9.<net.sourceforge.plantuml.TikzFontDistortion: double getDistortion()>();

        $r10 = r8.<net.sourceforge.plantuml.FileFormat$4: net.sourceforge.plantuml.TikzFontDistortion val$tikzFontDistortion>;

        d6 = virtualinvoke $r10.<net.sourceforge.plantuml.TikzFontDistortion: double getMagnify()>();

        $d7 = virtualinvoke r5.<net.sourceforge.plantuml.Dimension2DDouble: double getWidth()>();

        $d8 = virtualinvoke r3.<net.sourceforge.plantuml.Dimension2DDouble: double getWidth()>();

        $d9 = $d7 - $d8;

        $d10 = $d9 * d4;

        d11 = $d10 * d5;

        $d12 = virtualinvoke r3.<net.sourceforge.plantuml.Dimension2DDouble: double getWidth()>();

        $d13 = virtualinvoke r5.<net.sourceforge.plantuml.Dimension2DDouble: double getWidth()>();

        $d14 = d6 * $d13;

        $d15 = $d14 - d11;

        $d16 = staticinvoke <java.lang.Math: double max(double,double)>($d12, $d15);

        $r11 = virtualinvoke r5.<net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.Dimension2DDouble withWidth(double)>($d16);

        return $r11;
    }
}
