public final class net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink extends java.lang.Object implements net.sourceforge.plantuml.command.note.SingleMultiFactoryCommand
{

    public void <init>()
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink r0;

        r0 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private net.sourceforge.plantuml.command.regex.IRegex getRegexConcatSingleLine()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.Class $r1;
        java.lang.String $r2, $r5;
        net.sourceforge.plantuml.command.regex.IRegex[] $r6;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22;
        net.sourceforge.plantuml.graphic.color.ColorParser $r16;
        net.sourceforge.plantuml.command.regex.RegexConcat $r23;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink r24;

        r24 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lnet/sourceforge/plantuml/command/note/CommandFactoryNoteOnLink;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("single");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[15];

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r6[0] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("note");

        $r6[1] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r6[2] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(right|left|top|bottom)?");

        $r6[3] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r6[4] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("o[nf]");

        $r6[5] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r6[6] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("link");

        $r6[7] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r6[8] = $r15;

        $r16 = staticinvoke <net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r6[9] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r6[10] = $r18;

        $r19 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r19.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(":");

        $r6[11] = $r19;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r6[12] = $r20;

        $r21 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r21.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NOTE", "(.*)");

        $r6[13] = $r21;

        $r22 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r6[14] = $r22;

        $r23 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r5, $r6);

        return $r23;
    }

    private net.sourceforge.plantuml.command.regex.IRegex getRegexConcatMultiLine()
    {
        java.lang.StringBuilder $r0, $r3, $r4;
        java.lang.Class $r1;
        java.lang.String $r2, $r5;
        net.sourceforge.plantuml.command.regex.IRegex[] $r6;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18;
        net.sourceforge.plantuml.graphic.color.ColorParser $r16;
        net.sourceforge.plantuml.command.regex.RegexConcat $r19;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink r20;

        r20 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lnet/sourceforge/plantuml/command/note/CommandFactoryNoteOnLink;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multi");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[11];

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r6[0] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("note");

        $r6[1] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r6[2] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(right|left|top|bottom)?");

        $r6[3] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r6[4] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("o[nf]");

        $r6[5] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r6[6] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("link");

        $r6[7] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r6[8] = $r15;

        $r16 = staticinvoke <net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r6[9] = $r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r6[10] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r5, $r6);

        return $r19;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorParser color()
    {
        net.sourceforge.plantuml.graphic.color.ColorType $r0;
        net.sourceforge.plantuml.graphic.color.ColorParser $r1;

        $r0 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.ColorParser simpleColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r0);

        return $r1;
    }

    public net.sourceforge.plantuml.command.Command createMultiLine(boolean)
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink$1 $r0;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2;
        net.sourceforge.plantuml.command.MultilinesStrategy $r3;
        boolean z0;

        r1 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        z0 := @parameter0: boolean;

        $r0 = new net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink$1;

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.command.regex.IRegex getRegexConcatMultiLine()>();

        $r3 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy KEEP_STARTING_QUOTE>;

        specialinvoke $r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink$1: void <init>(net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink,net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy)>(r1, $r2, $r3);

        return $r0;
    }

    public net.sourceforge.plantuml.command.Command createSingleLine()
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink$2 $r0;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2;

        r1 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        $r0 = new net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink$2;

        $r2 = specialinvoke r1.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.command.regex.IRegex getRegexConcatSingleLine()>();

        specialinvoke $r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink$2: void <init>(net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink,net.sourceforge.plantuml.command.regex.IRegex)>(r1, $r2);

        return $r0;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeInternal(net.sourceforge.plantuml.cucadiagram.CucaDiagram, net.sourceforge.plantuml.command.BlocLines, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Link r1;
        net.sourceforge.plantuml.command.regex.RegexResult r2;
        java.lang.String $r3, $r4, $r15, $r17, $r18, $r19;
        net.sourceforge.plantuml.graphic.color.ColorParser $r5;
        net.sourceforge.plantuml.ISkinParam $r6, $r8, $r14;
        net.sourceforge.plantuml.api.ThemeStyle $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r9;
        net.sourceforge.plantuml.command.BlocLines r10;
        net.sourceforge.plantuml.cucadiagram.Display $r11;
        net.sourceforge.plantuml.command.CommandExecutionResult $r12, $r20;
        net.sourceforge.plantuml.UrlBuilder $r13;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r16;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink r21;
        net.sourceforge.plantuml.command.Position r22;
        net.sourceforge.plantuml.graphic.color.Colors r24;

        r21 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r10 := @parameter1: net.sourceforge.plantuml.command.BlocLines;

        r2 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.cucadiagram.Link getLastLink()>();

        if r1 != null goto label1;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("No link defined");

        return $r20;

     label1:
        r22 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM>;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("POSITION", 0);

        if $r3 == null goto label2;

        $r18 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("POSITION", 0);

        $r19 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goUpperCase(java.lang.String)>($r18);

        r22 = staticinvoke <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position valueOf(java.lang.String)>($r19);

     label2:
        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        if $r4 == null goto label3;

        $r13 = new net.sourceforge.plantuml.UrlBuilder;

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r16 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r13.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r15, $r16);

        $r17 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        virtualinvoke $r13.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>($r17);

     label3:
        $r5 = staticinvoke <net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r24 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r7, r2, $r9);

        $r11 = virtualinvoke r10.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Link: void addNote(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.command.Position,net.sourceforge.plantuml.graphic.color.Colors)>($r11, r22, r24);

        $r12 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r12;
    }

    static net.sourceforge.plantuml.command.CommandExecutionResult access$000(net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink, net.sourceforge.plantuml.cucadiagram.CucaDiagram, net.sourceforge.plantuml.command.BlocLines, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink r0;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r1;
        net.sourceforge.plantuml.command.BlocLines r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4;

        r0 := @parameter0: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r2 := @parameter2: net.sourceforge.plantuml.command.BlocLines;

        r3 := @parameter3: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnLink: net.sourceforge.plantuml.command.CommandExecutionResult executeInternal(net.sourceforge.plantuml.cucadiagram.CucaDiagram,net.sourceforge.plantuml.command.BlocLines,net.sourceforge.plantuml.command.regex.RegexResult)>(r1, r2, r3);

        return $r4;
    }
}
