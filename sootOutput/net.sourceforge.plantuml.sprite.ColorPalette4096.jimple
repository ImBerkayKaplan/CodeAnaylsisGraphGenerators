public class net.sourceforge.plantuml.sprite.ColorPalette4096 extends java.lang.Object
{
    private static final java.lang.String colorValue;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        net.sourceforge.plantuml.sprite.ColorPalette4096 r0;

        r0 := @this: net.sourceforge.plantuml.sprite.ColorPalette4096;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getStringFor(java.awt.Color)
    {
        net.sourceforge.plantuml.sprite.ColorPalette4096 r0;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r1;
        java.awt.Color r2;
        java.lang.String $r3;

        r0 := @this: net.sourceforge.plantuml.sprite.ColorPalette4096;

        r2 := @parameter0: java.awt.Color;

        $r1 = new net.sourceforge.plantuml.ugraphic.color.HColorSimple;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: void <init>(java.awt.Color,boolean)>(r2, 0);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.ColorPalette4096: java.lang.String getStringFor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r1);

        return $r3;
    }

    public java.lang.String getStringFor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.sprite.ColorPalette4096 r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r3, $r4;
        double d0, d1;
        byte $b0;
        int i1, i2;

        r0 := @this: net.sourceforge.plantuml.sprite.ColorPalette4096;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        i1 = 0;

        d1 = 1.7976931348623157E308;

        i2 = 0;

     label1:
        if i2 >= 4096 goto label3;

        $r3 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) r2;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.sprite.ColorPalette4096: net.sourceforge.plantuml.ugraphic.color.HColorSimple getHtmlColorSimpleFor(int)>(i2);

        d0 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: double distance(net.sourceforge.plantuml.ugraphic.color.HColorSimple)>($r4);

        $b0 = d0 cmpg d1;

        if $b0 >= 0 goto label2;

        i1 = i2;

        d1 = d0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.ColorPalette4096: java.lang.String encodeInt(int)>(i1);

        return $r1;
    }

    protected java.lang.String encodeInt(int)
    {
        int i0, i1, i2;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r3, $r5;
        java.lang.String $r2, $r4, $r6;
        char $c3, $c4;
        net.sourceforge.plantuml.sprite.ColorPalette4096 r7;
        java.lang.AssertionError $r8;

        r7 := @this: net.sourceforge.plantuml.sprite.ColorPalette4096;

        i0 := @parameter0: int;

        i1 = i0 % 64;

        i2 = i0 / 64;

        $z0 = <net.sourceforge.plantuml.sprite.ColorPalette4096: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i2 < 0 goto label1;

        if i2 > 63 goto label1;

        if i1 < 0 goto label1;

        if i1 <= 63 goto label2;

     label1:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r2 = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i2);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3);

        $r4 = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        $c4 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(i1);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColorSimple getHtmlColorSimpleFor(int)
    {
        net.sourceforge.plantuml.sprite.ColorPalette4096 r0;
        int i0;
        java.awt.Color $r1, r3;
        java.lang.Object $r2;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r4;

        r0 := @this: net.sourceforge.plantuml.sprite.ColorPalette4096;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.sprite.ColorPalette4096: java.awt.Color getColorFor(int)>(i0);

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>($r1);

        r3 = (java.awt.Color) $r2;

        $r4 = new net.sourceforge.plantuml.ugraphic.color.HColorSimple;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: void <init>(java.awt.Color,boolean)>(r3, 0);

        return $r4;
    }

    public java.awt.Color getColorFor(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        int $i0, i2, i4, $i5, i6;
        char $c1, $c3;
        net.sourceforge.plantuml.sprite.ColorPalette4096 r3;
        java.awt.Color $r4;
        java.lang.IllegalArgumentException $r5;

        r3 := @this: net.sourceforge.plantuml.sprite.ColorPalette4096;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r1 = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        i2 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c1);

        if i2 != -1 goto label2;

        return null;

     label2:
        $r2 = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        i4 = virtualinvoke $r2.<java.lang.String: int indexOf(int)>($c3);

        if i4 != -1 goto label3;

        return null;

     label3:
        $i5 = i2 * 64;

        i6 = $i5 + i4;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.sprite.ColorPalette4096: java.awt.Color getColorFor(int)>(i6);

        return $r4;
    }

    protected java.awt.Color getColorFor(int)
    {
        int i0, i1, $i2, i3, $i4, i5, $i6, $i7, $i8;
        java.awt.Color $r0;
        net.sourceforge.plantuml.sprite.ColorPalette4096 r1;

        r1 := @this: net.sourceforge.plantuml.sprite.ColorPalette4096;

        i0 := @parameter0: int;

        i1 = i0 % 16;

        $i2 = i0 / 16;

        i3 = $i2 % 16;

        $i4 = i0 / 256;

        i5 = $i4 % 16;

        $r0 = new java.awt.Color;

        $i6 = specialinvoke r1.<net.sourceforge.plantuml.sprite.ColorPalette4096: int dup(int)>(i5);

        $i7 = specialinvoke r1.<net.sourceforge.plantuml.sprite.ColorPalette4096: int dup(int)>(i3);

        $i8 = specialinvoke r1.<net.sourceforge.plantuml.sprite.ColorPalette4096: int dup(int)>(i1);

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int)>($i6, $i7, $i8);

        return $r0;
    }

    private int dup(int)
    {
        boolean $z0;
        int i0, $i1, $i2;
        java.lang.AssertionError $r0;
        net.sourceforge.plantuml.sprite.ColorPalette4096 r1;

        r1 := @this: net.sourceforge.plantuml.sprite.ColorPalette4096;

        i0 := @parameter0: int;

        $z0 = <net.sourceforge.plantuml.sprite.ColorPalette4096: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if i0 < 0 goto label1;

        if i0 <= 15 goto label2;

     label1:
        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label2:
        $i1 = i0 * 16;

        $i2 = $i1 + i0;

        return $i2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <net.sourceforge.plantuml.sprite.ColorPalette4096: java.lang.String colorValue> = "!#$%&*+-:;<=>?@^_~GHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";

        $r0 = class "Lnet/sourceforge/plantuml/sprite/ColorPalette4096;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.sprite.ColorPalette4096: boolean $assertionsDisabled> = $z1;

        return;
    }
}
