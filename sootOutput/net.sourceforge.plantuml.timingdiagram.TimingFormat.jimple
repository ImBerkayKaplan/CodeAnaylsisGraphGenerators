public final enum class net.sourceforge.plantuml.timingdiagram.TimingFormat extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.timingdiagram.TimingFormat DECIMAL;
    public static final enum net.sourceforge.plantuml.timingdiagram.TimingFormat HOUR;
    public static final enum net.sourceforge.plantuml.timingdiagram.TimingFormat DATE;
    private static final java.util.TimeZone GMT;
    private static final java.util.GregorianCalendar gc;
    private static final net.sourceforge.plantuml.timingdiagram.TimingFormat[] $VALUES;

    public static net.sourceforge.plantuml.timingdiagram.TimingFormat[] values()
    {
        net.sourceforge.plantuml.timingdiagram.TimingFormat[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.timingdiagram.TimingFormat[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.timingdiagram.TimingFormat valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/timingdiagram/TimingFormat;", r0);

        $r2 = (net.sourceforge.plantuml.timingdiagram.TimingFormat) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.timingdiagram.TimingFormat r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingFormat;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public java.lang.String formatTime(java.math.BigDecimal)
    {
        net.sourceforge.plantuml.timingdiagram.TimingFormat r0, $r1, $r4;
        java.math.BigDecimal r2;
        long $l0;
        java.lang.String $r3, $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingFormat;

        r2 := @parameter0: java.math.BigDecimal;

        $r1 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat HOUR>;

        if r0 == $r1 goto label1;

        $r4 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DATE>;

        if r0 != $r4 goto label2;

     label1:
        $l0 = virtualinvoke r2.<java.math.BigDecimal: long longValueExact()>();

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimingFormat: java.lang.String formatTime(long)>($l0);

        return $r3;

     label2:
        $r5 = virtualinvoke r2.<java.math.BigDecimal: java.lang.String toPlainString()>();

        return $r5;
    }

    public java.lang.String formatTime(long)
    {
        net.sourceforge.plantuml.timingdiagram.TimingFormat r0, $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        long l0, $l1, $l4, $l6;
        java.lang.String $r6, $r16, $r21;
        java.util.GregorianCalendar $r7, $r9, $r10, $r11, $r12;
        int $i2, $i3, $i5, i7, i8, i9, i11, i12;
        java.lang.Object[] $r13, $r17;
        java.lang.Integer $r14, $r15, $r18, $r19, $r20;
        java.lang.Throwable $r22;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimingFormat;

        l0 := @parameter0: long;

        $r1 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat HOUR>;

        if r0 != $r1 goto label1;

        $i3 = (int) l0;

        i7 = $i3 % 60;

        $l4 = l0 / 60L;

        $i5 = (int) $l4;

        i8 = $i5 % 60;

        $l6 = l0 / 3600L;

        i9 = (int) $l6;

        $r17 = newarray (java.lang.Object)[3];

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i9);

        $r17[0] = $r18;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i8);

        $r17[1] = $r19;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r17[2] = $r20;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d:%02d:%02d", $r17);

        return $r21;

     label1:
        $r2 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DATE>;

        if r0 != $r2 goto label7;

        $r7 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        entermonitor $r7;

     label2:
        $r9 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        $l1 = l0 * 1000L;

        virtualinvoke $r9.<java.util.GregorianCalendar: void setTimeInMillis(long)>($l1);

        $r10 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        virtualinvoke $r10.<java.util.GregorianCalendar: int get(int)>(1);

        $r11 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        $i2 = virtualinvoke $r11.<java.util.GregorianCalendar: int get(int)>(2);

        i11 = $i2 + 1;

        $r12 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        i12 = virtualinvoke $r12.<java.util.GregorianCalendar: int get(int)>(5);

        exitmonitor $r7;

     label3:
        goto label6;

     label4:
        $r22 := @caughtexception;

        exitmonitor $r7;

     label5:
        throw $r22;

     label6:
        $r13 = newarray (java.lang.Object)[2];

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        $r13[0] = $r14;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i12);

        $r13[1] = $r15;

        $r16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%02d/%02d", $r13);

        return $r16;

     label7:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static net.sourceforge.plantuml.timingdiagram.TimeTick createDate(int, int, int)
    {
        java.util.GregorianCalendar $r0, $r2, $r3, $r4;
        int i0, i1, i2, $i3;
        long $l4, l5;
        net.sourceforge.plantuml.timingdiagram.TimeTick $r5;
        java.math.BigDecimal $r6;
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r7;
        java.lang.Throwable $r8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r0 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        entermonitor $r0;

     label1:
        $r2 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        virtualinvoke $r2.<java.util.GregorianCalendar: void setTimeInMillis(long)>(0L);

        $r3 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        $i3 = i1 - 1;

        virtualinvoke $r3.<java.util.GregorianCalendar: void set(int,int,int)>(i0, $i3, i2);

        $r4 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc>;

        $l4 = virtualinvoke $r4.<java.util.GregorianCalendar: long getTimeInMillis()>();

        l5 = $l4 / 1000L;

        exitmonitor $r0;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r0;

     label4:
        throw $r8;

     label5:
        $r5 = new net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r6 = new java.math.BigDecimal;

        specialinvoke $r6.<java.math.BigDecimal: void <init>(long)>(l5);

        $r7 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DATE>;

        specialinvoke $r5.<net.sourceforge.plantuml.timingdiagram.TimeTick: void <init>(java.math.BigDecimal,net.sourceforge.plantuml.timingdiagram.TimingFormat)>($r6, $r7);

        return $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static net.sourceforge.plantuml.timingdiagram.TimingFormat[] $values()
    {
        net.sourceforge.plantuml.timingdiagram.TimingFormat[] $r0;
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r1, $r2, $r3;

        $r0 = newarray (net.sourceforge.plantuml.timingdiagram.TimingFormat)[3];

        $r1 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DECIMAL>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat HOUR>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DATE>;

        $r0[2] = $r3;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r0, $r1, $r2;
        net.sourceforge.plantuml.timingdiagram.TimingFormat[] $r3;
        java.util.TimeZone $r4, $r6;
        java.util.GregorianCalendar $r5;

        $r0 = new net.sourceforge.plantuml.timingdiagram.TimingFormat;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.TimingFormat: void <init>(java.lang.String,int)>("DECIMAL", 0);

        <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DECIMAL> = $r0;

        $r1 = new net.sourceforge.plantuml.timingdiagram.TimingFormat;

        specialinvoke $r1.<net.sourceforge.plantuml.timingdiagram.TimingFormat: void <init>(java.lang.String,int)>("HOUR", 1);

        <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat HOUR> = $r1;

        $r2 = new net.sourceforge.plantuml.timingdiagram.TimingFormat;

        specialinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingFormat: void <init>(java.lang.String,int)>("DATE", 2);

        <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat DATE> = $r2;

        $r3 = staticinvoke <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat[] $values()>();

        <net.sourceforge.plantuml.timingdiagram.TimingFormat: net.sourceforge.plantuml.timingdiagram.TimingFormat[] $VALUES> = $r3;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.TimeZone GMT> = $r4;

        $r5 = new java.util.GregorianCalendar;

        $r6 = <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.TimeZone GMT>;

        specialinvoke $r5.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r6);

        <net.sourceforge.plantuml.timingdiagram.TimingFormat: java.util.GregorianCalendar gc> = $r5;

        return;
    }
}
