public class net.sourceforge.plantuml.tim.stdlib.Lighten extends net.sourceforge.plantuml.tim.stdlib.SimpleReturnFunction
{

    public void <init>()
    {
        net.sourceforge.plantuml.tim.stdlib.Lighten r0;

        r0 := @this: net.sourceforge.plantuml.tim.stdlib.Lighten;

        specialinvoke r0.<net.sourceforge.plantuml.tim.stdlib.SimpleReturnFunction: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.tim.TFunctionSignature getSignature()
    {
        net.sourceforge.plantuml.tim.TFunctionSignature $r0;
        net.sourceforge.plantuml.tim.stdlib.Lighten r1;

        r1 := @this: net.sourceforge.plantuml.tim.stdlib.Lighten;

        $r0 = new net.sourceforge.plantuml.tim.TFunctionSignature;

        specialinvoke $r0.<net.sourceforge.plantuml.tim.TFunctionSignature: void <init>(java.lang.String,int)>("%lighten", 2);

        return $r0;
    }

    public boolean canCover(int, java.util.Set)
    {
        int i0;
        net.sourceforge.plantuml.tim.stdlib.Lighten r0;
        java.util.Set r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.tim.stdlib.Lighten;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Set;

        if i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.tim.expression.TValue executeReturnFunction(net.sourceforge.plantuml.tim.TContext, net.sourceforge.plantuml.tim.TMemory, net.sourceforge.plantuml.LineLocation, java.util.List, java.util.Map) throws net.sourceforge.plantuml.tim.EaterException, net.sourceforge.plantuml.tim.EaterExceptionLocated
    {
        java.util.List r0;
        java.lang.Object $r1, $r4;
        net.sourceforge.plantuml.tim.expression.TValue $r2, $r5, $r8;
        java.lang.String r3, $r7;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r6;
        net.sourceforge.plantuml.ugraphic.color.NoSuchColorException $r9;
        net.sourceforge.plantuml.tim.EaterException $r10;
        net.sourceforge.plantuml.tim.stdlib.Lighten r11;
        net.sourceforge.plantuml.tim.TContext r12;
        net.sourceforge.plantuml.tim.TMemory r13;
        net.sourceforge.plantuml.LineLocation r14;
        java.util.Map r15;
        net.sourceforge.plantuml.ugraphic.color.HColor r16, r17;

        r11 := @this: net.sourceforge.plantuml.tim.stdlib.Lighten;

        r12 := @parameter0: net.sourceforge.plantuml.tim.TContext;

        r13 := @parameter1: net.sourceforge.plantuml.tim.TMemory;

        r14 := @parameter2: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter3: java.util.List;

        r15 := @parameter4: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r2 = (net.sourceforge.plantuml.tim.expression.TValue) $r1;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.tim.expression.TValue: java.lang.String toString()>();

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(1);

        $r5 = (net.sourceforge.plantuml.tim.expression.TValue) $r4;

        i0 = virtualinvoke $r5.<net.sourceforge.plantuml.tim.expression.TValue: int toInt()>();

     label1:
        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        r16 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorLEGACY(java.lang.String)>(r3);

        r17 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.color.HColor lighten(int)>(i0);

        $r7 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.color.HColor: java.lang.String asString()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.tim.expression.TValue: net.sourceforge.plantuml.tim.expression.TValue fromString(java.lang.String)>($r7);

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r10 = staticinvoke <net.sourceforge.plantuml.tim.EaterException: net.sourceforge.plantuml.tim.EaterException located(java.lang.String)>("No such color");

        throw $r10;

        catch net.sourceforge.plantuml.ugraphic.color.NoSuchColorException from label1 to label2 with label3;
    }
}
