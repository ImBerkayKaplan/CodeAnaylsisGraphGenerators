class net.sourceforge.plantuml.graphic.TextBlockUtils$3 extends java.lang.Object implements net.sourceforge.plantuml.svek.TextBlockBackcolored
{
    final net.sourceforge.plantuml.graphic.TextBlock val$text;
    final net.sourceforge.plantuml.ugraphic.color.HColor val$backColor;

    void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$3 r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockUtils$3;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$3: net.sourceforge.plantuml.graphic.TextBlock val$text> = r1;

        r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$3: net.sourceforge.plantuml.ugraphic.color.HColor val$backColor> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$3 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockUtils$3;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$3: net.sourceforge.plantuml.graphic.TextBlock val$text>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$3 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.ugraphic.MinMax $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockUtils$3;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$3: net.sourceforge.plantuml.graphic.TextBlock val$text>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$3 r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.InnerStrategy r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4;
        java.awt.geom.Rectangle2D $r5;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockUtils$3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        $r4 = r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$3: net.sourceforge.plantuml.graphic.TextBlock val$text>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: java.awt.geom.Rectangle2D getInnerPosition(java.lang.String,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.InnerStrategy)>(r1, r2, r3);

        return $r5;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$3 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockUtils$3;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$3: net.sourceforge.plantuml.graphic.TextBlock val$text>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()
    {
        net.sourceforge.plantuml.graphic.TextBlockUtils$3 r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockUtils$3;

        $r1 = r0.<net.sourceforge.plantuml.graphic.TextBlockUtils$3: net.sourceforge.plantuml.ugraphic.color.HColor val$backColor>;

        return $r1;
    }
}
