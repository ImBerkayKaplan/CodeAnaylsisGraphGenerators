public class net.sourceforge.plantuml.svek.YDelta extends java.lang.Object implements net.sourceforge.plantuml.svek.Point2DFunction
{
    private final double delta;
    private final double factor;

    public void <init>(double)
    {
        net.sourceforge.plantuml.svek.YDelta r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.svek.YDelta;

        d0 := @parameter0: double;

        specialinvoke r0.<net.sourceforge.plantuml.svek.YDelta: void <init>(double,double)>(1.0, d0);

        return;
    }

    public void <init>(double, double)
    {
        net.sourceforge.plantuml.svek.YDelta r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.svek.YDelta;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.YDelta: double delta> = d0;

        r0.<net.sourceforge.plantuml.svek.YDelta: double factor> = d1;

        return;
    }

    public java.awt.geom.Point2D$Double apply(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D$Double $r0;
        java.awt.geom.Point2D r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.svek.YDelta r2;

        r2 := @this: net.sourceforge.plantuml.svek.YDelta;

        r1 := @parameter0: java.awt.geom.Point2D;

        $r0 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d2 = r2.<net.sourceforge.plantuml.svek.YDelta: double factor>;

        $d4 = $d1 * $d2;

        $d3 = r2.<net.sourceforge.plantuml.svek.YDelta: double delta>;

        $d5 = $d4 + $d3;

        specialinvoke $r0.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d5);

        return $r0;
    }
}
