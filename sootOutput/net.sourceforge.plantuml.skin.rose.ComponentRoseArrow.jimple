public class net.sourceforge.plantuml.skin.rose.ComponentRoseArrow extends net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow
{
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment messagePosition;
    private final boolean niceArrow;
    private final boolean belowForResponse;
    public static final double spaceCrossX;
    public static final double diamCircle;
    public static final double thinCircle;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.skin.ArrowConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.LineBreakStrategy, boolean, boolean)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        net.sourceforge.plantuml.graphic.FontConfiguration r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.skin.ArrowConfiguration r5;
        net.sourceforge.plantuml.ISkinSimple r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r7, r9;
        net.sourceforge.plantuml.LineBreakStrategy r8;
        boolean z0, z1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.FontConfiguration;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r5 := @parameter4: net.sourceforge.plantuml.skin.ArrowConfiguration;

        r9 := @parameter5: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r6 := @parameter6: net.sourceforge.plantuml.ISkinSimple;

        r7 := @parameter7: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r8 := @parameter8: net.sourceforge.plantuml.LineBreakStrategy;

        z0 := @parameter9: boolean;

        z1 := @parameter10: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.AbstractComponentRoseArrow: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.LineBreakStrategy)>(r1, r2, r3, r4, r5, r6, r7, r8);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.graphic.HorizontalAlignment messagePosition> = r9;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: boolean niceArrow> = z0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: boolean belowForResponse> = z1;

        return;
    }

    public void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r1, $r6, $r8, $r10, $r17, $r21, $r23, $r54, $r57, $r60;
        boolean $z0, $z1;
        net.sourceforge.plantuml.skin.Area r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r36, $r39;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5;
        net.sourceforge.plantuml.skin.ArrowDressing r7, r9;
        double $d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14, d15, d16, d17, d18, d19;
        net.sourceforge.plantuml.skin.ArrowDecoration $r11, $r12, $r18, $r22, $r55, $r56, $r58, $r59, $r61, $r62;
        net.sourceforge.plantuml.skin.ArrowHead $r13, $r14, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r67, $r68;
        net.sourceforge.plantuml.ugraphic.UTranslate $r15, $r19, $r25, $r70;
        net.sourceforge.plantuml.ugraphic.UGraphic $r16, $r20, $r24, $r26, r52, r53, $r71;
        net.sourceforge.plantuml.ugraphic.ULine $r27;
        net.sourceforge.plantuml.skin.ArrowDirection r28, $r33, $r34, $r37;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r29, $r30, $r31, $r32;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        net.sourceforge.plantuml.graphic.TextBlock $r35, $r38, $r69;
        net.sourceforge.plantuml.skin.ArrowPart $r63, $r64, $r65, $r66;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r52 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: net.sourceforge.plantuml.skin.Area;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isHidden()>();

        if $z0 == 0 goto label01;

        return;

     label01:
        r3 = virtualinvoke r2.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        r4 = interfaceinvoke r52.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColor getForegroundColor()>();

        r53 = interfaceinvoke r52.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        r7 = virtualinvoke $r6.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDressing getDressing1()>();

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDressing getDressing2()>();

        d13 = 0.0;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d14 = $d0 - 1.0;

        d1 = 0.0 + 1.0;

        d2 = d14 - 1.0;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration2()>();

        $r12 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        if $r11 != $r12 goto label02;

        $r50 = virtualinvoke r9.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r51 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NONE>;

        if $r50 != $r51 goto label02;

        d14 = d14 - 4.0;

     label02:
        $r54 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r55 = virtualinvoke $r54.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration2()>();

        $r56 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        if $r55 != $r56 goto label03;

        $r48 = virtualinvoke r9.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r49 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NONE>;

        if $r48 == $r49 goto label03;

        d14 = d14 - 5.5;

     label03:
        $r57 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r58 = virtualinvoke $r57.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration1()>();

        $r59 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        if $r58 != $r59 goto label04;

        $r46 = virtualinvoke r7.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r47 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NONE>;

        if $r46 != $r47 goto label04;

        d13 = 0.0 + 4.0;

        d14 = d14 - 4.0;

     label04:
        $r60 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r61 = virtualinvoke $r60.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration1()>();

        $r62 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        if $r61 != $r62 goto label05;

        $r44 = virtualinvoke r7.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r45 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NORMAL>;

        if $r44 != $r45 goto label05;

        d13 = d13 + 9.5;

        d14 = d14 - 9.5;

     label05:
        $r63 = virtualinvoke r9.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        $r64 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart FULL>;

        if $r63 != $r64 goto label06;

        $r42 = virtualinvoke r9.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r43 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NORMAL>;

        if $r42 != $r43 goto label06;

        $i8 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i9 = $i8 / 2;

        $d12 = (double) $i9;

        d14 = d14 - $d12;

     label06:
        $r65 = virtualinvoke r7.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        $r66 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart FULL>;

        if $r65 != $r66 goto label07;

        $r40 = virtualinvoke r7.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r41 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NORMAL>;

        if $r40 != $r41 goto label07;

        $i4 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i5 = $i4 / 2;

        $d10 = (double) $i5;

        d13 = d13 + $d10;

        $i6 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i7 = $i6 / 2;

        $d11 = (double) $i7;

        d14 = d14 - $d11;

     label07:
        $r67 = virtualinvoke r9.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r68 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead CROSSX>;

        if $r67 != $r68 goto label08;

        d14 = d14 - 12.0;

     label08:
        $r13 = virtualinvoke r7.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r14 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead CROSSX>;

        if $r13 != $r14 goto label09;

        d13 = d13 + 12.0;

        d14 = d14 - 12.0;

     label09:
        $z1 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: boolean isBelowForResponse()>();

        if $z1 == 0 goto label10;

        d15 = 0.0;

        $i3 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getMarginY()>();

        d16 = (double) $i3;

        goto label11;

     label10:
        d15 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        d16 = 0.0;

     label11:
        $r15 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d15);

        $r16 = interfaceinvoke r53.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration1()>();

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: void drawDressing1(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.skin.ArrowDressing,net.sourceforge.plantuml.skin.ArrowDecoration)>($r16, d1, r7, $r18);

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d15);

        $r20 = interfaceinvoke r53.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        $r21 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDecoration getDecoration2()>();

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: void drawDressing2(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.skin.ArrowDressing,net.sourceforge.plantuml.skin.ArrowDecoration)>($r20, d2, r9, $r22);

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.UGraphic applyStroke(net.sourceforge.plantuml.ugraphic.UGraphic)>(r53);

        $r25 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r25.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d13, d15);

        $r26 = interfaceinvoke $r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r25);

        $r27 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(d14);

        interfaceinvoke $r26.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r27);

        r28 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowDirection getDirection2()>();

        $r30 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.graphic.HorizontalAlignment messagePosition>;

        $r29 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if $r30 != $r29 goto label12;

        $r38 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r39 = interfaceinvoke $r38.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        d17 = virtualinvoke $r39.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d8 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d9 = $d8 - d17;

        d18 = $d9 / 2.0;

        goto label19;

     label12:
        $r32 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.graphic.HorizontalAlignment messagePosition>;

        $r31 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if $r32 != $r31 goto label15;

        $r35 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r36 = interfaceinvoke $r35.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        d19 = virtualinvoke $r36.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = $d3 - d19;

        $i2 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getMarginX2()>();

        $d5 = (double) $i2;

        $d7 = $d4 - $d5;

        $r37 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        if r28 != $r37 goto label13;

        $i10 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        goto label14;

     label13:
        $i10 = 0;

     label14:
        $d6 = (double) $i10;

        d18 = $d7 - $d6;

        goto label19;

     label15:
        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getMarginX1()>();

        $r33 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        if r28 == $r33 goto label16;

        $r34 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection BOTH_DIRECTION>;

        if r28 != $r34 goto label17;

     label16:
        $i11 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        goto label18;

     label17:
        $i11 = 0;

     label18:
        $i1 = $i0 + $i11;

        d18 = (double) $i1;

     label19:
        $r69 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r70 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r70.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d18, d16);

        $r71 = interfaceinvoke r53.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r70);

        interfaceinvoke $r69.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r71);

        return;
    }

    public double getPosArrow(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        boolean $z0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: boolean isBelowForResponse()>();

        if $z0 == 0 goto label1;

        return 0.0;

     label1:
        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getMarginY()>();

        $i1 = 2 * $i0;

        $d1 = (double) $i1;

        $d2 = $d0 - $d1;

        return $d2;
    }

    private boolean isBelowForResponse()
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.skin.ArrowDirection $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        $z0 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: boolean belowForResponse>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowDirection getDirection2()>();

        $r2 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        if $r1 != $r2 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private void drawDressing1(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.skin.ArrowDressing, net.sourceforge.plantuml.skin.ArrowDecoration)
    {
        net.sourceforge.plantuml.skin.ArrowDecoration r0, $r1;
        net.sourceforge.plantuml.skin.ArrowDressing r2;
        net.sourceforge.plantuml.skin.ArrowHead $r3, $r4, $r5, $r6, $r7, $r8;
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r9;
        net.sourceforge.plantuml.skin.ArrowPart $r10, $r23, $r24, $r25, $r26;
        net.sourceforge.plantuml.ugraphic.color.HColor $r11, $r40;
        net.sourceforge.plantuml.ugraphic.UBackground $r12;
        net.sourceforge.plantuml.ugraphic.UGraphic $r13, $r15, $r18, $r21, $r28, $r30, $r33, $r35, $r39, $r41, $r43, r44, r46;
        net.sourceforge.plantuml.ugraphic.UTranslate $r14, $r17, $r20, $r29, $r34, $r42;
        net.sourceforge.plantuml.ugraphic.UStroke $r16, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14;
        net.sourceforge.plantuml.ugraphic.ULine $r19, $r22, $r31, $r36;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r27, $r32;
        net.sourceforge.plantuml.ugraphic.UEllipse $r37;
        net.sourceforge.plantuml.ugraphic.UPolygon r47;

        r9 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r44 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d14 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.skin.ArrowDressing;

        r0 := @parameter3: net.sourceforge.plantuml.skin.ArrowDecoration;

        $r1 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        if r0 != $r1 goto label1;

        $r37 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r37.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(8.0, 8.0);

        $r38 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r38.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r39 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r38);

        $r40 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColor getForegroundColor()>();

        $r41 = interfaceinvoke $r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r40);

        $r42 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d12 = d14 - 4.0;

        $d13 = $d12 - 1.5;

        specialinvoke $r42.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d13, -4.75);

        $r43 = interfaceinvoke $r41.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r42);

        interfaceinvoke $r43.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r37);

        d14 = d14 + 5.5;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r4 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead ASYNC>;

        if $r3 != $r4 goto label3;

        $r23 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        $r24 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart BOTTOM_PART>;

        if $r23 == $r24 goto label2;

        $r32 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r33 = virtualinvoke $r32.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.UGraphic applyThicknessOnly(net.sourceforge.plantuml.ugraphic.UGraphic)>(r44);

        $d9 = d14 - 1.0;

        $r34 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d9);

        $r35 = interfaceinvoke $r33.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r34);

        $r36 = new net.sourceforge.plantuml.ugraphic.ULine;

        $i12 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d10 = (double) $i12;

        $i13 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $i14 = neg $i13;

        $d11 = (double) $i14;

        specialinvoke $r36.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d10, $d11);

        interfaceinvoke $r35.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r36);

     label2:
        $r25 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        $r26 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart TOP_PART>;

        if $r25 == $r26 goto label5;

        $r27 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r28 = virtualinvoke $r27.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.UGraphic applyThicknessOnly(net.sourceforge.plantuml.ugraphic.UGraphic)>(r44);

        $d6 = d14 - 1.0;

        $r29 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d6);

        $r30 = interfaceinvoke $r28.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r29);

        $r31 = new net.sourceforge.plantuml.ugraphic.ULine;

        $i10 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d7 = (double) $i10;

        $i11 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $d8 = (double) $i11;

        specialinvoke $r31.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d7, $d8);

        interfaceinvoke $r30.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r31);

        goto label5;

     label3:
        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r6 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead CROSSX>;

        if $r5 != $r6 goto label4;

        $r16 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r16.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(2.0);

        r46 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        $r17 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i0 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i1 = neg $i0;

        $i2 = $i1 / 2;

        $d0 = (double) $i2;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(6.0, $d0);

        $r18 = interfaceinvoke r46.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        $r19 = new net.sourceforge.plantuml.ugraphic.ULine;

        $i3 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d1 = (double) $i3;

        $i4 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d2 = (double) $i4;

        specialinvoke $r19.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d1, $d2);

        interfaceinvoke $r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r19);

        $r20 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i5 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i6 = $i5 / 2;

        $d3 = (double) $i6;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(6.0, $d3);

        $r21 = interfaceinvoke r46.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        $r22 = new net.sourceforge.plantuml.ugraphic.ULine;

        $i7 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d4 = (double) $i7;

        $i8 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i9 = neg $i8;

        $d5 = (double) $i9;

        specialinvoke $r22.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d4, $d5);

        interfaceinvoke $r21.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r22);

        goto label5;

     label4:
        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r8 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NORMAL>;

        if $r7 != $r8 goto label5;

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        r47 = specialinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.ugraphic.UPolygon getPolygonReverse(net.sourceforge.plantuml.skin.ArrowPart)>($r10);

        $r11 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColor getForegroundColor()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r13 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d14);

        $r15 = interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        interfaceinvoke $r15.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r47);

     label5:
        return;
    }

    private void drawDressing2(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.skin.ArrowDressing, net.sourceforge.plantuml.skin.ArrowDecoration)
    {
        net.sourceforge.plantuml.skin.ArrowDecoration r0, $r1;
        net.sourceforge.plantuml.skin.ArrowDressing r2;
        net.sourceforge.plantuml.skin.ArrowHead $r3, $r4, $r5, $r6, $r7, $r8;
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r9;
        net.sourceforge.plantuml.skin.ArrowPart $r10, $r22, $r23, $r24, $r25;
        net.sourceforge.plantuml.ugraphic.color.HColor $r11, $r38;
        net.sourceforge.plantuml.ugraphic.UBackground $r12;
        net.sourceforge.plantuml.ugraphic.UGraphic $r13, $r16, $r19, $r27, $r29, $r32, $r34, $r37, $r41, r43, r44, r46;
        net.sourceforge.plantuml.ugraphic.UStroke $r14, $r21, $r36, $r42;
        net.sourceforge.plantuml.ugraphic.UTranslate $r15, $r18, $r28, $r33, $r40;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, d18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        net.sourceforge.plantuml.ugraphic.ULine $r17, $r20, $r30, $r35;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r26, $r31;
        net.sourceforge.plantuml.ugraphic.UEllipse $r39;
        net.sourceforge.plantuml.ugraphic.UPolygon r48;

        r9 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r43 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d18 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.skin.ArrowDressing;

        r0 := @parameter3: net.sourceforge.plantuml.skin.ArrowDecoration;

        $r1 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        if r0 != $r1 goto label1;

        $r36 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r36.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r37 = interfaceinvoke r43.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r36);

        $r38 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColor getForegroundColor()>();

        r44 = interfaceinvoke $r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r38);

        $r39 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r39.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(8.0, 8.0);

        $r40 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d16 = d18 - 4.0;

        $d17 = $d16 + 1.5;

        specialinvoke $r40.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d17, -4.75);

        $r41 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r40);

        interfaceinvoke $r41.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r39);

        $r42 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r42.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r43 = interfaceinvoke r44.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r42);

        d18 = d18 - 5.5;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r4 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead ASYNC>;

        if $r3 != $r4 goto label3;

        $r22 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        $r23 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart BOTTOM_PART>;

        if $r22 == $r23 goto label2;

        $r31 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r32 = virtualinvoke $r31.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.UGraphic applyThicknessOnly(net.sourceforge.plantuml.ugraphic.UGraphic)>(r43);

        $r33 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d18);

        $r34 = interfaceinvoke $r32.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r33);

        $r35 = new net.sourceforge.plantuml.ugraphic.ULine;

        $i15 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i16 = neg $i15;

        $d14 = (double) $i16;

        $i17 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $i18 = neg $i17;

        $d15 = (double) $i18;

        specialinvoke $r35.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d14, $d15);

        interfaceinvoke $r34.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r35);

     label2:
        $r24 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        $r25 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart TOP_PART>;

        if $r24 == $r25 goto label5;

        $r26 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r27 = virtualinvoke $r26.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.UGraphic applyThicknessOnly(net.sourceforge.plantuml.ugraphic.UGraphic)>(r43);

        $r28 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d18);

        $r29 = interfaceinvoke $r27.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r28);

        $r30 = new net.sourceforge.plantuml.ugraphic.ULine;

        $i12 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i13 = neg $i12;

        $d12 = (double) $i13;

        $i14 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $d13 = (double) $i14;

        specialinvoke $r30.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d12, $d13);

        interfaceinvoke $r29.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r30);

        goto label5;

     label3:
        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r6 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead CROSSX>;

        if $r5 != $r6 goto label4;

        $r14 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(2.0);

        r46 = interfaceinvoke r43.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d0 = d18 - 6.0;

        $i0 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d1 = (double) $i0;

        $d2 = $d0 - $d1;

        $i1 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i2 = neg $i1;

        $i3 = $i2 / 2;

        $d3 = (double) $i3;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d2, $d3);

        $r16 = interfaceinvoke r46.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r17 = new net.sourceforge.plantuml.ugraphic.ULine;

        $i4 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d4 = (double) $i4;

        $i5 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d5 = (double) $i5;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d4, $d5);

        interfaceinvoke $r16.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r17);

        $r18 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d6 = d18 - 6.0;

        $i6 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d7 = (double) $i6;

        $d8 = $d6 - $d7;

        $i7 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i8 = $i7 / 2;

        $d9 = (double) $i8;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d8, $d9);

        $r19 = interfaceinvoke r46.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        $r20 = new net.sourceforge.plantuml.ugraphic.ULine;

        $i9 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d10 = (double) $i9;

        $i10 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i11 = neg $i10;

        $d11 = (double) $i11;

        specialinvoke $r20.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d10, $d11);

        interfaceinvoke $r19.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r20);

        $r21 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r21.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        interfaceinvoke r46.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        goto label5;

     label4:
        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r8 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NORMAL>;

        if $r7 != $r8 goto label5;

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ArrowDressing: net.sourceforge.plantuml.skin.ArrowPart getPart()>();

        r48 = specialinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.ugraphic.UPolygon getPolygonNormal(net.sourceforge.plantuml.skin.ArrowPart,double)>($r10, d18);

        $r11 = virtualinvoke r9.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.ugraphic.color.HColor getForegroundColor()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r13 = interfaceinvoke r43.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r48);

     label5:
        return;
    }

    private net.sourceforge.plantuml.ugraphic.UPolygon getPolygonNormal(net.sourceforge.plantuml.skin.ArrowPart, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        net.sourceforge.plantuml.skin.ArrowPart r2, $r3, $r4;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19;
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean $z0;

        r5 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r2 := @parameter0: net.sourceforge.plantuml.skin.ArrowPart;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        $r3 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart TOP_PART>;

        if r2 != $r3 goto label1;

        $i10 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d15 = (double) $i10;

        $d16 = d0 - $d15;

        $i11 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $i12 = neg $i11;

        $d17 = (double) $i12;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d16, $d17);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d0, 0.0);

        $i13 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d18 = (double) $i13;

        $d19 = d0 - $d18;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d19, 0.0);

        goto label3;

     label1:
        $r4 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart BOTTOM_PART>;

        if r2 != $r4 goto label2;

        $i6 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d10 = (double) $i6;

        $d11 = d0 - $d10;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d11, 1.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d0, 1.0);

        $i7 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d12 = (double) $i7;

        $d13 = d0 - $d12;

        $i8 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $i9 = $i8 + 1;

        $d14 = (double) $i9;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d13, $d14);

        goto label3;

     label2:
        $i0 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d1 = (double) $i0;

        $d2 = d0 - $d1;

        $i1 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $i2 = neg $i1;

        $d3 = (double) $i2;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d2, $d3);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d0, 0.0);

        $i3 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d4 = (double) $i3;

        $d5 = d0 - $d4;

        $i4 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $d6 = (double) $i4;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d5, $d6);

        $z0 = r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: boolean niceArrow>;

        if $z0 == 0 goto label3;

        $i5 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d7 = (double) $i5;

        $d8 = d0 - $d7;

        $d9 = $d8 + 4.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d9, 0.0);

     label3:
        return $r0;
    }

    private net.sourceforge.plantuml.ugraphic.UPolygon getPolygonReverse(net.sourceforge.plantuml.skin.ArrowPart)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        net.sourceforge.plantuml.skin.ArrowPart r2, $r3, $r4;
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        boolean $z0;

        r5 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r2 := @parameter0: net.sourceforge.plantuml.skin.ArrowPart;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        $r3 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart TOP_PART>;

        if r2 != $r3 goto label1;

        $i11 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d8 = (double) $i11;

        $i12 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $i13 = neg $i12;

        $d9 = (double) $i13;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d8, $d9);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $i14 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d10 = (double) $i14;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d10, 0.0);

        goto label3;

     label1:
        $r4 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart BOTTOM_PART>;

        if r2 != $r4 goto label2;

        $i7 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d5 = (double) $i7;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d5, 1.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 1.0);

        $i8 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d6 = (double) $i8;

        $i9 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $i10 = $i9 + 1;

        $d7 = (double) $i10;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d6, $d7);

        goto label3;

     label2:
        $i0 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d0 = (double) $i0;

        $i1 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $i2 = neg $i1;

        $d1 = (double) $i2;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d0, $d1);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $i3 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d2 = (double) $i3;

        $i4 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $d3 = (double) $i4;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d2, $d3);

        $z0 = r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: boolean niceArrow>;

        if $z0 == 0 goto label3;

        $i5 = virtualinvoke r5.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $i6 = $i5 - 4;

        $d4 = (double) $i6;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d4, 0.0);

     label3:
        return $r0;
    }

    public java.awt.geom.Point2D getStartPoint(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.skin.ArrowDirection $r2, $r3;
        java.awt.geom.Point2D$Double $r4, $r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r5 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getYPoint(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowDirection getDirection2()>();

        $r3 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        if $r2 != $r3 goto label1;

        $r6 = new java.awt.geom.Point2D$Double;

        $d4 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getPaddingX()>();

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, d0);

        return $r6;

     label1:
        $r4 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getPaddingX()>();

        $d3 = $d1 + $d2;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d3, d0);

        return $r4;
    }

    public java.awt.geom.Point2D getEndPoint(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double d0, $d1, $d2, $d3, $d4;
        net.sourceforge.plantuml.skin.ArrowDirection $r2, $r3;
        java.awt.geom.Point2D$Double $r4, $r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r6 := @parameter1: net.sourceforge.plantuml.awt.geom.Dimension2D;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getYPoint(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowDirection getDirection2()>();

        $r3 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        if $r2 != $r3 goto label1;

        $r5 = new java.awt.geom.Point2D$Double;

        $d2 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getPaddingX()>();

        $d4 = $d2 + $d3;

        specialinvoke $r5.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, d0);

        return $r5;

     label1:
        $r4 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getPaddingX()>();

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, d0);

        return $r4;
    }

    public double getYPoint(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        boolean $z0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: boolean isBelowForResponse()>();

        if $z0 == 0 goto label1;

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getPaddingY()>();

        return $d3;

     label1:
        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getPaddingY()>();

        $d2 = $d0 + $d1;

        return $d2;
    }

    private final net.sourceforge.plantuml.skin.ArrowDirection getDirection2()
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r1;
        net.sourceforge.plantuml.skin.ArrowDirection $r2;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: net.sourceforge.plantuml.skin.ArrowConfiguration getArrowConfiguration()>();

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        return $r2;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaY()>();

        $d1 = (double) $i0;

        $d2 = $d0 + $d1;

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getPaddingY()>();

        $d4 = 2.0 * $d3;

        $d5 = $d2 + $d4;

        return $d5;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseArrow r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseArrow;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: int getArrowDeltaX()>();

        $d1 = (double) $i0;

        $d2 = $d0 + $d1;

        return $d2;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double thinCircle> = 1.5;

        <net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double diamCircle> = 8.0;

        <net.sourceforge.plantuml.skin.rose.ComponentRoseArrow: double spaceCrossX> = 6.0;

        return;
    }
}
