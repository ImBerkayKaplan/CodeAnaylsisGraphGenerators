public class net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine extends net.sourceforge.plantuml.skin.AbstractComponent
{
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContext;
    private final boolean closeUp;
    private final boolean closeDown;

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.graphic.SymbolContext, boolean, boolean, net.sourceforge.plantuml.ugraphic.color.HColorSet)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine r0;
        net.sourceforge.plantuml.style.Style r1;
        boolean $z0, z1, z2;
        net.sourceforge.plantuml.api.ThemeStyle r2;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r3;
        net.sourceforge.plantuml.graphic.SymbolContext r4;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine;

        r2 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r1 := @parameter1: net.sourceforge.plantuml.style.Style;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.SymbolContext;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r3 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractComponent: void <init>(net.sourceforge.plantuml.style.Style)>(r1);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        r4 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.SymbolContext getSymbolContext(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>(r2, r3);

     label1:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = r4;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: boolean closeUp> = z1;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: boolean closeDown> = z2;

        return;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16;
        net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine r3;
        int $i0, i1;
        byte $b2;
        net.sourceforge.plantuml.ugraphic.URectangle $r4;
        net.sourceforge.plantuml.graphic.SymbolContext $r6, $r7, $r9, $r13, $r28;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8, $r10, $r14, $r29;
        net.sourceforge.plantuml.ugraphic.UBackground $r11, $r30;
        net.sourceforge.plantuml.ugraphic.UGraphic $r12, $r15, $r17, $r20, $r22, $r25, $r27, $r31, $r33, r34, r35;
        net.sourceforge.plantuml.ugraphic.UTranslate $r16, $r19, $r21, $r24, $r26, $r32;
        net.sourceforge.plantuml.ugraphic.ULine r18, r23;

        r3 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine;

        r34 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        r2 = interfaceinvoke r34.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d2 = $d0 - $d1;

        $i0 = (int) $d2;

        i1 = $i0 / 2;

        $d3 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $b2 = $d3 cmpl 0.0;

        if $b2 != 0 goto label1;

        return;

     label1:
        $r4 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d5 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d4, $d5);

        $r6 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $z0 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.SymbolContext: boolean isShadowing()>();

        if $z0 == 0 goto label2;

        virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(1.0);

     label2:
        $r7 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getForeColor()>();

        r35 = interfaceinvoke r34.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $z1 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: boolean closeUp>;

        if $z1 == 0 goto label3;

        $z4 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: boolean closeDown>;

        if $z4 == 0 goto label3;

        $r28 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r29 = virtualinvoke $r28.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()>();

        $r30 = interfaceinvoke $r29.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r31 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r30);

        $d16 = (double) i1;

        $r32 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d16);

        $r33 = interfaceinvoke $r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r32);

        interfaceinvoke $r33.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        return;

     label3:
        $r9 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r12 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        $r13 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()>();

        $r15 = interfaceinvoke $r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        $d6 = (double) i1;

        $r16 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d6);

        $r17 = interfaceinvoke $r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

        interfaceinvoke $r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        $d7 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        r18 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d7);

        $d8 = (double) i1;

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d8);

        $r20 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke $r20.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r18);

        $d9 = (double) i1;

        $d10 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d11 = $d9 + $d10;

        $r21 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d11);

        $r22 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        interfaceinvoke $r22.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r18);

        $d12 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        r23 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d12);

        $z2 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: boolean closeUp>;

        if $z2 == 0 goto label4;

        $d15 = (double) i1;

        $r26 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d15);

        $r27 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r26);

        interfaceinvoke $r27.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r23);

     label4:
        $z3 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine: boolean closeDown>;

        if $z3 == 0 goto label5;

        $r24 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d13 = (double) i1;

        $d14 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r24.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d13, $d14);

        $r25 = interfaceinvoke r35.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r23);

     label5:
        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 0.0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseActiveLine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 10.0;
    }
}
