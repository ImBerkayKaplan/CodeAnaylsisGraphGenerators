public class net.sourceforge.plantuml.awt.geom.AffineTransform extends java.lang.Object
{

    public void <init>(net.sourceforge.plantuml.awt.geom.AffineTransform)
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0, r1;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.AffineTransform;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(double[])
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;
        double[] r1;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        r1 := @parameter0: double[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(int, int, int, int, int, int)
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;
        int i0, i1, i2, i3, i4, i5;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>()
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public double getScaleX()
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        return 0.0;
    }

    public double getScaleY()
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        return 0.0;
    }

    public double getTranslateX()
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        return 0.0;
    }

    public double getTranslateY()
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        return 0.0;
    }

    public void translate(double, double)
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        return;
    }

    public void concatenate(net.sourceforge.plantuml.awt.geom.AffineTransform)
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0, r1;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.AffineTransform;

        return;
    }

    public static net.sourceforge.plantuml.awt.geom.AffineTransform getScaleInstance(double, double)
    {
        double d0, d1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        return null;
    }

    public void setToShear(double, double)
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        return;
    }

    public static net.sourceforge.plantuml.awt.geom.AffineTransform getTranslateInstance(double, double)
    {
        double d0, d1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        return null;
    }

    public static net.sourceforge.plantuml.awt.geom.AffineTransform getShearInstance(double, double)
    {
        double d0, d1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        return null;
    }

    public static net.sourceforge.plantuml.awt.geom.AffineTransform getRotateInstance(double)
    {
        double d0;

        d0 := @parameter0: double;

        return null;
    }

    public net.sourceforge.plantuml.awt.geom.Point2D transform(net.sourceforge.plantuml.awt.geom.Point2D, net.sourceforge.plantuml.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;
        net.sourceforge.plantuml.awt.geom.Point2D r1, r2;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.Point2D;

        r2 := @parameter1: net.sourceforge.plantuml.awt.geom.Point2D;

        return null;
    }

    public void scale(double, double)
    {
        net.sourceforge.plantuml.awt.geom.AffineTransform r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.awt.geom.AffineTransform;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        return;
    }
}
