public class net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon extends java.lang.Object
{
    public static final double hexagonHalfSize;

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon r0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.ugraphic.UPolygon asPolygon(double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(24.0, 12.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 24.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 12.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void setDeltaShadow(double)>(d0);

        return $r0;
    }

    public static net.sourceforge.plantuml.ugraphic.UPolygon asPolygon(double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double d0, $d1, d2, $d3, $d4, $d5, d6;

        d6 := @parameter0: double;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 0.0);

        $d1 = d0 - 12.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d1, 0.0);

        $d3 = d2 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d0, $d3);

        $d4 = d0 - 12.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d4, d2);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, d2);

        $d5 = d2 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, $d5);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void setDeltaShadow(double)>(d6);

        return $r0;
    }

    public static net.sourceforge.plantuml.creole.Stencil asStencil(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1 $r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon$1: void <init>(net.sourceforge.plantuml.graphic.TextBlock)>(r1);

        return $r0;
    }

    public static net.sourceforge.plantuml.ugraphic.UPolygon asPolygonSquare(double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double d0, $d1, d2, $d3, $d4, $d5, d6;

        d6 := @parameter0: double;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        $d1 = d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d1, 0.0);

        $d3 = d2 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d0, $d3);

        $d4 = d0 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d4, d2);

        $d5 = d2 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, $d5);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void setDeltaShadow(double)>(d6);

        return $r0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.activitydiagram3.ftile.Hexagon: double hexagonHalfSize> = 12.0;

        return;
    }
}
