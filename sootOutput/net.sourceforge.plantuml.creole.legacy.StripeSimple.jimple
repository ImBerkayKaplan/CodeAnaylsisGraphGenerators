public class net.sourceforge.plantuml.creole.legacy.StripeSimple extends java.lang.Object implements net.sourceforge.plantuml.creole.Stripe
{
    private final net.sourceforge.plantuml.creole.atom.Atom header;
    private final java.util.List atoms;
    private final java.util.Map commands;
    private net.sourceforge.plantuml.graphic.HorizontalAlignment align;
    private net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final net.sourceforge.plantuml.creole.StripeStyle style;
    private final net.sourceforge.plantuml.ISkinSimple skinParam;

    public void setCellAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.HorizontalAlignment align> = r1;

        return;
    }

    public net.sourceforge.plantuml.graphic.HorizontalAlignment getCellAlignment()
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.HorizontalAlignment align>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r7;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r1;
        java.lang.String $r2, $r6, $r8;
        java.util.List $r5;

        r1 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public net.sourceforge.plantuml.creole.atom.Atom getLHeader()
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        net.sourceforge.plantuml.creole.atom.Atom $r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.atom.Atom header>;

        return $r1;
    }

    public void <init>(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.creole.StripeStyle, net.sourceforge.plantuml.creole.CreoleContext, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.creole.CreoleMode)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        java.util.ArrayList $r1;
        java.util.HashMap $r2;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        net.sourceforge.plantuml.creole.StripeStyle r5;
        net.sourceforge.plantuml.ISkinSimple r6;
        net.sourceforge.plantuml.graphic.FontStyle $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r73;
        net.sourceforge.plantuml.creole.command.Command $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r52, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r72, $r74;
        net.sourceforge.plantuml.creole.CreoleMode r23, $r24;
        net.sourceforge.plantuml.graphic.FontPosition $r51, $r53;
        boolean $z0;
        net.sourceforge.plantuml.creole.CreoleContext r67;
        net.sourceforge.plantuml.creole.atom.Atom $r68, $r69, $r70;
        java.util.List $r71;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r5 := @parameter1: net.sourceforge.plantuml.creole.StripeStyle;

        r67 := @parameter2: net.sourceforge.plantuml.creole.CreoleContext;

        r6 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        r23 := @parameter4: net.sourceforge.plantuml.creole.CreoleMode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.Map commands> = $r2;

        $r3 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.HorizontalAlignment align> = $r3;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r4;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.StripeStyle style> = r5;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple skinParam> = r6;

        $r7 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle BOLD>;

        $r8 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createCreole(net.sourceforge.plantuml.graphic.FontStyle)>($r7);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r8);

        $r9 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle BOLD>;

        $r10 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacy(net.sourceforge.plantuml.graphic.FontStyle)>($r9);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r10);

        $r11 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle BOLD>;

        $r12 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacyEol(net.sourceforge.plantuml.graphic.FontStyle)>($r11);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r12);

        $r13 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle ITALIC>;

        $r14 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createCreole(net.sourceforge.plantuml.graphic.FontStyle)>($r13);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r14);

        $r15 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle ITALIC>;

        $r16 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacy(net.sourceforge.plantuml.graphic.FontStyle)>($r15);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r16);

        $r17 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle ITALIC>;

        $r18 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacyEol(net.sourceforge.plantuml.graphic.FontStyle)>($r17);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r18);

        $r19 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle PLAIN>;

        $r20 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacy(net.sourceforge.plantuml.graphic.FontStyle)>($r19);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r20);

        $r21 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle PLAIN>;

        $r22 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacyEol(net.sourceforge.plantuml.graphic.FontStyle)>($r21);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r22);

        $r24 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        if r23 != $r24 goto label1;

        $r73 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle UNDERLINE>;

        $r74 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createCreole(net.sourceforge.plantuml.graphic.FontStyle)>($r73);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r74);

     label1:
        $r25 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle UNDERLINE>;

        $r26 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacy(net.sourceforge.plantuml.graphic.FontStyle)>($r25);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r26);

        $r27 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle UNDERLINE>;

        $r28 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacyEol(net.sourceforge.plantuml.graphic.FontStyle)>($r27);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r28);

        $r29 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle STRIKE>;

        $r30 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createCreole(net.sourceforge.plantuml.graphic.FontStyle)>($r29);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r30);

        $r31 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle STRIKE>;

        $r32 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacy(net.sourceforge.plantuml.graphic.FontStyle)>($r31);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r32);

        $r33 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle STRIKE>;

        $r34 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacyEol(net.sourceforge.plantuml.graphic.FontStyle)>($r33);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r34);

        $r35 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle WAVE>;

        $r36 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createCreole(net.sourceforge.plantuml.graphic.FontStyle)>($r35);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r36);

        $r37 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle WAVE>;

        $r38 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacy(net.sourceforge.plantuml.graphic.FontStyle)>($r37);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r38);

        $r39 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle WAVE>;

        $r40 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacyEol(net.sourceforge.plantuml.graphic.FontStyle)>($r39);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r40);

        $r41 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle BACKCOLOR>;

        $r42 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacy(net.sourceforge.plantuml.graphic.FontStyle)>($r41);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r42);

        $r43 = <net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.graphic.FontStyle BACKCOLOR>;

        $r44 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.creole.command.Command createLegacyEol(net.sourceforge.plantuml.graphic.FontStyle)>($r43);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r44);

        $r45 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleSizeChange: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r45);

        $r46 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleSizeChange: net.sourceforge.plantuml.creole.command.Command createEol()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r46);

        $r47 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleColorChange: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r47);

        $r48 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleColorChange: net.sourceforge.plantuml.creole.command.Command createEol()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r48);

        $r49 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleColorAndSizeChange: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r49);

        $r50 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleColorAndSizeChange: net.sourceforge.plantuml.creole.command.Command createEol()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r50);

        $r51 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition EXPOSANT>;

        $r52 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleExposantChange: net.sourceforge.plantuml.creole.command.Command create(net.sourceforge.plantuml.graphic.FontPosition)>($r51);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r52);

        $r53 = <net.sourceforge.plantuml.graphic.FontPosition: net.sourceforge.plantuml.graphic.FontPosition INDICE>;

        $r54 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleExposantChange: net.sourceforge.plantuml.creole.command.Command create(net.sourceforge.plantuml.graphic.FontPosition)>($r53);

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r54);

        $r55 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleImg: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r55);

        $r56 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleQrcode: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r56);

        $r57 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleOpenIcon: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r57);

        $r58 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleEmoji: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r58);

        $r59 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleMath: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r59);

        $r60 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleLatex: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r60);

        $r61 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleSprite: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r61);

        $r62 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleSpace: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r62);

        $r63 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleFontFamilyChange: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r63);

        $r64 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleFontFamilyChange: net.sourceforge.plantuml.creole.command.Command createEol()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r64);

        $r65 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleMonospaced: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r65);

        $r66 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleUrl: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r66);

        $z0 = staticinvoke <net.sourceforge.plantuml.security.SecurityUtils: boolean allowSvgText()>();

        if $z0 == 0 goto label2;

        $r72 = staticinvoke <net.sourceforge.plantuml.creole.command.CommandCreoleSvgAttributeChange: net.sourceforge.plantuml.creole.command.Command create()>();

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addCommand(net.sourceforge.plantuml.creole.command.Command)>($r72);

     label2:
        $r68 = virtualinvoke r5.<net.sourceforge.plantuml.creole.StripeStyle: net.sourceforge.plantuml.creole.atom.Atom getHeader(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.creole.CreoleContext)>(r4, r67);

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.atom.Atom header> = $r68;

        $r69 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.atom.Atom header>;

        if $r69 == null goto label3;

        $r71 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r70 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.atom.Atom header>;

        interfaceinvoke $r71.<java.util.List: boolean add(java.lang.Object)>($r70);

     label3:
        return;
    }

    private void addCommand(net.sourceforge.plantuml.creole.command.Command)
    {
        net.sourceforge.plantuml.creole.command.Command r0;
        java.lang.String r1;
        int $i0, i2;
        char c1;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r2;
        java.util.Map $r3, $r7;
        java.lang.Character $r4, $r8;
        java.lang.Object $r5;
        java.util.ArrayList $r6;
        java.util.List r10;

        r2 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r0 := @parameter0: net.sourceforge.plantuml.creole.command.Command;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.creole.command.Command: java.lang.String startingChars()>();

        i2 = 0;

     label1:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i0 goto label3;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        $r3 = r2.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.Map commands>;

        $r4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r10 = (java.util.List) $r5;

        if r10 != null goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r10 = $r6;

        $r7 = r2.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.Map commands>;

        $r8 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(c1);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r6);

     label2:
        interfaceinvoke r10.<java.util.List: boolean add(java.lang.Object)>(r0);

        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public java.util.List getAtoms()
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        java.util.List $r1, $r2, $r3, $r5;
        int $i0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.creole.atom.Atom $r6;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r4 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r6 = staticinvoke <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.atom.Atom createLegacy(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration)>(" ", $r4);

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label1:
        $r2 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r2);

        return $r3;
    }

    public net.sourceforge.plantuml.graphic.FontConfiguration getActualFontConfiguration()
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        return $r1;
    }

    public void setActualFontConfiguration(net.sourceforge.plantuml.graphic.FontConfiguration)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        net.sourceforge.plantuml.graphic.FontConfiguration r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r1;

        return;
    }

    public void analyzeAndAdd(java.lang.String)
    {
        java.lang.Object $r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r22, r23;
        char $c0, $c1;
        boolean $z0;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r6;
        net.sourceforge.plantuml.creole.StripeStyle $r7, $r10, $r13, $r18;
        net.sourceforge.plantuml.creole.StripeStyleType $r8, $r9, $r11, $r12;
        java.util.List $r14;
        net.sourceforge.plantuml.graphic.FontConfiguration $r15, $r19, $r20;
        net.sourceforge.plantuml.ISkinSimple $r16;
        net.sourceforge.plantuml.creole.CreoleHorizontalLine $r17;
        int $i2;
        java.lang.IllegalArgumentException $r21;

        r6 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r22 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r22);

        $r2 = (java.lang.String) $r0;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $c0 = staticinvoke <net.sourceforge.plantuml.BackSlash: char hiddenNewLine()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z0 == 0 goto label1;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r22);

        throw $r21;

     label1:
        r23 = staticinvoke <net.sourceforge.plantuml.utils.CharHidder: java.lang.String hide(java.lang.String)>(r22);

        $r7 = r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.StripeStyle style>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.creole.StripeStyle: net.sourceforge.plantuml.creole.StripeStyleType getType()>();

        $r9 = <net.sourceforge.plantuml.creole.StripeStyleType: net.sourceforge.plantuml.creole.StripeStyleType HEADING>;

        if $r8 != $r9 goto label2;

        $r19 = r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r18 = r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.StripeStyle style>;

        $i2 = virtualinvoke $r18.<net.sourceforge.plantuml.creole.StripeStyle: int getOrder()>();

        $r20 = staticinvoke <net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfigurationForHeading(net.sourceforge.plantuml.graphic.FontConfiguration,int)>($r19, $i2);

        r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = $r20;

        specialinvoke r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void modifyStripe(java.lang.String)>(r23);

        goto label4;

     label2:
        $r10 = r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.StripeStyle style>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.creole.StripeStyle: net.sourceforge.plantuml.creole.StripeStyleType getType()>();

        $r12 = <net.sourceforge.plantuml.creole.StripeStyleType: net.sourceforge.plantuml.creole.StripeStyleType HORIZONTAL_LINE>;

        if $r11 != $r12 goto label3;

        $r14 = r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r15 = r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r13 = r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.StripeStyle style>;

        $c1 = virtualinvoke $r13.<net.sourceforge.plantuml.creole.StripeStyle: char getStyle()>();

        $r16 = r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r17 = staticinvoke <net.sourceforge.plantuml.creole.CreoleHorizontalLine: net.sourceforge.plantuml.creole.CreoleHorizontalLine create(net.sourceforge.plantuml.graphic.FontConfiguration,java.lang.String,char,net.sourceforge.plantuml.ISkinSimple)>($r15, r23, $c1, $r16);

        interfaceinvoke $r14.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label4;

     label3:
        specialinvoke r6.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void modifyStripe(java.lang.String)>(r23);

     label4:
        return;
    }

    private static net.sourceforge.plantuml.graphic.FontConfiguration fontConfigurationForHeading(net.sourceforge.plantuml.graphic.FontConfiguration, int)
    {
        int i0;
        net.sourceforge.plantuml.graphic.FontConfiguration r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration bigger(double)>(4.0);

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration bold()>();

        return $r6;

     label2:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration bigger(double)>(2.0);

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration bold()>();

        return $r4;

     label3:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration bigger(double)>(1.0);

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration bold()>();

        return $r2;

     label4:
        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration italic()>();

        return $r7;
    }

    public void addImage(java.lang.String, double)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        java.lang.String r1;
        double d0;
        net.sourceforge.plantuml.graphic.ImgValign $r2;
        java.util.List $r3;
        net.sourceforge.plantuml.creole.atom.Atom $r4;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r3 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r2 = <net.sourceforge.plantuml.graphic.ImgValign: net.sourceforge.plantuml.graphic.ImgValign TOP>;

        $r4 = staticinvoke <net.sourceforge.plantuml.creole.atom.AtomImg: net.sourceforge.plantuml.creole.atom.Atom create(java.lang.String,net.sourceforge.plantuml.graphic.ImgValign,int,double,net.sourceforge.plantuml.Url)>(r1, $r2, 0, d0, null);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r4);

        return;
    }

    public void addQrcode(java.lang.String, double)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        java.lang.String r1;
        double d0;
        java.util.List $r2;
        net.sourceforge.plantuml.creole.atom.Atom $r3;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r3 = staticinvoke <net.sourceforge.plantuml.creole.atom.AtomImg: net.sourceforge.plantuml.creole.atom.Atom createQrcode(java.lang.String,double)>(r1, d0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r3);

        return;
    }

    public void addSpace(int)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        int i0;
        double $d0;
        java.util.List $r1;
        net.sourceforge.plantuml.creole.atom.Atom $r2;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $d0 = (double) i0;

        $r2 = staticinvoke <net.sourceforge.plantuml.creole.atom.AtomSpace: net.sourceforge.plantuml.creole.atom.Atom create(double)>($d0);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public void addUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        net.sourceforge.plantuml.Url r1;
        net.sourceforge.plantuml.ISkinSimple $r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        java.util.List $r4;
        net.sourceforge.plantuml.creole.atom.Atom $r5;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r1 := @parameter0: net.sourceforge.plantuml.Url;

        $r4 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r3 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r2 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r5 = staticinvoke <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.atom.Atom createUrl(net.sourceforge.plantuml.Url,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.ISkinSimple)>(r1, $r3, $r2);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        return;
    }

    public void addSprite(java.lang.String, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ISkinSimple $r2;
        net.sourceforge.plantuml.sprite.Sprite r3;
        net.sourceforge.plantuml.creole.atom.AtomSprite $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r5;
        double d0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r6;
        java.util.List $r7;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r5 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r2 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple skinParam>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.sprite.Sprite getSprite(java.lang.String)>(r1);

        if r3 == null goto label1;

        $r7 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r4 = new net.sourceforge.plantuml.creole.atom.AtomSprite;

        $r6 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        specialinvoke $r4.<net.sourceforge.plantuml.creole.atom.AtomSprite: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,double,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.sprite.Sprite,net.sourceforge.plantuml.Url)>(r5, d0, $r6, r3, null);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r4);

     label1:
        return;
    }

    public void addOpenIcon(java.lang.String, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        java.lang.String r0;
        net.sourceforge.plantuml.openiconic.OpenIcon r1;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r2;
        net.sourceforge.plantuml.creole.atom.AtomOpenIcon $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor r4;
        double d0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5;
        java.util.List $r6;

        r2 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r0 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r4 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r1 = staticinvoke <net.sourceforge.plantuml.openiconic.OpenIcon: net.sourceforge.plantuml.openiconic.OpenIcon retrieve(java.lang.String)>(r0);

        if r1 == null goto label1;

        $r6 = r2.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r3 = new net.sourceforge.plantuml.creole.atom.AtomOpenIcon;

        $r5 = r2.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        specialinvoke $r3.<net.sourceforge.plantuml.creole.atom.AtomOpenIcon: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,double,net.sourceforge.plantuml.openiconic.OpenIcon,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.Url)>(r4, d0, r1, $r5, null);

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r3);

     label1:
        return;
    }

    public void addEmoji(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r2;
        net.sourceforge.plantuml.emoji.Emoji r1;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r3;
        net.sourceforge.plantuml.ISkinSimple $r4, $r6;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r5;
        net.sourceforge.plantuml.api.ThemeStyle $r7;
        net.sourceforge.plantuml.ugraphic.color.NoSuchColorException $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor r9;
        net.sourceforge.plantuml.graphic.FontConfiguration $r10, $r13;
        java.util.List $r11;
        net.sourceforge.plantuml.creole.atom.AtomEmoji $r12;
        double $d0;

        r3 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r1 = staticinvoke <net.sourceforge.plantuml.emoji.Emoji: net.sourceforge.plantuml.emoji.Emoji retrieve(java.lang.String)>(r0);

        if r1 != null goto label1;

        return;

     label1:
        if r2 != null goto label2;

        r9 = null;

        goto label7;

     label2:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("#0");

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("#000");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("#black");

        if $z2 == 0 goto label4;

     label3:
        $r10 = r3.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        r9 = virtualinvoke $r10.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        goto label7;

     label4:
        $r4 = r3.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r6 = r3.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r9 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r7, r2);

     label5:
        goto label7;

     label6:
        $r8 := @caughtexception;

        r9 = null;

     label7:
        $r11 = r3.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r12 = new net.sourceforge.plantuml.creole.atom.AtomEmoji;

        $r13 = r3.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $d0 = virtualinvoke $r13.<net.sourceforge.plantuml.graphic.FontConfiguration: double getSize2D()>();

        specialinvoke $r12.<net.sourceforge.plantuml.creole.atom.AtomEmoji: void <init>(net.sourceforge.plantuml.emoji.Emoji,double,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, 1.0, $d0, r9);

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

        return;

        catch net.sourceforge.plantuml.ugraphic.color.NoSuchColorException from label4 to label5 with label6;
    }

    public void addMath(net.sourceforge.plantuml.math.ScientificEquationSafe)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        net.sourceforge.plantuml.creole.atom.AtomMath $r1;
        net.sourceforge.plantuml.math.ScientificEquationSafe r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3, $r6;
        java.util.List $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r7;
        net.sourceforge.plantuml.ISkinSimple $r8;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper $r9;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r2 := @parameter0: net.sourceforge.plantuml.math.ScientificEquationSafe;

        $r4 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r1 = new net.sourceforge.plantuml.creole.atom.AtomMath;

        $r3 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r6 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getExtendedColor()>();

        $r8 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.ugraphic.color.ColorMapper getColorMapper()>();

        specialinvoke $r1.<net.sourceforge.plantuml.creole.atom.AtomMath: void <init>(net.sourceforge.plantuml.math.ScientificEquationSafe,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper)>(r2, $r5, $r7, $r9);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    private void modifyStripe(java.lang.String)
    {
        java.lang.StringBuilder $r0;
        int $i0;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r2;
        net.sourceforge.plantuml.creole.command.Command r3;
        char $c1;
        java.lang.String r5;

        r2 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r5 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

     label1:
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 <= 0 goto label4;

        r3 = specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.creole.command.Command searchCommand(java.lang.String)>(r5);

        if r3 != null goto label2;

        $c1 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c1);

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(1);

        goto label3;

     label2:
        specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addPending(java.lang.StringBuilder)>($r0);

        r5 = interfaceinvoke r3.<net.sourceforge.plantuml.creole.command.Command: java.lang.String executeAndGetRemaining(java.lang.String,net.sourceforge.plantuml.creole.legacy.StripeSimple)>(r5, r2);

     label3:
        goto label1;

     label4:
        specialinvoke r2.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addPending(java.lang.StringBuilder)>($r0);

        return;
    }

    private void addPending(java.lang.StringBuilder)
    {
        java.lang.StringBuilder r0;
        int $i0;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r1;
        java.util.List $r2;
        java.lang.String $r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.creole.atom.Atom $r5;

        r1 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r0 := @parameter0: java.lang.StringBuilder;

        $i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.List atoms>;

        $r3 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r4 = r1.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r5 = staticinvoke <net.sourceforge.plantuml.creole.legacy.AtomTextUtils: net.sourceforge.plantuml.creole.atom.Atom createLegacy(java.lang.String,net.sourceforge.plantuml.graphic.FontConfiguration)>($r3, $r4);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r5);

        virtualinvoke r0.<java.lang.StringBuilder: void setLength(int)>(0);

        return;
    }

    private net.sourceforge.plantuml.creole.command.Command searchCommand(java.lang.String)
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        java.lang.String r1;
        java.util.Map $r2;
        char $c0;
        java.lang.Character $r3;
        java.lang.Object $r4, $r7;
        java.util.List r5;
        java.util.Iterator r6;
        boolean $z0;
        net.sourceforge.plantuml.creole.command.Command r8;
        int $i1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: java.util.Map commands>;

        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0);

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = (java.util.List) $r4;

        if r5 == null goto label3;

        r6 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.creole.command.Command) $r7;

        $i1 = interfaceinvoke r8.<net.sourceforge.plantuml.creole.command.Command: int matchingSize(java.lang.String)>(r1);

        if $i1 == 0 goto label2;

        return r8;

     label2:
        goto label1;

     label3:
        return null;
    }

    public net.sourceforge.plantuml.ISkinSimple getSkinParam()
    {
        net.sourceforge.plantuml.creole.legacy.StripeSimple r0;
        net.sourceforge.plantuml.ISkinSimple $r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple skinParam>;

        return $r1;
    }
}
