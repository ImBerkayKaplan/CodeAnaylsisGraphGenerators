public class net.sourceforge.plantuml.posimo.RacorderFollowTangeanteOld extends net.sourceforge.plantuml.posimo.RacorderAbstract implements net.sourceforge.plantuml.posimo.Racorder
{

    public void <init>()
    {
        net.sourceforge.plantuml.posimo.RacorderFollowTangeanteOld r0;

        r0 := @this: net.sourceforge.plantuml.posimo.RacorderFollowTangeanteOld;

        specialinvoke r0.<net.sourceforge.plantuml.posimo.RacorderAbstract: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.posimo.DotPath getRacordIn(java.awt.geom.Rectangle2D, java.awt.geom.Line2D)
    {
        net.sourceforge.plantuml.posimo.DotPath $r0, $r12;
        java.awt.geom.Point2D$Double $r2;
        java.awt.geom.Rectangle2D r3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        java.awt.geom.Line2D$Double $r5;
        java.awt.geom.Line2D r6;
        java.awt.geom.Point2D $r7, r9;
        java.awt.geom.CubicCurve2D$Double $r10;
        net.sourceforge.plantuml.posimo.RacorderFollowTangeanteOld r13;

        r13 := @this: net.sourceforge.plantuml.posimo.RacorderFollowTangeanteOld;

        r3 := @parameter0: java.awt.geom.Rectangle2D;

        r6 := @parameter1: java.awt.geom.Line2D;

        $r0 = new net.sourceforge.plantuml.posimo.DotPath;

        specialinvoke $r0.<net.sourceforge.plantuml.posimo.DotPath: void <init>()>();

        $r2 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getCenterX()>();

        $d1 = virtualinvoke r3.<java.awt.geom.Rectangle2D: double getCenterY()>();

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        $r5 = new java.awt.geom.Line2D$Double;

        $r7 = virtualinvoke r6.<java.awt.geom.Line2D: java.awt.geom.Point2D getP1()>();

        specialinvoke $r5.<java.awt.geom.Line2D$Double: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r7, $r2);

        r9 = staticinvoke <net.sourceforge.plantuml.posimo.BezierUtils: java.awt.geom.Point2D intersect(java.awt.geom.Line2D$Double,java.awt.Shape)>($r5, r3);

        $r10 = new java.awt.geom.CubicCurve2D$Double;

        $d2 = virtualinvoke r6.<java.awt.geom.Line2D: double getX1()>();

        $d3 = virtualinvoke r6.<java.awt.geom.Line2D: double getY1()>();

        $d4 = virtualinvoke r6.<java.awt.geom.Line2D: double getX2()>();

        $d5 = virtualinvoke r6.<java.awt.geom.Line2D: double getY2()>();

        $d6 = virtualinvoke r6.<java.awt.geom.Line2D: double getX2()>();

        $d7 = virtualinvoke r6.<java.awt.geom.Line2D: double getY2()>();

        $d8 = virtualinvoke r9.<java.awt.geom.Point2D: double getX()>();

        $d9 = virtualinvoke r9.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r10.<java.awt.geom.CubicCurve2D$Double: void <init>(double,double,double,double,double,double,double,double)>($d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9);

        $r12 = virtualinvoke $r0.<net.sourceforge.plantuml.posimo.DotPath: net.sourceforge.plantuml.posimo.DotPath addAfter(java.awt.geom.CubicCurve2D$Double)>($r10);

        return $r12;
    }
}
