public class net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.URectangle, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.eps.EpsGraphics)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps r1;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r2;
        net.sourceforge.plantuml.ugraphic.UClip r3;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14, d15, d16, d17;
        byte $b0, $b1;
        net.sourceforge.plantuml.ugraphic.UParam r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r5, $r8, $r10, $r15;
        boolean $z0;
        net.sourceforge.plantuml.eps.EpsGraphics r6;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r7;
        java.awt.Color $r9, $r11, $r16;
        net.sourceforge.plantuml.ugraphic.UStroke $r12, $r13, $r14;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient $r17;
        java.awt.geom.Rectangle2D$Double $r18, r19;

        r1 := @this: net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.URectangle;

        d13 := @parameter1: double;

        d14 := @parameter2: double;

        r7 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r4 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r6 := @parameter5: net.sourceforge.plantuml.eps.EpsGraphics;

        d15 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        d16 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r3 == null goto label2;

        $r18 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $r18.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d13, d14, d15, d16);

        r19 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UClip: java.awt.geom.Rectangle2D$Double getClippedRectangle(java.awt.geom.Rectangle2D$Double)>($r18);

        $d12 = r19.<java.awt.geom.Rectangle2D$Double: double height>;

        $b1 = $d12 cmpg 0.0;

        if $b1 >= 0 goto label1;

        return;

     label1:
        d13 = r19.<java.awt.geom.Rectangle2D$Double: double x>;

        d14 = r19.<java.awt.geom.Rectangle2D$Double: double y>;

        d15 = r19.<java.awt.geom.Rectangle2D$Double: double width>;

        d16 = r19.<java.awt.geom.Rectangle2D$Double: double height>;

     label2:
        d17 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getRx()>();

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getRy()>();

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getDeltaShadow()>();

        $b0 = $d1 cmpl 0.0;

        if $b0 == 0 goto label3;

        $d9 = d17 / 2.0;

        $d10 = d0 / 2.0;

        $d11 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getDeltaShadow()>();

        virtualinvoke r6.<net.sourceforge.plantuml.eps.EpsGraphics: void epsRectangleShadow(double,double,double,double,double,double,double)>(d13, d14, d15, d16, $d9, $d10, $d11);

     label3:
        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $z0 = r5 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z0 == 0 goto label4;

        $r15 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r16 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r15);

        virtualinvoke r6.<net.sourceforge.plantuml.eps.EpsGraphics: void setStrokeColor(java.awt.Color)>($r16);

        $d8 = d17 / 2.0;

        $d7 = d0 / 2.0;

        $r17 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r5;

        virtualinvoke r6.<net.sourceforge.plantuml.eps.EpsGraphics: void epsRectangle(double,double,double,double,double,double,net.sourceforge.plantuml.ugraphic.color.HColorGradient,net.sourceforge.plantuml.ugraphic.color.ColorMapper)>(d13, d14, d15, d16, $d8, $d7, $r17, r7);

        goto label5;

     label4:
        $r8 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $r9 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r8);

        virtualinvoke r6.<net.sourceforge.plantuml.eps.EpsGraphics: void setStrokeColor(java.awt.Color)>($r9);

        $r10 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $r11 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r10);

        virtualinvoke r6.<net.sourceforge.plantuml.eps.EpsGraphics: void setFillColor(java.awt.Color)>($r11);

        $r12 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d2 = virtualinvoke $r12.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r13 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d3 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.UStroke: double getDashVisible()>();

        $r14 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d4 = virtualinvoke $r14.<net.sourceforge.plantuml.ugraphic.UStroke: double getDashSpace()>();

        virtualinvoke r6.<net.sourceforge.plantuml.eps.EpsGraphics: void setStrokeWidth(double,double,double)>($d2, $d3, $d4);

        $d6 = d17 / 2.0;

        $d5 = d0 / 2.0;

        virtualinvoke r6.<net.sourceforge.plantuml.eps.EpsGraphics: void epsRectangle(double,double,double,double,double,double)>(d13, d14, d15, d16, $d6, $d5);

     label5:
        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.eps.EpsGraphics $r5;
        net.sourceforge.plantuml.ugraphic.URectangle $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.URectangle) r1;

        $r5 = (net.sourceforge.plantuml.eps.EpsGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.eps.DriverRectangleEps: void draw(net.sourceforge.plantuml.ugraphic.URectangle,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.eps.EpsGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
