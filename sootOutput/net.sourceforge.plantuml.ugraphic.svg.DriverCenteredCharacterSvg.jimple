public class net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UCenteredCharacter, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.svg.SvgGraphics)
    {
        net.sourceforge.plantuml.ugraphic.UCenteredCharacter r0;
        char c0;
        net.sourceforge.plantuml.ugraphic.UFont r1;
        net.sourceforge.plantuml.graphic.UnusedSpace r2;
        double d0, $d1, $d2, d3, d4, $d5, $d6, d7;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6, $r13, $r14, $r17;
        java.awt.font.TextLayout r7;
        net.sourceforge.plantuml.ugraphic.UParam r8;
        net.sourceforge.plantuml.ugraphic.color.HColor r9, $r19;
        net.sourceforge.plantuml.svg.SvgGraphics r11;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r12;
        java.awt.Shape $r15;
        java.awt.geom.PathIterator $r16;
        net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg r18;

        r18 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UCenteredCharacter;

        d0 := @parameter1: double;

        d4 := @parameter2: double;

        r12 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r8 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r11 := @parameter5: net.sourceforge.plantuml.svg.SvgGraphics;

        c0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UCenteredCharacter: char getChar()>();

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UCenteredCharacter: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        r2 = staticinvoke <net.sourceforge.plantuml.graphic.UnusedSpace: net.sourceforge.plantuml.graphic.UnusedSpace getUnusedSpace(net.sourceforge.plantuml.ugraphic.UFont,char)>(r1, c0);

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.graphic.UnusedSpace: double getCenterX()>();

        $d2 = d0 - $d1;

        d3 = $d2 - 0.5;

        $d5 = virtualinvoke r2.<net.sourceforge.plantuml.graphic.UnusedSpace: double getCenterY()>();

        $d6 = d4 - $d5;

        d7 = $d6 - 0.5;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: java.awt.font.TextLayout createTextLayout(net.sourceforge.plantuml.ugraphic.UFont,java.lang.String)>(r1, $r6);

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        if r9 != null goto label1;

        $r19 = null;

        goto label2;

     label1:
        $r19 = interfaceinvoke r9.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

     label2:
        if $r19 != r9 goto label3;

        $r17 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r9);

        virtualinvoke r11.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String)>($r17);

        goto label4;

     label3:
        $r13 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r9);

        $r14 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>($r19);

        virtualinvoke r11.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String,java.lang.String)>($r13, $r14);

     label4:
        $r15 = virtualinvoke r7.<java.awt.font.TextLayout: java.awt.Shape getOutline(java.awt.geom.AffineTransform)>(null);

        $r16 = interfaceinvoke $r15.<java.awt.Shape: java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)>(null);

        virtualinvoke r11.<net.sourceforge.plantuml.svg.SvgGraphics: void drawPathIterator(double,double,java.awt.geom.PathIterator)>(d3, d7, $r16);

        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.svg.SvgGraphics $r5;
        net.sourceforge.plantuml.ugraphic.UCenteredCharacter $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.UCenteredCharacter) r1;

        $r5 = (net.sourceforge.plantuml.svg.SvgGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.DriverCenteredCharacterSvg: void draw(net.sourceforge.plantuml.ugraphic.UCenteredCharacter,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.svg.SvgGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
