public class net.sourceforge.plantuml.creole.legacy.StripeTable extends java.lang.Object implements net.sourceforge.plantuml.creole.Stripe
{
    private final net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration;
    private final net.sourceforge.plantuml.ISkinSimple skinParam;
    private final net.sourceforge.plantuml.creole.atom.AtomTable table;
    private final net.sourceforge.plantuml.creole.atom.Atom marged;
    private final net.sourceforge.plantuml.creole.StripeStyle stripeStyle;
    private static final java.lang.String hiddenBar;

    public void <init>(net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.ISkinSimple, java.lang.String)
    {
        net.sourceforge.plantuml.creole.legacy.StripeTable r0;
        net.sourceforge.plantuml.creole.StripeStyle $r1;
        net.sourceforge.plantuml.creole.StripeStyleType $r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        java.lang.String r5;
        net.sourceforge.plantuml.creole.atom.AtomTable $r6, $r8;
        net.sourceforge.plantuml.creole.atom.AtomWithMargin $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor r9;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTable;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.FontConfiguration;

        r3 := @parameter1: net.sourceforge.plantuml.ISkinSimple;

        r5 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.creole.StripeStyle;

        $r2 = <net.sourceforge.plantuml.creole.StripeStyleType: net.sourceforge.plantuml.creole.StripeStyleType NORMAL>;

        specialinvoke $r1.<net.sourceforge.plantuml.creole.StripeStyle: void <init>(net.sourceforge.plantuml.creole.StripeStyleType,int,char)>($r2, 0, 0);

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.StripeStyle stripeStyle> = $r1;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.ISkinSimple skinParam> = r3;

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration> = r4;

        r9 = specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.ugraphic.color.HColor getBackOrFrontColor(java.lang.String,int)>(r5, 1);

        if r9 != null goto label1;

        r9 = virtualinvoke r4.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

     label1:
        $r6 = new net.sourceforge.plantuml.creole.atom.AtomTable;

        specialinvoke $r6.<net.sourceforge.plantuml.creole.atom.AtomTable: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor)>(r9);

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.atom.AtomTable table> = $r6;

        $r7 = new net.sourceforge.plantuml.creole.atom.AtomWithMargin;

        $r8 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.atom.AtomTable table>;

        specialinvoke $r7.<net.sourceforge.plantuml.creole.atom.AtomWithMargin: void <init>(net.sourceforge.plantuml.creole.atom.Atom,double,double)>($r8, 2.0, 2.0);

        r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.atom.Atom marged> = $r7;

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: void analyzeAndAddInternal(java.lang.String)>(r5);

        return;
    }

    public java.util.List getAtoms()
    {
        net.sourceforge.plantuml.creole.legacy.StripeTable r0;
        net.sourceforge.plantuml.creole.atom.Atom $r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTable;

        $r1 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.atom.Atom marged>;

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.creole.atom.Atom getLHeader()
    {
        net.sourceforge.plantuml.creole.legacy.StripeTable r0;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTable;

        return null;
    }

    static net.sourceforge.plantuml.creole.atom.Atom asAtom(java.util.List, double)
    {
        net.sourceforge.plantuml.creole.Sheet $r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1;
        java.util.List r3;
        java.util.Iterator r4;
        boolean $z0;
        net.sourceforge.plantuml.creole.SheetBlock1 $r5;
        double d0;
        net.sourceforge.plantuml.LineBreakStrategy $r6;
        java.lang.Object $r7;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r8;

        r3 := @parameter0: java.util.List;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.creole.Sheet;

        $r1 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.Sheet: void <init>(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r1);

        r4 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.creole.legacy.StripeSimple) $r7;

        virtualinvoke $r0.<net.sourceforge.plantuml.creole.Sheet: void add(net.sourceforge.plantuml.creole.Stripe)>(r8);

        goto label1;

     label2:
        $r5 = new net.sourceforge.plantuml.creole.SheetBlock1;

        $r6 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        specialinvoke $r5.<net.sourceforge.plantuml.creole.SheetBlock1: void <init>(net.sourceforge.plantuml.creole.Sheet,net.sourceforge.plantuml.LineBreakStrategy,double)>($r0, $r6, d0);

        return $r5;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getBackOrFrontColor(java.lang.String, int)
    {
        java.lang.String r0, $r1, r3;
        boolean $z0;
        int i0, i1, i2, $i3;
        java.lang.String[] r2;
        net.sourceforge.plantuml.creole.legacy.StripeTable r4;
        net.sourceforge.plantuml.ISkinSimple $r5, $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r6;
        net.sourceforge.plantuml.api.ThemeStyle $r8;
        java.lang.IllegalStateException $r9;
        net.sourceforge.plantuml.ugraphic.color.HColor $r10;

        r4 := @this: net.sourceforge.plantuml.creole.legacy.StripeTable;

        r0 := @parameter0: java.lang.String;

        i2 := @parameter1: int;

        $z0 = staticinvoke <net.sourceforge.plantuml.creole.legacy.CreoleParser: boolean doesStartByColor(java.lang.String)>(r0);

        if $z0 == 0 goto label4;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(35);

        i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(62);

        if i1 != -1 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i3 = lengthof r2;

        if i2 >= $i3 goto label4;

        r3 = r2[i2];

        if r3 != null goto label2;

        $r10 = null;

        goto label3;

     label2:
        $r5 = r4.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r7 = r4.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r10 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r8, r3);

     label3:
        return $r10;

     label4:
        return null;
    }

    private java.lang.String withouBackColor(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1;
        java.lang.IllegalStateException $r2;
        net.sourceforge.plantuml.creole.legacy.StripeTable r3;

        r3 := @this: net.sourceforge.plantuml.creole.legacy.StripeTable;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(62);

        if i0 != -1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        $i1 = i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;
    }

    private void analyzeAndAddInternal(java.lang.String)
    {
        net.sourceforge.plantuml.creole.legacy.StripeTable r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, r7;
        net.sourceforge.plantuml.creole.atom.AtomTable $r2, $r13;
        java.util.StringTokenizer $r3;
        java.lang.String $r5, $r6, $r24, r25, r26, r28, r29;
        char $c0;
        boolean $z0, $z1, $z3, $z4;
        java.util.List r8;
        java.util.ArrayList $r9;
        java.util.Iterator r11;
        net.sourceforge.plantuml.ISkinSimple $r12, $r21;
        double $d0;
        net.sourceforge.plantuml.creole.atom.Atom $r14;
        java.lang.Object $r15;
        net.sourceforge.plantuml.creole.legacy.StripeSimple $r16;
        net.sourceforge.plantuml.graphic.FontConfiguration $r17;
        net.sourceforge.plantuml.creole.CreoleContext $r18;
        net.sourceforge.plantuml.creole.StripeStyle $r19;
        net.sourceforge.plantuml.creole.CreoleMode $r20;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r23;
        int $i1;
        net.sourceforge.plantuml.creole.legacy.StripeTable$Mode r27;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTable;

        r25 := @parameter0: java.lang.String;

        r26 = virtualinvoke r25.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("\\|", "\ue000");

        r1 = specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.ugraphic.color.HColor getBackOrFrontColor(java.lang.String,int)>(r26, 0);

        if r1 == null goto label1;

        r26 = specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: java.lang.String withouBackColor(java.lang.String)>(r26);

     label1:
        $r2 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.atom.AtomTable table>;

        virtualinvoke $r2.<net.sourceforge.plantuml.creole.atom.AtomTable: void newLine(net.sourceforge.plantuml.ugraphic.color.HColor)>(r1);

        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r26, "|");

     label2:
        $z3 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z3 == 0 goto label8;

        r27 = <net.sourceforge.plantuml.creole.legacy.StripeTable$Mode: net.sourceforge.plantuml.creole.legacy.StripeTable$Mode NORMAL>;

        $r5 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r6 = "\ue000";

        $c0 = virtualinvoke $r6.<java.lang.String: char charAt(int)>(0);

        r28 = virtualinvoke $r5.<java.lang.String: java.lang.String replace(char,char)>($c0, 124);

        $z0 = virtualinvoke r28.<java.lang.String: boolean startsWith(java.lang.String)>("=");

        if $z0 == 0 goto label3;

        r28 = virtualinvoke r28.<java.lang.String: java.lang.String substring(int)>(1);

        r27 = <net.sourceforge.plantuml.creole.legacy.StripeTable$Mode: net.sourceforge.plantuml.creole.legacy.StripeTable$Mode HEADER>;

     label3:
        r7 = specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.ugraphic.color.HColor getBackOrFrontColor(java.lang.String,int)>(r28, 0);

        if r7 == null goto label4;

        r28 = specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: java.lang.String withouBackColor(java.lang.String)>(r28);

     label4:
        r8 = staticinvoke <net.sourceforge.plantuml.creole.legacy.StripeTable: java.util.List getWithNewlinesInternal(java.lang.String)>(r28);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r11 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z4 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label7;

        $r15 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.lang.String) $r15;

        $r16 = new net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r17 = specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.creole.legacy.StripeTable$Mode)>(r27);

        $r19 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.StripeStyle stripeStyle>;

        $r18 = new net.sourceforge.plantuml.creole.CreoleContext;

        specialinvoke $r18.<net.sourceforge.plantuml.creole.CreoleContext: void <init>()>();

        $r21 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $r20 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        specialinvoke $r16.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void <init>(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.creole.StripeStyle,net.sourceforge.plantuml.creole.CreoleContext,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>($r17, $r19, $r18, $r21, $r20);

        $z1 = virtualinvoke r29.<java.lang.String: boolean startsWith(java.lang.String)>("<r>");

        if $z1 == 0 goto label6;

        $r23 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        virtualinvoke $r16.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void setCellAlignment(net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r23);

        $r24 = "<r>";

        $i1 = virtualinvoke $r24.<java.lang.String: int length()>();

        r29 = virtualinvoke r29.<java.lang.String: java.lang.String substring(int)>($i1);

     label6:
        virtualinvoke $r16.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void analyzeAndAdd(java.lang.String)>(r29);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r16);

        goto label5;

     label7:
        $r13 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.atom.AtomTable table>;

        $r12 = r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.ISkinSimple skinParam>;

        $d0 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinSimple: double getPadding()>();

        $r14 = staticinvoke <net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.creole.atom.Atom asAtom(java.util.List,double)>($r9, $d0);

        virtualinvoke $r13.<net.sourceforge.plantuml.creole.atom.AtomTable: void addCell(net.sourceforge.plantuml.creole.atom.Atom,net.sourceforge.plantuml.ugraphic.color.HColor)>($r14, r7);

        goto label2;

     label8:
        return;
    }

    static java.util.List getWithNewlinesInternal(java.lang.String)
    {
        java.util.ArrayList $r0;
        java.lang.StringBuilder $r2;
        java.lang.String r4, $r5, $r7, $r11;
        int $i0, $i3, $i4, $i5, i7;
        char c1, $c2, c6;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        i7 = 0;

     label1:
        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if i7 >= $i0 goto label8;

        c1 = virtualinvoke r4.<java.lang.String: char charAt(int)>(i7);

        if c1 != 92 goto label5;

        $i3 = virtualinvoke r4.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        if i7 >= $i4 goto label5;

        $i5 = i7 + 1;

        c6 = virtualinvoke r4.<java.lang.String: char charAt(int)>($i5);

        i7 = i7 + 1;

        if c6 != 110 goto label2;

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label4;

     label2:
        if c6 != 92 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6);

        goto label4;

     label3:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6);

     label4:
        goto label7;

     label5:
        $c2 = staticinvoke <net.sourceforge.plantuml.BackSlash: char hiddenNewLine()>();

        if c1 != $c2 goto label6;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label7;

     label6:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

     label7:
        i7 = i7 + 1;

        goto label1;

     label8:
        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        return $r0;
    }

    private net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.creole.legacy.StripeTable$Mode)
    {
        net.sourceforge.plantuml.creole.legacy.StripeTable$Mode r0, $r1;
        net.sourceforge.plantuml.creole.legacy.StripeTable r2;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3, $r4, $r5;

        r2 := @this: net.sourceforge.plantuml.creole.legacy.StripeTable;

        r0 := @parameter0: net.sourceforge.plantuml.creole.legacy.StripeTable$Mode;

        $r1 = <net.sourceforge.plantuml.creole.legacy.StripeTable$Mode: net.sourceforge.plantuml.creole.legacy.StripeTable$Mode NORMAL>;

        if r0 != $r1 goto label1;

        $r5 = r2.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        return $r5;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.creole.legacy.StripeTable: net.sourceforge.plantuml.graphic.FontConfiguration fontConfiguration>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration bold()>();

        return $r4;
    }

    public void analyzeAndAddLine(java.lang.String)
    {
        net.sourceforge.plantuml.creole.legacy.StripeTable r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.creole.legacy.StripeTable;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.creole.legacy.StripeTable: void analyzeAndAddInternal(java.lang.String)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.creole.legacy.StripeTable: java.lang.String hiddenBar> = "\ue000";

        return;
    }
}
