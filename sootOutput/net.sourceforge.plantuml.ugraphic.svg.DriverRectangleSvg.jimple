public class net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.URectangle, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.svg.SvgGraphics)
    {
        net.sourceforge.plantuml.ugraphic.URectangle r0;
        double d0, d1, $d2, $d3, $d4, $d5, d6, d7, d8, d9;
        net.sourceforge.plantuml.svg.SvgGraphics r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        net.sourceforge.plantuml.ugraphic.UStroke $r4, $r5;
        java.lang.String $r6, $r10, $r11;
        net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg r7;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r8;
        net.sourceforge.plantuml.ugraphic.UClip r9;
        java.awt.geom.Rectangle2D$Double $r12, r13;
        byte $b0;

        r7 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.URectangle;

        d6 := @parameter1: double;

        d7 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r1 := @parameter5: net.sourceforge.plantuml.svg.SvgGraphics;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getRx()>();

        d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getRy()>();

        d8 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        d9 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        staticinvoke <net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: void applyFillColor(net.sourceforge.plantuml.svg.SvgGraphics,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam)>(r1, r2, r3);

        staticinvoke <net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: void applyStrokeColor(net.sourceforge.plantuml.svg.SvgGraphics,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam)>(r1, r2, r3);

        $r4 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d2 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UStroke: java.lang.String getDasharraySvg()>();

        virtualinvoke r1.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeWidth(double,java.lang.String)>($d2, $r6);

        $r8 = r7.<net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r9 == null goto label1;

        $r12 = new java.awt.geom.Rectangle2D$Double;

        specialinvoke $r12.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>(d6, d7, d8, d9);

        r13 = virtualinvoke r9.<net.sourceforge.plantuml.ugraphic.UClip: java.awt.geom.Rectangle2D$Double getClippedRectangle(java.awt.geom.Rectangle2D$Double)>($r12);

        d6 = r13.<java.awt.geom.Rectangle2D$Double: double x>;

        d7 = r13.<java.awt.geom.Rectangle2D$Double: double y>;

        d8 = r13.<java.awt.geom.Rectangle2D$Double: double width>;

        d9 = r13.<java.awt.geom.Rectangle2D$Double: double height>;

        $b0 = d9 cmpg 0.0;

        if $b0 > 0 goto label1;

        return;

     label1:
        $d3 = d0 / 2.0;

        $d4 = d1 / 2.0;

        $d5 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: double getDeltaShadow()>();

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String getComment()>();

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.URectangle: java.lang.String getCodeLine()>();

        virtualinvoke r1.<net.sourceforge.plantuml.svg.SvgGraphics: void svgRectangle(double,double,double,double,double,double,double,java.lang.String,java.lang.String)>(d6, d7, d8, d9, $d3, $d4, $d5, $r10, $r11);

        return;
    }

    public static void applyFillColor(net.sourceforge.plantuml.svg.SvgGraphics, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam)
    {
        net.sourceforge.plantuml.ugraphic.UParam r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, $r7, $r9, $r18;
        boolean $z0;
        net.sourceforge.plantuml.svg.SvgGraphics r2;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r3;
        java.lang.String $r4, $r5, $r6, $r8, $r10, r11, $r16;
        char $c0;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r17;

        r2 := @parameter0: net.sourceforge.plantuml.svg.SvgGraphics;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r0 := @parameter2: net.sourceforge.plantuml.ugraphic.UParam;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        $z0 = r1 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z0 == 0 goto label1;

        r17 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r1;

        $r7 = virtualinvoke r17.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor1()>();

        $r8 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>($r7);

        $r9 = virtualinvoke r17.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor2()>();

        $r10 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>($r9);

        $c0 = virtualinvoke r17.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: char getPolicy()>();

        r11 = virtualinvoke r2.<net.sourceforge.plantuml.svg.SvgGraphics: java.lang.String createSvgGradient(java.lang.String,java.lang.String,char)>($r8, $r10, $c0);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url(#");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String)>($r16);

        goto label5;

     label1:
        if r1 != null goto label2;

        $r18 = null;

        goto label3;

     label2:
        $r18 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

     label3:
        if $r18 != r1 goto label4;

        $r6 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r1);

        virtualinvoke r2.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String)>($r6);

        goto label5;

     label4:
        $r4 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r1);

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>($r18);

        virtualinvoke r2.<net.sourceforge.plantuml.svg.SvgGraphics: void setFillColor(java.lang.String,java.lang.String)>($r4, $r5);

     label5:
        return;
    }

    public static void applyStrokeColor(net.sourceforge.plantuml.svg.SvgGraphics, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam)
    {
        net.sourceforge.plantuml.ugraphic.UParam r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, $r7, $r9, $r18;
        boolean $z0;
        net.sourceforge.plantuml.svg.SvgGraphics r2;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r3;
        java.lang.String $r4, $r5, $r6, $r8, $r10, r11, $r16;
        char $c0;
        java.lang.StringBuilder $r12, $r13, $r14, $r15;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r17;

        r2 := @parameter0: net.sourceforge.plantuml.svg.SvgGraphics;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r0 := @parameter2: net.sourceforge.plantuml.ugraphic.UParam;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $z0 = r1 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z0 == 0 goto label1;

        r17 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r1;

        $r7 = virtualinvoke r17.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor1()>();

        $r8 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>($r7);

        $r9 = virtualinvoke r17.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor2()>();

        $r10 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toRGB(net.sourceforge.plantuml.ugraphic.color.HColor)>($r9);

        $c0 = virtualinvoke r17.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: char getPolicy()>();

        r11 = virtualinvoke r2.<net.sourceforge.plantuml.svg.SvgGraphics: java.lang.String createSvgGradient(java.lang.String,java.lang.String,char)>($r8, $r10, $c0);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("url(#");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeColor(java.lang.String)>($r16);

        goto label5;

     label1:
        if r1 != null goto label2;

        $r18 = null;

        goto label3;

     label2:
        $r18 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

     label3:
        if $r18 != r1 goto label4;

        $r6 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r1);

        virtualinvoke r2.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeColor(java.lang.String)>($r6);

        goto label5;

     label4:
        $r4 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r1);

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>($r18);

        virtualinvoke r2.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeColor(java.lang.String,java.lang.String)>($r4, $r5);

     label5:
        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.svg.SvgGraphics $r5;
        net.sourceforge.plantuml.ugraphic.URectangle $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.URectangle) r1;

        $r5 = (net.sourceforge.plantuml.svg.SvgGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.DriverRectangleSvg: void draw(net.sourceforge.plantuml.ugraphic.URectangle,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.svg.SvgGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
