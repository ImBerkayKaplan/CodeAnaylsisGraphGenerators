public class ext.plantuml.com.ctreber.acearth.scanbit.ScanBit extends java.lang.Object implements java.lang.Comparable
{
    private int fY;
    private int lXFrom;
    private int fXTo;
    private int fType;

    public void <init>(int, int, int, int)
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit r0;
        int i0, i1, i2, i3;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fY> = i0;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int lXFrom> = i1;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fXTo> = i2;

        r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fType> = i3;

        return;
    }

    public int compareTo(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.Class $r4;
        java.lang.String $r6;
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit r7, r8;
        int $i0, $i1, $i2, $i3;
        byte $b4;

        r8 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ext.plantuml.com.ctreber.acearth.scanbit.ScanBit;

        if $z0 == 0 goto label4;

        r7 = (ext.plantuml.com.ctreber.acearth.scanbit.ScanBit) r0;

        $i1 = r8.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fY>;

        $i0 = r7.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fY>;

        if $i1 <= $i0 goto label1;

        $b4 = 1;

        goto label3;

     label1:
        $i3 = r8.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fY>;

        $i2 = r7.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fY>;

        if $i3 >= $i2 goto label2;

        $b4 = -1;

        goto label3;

     label2:
        $b4 = 0;

     label3:
        return $b4;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t compare with ");

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r1;
    }

    public int getY()
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fY>;

        return $i0;
    }

    public int getlXFrom()
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int lXFrom>;

        return $i0;
    }

    public int getXTo()
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fXTo>;

        return $i0;
    }

    public int getType()
    {
        ext.plantuml.com.ctreber.acearth.scanbit.ScanBit r0;
        int $i0;

        r0 := @this: ext.plantuml.com.ctreber.acearth.scanbit.ScanBit;

        $i0 = r0.<ext.plantuml.com.ctreber.acearth.scanbit.ScanBit: int fType>;

        return $i0;
    }
}
