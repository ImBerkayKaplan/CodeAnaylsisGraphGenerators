public class net.sourceforge.plantuml.posimo.PathDrawerInterface extends java.lang.Object implements net.sourceforge.plantuml.posimo.PathDrawer
{
    private final net.sourceforge.plantuml.skin.rose.Rose rose;
    private final net.sourceforge.plantuml.ISkinParam param;
    private final net.sourceforge.plantuml.cucadiagram.LinkType linkType;

    public static net.sourceforge.plantuml.posimo.PathDrawerInterface create(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.LinkType)
    {
        net.sourceforge.plantuml.posimo.PathDrawerInterface $r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.cucadiagram.LinkType r3;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.LinkType;

        $r0 = new net.sourceforge.plantuml.posimo.PathDrawerInterface;

        $r1 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        specialinvoke $r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: void <init>(net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.LinkType)>($r1, r2, r3);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.skin.rose.Rose, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.LinkType)
    {
        net.sourceforge.plantuml.posimo.PathDrawerInterface r0;
        net.sourceforge.plantuml.skin.rose.Rose r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.cucadiagram.LinkType r3;

        r0 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r1 := @parameter0: net.sourceforge.plantuml.skin.rose.Rose;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.LinkType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.skin.rose.Rose rose> = r1;

        r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.ISkinParam param> = r2;

        r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.cucadiagram.LinkType linkType> = r3;

        return;
    }

    public void drawPathBefore(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.posimo.Positionable, net.sourceforge.plantuml.posimo.Positionable, net.sourceforge.plantuml.posimo.Path)
    {
        net.sourceforge.plantuml.posimo.PathDrawerInterface r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.posimo.Positionable r2, r3;
        net.sourceforge.plantuml.posimo.Path r4;

        r0 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 := @parameter1: net.sourceforge.plantuml.posimo.Positionable;

        r3 := @parameter2: net.sourceforge.plantuml.posimo.Positionable;

        r4 := @parameter3: net.sourceforge.plantuml.posimo.Path;

        return;
    }

    private void noDash(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;

        r1 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private void goDash(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;

        r1 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void drawPathAfter(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.posimo.Positionable, net.sourceforge.plantuml.posimo.Positionable, net.sourceforge.plantuml.posimo.Path)
    {
        net.sourceforge.plantuml.posimo.Path r0;
        net.sourceforge.plantuml.posimo.RacorderOrthogonal $r1;
        java.awt.geom.Point2D r3, r8, r13, r14, r19, r22;
        net.sourceforge.plantuml.posimo.Positionable r4, r15;
        java.awt.geom.Rectangle2D $r5, $r16;
        java.awt.geom.Line2D $r6, $r17;
        net.sourceforge.plantuml.posimo.DotPath r7, r18, r25;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r9;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.UGraphic r10;
        net.sourceforge.plantuml.cucadiagram.LinkType $r11, $r20, $r23;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r12, $r21;
        java.lang.UnsupportedOperationException $r24;
        java.awt.geom.CubicCurve2D$Double r26, r27;

        r9 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r10 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r15 := @parameter1: net.sourceforge.plantuml.posimo.Positionable;

        r4 := @parameter2: net.sourceforge.plantuml.posimo.Positionable;

        r0 := @parameter3: net.sourceforge.plantuml.posimo.Path;

        r25 = virtualinvoke r0.<net.sourceforge.plantuml.posimo.Path: net.sourceforge.plantuml.posimo.DotPath getDotPath()>();

        $r1 = new net.sourceforge.plantuml.posimo.RacorderOrthogonal;

        specialinvoke $r1.<net.sourceforge.plantuml.posimo.RacorderOrthogonal: void <init>()>();

        r3 = virtualinvoke r25.<net.sourceforge.plantuml.posimo.DotPath: java.awt.geom.Point2D getEndPoint()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.posimo.PositionableUtils: java.awt.geom.Rectangle2D convert(net.sourceforge.plantuml.posimo.Positionable)>(r4);

        $r6 = virtualinvoke r25.<net.sourceforge.plantuml.posimo.DotPath: java.awt.geom.Line2D getEndTangeante()>();

        r7 = interfaceinvoke $r1.<net.sourceforge.plantuml.posimo.Racorder: net.sourceforge.plantuml.posimo.DotPath getRacordIn(java.awt.geom.Rectangle2D,java.awt.geom.Line2D)>($r5, $r6);

        r8 = virtualinvoke r7.<net.sourceforge.plantuml.posimo.DotPath: java.awt.geom.Point2D getEndPoint()>();

        d0 = specialinvoke r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: double atan2(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r8);

        $r11 = r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.cucadiagram.LinkType linkType>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecor1()>();

        r13 = specialinvoke r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: java.awt.geom.Point2D drawSymbol(net.sourceforge.plantuml.ugraphic.UGraphic,double,java.awt.geom.Point2D,net.sourceforge.plantuml.cucadiagram.LinkDecor)>(r10, d0, r8, $r12);

        r14 = virtualinvoke r25.<net.sourceforge.plantuml.posimo.DotPath: java.awt.geom.Point2D getStartPoint()>();

        $r16 = staticinvoke <net.sourceforge.plantuml.posimo.PositionableUtils: java.awt.geom.Rectangle2D convert(net.sourceforge.plantuml.posimo.Positionable)>(r15);

        $r17 = virtualinvoke r25.<net.sourceforge.plantuml.posimo.DotPath: java.awt.geom.Line2D getStartTangeante()>();

        r18 = interfaceinvoke $r1.<net.sourceforge.plantuml.posimo.Racorder: net.sourceforge.plantuml.posimo.DotPath getRacordOut(java.awt.geom.Rectangle2D,java.awt.geom.Line2D)>($r16, $r17);

        r19 = virtualinvoke r18.<net.sourceforge.plantuml.posimo.DotPath: java.awt.geom.Point2D getStartPoint()>();

        d1 = specialinvoke r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: double atan2(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r14, r19);

        $r20 = r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.cucadiagram.LinkType linkType>;

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecor2()>();

        r22 = specialinvoke r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: java.awt.geom.Point2D drawSymbol(net.sourceforge.plantuml.ugraphic.UGraphic,double,java.awt.geom.Point2D,net.sourceforge.plantuml.cucadiagram.LinkDecor)>(r10, d1, r19, $r21);

        if r13 == null goto label1;

        r26 = specialinvoke r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: java.awt.geom.CubicCurve2D$Double getLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r3, r13);

        r25 = virtualinvoke r25.<net.sourceforge.plantuml.posimo.DotPath: net.sourceforge.plantuml.posimo.DotPath addAfter(java.awt.geom.CubicCurve2D$Double)>(r26);

     label1:
        if r22 == null goto label2;

        r27 = specialinvoke r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: java.awt.geom.CubicCurve2D$Double getLine(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r22, r14);

        virtualinvoke r25.<net.sourceforge.plantuml.posimo.DotPath: net.sourceforge.plantuml.posimo.DotPath addBefore(java.awt.geom.CubicCurve2D$Double)>(r27);

     label2:
        $r23 = r9.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.cucadiagram.LinkType linkType>;

        virtualinvoke $r23.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkStyle getStyle()>();

        $r24 = new java.lang.UnsupportedOperationException;

        specialinvoke $r24.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r24;
    }

    private double atan2(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r0, r1;
        double $d0, $d1, $d2, d3, $d4, $d5, d6, d7;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r2;

        r2 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r0 := @parameter0: java.awt.geom.Point2D;

        r1 := @parameter1: java.awt.geom.Point2D;

        $d0 = virtualinvoke r0.<java.awt.geom.Point2D: double getX()>();

        $d1 = neg $d0;

        $d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        d3 = $d1 + $d2;

        $d4 = virtualinvoke r0.<java.awt.geom.Point2D: double getY()>();

        $d5 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        d6 = $d4 - $d5;

        d7 = staticinvoke <java.lang.Math: double atan2(double,double)>(d3, d6);

        return d7;
    }

    private java.awt.geom.Point2D drawSymbol(net.sourceforge.plantuml.ugraphic.UGraphic, double, java.awt.geom.Point2D, net.sourceforge.plantuml.cucadiagram.LinkDecor)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        double d0;
        java.awt.geom.Point2D r3;
        net.sourceforge.plantuml.cucadiagram.LinkDecor r4;

        r1 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        r3 := @parameter2: java.awt.geom.Point2D;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.LinkDecor;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private java.awt.geom.CubicCurve2D$Double getLine(java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        java.awt.geom.CubicCurve2D$Double $r0;
        java.awt.geom.Point2D r1, r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r3;

        r3 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r1 := @parameter0: java.awt.geom.Point2D;

        r2 := @parameter1: java.awt.geom.Point2D;

        $r0 = new java.awt.geom.CubicCurve2D$Double;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d2 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $d4 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d5 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        $d6 = virtualinvoke r2.<java.awt.geom.Point2D: double getX()>();

        $d7 = virtualinvoke r2.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r0.<java.awt.geom.CubicCurve2D$Double: void <init>(double,double,double,double,double,double,double,double)>($d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7);

        return $r0;
    }

    private static java.awt.geom.Point2D getFarest(java.awt.geom.Point2D, java.awt.geom.Point2D, java.util.Collection)
    {
        java.util.Collection r0;
        java.util.Iterator r1;
        java.lang.Object $r2, $r4;
        java.awt.geom.Point2D $r3, r5, r6, r7, r8;
        double $d0, $d1, d2, $d3, $d4, d5;
        byte $b0;
        boolean $z0;

        r6 := @parameter0: java.awt.geom.Point2D;

        r7 := @parameter1: java.awt.geom.Point2D;

        r0 := @parameter2: java.util.Collection;

        r8 = null;

        d5 = 0.0;

        r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.awt.geom.Point2D) $r4;

        if r8 != null goto label2;

        r8 = r5;

        $d3 = virtualinvoke r6.<java.awt.geom.Point2D: double distanceSq(java.awt.geom.Point2D)>(r5);

        $d4 = virtualinvoke r7.<java.awt.geom.Point2D: double distanceSq(java.awt.geom.Point2D)>(r5);

        d5 = $d3 + $d4;

        goto label1;

     label2:
        $d0 = virtualinvoke r6.<java.awt.geom.Point2D: double distanceSq(java.awt.geom.Point2D)>(r5);

        $d1 = virtualinvoke r7.<java.awt.geom.Point2D: double distanceSq(java.awt.geom.Point2D)>(r5);

        d2 = $d0 + $d1;

        $b0 = d2 cmpg d5;

        if $b0 >= 0 goto label3;

        r8 = r5;

        d5 = d2;

     label3:
        goto label1;

     label4:
        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r8);

        $r3 = (java.awt.geom.Point2D) $r2;

        return $r3;
    }

    private java.awt.geom.Point2D drawSquare(net.sourceforge.plantuml.ugraphic.UGraphic, double, double)
    {
        net.sourceforge.plantuml.posimo.PathDrawerInterface r0;
        net.sourceforge.plantuml.ColorParam $r1, $r6;
        net.sourceforge.plantuml.ISkinParam $r2, $r7;
        net.sourceforge.plantuml.skin.rose.Rose $r3, $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r9;
        net.sourceforge.plantuml.ugraphic.UBackground $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;
        double d2, d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UGraphic $r11, r14, r15, r16;
        net.sourceforge.plantuml.ugraphic.URectangle $r12;
        java.awt.geom.Point2D$Double $r13;

        r0 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d2 := @parameter1: double;

        d3 := @parameter2: double;

        $r3 = r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r2 = r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.ISkinParam param>;

        $r1 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam classBackground>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r2, $r1);

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r15 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r8 = r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r7 = r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.ISkinParam param>;

        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam classBorder>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r7, $r6);

        r16 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = d2 - 5.0;

        $d4 = d3 - 5.0;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, $d4);

        $r11 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r12 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(10.0, 10.0);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r12);

        $r13 = new java.awt.geom.Point2D$Double;

        specialinvoke $r13.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d2, d3);

        return $r13;
    }

    java.awt.geom.Point2D drawExtends(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        net.sourceforge.plantuml.posimo.PathDrawerInterface r0;
        net.sourceforge.plantuml.ColorParam $r1, $r6;
        net.sourceforge.plantuml.ISkinParam $r2, $r7;
        net.sourceforge.plantuml.skin.rose.Rose $r3, $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r9;
        net.sourceforge.plantuml.ugraphic.UBackground $r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r10;
        double d2, d3, d4, $d5, $d6, $d7, $d8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r12;
        net.sourceforge.plantuml.ugraphic.UGraphic $r13, r21, r22, r23;
        java.util.List $r14, $r17;
        java.lang.Object $r15, $r18;
        java.awt.geom.Point2D $r16, $r19, r20;

        r0 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r21 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d3 := @parameter1: double;

        d4 := @parameter2: double;

        d2 := @parameter3: double;

        $r3 = r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r2 = r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.ISkinParam param>;

        $r1 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam background>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r2, $r1);

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r22 = interfaceinvoke r21.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r8 = r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r7 = r0.<net.sourceforge.plantuml.posimo.PathDrawerInterface: net.sourceforge.plantuml.ISkinParam param>;

        $r6 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam classBorder>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>($r7, $r6);

        r23 = interfaceinvoke r22.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $r10 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 1.0);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-9.0, 26.0);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(9.0, 26.0);

        virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>(d2);

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d4);

        $r13 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r10);

        $r14 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.lang.Object get(int)>(1);

        $r16 = (java.awt.geom.Point2D) $r15;

        $r17 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(2);

        $r19 = (java.awt.geom.Point2D) $r18;

        r20 = staticinvoke <net.sourceforge.plantuml.posimo.BezierUtils: java.awt.geom.Point2D middle(java.awt.geom.Point2D,java.awt.geom.Point2D)>($r16, $r19);

        $d5 = virtualinvoke r20.<java.awt.geom.Point2D: double getX()>();

        $d6 = $d5 + d3;

        $d7 = virtualinvoke r20.<java.awt.geom.Point2D: double getY()>();

        $d8 = $d7 + d4;

        virtualinvoke r20.<java.awt.geom.Point2D: void setLocation(double,double)>($d6, $d8);

        return r20;
    }

    private java.awt.geom.Point2D drawDiamond(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double d2, d3, d4, $d5, $d6, $d7, $d8;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        java.util.List $r5;
        java.lang.Object $r6;
        java.awt.geom.Point2D r7;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r8;

        r8 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d3 := @parameter1: double;

        d4 := @parameter2: double;

        d2 := @parameter3: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-5.0, 7.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 14.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(5.0, 7.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>(d2);

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d4);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r5 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(2);

        r7 = (java.awt.geom.Point2D) $r6;

        $d5 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>();

        $d6 = $d5 + d3;

        $d7 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>();

        $d8 = $d7 + d4;

        virtualinvoke r7.<java.awt.geom.Point2D: void setLocation(double,double)>($d6, $d8);

        return r7;
    }

    private java.awt.geom.Point2D drawArrow(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double d3, d4, d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        java.util.List $r5;
        java.lang.Object $r6;
        java.awt.geom.Point2D r7;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r8;

        r8 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d4 := @parameter1: double;

        d5 := @parameter2: double;

        d3 := @parameter3: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(-6.0, 10.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 4.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(6.0, 10.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>(d3);

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d4, d5);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r5 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: java.util.List getPoints()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(2);

        r7 = (java.awt.geom.Point2D) $r6;

        $d6 = virtualinvoke r7.<java.awt.geom.Point2D: double getX()>();

        $d7 = $d6 + d4;

        $d8 = virtualinvoke r7.<java.awt.geom.Point2D: double getY()>();

        $d9 = $d8 + d5;

        virtualinvoke r7.<java.awt.geom.Point2D: void setLocation(double,double)>($d7, $d9);

        return r7;
    }

    private java.awt.geom.Point2D nullIfContained(java.awt.geom.Point2D, net.sourceforge.plantuml.posimo.Positionable, net.sourceforge.plantuml.posimo.Positionable)
    {
        net.sourceforge.plantuml.posimo.Positionable r0, r2;
        java.awt.geom.Point2D r1;
        boolean $z0, $z1;
        net.sourceforge.plantuml.posimo.PathDrawerInterface r3;

        r3 := @this: net.sourceforge.plantuml.posimo.PathDrawerInterface;

        r1 := @parameter0: java.awt.geom.Point2D;

        r0 := @parameter1: net.sourceforge.plantuml.posimo.Positionable;

        r2 := @parameter2: net.sourceforge.plantuml.posimo.Positionable;

        $z0 = staticinvoke <net.sourceforge.plantuml.posimo.PositionableUtils: boolean contains(net.sourceforge.plantuml.posimo.Positionable,java.awt.geom.Point2D)>(r0, r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = staticinvoke <net.sourceforge.plantuml.posimo.PositionableUtils: boolean contains(net.sourceforge.plantuml.posimo.Positionable,java.awt.geom.Point2D)>(r2, r1);

        if $z1 == 0 goto label2;

        return null;

     label2:
        return r1;
    }
}
