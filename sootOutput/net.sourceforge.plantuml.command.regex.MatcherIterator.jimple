public class net.sourceforge.plantuml.command.regex.MatcherIterator extends java.lang.Object implements java.util.Iterator
{
    private int cpt;
    private final net.sourceforge.plantuml.command.regex.Matcher2 matcher;

    void <init>(net.sourceforge.plantuml.command.regex.Matcher2)
    {
        net.sourceforge.plantuml.command.regex.MatcherIterator r0;
        net.sourceforge.plantuml.command.regex.Matcher2 r1;

        r0 := @this: net.sourceforge.plantuml.command.regex.MatcherIterator;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.Matcher2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.command.regex.MatcherIterator: int cpt> = 1;

        r0.<net.sourceforge.plantuml.command.regex.MatcherIterator: net.sourceforge.plantuml.command.regex.Matcher2 matcher> = r1;

        return;
    }

    public boolean hasNext()
    {
        net.sourceforge.plantuml.command.regex.MatcherIterator r0;
        net.sourceforge.plantuml.command.regex.Matcher2 $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.command.regex.MatcherIterator;

        $i0 = r0.<net.sourceforge.plantuml.command.regex.MatcherIterator: int cpt>;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.MatcherIterator: net.sourceforge.plantuml.command.regex.Matcher2 matcher>;

        $i1 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Matcher2: int groupCount()>();

        if $i0 > $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String next()
    {
        net.sourceforge.plantuml.command.regex.MatcherIterator r0;
        int $i0, $i1;
        net.sourceforge.plantuml.command.regex.Matcher2 $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.command.regex.MatcherIterator;

        $r1 = r0.<net.sourceforge.plantuml.command.regex.MatcherIterator: net.sourceforge.plantuml.command.regex.Matcher2 matcher>;

        $i0 = r0.<net.sourceforge.plantuml.command.regex.MatcherIterator: int cpt>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.command.regex.MatcherIterator: int cpt> = $i1;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>($i0);

        return $r2;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.command.regex.MatcherIterator r1;

        r1 := @this: net.sourceforge.plantuml.command.regex.MatcherIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        net.sourceforge.plantuml.command.regex.MatcherIterator r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.command.regex.MatcherIterator;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.MatcherIterator: java.lang.String next()>();

        return $r1;
    }
}
