public class net.sourceforge.plantuml.svek.EntityDomain extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final double margin;
    private final double radius;
    private final double suppY;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContext;

    public void <init>(net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.svek.EntityDomain r0;
        net.sourceforge.plantuml.graphic.SymbolContext r1;

        r0 := @this: net.sourceforge.plantuml.svek.EntityDomain;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.SymbolContext;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.EntityDomain: double suppY> = 2.0;

        r0.<net.sourceforge.plantuml.svek.EntityDomain: double radius> = 12.0;

        r0.<net.sourceforge.plantuml.svek.EntityDomain: double margin> = 4.0;

        r0.<net.sourceforge.plantuml.svek.EntityDomain: double margin> = 4.0;

        r0.<net.sourceforge.plantuml.svek.EntityDomain: double radius> = 12.0;

        r0.<net.sourceforge.plantuml.svek.EntityDomain: double suppY> = 2.0;

        r0.<net.sourceforge.plantuml.svek.EntityDomain: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = r1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.EntityDomain r0;
        net.sourceforge.plantuml.graphic.SymbolContext $r1, $r4;
        net.sourceforge.plantuml.ugraphic.UEllipse $r2;
        double $d0, $d1, $d2, d5, d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r7;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, $r8, r10, r11;
        net.sourceforge.plantuml.ugraphic.ULine $r9;

        r0 := @this: net.sourceforge.plantuml.svek.EntityDomain;

        r10 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d5 = 0.0 + 4.0;

        d6 = 0.0 + 4.0;

        $r1 = r0.<net.sourceforge.plantuml.svek.EntityDomain: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        r11 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r10);

        $r2 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(24.0, 24.0);

        $r4 = r0.<net.sourceforge.plantuml.svek.EntityDomain: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UEllipse: void setDeltaShadow(double)>($d0);

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d5, d6);

        $r6 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d1 = d6 + 24.0;

        $d2 = $d1 + 2.0;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d5, $d2);

        $r8 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(24.0);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.svek.EntityDomain r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.svek.EntityDomain;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(32.0, 32.0);

        return $r0;
    }
}
