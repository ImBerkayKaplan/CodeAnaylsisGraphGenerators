public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final double width;
    private final double height;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane;

    public java.util.Collection getMyChildren()
    {
        java.util.List $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.ISkinParam, double, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;
        net.sourceforge.plantuml.ISkinParam r1;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: void <init>(net.sourceforge.plantuml.ISkinParam,double,double,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, d0, d1, null);

        return;
    }

    public void <init>(net.sourceforge.plantuml.ISkinParam, double, double, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;
        net.sourceforge.plantuml.ISkinParam r1;
        double d0, d1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: double width> = d0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: double height> = d1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane> = r2;

        return;
    }

    public void <init>(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;
        net.sourceforge.plantuml.ISkinParam r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: void <init>(net.sourceforge.plantuml.ISkinParam,double,double,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, 0.0, 0.0, null);

        return;
    }

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: void <init>(net.sourceforge.plantuml.ISkinParam,double,double,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r1, 0.0, 0.0, r2);

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        return "FtileEmpty";
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        return;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionEmpty()>();

        return $r1;
    }

    protected final net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionEmpty()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r1;
        double $d0, $d1, $d2, $d3, $d4;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        $r0 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d4 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: double width>;

        $d3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: double height>;

        $d0 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: double width>;

        $d2 = $d0 / 2.0;

        $d1 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: double height>;

        specialinvoke $r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double,double)>($d4, $d3, $d2, 0.0, $d1);

        return $r0;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        return $r1;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        return $r1;
    }

    public java.util.Set getSwimlanes()
    {
        java.util.HashSet $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r3, $r5;
        java.util.Set $r4;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        if $r3 == null goto label1;

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileEmpty: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r5);

     label1:
        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r4;
    }
}
