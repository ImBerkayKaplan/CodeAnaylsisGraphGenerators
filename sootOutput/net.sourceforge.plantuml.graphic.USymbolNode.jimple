class net.sourceforge.plantuml.graphic.USymbolNode extends net.sourceforge.plantuml.graphic.USymbol
{

    void <init>()
    {
        net.sourceforge.plantuml.graphic.USymbolNode r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.SkinParameter $r0;
        net.sourceforge.plantuml.graphic.USymbolNode r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        $r0 = <net.sourceforge.plantuml.graphic.SkinParameter: net.sourceforge.plantuml.graphic.SkinParameter NODE>;

        return $r0;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolNode r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName node>;

        return $r0;
    }

    private void drawNode(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        double d0, d1, $d2, $d3, d4, $d5, $d6, $d7, $d8;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r4, $r7, $r10, $r13;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r6, $r9, $r12;
        net.sourceforge.plantuml.ugraphic.ULine $r5, $r8, $r11;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UEmpty $r14;
        net.sourceforge.plantuml.graphic.USymbolNode r15;

        r15 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d4 := @parameter3: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 10.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(10.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d0, 0.0);

        $d2 = d1 - 10.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(d0, $d2);

        $d3 = d0 - 10.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d3, d1);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, d1);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 10.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void setDeltaShadow(double)>(d4);

        interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = d0 - 10.0;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, 10.0);

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r3);

        $r5 = new net.sourceforge.plantuml.ugraphic.ULine;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>(10.0, -10.0);

        interfaceinvoke $r4.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r5);

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(10.0);

        $r7 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $d6 = d0 - 10.0;

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d6);

        interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r8);

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d7 = d0 - 10.0;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d7, 10.0);

        $r10 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $d8 = d1 - 10.0;

        $r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>($d8);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r11);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(0.0, d1);

        $r13 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r14 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>(10.0, 10.0);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r14);

     label1:
        return;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolNode r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(15.0, 25.0, 20.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolNode$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolNode r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r5 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolNode$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolNode$1: void <init>(net.sourceforge.plantuml.graphic.USymbolNode,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r1, r2, r3, r4, r5);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolNode$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolNode r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4, r6;
        double d0, d1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r4 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolNode$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: void <init>(net.sourceforge.plantuml.graphic.USymbolNode,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,double,net.sourceforge.plantuml.graphic.TextBlock,double)>(r1, r2, r3, r4, d0, r5, d1);

        return $r0;
    }

    public int suppHeightBecauseOfShape()
    {
        net.sourceforge.plantuml.graphic.USymbolNode r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        return 5;
    }

    public int suppWidthBecauseOfShape()
    {
        net.sourceforge.plantuml.graphic.USymbolNode r0;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolNode;

        return 60;
    }

    static void access$000(net.sourceforge.plantuml.graphic.USymbolNode, net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        net.sourceforge.plantuml.graphic.USymbolNode r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        double d0, d1, d2;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolNode;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolNode: void drawNode(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r1, d0, d1, d2);

        return;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolNode)
    {
        net.sourceforge.plantuml.graphic.USymbolNode r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolNode;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolNode: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }
}
