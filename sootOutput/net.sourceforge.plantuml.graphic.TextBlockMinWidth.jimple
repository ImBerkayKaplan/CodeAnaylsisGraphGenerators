class net.sourceforge.plantuml.graphic.TextBlockMinWidth extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final net.sourceforge.plantuml.graphic.TextBlock textBlock;
    private final double minWidth;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment;

    void <init>(net.sourceforge.plantuml.graphic.TextBlock, double, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlockMinWidth r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        double d0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r2;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockMinWidth;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter1: double;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.TextBlock textBlock> = r1;

        r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: double minWidth> = d0;

        r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment> = r2;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlockMinWidth r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, $r4;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockMinWidth;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: double minWidth>;

        $r4 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D atLeast(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r3, $d0, 0.0);

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.TextBlockMinWidth r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.UnsupportedOperationException $r7;
        net.sourceforge.plantuml.ugraphic.UGraphic r8, $r14, $r20;
        net.sourceforge.plantuml.graphic.TextBlock $r9, $r12, $r15, $r18, $r21;
        net.sourceforge.plantuml.graphic.StringBounder $r10, $r11, $r16, $r17;
        double $d0, $d1, $d2, $d3, $d4, d5, d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r13, $r19;
        net.sourceforge.plantuml.awt.geom.Dimension2D r22, r23, r24, r25;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockMinWidth;

        r8 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r1 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        if $r2 != $r1 goto label1;

        $r21 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        interfaceinvoke $r21.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r8);

        goto label4;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r3 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if $r4 != $r3 goto label2;

        $r15 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $r16 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r22 = interfaceinvoke $r15.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r16);

        $r17 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r23 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r17);

        $d2 = virtualinvoke r23.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r22.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d5 = $d2 - $d3;

        $r18 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $d4 = d5 / 2.0;

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d4);

        $r20 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke $r18.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r20);

        goto label4;

     label2:
        $r6 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if $r6 != $r5 goto label3;

        $r9 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $r10 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r24 = interfaceinvoke $r9.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r10);

        $r11 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r25 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r11);

        $d0 = virtualinvoke r25.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r24.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d6 = $d0 - $d1;

        $r12 = r0.<net.sourceforge.plantuml.graphic.TextBlockMinWidth: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        $r13 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d6);

        $r14 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        interfaceinvoke $r12.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r14);

        goto label4;

     label3:
        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r7;

     label4:
        return;
    }
}
