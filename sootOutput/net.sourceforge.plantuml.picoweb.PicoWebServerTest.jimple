public class net.sourceforge.plantuml.picoweb.PicoWebServerTest extends java.lang.Object
{
    private static int port;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        net.sourceforge.plantuml.picoweb.PicoWebServerTest r0;

        r0 := @this: net.sourceforge.plantuml.picoweb.PicoWebServerTest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: void startServer()>();

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: void test_basic_http()>();

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: void test_GET_png()>();

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: void test_GET_svg()>();

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: void test_POST_render()>();

        staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: void test_unknown_path()>();

        return;
    }

    private static void test_basic_http() throws java.lang.Exception
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.String $r0, $r2, $r4, $r6, $r8;
        java.lang.AssertionError $r1, $r3, $r5, $r7, $r9;

        $z0 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r8 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String httpRaw(java.lang.String)>("");

        $z9 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("HTTP/1.1 400 Bad Request\nContent-type: text/plain\nContent-length: 16\n\nBad request line");

        if $z9 != 0 goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        $z1 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r6 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String httpRaw(java.lang.String)>("GET");

        $z8 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("HTTP/1.1 400 Bad Request\nContent-type: text/plain\nContent-length: 16\n\nBad request line");

        if $z8 != 0 goto label2;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label2:
        $z2 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z2 != 0 goto label3;

        $r4 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String httpRaw(java.lang.String)>("GET /foo HTTP/1.1\nContent-Length: bar\n");

        $z7 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("HTTP/1.1 400 Bad Request\nContent-type: text/plain\nContent-length: 22\n\nInvalid content length");

        if $z7 != 0 goto label3;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label3:
        $z3 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z3 != 0 goto label4;

        $r2 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String httpRaw(java.lang.String)>("GET /foo HTTP/1.1\nContent-Length: -1\n");

        $z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("HTTP/1.1 400 Bad Request\nContent-type: text/plain\nContent-length: 23\n\nNegative content length");

        if $z6 != 0 goto label4;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label4:
        $z4 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z4 != 0 goto label5;

        $r0 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String httpRaw(java.lang.String)>("GET /foo HTTP/1.1\nContent-Length: 3\n\n12");

        $z5 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>("HTTP/1.1 400 Bad Request\nContent-type: text/plain\nContent-length: 14\n\nBody too short");

        if $z5 != 0 goto label5;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label5:
        return;
    }

    private static void test_GET_png() throws java.lang.Exception
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r6, $r7, $r10, $r12, $r13, $r16;
        net.sourceforge.plantuml.code.Transcoder $r2, $r8, $r14;
        java.lang.String $r3, $r5, $r9, $r11, $r15, $r17, $r21, $r23, $r25, $r31, $r33, $r35, $r41, $r43, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        java.io.InputStream $r18, $r28, $r38;
        java.awt.image.BufferedImage $r19, $r29, $r39;
        java.lang.AssertionError $r20, $r22, $r24, $r26, $r27, $r30, $r32, $r34, $r36, $r37, $r40, $r42, $r44, $r46, $r47;
        int $i0, $i1, $i2;
        java.net.HttpURLConnection r48, r49, r50;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/png/");

        $r2 = staticinvoke <net.sourceforge.plantuml.code.TranscoderUtil: net.sourceforge.plantuml.code.Transcoder getDefaultTranscoder()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.code.Transcoder: java.lang.String encode(java.lang.String)>("A -> B");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r48 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpGet(java.lang.String)>($r5);

        $z0 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i2 = virtualinvoke r48.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i2 == 200 goto label01;

        $r47 = new java.lang.AssertionError;

        specialinvoke $r47.<java.lang.AssertionError: void <init>()>();

        throw $r47;

     label01:
        $z1 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r45 = virtualinvoke r48.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r45 == null goto label02;

        $r46 = new java.lang.AssertionError;

        specialinvoke $r46.<java.lang.AssertionError: void <init>()>();

        throw $r46;

     label02:
        $z2 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r43 = virtualinvoke r48.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r43 == null goto label03;

        $r44 = new java.lang.AssertionError;

        specialinvoke $r44.<java.lang.AssertionError: void <init>()>();

        throw $r44;

     label03:
        $z3 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $r41 = virtualinvoke r48.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z19 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("image/png");

        if $z19 != 0 goto label04;

        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label04:
        $z4 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z4 != 0 goto label05;

        $r38 = virtualinvoke r48.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r39 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.awt.image.BufferedImage readStreamAsImage(java.io.InputStream)>($r38);

        if $r39 != null goto label05;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label05:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/plantuml/png/");

        $r8 = staticinvoke <net.sourceforge.plantuml.code.TranscoderUtil: net.sourceforge.plantuml.code.Transcoder getDefaultTranscoder()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.code.Transcoder: java.lang.String encode(java.lang.String)>("A -> B");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r49 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpGet(java.lang.String)>($r11);

        $z5 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z5 != 0 goto label06;

        $i1 = virtualinvoke r49.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 == 200 goto label06;

        $r37 = new java.lang.AssertionError;

        specialinvoke $r37.<java.lang.AssertionError: void <init>()>();

        throw $r37;

     label06:
        $z6 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z6 != 0 goto label07;

        $r35 = virtualinvoke r49.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r35 == null goto label07;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label07:
        $z7 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z7 != 0 goto label08;

        $r33 = virtualinvoke r49.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r33 == null goto label08;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label08:
        $z8 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z8 != 0 goto label09;

        $r31 = virtualinvoke r49.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z18 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("image/png");

        if $z18 != 0 goto label09;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label09:
        $z9 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z9 != 0 goto label10;

        $r28 = virtualinvoke r49.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r29 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.awt.image.BufferedImage readStreamAsImage(java.io.InputStream)>($r28);

        if $r29 != null goto label10;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label10:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/png/");

        $r14 = staticinvoke <net.sourceforge.plantuml.code.TranscoderUtil: net.sourceforge.plantuml.code.Transcoder getDefaultTranscoder()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.code.Transcoder: java.lang.String encode(java.lang.String)>("foo");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r50 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpGet(java.lang.String)>($r17);

        $z10 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z10 != 0 goto label11;

        $i0 = virtualinvoke r50.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 == 400 goto label11;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label11:
        $z11 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z11 != 0 goto label12;

        $r25 = virtualinvoke r50.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        $z17 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("Syntax Error?");

        if $z17 != 0 goto label12;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label12:
        $z12 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z12 != 0 goto label13;

        $r23 = virtualinvoke r50.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        $z16 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z16 != 0 goto label13;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label13:
        $z13 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z13 != 0 goto label14;

        $r21 = virtualinvoke r50.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z15 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("image/png");

        if $z15 != 0 goto label14;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label14:
        $z14 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z14 != 0 goto label15;

        $r18 = virtualinvoke r50.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.awt.image.BufferedImage readStreamAsImage(java.io.InputStream)>($r18);

        if $r19 != null goto label15;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label15:
        return;
    }

    private static void test_GET_svg() throws java.lang.Exception
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r6, $r7, $r10, $r12, $r13, $r16;
        net.sourceforge.plantuml.code.Transcoder $r2, $r8, $r14;
        java.lang.String $r3, $r5, $r9, $r11, $r15, $r17, $r19, $r21, $r23, $r25, $r29, $r31, $r33, $r35, $r39, $r41, $r43, $r45;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22;
        java.io.InputStream $r18, $r28, $r38;
        java.lang.AssertionError $r20, $r22, $r24, $r26, $r27, $r30, $r32, $r34, $r36, $r37, $r40, $r42, $r44, $r46, $r47;
        int $i0, $i1, $i2;
        java.net.HttpURLConnection r48, r49, r50;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/svg/");

        $r2 = staticinvoke <net.sourceforge.plantuml.code.TranscoderUtil: net.sourceforge.plantuml.code.Transcoder getDefaultTranscoder()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.code.Transcoder: java.lang.String encode(java.lang.String)>("A -> B");

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r48 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpGet(java.lang.String)>($r5);

        $z0 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i2 = virtualinvoke r48.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i2 == 200 goto label01;

        $r47 = new java.lang.AssertionError;

        specialinvoke $r47.<java.lang.AssertionError: void <init>()>();

        throw $r47;

     label01:
        $z1 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r45 = virtualinvoke r48.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r45 == null goto label02;

        $r46 = new java.lang.AssertionError;

        specialinvoke $r46.<java.lang.AssertionError: void <init>()>();

        throw $r46;

     label02:
        $z2 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r43 = virtualinvoke r48.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r43 == null goto label03;

        $r44 = new java.lang.AssertionError;

        specialinvoke $r44.<java.lang.AssertionError: void <init>()>();

        throw $r44;

     label03:
        $z3 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $r41 = virtualinvoke r48.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z22 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("image/svg+xml");

        if $z22 != 0 goto label04;

        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label04:
        $z4 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z4 != 0 goto label05;

        $r38 = virtualinvoke r48.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r39 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r38);

        $z21 = virtualinvoke $r39.<java.lang.String: boolean startsWith(java.lang.String)>("<?xml ");

        if $z21 != 0 goto label05;

        $r40 = new java.lang.AssertionError;

        specialinvoke $r40.<java.lang.AssertionError: void <init>()>();

        throw $r40;

     label05:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/plantuml/svg/");

        $r8 = staticinvoke <net.sourceforge.plantuml.code.TranscoderUtil: net.sourceforge.plantuml.code.Transcoder getDefaultTranscoder()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.code.Transcoder: java.lang.String encode(java.lang.String)>("A -> B");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r49 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpGet(java.lang.String)>($r11);

        $z5 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z5 != 0 goto label06;

        $i1 = virtualinvoke r49.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 == 200 goto label06;

        $r37 = new java.lang.AssertionError;

        specialinvoke $r37.<java.lang.AssertionError: void <init>()>();

        throw $r37;

     label06:
        $z6 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z6 != 0 goto label07;

        $r35 = virtualinvoke r49.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r35 == null goto label07;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label07:
        $z7 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z7 != 0 goto label08;

        $r33 = virtualinvoke r49.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r33 == null goto label08;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label08:
        $z8 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z8 != 0 goto label09;

        $r31 = virtualinvoke r49.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z20 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("image/svg+xml");

        if $z20 != 0 goto label09;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label09:
        $z9 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z9 != 0 goto label10;

        $r28 = virtualinvoke r49.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r29 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r28);

        $z19 = virtualinvoke $r29.<java.lang.String: boolean startsWith(java.lang.String)>("<?xml ");

        if $z19 != 0 goto label10;

        $r30 = new java.lang.AssertionError;

        specialinvoke $r30.<java.lang.AssertionError: void <init>()>();

        throw $r30;

     label10:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/svg/");

        $r14 = staticinvoke <net.sourceforge.plantuml.code.TranscoderUtil: net.sourceforge.plantuml.code.Transcoder getDefaultTranscoder()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.code.Transcoder: java.lang.String encode(java.lang.String)>("foo");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r50 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpGet(java.lang.String)>($r17);

        $z10 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z10 != 0 goto label11;

        $i0 = virtualinvoke r50.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 == 400 goto label11;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label11:
        $z11 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z11 != 0 goto label12;

        $r25 = virtualinvoke r50.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        $z18 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("Syntax Error?");

        if $z18 != 0 goto label12;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label12:
        $z12 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z12 != 0 goto label13;

        $r23 = virtualinvoke r50.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        $z17 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z17 != 0 goto label13;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label13:
        $z13 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z13 != 0 goto label14;

        $r21 = virtualinvoke r50.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z16 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("image/svg+xml");

        if $z16 != 0 goto label14;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label14:
        $z14 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z14 != 0 goto label15;

        $r18 = virtualinvoke r50.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r18);

        $z15 = virtualinvoke $r19.<java.lang.String: boolean startsWith(java.lang.String)>("<?xml ");

        if $z15 != 0 goto label15;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label15:
        return;
    }

    private static void test_POST_render() throws java.lang.Exception
    {
        java.lang.String[] $r0, $r2, $r4, $r6, $r8;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r21, $r23, $r25, $r27, $r31, $r33, $r35, $r37, $r41, $r43, $r45, $r47, $r51, $r53, $r55, $r57, $r61, $r63, $r65, $r67, $r73, $r75, $r77;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42, $z43, $z44, $z45, $z46, $z47, $z48, $z49, $z50, $z51;
        java.io.InputStream $r10, $r20, $r30, $r40, $r50, $r60, $r70;
        java.lang.AssertionError $r12, $r14, $r16, $r18, $r19, $r22, $r24, $r26, $r28, $r29, $r32, $r34, $r36, $r38, $r39, $r42, $r44, $r46, $r48, $r49, $r52, $r54, $r56, $r58, $r59, $r62, $r64, $r66, $r68, $r69, $r72, $r74, $r76, $r78, $r79;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.awt.image.BufferedImage $r71;
        java.net.HttpURLConnection r80, r81, r82, r83, r84, r85, r86;

        $r0 = newarray (java.lang.String)[0];

        $r1 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String renderRequestJson(java.lang.String,java.lang.String[])>("A -> B", $r0);

        r80 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpPostJson(java.lang.String,java.lang.String)>("/render", $r1);

        $z0 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $i6 = virtualinvoke r80.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i6 == 200 goto label01;

        $r79 = new java.lang.AssertionError;

        specialinvoke $r79.<java.lang.AssertionError: void <init>()>();

        throw $r79;

     label01:
        $z1 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z1 != 0 goto label02;

        $r77 = virtualinvoke r80.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r77 == null goto label02;

        $r78 = new java.lang.AssertionError;

        specialinvoke $r78.<java.lang.AssertionError: void <init>()>();

        throw $r78;

     label02:
        $z2 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z2 != 0 goto label03;

        $r75 = virtualinvoke r80.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r75 == null goto label03;

        $r76 = new java.lang.AssertionError;

        specialinvoke $r76.<java.lang.AssertionError: void <init>()>();

        throw $r76;

     label03:
        $z3 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z3 != 0 goto label04;

        $r73 = virtualinvoke r80.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z51 = virtualinvoke $r73.<java.lang.String: boolean equals(java.lang.Object)>("image/png");

        if $z51 != 0 goto label04;

        $r74 = new java.lang.AssertionError;

        specialinvoke $r74.<java.lang.AssertionError: void <init>()>();

        throw $r74;

     label04:
        $z4 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z4 != 0 goto label05;

        $r70 = virtualinvoke r80.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r71 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.awt.image.BufferedImage readStreamAsImage(java.io.InputStream)>($r70);

        if $r71 != null goto label05;

        $r72 = new java.lang.AssertionError;

        specialinvoke $r72.<java.lang.AssertionError: void <init>()>();

        throw $r72;

     label05:
        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "-tsvg";

        $r3 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String renderRequestJson(java.lang.String,java.lang.String[])>("A -> B", $r2);

        r81 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpPostJson(java.lang.String,java.lang.String)>("/render", $r3);

        $z5 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z5 != 0 goto label06;

        $i5 = virtualinvoke r81.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i5 == 200 goto label06;

        $r69 = new java.lang.AssertionError;

        specialinvoke $r69.<java.lang.AssertionError: void <init>()>();

        throw $r69;

     label06:
        $z6 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z6 != 0 goto label07;

        $r67 = virtualinvoke r81.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r67 == null goto label07;

        $r68 = new java.lang.AssertionError;

        specialinvoke $r68.<java.lang.AssertionError: void <init>()>();

        throw $r68;

     label07:
        $z7 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z7 != 0 goto label08;

        $r65 = virtualinvoke r81.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r65 == null goto label08;

        $r66 = new java.lang.AssertionError;

        specialinvoke $r66.<java.lang.AssertionError: void <init>()>();

        throw $r66;

     label08:
        $z8 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z8 != 0 goto label09;

        $r63 = virtualinvoke r81.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z50 = virtualinvoke $r63.<java.lang.String: boolean equals(java.lang.Object)>("image/svg+xml");

        if $z50 != 0 goto label09;

        $r64 = new java.lang.AssertionError;

        specialinvoke $r64.<java.lang.AssertionError: void <init>()>();

        throw $r64;

     label09:
        $z9 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z9 != 0 goto label10;

        $r60 = virtualinvoke r81.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r61 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r60);

        $z49 = virtualinvoke $r61.<java.lang.String: boolean startsWith(java.lang.String)>("<?xml ");

        if $z49 != 0 goto label10;

        $r62 = new java.lang.AssertionError;

        specialinvoke $r62.<java.lang.AssertionError: void <init>()>();

        throw $r62;

     label10:
        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "-ttxt";

        $r5 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String renderRequestJson(java.lang.String,java.lang.String[])>("A -> B", $r4);

        r82 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpPostJson(java.lang.String,java.lang.String)>("/render", $r5);

        $z10 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z10 != 0 goto label11;

        $i4 = virtualinvoke r82.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i4 == 200 goto label11;

        $r59 = new java.lang.AssertionError;

        specialinvoke $r59.<java.lang.AssertionError: void <init>()>();

        throw $r59;

     label11:
        $z11 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z11 != 0 goto label12;

        $r57 = virtualinvoke r82.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r57 == null goto label12;

        $r58 = new java.lang.AssertionError;

        specialinvoke $r58.<java.lang.AssertionError: void <init>()>();

        throw $r58;

     label12:
        $z12 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z12 != 0 goto label13;

        $r55 = virtualinvoke r82.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r55 == null goto label13;

        $r56 = new java.lang.AssertionError;

        specialinvoke $r56.<java.lang.AssertionError: void <init>()>();

        throw $r56;

     label13:
        $z13 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z13 != 0 goto label14;

        $r53 = virtualinvoke r82.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z48 = virtualinvoke $r53.<java.lang.String: boolean equals(java.lang.Object)>("text/plain");

        if $z48 != 0 goto label14;

        $r54 = new java.lang.AssertionError;

        specialinvoke $r54.<java.lang.AssertionError: void <init>()>();

        throw $r54;

     label14:
        $z14 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z14 != 0 goto label15;

        $r50 = virtualinvoke r82.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r51 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r50);

        $z47 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>("     ,-.          ,-.\n     |A|          |B|\n     `+\'          `+\'\n      |            | \n      |----------->| \n     ,+.          ,+.\n     |A|          |B|\n     `-\'          `-\'\n");

        if $z47 != 0 goto label15;

        $r52 = new java.lang.AssertionError;

        specialinvoke $r52.<java.lang.AssertionError: void <init>()>();

        throw $r52;

     label15:
        $r6 = newarray (java.lang.String)[1];

        $r6[0] = "-ttxt";

        $r7 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String renderRequestJson(java.lang.String,java.lang.String[])>("foo", $r6);

        r83 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpPostJson(java.lang.String,java.lang.String)>("/render", $r7);

        $z15 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z15 != 0 goto label16;

        $i3 = virtualinvoke r83.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i3 == 200 goto label16;

        $r49 = new java.lang.AssertionError;

        specialinvoke $r49.<java.lang.AssertionError: void <init>()>();

        throw $r49;

     label16:
        $z16 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z16 != 0 goto label17;

        $r47 = virtualinvoke r83.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        $z46 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>("Syntax Error?");

        if $z46 != 0 goto label17;

        $r48 = new java.lang.AssertionError;

        specialinvoke $r48.<java.lang.AssertionError: void <init>()>();

        throw $r48;

     label17:
        $z17 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z17 != 0 goto label18;

        $r45 = virtualinvoke r83.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        $z45 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>("2");

        if $z45 != 0 goto label18;

        $r46 = new java.lang.AssertionError;

        specialinvoke $r46.<java.lang.AssertionError: void <init>()>();

        throw $r46;

     label18:
        $z18 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z18 != 0 goto label19;

        $r43 = virtualinvoke r83.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z44 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("text/plain");

        if $z44 != 0 goto label19;

        $r44 = new java.lang.AssertionError;

        specialinvoke $r44.<java.lang.AssertionError: void <init>()>();

        throw $r44;

     label19:
        $z19 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z19 != 0 goto label20;

        $r40 = virtualinvoke r83.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r41 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r40);

        $z43 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>("[From string (line 2) ]\n                       \n@startuml              \nfoo                    \n^^^^^                  \n Syntax Error?         \n");

        if $z43 != 0 goto label20;

        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label20:
        $r8 = newarray (java.lang.String)[1];

        $r8[0] = "-ttxt";

        $r9 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String renderRequestJson(java.lang.String,java.lang.String[])>("@startuml", $r8);

        r84 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpPostJson(java.lang.String,java.lang.String)>("/render", $r9);

        $z20 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z20 != 0 goto label21;

        $i2 = virtualinvoke r84.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i2 == 200 goto label21;

        $r39 = new java.lang.AssertionError;

        specialinvoke $r39.<java.lang.AssertionError: void <init>()>();

        throw $r39;

     label21:
        $z21 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z21 != 0 goto label22;

        $r37 = virtualinvoke r84.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        $z42 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>("No @startuml/@enduml found");

        if $z42 != 0 goto label22;

        $r38 = new java.lang.AssertionError;

        specialinvoke $r38.<java.lang.AssertionError: void <init>()>();

        throw $r38;

     label22:
        $z22 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z22 != 0 goto label23;

        $r35 = virtualinvoke r84.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        $z41 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>("0");

        if $z41 != 0 goto label23;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label23:
        $z23 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z23 != 0 goto label24;

        $r33 = virtualinvoke r84.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z40 = virtualinvoke $r33.<java.lang.String: boolean equals(java.lang.Object)>("text/plain");

        if $z40 != 0 goto label24;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label24:
        $z24 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z24 != 0 goto label25;

        $r30 = virtualinvoke r84.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        $r31 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r30);

        $z39 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>("                               \n                               \n     No @startuml/@enduml found\n");

        if $z39 != 0 goto label25;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label25:
        r85 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpPostJson(java.lang.String,java.lang.String)>("/render", "");

        $z25 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z25 != 0 goto label26;

        $i1 = virtualinvoke r85.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i1 == 400 goto label26;

        $r29 = new java.lang.AssertionError;

        specialinvoke $r29.<java.lang.AssertionError: void <init>()>();

        throw $r29;

     label26:
        $z26 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z26 != 0 goto label27;

        $r27 = virtualinvoke r85.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r27 == null goto label27;

        $r28 = new java.lang.AssertionError;

        specialinvoke $r28.<java.lang.AssertionError: void <init>()>();

        throw $r28;

     label27:
        $z27 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z27 != 0 goto label28;

        $r25 = virtualinvoke r85.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r25 == null goto label28;

        $r26 = new java.lang.AssertionError;

        specialinvoke $r26.<java.lang.AssertionError: void <init>()>();

        throw $r26;

     label28:
        $z28 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z28 != 0 goto label29;

        $r23 = virtualinvoke r85.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z38 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("text/plain");

        if $z38 != 0 goto label29;

        $r24 = new java.lang.AssertionError;

        specialinvoke $r24.<java.lang.AssertionError: void <init>()>();

        throw $r24;

     label29:
        $z29 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z29 != 0 goto label30;

        $r20 = virtualinvoke r85.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r21 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r20);

        $z37 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>("No request body");

        if $z37 != 0 goto label30;

        $r22 = new java.lang.AssertionError;

        specialinvoke $r22.<java.lang.AssertionError: void <init>()>();

        throw $r22;

     label30:
        r86 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpPostJson(java.lang.String,java.lang.String)>("/render", "123abc");

        $z30 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z30 != 0 goto label31;

        $i0 = virtualinvoke r86.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 == 400 goto label31;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label31:
        $z31 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z31 != 0 goto label32;

        $r17 = virtualinvoke r86.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error");

        if $r17 == null goto label32;

        $r18 = new java.lang.AssertionError;

        specialinvoke $r18.<java.lang.AssertionError: void <init>()>();

        throw $r18;

     label32:
        $z32 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z32 != 0 goto label33;

        $r15 = virtualinvoke r86.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("X-PlantUML-Diagram-Error-Line");

        if $r15 == null goto label33;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label33:
        $z33 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z33 != 0 goto label34;

        $r13 = virtualinvoke r86.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        $z36 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("text/plain");

        if $z36 != 0 goto label34;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>()>();

        throw $r14;

     label34:
        $z34 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z34 != 0 goto label35;

        $r10 = virtualinvoke r86.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        $r11 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r10);

        $z35 = virtualinvoke $r11.<java.lang.String: boolean contains(java.lang.CharSequence)>("Error parsing request json: Unexpected character at 1:4\n");

        if $z35 != 0 goto label35;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label35:
        return;
    }

    private static void test_unknown_path() throws java.lang.Exception
    {
        java.net.HttpURLConnection r0;
        boolean $z0, $z1, $z2;
        java.lang.String $r1;
        java.lang.AssertionError $r2, $r3;
        int $i0;

        r0 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpGet(java.lang.String)>("/foo");

        $z0 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r0.<java.net.HttpURLConnection: int getResponseCode()>();

        if $i0 == 302 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $z1 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r1 = virtualinvoke r0.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>("Location");

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("/plantuml/png/oqbDJyrBuGh8ISmh2VNrKGZ8JCuFJqqAJYqgIotY0aefG5G00000");

        if $z2 != 0 goto label2;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label2:
        return;
    }

    private static java.net.HttpURLConnection httpGet(java.lang.String) throws java.lang.Exception
    {
        java.lang.String r0;
        java.net.HttpURLConnection $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection urlConnection(java.lang.String)>(r0);

        return $r1;
    }

    private static java.net.HttpURLConnection httpPost(java.lang.String, java.lang.String, byte[]) throws java.lang.Exception
    {
        java.lang.String r0, r2, $r4;
        java.net.HttpURLConnection r1;
        byte[] r3;
        int $i0;
        java.io.OutputStream $r5;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        r1 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection urlConnection(java.lang.String)>(r0);

        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Type", r2);

        $i0 = lengthof r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Content-Length", $r4);

        virtualinvoke r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r5 = virtualinvoke r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[])>(r3);

        return r1;
    }

    private static java.net.HttpURLConnection httpPostJson(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String r0, r1;
        java.nio.charset.Charset $r2;
        byte[] $r3;
        java.net.HttpURLConnection $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2);

        $r4 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.HttpURLConnection httpPost(java.lang.String,java.lang.String,byte[])>(r0, "application/json; utf-8", $r3);

        return $r4;
    }

    private static java.lang.String httpRaw(java.lang.String) throws java.lang.Exception
    {
        java.net.Socket r0;
        java.io.OutputStream $r1;
        java.lang.String r2, $r6, r10;
        java.nio.charset.Charset $r3;
        byte[] $r4;
        java.io.InputStream $r5;
        java.lang.Throwable $r7, $r9;

        r2 := @parameter0: java.lang.String;

        r0 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.net.Socket socketConnection()>();

     label1:
        $r1 = virtualinvoke r0.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r4 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[])>($r4);

        virtualinvoke r0.<java.net.Socket: void shutdownOutput()>();

        $r5 = virtualinvoke r0.<java.net.Socket: java.io.InputStream getInputStream()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.picoweb.PicoWebServerTest: java.lang.String readStreamAsString(java.io.InputStream)>($r5);

        r10 = virtualinvoke $r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\r\n", "\n");

     label2:
        if r0 == null goto label3;

        virtualinvoke r0.<java.net.Socket: void close()>();

     label3:
        return r10;

     label4:
        $r9 := @caughtexception;

        if r0 == null goto label8;

     label5:
        virtualinvoke r0.<java.net.Socket: void close()>();

     label6:
        goto label8;

     label7:
        $r7 := @caughtexception;

        virtualinvoke $r9.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r7);

     label8:
        throw $r9;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label5 to label6 with label7;
    }

    private static java.awt.image.BufferedImage readStreamAsImage(java.io.InputStream) throws java.lang.Exception
    {
        javax.imageio.stream.MemoryCacheImageInputStream $r0;
        java.io.InputStream r1;
        java.awt.image.BufferedImage $r2;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new javax.imageio.stream.MemoryCacheImageInputStream;

        specialinvoke $r0.<javax.imageio.stream.MemoryCacheImageInputStream: void <init>(java.io.InputStream)>(r1);

        $r2 = staticinvoke <javax.imageio.ImageIO: java.awt.image.BufferedImage read(javax.imageio.stream.ImageInputStream)>($r0);

        return $r2;
    }

    private static java.lang.String readStreamAsString(java.io.InputStream) throws java.io.IOException
    {
        byte[] r0;
        java.io.ByteArrayOutputStream $r1;
        java.io.InputStream r3;
        int $i0;
        java.nio.charset.Charset $r4;
        java.lang.String $r5, $r6;

        r3 := @parameter0: java.io.InputStream;

        r0 = newarray (byte)[1024];

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label1:
        $i0 = virtualinvoke r3.<java.io.InputStream: int read(byte[])>(r0);

        if $i0 == -1 goto label2;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r0, 0, $i0);

        goto label1;

     label2:
        $r4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        $r5 = virtualinvoke $r4.<java.nio.charset.Charset: java.lang.String name()>();

        $r6 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: java.lang.String toString(java.lang.String)>($r5);

        return $r6;
    }

    private static transient java.lang.String renderRequestJson(java.lang.String, java.lang.String[])
    {
        net.sourceforge.plantuml.json.JsonObject r0;
        java.lang.String r1, $r4;
        java.lang.String[] r3;
        int $i0;
        net.sourceforge.plantuml.json.JsonArray $r5;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String[];

        r0 = staticinvoke <net.sourceforge.plantuml.json.Json: net.sourceforge.plantuml.json.JsonObject object()>();

        virtualinvoke r0.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonObject add(java.lang.String,java.lang.String)>("source", r1);

        $i0 = lengthof r3;

        if $i0 == 0 goto label1;

        $r5 = staticinvoke <net.sourceforge.plantuml.json.Json: net.sourceforge.plantuml.json.JsonArray array(java.lang.String[])>(r3);

        virtualinvoke r0.<net.sourceforge.plantuml.json.JsonObject: net.sourceforge.plantuml.json.JsonObject add(java.lang.String,net.sourceforge.plantuml.json.JsonValue)>("options", $r5);

     label1:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.json.JsonObject: java.lang.String toString()>();

        return $r4;
    }

    private static void startServer() throws java.lang.Exception
    {
        java.net.ServerSocket $r0;
        int $i0;
        net.sourceforge.plantuml.picoweb.PicoWebServerTest$1 $r2;

        $r0 = new java.net.ServerSocket;

        specialinvoke $r0.<java.net.ServerSocket: void <init>(int)>(0);

        $i0 = virtualinvoke $r0.<java.net.ServerSocket: int getLocalPort()>();

        <net.sourceforge.plantuml.picoweb.PicoWebServerTest: int port> = $i0;

        $r2 = new net.sourceforge.plantuml.picoweb.PicoWebServerTest$1;

        specialinvoke $r2.<net.sourceforge.plantuml.picoweb.PicoWebServerTest$1: void <init>(java.lang.String,java.net.ServerSocket)>("PicoWebServerLoop", $r0);

        virtualinvoke $r2.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke $r2.<java.lang.Thread: void start()>();

        return;
    }

    private static java.net.Socket socketConnection() throws java.io.IOException
    {
        java.net.Socket $r0;
        int $i0;

        $r0 = new java.net.Socket;

        $i0 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: int port>;

        specialinvoke $r0.<java.net.Socket: void <init>(java.lang.String,int)>("localhost", $i0);

        return $r0;
    }

    private static java.net.HttpURLConnection urlConnection(java.lang.String) throws java.lang.Exception
    {
        java.net.URL $r0;
        java.lang.StringBuilder $r1, $r2, $r3, $r5;
        int $i0;
        java.lang.String r4, $r6;
        java.net.URLConnection $r7;
        java.net.HttpURLConnection r8;

        r4 := @parameter0: java.lang.String;

        $r0 = new java.net.URL;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("http://localhost:");

        $i0 = <net.sourceforge.plantuml.picoweb.PicoWebServerTest: int port>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>($r6);

        $r7 = virtualinvoke $r0.<java.net.URL: java.net.URLConnection openConnection()>();

        r8 = (java.net.HttpURLConnection) $r7;

        virtualinvoke r8.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        return r8;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/picoweb/PicoWebServerTest;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.picoweb.PicoWebServerTest: boolean $assertionsDisabled> = $z1;

        return;
    }
}
