class net.sourceforge.plantuml.project.GanttDiagram$1 extends java.lang.Object implements net.sourceforge.plantuml.svek.TextBlockBackcolored
{
    final net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader;
    final net.sourceforge.plantuml.project.GanttDiagram this$0;

    void <init>(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.project.draw.TimeHeader)
    {
        net.sourceforge.plantuml.project.GanttDiagram$1 r0;
        net.sourceforge.plantuml.project.GanttDiagram r1;
        net.sourceforge.plantuml.project.draw.TimeHeader r2;

        r0 := @this: net.sourceforge.plantuml.project.GanttDiagram$1;

        r1 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r2 := @parameter1: net.sourceforge.plantuml.project.draw.TimeHeader;

        r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0> = r1;

        r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.GanttDiagram$1 r0;
        net.sourceforge.plantuml.project.GanttDiagram $r1, $r9, $r13, $r16, $r19, $r20, $r24, $r32, $r40, $r47, $r54, $r55, $r58, $r59, $r62;
        net.sourceforge.plantuml.project.LabelStrategy $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.style.SName[] $r3;
        net.sourceforge.plantuml.style.SName $r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.style.StyleSignature $r8;
        net.sourceforge.plantuml.style.StyleBuilder $r10;
        net.sourceforge.plantuml.style.PName $r11;
        net.sourceforge.plantuml.style.Value $r12;
        net.sourceforge.plantuml.ISkinParam $r14;
        net.sourceforge.plantuml.api.ThemeStyle $r15;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r17;
        net.sourceforge.plantuml.ugraphic.color.HColor r18;
        net.sourceforge.plantuml.project.draw.TimeHeader $r21, $r28, $r36, $r53, $r56, $r61;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r22, $r41, $r44;
        net.sourceforge.plantuml.ugraphic.UGraphic $r23, $r31, $r39, $r42, r50, r51;
        net.sourceforge.plantuml.ugraphic.URectangle $r25, $r33;
        net.sourceforge.plantuml.graphic.StringBounder $r26, $r34, $r43, $r60;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r27, $r35;
        net.sourceforge.plantuml.ugraphic.UBackground $r30, $r38;
        java.lang.Throwable $r45;
        net.sourceforge.plantuml.svek.GraphvizCrash $r46;
        net.sourceforge.plantuml.core.UmlSource $r48;
        java.lang.String $r49;
        net.sourceforge.plantuml.style.Style r52;
        net.sourceforge.plantuml.project.timescale.TimeScale $r57;

        r0 := @this: net.sourceforge.plantuml.project.GanttDiagram$1;

        r50 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

     label1:
        r51 = r50;

        $r1 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.project.LabelStrategy access$000(net.sourceforge.plantuml.project.GanttDiagram)>($r1);

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.project.LabelStrategy: boolean titleInFirstColumn()>();

        if $z0 == 0 goto label2;

        $r43 = interfaceinvoke r50.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d6 = specialinvoke r0.<net.sourceforge.plantuml.project.GanttDiagram$1: double getTitlesColumnWidth(net.sourceforge.plantuml.graphic.StringBounder)>($r43);

        $r44 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d6);

        r50 = interfaceinvoke r50.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r44);

     label2:
        $r3 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r3[0] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r3[1] = $r5;

        $r6 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName ganttDiagram>;

        $r3[2] = $r6;

        $r7 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timeline>;

        $r3[3] = $r7;

        $r8 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r3);

        $r9 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r52 = virtualinvoke $r8.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r10);

        $r11 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r12 = virtualinvoke r52.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r11);

        $r13 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r16 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r18 = interfaceinvoke $r12.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r15, $r17);

        $z1 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: boolean isTransparent(net.sourceforge.plantuml.ugraphic.color.HColor)>(r18);

        if $z1 != 0 goto label3;

        $r25 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $r26 = interfaceinvoke r50.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r27 = virtualinvoke r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r26);

        $d1 = virtualinvoke $r27.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r28 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader>;

        $d2 = virtualinvoke $r28.<net.sourceforge.plantuml.project.draw.TimeHeader: double getTimeHeaderHeight()>();

        specialinvoke $r25.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d1, $d2);

        $r30 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r31 = interfaceinvoke r50.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r30);

        interfaceinvoke $r31.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r25);

        $r32 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $z3 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: boolean access$100(net.sourceforge.plantuml.project.GanttDiagram)>($r32);

        if $z3 == 0 goto label3;

        $r33 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $r34 = interfaceinvoke r50.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r35 = virtualinvoke r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r34);

        $d3 = virtualinvoke $r35.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r36 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader>;

        $d4 = virtualinvoke $r36.<net.sourceforge.plantuml.project.draw.TimeHeader: double getTimeFooterHeight()>();

        specialinvoke $r33.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d3, $d4);

        $r38 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r39 = interfaceinvoke r50.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r38);

        $r40 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $d5 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: double access$200(net.sourceforge.plantuml.project.GanttDiagram)>($r40);

        $r41 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d5);

        $r42 = interfaceinvoke $r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r41);

        interfaceinvoke $r42.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r33);

     label3:
        $r53 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader>;

        $r54 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $d7 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: double access$200(net.sourceforge.plantuml.project.GanttDiagram)>($r54);

        virtualinvoke $r53.<net.sourceforge.plantuml.project.draw.TimeHeader: void drawTimeHeader(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r50, $d7);

        $r55 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r56 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader>;

        $r57 = virtualinvoke $r56.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: void access$300(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.timescale.TimeScale)>($r55, r50, $r57);

        $r58 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: void access$400(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.ugraphic.UGraphic)>($r58, r50);

        $r59 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r60 = interfaceinvoke r50.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $d8 = specialinvoke r0.<net.sourceforge.plantuml.project.GanttDiagram$1: double getTitlesColumnWidth(net.sourceforge.plantuml.graphic.StringBounder)>($r60);

        $r61 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader>;

        $d9 = specialinvoke r0.<net.sourceforge.plantuml.project.GanttDiagram$1: double getBarsColumnWidth(net.sourceforge.plantuml.project.draw.TimeHeader)>($r61);

        staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: void access$500(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.ugraphic.UGraphic,double,double)>($r59, r51, $d8, $d9);

        $r62 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $z4 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: boolean access$600(net.sourceforge.plantuml.project.GanttDiagram)>($r62);

        if $z4 != 0 goto label4;

        $r24 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: void access$700(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.ugraphic.UGraphic)>($r24, r50);

     label4:
        $r19 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $z2 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: boolean access$100(net.sourceforge.plantuml.project.GanttDiagram)>($r19);

        if $z2 == 0 goto label5;

        $r21 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader>;

        $r20 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $d0 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: double access$200(net.sourceforge.plantuml.project.GanttDiagram)>($r20);

        $r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        $r23 = interfaceinvoke r50.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        virtualinvoke $r21.<net.sourceforge.plantuml.project.draw.TimeHeader: void drawTimeFooter(net.sourceforge.plantuml.ugraphic.UGraphic)>($r23);

     label5:
        goto label7;

     label6:
        $r45 := @caughtexception;

        virtualinvoke $r45.<java.lang.Throwable: void printStackTrace()>();

        $r46 = new net.sourceforge.plantuml.svek.GraphvizCrash;

        $r47 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r48 = virtualinvoke $r47.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.core.UmlSource getSource()>();

        $r49 = virtualinvoke $r48.<net.sourceforge.plantuml.core.UmlSource: java.lang.String getPlainString()>();

        specialinvoke $r46.<net.sourceforge.plantuml.svek.GraphvizCrash: void <init>(java.lang.String,boolean,java.lang.Throwable)>($r49, 0, $r45);

        interfaceinvoke $r46.<net.sourceforge.plantuml.graphic.UDrawable: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r50);

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    private double getTitlesColumnWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.project.GanttDiagram$1 r0;
        net.sourceforge.plantuml.project.GanttDiagram $r1, $r3, $r9, $r10;
        net.sourceforge.plantuml.project.LabelStrategy $r2;
        boolean $z0, $z1, $z2;
        java.util.Map $r4, $r11;
        java.util.Collection $r5;
        java.util.Iterator r6;
        java.lang.Object $r7, $r12;
        net.sourceforge.plantuml.project.core.Task r8;
        net.sourceforge.plantuml.graphic.StringBounder r13;
        net.sourceforge.plantuml.project.draw.TaskDraw $r14;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.project.GanttDiagram$1;

        r13 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.project.LabelStrategy access$000(net.sourceforge.plantuml.project.GanttDiagram)>($r1);

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.project.LabelStrategy: boolean titleInside()>();

        if $z0 == 0 goto label1;

        return 0.0;

     label1:
        d1 = 0.0;

        $r3 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r4 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: java.util.Map access$800(net.sourceforge.plantuml.project.GanttDiagram)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r7 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.project.core.Task) $r7;

        $r9 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $z1 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: boolean access$900(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.project.core.Task)>($r9, r8);

        if $z1 == 0 goto label3;

        goto label2;

     label3:
        $r10 = r0.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r11 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: java.util.Map access$1000(net.sourceforge.plantuml.project.GanttDiagram)>($r10);

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r8);

        $r14 = (net.sourceforge.plantuml.project.draw.TaskDraw) $r12;

        $d0 = interfaceinvoke $r14.<net.sourceforge.plantuml.project.draw.TaskDraw: double getTitleWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r13);

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label2;

     label4:
        return d1;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.project.GanttDiagram$1 r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.InnerStrategy r3;

        r0 := @this: net.sourceforge.plantuml.project.GanttDiagram$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        return null;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.project.GanttDiagram$1 r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        double $d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.project.draw.TimeHeader $r3, $r4;
        net.sourceforge.plantuml.project.GanttDiagram $r5;

        r1 := @this: net.sourceforge.plantuml.project.GanttDiagram$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = specialinvoke r1.<net.sourceforge.plantuml.project.GanttDiagram$1: double getTitlesColumnWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r3 = r1.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader>;

        $d1 = specialinvoke r1.<net.sourceforge.plantuml.project.GanttDiagram$1: double getBarsColumnWidth(net.sourceforge.plantuml.project.draw.TimeHeader)>($r3);

        $d2 = $d0 + $d1;

        $r5 = r1.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r4 = r1.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.draw.TimeHeader val$timeHeader>;

        $d3 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: double access$1100(net.sourceforge.plantuml.project.GanttDiagram,net.sourceforge.plantuml.project.draw.TimeHeader)>($r5, $r4);

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d2, $d3);

        return $r0;
    }

    private double getBarsColumnWidth(net.sourceforge.plantuml.project.draw.TimeHeader)
    {
        net.sourceforge.plantuml.project.draw.TimeHeader r0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r1, $r5;
        net.sourceforge.plantuml.project.GanttDiagram$1 r2;
        net.sourceforge.plantuml.project.GanttDiagram $r3, $r6;
        net.sourceforge.plantuml.project.time.Day $r4, $r7;
        double d0, d1, $d2;

        r2 := @this: net.sourceforge.plantuml.project.GanttDiagram$1;

        r0 := @parameter0: net.sourceforge.plantuml.project.draw.TimeHeader;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r3 = r2.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r4 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.project.time.Day access$1200(net.sourceforge.plantuml.project.GanttDiagram)>($r3);

        d0 = interfaceinvoke $r1.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r4);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeader: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r6 = r2.<net.sourceforge.plantuml.project.GanttDiagram$1: net.sourceforge.plantuml.project.GanttDiagram this$0>;

        $r7 = staticinvoke <net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.project.time.Day access$1300(net.sourceforge.plantuml.project.GanttDiagram)>($r6);

        d1 = interfaceinvoke $r5.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r7);

        $d2 = d1 - d0;

        return $d2;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.project.GanttDiagram$1 r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.project.GanttDiagram$1;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()
    {
        net.sourceforge.plantuml.project.GanttDiagram$1 r0;

        r0 := @this: net.sourceforge.plantuml.project.GanttDiagram$1;

        return null;
    }
}
