public class net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx extends net.sourceforge.plantuml.ugraphic.AbstractUGraphic implements net.sourceforge.plantuml.ugraphic.ClipContainer
{

    public double dpiFactor()
    {
        net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        return 1.0;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        $r4 = new net.sourceforge.plantuml.ugraphic.visio.VisioGraphics;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,java.lang.Object)>(r1, r2, r3, $r4);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void register()>();

        return;
    }

    protected net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic copyUGraphic()
    {
        net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx $r0, r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        $r0 = new net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void <init>(net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx)>(r1);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx)
    {
        net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx r0, r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.AbstractUGraphic)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void register()>();

        return;
    }

    private void register()
    {
        net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx r0;
        net.sourceforge.plantuml.ugraphic.visio.DriverRectangleVdx $r1;
        net.sourceforge.plantuml.ugraphic.visio.DriverTextVdx $r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.ugraphic.visio.DriverLineVdx $r4;
        net.sourceforge.plantuml.ugraphic.visio.DriverPolygonVdx $r5;
        net.sourceforge.plantuml.ugraphic.visio.DriverPathVdx $r6;
        net.sourceforge.plantuml.ugraphic.visio.DriverDotPathVdx $r7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        $r1 = new net.sourceforge.plantuml.ugraphic.visio.DriverRectangleVdx;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.visio.DriverRectangleVdx: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/URectangle;", $r1);

        $r2 = new net.sourceforge.plantuml.ugraphic.visio.DriverTextVdx;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.visio.DriverTextVdx: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UText;", $r2);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void ignoreShape(java.lang.Class)>(class "Lnet/sourceforge/plantuml/creole/legacy/AtomText;");

        $r4 = new net.sourceforge.plantuml.ugraphic.visio.DriverLineVdx;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.visio.DriverLineVdx: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/ULine;", $r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.visio.DriverPolygonVdx;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.visio.DriverPolygonVdx: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPolygon;", $r5);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void ignoreShape(java.lang.Class)>(class "Lnet/sourceforge/plantuml/ugraphic/UEllipse;");

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void ignoreShape(java.lang.Class)>(class "Lnet/sourceforge/plantuml/ugraphic/UImage;");

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void ignoreShape(java.lang.Class)>(class "Lnet/sourceforge/plantuml/ugraphic/UImageSvg;");

        $r6 = new net.sourceforge.plantuml.ugraphic.visio.DriverPathVdx;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.visio.DriverPathVdx: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPath;", $r6);

        $r7 = new net.sourceforge.plantuml.ugraphic.visio.DriverDotPathVdx;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.visio.DriverDotPathVdx: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/posimo/DotPath;", $r7);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: void ignoreShape(java.lang.Class)>(class "Lnet/sourceforge/plantuml/ugraphic/UCenteredCharacter;");

        return;
    }

    public void writeToStream(java.io.OutputStream, java.lang.String, int) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx r0;
        java.lang.Object $r1;
        java.io.OutputStream r2;
        net.sourceforge.plantuml.ugraphic.visio.VisioGraphics $r3;
        java.lang.String r4;
        int i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        r2 := @parameter0: java.io.OutputStream;

        r4 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx: java.lang.Object getGraphicObject()>();

        $r3 = (net.sourceforge.plantuml.ugraphic.visio.VisioGraphics) $r1;

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.visio.VisioGraphics: void createVsd(java.io.OutputStream)>(r2);

        return;
    }

    public boolean matchesProperty(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx r2;

        r2 := @this: net.sourceforge.plantuml.ugraphic.visio.UGraphicVdx;

        r0 := @parameter0: java.lang.String;

        $r1 = "SPECIALTXT";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
