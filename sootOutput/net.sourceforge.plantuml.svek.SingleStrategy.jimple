public final enum class net.sourceforge.plantuml.svek.SingleStrategy extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.svek.SingleStrategy SQUARE;
    public static final enum net.sourceforge.plantuml.svek.SingleStrategy HLINE;
    public static final enum net.sourceforge.plantuml.svek.SingleStrategy VLINE;
    private static final net.sourceforge.plantuml.svek.SingleStrategy[] $VALUES;

    public static net.sourceforge.plantuml.svek.SingleStrategy[] values()
    {
        net.sourceforge.plantuml.svek.SingleStrategy[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.svek.SingleStrategy[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.svek.SingleStrategy valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.svek.SingleStrategy $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/svek/SingleStrategy;", r0);

        $r2 = (net.sourceforge.plantuml.svek.SingleStrategy) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.svek.SingleStrategy r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.svek.SingleStrategy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static int computeBranch(int)
    {
        int i0, i1, $i2, $i3;
        double $d0, d1;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        i1 = (int) d1;

        $i2 = i1 * i1;

        if $i2 != i0 goto label1;

        return i1;

     label1:
        $i3 = i1 + 1;

        return $i3;
    }

    private static net.sourceforge.plantuml.svek.SingleStrategy[] $values()
    {
        net.sourceforge.plantuml.svek.SingleStrategy[] $r0;
        net.sourceforge.plantuml.svek.SingleStrategy $r1, $r2, $r3;

        $r0 = newarray (net.sourceforge.plantuml.svek.SingleStrategy)[3];

        $r1 = <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy SQUARE>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy HLINE>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy VLINE>;

        $r0[2] = $r3;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.svek.SingleStrategy $r0, $r1, $r2;
        net.sourceforge.plantuml.svek.SingleStrategy[] $r3;

        $r0 = new net.sourceforge.plantuml.svek.SingleStrategy;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.SingleStrategy: void <init>(java.lang.String,int)>("SQUARE", 0);

        <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy SQUARE> = $r0;

        $r1 = new net.sourceforge.plantuml.svek.SingleStrategy;

        specialinvoke $r1.<net.sourceforge.plantuml.svek.SingleStrategy: void <init>(java.lang.String,int)>("HLINE", 1);

        <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy HLINE> = $r1;

        $r2 = new net.sourceforge.plantuml.svek.SingleStrategy;

        specialinvoke $r2.<net.sourceforge.plantuml.svek.SingleStrategy: void <init>(java.lang.String,int)>("VLINE", 2);

        <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy VLINE> = $r2;

        $r3 = staticinvoke <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy[] $values()>();

        <net.sourceforge.plantuml.svek.SingleStrategy: net.sourceforge.plantuml.svek.SingleStrategy[] $VALUES> = $r3;

        return;
    }
}
