class net.sourceforge.plantuml.logo.LogoScanner extends java.lang.Object
{
    private final java.util.Map keywordTable;
    private char[] sourceString;
    private int sourceLength;
    private int i;

    public void <init>()
    {
        net.sourceforge.plantuml.logo.LogoScanner r0;
        java.util.HashMap $r1;
        java.util.Map $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47, $r50, $r53, $r56, $r59, $r62, $r65, $r68;
        java.lang.Integer $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57, $r60, $r63, $r66, $r69;

        r0 := @this: net.sourceforge.plantuml.logo.LogoScanner;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable> = $r1;

        $r2 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(260);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("forward", $r3);

        $r5 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(260);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fd", $r6);

        $r8 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(261);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("back", $r9);

        $r11 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(261);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("bk", $r12);

        $r14 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(263);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("right", $r15);

        $r17 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(263);

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rt", $r18);

        $r20 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(262);

        interfaceinvoke $r20.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("left", $r21);

        $r23 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(262);

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("lt", $r24);

        $r26 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(264);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("penup", $r27);

        $r29 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(264);

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pu", $r30);

        $r32 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(265);

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pendown", $r33);

        $r35 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(265);

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pd", $r36);

        $r38 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(266);

        interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hideturtle", $r39);

        $r41 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(266);

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ht", $r42);

        $r44 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(267);

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("showturtle", $r45);

        $r47 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r48 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(267);

        interfaceinvoke $r47.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("st", $r48);

        $r50 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(268);

        interfaceinvoke $r50.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clearscreen", $r51);

        $r53 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r54 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(268);

        interfaceinvoke $r53.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cs", $r54);

        $r56 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(269);

        interfaceinvoke $r56.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("repeat", $r57);

        $r59 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(269);

        interfaceinvoke $r59.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("rep", $r60);

        $r62 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(271);

        interfaceinvoke $r62.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("to", $r63);

        $r65 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(272);

        interfaceinvoke $r65.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("setpc", $r66);

        $r68 = r0.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(272);

        interfaceinvoke $r68.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pc", $r69);

        return;
    }

    public int getPosition()
    {
        net.sourceforge.plantuml.logo.LogoScanner r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.logo.LogoScanner;

        $i0 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        return $i0;
    }

    public void setPosition(int)
    {
        net.sourceforge.plantuml.logo.LogoScanner r0;
        int $i0, $i1, $i2, $i3, i4;

        r0 := @this: net.sourceforge.plantuml.logo.LogoScanner;

        i4 := @parameter0: int;

        $i0 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        if $i0 < 0 goto label1;

        $i3 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i2 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int sourceLength>;

        if $i3 > $i2 goto label1;

        r0.<net.sourceforge.plantuml.logo.LogoScanner: int i> = i4;

        goto label2;

     label1:
        $i1 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int sourceLength>;

        r0.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i1;

     label2:
        return;
    }

    public void setSourceString(java.lang.String)
    {
        net.sourceforge.plantuml.logo.LogoScanner r0;
        java.lang.String r1, $r2;
        int $i0;
        char[] $r3;

        r0 := @this: net.sourceforge.plantuml.logo.LogoScanner;

        r1 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        r0.<net.sourceforge.plantuml.logo.LogoScanner: int sourceLength> = $i0;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String concat(java.lang.String)>("\u0000");

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        r0.<net.sourceforge.plantuml.logo.LogoScanner: char[] sourceString> = $r3;

        r0.<net.sourceforge.plantuml.logo.LogoScanner: int i> = 0;

        return;
    }

    public java.lang.String getSourceString()
    {
        java.lang.String $r0;
        net.sourceforge.plantuml.logo.LogoScanner r1;
        char[] $r2;

        r1 := @this: net.sourceforge.plantuml.logo.LogoScanner;

        $r0 = new java.lang.String;

        $r2 = r1.<net.sourceforge.plantuml.logo.LogoScanner: char[] sourceString>;

        specialinvoke $r0.<java.lang.String: void <init>(char[])>($r2);

        return $r0;
    }

    public java.lang.String getRestAsString()
    {
        net.sourceforge.plantuml.logo.LogoScanner r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r2;

        r0 := @this: net.sourceforge.plantuml.logo.LogoScanner;

        virtualinvoke r0.<net.sourceforge.plantuml.logo.LogoScanner: void skipWhitespace()>();

        $r1 = new java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.logo.LogoScanner: char[] sourceString>;

        $i4 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i1 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int sourceLength>;

        $i0 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i2 = $i1 - $i0;

        $i3 = $i2 + 1;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, $i4, $i3);

        $i5 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int sourceLength>;

        r0.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i5;

        return $r1;
    }

    void skipWhitespace()
    {
        net.sourceforge.plantuml.logo.LogoScanner r0;
        char c0;
        int $i1, $i2, $i3, $i4;
        char[] $r1;

        r0 := @this: net.sourceforge.plantuml.logo.LogoScanner;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.logo.LogoScanner: char[] sourceString>;

        $i3 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i4 = $i3 + 1;

        r0.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i4;

        c0 = $r1[$i3];

        if c0 == 32 goto label1;

        if c0 == 9 goto label1;

        $i1 = r0.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i2 = $i1 - 1;

        r0.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i2;

        return;
    }

    public net.sourceforge.plantuml.logo.LogoToken getToken()
    {
        net.sourceforge.plantuml.logo.LogoToken $r0;
        java.lang.StringBuilder $r2;
        net.sourceforge.plantuml.logo.LogoScanner r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20;
        char[] $r5, $r8, $r11, $r20;
        java.lang.String $r6, $r9, $r15, $r16, $r24, $r25;
        java.util.Map $r17;
        java.lang.Object $r18;
        char c16;
        java.lang.Integer r22;
        boolean z0;
        float $f0;

        r4 := @this: net.sourceforge.plantuml.logo.LogoScanner;

        $r0 = new net.sourceforge.plantuml.logo.LogoToken;

        specialinvoke $r0.<net.sourceforge.plantuml.logo.LogoToken: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $i1 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i0 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int sourceLength>;

        if $i1 < $i0 goto label01;

        $r0.<net.sourceforge.plantuml.logo.LogoToken: int kind> = 256;

        return $r0;

     label01:
        virtualinvoke r4.<net.sourceforge.plantuml.logo.LogoScanner: void skipWhitespace()>();

        $r5 = r4.<net.sourceforge.plantuml.logo.LogoScanner: char[] sourceString>;

        $i2 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i3 = $i2 + 1;

        r4.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i3;

        c16 = $r5[$i2];

        if c16 == 91 goto label02;

        if c16 != 93 goto label03;

     label02:
        $r0.<net.sourceforge.plantuml.logo.LogoToken: int kind> = c16;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c16);

        $r0.<net.sourceforge.plantuml.logo.LogoToken: java.lang.String lexeme> = $r6;

        goto label19;

     label03:
        if c16 < 97 goto label04;

        if c16 <= 122 goto label05;

     label04:
        if c16 < 65 goto label09;

        if c16 > 90 goto label09;

     label05:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c16);

        $r20 = r4.<net.sourceforge.plantuml.logo.LogoScanner: char[] sourceString>;

        $i17 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i18 = $i17 + 1;

        r4.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i18;

        c16 = $r20[$i17];

        if c16 < 97 goto label06;

        if c16 <= 122 goto label05;

     label06:
        if c16 < 65 goto label07;

        if c16 <= 90 goto label05;

     label07:
        $i13 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i14 = $i13 - 1;

        r4.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i14;

        $r15 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<net.sourceforge.plantuml.logo.LogoToken: java.lang.String lexeme> = $r15;

        $r0.<net.sourceforge.plantuml.logo.LogoToken: int kind> = 258;

        $r17 = r4.<net.sourceforge.plantuml.logo.LogoScanner: java.util.Map keywordTable>;

        $r16 = $r0.<net.sourceforge.plantuml.logo.LogoToken: java.lang.String lexeme>;

        $r18 = interfaceinvoke $r17.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        r22 = (java.lang.Integer) $r18;

        if r22 == null goto label08;

        $i15 = virtualinvoke r22.<java.lang.Integer: int intValue()>();

        $r0.<net.sourceforge.plantuml.logo.LogoToken: int kind> = $i15;

     label08:
        goto label19;

     label09:
        if c16 < 48 goto label17;

        if c16 > 57 goto label17;

     label10:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c16);

        $r8 = r4.<net.sourceforge.plantuml.logo.LogoScanner: char[] sourceString>;

        $i8 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i9 = $i8 + 1;

        r4.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i9;

        c16 = $r8[$i8];

        if c16 < 48 goto label11;

        if c16 <= 57 goto label10;

     label11:
        z0 = 0;

        if c16 != 46 goto label14;

     label12:
        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c16);

        $r11 = r4.<net.sourceforge.plantuml.logo.LogoScanner: char[] sourceString>;

        $i11 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i12 = $i11 + 1;

        r4.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i12;

        c16 = $r11[$i11];

        if c16 < 48 goto label13;

        if c16 <= 57 goto label12;

     label13:
        z0 = 1;

     label14:
        $i19 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i20 = $i19 - 1;

        r4.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i20;

        $r24 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $r0.<net.sourceforge.plantuml.logo.LogoToken: java.lang.String lexeme> = $r24;

        $r25 = $r0.<net.sourceforge.plantuml.logo.LogoToken: java.lang.String lexeme>;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r25);

        $r0.<net.sourceforge.plantuml.logo.LogoToken: float value> = $f0;

        if z0 == 0 goto label15;

        $r0.<net.sourceforge.plantuml.logo.LogoToken: int kind> = 259;

        goto label16;

     label15:
        $r0.<net.sourceforge.plantuml.logo.LogoToken: int kind> = 270;

        $r9 = $r0.<net.sourceforge.plantuml.logo.LogoToken: java.lang.String lexeme>;

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r0.<net.sourceforge.plantuml.logo.LogoToken: int intValue> = $i10;

     label16:
        goto label19;

     label17:
        if c16 != 0 goto label18;

        $i6 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i7 = $i6 - 1;

        r4.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i7;

        $r0.<net.sourceforge.plantuml.logo.LogoToken: int kind> = 256;

        goto label19;

     label18:
        $i4 = r4.<net.sourceforge.plantuml.logo.LogoScanner: int i>;

        $i5 = $i4 - 1;

        r4.<net.sourceforge.plantuml.logo.LogoScanner: int i> = $i5;

        $r0.<net.sourceforge.plantuml.logo.LogoToken: int kind> = 257;

     label19:
        return $r0;
    }
}
