class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow color;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.graphic.Rainbow color> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal r2;
        java.awt.geom.Point2D r3, r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.graphic.Rainbow $r7;
        net.sourceforge.plantuml.ugraphic.UPolygon $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r9;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.graphic.Rainbow color>;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToRight()>();

        r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r6, $r7, $r8);

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r3);

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r4);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r9);

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r7;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        java.awt.geom.Point2D$Double $r4;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        java.awt.geom.Point2D $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r4 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d1 = $d0 * 2.0;

        $d2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: double access$000(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry,net.sourceforge.plantuml.graphic.StringBounder)>(r3, r2);

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, $d2);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0>;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r6, $r7, r2);

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r4);

        return $r9;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r7;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        java.awt.geom.Point2D$Double $r4;
        double $d0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal $r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        java.awt.geom.Point2D $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r4 = new java.awt.geom.Point2D$Double;

        $d0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: double access$000(net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry,net.sourceforge.plantuml.graphic.StringBounder)>(r3, r2);

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, $d0);

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0>;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r6, $r7, r2);

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r4);

        return $r9;
    }
}
