public class net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile extends net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile implements net.sourceforge.plantuml.sequencediagram.teoz.Tile
{
    private final net.sourceforge.plantuml.sequencediagram.HSpace hspace;
    private final net.sourceforge.plantuml.real.Real origin;

    public net.sourceforge.plantuml.sequencediagram.Event getEvent()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile r0;
        net.sourceforge.plantuml.sequencediagram.HSpace $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile: net.sourceforge.plantuml.sequencediagram.HSpace hspace>;

        return $r1;
    }

    public void <init>(net.sourceforge.plantuml.sequencediagram.HSpace, net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile r0;
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.sequencediagram.HSpace r3;
        net.sourceforge.plantuml.real.Real $r4;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile;

        r3 := @parameter0: net.sourceforge.plantuml.sequencediagram.HSpace;

        r1 := @parameter1: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile: net.sourceforge.plantuml.sequencediagram.HSpace hspace> = r3;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.real.Real getOrigin()>();

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile: net.sourceforge.plantuml.real.Real origin> = $r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        return;
    }

    public double getPreferredHeight()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile r0;
        net.sourceforge.plantuml.sequencediagram.HSpace $r1;
        int $i0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile: net.sourceforge.plantuml.sequencediagram.HSpace hspace>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.HSpace: int getPixel()>();

        $d0 = (double) $i0;

        return $d0;
    }

    public void addConstraints()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile;

        return;
    }

    public net.sourceforge.plantuml.real.Real getMinX()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile r0;
        net.sourceforge.plantuml.real.Real $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile: net.sourceforge.plantuml.real.Real origin>;

        return $r1;
    }

    public net.sourceforge.plantuml.real.Real getMaxX()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile r0;
        net.sourceforge.plantuml.real.Real $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.HSpaceTile: net.sourceforge.plantuml.real.Real origin>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.real.Real: net.sourceforge.plantuml.real.Real addFixed(double)>(10.0);

        return $r2;
    }
}
