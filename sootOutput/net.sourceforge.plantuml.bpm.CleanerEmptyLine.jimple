public class net.sourceforge.plantuml.bpm.CleanerEmptyLine extends java.lang.Object implements net.sourceforge.plantuml.bpm.GridCleaner
{

    public void <init>()
    {
        net.sourceforge.plantuml.bpm.CleanerEmptyLine r0;

        r0 := @this: net.sourceforge.plantuml.bpm.CleanerEmptyLine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean clean(net.sourceforge.plantuml.bpm.Grid)
    {
        net.sourceforge.plantuml.bpm.Grid r0;
        net.sourceforge.plantuml.bpm.Chain $r1;
        java.util.List $r2;
        java.util.Iterator r3;
        boolean $z0, $z1, z2;
        java.lang.Object $r4;
        net.sourceforge.plantuml.bpm.Line r5;
        java.util.Set $r6;
        net.sourceforge.plantuml.bpm.CleanerEmptyLine r7;

        r7 := @this: net.sourceforge.plantuml.bpm.CleanerEmptyLine;

        r0 := @parameter0: net.sourceforge.plantuml.bpm.Grid;

        z2 = 0;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Chain lines()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.bpm.Chain: java.util.List toList()>();

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.bpm.Line) $r4;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: java.util.Set usedColsOf(net.sourceforge.plantuml.bpm.Line)>(r5);

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: void removeLine(net.sourceforge.plantuml.bpm.Line)>(r5);

        z2 = 1;

     label2:
        goto label1;

     label3:
        return z2;
    }
}
