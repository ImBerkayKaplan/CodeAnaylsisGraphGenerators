public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile;
    private final double maxX;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>($r2);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: double maxX> = d0;

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.LinkRendering getOutLinkRendering()>();

        return $r2;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;
        byte $b0;
        java.lang.IllegalStateException $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getWidth()>();

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: double maxX>;

        $b0 = $d0 cmpl $d1;

        if $b0 <= 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: double maxX>;

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d5 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d6 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double,double)>($d2, $d3, $d4, $d5, $d6);

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedRight: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile>;

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

        return;
    }
}
