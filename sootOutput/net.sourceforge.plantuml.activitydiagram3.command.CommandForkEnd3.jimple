public class net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3 extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3 r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3;

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r5, $r7, $r12, $r17;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r19, $r20, $r21, $r22, $r23, $r24;
        net.sourceforge.plantuml.command.regex.RegexOr $r4;
        net.sourceforge.plantuml.command.regex.RegexConcat $r6, $r11, $r16, $r25;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram3/command/CommandForkEnd3;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[6];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r5 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r6 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r7 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("end");

        $r7[0] = $r8;

        $r9 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r7[1] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("fork");

        $r7[2] = $r10;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r7);

        $r5[0] = $r6;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r12 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("fork");

        $r12[0] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r12[1] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("end");

        $r12[2] = $r15;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r12);

        $r5[1] = $r11;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r17 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r18 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("end");

        $r17[0] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r17[1] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("merge");

        $r17[2] = $r20;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r17);

        $r5[2] = $r16;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>("STYLE", $r5);

        $r2[1] = $r4;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r21;

        $r22 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r22.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL", "(\\{.+\\})?");

        $r2[3] = $r22;

        $r23 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(";?");

        $r2[4] = $r23;

        $r24 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[5] = $r24;

        $r25 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r25;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r3;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;
        net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3 r6;
        net.sourceforge.plantuml.LineLocation r7;
        net.sourceforge.plantuml.activitydiagram3.ForkStyle $r8;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3;

        r4 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3;

        r7 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STYLE", 0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("merge");

        if $z0 == 0 goto label1;

        $r8 = <net.sourceforge.plantuml.activitydiagram3.ForkStyle: net.sourceforge.plantuml.activitydiagram3.ForkStyle MERGE>;

        goto label2;

     label1:
        $r8 = <net.sourceforge.plantuml.activitydiagram3.ForkStyle: net.sourceforge.plantuml.activitydiagram3.ForkStyle FORK>;

     label2:
        r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL", 0);

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3: net.sourceforge.plantuml.command.CommandExecutionResult endFork(net.sourceforge.plantuml.activitydiagram3.ForkStyle,java.lang.String)>($r8, r3);

        return $r5;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3 r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3 $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.command.CommandForkEnd3: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram3.ActivityDiagram3,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
