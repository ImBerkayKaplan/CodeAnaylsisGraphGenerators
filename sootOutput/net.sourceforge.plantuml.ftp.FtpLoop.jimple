class net.sourceforge.plantuml.ftp.FtpLoop extends java.lang.Object implements java.lang.Runnable
{
    private final java.net.Socket incoming;
    private final net.sourceforge.plantuml.ftp.FtpServer ftpServer;
    private final java.io.BufferedReader br;
    private final java.io.PrintWriter pw;
    private net.sourceforge.plantuml.ftp.FtpConnexion connexion;
    private java.lang.String ipClient;
    private int port;
    private net.sourceforge.plantuml.ftp.FtpLoop$Mode mode;
    static final boolean $assertionsDisabled;

    public void <init>(java.net.Socket, net.sourceforge.plantuml.ftp.FtpServer) throws java.io.IOException
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.net.Socket r1, $r5, $r8;
        net.sourceforge.plantuml.ftp.FtpServer r2;
        java.io.BufferedReader $r3;
        java.io.InputStreamReader $r4;
        java.io.InputStream $r6;
        java.lang.String $r7;
        java.io.OutputStream $r9;
        java.io.PrintWriter $r10;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r1 := @parameter0: java.net.Socket;

        r2 := @parameter1: net.sourceforge.plantuml.ftp.FtpServer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String ipClient> = null;

        r0.<net.sourceforge.plantuml.ftp.FtpLoop: int port> = -1;

        r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.net.Socket incoming> = r1;

        r0.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpServer ftpServer> = r2;

        $r3 = new java.io.BufferedReader;

        $r4 = new java.io.InputStreamReader;

        $r5 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.net.Socket incoming>;

        $r6 = virtualinvoke $r5.<java.net.Socket: java.io.InputStream getInputStream()>();

        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.ftp.FtpServer: java.lang.String getCharset()>();

        specialinvoke $r4.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r6, $r7);

        specialinvoke $r3.<java.io.BufferedReader: void <init>(java.io.Reader)>($r4);

        r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.io.BufferedReader br> = $r3;

        $r8 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.net.Socket incoming>;

        $r9 = virtualinvoke $r8.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r10 = staticinvoke <net.sourceforge.plantuml.security.SecurityUtils: java.io.PrintWriter createPrintWriter(java.io.OutputStream,boolean)>($r9, 1);

        r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.io.PrintWriter pw> = $r10;

        return;
    }

    private void runInternal() throws java.io.IOException, java.lang.InterruptedException
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.io.BufferedReader $r1, $r8;
        java.lang.String r2, $r6;
        java.lang.StringBuilder $r3, $r4, $r5;
        boolean z0;
        java.io.PrintWriter $r7;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void localLog(java.lang.String)>("Starting Loop");

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("220 PlantUML");

     label1:
        $r1 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.io.BufferedReader br>;

        r2 = virtualinvoke $r1.<java.io.BufferedReader: java.lang.String readLine()>();

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void localLog(java.lang.String)>($r6);

        if r2 != null goto label2;

        $r7 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.io.PrintWriter pw>;

        virtualinvoke $r7.<java.io.PrintWriter: void close()>();

        $r8 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.io.BufferedReader br>;

        virtualinvoke $r8.<java.io.BufferedReader: void close()>();

        return;

     label2:
        z0 = specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: boolean manage(java.lang.String)>(r2);

        if z0 == 0 goto label3;

        return;

     label3:
        goto label1;
    }

    private boolean manage(java.lang.String) throws java.net.UnknownHostException, java.io.IOException, java.lang.InterruptedException
    {
        java.lang.String r0, r1, $r3, $r13, $r15, r17, $r21, $r24, $r31, $r41, $r44, $r47, $r50, $r52, $r53, $r54, $r55, $r60, $r61, r64, r65, r67;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        net.sourceforge.plantuml.ftp.FtpLoop r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        net.sourceforge.plantuml.ftp.FtpConnexion $r4, $r63;
        net.sourceforge.plantuml.ftp.FtpLoop$Mode $r5, $r6, $r7, $r33, $r34, $r35, $r36, $r37;
        net.sourceforge.plantuml.ftp.FtpServer $r8, $r16, $r62;
        java.lang.StringBuilder $r9, $r10, $r14, $r18, $r19, $r20, $r22, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r40, $r42, $r43, $r45, $r46, $r48, $r49, $r51, $r56, $r57, $r58, $r59;
        java.net.Socket $r11;
        java.net.InetAddress $r12;
        java.lang.AssertionError $r32;
        java.util.StringTokenizer $r38;

        r2 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goUpperCase(java.lang.String)>(r0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("USER");

        if $z0 == 0 goto label01;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("331 Password required");

        $r61 = "USER ";

        $i13 = virtualinvoke $r61.<java.lang.String: int length()>();

        r64 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i13);

        $r62 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpServer ftpServer>;

        $r63 = virtualinvoke $r62.<net.sourceforge.plantuml.ftp.FtpServer: net.sourceforge.plantuml.ftp.FtpConnexion getFtpConnexion(java.lang.String)>(r64);

        r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion> = $r63;

        goto label18;

     label01:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("PASS");

        if $z1 == 0 goto label02;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("230 Logged in.");

        goto label18;

     label02:
        $z2 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("PWD");

        if $z2 == 0 goto label03;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("257 \"/\" is current directory.");

        goto label18;

     label03:
        $z3 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("CWD");

        if $z3 == 0 goto label04;

        $r55 = "CWD ";

        $i12 = virtualinvoke $r55.<java.lang.String: int length()>();

        r65 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i12);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("250 \"");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r65);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is new working directory..");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>($r60);

        goto label18;

     label04:
        $z4 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("TYPE");

        if $z4 == 0 goto label05;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("200 Command okay.");

        goto label18;

     label05:
        $z5 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("PORT");

        if $z5 == 0 goto label06;

        $r37 = <net.sourceforge.plantuml.ftp.FtpLoop$Mode: net.sourceforge.plantuml.ftp.FtpLoop$Mode ACTIF>;

        r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpLoop$Mode mode> = $r37;

        $r38 = new java.util.StringTokenizer;

        specialinvoke $r38.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r0, " ,");

        virtualinvoke $r38.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r38.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r44 = virtualinvoke $r38.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r47 = virtualinvoke $r38.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r50 = virtualinvoke $r38.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        r2.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String ipClient> = $r52;

        $r53 = virtualinvoke $r38.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r53);

        $i9 = $i8 * 256;

        $r54 = virtualinvoke $r38.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r54);

        $i11 = $i9 + $i10;

        r2.<net.sourceforge.plantuml.ftp.FtpLoop: int port> = $i11;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("200 Command okay.");

        goto label18;

     label06:
        $z6 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("LIST");

        if $z6 == 0 goto label08;

        $r36 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpLoop$Mode mode>;

        $r35 = <net.sourceforge.plantuml.ftp.FtpLoop$Mode: net.sourceforge.plantuml.ftp.FtpLoop$Mode ACTIF>;

        if $r36 != $r35 goto label07;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void listActif()>();

        goto label18;

     label07:
        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void listPassif()>();

        goto label18;

     label08:
        $z7 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("STOR");

        if $z7 == 0 goto label10;

        $r34 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpLoop$Mode mode>;

        $r33 = <net.sourceforge.plantuml.ftp.FtpLoop$Mode: net.sourceforge.plantuml.ftp.FtpLoop$Mode ACTIF>;

        if $r34 != $r33 goto label09;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void storActif(java.lang.String)>(r0);

        goto label18;

     label09:
        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void storPassif(java.lang.String)>(r0);

        goto label18;

     label10:
        $z8 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("PASV");

        if $z8 == 0 goto label12;

        $r7 = <net.sourceforge.plantuml.ftp.FtpLoop$Mode: net.sourceforge.plantuml.ftp.FtpLoop$Mode PASSIF>;

        r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpLoop$Mode mode> = $r7;

        $r8 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpServer ftpServer>;

        $i1 = virtualinvoke $r8.<net.sourceforge.plantuml.ftp.FtpServer: int getFreePort()>();

        r2.<net.sourceforge.plantuml.ftp.FtpLoop: int port> = $i1;

        $i2 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        i14 = $i2 / 256;

        $i3 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        i4 = $i3 % 256;

        $z13 = <net.sourceforge.plantuml.ftp.FtpLoop: boolean $assertionsDisabled>;

        if $z13 != 0 goto label11;

        $i7 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        $i5 = i14 * 256;

        $i6 = $i5 + i4;

        if $i7 == $i6 goto label11;

        $r32 = new java.lang.AssertionError;

        specialinvoke $r32.<java.lang.AssertionError: void <init>()>();

        throw $r32;

     label11:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adr=");

        $r11 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: java.net.Socket incoming>;

        $r12 = virtualinvoke $r11.<java.net.Socket: java.net.InetAddress getInetAddress()>();

        $r13 = virtualinvoke $r12.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void localLog(java.lang.String)>($r15);

        $r16 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpServer ftpServer>;

        r17 = virtualinvoke $r16.<net.sourceforge.plantuml.ftp.FtpServer: java.lang.String getIpServer()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("server=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void localLog(java.lang.String)>($r21);

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("227 Entering Passive Mode (");

        $r24 = virtualinvoke r17.<java.lang.String: java.lang.String replace(char,char)>(46, 44);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i14);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>($r31);

        r2.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String ipClient> = r17;

        goto label18;

     label12:
        $z9 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("RETR");

        if $z9 == 0 goto label14;

        $r6 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpLoop$Mode mode>;

        $r5 = <net.sourceforge.plantuml.ftp.FtpLoop$Mode: net.sourceforge.plantuml.ftp.FtpLoop$Mode ACTIF>;

        if $r6 != $r5 goto label13;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void retrActif(java.lang.String)>(r0);

        goto label18;

     label13:
        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void retrPassif(java.lang.String)>(r0);

        goto label18;

     label14:
        $z10 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("DELE");

        if $z10 == 0 goto label15;

        $r3 = "DELE ";

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        r67 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r4 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        virtualinvoke $r4.<net.sourceforge.plantuml.ftp.FtpConnexion: void delete(java.lang.String)>(r67);

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("200 Command okay.");

        goto label18;

     label15:
        $z11 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("QUIT");

        if $z11 == 0 goto label16;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("221 Goodbye.");

        return 1;

     label16:
        $z12 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("SYST");

        if $z12 == 0 goto label17;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("215 UNIX Type: L8.");

        goto label18;

     label17:
        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("502 Command not implemented.");

     label18:
        return 0;
    }

    private void localLog(java.lang.String)
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r1 := @parameter0: java.lang.String;

        return;
    }

    private void retr(java.lang.String, java.net.Socket) throws java.net.UnknownHostException, java.io.IOException, java.lang.InterruptedException
    {
        java.net.Socket r0;
        java.io.OutputStream r1;
        net.sourceforge.plantuml.ftp.FtpLoop r2;
        java.lang.String r3;
        net.sourceforge.plantuml.ftp.FtpConnexion $r4;
        byte[] r5;

        r2 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.net.Socket;

        r1 = virtualinvoke r0.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r4 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ftp.FtpConnexion: byte[] getData(java.lang.String)>(r3);

        if r5 == null goto label1;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r5);

     label1:
        virtualinvoke r1.<java.io.OutputStream: void flush()>();

        virtualinvoke r1.<java.io.OutputStream: void close()>();

        virtualinvoke r0.<java.net.Socket: void close()>();

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("226 Transfer complete.");

        return;
    }

    private void retrPassif(java.lang.String) throws java.net.UnknownHostException, java.io.IOException, java.lang.InterruptedException
    {
        java.lang.String r0, $r1, r7, r8;
        int $i0, $i1;
        net.sourceforge.plantuml.ftp.FtpLoop r2;
        net.sourceforge.plantuml.ftp.FtpConnexion $r3;
        boolean $z0;
        java.net.ServerSocket $r4;
        java.net.Socket r6;

        r2 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r0 := @parameter0: java.lang.String;

        $r1 = "STOR ";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        r8 = specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String removeStartingsSlash(java.lang.String)>(r7);

        $r3 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        $z0 = virtualinvoke $r3.<net.sourceforge.plantuml.ftp.FtpConnexion: boolean willExist(java.lang.String)>(r8);

        if $z0 != 0 goto label1;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("550 No such file.");

        return;

     label1:
        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("150 Opening");

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void waitForMe(java.lang.String)>(r8);

        $r4 = new java.net.ServerSocket;

        $i1 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        specialinvoke $r4.<java.net.ServerSocket: void <init>(int)>($i1);

        r6 = virtualinvoke $r4.<java.net.ServerSocket: java.net.Socket accept()>();

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void retr(java.lang.String,java.net.Socket)>(r8, r6);

        virtualinvoke $r4.<java.net.ServerSocket: void close()>();

        return;
    }

    private void waitForMe(java.lang.String) throws java.lang.InterruptedException
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ftp.FtpConnexion $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r1 := @parameter0: java.lang.String;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.ftp.FtpConnexion: boolean doesExist(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        return;

     label2:
        staticinvoke <java.lang.Thread: void sleep(long)>(200L);

        goto label1;
    }

    private void retrActif(java.lang.String) throws java.net.UnknownHostException, java.io.IOException, java.lang.InterruptedException
    {
        java.lang.String r0, $r1, $r5, r7, r8;
        int $i0, $i1;
        net.sourceforge.plantuml.ftp.FtpLoop r2;
        net.sourceforge.plantuml.ftp.FtpConnexion $r3;
        boolean $z0;
        java.net.Socket $r4;

        r2 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r0 := @parameter0: java.lang.String;

        $r1 = "STOR ";

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        r8 = specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String removeStartingsSlash(java.lang.String)>(r7);

        $r3 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        $z0 = virtualinvoke $r3.<net.sourceforge.plantuml.ftp.FtpConnexion: boolean willExist(java.lang.String)>(r8);

        if $z0 != 0 goto label1;

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("550 No such file.");

        return;

     label1:
        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("150 Opening");

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void waitForMe(java.lang.String)>(r8);

        $r4 = new java.net.Socket;

        $r5 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String ipClient>;

        $i1 = r2.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        specialinvoke $r4.<java.net.Socket: void <init>(java.lang.String,int)>($r5, $i1);

        specialinvoke r2.<net.sourceforge.plantuml.ftp.FtpLoop: void retr(java.lang.String,java.net.Socket)>(r8, $r4);

        return;
    }

    private void storActif(java.lang.String) throws java.io.IOException
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.lang.String r1, $r2, $r3, r4, $r8, $r10;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.net.Socket $r9;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r1 := @parameter0: java.lang.String;

        $r2 = "STOR ";

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        r4 = specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String removeStartingsSlash(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("150 FILE: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>($r8);

        $r9 = new java.net.Socket;

        $r10 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String ipClient>;

        $i1 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        specialinvoke $r9.<java.net.Socket: void <init>(java.lang.String,int)>($r10, $i1);

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void stor(java.lang.String,java.net.Socket)>(r4, $r9);

        return;
    }

    private void storPassif(java.lang.String) throws java.io.IOException
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.lang.String r1, $r2, $r3, r4, $r8;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.net.ServerSocket $r9;
        java.net.Socket r11;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r1 := @parameter0: java.lang.String;

        $r2 = "STOR ";

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        r4 = specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String removeStartingsSlash(java.lang.String)>($r3);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("150 FILE: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>($r8);

        $r9 = new java.net.ServerSocket;

        $i1 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        specialinvoke $r9.<java.net.ServerSocket: void <init>(int)>($i1);

        r11 = virtualinvoke $r9.<java.net.ServerSocket: java.net.Socket accept()>();

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void stor(java.lang.String,java.net.Socket)>(r4, r11);

        virtualinvoke $r9.<java.net.ServerSocket: void close()>();

        return;
    }

    private java.lang.String removeStartingsSlash(java.lang.String)
    {
        boolean $z0;
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r1 := @parameter0: java.lang.String;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        goto label1;

     label2:
        return r1;
    }

    private void stor(java.lang.String, java.net.Socket) throws java.net.UnknownHostException, java.io.IOException
    {
        java.net.Socket r0;
        java.io.InputStream r1;
        java.io.ByteArrayOutputStream $r2;
        net.sourceforge.plantuml.ftp.FtpLoop r4;
        java.lang.String r5, $r6, $r7, $r8, $r9, $r12, r15;
        boolean $z0, $z1, $z2;
        byte[] $r10;
        net.sourceforge.plantuml.ftp.FtpServer $r11, $r19;
        net.sourceforge.plantuml.ftp.FtpConnexion $r14, $r16, $r17, $r18, $r21, $r23, $r25;
        net.sourceforge.plantuml.FileFormat $r20, $r22, $r24;
        int $i0;

        r4 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r5 := @parameter0: java.lang.String;

        r0 := @parameter1: java.net.Socket;

        r1 = virtualinvoke r0.<java.net.Socket: java.io.InputStream getInputStream()>();

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <net.sourceforge.plantuml.FileUtils: void copyToStream(java.io.InputStream,java.io.OutputStream)>(r1, $r2);

        specialinvoke r4.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("226 Transfer complete.");

        $r6 = "png";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z0 == 0 goto label1;

        $r25 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        $r24 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        virtualinvoke $r25.<net.sourceforge.plantuml.ftp.FtpConnexion: void setFileFormat(net.sourceforge.plantuml.FileFormat)>($r24);

        goto label3;

     label1:
        $r7 = "svg";

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z1 == 0 goto label2;

        $r23 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        $r22 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat SVG>;

        virtualinvoke $r23.<net.sourceforge.plantuml.ftp.FtpConnexion: void setFileFormat(net.sourceforge.plantuml.FileFormat)>($r22);

        goto label3;

     label2:
        $r8 = "eps";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z2 == 0 goto label3;

        $r21 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        $r20 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat EPS>;

        virtualinvoke $r21.<net.sourceforge.plantuml.ftp.FtpConnexion: void setFileFormat(net.sourceforge.plantuml.FileFormat)>($r20);

     label3:
        $i0 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i0 <= 3 goto label4;

        $r9 = new java.lang.String;

        $r10 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r11 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpServer ftpServer>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.ftp.FtpServer: java.lang.String getCharset()>();

        specialinvoke $r9.<java.lang.String: void <init>(byte[],java.lang.String)>($r10, $r12);

        $r14 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        r15 = virtualinvoke $r14.<net.sourceforge.plantuml.ftp.FtpConnexion: java.lang.String getFutureFileName(java.lang.String)>(r5);

        $r16 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        virtualinvoke $r16.<net.sourceforge.plantuml.ftp.FtpConnexion: void futureOutgoing(java.lang.String)>(r15);

        $r17 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        virtualinvoke $r17.<net.sourceforge.plantuml.ftp.FtpConnexion: void addIncoming(java.lang.String,java.lang.String)>(r5, $r9);

        $r19 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpServer ftpServer>;

        $r18 = r4.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        virtualinvoke $r19.<net.sourceforge.plantuml.ftp.FtpServer: void processImage(net.sourceforge.plantuml.ftp.FtpConnexion,java.lang.String)>($r18, r5);

     label4:
        return;
    }

    private void listActif() throws java.net.UnknownHostException, java.io.IOException
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.net.Socket $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("150 Opening ASCII mode data");

        $r1 = new java.net.Socket;

        $r2 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: java.lang.String ipClient>;

        $i0 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        specialinvoke $r1.<java.net.Socket: void <init>(java.lang.String,int)>($r2, $i0);

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void list(java.net.Socket)>($r1);

        return;
    }

    private void listPassif() throws java.net.UnknownHostException, java.io.IOException
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.net.ServerSocket $r1;
        int $i0;
        java.net.Socket r3;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("150 Opening ASCII mode data");

        $r1 = new java.net.ServerSocket;

        $i0 = r0.<net.sourceforge.plantuml.ftp.FtpLoop: int port>;

        specialinvoke $r1.<java.net.ServerSocket: void <init>(int)>($i0);

        r3 = virtualinvoke $r1.<java.net.ServerSocket: java.net.Socket accept()>();

        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void list(java.net.Socket)>(r3);

        virtualinvoke $r1.<java.net.ServerSocket: void close()>();

        return;
    }

    private void list(java.net.Socket) throws java.io.IOException
    {
        java.net.Socket r0;
        java.io.OutputStream $r1;
        java.io.PrintWriter r2;
        net.sourceforge.plantuml.ftp.FtpLoop r3;
        net.sourceforge.plantuml.ftp.FtpConnexion $r4, $r13, $r19;
        java.util.Collection r5;
        int $i0, $i1, $i2, $i3, $i4, i5;
        boolean $z0, $z1;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9, r17, r21, r23;
        java.lang.Object $r10, $r18;
        java.lang.Object[] $r11;
        java.lang.Integer $r12, $r14, $r15, $r16;
        java.util.Iterator r20, r22;

        r3 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r0 := @parameter0: java.net.Socket;

        $r1 = virtualinvoke r0.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        r2 = staticinvoke <net.sourceforge.plantuml.security.SecurityUtils: java.io.PrintWriter createPrintWriter(java.io.OutputStream,boolean)>($r1, 1);

        $r4 = r3.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ftp.FtpConnexion: java.util.Collection getFiles()>();

        $i0 = interfaceinvoke r5.<java.util.Collection: int size()>();

        if $i0 <= 0 goto label4;

        i5 = 0;

        r20 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.String) $r18;

        $r19 = r3.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        $i2 = virtualinvoke $r19.<net.sourceforge.plantuml.ftp.FtpConnexion: int getSize(java.lang.String)>(r21);

        $i3 = $i2 + 511;

        $i4 = $i3 / 512;

        i5 = i5 + $i4;

        goto label1;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("total ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r9);

        r22 = interfaceinvoke r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r22.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke r22.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.lang.String) $r10;

        $r11 = newarray (java.lang.Object)[9];

        $r11[0] = "-rw-rw-r--";

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r11[1] = $r12;

        $r11[2] = "plantuml";

        $r11[3] = "plantuml";

        $r13 = r3.<net.sourceforge.plantuml.ftp.FtpLoop: net.sourceforge.plantuml.ftp.FtpConnexion connexion>;

        $i1 = virtualinvoke $r13.<net.sourceforge.plantuml.ftp.FtpConnexion: int getSize(java.lang.String)>(r23);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r11[4] = $r14;

        $r11[5] = "Sep";

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(28);

        $r11[6] = $r15;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2006);

        $r11[7] = $r16;

        $r11[8] = r23;

        r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%10s %4d %-8s %-8s %8d %3s %2s %5s %s", $r11);

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(r17);

        goto label3;

     label4:
        virtualinvoke r2.<java.io.PrintWriter: void flush()>();

        virtualinvoke r2.<java.io.PrintWriter: void close()>();

        virtualinvoke r0.<java.net.Socket: void close()>();

        specialinvoke r3.<net.sourceforge.plantuml.ftp.FtpLoop: void myOut(java.lang.String)>("226 Listing completed.");

        return;
    }

    private void myOut(java.lang.String)
    {
        java.lang.String r0;
        int $i0;
        net.sourceforge.plantuml.ftp.FtpLoop r1;
        java.io.PrintWriter $r2, $r3;
        java.lang.IllegalArgumentException $r4;

        r1 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(9);

        if $i0 == -1 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.ftp.FtpLoop: java.io.PrintWriter pw>;

        virtualinvoke $r2.<java.io.PrintWriter: void println(java.lang.String)>(r0);

        $r3 = r1.<net.sourceforge.plantuml.ftp.FtpLoop: java.io.PrintWriter pw>;

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        return;
    }

    public void run()
    {
        net.sourceforge.plantuml.ftp.FtpLoop r0;
        java.lang.Throwable $r1;

        r0 := @this: net.sourceforge.plantuml.ftp.FtpLoop;

     label1:
        specialinvoke r0.<net.sourceforge.plantuml.ftp.FtpLoop: void runInternal()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        virtualinvoke $r1.<java.lang.Throwable: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/ftp/FtpLoop;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.ftp.FtpLoop: boolean $assertionsDisabled> = $z1;

        return;
    }
}
