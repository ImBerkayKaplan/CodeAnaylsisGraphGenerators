class net.sourceforge.plantuml.svek.extremity.ExtremityTriangle extends net.sourceforge.plantuml.svek.extremity.Extremity
{
    private net.sourceforge.plantuml.ugraphic.UPolygon polygon;
    private final boolean fill;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor;
    private final java.awt.geom.Point2D contact;

    public java.awt.geom.Point2D somePoint()
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityTriangle r0;
        java.awt.geom.Point2D $r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityTriangle;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: java.awt.geom.Point2D contact>;

        return $r1;
    }

    public void <init>(java.awt.geom.Point2D, double, boolean, net.sourceforge.plantuml.ugraphic.color.HColor, int, int)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityTriangle r0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r1, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        boolean z0;
        java.awt.geom.Point2D$Double $r3;
        java.awt.geom.Point2D r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, d10;
        int i0, $i1, i2, $i3, $i4;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityTriangle;

        r4 := @parameter0: java.awt.geom.Point2D;

        d9 := @parameter1: double;

        z0 := @parameter2: boolean;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 := @parameter4: int;

        i2 := @parameter5: int;

        specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: void <init>()>();

        $r1 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r1;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = r2;

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: boolean fill> = z0;

        $r3 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: java.awt.geom.Point2D contact> = $r3;

        d10 = virtualinvoke r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: double manageround(double)>(d9);

        $r5 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $r6 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $i1 = neg i0;

        $d3 = (double) $i1;

        $i3 = neg i2;

        $d2 = (double) $i3;

        virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d3, $d2);

        $r7 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $i4 = neg i0;

        $d5 = (double) $i4;

        $d4 = (double) i2;

        virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d5, $d4);

        $r8 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        virtualinvoke $r8.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $r9 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d6 = d10 + 1.5707963267948966;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPolygon: void rotate(double)>($d6);

        $r10 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        $d7 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        $d8 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UPolygon: net.sourceforge.plantuml.ugraphic.UPolygon translate(double,double)>($d7, $d8);

        r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon> = $r11;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.extremity.ExtremityTriangle r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r3;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UChange $r2;
        net.sourceforge.plantuml.ugraphic.UBackground $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;
        net.sourceforge.plantuml.ugraphic.UPolygon $r6;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.ExtremityTriangle;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        if $r1 == null goto label1;

        $r3 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r5 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        goto label2;

     label1:
        $z0 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: boolean fill>;

        if $z0 == 0 goto label2;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.UChange changeBack(net.sourceforge.plantuml.ugraphic.UGraphic)>(r5);

        r5 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

     label2:
        $r6 = r0.<net.sourceforge.plantuml.svek.extremity.ExtremityTriangle: net.sourceforge.plantuml.ugraphic.UPolygon polygon>;

        interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }
}
