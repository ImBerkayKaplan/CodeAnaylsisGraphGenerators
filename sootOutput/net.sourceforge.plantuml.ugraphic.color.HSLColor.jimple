public class net.sourceforge.plantuml.ugraphic.color.HSLColor extends java.lang.Object
{
    private java.awt.Color rgb;
    private float[] hsl;
    private float alpha;

    public void <init>(java.awt.Color)
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        java.awt.Color r1;
        float[] $r2;
        int $i0;
        float $f0, $f1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        r1 := @parameter0: java.awt.Color;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color rgb> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] fromRGB(java.awt.Color)>(r1);

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl> = $r2;

        $i0 = virtualinvoke r1.<java.awt.Color: int getAlpha()>();

        $f0 = (float) $i0;

        $f1 = $f0 / 255.0F;

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha> = $f1;

        return;
    }

    public void <init>(float, float, float)
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float f0, f1, f2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: void <init>(float,float,float,float)>(f0, f1, f2, 1.0F);

        return;
    }

    public void <init>(float, float, float, float)
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1, $r2;
        float f0, f1, f2, f3;
        java.awt.Color $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (float)[3];

        $r1[0] = f0;

        $r1[1] = f1;

        $r1[2] = f2;

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl> = $r1;

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha> = f3;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float[],float)>($r2, f3);

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color rgb> = $r3;

        return;
    }

    public void <init>(float[])
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        r1 := @parameter0: float[];

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: void <init>(float[],float)>(r1, 1.0F);

        return;
    }

    public void <init>(float[], float)
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] r1;
        float f0;
        java.awt.Color $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        r1 := @parameter0: float[];

        f0 := @parameter1: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl> = r1;

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha> = f0;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float[],float)>(r1, f0);

        r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color rgb> = $r2;

        return;
    }

    public java.awt.Color adjustHue(float)
    {
        float f0, $f1, $f2, $f3;
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1, $r2;
        java.awt.Color $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        f0 := @parameter0: float;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f3 = $r1[1];

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f2 = $r2[2];

        $f1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha>;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float,float,float,float)>(f0, $f3, $f2, $f1);

        return $r3;
    }

    public java.awt.Color adjustLuminance(float)
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1, $r2;
        float f0, $f1, $f2, $f3;
        java.awt.Color $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        f0 := @parameter0: float;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f3 = $r1[0];

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f2 = $r2[1];

        $f1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha>;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float,float,float,float)>($f3, $f2, f0, $f1);

        return $r3;
    }

    public java.awt.Color adjustSaturation(float)
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1, $r2;
        float f0, $f1, $f2, $f3;
        java.awt.Color $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        f0 := @parameter0: float;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f3 = $r1[0];

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f2 = $r2[2];

        $f1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha>;

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float,float,float,float)>($f3, f0, $f2, $f1);

        return $r3;
    }

    public java.awt.Color adjustShade(float)
    {
        float f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8;
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1, $r2, $r3;
        java.awt.Color $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        f0 := @parameter0: float;

        $f1 = 100.0F - f0;

        f2 = $f1 / 100.0F;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f3 = $r1[2];

        $f4 = $f3 * f2;

        f5 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f4);

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f8 = $r2[0];

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f7 = $r3[1];

        $f6 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha>;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float,float,float,float)>($f8, $f7, f5, $f6);

        return $r4;
    }

    public java.awt.Color adjustTone(float)
    {
        float f0, $f1, f2, $f3, $f4, f5, $f6, $f7, $f8;
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1, $r2, $r3;
        java.awt.Color $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        f0 := @parameter0: float;

        $f1 = 100.0F + f0;

        f2 = $f1 / 100.0F;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f3 = $r1[2];

        $f4 = $f3 * f2;

        f5 = staticinvoke <java.lang.Math: float min(float,float)>(100.0F, $f4);

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f8 = $r2[0];

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f7 = $r3[1];

        $f6 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha>;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float,float,float,float)>($f8, $f7, f5, $f6);

        return $r4;
    }

    public float getAlpha()
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float $f0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        $f0 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha>;

        return $f0;
    }

    public java.awt.Color getComplementary()
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1, $r2, $r3;
        float $f0, $f1, f2, $f3, $f4;
        java.awt.Color $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f0 = $r1[0];

        $f1 = $f0 + 180.0F;

        f2 = $f1 % 360.0F;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f4 = $r2[1];

        $r3 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f3 = $r3[2];

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float,float,float)>(f2, $f4, $f3);

        return $r4;
    }

    public float getHue()
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1;
        float $f0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f0 = $r1[0];

        return $f0;
    }

    public float[] getHSL()
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        return $r1;
    }

    public float getLuminance()
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1;
        float $f0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f0 = $r1[2];

        return $f0;
    }

    public java.awt.Color getRGB()
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        java.awt.Color $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color rgb>;

        return $r1;
    }

    public float getSaturation()
    {
        net.sourceforge.plantuml.ugraphic.color.HSLColor r0;
        float[] $r1;
        float $f0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f0 = $r1[1];

        return $f0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13;
        net.sourceforge.plantuml.ugraphic.color.HSLColor r2;
        float[] $r3, $r6, $r9;
        float $f0, $f1, $f2, $f3;
        java.lang.String r14;

        r2 := @this: net.sourceforge.plantuml.ugraphic.color.HSLColor;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HSLColor[h=");

        $r3 = r2.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f0 = $r3[0];

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",s=");

        $r6 = r2.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f1 = $r6[1];

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",l=");

        $r9 = r2.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float[] hsl>;

        $f2 = $r9[2];

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",alpha=");

        $f3 = r2.<net.sourceforge.plantuml.ugraphic.color.HSLColor: float alpha>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return r14;
    }

    public static float[] fromRGB(java.awt.Color)
    {
        java.awt.Color r0;
        float[] r1, $r2;
        float f0, f1, f2, $f3, f4, $f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, f26, $f27, f29, $f30, $f31;
        byte $b0, $b1, $b2, $b3, $b4, $b5;

        r0 := @parameter0: java.awt.Color;

        r1 = virtualinvoke r0.<java.awt.Color: float[] getRGBColorComponents(float[])>(null);

        f0 = r1[0];

        f1 = r1[1];

        f2 = r1[2];

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(f1, f2);

        f4 = staticinvoke <java.lang.Math: float min(float,float)>(f0, $f3);

        $f5 = staticinvoke <java.lang.Math: float max(float,float)>(f1, f2);

        f6 = staticinvoke <java.lang.Math: float max(float,float)>(f0, $f5);

        f26 = 0.0F;

        $b0 = f6 cmpl f4;

        if $b0 != 0 goto label1;

        f26 = 0.0F;

        goto label4;

     label1:
        $b1 = f6 cmpl f0;

        if $b1 != 0 goto label2;

        $f21 = f1 - f2;

        $f23 = 60.0F * $f21;

        $f22 = f6 - f4;

        $f24 = $f23 / $f22;

        $f25 = $f24 + 360.0F;

        f26 = $f25 % 360.0F;

        goto label4;

     label2:
        $b2 = f6 cmpl f1;

        if $b2 != 0 goto label3;

        $f17 = f2 - f0;

        $f19 = 60.0F * $f17;

        $f18 = f6 - f4;

        $f20 = $f19 / $f18;

        f26 = $f20 + 120.0F;

        goto label4;

     label3:
        $b3 = f6 cmpl f2;

        if $b3 != 0 goto label4;

        $f13 = f0 - f1;

        $f15 = 60.0F * $f13;

        $f14 = f6 - f4;

        $f16 = $f15 / $f14;

        f26 = $f16 + 240.0F;

     label4:
        $f27 = f6 + f4;

        f7 = $f27 / 2.0F;

        $b5 = f6 cmpl f4;

        if $b5 != 0 goto label5;

        f29 = 0.0F;

        goto label7;

     label5:
        $b4 = f7 cmpg 0.5F;

        if $b4 > 0 goto label6;

        $f12 = f6 - f4;

        $f11 = f6 + f4;

        f29 = $f12 / $f11;

        goto label7;

     label6:
        $f10 = f6 - f4;

        $f8 = 2.0F - f6;

        $f9 = $f8 - f4;

        f29 = $f10 / $f9;

     label7:
        $r2 = newarray (float)[3];

        $r2[0] = f26;

        $f30 = f29 * 100.0F;

        $r2[1] = $f30;

        $f31 = f7 * 100.0F;

        $r2[2] = $f31;

        return $r2;
    }

    public static java.awt.Color toRGB(float[])
    {
        float[] r0;
        java.awt.Color $r1;

        r0 := @parameter0: float[];

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float[],float)>(r0, 1.0F);

        return $r1;
    }

    public static java.awt.Color toRGB(float[], float)
    {
        float[] r0;
        float f0, $f1, $f2, $f3;
        java.awt.Color $r1;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        $f3 = r0[0];

        $f2 = r0[1];

        $f1 = r0[2];

        $r1 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float,float,float,float)>($f3, $f2, $f1, f0);

        return $r1;
    }

    public static java.awt.Color toRGB(float, float, float)
    {
        float f0, f1, f2;
        java.awt.Color $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: java.awt.Color toRGB(float,float,float,float)>(f0, f1, f2, 1.0F);

        return $r0;
    }

    public static java.awt.Color toRGB(float, float, float, float)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6;
        double $d0;
        float $f0, $f1, $f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11, f12, f13, f14, f15, f16, f17, f19, f20, f21, f22, f23, f24, f25;
        java.awt.Color $r0;

        f10 := @parameter0: float;

        f11 := @parameter1: float;

        f12 := @parameter2: float;

        f13 := @parameter3: float;

        $b0 = f11 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        f11 = 0.0F;

     label1:
        $b1 = f11 cmpl 100.0F;

        if $b1 <= 0 goto label2;

        f11 = 100.0F;

     label2:
        $b2 = f12 cmpg 0.0F;

        if $b2 >= 0 goto label3;

        f12 = 0.0F;

     label3:
        $b3 = f12 cmpl 100.0F;

        if $b3 <= 0 goto label4;

        f12 = 100.0F;

     label4:
        $b4 = f13 cmpg 0.0F;

        if $b4 >= 0 goto label5;

        f13 = 0.0F;

     label5:
        $b5 = f13 cmpl 1.0F;

        if $b5 <= 0 goto label6;

        f13 = 1.0F;

     label6:
        f14 = f10 % 360.0F;

        f15 = f14 / 360.0F;

        f16 = f11 / 100.0F;

        f17 = f12 / 100.0F;

        $d0 = (double) f17;

        $b6 = $d0 cmpg 0.5;

        if $b6 >= 0 goto label7;

        $f9 = 1.0F + f16;

        f19 = f17 * $f9;

        goto label8;

     label7:
        $f1 = f17 + f16;

        $f0 = f16 * f17;

        f19 = $f1 - $f0;

     label8:
        $f2 = 2.0F * f17;

        f3 = $f2 - f19;

        $f4 = f15 + 0.33333334F;

        $f5 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: float HueToRGB(float,float,float)>(f3, f19, $f4);

        f20 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f5);

        $f6 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: float HueToRGB(float,float,float)>(f3, f19, f15);

        f21 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f6);

        $f7 = f15 - 0.33333334F;

        $f8 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HSLColor: float HueToRGB(float,float,float)>(f3, f19, $f7);

        f22 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f8);

        f23 = staticinvoke <java.lang.Math: float min(float,float)>(f20, 1.0F);

        f24 = staticinvoke <java.lang.Math: float min(float,float)>(f21, 1.0F);

        f25 = staticinvoke <java.lang.Math: float min(float,float)>(f22, 1.0F);

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(float,float,float,float)>(f23, f24, f25, f13);

        return $r0;
    }

    private static float HueToRGB(float, float, float)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        float $f0, $f1, $f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, f14;

        f3 := @parameter0: float;

        f4 := @parameter1: float;

        f14 := @parameter2: float;

        $b0 = f14 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        f14 = f14 + 1.0F;

     label1:
        $b1 = f14 cmpl 1.0F;

        if $b1 <= 0 goto label2;

        f14 = f14 - 1.0F;

     label2:
        $f0 = 6.0F * f14;

        $b2 = $f0 cmpg 1.0F;

        if $b2 >= 0 goto label3;

        $f10 = f4 - f3;

        $f11 = $f10 * 6.0F;

        $f12 = $f11 * f14;

        $f13 = f3 + $f12;

        return $f13;

     label3:
        $f1 = 2.0F * f14;

        $b3 = $f1 cmpg 1.0F;

        if $b3 >= 0 goto label4;

        return f4;

     label4:
        $f2 = 3.0F * f14;

        $b4 = $f2 cmpg 2.0F;

        if $b4 >= 0 goto label5;

        $f5 = f4 - f3;

        $f7 = $f5 * 6.0F;

        $f6 = 0.6666667F - f14;

        $f8 = $f7 * $f6;

        $f9 = f3 + $f8;

        return $f9;

     label5:
        return f3;
    }
}
