public class net.sourceforge.plantuml.security.authentication.SecurityAuthentication extends java.lang.Object implements net.sourceforge.plantuml.security.authentication.SecurityCredentialsContainer
{
    private final java.lang.String type;
    private final java.lang.String shape;
    private final java.lang.String grantType;
    private final java.util.Map tokens;

    public void <init>(java.lang.String, java.util.Map)
    {
        net.sourceforge.plantuml.security.authentication.SecurityAuthentication r0;
        java.lang.String r1;
        java.util.Map r2;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityAuthentication;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Map;

        specialinvoke r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map)>(r1, null, null, r2);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.util.Map)
    {
        net.sourceforge.plantuml.security.authentication.SecurityAuthentication r0;
        java.lang.String r1, r2, r3;
        java.util.Map r4;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityAuthentication;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.lang.String type> = r1;

        r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.lang.String shape> = r2;

        r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.lang.String grantType> = r3;

        r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.util.Map tokens> = r4;

        return;
    }

    public java.lang.String getType()
    {
        net.sourceforge.plantuml.security.authentication.SecurityAuthentication r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityAuthentication;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.lang.String type>;

        return $r1;
    }

    public java.lang.String getShape()
    {
        net.sourceforge.plantuml.security.authentication.SecurityAuthentication r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityAuthentication;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.lang.String shape>;

        return $r1;
    }

    public java.lang.String getGrantType()
    {
        net.sourceforge.plantuml.security.authentication.SecurityAuthentication r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityAuthentication;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.lang.String grantType>;

        return $r1;
    }

    public boolean isPublic()
    {
        net.sourceforge.plantuml.security.authentication.SecurityAuthentication r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1, $z2;
        java.util.Map $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityAuthentication;

        $r2 = "public";

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.lang.String type>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.util.Map tokens>;

        if $r3 == null goto label1;

        $r4 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.util.Map tokens>;

        $z1 = interfaceinvoke $r4.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.util.Map getTokens()
    {
        net.sourceforge.plantuml.security.authentication.SecurityAuthentication r0;
        java.util.Map $r1;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityAuthentication;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.util.Map tokens>;

        return $r1;
    }

    public void eraseCredentials()
    {
        net.sourceforge.plantuml.security.authentication.SecurityAuthentication r0;
        java.util.Map $r1, $r2, $r3, $r6;
        boolean $z0, $z1, $z2;
        java.util.Collection $r4;
        java.util.Iterator r5;
        java.lang.Object r7;
        char[] $r8;

        r0 := @this: net.sourceforge.plantuml.security.authentication.SecurityAuthentication;

        $r1 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.util.Map tokens>;

        if $r1 == null goto label4;

        $r2 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.util.Map tokens>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r3 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.util.Map tokens>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

        r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $z2 = r7 instanceof char[];

        if $z2 == 0 goto label2;

        $r8 = (char[]) r7;

        staticinvoke <java.util.Arrays: void fill(char[],char)>($r8, 42);

     label2:
        goto label1;

     label3:
        $r6 = r0.<net.sourceforge.plantuml.security.authentication.SecurityAuthentication: java.util.Map tokens>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

     label4:
        return;
    }
}
