public class net.sourceforge.plantuml.SourceFileReaderCopyCat extends net.sourceforge.plantuml.SourceFileReaderAbstract implements net.sourceforge.plantuml.ISourceFileReader
{

    public void <init>(net.sourceforge.plantuml.preproc.Defines, java.io.File, java.io.File, java.util.List, java.lang.String, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.SourceFileReaderCopyCat r0;
        java.io.File r1, $r6, $r8, r9, $r10;
        net.sourceforge.plantuml.FileFormatOption r2;
        net.sourceforge.plantuml.preproc.Defines r3;
        java.util.List r4;
        java.lang.String r5, r7;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.SourceFileReaderCopyCat;

        r3 := @parameter0: net.sourceforge.plantuml.preproc.Defines;

        r1 := @parameter1: java.io.File;

        r9 := @parameter2: java.io.File;

        r4 := @parameter3: java.util.List;

        r5 := @parameter4: java.lang.String;

        r2 := @parameter5: net.sourceforge.plantuml.FileFormatOption;

        specialinvoke r0.<net.sourceforge.plantuml.SourceFileReaderAbstract: void <init>(java.io.File,net.sourceforge.plantuml.FileFormatOption,net.sourceforge.plantuml.preproc.Defines,java.util.List,java.lang.String)>(r1, r2, r3, r4, r5);

        $r6 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        r7 = virtualinvoke $r6.<java.io.File: java.lang.String getPath()>();

        $r8 = new java.io.File;

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r9, r7);

        $r10 = virtualinvoke $r8.<java.io.File: java.io.File getAbsoluteFile()>();

        r0.<net.sourceforge.plantuml.SourceFileReaderCopyCat: java.io.File outputDirectory> = $r10;

        $z0 = virtualinvoke r9.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke r9.<java.io.File: boolean mkdirs()>();

     label1:
        return;
    }

    protected net.sourceforge.plantuml.SuggestedFile getSuggestedFile(net.sourceforge.plantuml.BlockUml)
    {
        net.sourceforge.plantuml.BlockUml r0;
        java.lang.String r1, $r11;
        java.io.File $r2, $r4, $r8, $r9, $r10;
        net.sourceforge.plantuml.SourceFileReaderCopyCat r3;
        net.sourceforge.plantuml.FileFormatOption $r5, $r12;
        net.sourceforge.plantuml.FileFormat $r6, $r13;
        int $i0, $i1, $i2, $i3;
        net.sourceforge.plantuml.security.SFile $r7;
        net.sourceforge.plantuml.SuggestedFile r14;

        r3 := @this: net.sourceforge.plantuml.SourceFileReaderCopyCat;

        r0 := @parameter0: net.sourceforge.plantuml.BlockUml;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.BlockUml: java.lang.String getFileOrDirname()>();

        if r1 != null goto label1;

        $r8 = new java.io.File;

        $r10 = r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: java.io.File outputDirectory>;

        $r9 = r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: java.io.File file>;

        $r11 = virtualinvoke $r9.<java.io.File: java.lang.String getName()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>($r10, $r11);

        $r12 = r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: net.sourceforge.plantuml.FileFormatOption fileFormatOption>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat getFileFormat()>();

        $i2 = r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: int cpt>;

        $i3 = $i2 + 1;

        r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: int cpt> = $i3;

        r14 = staticinvoke <net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.SuggestedFile fromOutputFile(java.io.File,net.sourceforge.plantuml.FileFormat,int)>($r8, $r13, $i2);

        goto label2;

     label1:
        $r2 = new java.io.File;

        $r4 = r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: java.io.File outputDirectory>;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, r1);

        $r5 = r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: net.sourceforge.plantuml.FileFormatOption fileFormatOption>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat getFileFormat()>();

        $i0 = r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: int cpt>;

        $i1 = $i0 + 1;

        r3.<net.sourceforge.plantuml.SourceFileReaderCopyCat: int cpt> = $i1;

        r14 = staticinvoke <net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.SuggestedFile fromOutputFile(java.io.File,net.sourceforge.plantuml.FileFormat,int)>($r2, $r6, $i0);

     label2:
        $r7 = virtualinvoke r14.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile getParentFile()>();

        virtualinvoke $r7.<net.sourceforge.plantuml.security.SFile: void mkdirs()>();

        return r14;
    }
}
