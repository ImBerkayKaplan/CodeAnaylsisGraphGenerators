public class net.sourceforge.plantuml.svek.Control extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final double margin;
    private final double radius;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContext;

    public void <init>(net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.svek.Control r0;
        net.sourceforge.plantuml.graphic.SymbolContext r1;

        r0 := @this: net.sourceforge.plantuml.svek.Control;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.SymbolContext;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.Control: double radius> = 12.0;

        r0.<net.sourceforge.plantuml.svek.Control: double margin> = 4.0;

        r0.<net.sourceforge.plantuml.svek.Control: double margin> = 4.0;

        r0.<net.sourceforge.plantuml.svek.Control: double radius> = 12.0;

        r0.<net.sourceforge.plantuml.svek.Control: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = r1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.Control r0;
        net.sourceforge.plantuml.graphic.SymbolContext $r1, $r4, $r8;
        net.sourceforge.plantuml.ugraphic.UEllipse $r2;
        double $d0, $d1, $d2, d5, d6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r13;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, $r14, r15, r16, r17, r18;
        net.sourceforge.plantuml.ugraphic.UStroke $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor $r9;
        net.sourceforge.plantuml.ugraphic.UBackground $r10;
        net.sourceforge.plantuml.ugraphic.UPolygon $r11;

        r0 := @this: net.sourceforge.plantuml.svek.Control;

        r15 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d5 = 0.0 + 4.0;

        d6 = 0.0 + 4.0;

        $r1 = r0.<net.sourceforge.plantuml.svek.Control: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        r16 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r15);

        $r2 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(24.0, 24.0);

        $r4 = r0.<net.sourceforge.plantuml.svek.Control: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UEllipse: void setDeltaShadow(double)>($d0);

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d5, d6);

        $r6 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

        $r7 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r17 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r8 = r0.<net.sourceforge.plantuml.svek.Control: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getForeColor()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r18 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        $r11 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(6.0, -5.0);

        virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(4.0, 0.0);

        virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(6.0, 5.0);

        virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 0.0);

        $r13 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d1 = d5 + 12.0;

        $d2 = $d1 - 4.0;

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d2, d6);

        $r14 = interfaceinvoke r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r11);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.svek.Control r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.svek.Control;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(32.0, 32.0);

        return $r0;
    }
}
