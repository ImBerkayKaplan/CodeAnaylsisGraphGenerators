public class net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary extends java.lang.Object implements net.sourceforge.plantuml.salt.factory.ElementFactory
{
    private final net.sourceforge.plantuml.salt.Dictionary dictionary;
    private final net.sourceforge.plantuml.salt.DataSource dataSource;

    public void <init>(net.sourceforge.plantuml.salt.DataSource, net.sourceforge.plantuml.salt.Dictionary)
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary r0;
        net.sourceforge.plantuml.salt.DataSource r1;
        net.sourceforge.plantuml.salt.Dictionary r2;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary;

        r1 := @parameter0: net.sourceforge.plantuml.salt.DataSource;

        r2 := @parameter1: net.sourceforge.plantuml.salt.Dictionary;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary: net.sourceforge.plantuml.salt.DataSource dataSource> = r1;

        r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary: net.sourceforge.plantuml.salt.Dictionary dictionary> = r2;

        return;
    }

    public net.sourceforge.plantuml.salt.Terminated create()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary r0;
        boolean $z0;
        net.sourceforge.plantuml.salt.DataSource $r1;
        java.lang.Object $r2, $r4, $r7;
        net.sourceforge.plantuml.salt.Terminated r3, $r9;
        int $i0, $i1;
        net.sourceforge.plantuml.salt.Dictionary $r5;
        net.sourceforge.plantuml.salt.element.Element $r6, r8;
        net.sourceforge.plantuml.salt.Terminator $r10;
        java.lang.IllegalStateException $r11;
        java.lang.String r12, r13;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary: boolean ready()>();

        if $z0 != 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.salt.Terminated) $r2;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r12 = (java.lang.String) $r4;

        $i0 = virtualinvoke r12.<java.lang.String: int length()>();

        $i1 = $i0 - 2;

        r13 = virtualinvoke r12.<java.lang.String: java.lang.String substring(int,int)>(2, $i1);

        $r5 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary: net.sourceforge.plantuml.salt.Dictionary dictionary>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.salt.Dictionary: net.sourceforge.plantuml.salt.element.Element get(java.lang.String)>(r13);

        $r7 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>($r6, r13);

        r8 = (net.sourceforge.plantuml.salt.element.Element) $r7;

        $r9 = new net.sourceforge.plantuml.salt.Terminated;

        $r10 = virtualinvoke r3.<net.sourceforge.plantuml.salt.Terminated: net.sourceforge.plantuml.salt.Terminator getTerminator()>();

        specialinvoke $r9.<net.sourceforge.plantuml.salt.Terminated: void <init>(java.lang.Object,net.sourceforge.plantuml.salt.Terminator)>(r8, $r10);

        return $r9;
    }

    public boolean ready()
    {
        net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary r0;
        net.sourceforge.plantuml.salt.DataSource $r1;
        net.sourceforge.plantuml.salt.Terminated $r2;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary;

        $r1 = r0.<net.sourceforge.plantuml.salt.factory.ElementFactoryRetrieveFromDictonnary: net.sourceforge.plantuml.salt.DataSource dataSource>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.salt.DataSource: net.sourceforge.plantuml.salt.Terminated peek(int)>(0);

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.salt.Terminated: java.lang.Object getElement()>();

        r4 = (java.lang.String) $r3;

        $z0 = virtualinvoke r4.<java.lang.String: boolean matches(java.lang.String)>("\\<\\<\\w+\\>\\>");

        return $z0;
    }
}
