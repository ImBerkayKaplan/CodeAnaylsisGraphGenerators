public final enum class net.sourceforge.plantuml.graphic.color.ColorType extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.graphic.color.ColorType TEXT;
    public static final enum net.sourceforge.plantuml.graphic.color.ColorType LINE;
    public static final enum net.sourceforge.plantuml.graphic.color.ColorType BACK;
    public static final enum net.sourceforge.plantuml.graphic.color.ColorType HEADER;
    public static final enum net.sourceforge.plantuml.graphic.color.ColorType ARROW;
    private static final net.sourceforge.plantuml.graphic.color.ColorType[] $VALUES;

    public static net.sourceforge.plantuml.graphic.color.ColorType[] values()
    {
        net.sourceforge.plantuml.graphic.color.ColorType[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.graphic.color.ColorType[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.graphic.color.ColorType valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.graphic.color.ColorType $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/graphic/color/ColorType;", r0);

        $r2 = (net.sourceforge.plantuml.graphic.color.ColorType) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.graphic.color.ColorType r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.graphic.color.ColorType;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static net.sourceforge.plantuml.graphic.color.ColorType getType(java.lang.String)
    {
        int i0;
        java.lang.String $r0, r2;
        net.sourceforge.plantuml.graphic.color.ColorType r1;

        r2 := @parameter0: java.lang.String;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(46);

        if i0 == -1 goto label1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label1:
        $r0 = virtualinvoke r2.<java.lang.String: java.lang.String toUpperCase()>();

        r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType valueOf(java.lang.String)>($r0);

        return r1;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorType[] $values()
    {
        net.sourceforge.plantuml.graphic.color.ColorType[] $r0;
        net.sourceforge.plantuml.graphic.color.ColorType $r1, $r2, $r3, $r4, $r5;

        $r0 = newarray (net.sourceforge.plantuml.graphic.color.ColorType)[5];

        $r1 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType TEXT>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType HEADER>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType ARROW>;

        $r0[4] = $r5;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.graphic.color.ColorType $r0, $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.graphic.color.ColorType[] $r5;

        $r0 = new net.sourceforge.plantuml.graphic.color.ColorType;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.color.ColorType: void <init>(java.lang.String,int)>("TEXT", 0);

        <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType TEXT> = $r0;

        $r1 = new net.sourceforge.plantuml.graphic.color.ColorType;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.color.ColorType: void <init>(java.lang.String,int)>("LINE", 1);

        <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE> = $r1;

        $r2 = new net.sourceforge.plantuml.graphic.color.ColorType;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.color.ColorType: void <init>(java.lang.String,int)>("BACK", 2);

        <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK> = $r2;

        $r3 = new net.sourceforge.plantuml.graphic.color.ColorType;

        specialinvoke $r3.<net.sourceforge.plantuml.graphic.color.ColorType: void <init>(java.lang.String,int)>("HEADER", 3);

        <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType HEADER> = $r3;

        $r4 = new net.sourceforge.plantuml.graphic.color.ColorType;

        specialinvoke $r4.<net.sourceforge.plantuml.graphic.color.ColorType: void <init>(java.lang.String,int)>("ARROW", 4);

        <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType ARROW> = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType[] $values()>();

        <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType[] $VALUES> = $r5;

        return;
    }
}
