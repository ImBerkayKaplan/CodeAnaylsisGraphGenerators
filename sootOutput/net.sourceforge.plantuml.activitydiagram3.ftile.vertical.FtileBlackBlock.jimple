public class net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile
{
    private final double labelMargin;
    private double width;
    private double height;
    private net.sourceforge.plantuml.graphic.TextBlock label;
    private net.sourceforge.plantuml.ugraphic.color.HColor colorBar;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane;

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractFtile: void <init>(net.sourceforge.plantuml.ISkinParam)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double labelMargin> = 5.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double labelMargin> = 5.0;

        $r2 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.graphic.TextBlock label> = $r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.ugraphic.color.HColor colorBar> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane> = r4;

        return;
    }

    public void setBlackBlockDimension(double, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r0;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        d1 := @parameter0: double;

        d0 := @parameter1: double;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double height> = d0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double width> = d1;

        return;
    }

    public void setLabel(net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r0;
        net.sourceforge.plantuml.graphic.TextBlock r1, $r3;
        java.lang.Object $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.graphic.TextBlock) $r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.graphic.TextBlock label> = $r3;

        return;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimensionFtile(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        byte $b0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d6 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $b0 = d6 cmpl 0.0;

        if $b0 <= 0 goto label1;

        d6 = d6 + 5.0;

     label1:
        $r4 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double width>;

        $d5 = $d0 + d6;

        $d4 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double height>;

        $d1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double width>;

        $d3 = $d1 / 2.0;

        $d2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double height>;

        specialinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: void <init>(double,double,double,double,double)>($d5, $d4, $d3, 0.0, $d2);

        return $r4;
    }

    private net.sourceforge.plantuml.style.StyleSignature getSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityBar>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.URectangle $r0, $r2, r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r1;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7;
        boolean $z0, $z1;
        net.sourceforge.plantuml.ISkinParam $r4, $r7, $r13;
        net.sourceforge.plantuml.ugraphic.UGraphic r5, $r19, $r22, $r28;
        net.sourceforge.plantuml.style.StyleSignature $r6;
        net.sourceforge.plantuml.style.StyleBuilder $r8;
        net.sourceforge.plantuml.style.PName $r9, $r11;
        net.sourceforge.plantuml.style.Value $r10, $r12;
        net.sourceforge.plantuml.api.ThemeStyle $r14;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r15;
        net.sourceforge.plantuml.ugraphic.color.HColor $r16, $r18, $r20;
        net.sourceforge.plantuml.style.Style r17;
        net.sourceforge.plantuml.ugraphic.UBackground $r21;
        net.sourceforge.plantuml.graphic.TextBlock $r23, $r26;
        net.sourceforge.plantuml.graphic.StringBounder $r24;
        net.sourceforge.plantuml.awt.geom.Dimension2D r25;
        net.sourceforge.plantuml.ugraphic.UTranslate $r27;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d1 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double width>;

        $d0 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double height>;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d1, $d0);

        $r2 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>(5.0);

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle ignoreForCompressionOnX()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r6 = specialinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.style.StyleSignature getSignature()>();

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r17 = virtualinvoke $r6.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r8);

        $r9 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r10 = virtualinvoke r17.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r9);

        d2 = interfaceinvoke $r10.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(d2);

        $r11 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r12 = virtualinvoke r17.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r11);

        $r13 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r15 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r16 = interfaceinvoke $r12.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r14, $r15);

        r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.ugraphic.color.HColor colorBar> = $r16;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $z1 = interfaceinvoke $r4.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>(null);

        if $z1 == 0 goto label2;

        virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.URectangle: void setDeltaShadow(double)>(3.0);

     label2:
        $r18 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.ugraphic.color.HColor colorBar>;

        $r19 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        $r20 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.ugraphic.color.HColor colorBar>;

        $r21 = interfaceinvoke $r20.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r22 = interfaceinvoke $r19.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r21);

        interfaceinvoke $r22.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r3);

        $r23 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r24 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r25 = interfaceinvoke $r23.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r24);

        $r26 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.graphic.TextBlock label>;

        $r27 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: double width>;

        $d4 = $d3 + 5.0;

        $d5 = virtualinvoke r25.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d6 = neg $d5;

        $d7 = $d6 / 2.0;

        specialinvoke $r27.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, $d7);

        $r28 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r27);

        interfaceinvoke $r26.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r28);

        return;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        return $r1;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        return $r1;
    }

    public java.util.Collection getMyChildren()
    {
        java.util.List $r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock r1;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBlackBlock;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r0;
    }
}
