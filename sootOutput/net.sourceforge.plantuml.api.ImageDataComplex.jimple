public class net.sourceforge.plantuml.api.ImageDataComplex extends net.sourceforge.plantuml.api.ImageDataAbstract
{
    private final net.sourceforge.plantuml.CMapData cmap;
    private final java.lang.String warningOrError;

    public void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D, net.sourceforge.plantuml.CMapData, java.lang.String)
    {
        net.sourceforge.plantuml.api.ImageDataComplex r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.CMapData r2;
        java.lang.String r3;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataComplex;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r2 := @parameter1: net.sourceforge.plantuml.CMapData;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.api.ImageDataAbstract: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1);

        r0.<net.sourceforge.plantuml.api.ImageDataComplex: net.sourceforge.plantuml.CMapData cmap> = r2;

        r0.<net.sourceforge.plantuml.api.ImageDataComplex: java.lang.String warningOrError> = r3;

        return;
    }

    public void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D, net.sourceforge.plantuml.CMapData, java.lang.String, int)
    {
        net.sourceforge.plantuml.api.ImageDataComplex r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.CMapData r2;
        java.lang.String r3;
        int i0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataComplex;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r2 := @parameter1: net.sourceforge.plantuml.CMapData;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        specialinvoke r0.<net.sourceforge.plantuml.api.ImageDataAbstract: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r1);

        r0.<net.sourceforge.plantuml.api.ImageDataComplex: net.sourceforge.plantuml.CMapData cmap> = r2;

        r0.<net.sourceforge.plantuml.api.ImageDataComplex: java.lang.String warningOrError> = r3;

        virtualinvoke r0.<net.sourceforge.plantuml.api.ImageDataComplex: void setStatus(int)>(i0);

        return;
    }

    public boolean containsCMapData()
    {
        net.sourceforge.plantuml.api.ImageDataComplex r0;
        net.sourceforge.plantuml.CMapData $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataComplex;

        $r1 = r0.<net.sourceforge.plantuml.api.ImageDataComplex: net.sourceforge.plantuml.CMapData cmap>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.api.ImageDataComplex: net.sourceforge.plantuml.CMapData cmap>;

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.CMapData: boolean containsData()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String getCMapData(java.lang.String)
    {
        net.sourceforge.plantuml.api.ImageDataComplex r0;
        java.lang.String r1, $r3;
        net.sourceforge.plantuml.CMapData $r2;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataComplex;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.api.ImageDataComplex: net.sourceforge.plantuml.CMapData cmap>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.CMapData: java.lang.String asString(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String getWarningOrError()
    {
        net.sourceforge.plantuml.api.ImageDataComplex r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataComplex;

        $r1 = r0.<net.sourceforge.plantuml.api.ImageDataComplex: java.lang.String warningOrError>;

        return $r1;
    }
}
