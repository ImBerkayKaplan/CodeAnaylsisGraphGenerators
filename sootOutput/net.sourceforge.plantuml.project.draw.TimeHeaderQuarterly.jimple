public class net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly extends net.sourceforge.plantuml.project.draw.TimeHeaderCalendar
{

    public double getTimeHeaderHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        return 29.0;
    }

    public double getTimeFooterHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        return 28.0;
    }

    public void <init>(java.util.Locale, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, double, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.LoadPlanable, java.util.Map, java.util.Map, net.sourceforge.plantuml.ugraphic.color.HColorSet, net.sourceforge.plantuml.api.ThemeStyle)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;
        java.util.Locale r1;
        net.sourceforge.plantuml.style.Style r2, r3;
        net.sourceforge.plantuml.project.time.Day r4, r5, r6;
        net.sourceforge.plantuml.project.LoadPlanable r7;
        java.util.Map r8, r9;
        net.sourceforge.plantuml.project.timescale.TimeScaleCompressed $r10;
        double d0;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r11;
        net.sourceforge.plantuml.api.ThemeStyle r12;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: net.sourceforge.plantuml.style.Style;

        r3 := @parameter2: net.sourceforge.plantuml.style.Style;

        d0 := @parameter3: double;

        r4 := @parameter4: net.sourceforge.plantuml.project.time.Day;

        r5 := @parameter5: net.sourceforge.plantuml.project.time.Day;

        r6 := @parameter6: net.sourceforge.plantuml.project.time.Day;

        r7 := @parameter7: net.sourceforge.plantuml.project.LoadPlanable;

        r8 := @parameter8: java.util.Map;

        r9 := @parameter9: java.util.Map;

        r11 := @parameter10: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        r12 := @parameter11: net.sourceforge.plantuml.api.ThemeStyle;

        $r10 = new net.sourceforge.plantuml.project.timescale.TimeScaleCompressed;

        specialinvoke $r10.<net.sourceforge.plantuml.project.timescale.TimeScaleCompressed: void <init>(net.sourceforge.plantuml.project.time.Day,double)>(r4, d0);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderCalendar: void <init>(java.util.Locale,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.LoadPlanable,java.util.Map,java.util.Map,net.sourceforge.plantuml.project.timescale.TimeScale,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.api.ThemeStyle)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, $r10, r11, r12);

        return;
    }

    public void drawTimeHeader(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3;
        double d0, $d1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawTextsBackground(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r1, d0);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawYears(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(16.0);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawQuarters(net.sourceforge.plantuml.ugraphic.UGraphic)>($r3);

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r1, 0.0);

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r1, 16.0);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: double getFullHeaderHeight()>();

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r1, $d1);

        return;
    }

    public void drawTimeFooter(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UTranslate $r0, $r2;
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, r4, r5;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(3.0);

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        specialinvoke r1.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawQuarters(net.sourceforge.plantuml.ugraphic.UGraphic)>(r5);

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(13.0);

        $r3 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        specialinvoke r1.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawYears(net.sourceforge.plantuml.ugraphic.UGraphic)>($r3);

        virtualinvoke r1.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r5, 0.0);

        virtualinvoke r1.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r5, 13.0);

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: double getTimeFooterHeight()>();

        virtualinvoke r1.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r5, $d0);

        return;
    }

    private void drawYears(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;
        net.sourceforge.plantuml.project.time.Day $r1, $r3, $r4, $r7, r11;
        int $i0, $i2, $i3;
        net.sourceforge.plantuml.project.timescale.TimeScale $r2, $r6, $r8;
        byte $b1;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;
        double $d0, d1, d2, d3;
        net.sourceforge.plantuml.project.time.MonthYear $r9, r10;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r10 = null;

        d2 = -1.0;

        r11 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.time.Day max>;

        $i0 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r1);

        if $i0 >= 0 goto label5;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d1 = interfaceinvoke $r8.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r11);

        if r10 == null goto label2;

        $r9 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.MonthYear monthYear()>();

        $i2 = virtualinvoke $r9.<net.sourceforge.plantuml.project.time.MonthYear: int year()>();

        $i3 = virtualinvoke r10.<net.sourceforge.plantuml.project.time.MonthYear: int year()>();

        if $i2 == $i3 goto label4;

     label2:
        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawVbar(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r5, d1, 0.0, 15.0);

        if r10 == null goto label3;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void printYear(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.time.MonthYear,double,double)>(r5, r10, d2, d1);

     label3:
        d2 = d1;

        r10 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.MonthYear monthYear()>();

     label4:
        r11 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label5:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r3 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.time.Day max>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        d3 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r4);

        $b1 = d3 cmpl d2;

        if $b1 <= 0 goto label6;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void printYear(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.time.MonthYear,double,double)>(r5, r10, d2, d3);

     label6:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r7 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.time.Day max>;

        $d0 = interfaceinvoke $r6.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r7);

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawVbar(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r5, $d0, 0.0, 15.0);

        return;
    }

    private void drawQuarters(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;
        net.sourceforge.plantuml.project.time.Day $r1, $r3, $r4, $r7, r11;
        int $i0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r2, $r6, $r8;
        byte $b1;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;
        double $d0, d1, d2, d3;
        java.lang.String $r9, r10;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r10 = null;

        d2 = -1.0;

        r11 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.time.Day max>;

        $i0 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r1);

        if $i0 >= 0 goto label4;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d1 = interfaceinvoke $r8.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r11);

        $r9 = specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: java.lang.String quarter(net.sourceforge.plantuml.project.time.Day)>(r11);

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 != 0 goto label3;

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawVbar(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r5, d1, 0.0, 12.0);

        if r10 == null goto label2;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void printQuarter(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,double,double)>(r5, r10, d2, d1);

     label2:
        d2 = d1;

        r10 = specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: java.lang.String quarter(net.sourceforge.plantuml.project.time.Day)>(r11);

     label3:
        r11 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label4:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r3 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.time.Day max>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        d3 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r4);

        $b1 = d3 cmpl d2;

        if $b1 <= 0 goto label5;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void printQuarter(net.sourceforge.plantuml.ugraphic.UGraphic,java.lang.String,double,double)>(r5, r10, d2, d3);

     label5:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r7 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.project.time.Day max>;

        $d0 = interfaceinvoke $r6.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r7);

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void drawVbar(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r5, $d0, 0.0, 12.0);

        return;
    }

    private java.lang.String quarter(net.sourceforge.plantuml.project.time.Day)
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        net.sourceforge.plantuml.project.time.Day r2;
        net.sourceforge.plantuml.project.time.Month $r3;
        int $i0, $i1, $i2;
        java.lang.String $r5;
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r6;

        r6 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r2 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Q");

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Month month()>();

        $i0 = virtualinvoke $r3.<net.sourceforge.plantuml.project.time.Month: int ordinal()>();

        $i1 = $i0 + 3;

        $i2 = $i1 / 3;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private void printYear(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.project.time.MonthYear, double, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        net.sourceforge.plantuml.project.time.MonthYear r3;
        int $i0;
        java.lang.String $r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r6;
        net.sourceforge.plantuml.graphic.TextBlock r7;
        net.sourceforge.plantuml.ugraphic.UGraphic r8;
        double d0, d1;
        net.sourceforge.plantuml.graphic.TextBlock[] $r9;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r8 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r3 := @parameter1: net.sourceforge.plantuml.project.time.MonthYear;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = virtualinvoke r3.<net.sourceforge.plantuml.project.time.MonthYear: int year()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()>();

        r7 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>($r5, 12, 1, $r6);

        $r9 = newarray (net.sourceforge.plantuml.graphic.TextBlock)[1];

        $r9[0] = r7;

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void printCentered(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,double,double,net.sourceforge.plantuml.graphic.TextBlock[])>(r8, 0, d0, d1, $r9);

        return;
    }

    private void printQuarter(net.sourceforge.plantuml.ugraphic.UGraphic, java.lang.String, double, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r4;
        double d0, d1;
        net.sourceforge.plantuml.graphic.TextBlock[] $r5;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: java.lang.String;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, 10, 0, $r2);

        $r5 = newarray (net.sourceforge.plantuml.graphic.TextBlock)[1];

        $r5[0] = r3;

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: void printCentered(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,double,double,net.sourceforge.plantuml.graphic.TextBlock[])>(r4, 0, d0, d1, $r5);

        return;
    }

    private void printLeft(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.graphic.TextBlock, double)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3;
        double d0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r4;

        r4 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter2: double;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d0);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        interfaceinvoke r0.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r3);

        return;
    }

    public double getFullHeaderHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderQuarterly: double getTimeHeaderHeight()>();

        return $d0;
    }
}
