public class net.sourceforge.plantuml.png.PngIO extends java.lang.Object
{
    private static final java.lang.String copyleft;

    public void <init>()
    {
        net.sourceforge.plantuml.png.PngIO r0;

        r0 := @this: net.sourceforge.plantuml.png.PngIO;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void write(java.awt.image.RenderedImage, net.sourceforge.plantuml.security.SFile, int) throws java.io.IOException
    {
        java.awt.image.RenderedImage r0;
        net.sourceforge.plantuml.security.SFile r1;
        int i0;

        r0 := @parameter0: java.awt.image.RenderedImage;

        r1 := @parameter1: net.sourceforge.plantuml.security.SFile;

        i0 := @parameter2: int;

        staticinvoke <net.sourceforge.plantuml.png.PngIO: void write(java.awt.image.RenderedImage,net.sourceforge.plantuml.security.SFile,java.lang.String,int)>(r0, r1, null, i0);

        return;
    }

    public static void write(java.awt.image.RenderedImage, java.io.OutputStream, int) throws java.io.IOException
    {
        java.awt.image.RenderedImage r0;
        java.io.OutputStream r1;
        int i0;

        r0 := @parameter0: java.awt.image.RenderedImage;

        r1 := @parameter1: java.io.OutputStream;

        i0 := @parameter2: int;

        staticinvoke <net.sourceforge.plantuml.png.PngIO: void write(java.awt.image.RenderedImage,java.io.OutputStream,java.lang.String,int)>(r0, r1, null, i0);

        return;
    }

    public static void write(java.awt.image.RenderedImage, net.sourceforge.plantuml.security.SFile, java.lang.String, int) throws java.io.IOException
    {
        net.sourceforge.plantuml.security.SFile r0;
        java.io.BufferedOutputStream r1;
        java.awt.image.RenderedImage r2;
        java.lang.String r3, $r7, $r11, $r15;
        int i0;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14;
        long $l1, $l2;
        byte $b3;
        java.lang.Throwable $r16, $r19;

        r2 := @parameter0: java.awt.image.RenderedImage;

        r0 := @parameter1: net.sourceforge.plantuml.security.SFile;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.security.SFile: java.io.BufferedOutputStream createBufferedOutputStream()>();

     label1:
        staticinvoke <net.sourceforge.plantuml.png.PngIO: void write(java.awt.image.RenderedImage,java.io.OutputStream,java.lang.String,int)>(r2, r1, r3, i0);

     label2:
        if r1 == null goto label8;

        virtualinvoke r1.<java.io.OutputStream: void close()>();

        goto label8;

     label3:
        $r19 := @caughtexception;

        if r1 == null goto label7;

     label4:
        virtualinvoke r1.<java.io.OutputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r16 := @caughtexception;

        virtualinvoke $r19.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r16);

     label7:
        throw $r19;

     label8:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void debug(java.lang.String)>($r7);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File size ");

        $l1 = virtualinvoke r0.<net.sourceforge.plantuml.security.SFile: long length()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void debug(java.lang.String)>($r11);

        $l2 = virtualinvoke r0.<net.sourceforge.plantuml.security.SFile: long length()>();

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label9;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File size is zero: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r15);

        staticinvoke <net.sourceforge.plantuml.security.SImageIO: void write(java.awt.image.RenderedImage,java.lang.String,net.sourceforge.plantuml.security.SFile)>(r2, "png", r0);

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void write(java.awt.image.RenderedImage, java.io.OutputStream, java.lang.String, int) throws java.io.IOException
    {
        java.awt.image.RenderedImage r0;
        java.io.OutputStream r1;
        java.lang.String r2;
        int i0;

        r0 := @parameter0: java.awt.image.RenderedImage;

        r1 := @parameter1: java.io.OutputStream;

        r2 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        staticinvoke <net.sourceforge.plantuml.png.PngIO: void write(java.awt.image.RenderedImage,java.io.OutputStream,java.lang.String,int,java.lang.String)>(r0, r1, r2, i0, null);

        return;
    }

    public static void write(java.awt.image.RenderedImage, java.io.OutputStream, java.lang.String, int, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r3;
        java.awt.image.RenderedImage r1;
        java.io.OutputStream r2;
        int i0;

        r1 := @parameter0: java.awt.image.RenderedImage;

        r2 := @parameter1: java.io.OutputStream;

        r0 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r3 := @parameter4: java.lang.String;

        if r0 != null goto label1;

        staticinvoke <net.sourceforge.plantuml.security.SImageIO: void write(java.awt.image.RenderedImage,java.lang.String,java.io.OutputStream)>(r1, "png", r2);

        goto label2;

     label1:
        staticinvoke <net.sourceforge.plantuml.png.PngIOMetadata: void writeWithMetadata(java.awt.image.RenderedImage,java.io.OutputStream,java.lang.String,int,java.lang.String)>(r1, r2, r0, i0, r3);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.png.PngIO: java.lang.String copyleft> = "Generated by http://plantuml.com";

        return;
    }
}
