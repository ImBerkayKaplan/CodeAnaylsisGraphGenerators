public class net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse extends net.sourceforge.plantuml.skin.AbstractTextualComponent
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor groupBorder;
    private final net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor;
    private final double roundCorner;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.graphic.FontConfiguration, java.lang.CharSequence, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.ugraphic.color.HColor, double)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse r0;
        net.sourceforge.plantuml.style.Style r1;
        java.lang.CharSequence r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        net.sourceforge.plantuml.LineBreakStrategy $r4;
        net.sourceforge.plantuml.graphic.FontConfiguration r8;
        net.sourceforge.plantuml.ISkinSimple r9;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r10;
        boolean $z0;
        double d0, $d1;
        net.sourceforge.plantuml.ugraphic.color.HColor r11, r12, $r19, $r24;
        net.sourceforge.plantuml.style.PName $r13, $r15, $r20;
        net.sourceforge.plantuml.style.Value $r14, $r16, $r21;
        int $i0;
        net.sourceforge.plantuml.api.ThemeStyle $r17, $r22;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r18, $r23;
        java.lang.String $r27;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r11 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r8 := @parameter2: net.sourceforge.plantuml.graphic.FontConfiguration;

        r2 := @parameter3: java.lang.CharSequence;

        r9 := @parameter4: net.sourceforge.plantuml.ISkinSimple;

        r12 := @parameter5: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter6: double;

        $r4 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        if r2 != null goto label1;

        $r27 = null;

        goto label2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r27 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r10 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,java.lang.CharSequence,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, $r4, $r27, r8, $r10, 5, 5, 1, r9, null, null);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label3;

        $r13 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName RoundCorner>;

        $r14 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r13);

        $i0 = interfaceinvoke $r14.<net.sourceforge.plantuml.style.Value: int asInt()>();

        $d1 = (double) $i0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner> = $d1;

        $r15 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r16 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r15);

        $r17 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r19 = interfaceinvoke $r16.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r17, $r18);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColor groupBorder> = $r19;

        $r20 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r21 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r20);

        $r22 = interfaceinvoke r9.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r24 = interfaceinvoke $r21.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r22, $r23);

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = $r24;

        goto label4;

     label3:
        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner> = d0;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColor groupBorder> = r11;

        r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor> = r12;

     label4:
        return;
    }

    protected void drawBackgroundInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2, $r7;
        boolean $z0, $z1;
        net.sourceforge.plantuml.skin.Area r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, r12, r13;
        net.sourceforge.plantuml.ugraphic.UBackground $r8;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.UPath $r9;
        net.sourceforge.plantuml.ugraphic.URectangle $r11;
        net.sourceforge.plantuml.ugraphic.AbstractShadowable r14;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r3 := @parameter1: net.sourceforge.plantuml.skin.Area;

        $r1 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.ugraphic.color.HColorBackground;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $z1 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorUtils: boolean isTransparent(net.sourceforge.plantuml.ugraphic.color.HColor)>($r2);

        if $z1 == 0 goto label2;

        return;

     label2:
        r4 = virtualinvoke r3.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r5 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r6 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColor backgroundColor>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r13 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label3;

        $r11 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d0, d1);

        r14 = $r11;

        goto label4;

     label3:
        $r9 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 0.0);

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d0, 0.0);

        $d3 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $d4 = $d3 / 2.0;

        $d5 = d1 - $d4;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(d0, $d5);

        $d6 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $d12 = $d6 / 2.0;

        $d7 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $d11 = $d7 / 2.0;

        $d8 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $d9 = $d8 / 2.0;

        $d10 = d0 - $d9;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(double,double,double,double,double,double,double)>($d12, $d11, 0.0, 0.0, 1.0, $d10, d1);

        $d13 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $d14 = $d13 / 2.0;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d14, d1);

        $d15 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $d21 = $d15 / 2.0;

        $d16 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $d20 = $d16 / 2.0;

        $d17 = r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double roundCorner>;

        $d18 = $d17 / 2.0;

        $d19 = d1 - $d18;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void arcTo(double,double,double,double,double,double,double)>($d21, $d20, 0.0, 0.0, 1.0, 0.0, $d19);

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, 0.0);

        r14 = $r9;

     label4:
        interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r14);

        return;
    }

    protected void drawInternalU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2, $r6, $r11, r12, r13, r14;
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r10;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.ULine $r7;
        net.sourceforge.plantuml.ugraphic.UStroke $r8;
        net.sourceforge.plantuml.graphic.TextBlock $r9;
        int $i0, $i1;

        r3 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.ugraphic.UGraphic stroke(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r12, 2.0, 2.0, 1.0);

        $r4 = r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.ugraphic.color.HColor groupBorder>;

        r13 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(1.0);

        $r6 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d0);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        $r8 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r14 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r10 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $i0 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: int getMarginX1()>();

        $d1 = (double) $i0;

        $i1 = virtualinvoke r3.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: int getMarginY()>();

        $d2 = (double) $i1;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d1, $d2);

        $r11 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke $r9.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r11);

        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingElse: double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $d0;
    }
}
