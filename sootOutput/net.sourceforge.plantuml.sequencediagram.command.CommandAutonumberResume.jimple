public class net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume r0;
        net.sourceforge.plantuml.command.regex.RegexConcat $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume;

        $r1 = staticinvoke <net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume: net.sourceforge.plantuml.command.regex.RegexConcat getConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.RegexConcat getConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r10, $r15;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r7, $r11, $r12, $r16, $r17, $r18;
        net.sourceforge.plantuml.command.regex.RegexOptional $r8, $r13;
        net.sourceforge.plantuml.command.regex.RegexConcat $r9, $r14, $r19;

        $r0 = class "Lnet/sourceforge/plantuml/sequencediagram/command/CommandAutonumberResume;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[8];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("autonumber");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("resume");

        $r2[3] = $r6;

        $r7 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r10 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r10[0] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("INC", "(\\d+)");

        $r10[1] = $r12;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r10);

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r9);

        $r2[5] = $r8;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r15 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r16 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r15[0] = $r16;

        $r17 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("DF", "[%g]([^%g]+)[%g]");

        $r15[1] = $r17;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r15);

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r14);

        $r2[6] = $r13;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[7] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r19;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, $r11, r17;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r2;
        net.sourceforge.plantuml.sequencediagram.AutoNumber $r3, $r5;
        int $i0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r4, $r12;
        java.text.DecimalFormat $r6, r15;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume r13;
        net.sourceforge.plantuml.LineLocation r14;

        r13 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume;

        r2 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r14 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("DF", 0);

        r15 = null;

        if r1 == null goto label4;

     label1:
        $r6 = new java.text.DecimalFormat;

        specialinvoke $r6.<java.text.DecimalFormat: void <init>(java.lang.String)>(r1);

        r15 = $r6;

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error in pattern : ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r11);

        return $r12;

     label4:
        r17 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("INC", 0);

        if r17 != null goto label5;

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.sequencediagram.AutoNumber getAutoNumber()>();

        virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.AutoNumber: void resume(java.text.DecimalFormat)>(r15);

        goto label6;

     label5:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.sequencediagram.AutoNumber getAutoNumber()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r17);

        virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.AutoNumber: void resume(int,java.text.DecimalFormat)>($i0, r15);

     label6:
        $r4 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r4;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.sequencediagram.SequenceDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.command.CommandAutonumberResume: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.sequencediagram.SequenceDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
