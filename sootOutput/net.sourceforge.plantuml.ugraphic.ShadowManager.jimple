public class net.sourceforge.plantuml.ugraphic.ShadowManager extends java.lang.Object
{
    private final int c1;
    private final int c2;
    static final boolean $assertionsDisabled;

    public void <init>(int, int)
    {
        net.sourceforge.plantuml.ugraphic.ShadowManager r0;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ShadowManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.ShadowManager: int c1> = i0;

        r0.<net.sourceforge.plantuml.ugraphic.ShadowManager: int c2> = i1;

        return;
    }

    public double[] getShadowDeltaPoints(double, double, double[])
    {
        boolean $z0;
        double[] r0, r1;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i8, $i9, $i10, i11, $i12, i13, i14;
        double $d0, $d1, $d2, d3, d4, $d5, $d7, d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, d16, d17, d18, d19, $d20, $d21;
        byte $b3, $b5;
        java.lang.AssertionError $r2;
        net.sourceforge.plantuml.ugraphic.ShadowManager r3;

        r3 := @this: net.sourceforge.plantuml.ugraphic.ShadowManager;

        d8 := @parameter0: double;

        d3 := @parameter1: double;

        r0 := @parameter2: double[];

        $z0 = <net.sourceforge.plantuml.ugraphic.ShadowManager: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i9 = lengthof r0;

        $i10 = $i9 % 2;

        if $i10 == 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        d16 = 0.0;

        d17 = 0.0;

        i11 = 0;

     label2:
        $i12 = lengthof r0;

        if i11 >= $i12 goto label3;

        $d14 = r0[i11];

        d16 = d16 + $d14;

        $i8 = i11 + 1;

        $d15 = r0[$i8];

        d17 = d17 + $d15;

        i11 = i11 + 2;

        goto label2;

     label3:
        $i0 = lengthof r0;

        i13 = $i0 / 2;

        $d0 = (double) i13;

        d18 = d16 / $d0;

        $d1 = (double) i13;

        d19 = d17 / $d1;

        $i1 = lengthof r0;

        r1 = newarray (double)[$i1];

        i14 = 0;

     label4:
        $i2 = lengthof r1;

        if i14 >= $i2 goto label9;

        $d2 = r0[i14];

        $b3 = $d2 cmpl d18;

        if $b3 <= 0 goto label5;

        $d20 = neg d3;

        goto label6;

     label5:
        $d20 = d3;

     label6:
        d4 = $d20;

        $i4 = i14 + 1;

        $d5 = r0[$i4];

        $b5 = $d5 cmpl d19;

        if $b5 <= 0 goto label7;

        $d21 = neg d3;

        goto label8;

     label7:
        $d21 = d3;

     label8:
        $d7 = r0[i14];

        $d9 = $d7 + d4;

        $d10 = $d9 + d8;

        r1[i14] = $d10;

        $i7 = i14 + 1;

        $i6 = i14 + 1;

        $d11 = r0[$i6];

        $d12 = $d11 + $d21;

        $d13 = $d12 + d8;

        r1[$i7] = $d13;

        i14 = i14 + 2;

        goto label4;

     label9:
        return r1;
    }

    public java.awt.Color getColor(double, double)
    {
        net.sourceforge.plantuml.ugraphic.ShadowManager r0;
        int $i0, $i1, $i2, $i3, i4;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.awt.Color $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.ShadowManager;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.ShadowManager: int c2>;

        $d6 = (double) $i0;

        $d2 = 1.0 * d0;

        $d4 = $d2 / d1;

        $i2 = r0.<net.sourceforge.plantuml.ugraphic.ShadowManager: int c1>;

        $i1 = r0.<net.sourceforge.plantuml.ugraphic.ShadowManager: int c2>;

        $i3 = $i2 - $i1;

        $d3 = (double) $i3;

        $d5 = $d4 * $d3;

        $d7 = $d6 + $d5;

        i4 = (int) $d7;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i4, i4, i4);

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/ugraphic/ShadowManager;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.ugraphic.ShadowManager: boolean $assertionsDisabled> = $z1;

        return;
    }
}
