abstract class net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny extends net.sourceforge.plantuml.command.SingleLineCommand2
{
    protected static final java.lang.String ARROW_SUPPCIRCLE1;
    protected static final java.lang.String ARROW_SUPPCIRCLE2;

    public void <init>(net.sourceforge.plantuml.command.regex.IRegex)
    {
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny r0;
        net.sourceforge.plantuml.command.regex.IRegex r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.IRegex;

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>(r1);

        return;
    }

    protected final net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        java.lang.StringBuilder $r0, $r3, $r5;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.String $r2, $r4, r6, r7, $r9, $r10, $r12, $r13, $r14, $r20, r21, $r23, $r24, $r25, $r26, r27, $r50, $r52, $r77, $r78, r81;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r8;
        net.sourceforge.plantuml.sequencediagram.Participant r11;
        int $i0;
        boolean z0, z1, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny r15;
        net.sourceforge.plantuml.sequencediagram.MessageExoType r16, $r57, $r73;
        net.sourceforge.plantuml.skin.ArrowPart $r17;
        net.sourceforge.plantuml.ISkinParam $r18, $r28, $r30, $r49, $r75;
        net.sourceforge.plantuml.api.ThemeStyle $r19, $r31;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r29;
        net.sourceforge.plantuml.ugraphic.color.HColor r32, $r82;
        net.sourceforge.plantuml.skin.ArrowHead $r33, $r34, $r39, $r40, $r53, $r55, $r58, $r60, $r64;
        net.sourceforge.plantuml.sequencediagram.LifeEventType $r35, $r37, $r41, $r43, $r45, $r62;
        char $c1, $c2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r47, $r83;
        net.sourceforge.plantuml.UrlBuilder $r48;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r51;
        net.sourceforge.plantuml.skin.ArrowDecoration $r54, $r56, $r59, $r61;
        net.sourceforge.plantuml.skin.ArrowBody $r65;
        java.lang.CharSequence[] $r66;
        net.sourceforge.plantuml.LineLocation r67;
        net.sourceforge.plantuml.cucadiagram.Display r68;
        net.sourceforge.plantuml.skin.ArrowConfiguration $r69, r70, r71, r72;
        net.sourceforge.plantuml.sequencediagram.MessageExo $r74;
        net.sourceforge.plantuml.style.StyleBuilder $r76;
        net.sourceforge.plantuml.Url r80;

        r15 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny;

        r8 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r67 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r1 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_BODYA", 0);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_BODYB", 0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r7 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_DRESSING", 0);

        $r9 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("PARTICIPANT", 0);

        $r10 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r9);

        r11 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.sequencediagram.Participant getOrCreateParticipant(java.lang.String)>($r10);

        $i0 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i0 != 2 goto label01;

        $z13 = 1;

        goto label02;

     label01:
        $z13 = 0;

     label02:
        z0 = $z13;

        z1 = virtualinvoke r6.<java.lang.String: boolean contains(java.lang.CharSequence)>("--");

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL", 0);

        if $r12 != null goto label03;

        $r66 = newarray (java.lang.CharSequence)[1];

        $r66[0] = "";

        r68 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r66);

        goto label04;

     label03:
        $r13 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LABEL", 0);

        r68 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r13);

     label04:
        $r14 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BOTHDRESSING", 0);

        if $r14 == null goto label05;

        $z14 = 1;

        goto label06;

     label05:
        $z14 = 0;

     label06:
        if $z14 == 0 goto label07;

        $r69 = staticinvoke <net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDirectionBoth()>();

        goto label08;

     label07:
        $r69 = staticinvoke <net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDirectionNormal()>();

     label08:
        r70 = $r69;

        if z1 == 0 goto label09;

        $r65 = <net.sourceforge.plantuml.skin.ArrowBody: net.sourceforge.plantuml.skin.ArrowBody DOTTED>;

        r70 = virtualinvoke $r69.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withBody(net.sourceforge.plantuml.skin.ArrowBody)>($r65);

     label09:
        if z0 == 0 goto label10;

        $r64 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead ASYNC>;

        r70 = virtualinvoke r70.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withHead(net.sourceforge.plantuml.skin.ArrowHead)>($r64);

     label10:
        r16 = virtualinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: net.sourceforge.plantuml.sequencediagram.MessageExoType getMessageExoType(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        $r17 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: net.sourceforge.plantuml.skin.ArrowPart getArrowPart(java.lang.String,net.sourceforge.plantuml.sequencediagram.MessageExoType)>(r7, r16);

        r71 = virtualinvoke r70.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withPart(net.sourceforge.plantuml.skin.ArrowPart)>($r17);

        $r18 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r20 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_STYLE", 0);

        r72 = staticinvoke <net.sourceforge.plantuml.sequencediagram.command.CommandArrow: net.sourceforge.plantuml.skin.ArrowConfiguration applyStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String,net.sourceforge.plantuml.skin.ArrowConfiguration)>($r19, $r20, r71);

        r21 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ACTIVATION", 0);

        if r21 == null goto label11;

        $c2 = virtualinvoke r21.<java.lang.String: char charAt(int)>(0);

        if $c2 != 42 goto label11;

        $r62 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType CREATE>;

        virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.lang.String activate(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.LifeEventType,net.sourceforge.plantuml.ugraphic.color.HColor)>(r11, $r62, null);

     label11:
        $r73 = <net.sourceforge.plantuml.sequencediagram.MessageExoType: net.sourceforge.plantuml.sequencediagram.MessageExoType TO_RIGHT>;

        if r16 == $r73 goto label12;

        $r57 = <net.sourceforge.plantuml.sequencediagram.MessageExoType: net.sourceforge.plantuml.sequencediagram.MessageExoType TO_LEFT>;

        if r16 != $r57 goto label16;

     label12:
        $z3 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean containsSymbol(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>("ARROW_SUPPCIRCLE1", r1, "o");

        if $z3 == 0 goto label13;

        $r56 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        r72 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDecoration1(net.sourceforge.plantuml.skin.ArrowDecoration)>($r56);

     label13:
        $z4 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean containsSymbol(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>("ARROW_SUPPCIRCLE1", r1, "x");

        if $z4 == 0 goto label14;

        $r55 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead CROSSX>;

        r72 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withHead1(net.sourceforge.plantuml.skin.ArrowHead)>($r55);

     label14:
        $z5 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean containsSymbol(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>("ARROW_SUPPCIRCLE2", r1, "o");

        if $z5 == 0 goto label15;

        $r54 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        r72 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDecoration2(net.sourceforge.plantuml.skin.ArrowDecoration)>($r54);

     label15:
        $z6 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean containsSymbol(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>("ARROW_SUPPCIRCLE2", r1, "x");

        if $z6 == 0 goto label20;

        $r53 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead CROSSX>;

        r72 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withHead2(net.sourceforge.plantuml.skin.ArrowHead)>($r53);

        goto label20;

     label16:
        $z9 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean containsSymbol(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>("ARROW_SUPPCIRCLE2", r1, "o");

        if $z9 == 0 goto label17;

        $r61 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        r72 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDecoration1(net.sourceforge.plantuml.skin.ArrowDecoration)>($r61);

     label17:
        $z10 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean containsSymbol(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>("ARROW_SUPPCIRCLE2", r1, "x");

        if $z10 == 0 goto label18;

        $r60 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead CROSSX>;

        r72 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withHead1(net.sourceforge.plantuml.skin.ArrowHead)>($r60);

     label18:
        $z11 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean containsSymbol(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>("ARROW_SUPPCIRCLE1", r1, "o");

        if $z11 == 0 goto label19;

        $r59 = <net.sourceforge.plantuml.skin.ArrowDecoration: net.sourceforge.plantuml.skin.ArrowDecoration CIRCLE>;

        r72 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withDecoration2(net.sourceforge.plantuml.skin.ArrowDecoration)>($r59);

     label19:
        $z12 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean containsSymbol(java.lang.String,net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String)>("ARROW_SUPPCIRCLE1", r1, "x");

        if $z12 == 0 goto label20;

        $r58 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead CROSSX>;

        r72 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowConfiguration withHead2(net.sourceforge.plantuml.skin.ArrowHead)>($r58);

     label20:
        $r74 = new net.sourceforge.plantuml.sequencediagram.MessageExo;

        $r75 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r76 = interfaceinvoke $r75.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r77 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.lang.String getNextMessageNumber()>();

        $z15 = specialinvoke r15.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: boolean isShortArrow(net.sourceforge.plantuml.command.regex.RegexResult)>(r1);

        specialinvoke $r74.<net.sourceforge.plantuml.sequencediagram.MessageExo: void <init>(net.sourceforge.plantuml.style.StyleBuilder,net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.MessageExoType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.skin.ArrowConfiguration,java.lang.String,boolean)>($r76, r11, r16, r68, r72, $r77, $z15);

        $r78 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        if $r78 == null goto label21;

        $r48 = new net.sourceforge.plantuml.UrlBuilder;

        $r49 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r50 = interfaceinvoke $r49.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r51 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r48.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r50, $r51);

        $r52 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        r80 = virtualinvoke $r48.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>($r52);

        virtualinvoke $r74.<net.sourceforge.plantuml.sequencediagram.MessageExo: void setUrl(net.sourceforge.plantuml.Url)>(r80);

     label21:
        $r23 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("PARALLEL", 0);

        if $r23 == null goto label22;

        $z16 = 1;

        goto label23;

     label22:
        $z16 = 0;

     label23:
        if $z16 == 0 goto label24;

        virtualinvoke $r74.<net.sourceforge.plantuml.sequencediagram.MessageExo: void goParallel()>();

     label24:
        $r24 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ANCHOR", 1);

        virtualinvoke $r74.<net.sourceforge.plantuml.sequencediagram.MessageExo: void setAnchor(java.lang.String)>($r24);

        $r25 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("PART1ANCHOR", 1);

        virtualinvoke $r74.<net.sourceforge.plantuml.sequencediagram.MessageExo: void setPart1Anchor(java.lang.String)>($r25);

        $r26 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("PART2ANCHOR", 1);

        virtualinvoke $r74.<net.sourceforge.plantuml.sequencediagram.MessageExo: void setPart2Anchor(java.lang.String)>($r26);

        r81 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.lang.String addMessage(net.sourceforge.plantuml.sequencediagram.AbstractMessage)>($r74);

        if r81 == null goto label25;

        $r47 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>(r81);

        return $r47;

     label25:
        r27 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LIFECOLOR", 0);

        if r27 != null goto label26;

        $r82 = null;

        goto label27;

     label26:
        $r28 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r30 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r31 = interfaceinvoke $r30.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r82 = virtualinvoke $r29.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r31, r27);

     label27:
        r32 = $r82;

        if r21 == null goto label32;

        $c1 = virtualinvoke r21.<java.lang.String: char charAt(int)>(0);

        lookupswitch($c1)
        {
            case 33: goto label30;
            case 43: goto label28;
            case 45: goto label29;
            default: goto label31;
        };

     label28:
        $r43 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType ACTIVATE>;

        virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.lang.String activate(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.LifeEventType,net.sourceforge.plantuml.ugraphic.color.HColor)>(r11, $r43, $r82);

        goto label35;

     label29:
        $r41 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType DEACTIVATE>;

        virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.lang.String activate(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.LifeEventType,net.sourceforge.plantuml.ugraphic.color.HColor)>(r11, $r41, null);

        goto label35;

     label30:
        $r45 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType DESTROY>;

        virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.lang.String activate(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.LifeEventType,net.sourceforge.plantuml.ugraphic.color.HColor)>(r11, $r45, null);

        goto label35;

     label31:
        goto label35;

     label32:
        $z7 = virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: boolean isAutoactivate()>();

        if $z7 == 0 goto label35;

        $r33 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r34 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead NORMAL>;

        if $r33 == $r34 goto label33;

        $r39 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowHead getHead()>();

        $r40 = <net.sourceforge.plantuml.skin.ArrowHead: net.sourceforge.plantuml.skin.ArrowHead ASYNC>;

        if $r39 != $r40 goto label35;

     label33:
        $z8 = virtualinvoke r72.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isDotted()>();

        if $z8 == 0 goto label34;

        $r37 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType DEACTIVATE>;

        virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.lang.String activate(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.LifeEventType,net.sourceforge.plantuml.ugraphic.color.HColor)>(r11, $r37, null);

        goto label35;

     label34:
        $r35 = <net.sourceforge.plantuml.sequencediagram.LifeEventType: net.sourceforge.plantuml.sequencediagram.LifeEventType ACTIVATE>;

        virtualinvoke r8.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.lang.String activate(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.LifeEventType,net.sourceforge.plantuml.ugraphic.color.HColor)>(r11, $r35, r32);

     label35:
        $r83 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r83;
    }

    private net.sourceforge.plantuml.skin.ArrowPart getArrowPart(java.lang.String, net.sourceforge.plantuml.sequencediagram.MessageExoType)
    {
        java.lang.String r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.skin.ArrowPart $r1, $r3, $r4, $r5, $r6;
        net.sourceforge.plantuml.sequencediagram.MessageExoType r2;
        int $i0, $i1;
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny r7;

        r7 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.sequencediagram.MessageExoType;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("/");

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.MessageExoType: int getDirection()>();

        if $i1 != 1 goto label1;

        $r6 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart BOTTOM_PART>;

        return $r6;

     label1:
        $r5 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart TOP_PART>;

        return $r5;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("\\");

        if $z1 == 0 goto label4;

        $i0 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.MessageExoType: int getDirection()>();

        if $i0 != 1 goto label3;

        $r4 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart TOP_PART>;

        return $r4;

     label3:
        $r3 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart BOTTOM_PART>;

        return $r3;

     label4:
        $r1 = <net.sourceforge.plantuml.skin.ArrowPart: net.sourceforge.plantuml.skin.ArrowPart FULL>;

        return $r1;
    }

    abstract net.sourceforge.plantuml.sequencediagram.MessageExoType getMessageExoType(net.sourceforge.plantuml.command.regex.RegexResult);

    private boolean isShortArrow(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1;
        boolean $z0;
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny r2;

        r2 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_SUPPCIRCLE2", 0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("?");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private boolean containsSymbol(java.lang.String, net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, r3;
        boolean $z0;
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny r4;

        r4 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 := @parameter2: java.lang.String;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>(r1, 0);

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.sequencediagram.SequenceDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.sequencediagram.SequenceDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: java.lang.String ARROW_SUPPCIRCLE2> = "ARROW_SUPPCIRCLE2";

        <net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: java.lang.String ARROW_SUPPCIRCLE1> = "ARROW_SUPPCIRCLE1";

        return;
    }
}
