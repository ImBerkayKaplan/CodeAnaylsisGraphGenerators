public class net.sourceforge.plantuml.ugraphic.color.ColorMapperLightnessInverse extends net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper implements net.sourceforge.plantuml.ugraphic.color.ColorMapper
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.color.ColorMapperLightnessInverse r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.ColorMapperLightnessInverse;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.AbstractColorMapper: void <init>()>();

        return;
    }

    public java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.ugraphic.color.HColor r0, $r8;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r1;
        java.awt.Color $r2, $r3, $r6, $r9;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperLightnessInverse r4;
        net.sourceforge.plantuml.ugraphic.color.HColorMiddle $r5;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient $r7;
        java.lang.UnsupportedOperationException $r10;

        r4 := @this: net.sourceforge.plantuml.ugraphic.color.ColorMapperLightnessInverse;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof net.sourceforge.plantuml.ugraphic.color.HColorBackground;

        if $z0 == 0 goto label2;

        $r10 = new java.lang.UnsupportedOperationException;

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r10;

     label2:
        $z1 = r0 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z1 == 0 goto label3;

        $r7 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r0;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor1()>();

        $r9 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.color.ColorMapperLightnessInverse: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r8);

        return $r9;

     label3:
        $z2 = r0 instanceof net.sourceforge.plantuml.ugraphic.color.HColorMiddle;

        if $z2 == 0 goto label4;

        $r5 = (net.sourceforge.plantuml.ugraphic.color.HColorMiddle) r0;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColorMiddle: java.awt.Color getMappedColor(net.sourceforge.plantuml.ugraphic.color.ColorMapper)>(r4);

        return $r6;

     label4:
        $r1 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) r0;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: java.awt.Color getColor999()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: java.awt.Color getReversed(java.awt.Color)>($r2);

        return $r3;
    }
}
