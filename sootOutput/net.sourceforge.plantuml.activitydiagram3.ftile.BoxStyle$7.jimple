final enum class net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$7 extends net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle
{

    void <init>(java.lang.String, int, char, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$7 r0;
        java.lang.String r1;
        int i0;
        char c1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$7;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        d0 := @parameter3: double;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: void <init>(java.lang.String,int,char,double,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$1)>(r1, i0, c1, d0, null);

        return;
    }

    protected net.sourceforge.plantuml.ugraphic.Shadowable getShape(double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.UPath $r0;
        double[] $r2, $r4, $r6, $r11, $r13, $r15;
        double $d0, d1, $d2, $d3, d4, $d5, $d6, $d7, $d8, $d9, d10;
        net.sourceforge.plantuml.ugraphic.USegmentType $r8, $r9, $r10, $r17, $r18, $r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$7 r20;

        r20 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle$7;

        d4 := @parameter0: double;

        d1 := @parameter1: double;

        d10 := @parameter2: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $r2 = newarray (double)[2];

        $d0 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: double access$300()>();

        $r2[0] = $d0;

        $r2[1] = 0.0;

        $r4 = newarray (double)[2];

        $r4[0] = 0.0;

        $d2 = d1 / 2.0;

        $r4[1] = $d2;

        $r6 = newarray (double)[2];

        $d3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: double access$300()>();

        $r6[0] = $d3;

        $r6[1] = d1;

        $r8 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_MOVETO>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void add(double[],net.sourceforge.plantuml.ugraphic.USegmentType)>($r2, $r8);

        $r9 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_LINETO>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void add(double[],net.sourceforge.plantuml.ugraphic.USegmentType)>($r4, $r9);

        $r10 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_LINETO>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void add(double[],net.sourceforge.plantuml.ugraphic.USegmentType)>($r6, $r10);

        $r11 = newarray (double)[2];

        $d5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: double access$300()>();

        $d6 = d4 - $d5;

        $r11[0] = $d6;

        $r11[1] = 0.0;

        $r13 = newarray (double)[2];

        $r13[0] = d4;

        $d7 = d1 / 2.0;

        $r13[1] = $d7;

        $r15 = newarray (double)[2];

        $d8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle: double access$300()>();

        $d9 = d4 - $d8;

        $r15[0] = $d9;

        $r15[1] = d1;

        $r17 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_MOVETO>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void add(double[],net.sourceforge.plantuml.ugraphic.USegmentType)>($r11, $r17);

        $r18 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_LINETO>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void add(double[],net.sourceforge.plantuml.ugraphic.USegmentType)>($r13, $r18);

        $r19 = <net.sourceforge.plantuml.ugraphic.USegmentType: net.sourceforge.plantuml.ugraphic.USegmentType SEG_LINETO>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPath: void add(double[],net.sourceforge.plantuml.ugraphic.USegmentType)>($r15, $r19);

        return $r0;
    }
}
