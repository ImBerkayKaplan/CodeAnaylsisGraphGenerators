public class net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest extends net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate
{
    private final double margin;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1;
        double d0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d0 := @parameter1: double;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r1);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest: double margin> = d0;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3;
        double $d0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest: double margin>;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r3);

        return;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r2, r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileDecorate: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d0 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest: double margin>;

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry incLeft(double)>($d0);

        return r3;
    }

    public volatile net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileMargedWest: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r2;
    }
}
