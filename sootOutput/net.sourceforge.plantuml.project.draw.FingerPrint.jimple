public class net.sourceforge.plantuml.project.draw.FingerPrint extends java.lang.Object
{
    private final double x;
    private final double y;
    private final double width;
    private final double height;

    public void <init>(double, double, double, double)
    {
        net.sourceforge.plantuml.project.draw.FingerPrint r0;
        double d0, d1, d2, d3;

        r0 := @this: net.sourceforge.plantuml.project.draw.FingerPrint;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        d3 := @parameter3: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double x> = d0;

        r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double y> = d1;

        r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double width> = d2;

        r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double height> = d3;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        net.sourceforge.plantuml.project.draw.FingerPrint r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.lang.String $r11;

        r2 := @this: net.sourceforge.plantuml.project.draw.FingerPrint;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X=(");

        $d0 = r2.<net.sourceforge.plantuml.project.draw.FingerPrint: double x>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        $d2 = r2.<net.sourceforge.plantuml.project.draw.FingerPrint: double x>;

        $d1 = r2.<net.sourceforge.plantuml.project.draw.FingerPrint: double width>;

        $d3 = $d2 + $d1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") Y=(");

        $d4 = r2.<net.sourceforge.plantuml.project.draw.FingerPrint: double y>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ->");

        $d6 = r2.<net.sourceforge.plantuml.project.draw.FingerPrint: double y>;

        $d5 = r2.<net.sourceforge.plantuml.project.draw.FingerPrint: double height>;

        $d7 = $d6 + $d5;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d7);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public double overlap(net.sourceforge.plantuml.project.draw.FingerPrint)
    {
        net.sourceforge.plantuml.project.draw.FingerPrint r0, r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20;
        byte $b0, $b1, $b2, $b3;

        r0 := @this: net.sourceforge.plantuml.project.draw.FingerPrint;

        r1 := @parameter0: net.sourceforge.plantuml.project.draw.FingerPrint;

        $d3 = r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double x>;

        $d1 = r1.<net.sourceforge.plantuml.project.draw.FingerPrint: double x>;

        $d0 = r1.<net.sourceforge.plantuml.project.draw.FingerPrint: double width>;

        $d2 = $d1 + $d0;

        $b0 = $d3 cmpl $d2;

        if $b0 >= 0 goto label1;

        $d7 = r1.<net.sourceforge.plantuml.project.draw.FingerPrint: double x>;

        $d5 = r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double x>;

        $d4 = r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double width>;

        $d6 = $d5 + $d4;

        $b1 = $d7 cmpl $d6;

        if $b1 < 0 goto label2;

     label1:
        return 0.0;

     label2:
        $d11 = r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double y>;

        $d9 = r1.<net.sourceforge.plantuml.project.draw.FingerPrint: double y>;

        $d8 = r1.<net.sourceforge.plantuml.project.draw.FingerPrint: double height>;

        $d10 = $d9 + $d8;

        $b2 = $d11 cmpl $d10;

        if $b2 >= 0 goto label3;

        $d15 = r1.<net.sourceforge.plantuml.project.draw.FingerPrint: double y>;

        $d13 = r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double y>;

        $d12 = r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double height>;

        $d14 = $d13 + $d12;

        $b3 = $d15 cmpl $d14;

        if $b3 < 0 goto label4;

     label3:
        return 0.0;

     label4:
        $d17 = r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double y>;

        $d16 = r0.<net.sourceforge.plantuml.project.draw.FingerPrint: double height>;

        $d19 = $d17 + $d16;

        $d18 = r1.<net.sourceforge.plantuml.project.draw.FingerPrint: double y>;

        $d20 = $d19 - $d18;

        return $d20;
    }
}
