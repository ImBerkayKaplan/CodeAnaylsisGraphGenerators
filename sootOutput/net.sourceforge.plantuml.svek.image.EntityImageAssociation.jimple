public class net.sourceforge.plantuml.svek.image.EntityImageAssociation extends net.sourceforge.plantuml.svek.AbstractEntityImage
{
    private static final int SIZE;
    private final net.sourceforge.plantuml.style.SName sname;

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.svek.image.EntityImageAssociation r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.style.SName r3;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageAssociation;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter2: net.sourceforge.plantuml.style.SName;

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractEntityImage: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.style.SName sname> = r3;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.svek.image.EntityImageAssociation r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageAssociation;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(24.0, 24.0);

        return $r0;
    }

    private net.sourceforge.plantuml.style.Style getStyle()
    {
        net.sourceforge.plantuml.svek.image.EntityImageAssociation r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style $r4;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageAssociation;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        return $r4;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r4, $r5;
        net.sourceforge.plantuml.svek.image.EntityImageAssociation r3;
        net.sourceforge.plantuml.style.StyleSignature $r6;

        r3 := @this: net.sourceforge.plantuml.svek.image.EntityImageAssociation;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r4 = r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.style.SName sname>;

        $r0[2] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName diamond>;

        $r0[3] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r6;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        net.sourceforge.plantuml.ugraphic.UStroke $r2, r31;
        boolean $z0, $z1;
        net.sourceforge.plantuml.svek.image.EntityImageAssociation r3;
        net.sourceforge.plantuml.ISkinParam $r4, $r8, $r12, $r19, $r21, $r25, $r27;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r5, $r9, $r14;
        net.sourceforge.plantuml.ColorParam[] $r6, $r10;
        net.sourceforge.plantuml.ColorParam $r7, $r11;
        net.sourceforge.plantuml.cucadiagram.IEntity $r13;
        net.sourceforge.plantuml.ugraphic.UGraphic r15, $r34, $r36, $r37;
        net.sourceforge.plantuml.style.Style r16;
        net.sourceforge.plantuml.style.PName $r17, $r23, $r29;
        net.sourceforge.plantuml.style.Value $r18, $r24, $r30;
        net.sourceforge.plantuml.api.ThemeStyle $r20, $r26;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r22, $r28;
        double d0;
        net.sourceforge.plantuml.ugraphic.color.HColor r32, r33;
        net.sourceforge.plantuml.ugraphic.UBackground $r35;

        r3 := @this: net.sourceforge.plantuml.svek.image.EntityImageAssociation;

        r15 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 0.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(24.0, 12.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 24.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, 12.0);

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 0.0);

        d0 = 0.0;

        $r2 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        r31 = $r2;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        r16 = specialinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.style.Style getStyle()>();

        $r17 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r18 = virtualinvoke r16.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r17);

        $r19 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r20 = interfaceinvoke $r19.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r21 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r22 = interfaceinvoke $r21.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r32 = interfaceinvoke $r18.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r20, $r22);

        $r23 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r24 = virtualinvoke r16.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r23);

        $r25 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r26 = interfaceinvoke $r25.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r27 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r28 = interfaceinvoke $r27.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r33 = interfaceinvoke $r24.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r26, $r28);

        $r29 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r30 = virtualinvoke r16.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r29);

        d0 = interfaceinvoke $r30.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        r31 = virtualinvoke r16.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label2;

     label1:
        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r6 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r7 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam classBorder>;

        $r6[0] = $r7;

        r32 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r4, $r5, $r6);

        $r8 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.cucadiagram.Stereotype getStereo()>();

        $r10 = newarray (net.sourceforge.plantuml.ColorParam)[1];

        $r11 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam classBackground>;

        $r10[0] = $r11;

        r33 = staticinvoke <net.sourceforge.plantuml.SkinParamUtils: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ColorParam[])>($r8, $r9, $r10);

        $r12 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = virtualinvoke r3.<net.sourceforge.plantuml.svek.image.EntityImageAssociation: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $z1 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r14);

        if $z1 == 0 goto label2;

        d0 = 5.0;

     label2:
        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void setDeltaShadow(double)>(d0);

        $r34 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r32);

        $r35 = interfaceinvoke r33.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r36 = interfaceinvoke $r34.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r35);

        $r37 = interfaceinvoke $r36.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r31);

        interfaceinvoke $r37.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        return;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.svek.image.EntityImageAssociation r1;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageAssociation;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType DIAMOND>;

        return $r0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.svek.image.EntityImageAssociation: int SIZE> = 12;

        return;
    }
}
