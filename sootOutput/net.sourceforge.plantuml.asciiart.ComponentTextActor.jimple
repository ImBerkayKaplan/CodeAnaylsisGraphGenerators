public class net.sourceforge.plantuml.asciiart.ComponentTextActor extends net.sourceforge.plantuml.asciiart.AbstractComponentText
{
    private final net.sourceforge.plantuml.skin.ComponentType type;
    private final net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay;
    private final net.sourceforge.plantuml.FileFormat fileFormat;
    private final net.sourceforge.plantuml.asciiart.AsciiShape shape;
    static final boolean $assertionsDisabled;

    public void <init>(net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.FileFormat, net.sourceforge.plantuml.asciiart.AsciiShape)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextActor r0;
        net.sourceforge.plantuml.skin.ComponentType r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.FileFormat r3;
        net.sourceforge.plantuml.asciiart.AsciiShape r4;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextActor;

        r1 := @parameter0: net.sourceforge.plantuml.skin.ComponentType;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter2: net.sourceforge.plantuml.FileFormat;

        r4 := @parameter3: net.sourceforge.plantuml.asciiart.AsciiShape;

        specialinvoke r0.<net.sourceforge.plantuml.asciiart.AbstractComponentText: void <init>()>();

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.skin.ComponentType type> = r1;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay> = r2;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.FileFormat fileFormat> = r3;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.asciiart.AsciiShape shape> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area, net.sourceforge.plantuml.skin.Context2D)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r3;
        net.sourceforge.plantuml.asciiart.UmlCharArea r4;
        double $d0, $d1;
        int i0, i1, $i2, i3, $i4, $i5;
        net.sourceforge.plantuml.asciiart.ComponentTextActor r5;
        net.sourceforge.plantuml.skin.ComponentType $r6, $r7, $r8, $r9;
        boolean $z0;
        java.lang.AssertionError $r10;
        net.sourceforge.plantuml.FileFormat $r11, $r12, $r19, $r20;
        net.sourceforge.plantuml.cucadiagram.Display $r13, $r16, $r21, $r24;
        java.util.List $r14, $r17, $r22, $r25;
        net.sourceforge.plantuml.asciiart.AsciiShape $r15, $r18, $r23, $r26;
        net.sourceforge.plantuml.skin.Context2D r27;

        r5 := @this: net.sourceforge.plantuml.asciiart.ComponentTextActor;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r27 := @parameter2: net.sourceforge.plantuml.skin.Context2D;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r3 = (net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt) r2;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        i0 = (int) $d0;

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        i1 = (int) $d1;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void fillRect(char,int,int,int,int)>(32, 0, 0, i0, i1);

        $i2 = i0 / 2;

        i3 = $i2 - 1;

        $r7 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.skin.ComponentType type>;

        $r6 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_HEAD>;

        if $r7 != $r6 goto label2;

        $r20 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r19 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r20 != $r19 goto label1;

        $r24 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r25 = virtualinvoke $r24.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        $i5 = specialinvoke r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: int getHeight()>();

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRUnicode(java.util.Collection,int,int)>($r25, 1, $i5);

        $r26 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape STICKMAN_UNICODE>;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawShape(net.sourceforge.plantuml.asciiart.AsciiShape,int,int)>($r26, i3, 0);

        goto label5;

     label1:
        $r21 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        $i4 = specialinvoke r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: int getHeight()>();

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRSimple(java.util.Collection,int,int)>($r22, 1, $i4);

        $r23 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape STICKMAN>;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawShape(net.sourceforge.plantuml.asciiart.AsciiShape,int,int)>($r23, i3, 0);

        goto label5;

     label2:
        $r9 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.skin.ComponentType type>;

        $r8 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_TAIL>;

        if $r9 != $r8 goto label4;

        $r12 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r11 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r12 != $r11 goto label3;

        $r16 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRUnicode(java.util.Collection,int,int)>($r17, 1, 0);

        $r18 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape STICKMAN_UNICODE>;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawShape(net.sourceforge.plantuml.asciiart.AsciiShape,int,int)>($r18, i3, 1);

        goto label5;

     label3:
        $r13 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.cucadiagram.Display: java.util.List asList()>();

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringsLRSimple(java.util.Collection,int,int)>($r14, 1, 0);

        $r15 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape STICKMAN>;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawShape(net.sourceforge.plantuml.asciiart.AsciiShape,int,int)>($r15, i3, 1);

        goto label5;

     label4:
        $z0 = <net.sourceforge.plantuml.asciiart.ComponentTextActor: boolean $assertionsDisabled>;

        if $z0 != 0 goto label5;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label5:
        return;
    }

    private int getHeight()
    {
        net.sourceforge.plantuml.asciiart.ComponentTextActor r0;
        net.sourceforge.plantuml.FileFormat $r1, $r2;
        net.sourceforge.plantuml.asciiart.AsciiShape $r3, $r4;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextActor;

        $r2 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r1 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r2 != $r1 goto label1;

        $r4 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape STICKMAN_UNICODE>;

        $i1 = virtualinvoke $r4.<net.sourceforge.plantuml.asciiart.AsciiShape: int getHeight()>();

        return $i1;

     label1:
        $r3 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape STICKMAN>;

        $i0 = virtualinvoke $r3.<net.sourceforge.plantuml.asciiart.AsciiShape: int getHeight()>();

        return $i0;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextActor r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        int $i0, $i1, $i2;
        double $d0;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextActor;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $i0 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getHeight(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        $i1 = specialinvoke r0.<net.sourceforge.plantuml.asciiart.ComponentTextActor: int getHeight()>();

        $i2 = $i0 + $i1;

        $d0 = (double) $i2;

        return $d0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextActor r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;
        int $i0, $i1;
        double $d0;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextActor;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.asciiart.ComponentTextActor: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $i0 = staticinvoke <net.sourceforge.plantuml.StringUtils: int getWcWidth(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        $i1 = $i0 + 2;

        $d0 = (double) $i1;

        return $d0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/asciiart/ComponentTextActor;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.asciiart.ComponentTextActor: boolean $assertionsDisabled> = $z1;

        return;
    }
}
