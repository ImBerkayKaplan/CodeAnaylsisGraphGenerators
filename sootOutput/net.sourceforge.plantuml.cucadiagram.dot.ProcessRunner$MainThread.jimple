class net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread extends java.lang.Object implements net.sourceforge.plantuml.api.MyRunnable
{
    private final java.lang.String[] cmd;
    private final net.sourceforge.plantuml.security.SFile dir;
    private final java.io.OutputStream redirection;
    private final byte[] in;
    private volatile java.lang.Process process;
    private volatile net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream errorStream;
    private volatile net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream outStream;
    final net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0;

    public void <init>(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner, java.lang.String[], net.sourceforge.plantuml.security.SFile, java.io.OutputStream, byte[])
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread r0;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner r1;
        java.lang.String[] r2;
        net.sourceforge.plantuml.security.SFile r3;
        java.io.OutputStream r4;
        byte[] r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: net.sourceforge.plantuml.security.SFile;

        r4 := @parameter3: java.io.OutputStream;

        r5 := @parameter4: byte[];

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.String[] cmd> = r2;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.security.SFile dir> = r3;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.io.OutputStream redirection> = r4;

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: byte[] in> = r5;

        return;
    }

    public java.lang.String getOut()
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread r0;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream outStream>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.String getString()>();

        return $r2;
    }

    public java.lang.String getError()
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread r0;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream errorStream>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: java.lang.String getString()>();

        return $r2;
    }

    public void runJob() throws java.lang.InterruptedException
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread r0;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner $r1, $r4, $r6, $r9, $r14, $r17, $r20, $r22, $r27, $r31, $r33, $r36, $r41, $r44, $r47, $r49, $r54;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessState $r2, $r3, $r7, $r8, $r23, $r34, $r35, $r50;
        boolean $z0, $z1, $z2;
        java.util.concurrent.locks.Lock $r5, $r10, $r28, $r32, $r37, $r55;
        java.lang.Process $r11, $r12, $r13, $r16, $r19, $r38, $r39, $r40, $r43, $r46;
        java.io.InputStream $r15, $r21, $r42, $r48;
        java.io.OutputStream $r18, $r45;
        java.lang.Throwable $r25, $r29, $r52;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread;

     label01:
        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: void startThreads()>();

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$000(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState RUNNING()>();

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.dot.ProcessState: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label02;

        virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: int joinInternal()>();

     label02:
        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r5 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r4);

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label03:
        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$000(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r6);

        $r8 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState RUNNING()>();

        $z1 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.dot.ProcessState: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label04;

        $r22 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r23 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState TERMINATED_OK()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$002(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,net.sourceforge.plantuml.cucadiagram.dot.ProcessState)>($r22, $r23);

     label04:
        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r10 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r9);

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label06;

     label05:
        $r52 := @caughtexception;

        $r54 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r55 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r54);

        interfaceinvoke $r55.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r52;

     label06:
        $r11 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        if $r11 == null goto label14;

        $r12 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        virtualinvoke $r12.<java.lang.Process: void destroy()>();

        $r14 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r13 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r15 = virtualinvoke $r13.<java.lang.Process: java.io.InputStream getErrorStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$200(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.InputStream)>($r14, $r15);

        $r17 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r16 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r18 = virtualinvoke $r16.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$300(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.OutputStream)>($r17, $r18);

        $r20 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r19 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r21 = virtualinvoke $r19.<java.lang.Process: java.io.InputStream getInputStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$200(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.InputStream)>($r20, $r21);

        goto label14;

     label07:
        $r29 := @caughtexception;

        $r31 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r32 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r31);

        interfaceinvoke $r32.<java.util.concurrent.locks.Lock: void lock()>();

     label08:
        $r33 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r34 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$000(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r33);

        $r35 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState RUNNING()>();

        $z2 = virtualinvoke $r34.<net.sourceforge.plantuml.cucadiagram.dot.ProcessState: boolean equals(java.lang.Object)>($r35);

        if $z2 == 0 goto label09;

        $r49 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r50 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState TERMINATED_OK()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$002(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,net.sourceforge.plantuml.cucadiagram.dot.ProcessState)>($r49, $r50);

     label09:
        $r36 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r37 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r36);

        interfaceinvoke $r37.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label12;

     label10:
        $r25 := @caughtexception;

     label11:
        $r27 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r28 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r27);

        interfaceinvoke $r28.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r25;

     label12:
        $r38 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        if $r38 == null goto label13;

        $r39 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        virtualinvoke $r39.<java.lang.Process: void destroy()>();

        $r41 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r40 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r42 = virtualinvoke $r40.<java.lang.Process: java.io.InputStream getErrorStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$200(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.InputStream)>($r41, $r42);

        $r44 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r43 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r45 = virtualinvoke $r43.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$300(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.OutputStream)>($r44, $r45);

        $r47 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r46 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r48 = virtualinvoke $r46.<java.lang.Process: java.io.InputStream getInputStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$200(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.InputStream)>($r47, $r48);

     label13:
        throw $r29;

     label14:
        return;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void cancelJob()
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread r0;
        java.lang.Process $r1, $r4, $r5, $r8, $r11;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream $r2, $r3;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner $r6, $r9, $r12;
        java.io.InputStream $r7, $r13;
        java.io.OutputStream $r10;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        if $r1 == null goto label1;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream errorStream>;

        virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void cancel()>();

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream outStream>;

        virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void cancel()>();

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        virtualinvoke $r4.<java.lang.Process: void destroy()>();

        $r6 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r7 = virtualinvoke $r5.<java.lang.Process: java.io.InputStream getErrorStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$200(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.InputStream)>($r6, $r7);

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r10 = virtualinvoke $r8.<java.lang.Process: java.io.OutputStream getOutputStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$300(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.OutputStream)>($r9, $r10);

        $r12 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r11 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r13 = virtualinvoke $r11.<java.lang.Process: java.io.InputStream getInputStream()>();

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: void access$200(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.InputStream)>($r12, $r13);

     label1:
        return;
    }

    private void startThreads()
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread r0;
        java.lang.Runtime $r1;
        net.sourceforge.plantuml.security.SFile $r2, $r3;
        java.lang.String[] $r4;
        java.lang.Process $r5, $r7, $r11, $r18;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream $r6, $r10, $r15, $r16;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner $r8, $r12, $r23, $r26, $r28, $r30, $r35, $r38, $r40, $r42;
        java.io.InputStream $r9, $r13;
        java.io.OutputStream $r14, r47;
        byte[] $r17, $r19;
        java.lang.Throwable $r21, $r32, $r34;
        java.util.concurrent.locks.Lock $r24, $r27, $r31, $r36, $r39, $r43;
        java.io.IOException $r25, $r37;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessState $r29, $r41;
        java.io.File $r44;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread;

     label01:
        $r1 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.String[] cmd>;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.security.SFile dir>;

        if $r2 != null goto label02;

        $r44 = null;

        goto label03;

     label02:
        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.security.SFile dir>;

        $r44 = virtualinvoke $r3.<net.sourceforge.plantuml.security.SFile: java.io.File conv()>();

     label03:
        $r5 = virtualinvoke $r1.<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>($r4, null, $r44);

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process> = $r5;

     label04:
        goto label10;

     label05:
        $r37 := @caughtexception;

        virtualinvoke $r37.<java.io.IOException: void printStackTrace()>();

        $r38 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r39 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r38);

        interfaceinvoke $r39.<java.util.concurrent.locks.Lock: void lock()>();

     label06:
        $r40 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r41 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState IO_EXCEPTION1(java.io.IOException)>($r37);

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$002(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,net.sourceforge.plantuml.cucadiagram.dot.ProcessState)>($r40, $r41);

     label07:
        $r42 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r43 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r42);

        interfaceinvoke $r43.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label09;

     label08:
        $r34 := @caughtexception;

        $r35 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r36 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r35);

        interfaceinvoke $r36.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r34;

     label09:
        virtualinvoke $r37.<java.io.IOException: void printStackTrace()>();

        return;

     label10:
        $r6 = new net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream;

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r9 = virtualinvoke $r7.<java.lang.Process: java.io.InputStream getErrorStream()>();

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void <init>(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.InputStream,java.io.OutputStream)>($r8, $r9, null);

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream errorStream> = $r6;

        $r10 = new net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream;

        $r12 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r11 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        $r13 = virtualinvoke $r11.<java.lang.Process: java.io.InputStream getInputStream()>();

        $r14 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.io.OutputStream redirection>;

        specialinvoke $r10.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void <init>(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,java.io.InputStream,java.io.OutputStream)>($r12, $r13, $r14);

        r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream outStream> = $r10;

        $r15 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream errorStream>;

        virtualinvoke $r15.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void start()>();

        $r16 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream outStream>;

        virtualinvoke $r16.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void start()>();

        $r17 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: byte[] in>;

        if $r17 == null goto label21;

        $r18 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        r47 = virtualinvoke $r18.<java.lang.Process: java.io.OutputStream getOutputStream()>();

     label11:
        $r19 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: byte[] in>;

        virtualinvoke r47.<java.io.OutputStream: void write(byte[])>($r19);

     label12:
        virtualinvoke r47.<java.io.OutputStream: void close()>();

        goto label14;

     label13:
        $r32 := @caughtexception;

        virtualinvoke r47.<java.io.OutputStream: void close()>();

        throw $r32;

     label14:
        goto label21;

     label15:
        $r25 := @caughtexception;

        $r26 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r27 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r26);

        interfaceinvoke $r27.<java.util.concurrent.locks.Lock: void lock()>();

     label16:
        $r28 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessState: net.sourceforge.plantuml.cucadiagram.dot.ProcessState IO_EXCEPTION2(java.io.IOException)>($r25);

        staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: net.sourceforge.plantuml.cucadiagram.dot.ProcessState access$002(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner,net.sourceforge.plantuml.cucadiagram.dot.ProcessState)>($r28, $r29);

     label17:
        $r30 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r31 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r30);

        interfaceinvoke $r31.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label20;

     label18:
        $r21 := @caughtexception;

     label19:
        $r23 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner this$0>;

        $r24 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner: java.util.concurrent.locks.Lock access$100(net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner)>($r23);

        interfaceinvoke $r24.<java.util.concurrent.locks.Lock: void unlock()>();

        throw $r21;

     label20:
        virtualinvoke $r25.<java.io.IOException: void printStackTrace()>();

     label21:
        return;

        catch java.io.IOException from label01 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.io.IOException from label11 to label14 with label15;
        catch java.lang.Throwable from label16 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public int joinInternal() throws java.lang.InterruptedException
    {
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread r0;
        net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream $r1, $r2;
        java.lang.Process $r3;
        int i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream errorStream>;

        virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void join()>();

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream outStream>;

        virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$ThreadStream: void join()>();

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.dot.ProcessRunner$MainThread: java.lang.Process process>;

        i0 = virtualinvoke $r3.<java.lang.Process: int waitFor()>();

        return i0;
    }
}
