public class net.sourceforge.plantuml.ugraphic.color.HColorGradient extends net.sourceforge.plantuml.ugraphic.color.HColorAbstract implements net.sourceforge.plantuml.ugraphic.color.HColor
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor color1;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color2;
    private final char policy;

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, char)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0, $r5, $r6;
        boolean $z0, $z1;
        java.lang.Object $r1, $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r4, r7, r8;
        char c0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r8 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        c0 := @parameter2: char;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: void <init>()>();

        $z0 = r7 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z0 == 0 goto label1;

        $r6 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r7;

        r7 = $r6.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor color1>;

     label1:
        $z1 = r8 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z1 == 0 goto label2;

        $r5 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r8;

        r8 = $r5.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor color2>;

     label2:
        $r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        $r2 = (net.sourceforge.plantuml.ugraphic.color.HColor) $r1;

        r0.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor color1> = $r2;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r8);

        $r4 = (net.sourceforge.plantuml.ugraphic.color.HColor) $r3;

        r0.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor color2> = $r4;

        r0.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: char policy> = c0;

        return;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getColor1()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor color1>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ugraphic.color.HColor getColor2()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor color2>;

        return $r1;
    }

    public final java.awt.Color getColor(net.sourceforge.plantuml.ugraphic.color.ColorMapper, double)
    {
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        byte $b0, $b1;
        java.lang.IllegalArgumentException $r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r5;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r6;
        net.sourceforge.plantuml.ugraphic.color.HColor $r7, $r9;
        java.awt.Color r8, r10, $r11;
        int $i2, $i3, i4, $i5, $i6, i7, $i8, $i9, i10, $i11, $i12, i13, $i14, $i15, i16, $i17, $i18, i19;

        r6 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        d0 := @parameter1: double;

        $b0 = d0 cmpl 1.0;

        if $b0 > 0 goto label1;

        $b1 = d0 cmpg 0.0;

        if $b1 >= 0 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("c=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r0;

     label2:
        $r7 = r6.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor color1>;

        r8 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r7);

        $r9 = r6.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor color2>;

        r10 = interfaceinvoke r5.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.awt.Color toColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r9);

        $i2 = virtualinvoke r10.<java.awt.Color: int getRed()>();

        $i3 = virtualinvoke r8.<java.awt.Color: int getRed()>();

        i4 = $i2 - $i3;

        $i5 = virtualinvoke r10.<java.awt.Color: int getGreen()>();

        $i6 = virtualinvoke r8.<java.awt.Color: int getGreen()>();

        i7 = $i5 - $i6;

        $i8 = virtualinvoke r10.<java.awt.Color: int getBlue()>();

        $i9 = virtualinvoke r8.<java.awt.Color: int getBlue()>();

        i10 = $i8 - $i9;

        $i11 = virtualinvoke r8.<java.awt.Color: int getRed()>();

        $d1 = (double) i4;

        $d2 = d0 * $d1;

        $i12 = (int) $d2;

        i13 = $i11 + $i12;

        $i14 = virtualinvoke r8.<java.awt.Color: int getGreen()>();

        $d3 = (double) i7;

        $d4 = d0 * $d3;

        $i15 = (int) $d4;

        i16 = $i14 + $i15;

        $i17 = virtualinvoke r8.<java.awt.Color: int getBlue()>();

        $d5 = (double) i10;

        $d6 = d0 * $d5;

        $i18 = (int) $d6;

        i19 = $i17 + $i18;

        $r11 = new java.awt.Color;

        specialinvoke $r11.<java.awt.Color: void <init>(int,int,int)>(i13, i16, i19);

        return $r11;
    }

    public final char getPolicy()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        char $c0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $c0 = r0.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: char policy>;

        return $c0;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

        return $r1;
    }

    public volatile java.lang.String asString()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: java.lang.String asString()>();

        return $r1;
    }

    public volatile boolean isDark()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: boolean isDark()>();

        return $z0;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor reverse()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor reverse()>();

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor reverseHsluv()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor reverseHsluv()>();

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor darken(int)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor darken(int)>(i0);

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.color.HColor lighten(int)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        int i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.color.HColor lighten(int)>(i0);

        return $r1;
    }

    public volatile net.sourceforge.plantuml.ugraphic.UBackground bg()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r0;
        net.sourceforge.plantuml.ugraphic.UBackground $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.color.HColorAbstract: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        return $r1;
    }
}
