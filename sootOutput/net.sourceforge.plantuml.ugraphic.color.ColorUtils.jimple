public class net.sourceforge.plantuml.ugraphic.color.ColorUtils extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.ugraphic.color.ColorUtils r0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.ColorUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getGrayScale(java.awt.Color)
    {
        java.awt.Color r0;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: java.awt.Color;

        $i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        $i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $i3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int getGrayScale(int,int,int)>($i0, $i1, $i2);

        return $i3;
    }

    public static int getGrayScale(int, int, int)
    {
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, i8;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $i3 = i0 * 299;

        $i2 = i1 * 587;

        $i6 = $i3 + $i2;

        $i5 = i4 * 114;

        $i7 = $i6 + $i5;

        i8 = $i7 / 1000;

        return i8;
    }

    public static int getGrayScale(int)
    {
        int i0, $i1, i2, $i3, i4, i5, $i6;

        i0 := @parameter0: int;

        $i1 = i0 & 16711680;

        i2 = $i1 >> 16;

        $i3 = i0 & 65280;

        i4 = $i3 >> 8;

        i5 = i0 & 255;

        $i6 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int getGrayScale(int,int,int)>(i2, i4, i5);

        return $i6;
    }

    public static java.awt.Color getGrayScaleColor(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        int i0;

        r0 := @parameter0: java.awt.Color;

        i0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int getGrayScale(java.awt.Color)>(r0);

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i0, i0, i0);

        return $r1;
    }

    public static java.awt.Color getGrayScaleColorReverse(java.awt.Color)
    {
        java.awt.Color r0, $r1;
        int $i0, i1;

        r0 := @parameter0: java.awt.Color;

        $i0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int getGrayScale(java.awt.Color)>(r0);

        i1 = 255 - $i0;

        $r1 = new java.awt.Color;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>(i1, i1, i1);

        return $r1;
    }

    public static java.awt.Color reverseHsluv(java.awt.Color)
    {
        java.awt.Color r0, $r5;
        int i0, i1, i2, i3, i4, i5;
        double[] $r1, r2, $r3, r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, d15, d16;

        r0 := @parameter0: java.awt.Color;

        i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $r1 = newarray (double)[3];

        $d0 = (double) i0;

        $d1 = $d0 / 256.0;

        $r1[0] = $d1;

        $d2 = (double) i1;

        $d3 = $d2 / 256.0;

        $r1[1] = $d3;

        $d4 = (double) i2;

        $d5 = $d4 / 256.0;

        $r1[2] = $d5;

        r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HUSLColorConverter: double[] rgbToHsluv(double[])>($r1);

        d6 = r2[0];

        d7 = r2[1];

        $d8 = r2[2];

        $d9 = $d8 + 50.0;

        d15 = $d9 % 100.0;

        $d10 = 50.0 - d15;

        $d11 = 0.25 * $d10;

        d16 = d15 + $d11;

        $r3 = newarray (double)[3];

        $r3[0] = d6;

        $r3[1] = d7;

        $r3[2] = d16;

        r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HUSLColorConverter: double[] hsluvToRgb(double[])>($r3);

        $d12 = r4[0];

        i3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d12);

        $d13 = r4[1];

        i4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d13);

        $d14 = r4[2];

        i5 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d14);

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(i3, i4, i5);

        return $r5;
    }

    public static java.awt.Color grayToColor(double, java.awt.Color)
    {
        java.awt.Color r0, $r5;
        int i0, i1, i2, i3, i4, i5;
        double[] $r1, r2, $r3, r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8, $d9, $d10, $d11, $d12, $d13, d14, d15;

        d8 := @parameter0: double;

        r0 := @parameter1: java.awt.Color;

        i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $r1 = newarray (double)[3];

        $d0 = (double) i0;

        $d1 = $d0 / 256.0;

        $r1[0] = $d1;

        $d2 = (double) i1;

        $d3 = $d2 / 256.0;

        $r1[1] = $d3;

        $d4 = (double) i2;

        $d5 = $d4 / 256.0;

        $r1[2] = $d5;

        r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HUSLColorConverter: double[] rgbToHsluv(double[])>($r1);

        d6 = r2[0];

        d7 = r2[1];

        d14 = r2[2];

        $d9 = 100.0 - d14;

        $d10 = $d9 * d8;

        d15 = d14 + $d10;

        $r3 = newarray (double)[3];

        $r3[0] = d6;

        $r3[1] = d7;

        $r3[2] = d15;

        r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HUSLColorConverter: double[] hsluvToRgb(double[])>($r3);

        $d11 = r4[0];

        i3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d11);

        $d12 = r4[1];

        i4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d12);

        $d13 = r4[2];

        i5 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d13);

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(i3, i4, i5);

        return $r5;
    }

    public static java.awt.Color getReversed(java.awt.Color)
    {
        java.awt.Color r0, $r5;
        int i0, i1, i2, i4, i5, i6;
        double[] $r1, r2, r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, d6, d7, d8, $d9, $d10, $d11;
        byte $b3, $b7, $b8, $b9;

        r0 := @parameter0: java.awt.Color;

        i0 = virtualinvoke r0.<java.awt.Color: int getRed()>();

        i1 = virtualinvoke r0.<java.awt.Color: int getGreen()>();

        i2 = virtualinvoke r0.<java.awt.Color: int getBlue()>();

        $r1 = newarray (double)[3];

        $d0 = (double) i0;

        $d1 = $d0 / 256.0;

        $r1[0] = $d1;

        $d2 = (double) i1;

        $d3 = $d2 / 256.0;

        $r1[1] = $d3;

        $d4 = (double) i2;

        $d5 = $d4 / 256.0;

        $r1[2] = $d5;

        r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HUSLColorConverter: double[] rgbToHsluv(double[])>($r1);

        d6 = r2[0];

        d7 = r2[1];

        d8 = r2[2];

        $b3 = d7 cmpl 40.0;

        if $b3 <= 0 goto label2;

        $b7 = d7 cmpg 60.0;

        if $b7 >= 0 goto label2;

        $b8 = d8 cmpl 50.0;

        if $b8 <= 0 goto label1;

        d8 = d8 - 50.0;

        goto label3;

     label1:
        $b9 = d8 cmpg 50.0;

        if $b9 >= 0 goto label3;

        d8 = d8 + 50.0;

        goto label3;

     label2:
        d8 = 100.0 - d8;

     label3:
        $r4 = newarray (double)[3];

        $r4[0] = d6;

        $r4[1] = d7;

        $r4[2] = d8;

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HUSLColorConverter: double[] hsluvToRgb(double[])>($r4);

        $d9 = r3[0];

        i4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d9);

        $d10 = r3[1];

        i5 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d10);

        $d11 = r3[2];

        i6 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorUtils: int to255(double)>($d11);

        $r5 = new java.awt.Color;

        specialinvoke $r5.<java.awt.Color: void <init>(int,int,int)>(i4, i5, i6);

        return $r5;
    }

    private static int to255(double)
    {
        double d0, $d1;
        int i0;

        d0 := @parameter0: double;

        $d1 = 255.0 * d0;

        i0 = (int) $d1;

        if i0 >= 0 goto label1;

        return 0;

     label1:
        if i0 <= 255 goto label2;

        return 255;

     label2:
        return i0;
    }
}
