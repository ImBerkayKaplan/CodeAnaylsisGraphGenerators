final class net.sourceforge.plantuml.brotli.Huffman extends java.lang.Object
{
    private static final int MAX_LENGTH;

    void <init>()
    {
        net.sourceforge.plantuml.brotli.Huffman r0;

        r0 := @this: net.sourceforge.plantuml.brotli.Huffman;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static int getNextKey(int, int)
    {
        int i0, $i1, i2, $i3, $i4, $i5, $i6, i7;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = i0 - 1;

        i7 = 1 << $i1;

     label1:
        $i3 = i2 & i7;

        if $i3 == 0 goto label2;

        i7 = i7 >> 1;

        goto label1;

     label2:
        $i4 = i7 - 1;

        $i5 = i2 & $i4;

        $i6 = $i5 + i7;

        return $i6;
    }

    private static void replicateValue(int[], int, int, int, int)
    {
        int i0, i1, i2, $i3, i4;
        int[] r0;

        r0 := @parameter0: int[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        i4 := @parameter3: int;

        i2 := @parameter4: int;

     label1:
        i4 = i4 - i0;

        $i3 = i1 + i4;

        r0[$i3] = i2;

        if i4 > 0 goto label1;

        return;
    }

    private static int nextTableBitSize(int[], int, int)
    {
        int i0, $i1, $i2, $i3, i4, i5, i6;
        int[] r0;

        r0 := @parameter0: int[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = i4 - i0;

        i5 = 1 << $i1;

     label1:
        if i4 >= 15 goto label3;

        $i3 = r0[i4];

        i6 = i5 - $i3;

        if i6 > 0 goto label2;

        goto label3;

     label2:
        i4 = i4 + 1;

        i5 = i6 << 1;

        goto label1;

     label3:
        $i2 = i4 - i0;

        return $i2;
    }

    static void buildHuffmanTable(int[], int, int, int[], int)
    {
        int i0, i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, i43, i44, i45, i47, i48, i49, i50, i51, i52, i53, i54, i55, i56, i57, i58, i59;
        int[] r0, r1, r2, r3, r5;

        r3 := @parameter0: int[];

        i3 := @parameter1: int;

        i1 := @parameter2: int;

        r5 := @parameter3: int[];

        i0 := @parameter4: int;

        r0 = newarray (int)[i0];

        r1 = newarray (int)[16];

        r2 = newarray (int)[16];

        i43 = 0;

     label01:
        if i43 >= i0 goto label02;

        $i40 = r5[i43];

        $i41 = r1[$i40];

        $i42 = $i41 + 1;

        r1[$i40] = $i42;

        i43 = i43 + 1;

        goto label01;

     label02:
        r2[1] = 0;

        i44 = 1;

     label03:
        if i44 >= 15 goto label04;

        $i39 = i44 + 1;

        $i37 = r2[i44];

        $i36 = r1[i44];

        $i38 = $i37 + $i36;

        r2[$i39] = $i38;

        i44 = i44 + 1;

        goto label03;

     label04:
        i45 = 0;

     label05:
        if i45 >= i0 goto label07;

        $i32 = r5[i45];

        if $i32 == 0 goto label06;

        $i33 = r5[i45];

        $i34 = r2[$i33];

        $i35 = $i34 + 1;

        r2[$i33] = $i35;

        r0[$i34] = i45;

     label06:
        i45 = i45 + 1;

        goto label05;

     label07:
        i47 = 1 << i1;

        i48 = i47;

        $i2 = r2[15];

        if $i2 != 1 goto label10;

        i49 = 0;

     label08:
        if i49 >= i48 goto label09;

        $i31 = i3 + i49;

        $i30 = r0[0];

        r3[$i31] = $i30;

        i49 = i49 + 1;

        goto label08;

     label09:
        return;

     label10:
        i50 = 0;

        i51 = 0;

        i52 = 1;

        i53 = 2;

     label11:
        if i52 > i1 goto label14;

     label12:
        $i22 = r1[i52];

        if $i22 <= 0 goto label13;

        $i27 = i3 + i50;

        $i25 = i52 << 16;

        $i23 = i51;

        i51 = i51 + 1;

        $i24 = r0[$i23];

        $i26 = $i25 | $i24;

        staticinvoke <net.sourceforge.plantuml.brotli.Huffman: void replicateValue(int[],int,int,int,int)>(r3, $i27, i53, i47, $i26);

        i50 = staticinvoke <net.sourceforge.plantuml.brotli.Huffman: int getNextKey(int,int)>(i50, i52);

        $i28 = r1[i52];

        $i29 = $i28 - 1;

        r1[i52] = $i29;

        goto label12;

     label13:
        i52 = i52 + 1;

        i53 = i53 << 1;

        goto label11;

     label14:
        i54 = i48 - 1;

        i55 = -1;

        i56 = i3;

        i57 = i1 + 1;

        i58 = 2;

     label15:
        if i57 > 15 goto label19;

     label16:
        $i4 = r1[i57];

        if $i4 <= 0 goto label18;

        $i5 = i50 & i54;

        if $i5 == i55 goto label17;

        i56 = i56 + i47;

        i59 = staticinvoke <net.sourceforge.plantuml.brotli.Huffman: int nextTableBitSize(int[],int,int)>(r1, i57, i1);

        i47 = 1 << i59;

        i55 = i50 & i54;

        $i20 = i3 + i55;

        $i15 = i59 + i1;

        $i18 = $i15 << 16;

        $i16 = i56 - i3;

        $i17 = $i16 - i55;

        $i19 = $i18 | $i17;

        r3[$i20] = $i19;

     label17:
        $i6 = i50 >> i1;

        $i12 = i56 + $i6;

        $i7 = i57 - i1;

        $i10 = $i7 << 16;

        $i8 = i51;

        i51 = i51 + 1;

        $i9 = r0[$i8];

        $i11 = $i10 | $i9;

        staticinvoke <net.sourceforge.plantuml.brotli.Huffman: void replicateValue(int[],int,int,int,int)>(r3, $i12, i58, i47, $i11);

        i50 = staticinvoke <net.sourceforge.plantuml.brotli.Huffman: int getNextKey(int,int)>(i50, i57);

        $i13 = r1[i57];

        $i14 = $i13 - 1;

        r1[i57] = $i14;

        goto label16;

     label18:
        i57 = i57 + 1;

        i58 = i58 << 1;

        goto label15;

     label19:
        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.brotli.Huffman: int MAX_LENGTH> = 15;

        return;
    }
}
