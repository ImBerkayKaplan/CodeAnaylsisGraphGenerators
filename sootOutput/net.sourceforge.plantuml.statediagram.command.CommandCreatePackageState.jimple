public class net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState;

        $r1 = staticinvoke <net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r31, $r34;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r7, $r9, $r16, $r19;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r10, $r11, $r12, $r13, $r14, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r35, $r37, $r38, $r40, $r41, $r42;
        net.sourceforge.plantuml.command.regex.RegexOr $r6;
        net.sourceforge.plantuml.command.regex.RegexConcat $r8, $r15, $r18, $r43;
        net.sourceforge.plantuml.command.regex.RegexOptional $r17, $r39;
        java.lang.StringBuilder $r29, $r30, $r32, $r33;
        net.sourceforge.plantuml.graphic.color.ColorParser $r36;

        $r0 = class "Lnet/sourceforge/plantuml/statediagram/command/CommandCreatePackageState;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[14];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("state");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r7 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r8 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r9 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE1", "([%pLN_.]+)");

        $r9[0] = $r10;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[1] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("as");

        $r9[2] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[3] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("DISPLAY1", "[%g]([^%g]+)[%g]");

        $r9[4] = $r14;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r9);

        $r7[0] = $r8;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r16 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r17 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r18 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r19 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("DISPLAY2", "[%g]([^%g]+)[%g]");

        $r19[0] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r19[1] = $r21;

        $r22 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r22.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("as");

        $r19[2] = $r22;

        $r23 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r19[3] = $r23;

        specialinvoke $r18.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r19);

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r18);

        $r16[0] = $r17;

        $r24 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r24.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE2", "([%pLN_.]+)");

        $r16[1] = $r24;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r16);

        $r7[1] = $r15;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r7);

        $r2[3] = $r6;

        $r25 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r25;

        $r26 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r26.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREOTYPE", "(\\<\\<.*\\>\\>)?");

        $r2[5] = $r26;

        $r27 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r27;

        $r28 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r31 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r34);

        $r2[7] = $r28;

        $r35 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r35;

        $r36 = staticinvoke <net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r37 = virtualinvoke $r36.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r2[9] = $r37;

        $r38 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[10] = $r38;

        $r39 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r40 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r40.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LINECOLOR", "##(?:\\[(dotted|dashed|bold)\\])?(\\w+)?");

        specialinvoke $r39.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r40);

        $r2[11] = $r39;

        $r41 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r41.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("(?:[%s]*\\{|[%s]+begin)");

        $r2[12] = $r41;

        $r42 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[13] = $r42;

        $r43 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r43;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorParser color()
    {
        net.sourceforge.plantuml.graphic.color.ColorType $r0;
        net.sourceforge.plantuml.graphic.color.ColorParser $r1;

        $r0 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.ColorParser simpleColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r0);

        return $r1;
    }

    private java.lang.String getNotNull(net.sourceforge.plantuml.command.regex.RegexResult, java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, $r2, $r3, r4, $r5;
        net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState r6;

        r6 := @this: net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>(r1, 0);

        if $r2 != null goto label1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>(r4, 0);

        return $r5;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>(r1, 0);

        return $r3;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.statediagram.StateDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.statediagram.StateDiagram r0;
        net.sourceforge.plantuml.cucadiagram.IGroup r1, r10;
        net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        java.lang.String r4, r11, r12, $r23, $r25, $r29, r34, r38;
        net.sourceforge.plantuml.cucadiagram.Ident r5;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Code r6, $r33;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r8;
        net.sourceforge.plantuml.cucadiagram.GroupType $r9;
        net.sourceforge.plantuml.graphic.color.ColorParser $r13;
        net.sourceforge.plantuml.ISkinParam $r14, $r16, $r18, $r20, $r28;
        net.sourceforge.plantuml.api.ThemeStyle $r15, $r21;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r17, $r19;
        net.sourceforge.plantuml.command.CommandExecutionResult $r24;
        net.sourceforge.plantuml.graphic.color.ColorType $r26;
        net.sourceforge.plantuml.UrlBuilder $r27;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r30;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r31;
        net.sourceforge.plantuml.LineLocation r32;
        net.sourceforge.plantuml.Url r36;
        net.sourceforge.plantuml.graphic.color.Colors r37;
        net.sourceforge.plantuml.ugraphic.color.HColor $r39;

        r2 := @this: net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState;

        r0 := @parameter0: net.sourceforge.plantuml.statediagram.StateDiagram;

        r32 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        r4 = specialinvoke r2.<net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState: java.lang.String getNotNull(net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String,java.lang.String)>(r3, "CODE1", "CODE2");

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdentSpecial(java.lang.String)>(r4);

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r33 = r5;

        goto label2;

     label1:
        $r33 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r4);

     label2:
        r6 = $r33;

        r34 = specialinvoke r2.<net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState: java.lang.String getNotNull(net.sourceforge.plantuml.command.regex.RegexResult,java.lang.String,java.lang.String)>(r3, "DISPLAY1", "DISPLAY2");

        if r34 != null goto label3;

        r34 = interfaceinvoke $r33.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

     label3:
        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r34);

        $r9 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType STATE>;

        $r8 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r5, r6, $r7, $r9, r1, $r8);

        r10 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getCurrentGroup()>();

        r11 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE", 0);

        if r11 == null goto label4;

        $r31 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>(r11);

        interfaceinvoke r10.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r31);

     label4:
        r12 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        if r12 == null goto label5;

        $r27 = new net.sourceforge.plantuml.UrlBuilder;

        $r28 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r29 = interfaceinvoke $r28.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r30 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r27.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r29, $r30);

        r36 = virtualinvoke $r27.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>(r12);

        interfaceinvoke r10.<net.sourceforge.plantuml.cucadiagram.IEntity: void addUrl(net.sourceforge.plantuml.Url)>(r36);

     label5:
        $r13 = staticinvoke <net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r14 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r37 = virtualinvoke $r13.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r15, r3, $r17);

        r38 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LINECOLOR", 1);

        if r38 != null goto label6;

        $r39 = null;

        goto label7;

     label6:
        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.StateDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r21 = interfaceinvoke $r20.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r39 = virtualinvoke $r19.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r21, r38);

     label7:
        if $r39 == null goto label8;

        $r26 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType LINE>;

        r37 = virtualinvoke r37.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors add(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r26, $r39);

     label8:
        $r23 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LINECOLOR", 0);

        if $r23 == null goto label9;

        $r25 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("LINECOLOR", 0);

        r37 = virtualinvoke r37.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors addLegacyStroke(java.lang.String)>($r25);

     label9:
        interfaceinvoke r10.<net.sourceforge.plantuml.cucadiagram.IEntity: void setColors(net.sourceforge.plantuml.graphic.color.Colors)>(r37);

        $r24 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r24;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.statediagram.StateDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.statediagram.StateDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.statediagram.command.CommandCreatePackageState: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.statediagram.StateDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
