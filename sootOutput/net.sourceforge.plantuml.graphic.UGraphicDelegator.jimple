public abstract class net.sourceforge.plantuml.graphic.UGraphicDelegator extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UGraphic
{
    private final net.sourceforge.plantuml.ugraphic.UGraphic ug;

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r7;
        net.sourceforge.plantuml.graphic.UGraphicDelegator r1;
        java.lang.String $r2, $r6, $r8;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5;

        r1 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public final boolean matchesProperty(java.lang.String)
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        java.lang.String r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        $z0 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: boolean matchesProperty(java.lang.String)>(r1);

        return $z0;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug> = r1;

        return;
    }

    public net.sourceforge.plantuml.graphic.StringBounder getStringBounder()
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r1 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        return $r2;
    }

    public net.sourceforge.plantuml.ugraphic.UParam getParam()
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;
        net.sourceforge.plantuml.ugraphic.UParam $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r1 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UParam getParam()>();

        return $r2;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $r2 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r1);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.color.ColorMapper getColorMapper()
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r1 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.color.ColorMapper getColorMapper()>();

        return $r2;
    }

    public void startUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.Url r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        r1 := @parameter0: net.sourceforge.plantuml.Url;

        $r2 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void startUrl(net.sourceforge.plantuml.Url)>(r1);

        return;
    }

    public void closeUrl()
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r1 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeUrl()>();

        return;
    }

    public void startGroup(java.util.Map)
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        java.util.Map r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.UGraphic: void startGroup(java.util.Map)>(r1);

        return;
    }

    public void closeGroup()
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r1 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeGroup()>();

        return;
    }

    protected net.sourceforge.plantuml.ugraphic.UGraphic getUg()
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r1 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        return $r1;
    }

    public void flushUg()
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r1 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: void flushUg()>();

        return;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getDefaultBackground()
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        $r1 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.color.HColor getDefaultBackground()>();

        return $r2;
    }

    public void writeToStream(java.io.OutputStream, java.lang.String, int) throws java.io.IOException
    {
        net.sourceforge.plantuml.graphic.UGraphicDelegator r0;
        java.io.OutputStream r1;
        java.lang.String r2;
        int i0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.UGraphicDelegator;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: net.sourceforge.plantuml.ugraphic.UGraphic ug>;

        interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void writeToStream(java.io.OutputStream,java.lang.String,int)>(r1, r2, i0);

        return;
    }
}
