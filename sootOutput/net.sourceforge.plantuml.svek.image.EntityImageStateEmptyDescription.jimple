public class net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription extends net.sourceforge.plantuml.svek.image.EntityImageStateCommon
{
    private static final int MIN_WIDTH;
    private static final int MIN_HEIGHT;

    public void <init>(net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription r0;
        net.sourceforge.plantuml.cucadiagram.IEntity r1;
        net.sourceforge.plantuml.ISkinParam r2;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateCommon: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, r2);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r4, $r5;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.graphic.TextBlock desc>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D delta(net.sourceforge.plantuml.awt.geom.Dimension2D,double)>(r3, 10.0);

        $r5 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D atLeast(net.sourceforge.plantuml.awt.geom.Dimension2D,double,double)>(r4, 50.0, 40.0);

        return $r5;
    }

    public final void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription r0;
        net.sourceforge.plantuml.Url $r1, $r11, $r13;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r5;
        net.sourceforge.plantuml.graphic.TextBlock $r4, $r9;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UStroke $r6, r15;
        net.sourceforge.plantuml.ugraphic.URectangle $r7;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, d7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        net.sourceforge.plantuml.ugraphic.UGraphic $r10, r14, r16, r17;
        net.sourceforge.plantuml.style.Style $r12;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.Url url>;

        if $r1 == null goto label1;

        $r13 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.Url url>;

        interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void startUrl(net.sourceforge.plantuml.Url)>($r13);

     label1:
        r2 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r4 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.graphic.TextBlock desc>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label2;

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.style.Style getStyleState()>();

        r15 = virtualinvoke $r12.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label3;

     label2:
        $r6 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r15 = $r6;

     label3:
        r16 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.ugraphic.UGraphic applyColorAndStroke(net.sourceforge.plantuml.ugraphic.UGraphic)>(r14);

        r17 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r15);

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.ugraphic.URectangle getShape(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r3);

        interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 - $d1;

        d3 = $d2 / 2.0;

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d6 = $d4 - $d5;

        d7 = $d6 / 2.0;

        $r9 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.graphic.TextBlock desc>;

        $r8 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d3, d7);

        $r10 = interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r10);

        $r11 = r0.<net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: net.sourceforge.plantuml.Url url>;

        if $r11 == null goto label4;

        interfaceinvoke r17.<net.sourceforge.plantuml.ugraphic.UGraphic: void closeUrl()>();

     label4:
        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: int MIN_HEIGHT> = 40;

        <net.sourceforge.plantuml.svek.image.EntityImageStateEmptyDescription: int MIN_WIDTH> = 50;

        return;
    }
}
