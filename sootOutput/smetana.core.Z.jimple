public class smetana.core.Z extends java.lang.Object
{
    private static final java.lang.ThreadLocal instances2;
    public final java.util.Map all;
    public final h.ST_dtmethod_s _Dttree;
    public final h.ST_dtmethod_s Dttree;
    public final h.ST_dtmethod_s _Dtobag;
    public final h.ST_dtmethod_s Dtobag;
    public final h.ST_dtdisc_s AgDataDictDisc;
    public final h.ST_Agdesc_s ProtoDesc;
    public h.ST_Agraph_s ProtoGraph;
    public final h.ST_Agtag_s Tag;
    public final h.ST_dtdisc_s Ag_mainedge_seq_disc;
    public final h.ST_dtdisc_s Ag_subedge_seq_disc;
    public final h.ST_dtdisc_s Ag_subedge_id_disc;
    public final h.ST_dtdisc_s Ag_subgraph_id_disc;
    public final h.ST_Agiddisc_s AgIdDisc;
    public final h.ST_Agmemdisc_s AgMemDisc;
    public final h.ST_dtdisc_s Ag_subnode_id_disc;
    public final h.ST_dtdisc_s Ag_subnode_seq_disc;
    public int HTML_BIT;
    public int CNT_BITS;
    public final h.ST_dtdisc_s Refstrdisc;
    public final h.ST_dtdisc_s Hdisc;
    public h.ST_dt_s Refdict_default;
    public h.ST_Agraph_s Ag_dictop_G;
    public final h.ST_arrowname_t[] Arrowsynonyms;
    public final h.ST_arrowname_t[] Arrownames;
    public final h.ST_arrowname_t[] Arrowmods;
    public final h.ST_arrowtype_t[] Arrowtypes;
    public smetana.core.__ptr__ Show_boxes;
    public int CL_type;
    public boolean Concentrate;
    public int MaxIter;
    public int State;
    public int EdgeLabelsDone;
    public double Initial_dist;
    public h.ST_Agsym_s G_activepencolor;
    public h.ST_Agsym_s G_activefillcolor;
    public h.ST_Agsym_s G_selectedpencolor;
    public h.ST_Agsym_s G_selectedfillcolor;
    public h.ST_Agsym_s G_visitedpencolor;
    public h.ST_Agsym_s G_visitedfillcolor;
    public h.ST_Agsym_s G_deletedpencolor;
    public h.ST_Agsym_s G_deletedfillcolor;
    public h.ST_Agsym_s G_ordering;
    public h.ST_Agsym_s G_peripheries;
    public h.ST_Agsym_s G_penwidth;
    public h.ST_Agsym_s G_gradientangle;
    public h.ST_Agsym_s G_margin;
    public h.ST_Agsym_s N_height;
    public h.ST_Agsym_s N_width;
    public h.ST_Agsym_s N_shape;
    public h.ST_Agsym_s N_color;
    public h.ST_Agsym_s N_fillcolor;
    public h.ST_Agsym_s N_activepencolor;
    public h.ST_Agsym_s N_activefillcolor;
    public h.ST_Agsym_s N_selectedpencolor;
    public h.ST_Agsym_s N_selectedfillcolor;
    public h.ST_Agsym_s N_visitedpencolor;
    public h.ST_Agsym_s N_visitedfillcolor;
    public h.ST_Agsym_s N_deletedpencolor;
    public h.ST_Agsym_s N_deletedfillcolor;
    public h.ST_Agsym_s N_fontsize;
    public h.ST_Agsym_s N_fontname;
    public h.ST_Agsym_s N_fontcolor;
    public h.ST_Agsym_s N_margin;
    public h.ST_Agsym_s N_label;
    public h.ST_Agsym_s N_xlabel;
    public h.ST_Agsym_s N_nojustify;
    public h.ST_Agsym_s N_style;
    public h.ST_Agsym_s N_showboxes;
    public h.ST_Agsym_s N_sides;
    public h.ST_Agsym_s N_peripheries;
    public h.ST_Agsym_s N_ordering;
    public h.ST_Agsym_s N_orientation;
    public h.ST_Agsym_s N_skew;
    public h.ST_Agsym_s N_distortion;
    public h.ST_Agsym_s N_fixed;
    public h.ST_Agsym_s N_imagescale;
    public h.ST_Agsym_s N_layer;
    public h.ST_Agsym_s N_group;
    public h.ST_Agsym_s N_comment;
    public h.ST_Agsym_s N_vertices;
    public h.ST_Agsym_s N_z;
    public h.ST_Agsym_s N_penwidth;
    public h.ST_Agsym_s N_gradientangle;
    public h.ST_Agsym_s E_weight;
    public h.ST_Agsym_s E_minlen;
    public h.ST_Agsym_s E_color;
    public h.ST_Agsym_s E_fillcolor;
    public h.ST_Agsym_s E_activepencolor;
    public h.ST_Agsym_s E_activefillcolor;
    public h.ST_Agsym_s E_selectedpencolor;
    public h.ST_Agsym_s E_selectedfillcolor;
    public h.ST_Agsym_s E_visitedpencolor;
    public h.ST_Agsym_s E_visitedfillcolor;
    public h.ST_Agsym_s E_deletedpencolor;
    public h.ST_Agsym_s E_deletedfillcolor;
    public h.ST_Agsym_s E_fontsize;
    public h.ST_Agsym_s E_fontname;
    public h.ST_Agsym_s E_fontcolor;
    public h.ST_Agsym_s E_label;
    public h.ST_Agsym_s E_xlabel;
    public h.ST_Agsym_s E_dir;
    public h.ST_Agsym_s E_style;
    public h.ST_Agsym_s E_decorate;
    public h.ST_Agsym_s E_showboxes;
    public h.ST_Agsym_s E_arrowsz;
    public h.ST_Agsym_s E_constr;
    public h.ST_Agsym_s E_layer;
    public h.ST_Agsym_s E_comment;
    public h.ST_Agsym_s E_label_float;
    public h.ST_Agsym_s E_samehead;
    public h.ST_Agsym_s E_sametail;
    public h.ST_Agsym_s E_arrowhead;
    public h.ST_Agsym_s E_arrowtail;
    public h.ST_Agsym_s E_headlabel;
    public h.ST_Agsym_s E_taillabel;
    public h.ST_Agsym_s E_labelfontsize;
    public h.ST_Agsym_s E_labelfontname;
    public h.ST_Agsym_s E_labelfontcolor;
    public h.ST_Agsym_s E_labeldistance;
    public h.ST_Agsym_s E_labelangle;
    public h.ST_Agsym_s E_tailclip;
    public h.ST_Agsym_s E_headclip;
    public h.ST_Agsym_s E_penwidth;
    public int N_nodes;
    public int N_edges;
    public int Minrank;
    public int Maxrank;
    public int S_i;
    public int Search_size;
    public final h.ST_nlist_t Tree_node;
    public final h.ST_elist Tree_edge;
    public h.ST_Agedge_s Enter;
    public int Low;
    public int Lim;
    public int Slack;
    public int Rankdir;
    public boolean Flip;
    public final h.ST_pointf Offset;
    public int nedges;
    public int nboxes;
    public int routeinit;
    public smetana.core.CArray ps;
    public int maxpn;
    public smetana.core.CArray polypoints;
    public int polypointn;
    public smetana.core.CArray edges;
    public int edgen;
    public final h.ST_boxf[] boxes;
    public int MinQuit;
    public double Convergence;
    public h.ST_Agraph_s Root;
    public int GlobalMinRank;
    public int GlobalMaxRank;
    public boolean ReMincross;
    public smetana.core.CArrayOfStar TE_list;
    public int[] TI_list;
    public h.ST_Agnode_s Last_node_decomp;
    public h.ST_Agnode_s Last_node_rank;
    public char Cmark;
    public int trin;
    public int tril;
    public smetana.core.CArray tris;
    public int pnln;
    public int pnll;
    public h.ST_pointnlink_t[] pnls;
    public h.ST_pointnlink_t[] pnlps;
    public final h.ST_port Center;
    public final h.ST_polygon_t p_ellipse;
    public final h.ST_polygon_t p_box;
    public final h.ST_shape_functions poly_fns;
    public final h.ST_shape_functions record_fns;
    public smetana.core.CArray tnas;
    public int tnan;
    public final h.ST_shape_desc[] Shapes;
    public final h.ST_dtdisc_s Ag_mainedge_id_disc;
    public final h.ST_deque_t dq;
    public final h.ST_Agdesc_s Agdirected;
    public final h.ST_splineInfo sinfo;
    public h.ST_Agnode_s lastn;
    public h.ST_polygon_t poly;
    public int last;
    public int outp;
    public int sides;
    public final h.ST_pointf O;
    public smetana.core.CArray vertex;
    public double xsize;
    public double ysize;
    public double scalex;
    public double scaley;
    public double box_URx;
    public double box_URy;
    public final h.ST_textfont_t tf;
    public smetana.core.CArray pointfs;
    public smetana.core.CArray pointfs2;
    public int numpts;
    public int numpts2;
    public int[] Count;
    public int C;
    public int ctr;
    public final h.ST_Agsubnode_s template;
    public final h.ST_Agnode_s dummy;
    public h.ST_Agraph_s G_ns;
    public h.ST_Agraph_s G_decomp;
    public int opl;
    public int opn_route;
    public int opn_shortest;
    public smetana.core.CArray ops_route;
    public smetana.core.CArray ops_shortest;
    public smetana.core.CString reclblp;
    public int isz;
    public smetana.core.CArray ispline;

    public static smetana.core.Z z()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1, $r3;
        java.util.LinkedList $r2;
        smetana.core.Z $r4;

        $r0 = <smetana.core.Z: java.lang.ThreadLocal instances2>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.util.LinkedList) $r1;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object peekFirst()>();

        $r4 = (smetana.core.Z) $r3;

        return $r4;
    }

    public static void open()
    {
        java.lang.ThreadLocal $r0, $r4;
        java.lang.Object $r1;
        smetana.core.Z $r2;
        java.util.LinkedList $r3, r5;

        $r0 = <smetana.core.Z: java.lang.ThreadLocal instances2>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r5 = (java.util.LinkedList) $r1;

        if r5 != null goto label1;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r5 = $r3;

        $r4 = <smetana.core.Z: java.lang.ThreadLocal instances2>;

        virtualinvoke $r4.<java.lang.ThreadLocal: void set(java.lang.Object)>($r3);

     label1:
        $r2 = new smetana.core.Z;

        specialinvoke $r2.<smetana.core.Z: void <init>()>();

        virtualinvoke r5.<java.util.LinkedList: void addFirst(java.lang.Object)>($r2);

        return;
    }

    public static void close()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        java.util.LinkedList $r2;

        $r0 = <smetana.core.Z: java.lang.ThreadLocal instances2>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        $r2 = (java.util.LinkedList) $r1;

        virtualinvoke $r2.<java.util.LinkedList: java.lang.Object removeFirst()>();

        return;
    }

    private h.ST_shape_desc __Shapes__(java.lang.String, h.ST_shape_functions, h.ST_polygon_t)
    {
        h.ST_shape_desc $r0;
        java.lang.String r2;
        h.ST_shape_functions r3;
        h.ST_polygon_t r4;
        smetana.core.Z r6;
        smetana.core.CString $r7;

        r6 := @this: smetana.core.Z;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: h.ST_shape_functions;

        r4 := @parameter2: h.ST_polygon_t;

        $r0 = new h.ST_shape_desc;

        specialinvoke $r0.<h.ST_shape_desc: void <init>()>();

        if r2 != null goto label1;

        $r7 = null;

        goto label2;

     label1:
        $r7 = new smetana.core.CString;

        specialinvoke $r7.<smetana.core.CString: void <init>(java.lang.String)>(r2);

     label2:
        $r0.<h.ST_shape_desc: smetana.core.CString name> = $r7;

        $r0.<h.ST_shape_desc: h.ST_shape_functions fns> = r3;

        $r0.<h.ST_shape_desc: h.ST_polygon_t polygon> = r4;

        return $r0;
    }

    private static final h.ST_arrowtype_t createArrowtypes(int, double, smetana.core.CFunction)
    {
        h.ST_arrowtype_t $r0;
        int i0;
        double d0;
        smetana.core.CFunction r2;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        r2 := @parameter2: smetana.core.CFunction;

        $r0 = new h.ST_arrowtype_t;

        specialinvoke $r0.<h.ST_arrowtype_t: void <init>()>();

        $r0.<h.ST_arrowtype_t: int type> = i0;

        $r0.<h.ST_arrowtype_t: double lenfact> = d0;

        $r0.<h.ST_arrowtype_t: smetana.core.CFunction gen> = r2;

        return $r0;
    }

    private static final h.ST_arrowname_t create_arrowname_t(java.lang.String, int)
    {
        h.ST_arrowname_t $r0;
        java.lang.String r2;
        int i0;
        smetana.core.CString $r4;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r0 = new h.ST_arrowname_t;

        specialinvoke $r0.<h.ST_arrowname_t: void <init>()>();

        if r2 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = new smetana.core.CString;

        specialinvoke $r4.<smetana.core.CString: void <init>(java.lang.String)>(r2);

     label2:
        $r0.<h.ST_arrowname_t: smetana.core.CString name> = $r4;

        $r0.<h.ST_arrowname_t: int type> = i0;

        return $r0;
    }

    private void <init>()
    {
        smetana.core.Z r0;
        java.util.HashMap $r1;
        h.ST_dtmethod_s $r2, $r3, $r4, $r5, $r73, $r74, $r76, $r77;
        h.ST_dtdisc_s $r6, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r64, $r78, $r80, $r81, $r83, $r85, $r86, $r87, $r94, $r96, $r98, $r99, $r100, $r102, $r103, $r105, $r106, $r107, $r109, $r110, $r112, $r113, $r115, $r116, $r118, $r119, $r120, $r122, $r123, $r125, $r126, $r128, $r129, $r131, $r132, $r133, $r135, $r137, $r138, $r139, $r141, $r142, $r144, $r145, $r169, $r171, $r173, $r174, $r175, $r177, $r178, $r180, $r181, $r182, $r184, $r186, $r187, $r189, $r191, $r192, $r194, $r195, $r197, $r198, $r199, $r201, $r203, $r204, $r205, $r207, $r208, $r210, $r211, $r212, $r214, $r215, $r217, $r218, $r219, $r220, $r269, $r271, $r273, $r274, $r275, $r277, $r278, $r280, $r281;
        h.ST_Agdesc_s $r7, $r66, $r88, $r89, $r90, $r91, $r92, $r93, $r282, $r283, $r284, $r285;
        h.ST_Agtag_s $r8;
        h.ST_Agiddisc_s $r13, $r147, $r149, $r151, $r153, $r155, $r157, $r159;
        h.ST_Agmemdisc_s $r14, $r161, $r163, $r165, $r167, $r168;
        h.ST_arrowname_t[] $r19, $r21, $r25;
        h.ST_arrowname_t $r20, $r22, $r23, $r24, $r26;
        h.ST_arrowtype_t[] $r27;
        smetana.core.CFunction $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r72, $r75, $r84, $r101, $r104, $r114, $r117, $r127, $r130, $r140, $r143, $r146, $r148, $r150, $r152, $r154, $r156, $r158, $r160, $r162, $r164, $r166, $r176, $r179, $r188, $r190, $r193, $r202, $r206, $r216, $r245, $r247, $r249, $r251, $r253, $r255, $r257, $r259, $r261, $r263, $r265, $r267, $r276, $r279, $r286, $r288;
        h.ST_arrowtype_t $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r44;
        h.ST_nlist_t $r45;
        h.ST_elist $r46;
        h.ST_pointf $r47, $r68, $r222, $r224;
        h.ST_boxf[] $r48;
        h.ST_port $r49, $r221, $r223, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232;
        h.ST_polygon_t $r50, $r51, $r55, $r58, $r233, $r234, $r235, $r236, $r237, $r238, $r239, $r240, $r241, $r242, $r243, $r244;
        h.ST_shape_functions $r52, $r53, $r56, $r59, $r61, $r246, $r248, $r250, $r252, $r254, $r256, $r258, $r260, $r262, $r264, $r266, $r268;
        h.ST_shape_desc[] $r54;
        h.ST_shape_desc $r57, $r60, $r62, $r63;
        h.ST_deque_t $r65;
        h.ST_splineInfo $r67, $r287, $r289;
        h.ST_textfont_t $r69;
        h.ST_Agsubnode_s $r70;
        h.ST_Agnode_s $r71;
        smetana.core.OFFSET $r79, $r82, $r95, $r97, $r108, $r111, $r121, $r124, $r134, $r136, $r170, $r172, $r183, $r185, $r196, $r200, $r209, $r213, $r270, $r272;

        r0 := @this: smetana.core.Z;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<smetana.core.Z: java.util.Map all> = $r1;

        $r2 = new h.ST_dtmethod_s;

        specialinvoke $r2.<h.ST_dtmethod_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtmethod_s _Dttree> = $r2;

        $r3 = r0.<smetana.core.Z: h.ST_dtmethod_s _Dttree>;

        r0.<smetana.core.Z: h.ST_dtmethod_s Dttree> = $r3;

        $r4 = new h.ST_dtmethod_s;

        specialinvoke $r4.<h.ST_dtmethod_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtmethod_s _Dtobag> = $r4;

        $r5 = r0.<smetana.core.Z: h.ST_dtmethod_s _Dtobag>;

        r0.<smetana.core.Z: h.ST_dtmethod_s Dtobag> = $r5;

        $r6 = new h.ST_dtdisc_s;

        specialinvoke $r6.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s AgDataDictDisc> = $r6;

        $r7 = new h.ST_Agdesc_s;

        specialinvoke $r7.<h.ST_Agdesc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_Agdesc_s ProtoDesc> = $r7;

        $r8 = new h.ST_Agtag_s;

        specialinvoke $r8.<h.ST_Agtag_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_Agtag_s Tag> = $r8;

        $r9 = new h.ST_dtdisc_s;

        specialinvoke $r9.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc> = $r9;

        $r10 = new h.ST_dtdisc_s;

        specialinvoke $r10.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc> = $r10;

        $r11 = new h.ST_dtdisc_s;

        specialinvoke $r11.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc> = $r11;

        $r12 = new h.ST_dtdisc_s;

        specialinvoke $r12.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc> = $r12;

        $r13 = new h.ST_Agiddisc_s;

        specialinvoke $r13.<h.ST_Agiddisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc> = $r13;

        $r14 = new h.ST_Agmemdisc_s;

        specialinvoke $r14.<h.ST_Agmemdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_Agmemdisc_s AgMemDisc> = $r14;

        $r15 = new h.ST_dtdisc_s;

        specialinvoke $r15.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc> = $r15;

        $r16 = new h.ST_dtdisc_s;

        specialinvoke $r16.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc> = $r16;

        $r17 = new h.ST_dtdisc_s;

        specialinvoke $r17.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc> = $r17;

        $r18 = new h.ST_dtdisc_s;

        specialinvoke $r18.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc> = $r18;

        $r19 = newarray (h.ST_arrowname_t)[1];

        $r20 = staticinvoke <smetana.core.Z: h.ST_arrowname_t create_arrowname_t(java.lang.String,int)>(null, 0);

        $r19[0] = $r20;

        r0.<smetana.core.Z: h.ST_arrowname_t[] Arrowsynonyms> = $r19;

        $r21 = newarray (h.ST_arrowname_t)[3];

        $r22 = staticinvoke <smetana.core.Z: h.ST_arrowname_t create_arrowname_t(java.lang.String,int)>("normal", 1);

        $r21[0] = $r22;

        $r23 = staticinvoke <smetana.core.Z: h.ST_arrowname_t create_arrowname_t(java.lang.String,int)>("none", 8);

        $r21[1] = $r23;

        $r24 = staticinvoke <smetana.core.Z: h.ST_arrowname_t create_arrowname_t(java.lang.String,int)>(null, 0);

        $r21[2] = $r24;

        r0.<smetana.core.Z: h.ST_arrowname_t[] Arrownames> = $r21;

        $r25 = newarray (h.ST_arrowname_t)[1];

        $r26 = staticinvoke <smetana.core.Z: h.ST_arrowname_t create_arrowname_t(java.lang.String,int)>(null, 0);

        $r25[0] = $r26;

        r0.<smetana.core.Z: h.ST_arrowname_t[] Arrowmods> = $r25;

        $r27 = newarray (h.ST_arrowtype_t)[9];

        $r28 = <gen.lib.common.arrows__c: smetana.core.CFunction arrow_type_normal>;

        $r29 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(1, 1.0, $r28);

        $r27[0] = $r29;

        $r30 = <gen.lib.common.arrows__c: smetana.core.CFunction arrow_type_crow>;

        $r31 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(2, 1.0, $r30);

        $r27[1] = $r31;

        $r32 = <gen.lib.common.arrows__c: smetana.core.CFunction arrow_type_tee>;

        $r33 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(3, 0.5, $r32);

        $r27[2] = $r33;

        $r34 = <gen.lib.common.arrows__c: smetana.core.CFunction arrow_type_box>;

        $r35 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(4, 1.0, $r34);

        $r27[3] = $r35;

        $r36 = <gen.lib.common.arrows__c: smetana.core.CFunction arrow_type_diamond>;

        $r37 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(5, 1.2, $r36);

        $r27[4] = $r37;

        $r38 = <gen.lib.common.arrows__c: smetana.core.CFunction arrow_type_dot>;

        $r39 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(6, 0.8, $r38);

        $r27[5] = $r39;

        $r40 = <gen.lib.common.arrows__c: smetana.core.CFunction arrow_type_curve>;

        $r41 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(7, 1.0, $r40);

        $r27[6] = $r41;

        $r42 = <gen.lib.common.arrows__c: smetana.core.CFunction arrow_type_gap>;

        $r43 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(8, 0.5, $r42);

        $r27[7] = $r43;

        $r44 = staticinvoke <smetana.core.Z: h.ST_arrowtype_t createArrowtypes(int,double,smetana.core.CFunction)>(0, 0.0, null);

        $r27[8] = $r44;

        r0.<smetana.core.Z: h.ST_arrowtype_t[] Arrowtypes> = $r27;

        $r45 = new h.ST_nlist_t;

        specialinvoke $r45.<h.ST_nlist_t: void <init>()>();

        r0.<smetana.core.Z: h.ST_nlist_t Tree_node> = $r45;

        $r46 = new h.ST_elist;

        specialinvoke $r46.<h.ST_elist: void <init>()>();

        r0.<smetana.core.Z: h.ST_elist Tree_edge> = $r46;

        $r47 = new h.ST_pointf;

        specialinvoke $r47.<h.ST_pointf: void <init>()>();

        r0.<smetana.core.Z: h.ST_pointf Offset> = $r47;

        $r48 = staticinvoke <h.ST_boxf: h.ST_boxf[] malloc(int)>(1000);

        r0.<smetana.core.Z: h.ST_boxf[] boxes> = $r48;

        $r49 = new h.ST_port;

        specialinvoke $r49.<h.ST_port: void <init>()>();

        r0.<smetana.core.Z: h.ST_port Center> = $r49;

        $r50 = new h.ST_polygon_t;

        specialinvoke $r50.<h.ST_polygon_t: void <init>()>();

        r0.<smetana.core.Z: h.ST_polygon_t p_ellipse> = $r50;

        $r51 = new h.ST_polygon_t;

        specialinvoke $r51.<h.ST_polygon_t: void <init>()>();

        r0.<smetana.core.Z: h.ST_polygon_t p_box> = $r51;

        $r52 = new h.ST_shape_functions;

        specialinvoke $r52.<h.ST_shape_functions: void <init>()>();

        r0.<smetana.core.Z: h.ST_shape_functions poly_fns> = $r52;

        $r53 = new h.ST_shape_functions;

        specialinvoke $r53.<h.ST_shape_functions: void <init>()>();

        r0.<smetana.core.Z: h.ST_shape_functions record_fns> = $r53;

        $r54 = newarray (h.ST_shape_desc)[4];

        $r56 = r0.<smetana.core.Z: h.ST_shape_functions poly_fns>;

        $r55 = r0.<smetana.core.Z: h.ST_polygon_t p_box>;

        $r57 = specialinvoke r0.<smetana.core.Z: h.ST_shape_desc __Shapes__(java.lang.String,h.ST_shape_functions,h.ST_polygon_t)>("box", $r56, $r55);

        $r54[0] = $r57;

        $r59 = r0.<smetana.core.Z: h.ST_shape_functions poly_fns>;

        $r58 = r0.<smetana.core.Z: h.ST_polygon_t p_ellipse>;

        $r60 = specialinvoke r0.<smetana.core.Z: h.ST_shape_desc __Shapes__(java.lang.String,h.ST_shape_functions,h.ST_polygon_t)>("ellipse", $r59, $r58);

        $r54[1] = $r60;

        $r61 = r0.<smetana.core.Z: h.ST_shape_functions record_fns>;

        $r62 = specialinvoke r0.<smetana.core.Z: h.ST_shape_desc __Shapes__(java.lang.String,h.ST_shape_functions,h.ST_polygon_t)>("record", $r61, null);

        $r54[2] = $r62;

        $r63 = specialinvoke r0.<smetana.core.Z: h.ST_shape_desc __Shapes__(java.lang.String,h.ST_shape_functions,h.ST_polygon_t)>(null, null, null);

        $r54[3] = $r63;

        r0.<smetana.core.Z: h.ST_shape_desc[] Shapes> = $r54;

        $r64 = new h.ST_dtdisc_s;

        specialinvoke $r64.<h.ST_dtdisc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc> = $r64;

        $r65 = new h.ST_deque_t;

        specialinvoke $r65.<h.ST_deque_t: void <init>()>();

        r0.<smetana.core.Z: h.ST_deque_t dq> = $r65;

        $r66 = new h.ST_Agdesc_s;

        specialinvoke $r66.<h.ST_Agdesc_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_Agdesc_s Agdirected> = $r66;

        $r67 = new h.ST_splineInfo;

        specialinvoke $r67.<h.ST_splineInfo: void <init>()>();

        r0.<smetana.core.Z: h.ST_splineInfo sinfo> = $r67;

        $r68 = new h.ST_pointf;

        specialinvoke $r68.<h.ST_pointf: void <init>()>();

        r0.<smetana.core.Z: h.ST_pointf O> = $r68;

        $r69 = new h.ST_textfont_t;

        specialinvoke $r69.<h.ST_textfont_t: void <init>()>();

        r0.<smetana.core.Z: h.ST_textfont_t tf> = $r69;

        r0.<smetana.core.Z: int ctr> = 1;

        $r70 = new h.ST_Agsubnode_s;

        specialinvoke $r70.<h.ST_Agsubnode_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_Agsubnode_s template> = $r70;

        $r71 = new h.ST_Agnode_s;

        specialinvoke $r71.<h.ST_Agnode_s: void <init>()>();

        r0.<smetana.core.Z: h.ST_Agnode_s dummy> = $r71;

        $r73 = r0.<smetana.core.Z: h.ST_dtmethod_s _Dttree>;

        $r72 = <gen.lib.cdt.dttree__c: smetana.core.CFunction dttree>;

        $r73.<h.ST_dtmethod_s: smetana.core.CFunction searchf> = $r72;

        $r74 = r0.<smetana.core.Z: h.ST_dtmethod_s _Dttree>;

        $r74.<h.ST_dtmethod_s: int type> = 4;

        $r76 = r0.<smetana.core.Z: h.ST_dtmethod_s _Dtobag>;

        $r75 = <gen.lib.cdt.dttree__c: smetana.core.CFunction dttree>;

        $r76.<h.ST_dtmethod_s: smetana.core.CFunction searchf> = $r75;

        $r77 = r0.<smetana.core.Z: h.ST_dtmethod_s _Dtobag>;

        $r77.<h.ST_dtmethod_s: int type> = 8;

        $r78 = r0.<smetana.core.Z: h.ST_dtdisc_s AgDataDictDisc>;

        $r79 = staticinvoke <h.ST_Agsym_s: smetana.core.OFFSET createOFFSET(java.lang.String)>("name");

        $r78.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r79;

        $r80 = r0.<smetana.core.Z: h.ST_dtdisc_s AgDataDictDisc>;

        $r80.<h.ST_dtdisc_s: int size> = -1;

        $r81 = r0.<smetana.core.Z: h.ST_dtdisc_s AgDataDictDisc>;

        $r82 = staticinvoke <h.ST_Agsym_s: smetana.core.OFFSET createOFFSET(java.lang.String)>("link");

        $r81.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r82;

        $r83 = r0.<smetana.core.Z: h.ST_dtdisc_s AgDataDictDisc>;

        $r83.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r85 = r0.<smetana.core.Z: h.ST_dtdisc_s AgDataDictDisc>;

        $r84 = <gen.lib.cgraph.attr__c: smetana.core.CFunction freesym>;

        $r85.<h.ST_dtdisc_s: smetana.core.CFunction freef> = $r84;

        $r86 = r0.<smetana.core.Z: h.ST_dtdisc_s AgDataDictDisc>;

        $r86.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = null;

        $r87 = r0.<smetana.core.Z: h.ST_dtdisc_s AgDataDictDisc>;

        $r87.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r88 = r0.<smetana.core.Z: h.ST_Agdesc_s ProtoDesc>;

        $r88.<h.ST_Agdesc_s: int directed> = 1;

        $r89 = r0.<smetana.core.Z: h.ST_Agdesc_s ProtoDesc>;

        $r89.<h.ST_Agdesc_s: int strict> = 0;

        $r90 = r0.<smetana.core.Z: h.ST_Agdesc_s ProtoDesc>;

        $r90.<h.ST_Agdesc_s: int no_loop> = 1;

        $r91 = r0.<smetana.core.Z: h.ST_Agdesc_s ProtoDesc>;

        $r91.<h.ST_Agdesc_s: int maingraph> = 0;

        $r92 = r0.<smetana.core.Z: h.ST_Agdesc_s ProtoDesc>;

        $r92.<h.ST_Agdesc_s: int flatlock> = 1;

        $r93 = r0.<smetana.core.Z: h.ST_Agdesc_s ProtoDesc>;

        $r93.<h.ST_Agdesc_s: int no_write> = 1;

        $r94 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r95 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET zero()>();

        $r94.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r95;

        $r96 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r96.<h.ST_dtdisc_s: int size> = 0;

        $r98 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r97 = new smetana.core.OFFSET;

        specialinvoke $r97.<smetana.core.OFFSET: void <init>(java.lang.String)>("seq_link");

        $r98.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r97;

        $r99 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r99.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r100 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r100.<h.ST_dtdisc_s: smetana.core.CFunction freef> = null;

        $r102 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r101 = <gen.lib.cgraph.edge__c: smetana.core.CFunction agedgeseqcmpf>;

        $r102.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = $r101;

        $r103 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r103.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r105 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r104 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjmem>;

        $r105.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = $r104;

        $r106 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        $r106.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r107 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r108 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET zero()>();

        $r107.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r108;

        $r109 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r109.<h.ST_dtdisc_s: int size> = 0;

        $r110 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r111 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET externalHolder()>();

        $r110.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r111;

        $r112 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r112.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r113 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r113.<h.ST_dtdisc_s: smetana.core.CFunction freef> = null;

        $r115 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r114 = <gen.lib.cgraph.edge__c: smetana.core.CFunction agedgeseqcmpf>;

        $r115.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = $r114;

        $r116 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r116.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r118 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r117 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjmem>;

        $r118.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = $r117;

        $r119 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

        $r119.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r120 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r121 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET zero()>();

        $r120.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r121;

        $r122 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r122.<h.ST_dtdisc_s: int size> = 0;

        $r123 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r124 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET externalHolder()>();

        $r123.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r124;

        $r125 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r125.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r126 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r126.<h.ST_dtdisc_s: smetana.core.CFunction freef> = null;

        $r128 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r127 = <gen.lib.cgraph.edge__c: smetana.core.CFunction agedgeidcmpf>;

        $r128.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = $r127;

        $r129 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r129.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r131 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r130 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjmem>;

        $r131.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = $r130;

        $r132 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

        $r132.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r133 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r134 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET zero()>();

        $r133.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r134;

        $r135 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r135.<h.ST_dtdisc_s: int size> = 0;

        $r137 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r136 = new smetana.core.OFFSET;

        specialinvoke $r136.<smetana.core.OFFSET: void <init>(java.lang.String)>("link");

        $r137.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r136;

        $r138 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r138.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r139 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r139.<h.ST_dtdisc_s: smetana.core.CFunction freef> = null;

        $r141 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r140 = <gen.lib.cgraph.graph__c: smetana.core.CFunction agraphidcmpf>;

        $r141.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = $r140;

        $r142 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r142.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r144 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r143 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjmem>;

        $r144.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = $r143;

        $r145 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r145.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r147 = r0.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc>;

        $r146 = <gen.lib.cgraph.id__c: smetana.core.CFunction idopen>;

        $r147.<h.ST_Agiddisc_s: smetana.core.CFunction open> = $r146;

        $r149 = r0.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc>;

        $r148 = <gen.lib.cgraph.id__c: smetana.core.CFunction idmap>;

        $r149.<h.ST_Agiddisc_s: smetana.core.CFunction map> = $r148;

        $r151 = r0.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc>;

        $r150 = <gen.lib.cgraph.id__c: smetana.core.CFunction idalloc>;

        $r151.<h.ST_Agiddisc_s: smetana.core.CFunction alloc> = $r150;

        $r153 = r0.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc>;

        $r152 = <gen.lib.cgraph.id__c: smetana.core.CFunction idfree>;

        $r153.<h.ST_Agiddisc_s: smetana.core.CFunction free> = $r152;

        $r155 = r0.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc>;

        $r154 = <gen.lib.cgraph.id__c: smetana.core.CFunction idprint>;

        $r155.<h.ST_Agiddisc_s: smetana.core.CFunction print> = $r154;

        $r157 = r0.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc>;

        $r156 = <gen.lib.cgraph.id__c: smetana.core.CFunction idclose>;

        $r157.<h.ST_Agiddisc_s: smetana.core.CFunction close> = $r156;

        $r159 = r0.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc>;

        $r158 = <gen.lib.cgraph.id__c: smetana.core.CFunction idregister>;

        $r159.<h.ST_Agiddisc_s: smetana.core.CFunction idregister> = $r158;

        $r161 = r0.<smetana.core.Z: h.ST_Agmemdisc_s AgMemDisc>;

        $r160 = <gen.lib.cgraph.mem__c: smetana.core.CFunction memopen>;

        $r161.<h.ST_Agmemdisc_s: smetana.core.CFunction open> = $r160;

        $r163 = r0.<smetana.core.Z: h.ST_Agmemdisc_s AgMemDisc>;

        $r162 = <gen.lib.cgraph.mem__c: smetana.core.CFunction memalloc>;

        $r163.<h.ST_Agmemdisc_s: smetana.core.CFunction alloc> = $r162;

        $r165 = r0.<smetana.core.Z: h.ST_Agmemdisc_s AgMemDisc>;

        $r164 = <gen.lib.cgraph.mem__c: smetana.core.CFunction memresize>;

        $r165.<h.ST_Agmemdisc_s: smetana.core.CFunction resize> = $r164;

        $r167 = r0.<smetana.core.Z: h.ST_Agmemdisc_s AgMemDisc>;

        $r166 = <gen.lib.cgraph.mem__c: smetana.core.CFunction memfree>;

        $r167.<h.ST_Agmemdisc_s: smetana.core.CFunction free> = $r166;

        $r168 = r0.<smetana.core.Z: h.ST_Agmemdisc_s AgMemDisc>;

        $r168.<h.ST_Agmemdisc_s: smetana.core.CFunction close> = null;

        $r169 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r170 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET zero()>();

        $r169.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r170;

        $r171 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r171.<h.ST_dtdisc_s: int size> = 0;

        $r173 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r172 = new smetana.core.OFFSET;

        specialinvoke $r172.<smetana.core.OFFSET: void <init>(java.lang.String)>("id_link");

        $r173.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r172;

        $r174 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r174.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r175 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r175.<h.ST_dtdisc_s: smetana.core.CFunction freef> = null;

        $r177 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r176 = <gen.lib.cgraph.node__c: smetana.core.CFunction agsubnodeidcmpf>;

        $r177.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = $r176;

        $r178 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r178.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r180 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r179 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjmem>;

        $r180.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = $r179;

        $r181 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r181.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r182 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r183 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET zero()>();

        $r182.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r183;

        $r184 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r184.<h.ST_dtdisc_s: int size> = 0;

        $r186 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r185 = new smetana.core.OFFSET;

        specialinvoke $r185.<smetana.core.OFFSET: void <init>(java.lang.String)>("seq_link");

        $r186.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r185;

        $r187 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r187.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r189 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r188 = <gen.lib.cgraph.node__c: smetana.core.CFunction free_subnode>;

        $r189.<h.ST_dtdisc_s: smetana.core.CFunction freef> = $r188;

        $r191 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r190 = <gen.lib.cgraph.node__c: smetana.core.CFunction agsubnodeseqcmpf>;

        $r191.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = $r190;

        $r192 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r192.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r194 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r193 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjmem>;

        $r194.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = $r193;

        $r195 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r195.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r197 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r196 = new smetana.core.OFFSET;

        specialinvoke $r196.<smetana.core.OFFSET: void <init>(java.lang.String)>("s");

        $r197.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r196;

        $r198 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r198.<h.ST_dtdisc_s: int size> = -1;

        $r199 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r200 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET zero()>();

        $r199.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r200;

        $r201 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r201.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r203 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r202 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjfree>;

        $r203.<h.ST_dtdisc_s: smetana.core.CFunction freef> = $r202;

        $r204 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r204.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = null;

        $r205 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r205.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r207 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r206 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjmem>;

        $r207.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = $r206;

        $r208 = r0.<smetana.core.Z: h.ST_dtdisc_s Refstrdisc>;

        $r208.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r210 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r209 = new smetana.core.OFFSET;

        specialinvoke $r209.<smetana.core.OFFSET: void <init>(java.lang.String)>("key");

        $r210.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r209;

        $r211 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r211.<h.ST_dtdisc_s: int size> = 4;

        $r212 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r213 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET externalHolder()>();

        $r212.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r213;

        $r214 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r214.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r215 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r215.<h.ST_dtdisc_s: smetana.core.CFunction freef> = null;

        $r217 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r216 = <gen.lib.label.xlabels__c: smetana.core.CFunction icompare>;

        $r217.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = $r216;

        $r218 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r218.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r219 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r219.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = null;

        $r220 = r0.<smetana.core.Z: h.ST_dtdisc_s Hdisc>;

        $r220.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r221 = r0.<smetana.core.Z: h.ST_port Center>;

        $r222 = $r221.<h.ST_port: h.ST_pointf p>;

        $r222.<h.ST_pointf: double x> = 0.0;

        $r223 = r0.<smetana.core.Z: h.ST_port Center>;

        $r224 = $r223.<h.ST_port: h.ST_pointf p>;

        $r224.<h.ST_pointf: double y> = 0.0;

        $r225 = r0.<smetana.core.Z: h.ST_port Center>;

        $r225.<h.ST_port: double theta> = -1.0;

        $r226 = r0.<smetana.core.Z: h.ST_port Center>;

        $r226.<h.ST_port: h.ST_boxf bp> = null;

        $r227 = r0.<smetana.core.Z: h.ST_port Center>;

        $r227.<h.ST_port: boolean defined> = 0;

        $r228 = r0.<smetana.core.Z: h.ST_port Center>;

        $r228.<h.ST_port: boolean constrained> = 0;

        $r229 = r0.<smetana.core.Z: h.ST_port Center>;

        $r229.<h.ST_port: boolean clip> = 1;

        $r230 = r0.<smetana.core.Z: h.ST_port Center>;

        $r230.<h.ST_port: boolean dyna> = 0;

        $r231 = r0.<smetana.core.Z: h.ST_port Center>;

        $r231.<h.ST_port: int order> = 0;

        $r232 = r0.<smetana.core.Z: h.ST_port Center>;

        $r232.<h.ST_port: int side> = 0;

        $r233 = r0.<smetana.core.Z: h.ST_polygon_t p_ellipse>;

        $r233.<h.ST_polygon_t: boolean regular> = 0;

        $r234 = r0.<smetana.core.Z: h.ST_polygon_t p_ellipse>;

        $r234.<h.ST_polygon_t: int peripheries> = 1;

        $r235 = r0.<smetana.core.Z: h.ST_polygon_t p_ellipse>;

        $r235.<h.ST_polygon_t: int sides> = 1;

        $r236 = r0.<smetana.core.Z: h.ST_polygon_t p_ellipse>;

        $r236.<h.ST_polygon_t: double orientation> = 0.0;

        $r237 = r0.<smetana.core.Z: h.ST_polygon_t p_ellipse>;

        $r237.<h.ST_polygon_t: double distortion> = 0.0;

        $r238 = r0.<smetana.core.Z: h.ST_polygon_t p_ellipse>;

        $r238.<h.ST_polygon_t: double skew> = 0.0;

        $r239 = r0.<smetana.core.Z: h.ST_polygon_t p_box>;

        $r239.<h.ST_polygon_t: boolean regular> = 0;

        $r240 = r0.<smetana.core.Z: h.ST_polygon_t p_box>;

        $r240.<h.ST_polygon_t: int peripheries> = 1;

        $r241 = r0.<smetana.core.Z: h.ST_polygon_t p_box>;

        $r241.<h.ST_polygon_t: int sides> = 4;

        $r242 = r0.<smetana.core.Z: h.ST_polygon_t p_box>;

        $r242.<h.ST_polygon_t: double orientation> = 0.0;

        $r243 = r0.<smetana.core.Z: h.ST_polygon_t p_box>;

        $r243.<h.ST_polygon_t: double distortion> = 0.0;

        $r244 = r0.<smetana.core.Z: h.ST_polygon_t p_box>;

        $r244.<h.ST_polygon_t: double skew> = 0.0;

        $r246 = r0.<smetana.core.Z: h.ST_shape_functions poly_fns>;

        $r245 = <gen.lib.common.shapes__c: smetana.core.CFunction poly_init>;

        $r246.<h.ST_shape_functions: smetana.core.CFunction initfn> = $r245;

        $r248 = r0.<smetana.core.Z: h.ST_shape_functions poly_fns>;

        $r247 = <gen.lib.common.shapes__c: smetana.core.CFunction poly_free>;

        $r248.<h.ST_shape_functions: smetana.core.CFunction freefn> = $r247;

        $r250 = r0.<smetana.core.Z: h.ST_shape_functions poly_fns>;

        $r249 = <gen.lib.common.shapes__c: smetana.core.CFunction poly_port>;

        $r250.<h.ST_shape_functions: smetana.core.CFunction portfn> = $r249;

        $r252 = r0.<smetana.core.Z: h.ST_shape_functions poly_fns>;

        $r251 = <gen.lib.common.shapes__c: smetana.core.CFunction poly_inside>;

        $r252.<h.ST_shape_functions: smetana.core.CFunction insidefn> = $r251;

        $r254 = r0.<smetana.core.Z: h.ST_shape_functions poly_fns>;

        $r253 = <gen.lib.common.shapes__c: smetana.core.CFunction poly_path>;

        $r254.<h.ST_shape_functions: smetana.core.CFunction pboxfn> = $r253;

        $r256 = r0.<smetana.core.Z: h.ST_shape_functions poly_fns>;

        $r255 = <gen.lib.common.shapes__c: smetana.core.CFunction poly_gencode>;

        $r256.<h.ST_shape_functions: smetana.core.CFunction codefn> = $r255;

        $r258 = r0.<smetana.core.Z: h.ST_shape_functions record_fns>;

        $r257 = <gen.lib.common.shapes__c: smetana.core.CFunction record_init>;

        $r258.<h.ST_shape_functions: smetana.core.CFunction initfn> = $r257;

        $r260 = r0.<smetana.core.Z: h.ST_shape_functions record_fns>;

        $r259 = <gen.lib.common.shapes__c: smetana.core.CFunction record_free>;

        $r260.<h.ST_shape_functions: smetana.core.CFunction freefn> = $r259;

        $r262 = r0.<smetana.core.Z: h.ST_shape_functions record_fns>;

        $r261 = <gen.lib.common.shapes__c: smetana.core.CFunction record_port>;

        $r262.<h.ST_shape_functions: smetana.core.CFunction portfn> = $r261;

        $r264 = r0.<smetana.core.Z: h.ST_shape_functions record_fns>;

        $r263 = <gen.lib.common.shapes__c: smetana.core.CFunction record_inside>;

        $r264.<h.ST_shape_functions: smetana.core.CFunction insidefn> = $r263;

        $r266 = r0.<smetana.core.Z: h.ST_shape_functions record_fns>;

        $r265 = <gen.lib.common.shapes__c: smetana.core.CFunction record_path>;

        $r266.<h.ST_shape_functions: smetana.core.CFunction pboxfn> = $r265;

        $r268 = r0.<smetana.core.Z: h.ST_shape_functions record_fns>;

        $r267 = <gen.lib.common.shapes__c: smetana.core.CFunction record_gencode>;

        $r268.<h.ST_shape_functions: smetana.core.CFunction codefn> = $r267;

        $r269 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r270 = staticinvoke <smetana.core.OFFSET: smetana.core.OFFSET zero()>();

        $r269.<h.ST_dtdisc_s: smetana.core.OFFSET key> = $r270;

        $r271 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r271.<h.ST_dtdisc_s: int size> = 0;

        $r273 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r272 = new smetana.core.OFFSET;

        specialinvoke $r272.<smetana.core.OFFSET: void <init>(java.lang.String)>("id_link");

        $r273.<h.ST_dtdisc_s: smetana.core.OFFSET link> = $r272;

        $r274 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r274.<h.ST_dtdisc_s: smetana.core.CFunction makef> = null;

        $r275 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r275.<h.ST_dtdisc_s: smetana.core.CFunction freef> = null;

        $r277 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r276 = <gen.lib.cgraph.edge__c: smetana.core.CFunction agedgeidcmpf>;

        $r277.<h.ST_dtdisc_s: smetana.core.CFunction comparf> = $r276;

        $r278 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r278.<h.ST_dtdisc_s: smetana.core.CFunction hashf> = null;

        $r280 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r279 = <gen.lib.cgraph.utils__c: smetana.core.CFunction agdictobjmem>;

        $r280.<h.ST_dtdisc_s: smetana.core.CFunction memoryf> = $r279;

        $r281 = r0.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        $r281.<h.ST_dtdisc_s: smetana.core.CFunction eventf> = null;

        $r282 = r0.<smetana.core.Z: h.ST_Agdesc_s Agdirected>;

        $r282.<h.ST_Agdesc_s: int directed> = 1;

        $r283 = r0.<smetana.core.Z: h.ST_Agdesc_s Agdirected>;

        $r283.<h.ST_Agdesc_s: int strict> = 0;

        $r284 = r0.<smetana.core.Z: h.ST_Agdesc_s Agdirected>;

        $r284.<h.ST_Agdesc_s: int no_loop> = 0;

        $r285 = r0.<smetana.core.Z: h.ST_Agdesc_s Agdirected>;

        $r285.<h.ST_Agdesc_s: int maingraph> = 1;

        $r287 = r0.<smetana.core.Z: h.ST_splineInfo sinfo>;

        $r286 = <gen.lib.dotgen.dotsplines__c: smetana.core.CFunction swap_ends_p>;

        $r287.<h.ST_splineInfo: smetana.core.CFunction swapEnds> = $r286;

        $r289 = r0.<smetana.core.Z: h.ST_splineInfo sinfo>;

        $r288 = <gen.lib.dotgen.dotsplines__c: smetana.core.CFunction spline_merge>;

        $r289.<h.ST_splineInfo: smetana.core.CFunction splineMerge> = $r288;

        r0.<smetana.core.Z: smetana.core.CArray ispline> = null;

        r0.<smetana.core.Z: int isz> = 0;

        return;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r0;

        $r0 = new java.lang.ThreadLocal;

        specialinvoke $r0.<java.lang.ThreadLocal: void <init>()>();

        <smetana.core.Z: java.lang.ThreadLocal instances2> = $r0;

        return;
    }
}
