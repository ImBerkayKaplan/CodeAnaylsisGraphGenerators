public class net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d extends net.sourceforge.plantuml.ugraphic.AbstractUGraphic implements net.sourceforge.plantuml.EnsureVisible
{
    private java.awt.image.BufferedImage bufferedImage;
    private final double dpiFactor;
    private net.sourceforge.plantuml.ugraphic.UAntiAliasing antiAliasing;
    private java.util.List urls;
    private java.util.Set allUrls;
    private final boolean hasAffineTransform;

    public final java.util.Set getAllUrlsEncountered()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        java.util.Set $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.Set allUrls>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0, r3;
        net.sourceforge.plantuml.ugraphic.UChange r1;
        net.sourceforge.plantuml.ugraphic.UGraphic $r2;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UAntiAliasing $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r1);

        r3 = (net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d) $r2;

        $z0 = r1 instanceof net.sourceforge.plantuml.ugraphic.UAntiAliasing;

        if $z0 == 0 goto label1;

        $r4 = (net.sourceforge.plantuml.ugraphic.UAntiAliasing) r1;

        r3.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UAntiAliasing antiAliasing> = $r4;

     label1:
        return r3;
    }

    protected net.sourceforge.plantuml.ugraphic.AbstractCommonUGraphic copyUGraphic()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d $r0, r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        $r0 = new net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void <init>(net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d)>(r1);

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d)
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0, r1;
        net.sourceforge.plantuml.ugraphic.UAntiAliasing $r2, $r8;
        java.util.ArrayList $r3;
        java.util.HashSet $r4;
        boolean $z0;
        double $d0, $d1;
        java.awt.image.BufferedImage $r5;
        java.util.List $r6;
        java.util.Set $r7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.AbstractUGraphic)>(r1);

        $r2 = <net.sourceforge.plantuml.ugraphic.UAntiAliasing: net.sourceforge.plantuml.ugraphic.UAntiAliasing ANTI_ALIASING_ON>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UAntiAliasing antiAliasing> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls> = $r3;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.Set allUrls> = $r4;

        $z0 = r1.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: boolean hasAffineTransform>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: boolean hasAffineTransform> = $z0;

        $d0 = r1.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: double dpiFactor>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: double dpiFactor> = $d0;

        $r5 = r1.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.awt.image.BufferedImage bufferedImage>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.awt.image.BufferedImage bufferedImage> = $r5;

        $r6 = r1.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls> = $r6;

        $r7 = r1.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.Set allUrls>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.Set allUrls> = $r7;

        $r8 = r1.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UAntiAliasing antiAliasing>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UAntiAliasing antiAliasing> = $r8;

        $d1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: double dpiFactor>;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void register(double)>($d1);

        return;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.graphic.StringBounder, java.awt.Graphics2D, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        java.awt.Graphics2D r4;
        double d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        r4 := @parameter3: java.awt.Graphics2D;

        d0 := @parameter4: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,java.awt.Graphics2D,double,net.sourceforge.plantuml.anim.AffineTransformation,double,double)>(r1, r2, r3, r4, d0, null, 0.0, 0.0);

        return;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.graphic.StringBounder, java.awt.Graphics2D, double, net.sourceforge.plantuml.anim.AffineTransformation, double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        java.awt.Graphics2D r4, $r10, $r14;
        net.sourceforge.plantuml.ugraphic.UAntiAliasing $r5;
        java.util.ArrayList $r6;
        java.util.HashSet $r7;
        net.sourceforge.plantuml.anim.AffineTransformation r8;
        double d0, d1, d2;
        byte $b0, $b1, $b2;
        boolean $z0, $z1;
        java.lang.Object $r9, $r13;
        java.awt.geom.AffineTransform $r11, $r15;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.StringBounder;

        r4 := @parameter3: java.awt.Graphics2D;

        d0 := @parameter4: double;

        r8 := @parameter5: net.sourceforge.plantuml.anim.AffineTransformation;

        d1 := @parameter6: double;

        d2 := @parameter7: double;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.graphic.StringBounder,java.lang.Object)>(r1, r2, r3, r4);

        $r5 = <net.sourceforge.plantuml.ugraphic.UAntiAliasing: net.sourceforge.plantuml.ugraphic.UAntiAliasing ANTI_ALIASING_ON>;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UAntiAliasing antiAliasing> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls> = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.Set allUrls> = $r7;

        if r8 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: boolean hasAffineTransform> = $z1;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: double dpiFactor> = d0;

        $b0 = d0 cmpl 1.0;

        if $b0 == 0 goto label3;

        virtualinvoke r4.<java.awt.Graphics2D: void scale(double,double)>(d0, d0);

     label3:
        $z0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: boolean hasAffineTransform>;

        if $z0 == 0 goto label6;

        $b1 = d1 cmpl 0.0;

        if $b1 != 0 goto label4;

        $b2 = d2 cmpl 0.0;

        if $b2 == 0 goto label5;

     label4:
        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.lang.Object getGraphicObject()>();

        $r10 = (java.awt.Graphics2D) $r9;

        $r11 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>(d1, d2);

        virtualinvoke $r10.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>($r11);

     label5:
        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.lang.Object getGraphicObject()>();

        $r14 = (java.awt.Graphics2D) $r13;

        $r15 = virtualinvoke r8.<net.sourceforge.plantuml.anim.AffineTransformation: java.awt.geom.AffineTransform getAffineTransform()>();

        virtualinvoke $r14.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>($r15);

     label6:
        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void register(double)>(d0);

        return;
    }

    private void register(double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        net.sourceforge.plantuml.ugraphic.g2d.DriverRectangleG2d $r1;
        double d0;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.g2d.DriverTextAsPathG2d $r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3, $r13;
        net.sourceforge.plantuml.ugraphic.g2d.DriverLineG2d $r4;
        net.sourceforge.plantuml.ugraphic.g2d.DriverPixelG2d $r5;
        net.sourceforge.plantuml.ugraphic.g2d.DriverPolygonG2d $r6;
        net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d $r7;
        net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d $r8;
        net.sourceforge.plantuml.ugraphic.g2d.DriverDotPathG2d $r9;
        net.sourceforge.plantuml.ugraphic.g2d.DriverPathG2d $r10;
        net.sourceforge.plantuml.ugraphic.g2d.DriverCenteredCharacterG2d $r11;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.g2d.DriverTextG2d $r12;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        d0 := @parameter0: double;

        $r1 = new net.sourceforge.plantuml.ugraphic.g2d.DriverRectangleG2d;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.g2d.DriverRectangleG2d: void <init>(double,net.sourceforge.plantuml.EnsureVisible)>(d0, r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/URectangle;", $r1);

        $z0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: boolean hasAffineTransform>;

        if $z0 != 0 goto label1;

        $b0 = d0 cmpl 1.0;

        if $b0 == 0 goto label2;

     label1:
        $r2 = new net.sourceforge.plantuml.ugraphic.g2d.DriverTextAsPathG2d;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.g2d.DriverTextAsPathG2d: void <init>(net.sourceforge.plantuml.EnsureVisible,net.sourceforge.plantuml.graphic.StringBounder)>(r0, $r3);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UText;", $r2);

        goto label3;

     label2:
        $r12 = new net.sourceforge.plantuml.ugraphic.g2d.DriverTextG2d;

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.g2d.DriverTextG2d: void <init>(net.sourceforge.plantuml.EnsureVisible,net.sourceforge.plantuml.graphic.StringBounder)>(r0, $r13);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UText;", $r12);

     label3:
        $r4 = new net.sourceforge.plantuml.ugraphic.g2d.DriverLineG2d;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.g2d.DriverLineG2d: void <init>(double)>(d0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/ULine;", $r4);

        $r5 = new net.sourceforge.plantuml.ugraphic.g2d.DriverPixelG2d;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.g2d.DriverPixelG2d: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPixel;", $r5);

        $r6 = new net.sourceforge.plantuml.ugraphic.g2d.DriverPolygonG2d;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.g2d.DriverPolygonG2d: void <init>(double,net.sourceforge.plantuml.EnsureVisible)>(d0, r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPolygon;", $r6);

        $r7 = new net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.g2d.DriverEllipseG2d: void <init>(double,net.sourceforge.plantuml.EnsureVisible)>(d0, r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UEllipse;", $r7);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void ignoreShape(java.lang.Class)>(class "Lnet/sourceforge/plantuml/ugraphic/UImageSvg;");

        $r8 = new net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.g2d.DriverImageG2d: void <init>(double,net.sourceforge.plantuml.EnsureVisible)>(d0, r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UImage;", $r8);

        $r9 = new net.sourceforge.plantuml.ugraphic.g2d.DriverDotPathG2d;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.g2d.DriverDotPathG2d: void <init>(net.sourceforge.plantuml.EnsureVisible)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/posimo/DotPath;", $r9);

        $r10 = new net.sourceforge.plantuml.ugraphic.g2d.DriverPathG2d;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.g2d.DriverPathG2d: void <init>(double)>(d0);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UPath;", $r10);

        $r11 = new net.sourceforge.plantuml.ugraphic.g2d.DriverCenteredCharacterG2d;

        specialinvoke $r11.<net.sourceforge.plantuml.ugraphic.g2d.DriverCenteredCharacterG2d: void <init>()>();

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void registerDriver(java.lang.Class,net.sourceforge.plantuml.ugraphic.UDriver)>(class "Lnet/sourceforge/plantuml/ugraphic/UCenteredCharacter;", $r11);

        return;
    }

    protected void beforeDraw()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        net.sourceforge.plantuml.ugraphic.UAntiAliasing $r1;
        java.lang.Object $r2;
        java.awt.Graphics2D $r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.AbstractUGraphic: void beforeDraw()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: void applyClip()>();

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UAntiAliasing antiAliasing>;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.lang.Object getGraphicObject()>();

        $r3 = (java.awt.Graphics2D) $r2;

        virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UAntiAliasing: void apply(java.awt.Graphics2D)>($r3);

        return;
    }

    private void applyClip()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        net.sourceforge.plantuml.ugraphic.UClip r1;
        java.awt.geom.Rectangle2D$Double $r2;
        double $d0, $d1, $d2, $d3;
        java.lang.Object $r4, $r6;
        java.awt.Graphics2D $r5, $r7;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r1 != null goto label1;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.lang.Object getGraphicObject()>();

        $r7 = (java.awt.Graphics2D) $r6;

        virtualinvoke $r7.<java.awt.Graphics2D: void setClip(java.awt.Shape)>(null);

        goto label2;

     label1:
        $r2 = new java.awt.geom.Rectangle2D$Double;

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UClip: double getX()>();

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UClip: double getY()>();

        $d2 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UClip: double getWidth()>();

        $d3 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.UClip: double getHeight()>();

        specialinvoke $r2.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d0, $d1, $d2, $d3);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.lang.Object getGraphicObject()>();

        $r5 = (java.awt.Graphics2D) $r4;

        virtualinvoke $r5.<java.awt.Graphics2D: void setClip(java.awt.Shape)>($r2);

     label2:
        return;
    }

    protected final double getDpiFactor()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: double dpiFactor>;

        return $d0;
    }

    public void startUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.Url r0;
        java.lang.String $r2;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r3;
        java.util.List $r4, $r6;
        java.util.Set $r5;

        r3 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        r0 := @parameter0: net.sourceforge.plantuml.Url;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.Url: java.lang.String getUrl()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.security.SecurityUtils: boolean ignoreThisLink(java.lang.String)>($r2);

        if $z0 == 0 goto label1;

        $r6 = r3.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(null);

        goto label2;

     label1:
        $r4 = r3.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r5 = r3.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.Set allUrls>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r0);

     label2:
        return;
    }

    public void closeUrl()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        java.util.List $r1, $r2;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls>;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        interfaceinvoke $r2.<java.util.List: java.lang.Object remove(int)>($i1);

        return;
    }

    public void ensureVisible(double, double)
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.Url r4;
        net.sourceforge.plantuml.ugraphic.UClip $r5, $r6;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.util.List urls>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.Url) $r3;

        if r4 == null goto label3;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if $r5 == null goto label2;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        $z1 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UClip: boolean isInside(double,double)>(d0, d1);

        if $z1 == 0 goto label3;

     label2:
        virtualinvoke r4.<net.sourceforge.plantuml.Url: void ensureVisible(double,double)>(d0, d1);

     label3:
        goto label1;

     label4:
        return;
    }

    public java.awt.image.BufferedImage getBufferedImage()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        java.awt.image.BufferedImage $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.awt.image.BufferedImage bufferedImage>;

        return $r1;
    }

    public void setBufferedImage(java.awt.image.BufferedImage)
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        java.awt.image.BufferedImage r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        r1 := @parameter0: java.awt.image.BufferedImage;

        r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.awt.image.BufferedImage bufferedImage> = r1;

        return;
    }

    public java.awt.Graphics2D getGraphics2D()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        java.lang.Object $r1;
        java.awt.Graphics2D $r2;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.lang.Object getGraphicObject()>();

        $r2 = (java.awt.Graphics2D) $r1;

        return $r2;
    }

    public void writeToStream(java.io.OutputStream, java.lang.String, int) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        java.awt.image.BufferedImage r1;
        java.io.OutputStream r2;
        java.lang.String r3;
        int i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: java.awt.image.BufferedImage getBufferedImage()>();

        staticinvoke <net.sourceforge.plantuml.png.PngIO: void write(java.awt.image.RenderedImage,java.io.OutputStream,java.lang.String,int)>(r1, r2, r3, i0);

        return;
    }

    public double dpiFactor()
    {
        net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.g2d.UGraphicG2d: double dpiFactor>;

        return $d0;
    }
}
