public final enum class net.sourceforge.plantuml.ugraphic.color.ColorOrder extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.ugraphic.color.ColorOrder RGB;
    public static final enum net.sourceforge.plantuml.ugraphic.color.ColorOrder RBG;
    public static final enum net.sourceforge.plantuml.ugraphic.color.ColorOrder GRB;
    public static final enum net.sourceforge.plantuml.ugraphic.color.ColorOrder GBR;
    public static final enum net.sourceforge.plantuml.ugraphic.color.ColorOrder BRG;
    public static final enum net.sourceforge.plantuml.ugraphic.color.ColorOrder BGR;
    private static final net.sourceforge.plantuml.ugraphic.color.ColorOrder[] $VALUES;

    public static net.sourceforge.plantuml.ugraphic.color.ColorOrder[] values()
    {
        net.sourceforge.plantuml.ugraphic.color.ColorOrder[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.ugraphic.color.ColorOrder[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.ugraphic.color.ColorOrder valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.ugraphic.color.ColorOrder $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/ugraphic/color/ColorOrder;", r0);

        $r2 = (net.sourceforge.plantuml.ugraphic.color.ColorOrder) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.ugraphic.color.ColorOrder r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public java.awt.Color getColor(java.awt.Color)
    {
        net.sourceforge.plantuml.ugraphic.color.ColorOrder r0, $r1, $r2, $r3, $r4, $r5, $r6;
        java.lang.IllegalStateException $r7;
        java.awt.Color $r8, r9, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        r9 := @parameter0: java.awt.Color;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder RGB>;

        if r0 != $r1 goto label1;

        $r14 = new java.awt.Color;

        $i15 = virtualinvoke r9.<java.awt.Color: int getRed()>();

        $i16 = virtualinvoke r9.<java.awt.Color: int getGreen()>();

        $i17 = virtualinvoke r9.<java.awt.Color: int getBlue()>();

        specialinvoke $r14.<java.awt.Color: void <init>(int,int,int)>($i15, $i16, $i17);

        return $r14;

     label1:
        $r2 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder RBG>;

        if r0 != $r2 goto label2;

        $r13 = new java.awt.Color;

        $i12 = virtualinvoke r9.<java.awt.Color: int getRed()>();

        $i13 = virtualinvoke r9.<java.awt.Color: int getBlue()>();

        $i14 = virtualinvoke r9.<java.awt.Color: int getGreen()>();

        specialinvoke $r13.<java.awt.Color: void <init>(int,int,int)>($i12, $i13, $i14);

        return $r13;

     label2:
        $r3 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder GRB>;

        if r0 != $r3 goto label3;

        $r12 = new java.awt.Color;

        $i9 = virtualinvoke r9.<java.awt.Color: int getGreen()>();

        $i10 = virtualinvoke r9.<java.awt.Color: int getRed()>();

        $i11 = virtualinvoke r9.<java.awt.Color: int getBlue()>();

        specialinvoke $r12.<java.awt.Color: void <init>(int,int,int)>($i9, $i10, $i11);

        return $r12;

     label3:
        $r4 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder GBR>;

        if r0 != $r4 goto label4;

        $r11 = new java.awt.Color;

        $i6 = virtualinvoke r9.<java.awt.Color: int getGreen()>();

        $i7 = virtualinvoke r9.<java.awt.Color: int getBlue()>();

        $i8 = virtualinvoke r9.<java.awt.Color: int getRed()>();

        specialinvoke $r11.<java.awt.Color: void <init>(int,int,int)>($i6, $i7, $i8);

        return $r11;

     label4:
        $r5 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder BRG>;

        if r0 != $r5 goto label5;

        $r10 = new java.awt.Color;

        $i3 = virtualinvoke r9.<java.awt.Color: int getBlue()>();

        $i4 = virtualinvoke r9.<java.awt.Color: int getRed()>();

        $i5 = virtualinvoke r9.<java.awt.Color: int getGreen()>();

        specialinvoke $r10.<java.awt.Color: void <init>(int,int,int)>($i3, $i4, $i5);

        return $r10;

     label5:
        $r6 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder BGR>;

        if r0 != $r6 goto label6;

        $r8 = new java.awt.Color;

        $i0 = virtualinvoke r9.<java.awt.Color: int getBlue()>();

        $i1 = virtualinvoke r9.<java.awt.Color: int getGreen()>();

        $i2 = virtualinvoke r9.<java.awt.Color: int getRed()>();

        specialinvoke $r8.<java.awt.Color: void <init>(int,int,int)>($i0, $i1, $i2);

        return $r8;

     label6:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;
    }

    public java.awt.Color getReverse(java.awt.Color)
    {
        net.sourceforge.plantuml.ugraphic.color.ColorOrder r0;
        java.awt.Color $r1, r2, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        r2 := @parameter0: java.awt.Color;

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.color.ColorOrder: java.awt.Color getColor(java.awt.Color)>(r2);

        $r1 = new java.awt.Color;

        $i0 = virtualinvoke r3.<java.awt.Color: int getRed()>();

        $i1 = 255 - $i0;

        $i2 = virtualinvoke r3.<java.awt.Color: int getGreen()>();

        $i3 = 255 - $i2;

        $i4 = virtualinvoke r3.<java.awt.Color: int getBlue()>();

        $i5 = 255 - $i4;

        specialinvoke $r1.<java.awt.Color: void <init>(int,int,int)>($i1, $i3, $i5);

        return $r1;
    }

    public static net.sourceforge.plantuml.ugraphic.color.ColorOrder fromString(java.lang.String)
    {
        java.lang.String r0, $r1;
        net.sourceforge.plantuml.ugraphic.color.ColorOrder $r2;
        java.lang.Exception $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder valueOf(java.lang.String)>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static net.sourceforge.plantuml.ugraphic.color.ColorOrder[] $values()
    {
        net.sourceforge.plantuml.ugraphic.color.ColorOrder[] $r0;
        net.sourceforge.plantuml.ugraphic.color.ColorOrder $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = newarray (net.sourceforge.plantuml.ugraphic.color.ColorOrder)[6];

        $r1 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder RGB>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder RBG>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder GRB>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder GBR>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder BRG>;

        $r0[4] = $r5;

        $r6 = <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder BGR>;

        $r0[5] = $r6;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.ugraphic.color.ColorOrder $r0, $r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.ugraphic.color.ColorOrder[] $r6;

        $r0 = new net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.ColorOrder: void <init>(java.lang.String,int)>("RGB", 0);

        <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder RGB> = $r0;

        $r1 = new net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.ColorOrder: void <init>(java.lang.String,int)>("RBG", 1);

        <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder RBG> = $r1;

        $r2 = new net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.color.ColorOrder: void <init>(java.lang.String,int)>("GRB", 2);

        <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder GRB> = $r2;

        $r3 = new net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.ColorOrder: void <init>(java.lang.String,int)>("GBR", 3);

        <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder GBR> = $r3;

        $r4 = new net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.ColorOrder: void <init>(java.lang.String,int)>("BRG", 4);

        <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder BRG> = $r4;

        $r5 = new net.sourceforge.plantuml.ugraphic.color.ColorOrder;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.ColorOrder: void <init>(java.lang.String,int)>("BGR", 5);

        <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder BGR> = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder[] $values()>();

        <net.sourceforge.plantuml.ugraphic.color.ColorOrder: net.sourceforge.plantuml.ugraphic.color.ColorOrder[] $VALUES> = $r6;

        return;
    }
}
