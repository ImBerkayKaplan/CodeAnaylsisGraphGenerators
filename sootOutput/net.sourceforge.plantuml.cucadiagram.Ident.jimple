public class net.sourceforge.plantuml.cucadiagram.Ident extends java.lang.Object implements net.sourceforge.plantuml.cucadiagram.Code
{
    private final java.util.List parts;

    private void <init>(java.util.List)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.util.List r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts> = r1;

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.util.List $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public boolean startsWith(net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0, r2;
        java.util.List $r1, $r3, $r4, $r5, $r7;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r6, $r9;
        java.lang.String $r8;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= $i1 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i2 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i3 >= $i2 goto label4;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i3);

        $r8 = (java.lang.String) $r6;

        $r7 = r2.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i3);

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;
    }

    public java.lang.String forXmi()
    {
        java.lang.StringBuilder $r0;
        net.sourceforge.plantuml.cucadiagram.Ident r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.String $r5, r7;
        java.lang.Object $r6;
        int $i0;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        goto label1;

     label3:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident add(net.sourceforge.plantuml.cucadiagram.Ident)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, r4, $r6;
        java.util.List $r2, $r5;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r5 = r4.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = new net.sourceforge.plantuml.cucadiagram.Ident;

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r0);

        return $r6;
    }

    public static net.sourceforge.plantuml.cucadiagram.Ident empty()
    {
        net.sourceforge.plantuml.cucadiagram.Ident $r0;
        java.util.List $r1;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r1);

        return $r0;
    }

    public java.lang.String getLast()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.util.List $r1, $r2, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r4;
        java.lang.String $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i2);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public net.sourceforge.plantuml.cucadiagram.Code toCode(net.sourceforge.plantuml.cucadiagram.CucaDiagram)
    {
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r0;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        java.lang.String $r2;
        net.sourceforge.plantuml.cucadiagram.Code $r3;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.CodeImpl: net.sourceforge.plantuml.cucadiagram.Code of(java.lang.String)>($r2);

        return $r3;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r9;
        java.util.List $r2;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String r5, $r6, $r7;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r5 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        i1 = $i0 - 1;

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (java.lang.String) $r4;

        $r7 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>($r6, r5);

        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r7);

        $r9 = new net.sourceforge.plantuml.cucadiagram.Ident;

        specialinvoke $r9.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r0);

        return $r9;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident removeStartingParenthesis()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r10;
        java.util.List $r2;
        int $i0, i1;
        java.lang.Object $r4;
        java.lang.String r5, $r6, $r7, $r8;
        boolean $z0;
        java.lang.IllegalStateException $r11;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        i1 = $i0 - 1;

        $r4 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("()");

        if $z0 != 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label1:
        $r6 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int)>(2);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r7);

        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r8);

        $r10 = new net.sourceforge.plantuml.cucadiagram.Ident;

        specialinvoke $r10.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r0);

        return $r10;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident addSuffix(java.lang.String)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, $r12;
        java.util.List $r2;
        int $i0, i1;
        java.lang.StringBuilder $r4, $r7, $r9;
        java.lang.Object $r5;
        java.lang.String $r6, r8, $r10;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r8 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $i0 = interfaceinvoke $r0.<java.util.List: int size()>();

        i1 = $i0 - 1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = interfaceinvoke $r0.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (java.lang.String) $r5;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r10);

        $r12 = new net.sourceforge.plantuml.cucadiagram.Ident;

        specialinvoke $r12.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r0);

        return $r12;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident removeMemberPart()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0, $r7;
        java.lang.String r1, $r5;
        int i0, $i1, i2;
        java.util.ArrayList $r2;
        java.util.List $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("::");

        if i0 != -1 goto label1;

        return null;

     label1:
        $r2 = new java.util.ArrayList;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i2 = $i1 - 1;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i2, $r5);

        $r7 = new net.sourceforge.plantuml.cucadiagram.Ident;

        specialinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r2);

        return $r7;
    }

    public java.lang.String getPortMember()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.lang.String r1, $r2;
        int i0, $i1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>("::");

        if i0 != -1 goto label1;

        return null;

     label1:
        $i1 = i0 + 2;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r2;
    }

    private static net.sourceforge.plantuml.cucadiagram.Ident 'from'(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.Ident $r0;
        java.util.ArrayList $r1;
        java.lang.String r3, $r5, r8;
        boolean $z0;
        int i0, $i1, $i2;
        java.util.List $r4, $r6, $r7;

        r8 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r1);

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Ident: boolean isOdd(java.lang.String,java.lang.String)>(r8, r3);

        if $z0 == 0 goto label1;

        $r7 = $r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r8);

        return $r0;

     label1:
        i0 = virtualinvoke r8.<java.lang.String: int indexOf(java.lang.String)>(r3);

        if i0 != -1 goto label2;

        $r6 = $r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r8);

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Ident: void checkResult(java.lang.String)>(r3);

        return $r0;

     label2:
        if i0 <= 0 goto label3;

        $r4 = $r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r5 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        $i2 = i0 + $i1;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label1;
    }

    private static boolean isOdd(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void checkResult(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r3;
        java.lang.String r4, r5, $r9, $r11, $r13;
        int $i0;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.IllegalStateException $r10, $r12;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r12 = new java.lang.IllegalStateException;

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13);

        throw $r12;

     label2:
        if r5 == null goto label3;

        $z1 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>(r5);

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>(r5);

        if $z2 != 0 goto label3;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $z3 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>($r9);

        if $z3 != 0 goto label3;

        $r10 = new java.lang.IllegalStateException;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r10;

     label3:
        goto label1;

     label4:
        return;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident add(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0, r3, $r10;
        java.lang.String r1, r2;
        java.util.ArrayList $r4;
        java.util.List $r5, $r6, $r8, $r9;
        int $i0, $i1, $i2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: void checkResult(java.lang.String)>(r1);

        r3 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident 'from'(java.lang.String,java.lang.String)>(r2, r1);

        $r4 = new java.util.ArrayList;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = r3.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i1 = interfaceinvoke $r6.<java.util.List: int size()>();

        $i2 = $i0 + $i1;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i2);

        $r8 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r8);

        $r9 = r3.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        $r10 = new net.sourceforge.plantuml.cucadiagram.Ident;

        specialinvoke $r10.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r4);

        specialinvoke $r10.<net.sourceforge.plantuml.cucadiagram.Ident: void checkResult(java.lang.String)>(r1);

        return $r10;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident parent()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0, $r2;
        java.util.List $r1, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $r2 = new net.sourceforge.plantuml.cucadiagram.Ident;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.List subList(int,int)>(0, $i2);

        specialinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r5);

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1, r2;
        java.util.List $r3, $r4;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.cucadiagram.Ident) r0;

        $r4 = r2.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $z0 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString(java.lang.String)
    {
        java.lang.StringBuilder $r0;
        net.sourceforge.plantuml.cucadiagram.Ident r2;
        java.util.List $r3;
        java.util.Iterator r4;
        java.lang.String $r5, r7, r10;
        java.lang.Object $r6;
        int $i0;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r10 := @parameter0: java.lang.String;

        if r10 != null goto label1;

        r10 = ".";

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        goto label2;

     label4:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void checkSameAs(net.sourceforge.plantuml.cucadiagram.Code, java.lang.String, net.sourceforge.plantuml.cucadiagram.CucaDiagram)
    {
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        java.util.List $r2, $r3;
        int $i0, $i1;
        java.lang.Object $r4;
        java.lang.String r5, r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        net.sourceforge.plantuml.cucadiagram.Code r7;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r7 := @parameter0: net.sourceforge.plantuml.cucadiagram.Code;

        r6 := @parameter1: java.lang.String;

        r0 := @parameter2: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.CucaDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>($i1);

        r5 = (java.lang.String) $r4;

        if r6 != null goto label2;

        $r12 = interfaceinvoke r7.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z3 == 1 goto label3;

        $r13 = interfaceinvoke r7.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $r14 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String toString(java.lang.String)>(r6);

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z4 != 0 goto label3;

        staticinvoke <net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: void bigError()>();

        goto label3;

     label2:
        $r8 = interfaceinvoke r7.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $r9 = specialinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLastPart(java.lang.String,java.lang.String)>($r8, r6);

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 == 1 goto label3;

        $r10 = interfaceinvoke r7.<net.sourceforge.plantuml.cucadiagram.Code: java.lang.String getName()>();

        $r11 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String toString(java.lang.String)>(r6);

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 != 0 goto label3;

        staticinvoke <net.sourceforge.plantuml.cucadiagram.entity.EntityFactory: void bigError()>();

     label3:
        return;
    }

    private java.lang.String getLastPart(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r2;
        int i0, $i1, $i2;
        net.sourceforge.plantuml.cucadiagram.Ident r3;

        r3 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return r1;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>(r0);

        if i0 != -1 goto label2;

        return r1;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        $i2 = i0 + $i1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i2);

        return $r2;
    }

    public java.lang.String getName()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.lang.String getLast()>();

        return $r1;
    }

    public boolean isRoot()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.util.List $r1;
        int $i0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident move(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0, r1, r3, $r8;
        boolean $z0;
        java.util.ArrayList $r2;
        java.util.List $r4, $r6, $r7, $r9;
        int $i0, i1;
        java.lang.Object $r10;
        java.lang.String $r11;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r3 := @parameter1: net.sourceforge.plantuml.cucadiagram.Ident;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: boolean startsWith(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        if $z0 != 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r12;

     label1:
        $r2 = new java.util.ArrayList;

        $r4 = r3.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        $r6 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        i1 = interfaceinvoke $r6.<java.util.List: int size()>();

     label2:
        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i1 >= $i0 goto label3;

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i1);

        $r11 = (java.lang.String) $r10;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        i1 = i1 + 1;

        goto label2;

     label3:
        $r8 = new net.sourceforge.plantuml.cucadiagram.Ident;

        specialinvoke $r8.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r2);

        return $r8;
    }

    public int size()
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident getPrefix(int)
    {
        net.sourceforge.plantuml.cucadiagram.Ident $r0, r1;
        int i0;
        java.util.List $r2, $r3;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        i0 := @parameter0: int;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Ident;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.List subList(int,int)>(0, i0);

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r3);

        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.Ident getSuffix(int)
    {
        net.sourceforge.plantuml.cucadiagram.Ident $r0, r1;
        int i0, $i1;
        java.util.List $r2, $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        i0 := @parameter0: int;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Ident;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Ident: java.util.List parts>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.List subList(int,int)>(i0, $i1);

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Ident: void <init>(java.util.List)>($r4);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.cucadiagram.Code eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0, $r2;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Ident;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Ident eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>(r1);

        return $r2;
    }
}
