public class net.sourceforge.plantuml.SuggestedFile extends java.lang.Object
{
    private final net.sourceforge.plantuml.FileFormat fileFormat;
    private final int initialCpt;
    private final net.sourceforge.plantuml.security.SFile outputFile;

    private void <init>(net.sourceforge.plantuml.security.SFile, net.sourceforge.plantuml.FileFormat, int)
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        net.sourceforge.plantuml.security.SFile r1;
        java.lang.String $r2, $r4;
        net.sourceforge.plantuml.FileFormat r3;
        boolean $z0;
        int i0;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: net.sourceforge.plantuml.SuggestedFile;

        r1 := @parameter0: net.sourceforge.plantuml.security.SFile;

        r3 := @parameter1: net.sourceforge.plantuml.FileFormat;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.security.SFile: java.lang.String getName()>();

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.FileFormat: java.lang.String getFileSuffix()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile outputFile> = r1;

        r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.FileFormat fileFormat> = r3;

        r0.<net.sourceforge.plantuml.SuggestedFile: int initialCpt> = i0;

        return;
    }

    public net.sourceforge.plantuml.SuggestedFile withPreprocFormat()
    {
        net.sourceforge.plantuml.SuggestedFile $r0, r1;
        int $i0;
        net.sourceforge.plantuml.FileFormat $r2;
        net.sourceforge.plantuml.security.SFile $r3;

        r1 := @this: net.sourceforge.plantuml.SuggestedFile;

        $r0 = new net.sourceforge.plantuml.SuggestedFile;

        $r3 = r1.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile outputFile>;

        $r2 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PREPROC>;

        $i0 = r1.<net.sourceforge.plantuml.SuggestedFile: int initialCpt>;

        specialinvoke $r0.<net.sourceforge.plantuml.SuggestedFile: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.FileFormat,int)>($r3, $r2, $i0);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r4, $r5, $r6, $r7;
        net.sourceforge.plantuml.SuggestedFile r1;
        net.sourceforge.plantuml.security.SFile $r2;
        java.lang.String $r3, $r8;
        int $i0;

        r1 := @this: net.sourceforge.plantuml.SuggestedFile;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile outputFile>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.security.SFile: java.lang.String getPrintablePath()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $i0 = r1.<net.sourceforge.plantuml.SuggestedFile: int initialCpt>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static net.sourceforge.plantuml.SuggestedFile fromOutputFile(net.sourceforge.plantuml.security.SFile, net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.security.SFile r0;
        net.sourceforge.plantuml.FileFormat r1;
        net.sourceforge.plantuml.SuggestedFile $r2;

        r0 := @parameter0: net.sourceforge.plantuml.security.SFile;

        r1 := @parameter1: net.sourceforge.plantuml.FileFormat;

        $r2 = staticinvoke <net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.SuggestedFile fromOutputFile(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.FileFormat,int)>(r0, r1, 0);

        return $r2;
    }

    public static net.sourceforge.plantuml.SuggestedFile fromOutputFile(java.io.File, net.sourceforge.plantuml.FileFormat)
    {
        java.io.File r0;
        net.sourceforge.plantuml.FileFormat r1;
        net.sourceforge.plantuml.SuggestedFile $r2;

        r0 := @parameter0: java.io.File;

        r1 := @parameter1: net.sourceforge.plantuml.FileFormat;

        $r2 = staticinvoke <net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.SuggestedFile fromOutputFile(java.io.File,net.sourceforge.plantuml.FileFormat,int)>(r0, r1, 0);

        return $r2;
    }

    public net.sourceforge.plantuml.security.SFile getParentFile()
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        net.sourceforge.plantuml.security.SFile $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.SuggestedFile;

        $r1 = r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile outputFile>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getParentFile()>();

        return $r2;
    }

    public java.lang.String getName()
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        net.sourceforge.plantuml.security.SFile $r1;
        java.lang.String $r2;

        r0 := @this: net.sourceforge.plantuml.SuggestedFile;

        $r1 = r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile outputFile>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.security.SFile: java.lang.String getName()>();

        return $r2;
    }

    public net.sourceforge.plantuml.security.SFile getFile(int)
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        net.sourceforge.plantuml.security.SFile $r1, $r5, $r6, $r7;
        net.sourceforge.plantuml.FileFormat $r2;
        java.lang.String $r3, r4;
        int i0, $i1, $i2;

        r0 := @this: net.sourceforge.plantuml.SuggestedFile;

        i0 := @parameter0: int;

        $r2 = r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r1 = r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile outputFile>;

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.security.SFile: java.lang.String getName()>();

        $i1 = r0.<net.sourceforge.plantuml.SuggestedFile: int initialCpt>;

        $i2 = $i1 + i0;

        r4 = virtualinvoke $r2.<net.sourceforge.plantuml.FileFormat: java.lang.String changeName(java.lang.String,int)>($r3, $i2);

        $r5 = r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile outputFile>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile getParentFile()>();

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>(r4);

        return $r7;
    }

    public static net.sourceforge.plantuml.SuggestedFile fromOutputFile(net.sourceforge.plantuml.security.SFile, net.sourceforge.plantuml.FileFormat, int)
    {
        net.sourceforge.plantuml.SuggestedFile $r0;
        net.sourceforge.plantuml.security.SFile r1;
        net.sourceforge.plantuml.FileFormat r2;
        int i0;

        r1 := @parameter0: net.sourceforge.plantuml.security.SFile;

        r2 := @parameter1: net.sourceforge.plantuml.FileFormat;

        i0 := @parameter2: int;

        $r0 = new net.sourceforge.plantuml.SuggestedFile;

        specialinvoke $r0.<net.sourceforge.plantuml.SuggestedFile: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.FileFormat,int)>(r1, r2, i0);

        return $r0;
    }

    public static net.sourceforge.plantuml.SuggestedFile fromOutputFile(java.io.File, net.sourceforge.plantuml.FileFormat, int)
    {
        net.sourceforge.plantuml.SuggestedFile $r0;
        java.io.File r1;
        net.sourceforge.plantuml.security.SFile $r2;
        net.sourceforge.plantuml.FileFormat r3;
        int i0;

        r1 := @parameter0: java.io.File;

        r3 := @parameter1: net.sourceforge.plantuml.FileFormat;

        i0 := @parameter2: int;

        $r0 = new net.sourceforge.plantuml.SuggestedFile;

        $r2 = staticinvoke <net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile fromFile(java.io.File)>(r1);

        specialinvoke $r0.<net.sourceforge.plantuml.SuggestedFile: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.FileFormat,int)>($r2, r3, i0);

        return $r0;
    }

    public net.sourceforge.plantuml.security.SFile getTmpFile()
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        net.sourceforge.plantuml.security.SFile $r1, $r7;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: net.sourceforge.plantuml.SuggestedFile;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile getParentFile()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.SuggestedFile: java.lang.String getName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r1.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>($r6);

        return $r7;
    }
}
