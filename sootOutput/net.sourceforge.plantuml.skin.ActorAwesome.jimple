public class net.sourceforge.plantuml.skin.ActorAwesome extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock
{
    private final double headDiam;
    private final double bodyWidth;
    private final double shoulder;
    private final double collar;
    private final double radius;
    private final double bodyHeight;
    private final net.sourceforge.plantuml.graphic.SymbolContext symbolContext;

    public void <init>(net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.skin.ActorAwesome r0;
        net.sourceforge.plantuml.graphic.SymbolContext r1, $r3;
        net.sourceforge.plantuml.ugraphic.UStroke $r2;

        r0 := @this: net.sourceforge.plantuml.skin.ActorAwesome;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.SymbolContext;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double bodyHeight> = 28.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double radius> = 8.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double collar> = 4.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double shoulder> = 16.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double bodyWidth> = 54.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double headDiam> = 32.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double headDiam> = 32.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double bodyWidth> = 54.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double shoulder> = 16.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double collar> = 4.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double radius> = 8.0;

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: double bodyHeight> = 28.0;

        $r2 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)>($r2);

        r0.<net.sourceforge.plantuml.skin.ActorAwesome: net.sourceforge.plantuml.graphic.SymbolContext symbolContext> = $r3;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UEllipse $r0;
        net.sourceforge.plantuml.skin.ActorAwesome r2;
        double $d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        net.sourceforge.plantuml.ugraphic.UPath $r3;
        net.sourceforge.plantuml.graphic.SymbolContext $r5, $r6, $r11, $r12;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r9;
        net.sourceforge.plantuml.ugraphic.UGraphic $r8, $r10, r13, r14;

        r2 := @this: net.sourceforge.plantuml.skin.ActorAwesome;

        r13 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UEllipse;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: void <init>(double,double)>(32.0, 32.0);

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.skin.ActorAwesome: double getPreferredWidth()>();

        d1 = $d0 / 2.0;

        $r3 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>(0.0, 4.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void cubicTo(double,double,double,double,double,double)>(4.0, 4.0, 7.0, 4.0, 11.0, 0.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void cubicTo(double,double,double,double,double,double)>(19.0, 0.0, 27.0, 8.0, 27.0, 16.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(27.0, 20.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void cubicTo(double,double,double,double,double,double)>(27.0, 24.0, 23.0, 28.0, 19.0, 28.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-19.0, 28.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void cubicTo(double,double,double,double,double,double)>(-23.0, 28.0, -27.0, 24.0, -27.0, 20.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(-27.0, 16.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void cubicTo(double,double,double,double,double,double)>(-27.0, 8.0, -19.0, 0.0, -11.0, 0.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void cubicTo(double,double,double,double,double,double)>(-7.0, 4.0, -4.0, 4.0, 0.0, 4.0);

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void closePath()>();

        $r5 = r2.<net.sourceforge.plantuml.skin.ActorAwesome: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d2 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        $b0 = $d2 cmpl 0.0;

        if $b0 == 0 goto label1;

        $r11 = r2.<net.sourceforge.plantuml.skin.ActorAwesome: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d10 = virtualinvoke $r11.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: void setDeltaShadow(double)>($d10);

        $r12 = r2.<net.sourceforge.plantuml.skin.ActorAwesome: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $d11 = virtualinvoke $r12.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UPath: void setDeltaShadow(double)>($d11);

     label1:
        $r6 = r2.<net.sourceforge.plantuml.skin.ActorAwesome: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        r14 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r13);

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getWidth()>();

        $d4 = $d3 / 2.0;

        $d5 = d1 - $d4;

        $d6 = specialinvoke r2.<net.sourceforge.plantuml.skin.ActorAwesome: double thickness()>();

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d5, $d6);

        $r8 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r9 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d7 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UEllipse: double getHeight()>();

        $d8 = specialinvoke r2.<net.sourceforge.plantuml.skin.ActorAwesome: double thickness()>();

        $d9 = $d7 + $d8;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d1, $d9);

        $r10 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        return;
    }

    private double thickness()
    {
        net.sourceforge.plantuml.skin.ActorAwesome r0;
        net.sourceforge.plantuml.graphic.SymbolContext $r1;
        net.sourceforge.plantuml.ugraphic.UStroke $r2;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.ActorAwesome;

        $r1 = r0.<net.sourceforge.plantuml.skin.ActorAwesome: net.sourceforge.plantuml.graphic.SymbolContext symbolContext>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        return $d0;
    }

    public double getPreferredWidth()
    {
        net.sourceforge.plantuml.skin.ActorAwesome r0;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.skin.ActorAwesome;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.skin.ActorAwesome: double thickness()>();

        $d1 = $d0 * 2.0;

        $d2 = 54.0 + $d1;

        return $d2;
    }

    public double getPreferredHeight()
    {
        net.sourceforge.plantuml.skin.ActorAwesome r0;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.skin.ActorAwesome;

        $d0 = specialinvoke r0.<net.sourceforge.plantuml.skin.ActorAwesome: double thickness()>();

        $d1 = $d0 * 2.0;

        $d2 = 60.0 + $d1;

        return $d2;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.skin.ActorAwesome r1;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.skin.ActorAwesome;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ActorAwesome: double getPreferredWidth()>();

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.skin.ActorAwesome: double getPreferredHeight()>();

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d0, $d1);

        return $r0;
    }
}
