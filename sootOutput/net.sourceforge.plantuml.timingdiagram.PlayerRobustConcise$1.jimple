class net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final double val$specialVSpace;
    final double val$fullAvailableWidth;
    final net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise this$0;

    void <init>(net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise, double, double)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise r1;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise this$0> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: double val$specialVSpace> = d0;

        r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: double val$fullAvailableWidth> = d1;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise $r1, $r2, $r7, $r11, $r13;
        boolean $z0;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, r15, r16;
        double $d0, $d1;
        net.sourceforge.plantuml.timingdiagram.graphic.PDrawing $r8;
        net.sourceforge.plantuml.graphic.TextBlock $r9, $r12;
        net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame $r10;
        net.sourceforge.plantuml.ISkinParam $r14;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1;

        r15 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise this$0>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise: boolean isCompact()>();

        if $z0 != 0 goto label1;

        $r10 = new net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame;

        $r11 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise this$0>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise: net.sourceforge.plantuml.graphic.TextBlock getTitle()>();

        $r13 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise this$0>;

        $r14 = $r13.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise: net.sourceforge.plantuml.ISkinParam skinParam>;

        specialinvoke $r10.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.ISkinParam)>($r12, $r14);

        virtualinvoke $r10.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: void drawFrameTitle(net.sourceforge.plantuml.ugraphic.UGraphic)>(r15);

     label1:
        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise this$0>;

        $r3 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise: net.sourceforge.plantuml.ugraphic.UTranslate access$000(net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise,net.sourceforge.plantuml.graphic.StringBounder)>($r2, $r3);

        $r5 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $d0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: double val$specialVSpace>;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        r16 = interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise this$0>;

        $r8 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise: net.sourceforge.plantuml.timingdiagram.graphic.PDrawing access$100(net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise)>($r7);

        $d1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: double val$fullAvailableWidth>;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.timingdiagram.graphic.PDrawing: net.sourceforge.plantuml.graphic.TextBlock getPart1(double)>($d1);

        interfaceinvoke $r9.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r16);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1 r0;
        net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise $r1;
        net.sourceforge.plantuml.timingdiagram.graphic.PDrawing $r2;
        double $d0;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r5;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise: net.sourceforge.plantuml.timingdiagram.graphic.PDrawing access$100(net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise)>($r1);

        $d0 = r0.<net.sourceforge.plantuml.timingdiagram.PlayerRobustConcise$1: double val$fullAvailableWidth>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.timingdiagram.graphic.PDrawing: net.sourceforge.plantuml.graphic.TextBlock getPart1(double)>($d0);

        $r5 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r4);

        return $r5;
    }
}
