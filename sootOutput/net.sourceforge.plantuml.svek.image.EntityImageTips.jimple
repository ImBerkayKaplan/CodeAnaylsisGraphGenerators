public class net.sourceforge.plantuml.svek.image.EntityImageTips extends net.sourceforge.plantuml.svek.AbstractEntityImage
{
    private final net.sourceforge.plantuml.skin.rose.Rose rose;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.ugraphic.color.HColor noteBackgroundColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor borderColor;
    private final net.sourceforge.plantuml.svek.Bibliotekon bibliotekon;
    private final net.sourceforge.plantuml.style.Style style;
    private final double ySpacing;

    public void <init>(net.sourceforge.plantuml.cucadiagram.ILeaf, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.svek.Bibliotekon, net.sourceforge.plantuml.UmlDiagramType)
    {
        net.sourceforge.plantuml.svek.image.EntityImageTips r0;
        net.sourceforge.plantuml.cucadiagram.ILeaf r1;
        net.sourceforge.plantuml.ISkinParam r2, $r3;
        net.sourceforge.plantuml.skin.rose.Rose $r4, $r13, $r16;
        net.sourceforge.plantuml.svek.Bibliotekon r5;
        boolean $z0;
        net.sourceforge.plantuml.graphic.color.Colors $r6, $r9, $r23, $r26;
        net.sourceforge.plantuml.graphic.color.ColorType $r7, $r10, $r24, $r27;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8, $r11, $r14, $r17, $r25, $r28, $r34, $r40;
        net.sourceforge.plantuml.ColorParam $r12, $r15;
        net.sourceforge.plantuml.UmlDiagramType r18;
        net.sourceforge.plantuml.style.SName $r19;
        net.sourceforge.plantuml.style.StyleSignature $r20;
        net.sourceforge.plantuml.style.StyleBuilder $r21;
        net.sourceforge.plantuml.style.Style $r22, $r30, $r36;
        net.sourceforge.plantuml.style.PName $r29, $r35;
        net.sourceforge.plantuml.style.Value $r31, $r37;
        net.sourceforge.plantuml.api.ThemeStyle $r32, $r38;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r33, $r39;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageTips;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.ILeaf;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        r5 := @parameter2: net.sourceforge.plantuml.svek.Bibliotekon;

        r18 := @parameter3: net.sourceforge.plantuml.UmlDiagramType;

        $r3 = staticinvoke <net.sourceforge.plantuml.svek.image.EntityImageNote: net.sourceforge.plantuml.ISkinParam getSkin(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.IEntity)>(r2, r1);

        specialinvoke r0.<net.sourceforge.plantuml.svek.AbstractEntityImage: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.ISkinParam)>(r1, $r3);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: double ySpacing> = 10.0;

        $r4 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r4.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.skin.rose.Rose rose> = $r4;

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: double ySpacing> = 10.0;

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ISkinParam skinParam> = r2;

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon> = r5;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label3;

        $r19 = virtualinvoke r18.<net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.style.SName getStyleName()>();

        $r20 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition(net.sourceforge.plantuml.style.SName)>($r19);

        $r21 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r22 = virtualinvoke $r20.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r21);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.Style style> = $r22;

        $r23 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r24 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r25 = virtualinvoke $r23.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r24);

        if $r25 != null goto label1;

        $r36 = r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.Style style>;

        $r35 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName BackGroundColor>;

        $r37 = virtualinvoke $r36.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r35);

        $r38 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r39 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r40 = interfaceinvoke $r37.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r38, $r39);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ugraphic.color.HColor noteBackgroundColor> = $r40;

        goto label2;

     label1:
        $r26 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r27 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r28 = virtualinvoke $r26.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r27);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ugraphic.color.HColor noteBackgroundColor> = $r28;

     label2:
        $r30 = r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.Style style>;

        $r29 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r31 = virtualinvoke $r30.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r29);

        $r32 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r33 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r34 = interfaceinvoke $r31.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r32, $r33);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = $r34;

        goto label6;

     label3:
        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.Style style> = null;

        $r6 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r7 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r7);

        if $r8 != null goto label4;

        $r16 = r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r15 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBackground>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r2, $r15);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ugraphic.color.HColor noteBackgroundColor> = $r17;

        goto label5;

     label4:
        $r9 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.graphic.color.Colors getColors()>();

        $r10 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r11 = virtualinvoke $r9.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r10);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ugraphic.color.HColor noteBackgroundColor> = $r11;

     label5:
        $r13 = r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.skin.rose.Rose rose>;

        $r12 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.skin.rose.Rose: net.sourceforge.plantuml.ugraphic.color.HColor getHtmlColor(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ColorParam)>(r2, $r12);

        r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ugraphic.color.HColor borderColor> = $r14;

     label6:
        return;
    }

    private net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinition(net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.svek.image.EntityImageTips r6;

        r6 := @this: net.sourceforge.plantuml.svek.image.EntityImageTips;

        r3 := @parameter0: net.sourceforge.plantuml.style.SName;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r0[2] = r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName note>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private net.sourceforge.plantuml.command.Position getPosition()
    {
        net.sourceforge.plantuml.svek.image.EntityImageTips r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1;
        java.lang.String $r2, $r4;
        net.sourceforge.plantuml.command.Position $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageTips;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r3 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.command.Position: java.lang.String name()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>($r4);

        if $z0 == 0 goto label1;

        $r6 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT>;

        return $r6;

     label1:
        $r5 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position LEFT>;

        return $r5;
    }

    public net.sourceforge.plantuml.svek.ShapeType getShapeType()
    {
        net.sourceforge.plantuml.svek.ShapeType $r0;
        net.sourceforge.plantuml.svek.image.EntityImageTips r1;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageTips;

        $r0 = <net.sourceforge.plantuml.svek.ShapeType: net.sourceforge.plantuml.svek.ShapeType RECTANGLE>;

        return $r0;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.image.EntityImageTips r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1;
        java.util.Map $r2;
        java.util.Set $r3;
        java.util.Iterator r4;
        boolean $z0;
        net.sourceforge.plantuml.Dimension2DDouble $r5;
        java.lang.Object $r6, $r8;
        java.util.Map$Entry r7;
        net.sourceforge.plantuml.cucadiagram.Display r9;
        net.sourceforge.plantuml.svek.image.Opale $r10;
        net.sourceforge.plantuml.graphic.StringBounder r11;
        net.sourceforge.plantuml.awt.geom.Dimension2D r12;
        double $d0, $d1, d2, d3, d4;

        r0 := @this: net.sourceforge.plantuml.svek.image.EntityImageTips;

        r11 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d2 = 0.0;

        d3 = 0.0;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IEntity: java.util.Map getTips()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        r9 = (net.sourceforge.plantuml.cucadiagram.Display) $r8;

        $r10 = specialinvoke r0.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.svek.image.Opale getOpale(net.sourceforge.plantuml.cucadiagram.Display)>(r9);

        r12 = virtualinvoke $r10.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r11);

        $d0 = virtualinvoke r12.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d4 = d3 + $d0;

        d3 = d4 + 10.0;

        $d1 = virtualinvoke r12.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d2 = staticinvoke <java.lang.Math: double max(double,double)>(d2, $d1);

        goto label1;

     label2:
        $r5 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r5.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d2, d3);

        return $r5;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.StringBounder r0;
        net.sourceforge.plantuml.svek.image.EntityImageTips r1;
        net.sourceforge.plantuml.svek.Bibliotekon $r2, $r5, $r8, $r12;
        net.sourceforge.plantuml.cucadiagram.IEntity $r3, r4, $r6, $r13, $r16;
        net.sourceforge.plantuml.svek.SvekNode r7, r9;
        java.awt.geom.Point2D r10, r11;
        net.sourceforge.plantuml.command.Position r15;
        java.util.Map $r17;
        java.util.Set $r18;
        java.util.Iterator r19;
        boolean $z0;
        java.lang.Object $r20, $r22, $r25;
        java.util.Map$Entry r21;
        net.sourceforge.plantuml.cucadiagram.Display r23;
        net.sourceforge.plantuml.svek.IEntityImage $r24;
        net.sourceforge.plantuml.graphic.InnerStrategy $r26;
        java.lang.String $r27;
        java.awt.geom.Rectangle2D r28;
        net.sourceforge.plantuml.svek.image.Opale r29;
        net.sourceforge.plantuml.awt.geom.Dimension2D r30;
        java.awt.geom.Point2D$Double $r31, $r34;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, d9, $d10, $d11, $d12, $d13, d14, d15, d16, d17;
        net.sourceforge.plantuml.Direction $r33, r39, $r40;
        net.sourceforge.plantuml.ugraphic.UTranslate $r36;
        byte $b0;
        java.io.PrintStream $r37;
        net.sourceforge.plantuml.ugraphic.UGraphic r38;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageTips;

        r38 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = interfaceinvoke r38.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r2 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        r4 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.Bibliotekon: net.sourceforge.plantuml.cucadiagram.IEntity getOnlyOther(net.sourceforge.plantuml.cucadiagram.IEntity)>($r3);

        $r5 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon>;

        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        r7 = virtualinvoke $r5.<net.sourceforge.plantuml.svek.Bibliotekon: net.sourceforge.plantuml.svek.SvekNode getNode(net.sourceforge.plantuml.cucadiagram.IEntity)>($r6);

        $r8 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon>;

        r9 = virtualinvoke $r8.<net.sourceforge.plantuml.svek.Bibliotekon: net.sourceforge.plantuml.svek.SvekNode getNode(net.sourceforge.plantuml.cucadiagram.IEntity)>(r4);

        r10 = virtualinvoke r7.<net.sourceforge.plantuml.svek.SvekNode: java.awt.geom.Point2D getPosition()>();

        if r9 != null goto label1;

        $r37 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r37.<java.io.PrintStream: void println(java.lang.String)>("Error in EntityImageTips");

        return;

     label1:
        r11 = virtualinvoke r9.<net.sourceforge.plantuml.svek.SvekNode: java.awt.geom.Point2D getPosition()>();

        $r12 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.svek.Bibliotekon bibliotekon>;

        $r13 = virtualinvoke r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        virtualinvoke $r12.<net.sourceforge.plantuml.svek.Bibliotekon: net.sourceforge.plantuml.svek.SvekNode getNode(net.sourceforge.plantuml.cucadiagram.IEntity)>($r13);

        r15 = specialinvoke r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.command.Position getPosition()>();

        r39 = virtualinvoke r15.<net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.Direction reverseDirection()>();

        d14 = 0.0;

        $r16 = virtualinvoke r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.cucadiagram.IEntity: java.util.Map getTips()>();

        $r18 = interfaceinvoke $r17.<java.util.Map: java.util.Set entrySet()>();

        r19 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r20 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r20;

        $r22 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        r23 = (net.sourceforge.plantuml.cucadiagram.Display) $r22;

        $r24 = virtualinvoke r9.<net.sourceforge.plantuml.svek.SvekNode: net.sourceforge.plantuml.svek.IEntityImage getImage()>();

        $r25 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r27 = (java.lang.String) $r25;

        $r26 = <net.sourceforge.plantuml.graphic.InnerStrategy: net.sourceforge.plantuml.graphic.InnerStrategy STRICT>;

        r28 = interfaceinvoke $r24.<net.sourceforge.plantuml.svek.IEntityImage: java.awt.geom.Rectangle2D getInnerPosition(java.lang.String,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.InnerStrategy)>($r27, r0, $r26);

        if r28 != null goto label3;

        return;

     label3:
        r29 = specialinvoke r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.svek.image.Opale getOpale(net.sourceforge.plantuml.cucadiagram.Display)>(r23);

        r30 = virtualinvoke r29.<net.sourceforge.plantuml.svek.image.Opale: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r0);

        $r31 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r30.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d1 = $d0 / 2.0;

        specialinvoke $r31.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, $d1);

        $d2 = virtualinvoke r11.<java.awt.geom.Point2D: double getX()>();

        $d3 = virtualinvoke r10.<java.awt.geom.Point2D: double getX()>();

        d15 = $d2 - $d3;

        $r33 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if r39 != $r33 goto label4;

        $b0 = d15 cmpg 0.0;

        if $b0 >= 0 goto label4;

        r39 = virtualinvoke r39.<net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction getInv()>();

     label4:
        $r40 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r39 != $r40 goto label5;

        $d13 = virtualinvoke r28.<java.awt.geom.Rectangle2D: double getMaxX()>();

        d16 = d15 + $d13;

        goto label6;

     label5:
        d16 = d15 + 4.0;

     label6:
        $d4 = virtualinvoke r11.<java.awt.geom.Point2D: double getY()>();

        $d5 = virtualinvoke r10.<java.awt.geom.Point2D: double getY()>();

        $d6 = $d4 - $d5;

        $d7 = $d6 - d14;

        $d8 = virtualinvoke r28.<java.awt.geom.Rectangle2D: double getCenterY()>();

        d9 = $d7 + $d8;

        $r34 = new java.awt.geom.Point2D$Double;

        specialinvoke $r34.<java.awt.geom.Point2D$Double: void <init>(double,double)>(d16, d9);

        virtualinvoke r29.<net.sourceforge.plantuml.svek.image.Opale: void setOpale(net.sourceforge.plantuml.Direction,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r39, $r31, $r34);

        virtualinvoke r29.<net.sourceforge.plantuml.svek.image.Opale: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r38);

        $d10 = virtualinvoke r30.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d11 = $d10 + 10.0;

        $r36 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d11);

        r38 = interfaceinvoke r38.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r36);

        $d12 = virtualinvoke r30.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d17 = d14 + $d12;

        d14 = d17 + 10.0;

        goto label2;

     label7:
        return;
    }

    private net.sourceforge.plantuml.svek.image.Opale getOpale(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.ugraphic.UStroke $r0, r19;
        boolean $z0, $z1;
        net.sourceforge.plantuml.svek.image.EntityImageTips r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r7, $r13, $r16, $r22;
        net.sourceforge.plantuml.cucadiagram.IEntity $r3;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r4;
        net.sourceforge.plantuml.graphic.FontConfiguration $r5, r20;
        net.sourceforge.plantuml.FontParam $r6, $r21;
        net.sourceforge.plantuml.cucadiagram.Display r8;
        net.sourceforge.plantuml.graphic.TextBlock r9;
        net.sourceforge.plantuml.style.PName $r10;
        net.sourceforge.plantuml.style.Style $r11, $r14, $r18, $r25;
        net.sourceforge.plantuml.style.Value $r12;
        net.sourceforge.plantuml.api.ThemeStyle $r15;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r17;
        double d0, $d1;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r23;
        net.sourceforge.plantuml.LineBreakStrategy $r24;
        net.sourceforge.plantuml.svek.image.Opale $r26;
        net.sourceforge.plantuml.ugraphic.color.HColor $r27, $r28;

        r1 := @this: net.sourceforge.plantuml.svek.image.EntityImageTips;

        r8 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $r0 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        r19 = $r0;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r11 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.Style style>;

        $r10 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName Shadowing>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r10);

        d0 = interfaceinvoke $r12.<net.sourceforge.plantuml.style.Value: double asDouble()>();

        $r14 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.Style style>;

        $r13 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r15 = interfaceinvoke $r13.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r16 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r20 = virtualinvoke $r14.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r15, $r17);

        $r18 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.Style style>;

        r19 = virtualinvoke $r18.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        goto label4;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.cucadiagram.IEntity getEntity()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()>();

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: boolean shadowing(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r4);

        if $z1 == 0 goto label2;

        $d1 = 4.0;

        goto label3;

     label2:
        $d1 = 0.0;

     label3:
        d0 = $d1;

        $r5 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r7 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r6 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        specialinvoke $r5.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r7, $r6, null);

        r20 = $r5;

     label4:
        $r21 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        $r22 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r23 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r24 = <net.sourceforge.plantuml.LineBreakStrategy: net.sourceforge.plantuml.LineBreakStrategy NONE>;

        $r25 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.style.Style style>;

        r9 = staticinvoke <net.sourceforge.plantuml.cucadiagram.BodyFactory: net.sourceforge.plantuml.graphic.TextBlock create3(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.style.Style)>(r8, $r21, $r22, $r23, r20, $r24, $r25);

        $r26 = new net.sourceforge.plantuml.svek.image.Opale;

        $r27 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ugraphic.color.HColor borderColor>;

        $r28 = r1.<net.sourceforge.plantuml.svek.image.EntityImageTips: net.sourceforge.plantuml.ugraphic.color.HColor noteBackgroundColor>;

        specialinvoke $r26.<net.sourceforge.plantuml.svek.image.Opale: void <init>(double,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.graphic.TextBlock,boolean,net.sourceforge.plantuml.ugraphic.UStroke)>(d0, $r27, $r28, r9, 1, r19);

        return $r26;
    }
}
