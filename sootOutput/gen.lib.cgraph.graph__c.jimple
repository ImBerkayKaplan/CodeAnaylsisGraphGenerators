public class gen.lib.cgraph.graph__c extends java.lang.Object
{
    public static smetana.core.CFunction agraphidcmpf;

    public void <init>()
    {
        gen.lib.cgraph.graph__c r0;

        r0 := @this: gen.lib.cgraph.graph__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static h.ST_Agclos_s agclos(h.ST_Agdisc_s)
    {
        h.ST_Agdisc_s r0, $r19, $r21;
        smetana.core.Z $r1, $r5;
        smetana.core.__ptr__ r3;
        h.ST_Agclos_s r4;
        h.ST_Agiddisc_s $r7, $r22;
        h.ST_Agmemdisc_s $r8, $r11;
        java.lang.Throwable $r9;
        smetana.core.CFunction $r12, $r15;
        java.lang.Object[] $r13, $r16;
        java.lang.Object $r14, $r18;
        smetana.core.size_t $r17;
        h.ST_Agdstate_s $r20;
        boolean $z0;

        r0 := @parameter0: h.ST_Agdisc_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bb2bu9iyqx0u6xx44l282vmch", "agclos");

     label1:
        if r0 == null goto label2;

        $r8 = r0.<h.ST_Agdisc_s: h.ST_Agmemdisc_s mem>;

        if $r8 == null goto label2;

        $r11 = r0.<h.ST_Agdisc_s: h.ST_Agmemdisc_s mem>;

        goto label3;

     label2:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r11 = $r1.<smetana.core.Z: h.ST_Agmemdisc_s AgMemDisc>;

     label3:
        $r12 = $r11.<h.ST_Agmemdisc_s: smetana.core.CFunction open>;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = r0;

        $r14 = interfaceinvoke $r12.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r13);

        r3 = (smetana.core.__ptr__) $r14;

        $r15 = $r11.<h.ST_Agmemdisc_s: smetana.core.CFunction alloc>;

        $r16 = newarray (java.lang.Object)[2];

        $r16[0] = r3;

        $r17 = staticinvoke <smetana.core.JUtils: smetana.core.size_t sizeof(java.lang.Class)>(class "Lh/ST_Agclos_s;");

        $r16[1] = $r17;

        $r18 = interfaceinvoke $r15.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r16);

        r4 = (h.ST_Agclos_s) $r18;

        $r19 = r4.<h.ST_Agclos_s: h.ST_Agdisc_s disc>;

        $r19.<h.ST_Agdisc_s: h.ST_Agmemdisc_s mem> = $r11;

        $r20 = r4.<h.ST_Agclos_s: h.ST_Agdstate_s state>;

        $r20.<h.ST_Agdstate_s: smetana.core.__ptr__ mem> = r3;

        $r21 = r4.<h.ST_Agclos_s: h.ST_Agdisc_s disc>;

        if r0 == null goto label4;

        $r7 = r0.<h.ST_Agdisc_s: h.ST_Agiddisc_s id>;

        if $r7 == null goto label4;

        $r22 = r0.<h.ST_Agdisc_s: h.ST_Agiddisc_s id>;

        goto label5;

     label4:
        $r5 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r22 = $r5.<smetana.core.Z: h.ST_Agiddisc_s AgIdDisc>;

     label5:
        $r21.<h.ST_Agdisc_s: h.ST_Agiddisc_s id> = $r22;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(int)>(0);

        r4.<h.ST_Agclos_s: boolean callbacks_enabled> = $z0;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bb2bu9iyqx0u6xx44l282vmch", "agclos");

        return r4;

     label7:
        $r9 := @caughtexception;

     label8:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bb2bu9iyqx0u6xx44l282vmch", "agclos");

        throw $r9;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public static h.ST_Agraph_s agopen(smetana.core.CString, h.ST_Agdesc_s, h.ST_Agdisc_s)
    {
        smetana.core.CString r0;
        h.ST_Agdesc_s r1, $r4;
        smetana.core.__struct__ $r2;
        h.ST_Agdisc_s r3;
        h.ST_Agraph_s $r5;

        r0 := @parameter0: smetana.core.CString;

        r1 := @parameter1: h.ST_Agdesc_s;

        r3 := @parameter2: h.ST_Agdisc_s;

        $r2 = virtualinvoke r1.<h.ST_Agdesc_s: smetana.core.__struct__ copy()>();

        $r4 = (h.ST_Agdesc_s) $r2;

        $r5 = staticinvoke <gen.lib.cgraph.graph__c: h.ST_Agraph_s agopen_w_(smetana.core.CString,h.ST_Agdesc_s,h.ST_Agdisc_s)>(r0, $r4, r3);

        return $r5;
    }

    private static h.ST_Agraph_s agopen_w_(smetana.core.CString, h.ST_Agdesc_s, h.ST_Agdisc_s)
    {
        int[] r0;
        h.ST_Agdisc_s r1, $r3, $r16;
        h.ST_Agclos_s r2, $r14, $r15;
        h.ST_Agmemdisc_s $r4;
        java.lang.Object[] $r5, $r18;
        h.ST_Agdstate_s $r6, $r20;
        smetana.core.__ptr__ $r7, $r22;
        smetana.core.CFunction $r8, $r19;
        smetana.core.size_t $r9;
        java.lang.Object $r10, $r21;
        h.ST_Agdesc_s r11, $r12, $r13;
        boolean $z0, $z1;
        int $i0, $i1, $i2;
        h.ST_Agiddisc_s $r17;
        smetana.core.CString r23;
        java.lang.Throwable $r25;
        h.ST_Agraph_s r27, r28;

        r23 := @parameter0: smetana.core.CString;

        r11 := @parameter1: h.ST_Agdesc_s;

        r1 := @parameter2: h.ST_Agdisc_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("d5yqn56yii8cdoahswt4n6bug", "agopen");

     label1:
        r0 = newarray (int)[1];

        r2 = staticinvoke <gen.lib.cgraph.graph__c: h.ST_Agclos_s agclos(h.ST_Agdisc_s)>(r1);

        $r3 = r2.<h.ST_Agclos_s: h.ST_Agdisc_s disc>;

        $r4 = $r3.<h.ST_Agdisc_s: h.ST_Agmemdisc_s mem>;

        $r8 = $r4.<h.ST_Agmemdisc_s: smetana.core.CFunction alloc>;

        $r5 = newarray (java.lang.Object)[2];

        $r6 = r2.<h.ST_Agclos_s: h.ST_Agdstate_s state>;

        $r7 = $r6.<h.ST_Agdstate_s: smetana.core.__ptr__ mem>;

        $r5[0] = $r7;

        $r9 = staticinvoke <smetana.core.JUtils: smetana.core.size_t sizeof(java.lang.Class)>(class "Lh/ST_Agraph_s;");

        $r5[1] = $r9;

        $r10 = interfaceinvoke $r8.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r5);

        r27 = (h.ST_Agraph_s) $r10;

        staticinvoke <smetana.core.Macro: void AGTYPE(h.ST_Agobj_s,int)>(r27, 0);

        r27.<h.ST_Agraph_s: h.ST_Agclos_s clos> = r2;

        $r12 = r27.<h.ST_Agraph_s: h.ST_Agdesc_s desc>;

        virtualinvoke $r12.<h.ST_Agdesc_s: void ___(smetana.core.__struct__)>(r11);

        $r13 = r27.<h.ST_Agraph_s: h.ST_Agdesc_s desc>;

        $z0 = staticinvoke <smetana.core.Macro: boolean N(int)>(0);

        $i0 = staticinvoke <smetana.core.Macro: int ASINT(boolean)>($z0);

        $r13.<h.ST_Agdesc_s: int maingraph> = $i0;

        r27.<h.ST_Agraph_s: h.ST_Agraph_s root> = r27;

        $r14 = r27.<h.ST_Agraph_s: h.ST_Agclos_s clos>;

        $r20 = $r14.<h.ST_Agclos_s: h.ST_Agdstate_s state>;

        $r15 = r27.<h.ST_Agraph_s: h.ST_Agclos_s clos>;

        $r16 = $r15.<h.ST_Agclos_s: h.ST_Agdisc_s disc>;

        $r17 = $r16.<h.ST_Agdisc_s: h.ST_Agiddisc_s id>;

        $r19 = $r17.<h.ST_Agiddisc_s: smetana.core.CFunction open>;

        $r18 = newarray (java.lang.Object)[2];

        $r18[0] = r27;

        $r18[1] = r1;

        $r21 = interfaceinvoke $r19.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r18);

        $r22 = (smetana.core.__ptr__) $r21;

        $r20.<h.ST_Agdstate_s: smetana.core.__ptr__ id> = $r22;

        $z1 = staticinvoke <smetana.core.Macro: boolean N(int)>(0);

        $i1 = staticinvoke <gen.lib.cgraph.id__c: int agmapnametoid(h.ST_Agraph_s,int,smetana.core.CString,int[],boolean)>(r27, 0, r23, r0, $z1);

        if $i1 == 0 goto label2;

        $i2 = r0[0];

        staticinvoke <smetana.core.Macro: void AGID(h.ST_Agobj_s,int)>(r27, $i2);

     label2:
        r28 = staticinvoke <gen.lib.cgraph.graph__c: h.ST_Agraph_s agopen1(h.ST_Agraph_s)>(r27);

        staticinvoke <gen.lib.cgraph.id__c: void agregister(h.ST_Agraph_s,int,java.lang.Object)>(r28, 0, r28);

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d5yqn56yii8cdoahswt4n6bug", "agopen");

        return r28;

     label4:
        $r25 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d5yqn56yii8cdoahswt4n6bug", "agopen");

        throw $r25;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static h.ST_Agraph_s agopen1(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0, $r11, $r16, r26;
        smetana.core.Z $r1, $r3, $r6, $r8, $r12, $r13, $r17, $r18, $r21, $r23, $r35, $r38;
        h.ST_dtdisc_s $r2, $r7, $r22, $r43, $r44;
        h.ST_dtmethod_s $r4, $r9, $r14, $r19, $r24;
        h.ST_dt_s $r5, $r10, $r15, $r20, $r25, $r29, $r31;
        boolean $z0, $z1, $z2;
        h.ST_Agdesc_s $r28;
        int $i0, $i1;
        java.lang.Object[] $r30;
        smetana.core.CFunction $r32;
        java.lang.Integer $r33;
        java.lang.Throwable $r41;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8jyhwfdfm0a877qfz8cjlb8rk", "agopen1");

     label01:
        $r1 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r2 = $r1.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_seq_disc>;

        $r3 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r4 = $r3.<smetana.core.Z: h.ST_dtmethod_s Dttree>;

        $r5 = staticinvoke <gen.lib.cgraph.utils__c: h.ST_dt_s agdtopen(h.ST_Agraph_s,h.ST_dtdisc_s,h.ST_dtmethod_s)>(r0, $r2, $r4);

        r0.<h.ST_Agraph_s: h.ST_dt_s n_seq> = $r5;

        $r6 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r7 = $r6.<smetana.core.Z: h.ST_dtdisc_s Ag_subnode_id_disc>;

        $r8 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r9 = $r8.<smetana.core.Z: h.ST_dtmethod_s Dttree>;

        $r10 = staticinvoke <gen.lib.cgraph.utils__c: h.ST_dt_s agdtopen(h.ST_Agraph_s,h.ST_dtdisc_s,h.ST_dtmethod_s)>(r0, $r7, $r9);

        r0.<h.ST_Agraph_s: h.ST_dt_s n_id> = $r10;

        $r11 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r0);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r0, $r11);

        if $z0 == 0 goto label02;

        $r38 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r43 = $r38.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_seq_disc>;

        goto label03;

     label02:
        $r12 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r43 = $r12.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_seq_disc>;

     label03:
        $r13 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r14 = $r13.<smetana.core.Z: h.ST_dtmethod_s Dttree>;

        $r15 = staticinvoke <gen.lib.cgraph.utils__c: h.ST_dt_s agdtopen(h.ST_Agraph_s,h.ST_dtdisc_s,h.ST_dtmethod_s)>(r0, $r43, $r14);

        r0.<h.ST_Agraph_s: h.ST_dt_s e_seq> = $r15;

        $r16 = staticinvoke <gen.lib.cgraph.obj__c: h.ST_Agraph_s agroot(h.ST_Agobj_s)>(r0);

        $z1 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>(r0, $r16);

        if $z1 == 0 goto label04;

        $r35 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r44 = $r35.<smetana.core.Z: h.ST_dtdisc_s Ag_mainedge_id_disc>;

        goto label05;

     label04:
        $r17 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r44 = $r17.<smetana.core.Z: h.ST_dtdisc_s Ag_subedge_id_disc>;

     label05:
        $r18 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r19 = $r18.<smetana.core.Z: h.ST_dtmethod_s Dttree>;

        $r20 = staticinvoke <gen.lib.cgraph.utils__c: h.ST_dt_s agdtopen(h.ST_Agraph_s,h.ST_dtdisc_s,h.ST_dtmethod_s)>(r0, $r44, $r19);

        r0.<h.ST_Agraph_s: h.ST_dt_s e_id> = $r20;

        $r21 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r22 = $r21.<smetana.core.Z: h.ST_dtdisc_s Ag_subgraph_id_disc>;

        $r23 = staticinvoke <smetana.core.Z: smetana.core.Z z()>();

        $r24 = $r23.<smetana.core.Z: h.ST_dtmethod_s Dttree>;

        $r25 = staticinvoke <gen.lib.cgraph.utils__c: h.ST_dt_s agdtopen(h.ST_Agraph_s,h.ST_dtdisc_s,h.ST_dtmethod_s)>(r0, $r22, $r24);

        r0.<h.ST_Agraph_s: h.ST_dt_s g_dict> = $r25;

        r26 = staticinvoke <gen.lib.cgraph.subg__c: h.ST_Agraph_s agparent(h.ST_Agraph_s)>(r0);

        if r26 == null goto label06;

        $i1 = staticinvoke <gen.lib.cgraph.graph__c: int agnextseq(h.ST_Agraph_s,int)>(r26, 0);

        staticinvoke <smetana.core.Macro: void AGSEQ(h.ST_Agobj_s,int)>(r0, $i1);

        $r29 = r26.<h.ST_Agraph_s: h.ST_dt_s g_dict>;

        $r32 = $r29.<h.ST_dt_s: smetana.core.CFunction searchf>;

        $r30 = newarray (java.lang.Object)[3];

        $r31 = r26.<h.ST_Agraph_s: h.ST_dt_s g_dict>;

        $r30[0] = $r31;

        $r30[1] = r0;

        $r33 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        $r30[2] = $r33;

        interfaceinvoke $r32.<smetana.core.CFunction: java.lang.Object exe(java.lang.Object[])>($r30);

     label06:
        $z2 = staticinvoke <smetana.core.Macro: boolean N(java.lang.Object)>(r26);

        if $z2 != 0 goto label07;

        $r28 = r26.<h.ST_Agraph_s: h.ST_Agdesc_s desc>;

        $i0 = $r28.<h.ST_Agdesc_s: int has_attrs>;

        if $i0 == 0 goto label08;

     label07:
        staticinvoke <gen.lib.cgraph.attr__c: void agraphattr_init(h.ST_Agraph_s)>(r0);

     label08:
        staticinvoke <gen.lib.cgraph.obj__c: void agmethod_init(h.ST_Agraph_s,smetana.core.__ptr__)>(r0, r0);

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8jyhwfdfm0a877qfz8cjlb8rk", "agopen1");

        return r0;

     label10:
        $r41 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8jyhwfdfm0a877qfz8cjlb8rk", "agopen1");

        throw $r41;

        catch java.lang.Throwable from label01 to label09 with label10;
    }

    public static int agnextseq(h.ST_Agraph_s, int)
    {
        h.ST_Agraph_s r0;
        h.ST_Agclos_s $r1, $r3;
        int i0, i2, i3;
        int[] $r2, $r4;
        java.lang.Throwable $r5;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("axmdmml95l55vlp1vqmh0v5sn", "agnextseq");

     label1:
        $r1 = r0.<h.ST_Agraph_s: h.ST_Agclos_s clos>;

        $r2 = $r1.<h.ST_Agclos_s: int[] seq>;

        i2 = $r2[i0];

        i3 = i2 + 1;

        $r3 = r0.<h.ST_Agraph_s: h.ST_Agclos_s clos>;

        $r4 = $r3.<h.ST_Agclos_s: int[] seq>;

        $r4[i0] = i3;

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("axmdmml95l55vlp1vqmh0v5sn", "agnextseq");

        return i3;

     label3:
        $r5 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("axmdmml95l55vlp1vqmh0v5sn", "agnextseq");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static int agnnodes(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        h.ST_dt_s $r1;
        int i0;
        java.lang.Throwable $r2;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("688euygrkbl10cveflgwalo2n", "agnnodes");

     label1:
        $r1 = r0.<h.ST_Agraph_s: h.ST_dt_s n_id>;

        i0 = staticinvoke <gen.lib.cdt.dtsize__c: int dtsize_(h.ST_dt_s)>($r1);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("688euygrkbl10cveflgwalo2n", "agnnodes");

        return i0;

     label3:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("688euygrkbl10cveflgwalo2n", "agnnodes");

        throw $r2;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static int agnedges(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        int $i1, i2;
        java.lang.Throwable $r1;
        h.ST_Agnode_s r3;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8zjne7uv8rfpmbv5t96zhnr4u", "agnedges");

     label1:
        i2 = 0;

        r3 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agfstnode(h.ST_Agraph_s)>(r0);

     label2:
        if r3 == null goto label3;

        $i1 = staticinvoke <gen.lib.cgraph.graph__c: int agdegree(h.ST_Agraph_s,h.ST_Agnode_s,boolean,boolean)>(r0, r3, 0, 1);

        i2 = i2 + $i1;

        r3 = staticinvoke <gen.lib.cgraph.node__c: h.ST_Agnode_s agnxtnode(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r3);

        goto label2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8zjne7uv8rfpmbv5t96zhnr4u", "agnedges");

        return i2;

     label4:
        $r1 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8zjne7uv8rfpmbv5t96zhnr4u", "agnedges");

        throw $r1;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static boolean agisdirected(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        h.ST_Agdesc_s $r1;
        int $i0;
        java.lang.Throwable $r2;
        boolean $z1;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("blvn1w3v0icnucu5m5xvbrba1", "agisdirected");

     label1:
        $r1 = r0.<h.ST_Agraph_s: h.ST_Agdesc_s desc>;

        $i0 = $r1.<h.ST_Agdesc_s: int directed>;

        if $i0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("blvn1w3v0icnucu5m5xvbrba1", "agisdirected");

        return $z1;

     label4:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("blvn1w3v0icnucu5m5xvbrba1", "agisdirected");

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static boolean agisundirected(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        boolean $z0, z1;
        java.lang.Throwable $r1;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("8thgds4eioot64flko26m8ns0", "agisundirected");

     label1:
        $z0 = staticinvoke <gen.lib.cgraph.graph__c: boolean agisdirected(h.ST_Agraph_s)>(r0);

        z1 = staticinvoke <smetana.core.Macro: boolean NOT(boolean)>($z0);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8thgds4eioot64flko26m8ns0", "agisundirected");

        return z1;

     label3:
        $r1 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("8thgds4eioot64flko26m8ns0", "agisundirected");

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static boolean agisstrict(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        h.ST_Agdesc_s $r1;
        int $i0;
        java.lang.Throwable $r2;
        boolean $z1;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("9qgdebmdfrcfjm394bg59a7y5", "agisstrict");

     label1:
        $r1 = r0.<h.ST_Agraph_s: h.ST_Agdesc_s desc>;

        $i0 = $r1.<h.ST_Agdesc_s: int strict>;

        if $i0 == 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9qgdebmdfrcfjm394bg59a7y5", "agisstrict");

        return $z1;

     label4:
        $r2 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("9qgdebmdfrcfjm394bg59a7y5", "agisstrict");

        throw $r2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static int cnt(h.ST_dt_s, smetana.core.CStarStar)
    {
        h.ST_dt_s r0;
        smetana.core.CStarStar r1;
        java.lang.Object $r2;
        h.ST_dtlink_s $r3, $r4;
        int i1;
        java.lang.Throwable $r5;

        r0 := @parameter0: h.ST_dt_s;

        r1 := @parameter1: smetana.core.CStarStar;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("abaldeo2ie6zi60cazxp7rv47", "cnt");

     label1:
        $r2 = virtualinvoke r1.<smetana.core.CStarStar: java.lang.Object star()>();

        $r3 = (h.ST_dtlink_s) $r2;

        staticinvoke <gen.lib.cdt.dtrestore__c: int dtrestore(h.ST_dt_s,h.ST_dtlink_s)>(r0, $r3);

        i1 = staticinvoke <gen.lib.cdt.dtsize__c: int dtsize_(h.ST_dt_s)>(r0);

        $r4 = staticinvoke <gen.lib.cdt.dtextract__c: h.ST_dtlink_s dtextract(h.ST_dt_s)>(r0);

        virtualinvoke r1.<smetana.core.CStarStar: void star(java.lang.Object)>($r4);

     label2:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("abaldeo2ie6zi60cazxp7rv47", "cnt");

        return i1;

     label3:
        $r5 := @caughtexception;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("abaldeo2ie6zi60cazxp7rv47", "cnt");

        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static int agdegree(h.ST_Agraph_s, h.ST_Agnode_s, boolean, boolean)
    {
        h.ST_Agraph_s r0;
        h.ST_Agnode_s r1;
        h.ST_Agsubnode_s r2;
        boolean z0, z1;
        h.ST_dt_s $r3, $r5;
        smetana.core.CStarStar $r4, $r6;
        int $i1, $i2, i3;
        java.lang.Throwable $r7;

        r0 := @parameter0: h.ST_Agraph_s;

        r1 := @parameter1: h.ST_Agnode_s;

        z1 := @parameter2: boolean;

        z0 := @parameter3: boolean;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("2bz40qf0qo7pd6er1ut25gthp", "agdegree");

     label1:
        i3 = 0;

        r2 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agsubnode_s agsubrep(h.ST_Agraph_s,h.ST_Agnode_s)>(r0, r1);

        if r2 == null goto label3;

        if z0 == 0 goto label2;

        $r5 = r0.<h.ST_Agraph_s: h.ST_dt_s e_seq>;

        $r6 = virtualinvoke r2.<h.ST_Agsubnode_s: smetana.core.CStarStar out_seq_AMP()>();

        $i2 = staticinvoke <gen.lib.cgraph.graph__c: int cnt(h.ST_dt_s,smetana.core.CStarStar)>($r5, $r6);

        i3 = 0 + $i2;

     label2:
        if z1 == 0 goto label3;

        $r3 = r0.<h.ST_Agraph_s: h.ST_dt_s e_seq>;

        $r4 = virtualinvoke r2.<h.ST_Agsubnode_s: smetana.core.CStarStar in_seq_AMP()>();

        $i1 = staticinvoke <gen.lib.cgraph.graph__c: int cnt(h.ST_dt_s,smetana.core.CStarStar)>($r3, $r4);

        i3 = i3 + $i1;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2bz40qf0qo7pd6er1ut25gthp", "agdegree");

        return i3;

     label4:
        $r7 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("2bz40qf0qo7pd6er1ut25gthp", "agdegree");

        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static int agraphidcmpf(h.ST_dt_s, h.ST_Agraph_s, h.ST_Agraph_s, h.ST_dtdisc_s)
    {
        h.ST_Agraph_s r0, r2;
        int $i0, $i1, i2;
        java.lang.Throwable $r4;
        h.ST_dt_s r6;
        h.ST_dtdisc_s r7;
        byte $b4;

        r6 := @parameter0: h.ST_dt_s;

        r0 := @parameter1: h.ST_Agraph_s;

        r2 := @parameter2: h.ST_Agraph_s;

        r7 := @parameter3: h.ST_dtdisc_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("dhbtfzzp8n5yygqmhmluo9bxl", "agraphidcmpf");

     label1:
        $i0 = staticinvoke <smetana.core.Macro: int AGID(h.ST_Agobj_s)>(r0);

        $i1 = staticinvoke <smetana.core.Macro: int AGID(h.ST_Agobj_s)>(r2);

        i2 = $i0 - $i1;

        if i2 != 0 goto label2;

        $b4 = 0;

        goto label4;

     label2:
        if i2 >= 0 goto label3;

        $b4 = -1;

        goto label4;

     label3:
        $b4 = 1;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dhbtfzzp8n5yygqmhmluo9bxl", "agraphidcmpf");

        return $b4;

     label5:
        $r4 := @caughtexception;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("dhbtfzzp8n5yygqmhmluo9bxl", "agraphidcmpf");

        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        gen.lib.cgraph.graph__c$1 $r0;

        $r0 = new gen.lib.cgraph.graph__c$1;

        specialinvoke $r0.<gen.lib.cgraph.graph__c$1: void <init>(java.lang.String)>("agraphidcmpf");

        <gen.lib.cgraph.graph__c: smetana.core.CFunction agraphidcmpf> = $r0;

        return;
    }
}
