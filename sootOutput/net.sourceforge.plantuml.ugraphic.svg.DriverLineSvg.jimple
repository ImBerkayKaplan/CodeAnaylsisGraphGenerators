public class net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UDriver
{
    private final net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer;

    public void <init>(net.sourceforge.plantuml.ugraphic.ClipContainer)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg r0;
        net.sourceforge.plantuml.ugraphic.ClipContainer r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.ClipContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer> = r1;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.ULine, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, net.sourceforge.plantuml.svg.SvgGraphics)
    {
        net.sourceforge.plantuml.ugraphic.ULine r0;
        double $d0, $d1, d2, d3, d4, d5, $d6, $d7;
        net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg r1;
        net.sourceforge.plantuml.ugraphic.ClipContainer $r2;
        net.sourceforge.plantuml.ugraphic.UClip r3;
        net.sourceforge.plantuml.ugraphic.UParam r4;
        boolean $z0;
        net.sourceforge.plantuml.svg.SvgGraphics r5;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r6;
        java.lang.String $r7, $r8, $r9, $r11, $r20;
        net.sourceforge.plantuml.ugraphic.color.HColor $r10, r14, $r16;
        java.awt.geom.Line2D$Double $r12, r13;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient r15;
        net.sourceforge.plantuml.ugraphic.UStroke $r18, $r19;

        r1 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.ULine;

        d2 := @parameter1: double;

        d3 := @parameter2: double;

        r6 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r4 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r5 := @parameter5: net.sourceforge.plantuml.svg.SvgGraphics;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.ULine: double getDX()>();

        d4 = d2 + $d0;

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.ULine: double getDY()>();

        d5 = d3 + $d1;

        $r2 = r1.<net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg: net.sourceforge.plantuml.ugraphic.ClipContainer clipContainer>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ugraphic.ClipContainer: net.sourceforge.plantuml.ugraphic.UClip getClip()>();

        if r3 == null goto label2;

        $r12 = new java.awt.geom.Line2D$Double;

        specialinvoke $r12.<java.awt.geom.Line2D$Double: void <init>(double,double,double,double)>(d2, d3, d4, d5);

        r13 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.UClip: java.awt.geom.Line2D$Double getClippedLine(java.awt.geom.Line2D$Double)>($r12);

        if r13 != null goto label1;

        return;

     label1:
        d2 = r13.<java.awt.geom.Line2D$Double: double x1>;

        d3 = r13.<java.awt.geom.Line2D$Double: double y1>;

        d4 = r13.<java.awt.geom.Line2D$Double: double x2>;

        d5 = r13.<java.awt.geom.Line2D$Double: double y2>;

     label2:
        r14 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        $z0 = r14 instanceof net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        if $z0 == 0 goto label3;

        r15 = (net.sourceforge.plantuml.ugraphic.color.HColorGradient) r14;

        $r10 = virtualinvoke r15.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: net.sourceforge.plantuml.ugraphic.color.HColor getColor1()>();

        $r11 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>($r10);

        virtualinvoke r5.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeColor(java.lang.String)>($r11);

        goto label7;

     label3:
        if r14 != null goto label4;

        $r16 = null;

        goto label5;

     label4:
        $r16 = interfaceinvoke r14.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.color.HColor darkSchemeTheme()>();

     label5:
        if $r16 != r14 goto label6;

        $r9 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r14);

        virtualinvoke r5.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeColor(java.lang.String)>($r9);

        goto label7;

     label6:
        $r7 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>(r14);

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.color.ColorMapper: java.lang.String toSvg(net.sourceforge.plantuml.ugraphic.color.HColor)>($r16);

        virtualinvoke r5.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeColor(java.lang.String,java.lang.String)>($r7, $r8);

     label7:
        $r18 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $d6 = virtualinvoke $r18.<net.sourceforge.plantuml.ugraphic.UStroke: double getThickness()>();

        $r19 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UParam: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r20 = virtualinvoke $r19.<net.sourceforge.plantuml.ugraphic.UStroke: java.lang.String getDasharraySvg()>();

        virtualinvoke r5.<net.sourceforge.plantuml.svg.SvgGraphics: void setStrokeWidth(double,java.lang.String)>($d6, $r20);

        $d7 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.ULine: double getDeltaShadow()>();

        virtualinvoke r5.<net.sourceforge.plantuml.svg.SvgGraphics: void svgLine(double,double,double,double,double)>(d2, d3, d4, d5, $d7);

        return;
    }

    public volatile void draw(net.sourceforge.plantuml.ugraphic.UShape, double, double, net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.UParam, java.lang.Object)
    {
        net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg r0;
        net.sourceforge.plantuml.ugraphic.UShape r1;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r2;
        net.sourceforge.plantuml.ugraphic.UParam r3;
        java.lang.Object r4;
        net.sourceforge.plantuml.svg.SvgGraphics $r5;
        net.sourceforge.plantuml.ugraphic.ULine $r6;

        r0 := @this: net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.UParam;

        r4 := @parameter5: java.lang.Object;

        $r6 = (net.sourceforge.plantuml.ugraphic.ULine) r1;

        $r5 = (net.sourceforge.plantuml.svg.SvgGraphics) r4;

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.svg.DriverLineSvg: void draw(net.sourceforge.plantuml.ugraphic.ULine,double,double,net.sourceforge.plantuml.ugraphic.color.ColorMapper,net.sourceforge.plantuml.ugraphic.UParam,net.sourceforge.plantuml.svg.SvgGraphics)>($r6, d0, d1, r2, r3, $r5);

        return;
    }
}
