public class net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity;

        $r1 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    private static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r19, $r22;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r6, $r34, $r46;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r31, $r32, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r47, $r48, $r49, $r50, $r51, $r52;
        net.sourceforge.plantuml.command.regex.RegexOptional $r4, $r30, $r44;
        net.sourceforge.plantuml.command.regex.RegexOr $r5, $r33;
        java.lang.StringBuilder $r17, $r18, $r20, $r21;
        net.sourceforge.plantuml.command.regex.RegexConcat $r45, $r53;

        $r0 = class "Lnet/sourceforge/plantuml/activitydiagram/command/CommandLinkActivity;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[25];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r6 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STAR", "(\\(\\*(top)?\\))");

        $r6[0] = $r7;

        $r8 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r8.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE", "([%pLN][%pLN_.]*)");

        $r6[1] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BAR", "(?:==+)[%s]*([%pLN_.]+)[%s]*(?:==+)");

        $r6[2] = $r9;

        $r10 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r10.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("QUOTED", "[%g]([^%g]+)[%g](?:[%s]+as[%s]+([%pLN_.]+))?");

        $r6[3] = $r10;

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>("FIRST", $r6);

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r5);

        $r2[1] = $r4;

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREOTYPE", "(\\<\\<.*\\>\\>)?");

        $r2[3] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[4] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf exp2()>();

        $r2[5] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r15;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r19 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r22);

        $r2[7] = $r16;

        $r23 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODY1", "([-.]+)");

        $r2[8] = $r23;

        $r24 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r24.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE1", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r2[9] = $r24;

        $r25 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r25.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_DIRECTION", "(\\*|left|right|up|down|le?|ri?|up?|do?)?");

        $r2[10] = $r25;

        $r26 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r26.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE2", "(?:\\[((?:#\\w+|dotted|dashed|plain|bold|hidden|norank|single|thickness=\\d+)(?:,#\\w+|,dotted|,dashed|,plain|,bold|,hidden|,norank|,single|,thickness=\\d+)*)\\])?");

        $r2[11] = $r26;

        $r27 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r27.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODY2", "([-.]*)");

        $r2[12] = $r27;

        $r28 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r28.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\>");

        $r2[13] = $r28;

        $r29 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[14] = $r29;

        $r30 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r31 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r31.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BRACKET", "\\[([^\\]*]+[^\\]]*)\\]");

        specialinvoke $r30.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r31);

        $r2[15] = $r30;

        $r32 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[16] = $r32;

        $r33 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r34 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[6];

        $r35 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r35.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STAR2", "(\\(\\*(top|\\d+)?\\))");

        $r34[0] = $r35;

        $r36 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r36.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("OPENBRACKET2", "(\\{)");

        $r34[1] = $r36;

        $r37 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r37.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE2", "([%pLN][%pLN_.]*)");

        $r34[2] = $r37;

        $r38 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r38.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("BAR2", "(?:==+)[%s]*([%pLN_.]+)[%s]*(?:==+)");

        $r34[3] = $r38;

        $r39 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r39.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("QUOTED2", "[%g]([^%g]+)[%g](?:[%s]+as[%s]+([%pLN][%pLN_.]*))?");

        $r34[4] = $r39;

        $r40 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r40.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("QUOTED_INVISIBLE2", "(\\w.*?)");

        $r34[5] = $r40;

        specialinvoke $r33.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>("FIRST2", $r34);

        $r2[17] = $r33;

        $r41 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[18] = $r41;

        $r42 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r42.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREOTYPE2", "(\\<\\<.*\\>\\>)?");

        $r2[19] = $r42;

        $r43 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[20] = $r43;

        $r44 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r45 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r46 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r47 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r47.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("in");

        $r46[0] = $r47;

        $r48 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r46[1] = $r48;

        $r49 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r49.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("PARTITION2", "([%g][^%g]+[%g]|\\S+)");

        $r46[2] = $r49;

        specialinvoke $r45.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r46);

        specialinvoke $r44.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r45);

        $r2[21] = $r44;

        $r50 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[22] = $r50;

        $r51 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf exp3()>();

        $r2[23] = $r51;

        $r52 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[24] = $r52;

        $r53 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r53;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram.ActivityDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        net.sourceforge.plantuml.cucadiagram.IEntity r2, r72;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, r9, $r10, r11, $r12, r13, $r19, r20, $r27, $r36, $r41, $r45, $r48, $r51, $r66, r71, r73, $r77;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r18, $r24, $r25, $r26, $r31, $r32, $r33, $r34, $r35;
        int $i0, i1;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.LinkType $r21, r75;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r22, $r23;
        net.sourceforge.plantuml.cucadiagram.Link $r28, r76;
        net.sourceforge.plantuml.ISkinParam $r29, $r39, $r44, $r54, $r56, $r61, $r63;
        net.sourceforge.plantuml.style.StyleBuilder $r30;
        net.sourceforge.plantuml.Direction r37, $r38, $r50;
        net.sourceforge.plantuml.api.ThemeStyle $r40, $r57, $r64;
        net.sourceforge.plantuml.command.CommandExecutionResult $r42, $r59, $r68;
        net.sourceforge.plantuml.UrlBuilder $r43;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r46;
        net.sourceforge.plantuml.Url r49;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r52, $r67;
        net.sourceforge.plantuml.graphic.color.ColorType $r53, $r60;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r55, $r62;
        net.sourceforge.plantuml.ugraphic.color.HColor $r58, $r65;
        net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity r69;
        net.sourceforge.plantuml.LineLocation r70;
        net.sourceforge.plantuml.cucadiagram.Display r74;

        r69 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r70 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r1 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.cucadiagram.IEntity getEntity(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.command.regex.RegexResult,boolean)>(r0, r1, 1);

        if r2 != null goto label01;

        $r68 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("No such activity");

        return $r68;

     label01:
        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE", 0);

        if $r3 == null goto label02;

        $r66 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE", 0);

        $r67 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>($r66);

        interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r67);

     label02:
        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BACKCOLOR", 0);

        if $r4 == null goto label03;

        r71 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BACKCOLOR", 0);

        $r60 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r61 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r62 = interfaceinvoke $r61.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r63 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r64 = interfaceinvoke $r63.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r65 = virtualinvoke $r62.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r64, r71);

        interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: void setSpecificColorTOBEREMOVED(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r60, $r65);

     label03:
        r72 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.cucadiagram.IEntity getEntity(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.command.regex.RegexResult,boolean)>(r0, r1, 0);

        if r72 != null goto label04;

        $r59 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("No such activity");

        return $r59;

     label04:
        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BACKCOLOR2", 0);

        if $r5 == null goto label05;

        r73 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BACKCOLOR2", 0);

        $r53 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r54 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r55 = interfaceinvoke $r54.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r56 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r57 = interfaceinvoke $r56.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r58 = virtualinvoke $r55.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColor(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r57, r73);

        interfaceinvoke r72.<net.sourceforge.plantuml.cucadiagram.IEntity: void setSpecificColorTOBEREMOVED(net.sourceforge.plantuml.graphic.color.ColorType,net.sourceforge.plantuml.ugraphic.color.HColor)>($r53, $r58);

     label05:
        $r6 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE2", 0);

        if $r6 == null goto label06;

        $r51 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREOTYPE2", 0);

        $r52 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>($r51);

        interfaceinvoke r72.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>($r52);

     label06:
        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("BRACKET", 0);

        r74 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r7);

        $r8 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY1", 0);

        r9 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r8);

        $r10 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_BODY2", 0);

        r11 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r10);

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_DIRECTION", 0);

        r13 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandLinkClass: java.lang.String notNull(java.lang.String)>($r12);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r20 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String manageArrowForCuca(java.lang.String)>($r19);

        $i0 = virtualinvoke r20.<java.lang.String: int length()>();

        i1 = $i0 - 1;

        $z0 = virtualinvoke r13.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z0 == 0 goto label07;

        i1 = 2;

     label07:
        $r21 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        $r23 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor ARROW>;

        $r22 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        specialinvoke $r21.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r23, $r22);

        r75 = $r21;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = virtualinvoke $r27.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z1 == 0 goto label08;

        r75 = virtualinvoke $r21.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goDotted()>();

     label08:
        $r28 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r30 = interfaceinvoke $r29.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r28.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>(r2, r72, r75, r74, i1, $r30);

        r76 = $r28;

        $z2 = virtualinvoke r13.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z2 == 0 goto label09;

        virtualinvoke $r28.<net.sourceforge.plantuml.cucadiagram.Link: void setConstraint(boolean)>(0);

     label09:
        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        r37 = staticinvoke <net.sourceforge.plantuml.StringUtils: net.sourceforge.plantuml.Direction getArrowDirection(java.lang.String)>($r36);

        $r38 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r37 == $r38 goto label10;

        $r50 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction UP>;

        if r37 != $r50 goto label11;

     label10:
        r76 = virtualinvoke $r28.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Link getInv()>();

     label11:
        $r77 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        if $r77 == null goto label12;

        $r43 = new net.sourceforge.plantuml.UrlBuilder;

        $r44 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r45 = interfaceinvoke $r44.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r46 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r43.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r45, $r46);

        $r48 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        r49 = virtualinvoke $r43.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>($r48);

        virtualinvoke r76.<net.sourceforge.plantuml.cucadiagram.Link: void setUrl(net.sourceforge.plantuml.Url)>(r49);

     label12:
        $r39 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r40 = interfaceinvoke $r39.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r41 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String getLazzy(java.lang.String,int)>("ARROW_STYLE", 0);

        virtualinvoke r76.<net.sourceforge.plantuml.cucadiagram.Link: void applyStyle(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r40, $r41);

        virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>(r76);

        $r42 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r42;
    }

    static net.sourceforge.plantuml.cucadiagram.IEntity getEntity(net.sourceforge.plantuml.activitydiagram.ActivityDiagram, net.sourceforge.plantuml.command.regex.RegexResult, boolean)
    {
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String r0, $r5, r6, $r10, $r11, $r15, $r19, r20, $r24, $r28, $r29, $r33, $r37, $r46, $r47, $r66, $r71, r72, r73, r83, $r89, r90, r99, r107;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r7, $r8, $r9, $r12, $r13, $r14, $r16, $r17, $r18, $r21, $r22, $r23, $r25, $r26, $r27, $r30, $r31, $r32, $r34, $r35, $r36, $r63, $r64, $r65;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r38;
        net.sourceforge.plantuml.cucadiagram.IEntity $r39, r49, $r56, $r70, r82, r106;
        net.sourceforge.plantuml.cucadiagram.Display $r40, $r42, $r48, $r50, $r54, $r57, $r58, $r59;
        net.sourceforge.plantuml.cucadiagram.LeafType $r41, $r55, $r80, $r97;
        net.sourceforge.plantuml.cucadiagram.GroupType $r43, $r51, $r60;
        net.sourceforge.plantuml.cucadiagram.IGroup $r44, $r52, $r61;
        net.sourceforge.plantuml.cucadiagram.NamespaceStrategy $r45, $r53, $r62;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r67, $r68, $r69, r87;
        net.sourceforge.plantuml.cucadiagram.Ident r74, r77, r84, r91, r94, r100, r103;
        net.sourceforge.plantuml.cucadiagram.Code $r75, $r78, r79, $r85, r86, $r92, $r95, r96, $r101, $r104;
        net.sourceforge.plantuml.command.regex.RegexPartialMatch r88;

        r38 := @parameter0: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        z0 := @parameter2: boolean;

        if z0 == 0 goto label01;

        $r71 = "";

        goto label02;

     label01:
        $r71 = "2";

     label02:
        r0 = $r71;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("OPENBRACKET");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r6 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r5, 0);

        if r6 == null goto label03;

        $r70 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity createInnerActivity()>();

        return $r70;

     label03:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STAR");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r10, 0);

        if $r11 == null goto label06;

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STAR");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        r72 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r66, 1);

        if z0 == 0 goto label05;

        if r72 == null goto label04;

        $r69 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getStart()>();

        interfaceinvoke $r69.<net.sourceforge.plantuml.cucadiagram.ILeaf: void setTop(boolean)>(1);

     label04:
        $r68 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getStart()>();

        return $r68;

     label05:
        $r67 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getEnd(java.lang.String)>(r72);

        return $r67;

     label06:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PARTITION");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r73 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r15, 0);

        if r73 == null goto label07;

        r73 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>(r73);

     label07:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CODE");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r20 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r19, 0);

        if r20 == null goto label18;

        if r73 == null goto label10;

        r74 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r73);

        $z8 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z8 == 0 goto label08;

        $r75 = r74;

        goto label09;

     label08:
        $r75 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r73);

     label09:
        $r59 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r73);

        $r60 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType PACKAGE>;

        $r61 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()>();

        $r62 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r74, $r75, $r59, $r60, $r61, $r62);

     label10:
        r77 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r20);

        $z9 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z9 == 0 goto label11;

        $r78 = r77;

        goto label12;

     label11:
        $r78 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r20);

     label12:
        r79 = $r78;

        $z6 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z6 == 0 goto label13;

        $r80 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.cucadiagram.LeafType getTypeIfExistingSmart(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r38, r77);

        goto label14;

     label13:
        $r80 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.cucadiagram.LeafType getTypeIfExisting(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.cucadiagram.Code)>(r38, $r78);

     label14:
        $z7 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z7 == 0 goto label15;

        r82 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r77);

        if r82 != null goto label16;

        $r58 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>(r79);

        r82 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreate(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType)>(r77, r79, $r58, $r80);

        goto label16;

     label15:
        $r57 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>(r79);

        r82 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreate(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType)>(r77, r79, $r57, $r80);

     label16:
        if r73 == null goto label17;

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void endGroup()>();

     label17:
        return r82;

     label18:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BAR");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        r83 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r24, 0);

        if r83 == null goto label22;

        r84 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r83);

        $z4 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z4 == 0 goto label19;

        $r85 = r84;

        goto label20;

     label19:
        $r85 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r83);

     label20:
        r86 = $r85;

        $z5 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z5 == 0 goto label21;

        r87 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafVerySmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r84);

        if r87 == null goto label21;

        return r87;

     label21:
        $r54 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r83);

        $r55 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType SYNCHRO_BAR>;

        $r56 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreate(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType)>(r84, r86, $r54, $r55);

        return $r56;

     label22:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("QUOTED");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        r88 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: net.sourceforge.plantuml.command.regex.RegexPartialMatch get(java.lang.String)>($r28);

        $r29 = virtualinvoke r88.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: java.lang.String get(int)>(0);

        if $r29 == null goto label33;

        $r46 = virtualinvoke r88.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: java.lang.String get(int)>(1);

        if $r46 != null goto label23;

        $r89 = virtualinvoke r88.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: java.lang.String get(int)>(0);

        goto label24;

     label23:
        $r89 = virtualinvoke r88.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: java.lang.String get(int)>(1);

     label24:
        r90 = $r89;

        if r73 == null goto label27;

        r91 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r73);

        $z3 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z3 == 0 goto label25;

        $r92 = r91;

        goto label26;

     label25:
        $r92 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r73);

     label26:
        $r50 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r73);

        $r51 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType PACKAGE>;

        $r52 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()>();

        $r53 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r91, $r92, $r50, $r51, $r52, $r53);

     label27:
        r94 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r90);

        $z10 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z10 == 0 goto label28;

        $r95 = r94;

        goto label29;

     label28:
        $r95 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r90);

     label29:
        r96 = $r95;

        $z2 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z2 == 0 goto label30;

        $r97 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.cucadiagram.LeafType getTypeIfExistingSmart(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.cucadiagram.Ident)>(r38, r94);

        goto label31;

     label30:
        $r97 = staticinvoke <net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.cucadiagram.LeafType getTypeIfExisting(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.cucadiagram.Code)>(r38, $r95);

     label31:
        $r47 = virtualinvoke r88.<net.sourceforge.plantuml.command.regex.RegexPartialMatch: java.lang.String get(int)>(0);

        $r48 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r47);

        r49 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreate(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType)>(r94, r96, $r48, $r97);

        if r73 == null goto label32;

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void endGroup()>();

     label32:
        return r49;

     label33:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("QUOTED_INVISIBLE");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r99 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r33, 0);

        if r99 == null goto label40;

        if r73 == null goto label36;

        r100 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r73);

        $z1 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z1 == 0 goto label34;

        $r101 = r100;

        goto label35;

     label34:
        $r101 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r73);

     label35:
        $r42 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>(r73);

        $r43 = <net.sourceforge.plantuml.cucadiagram.GroupType: net.sourceforge.plantuml.cucadiagram.GroupType PACKAGE>;

        $r44 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getRootGroup()>();

        $r45 = <net.sourceforge.plantuml.cucadiagram.NamespaceStrategy: net.sourceforge.plantuml.cucadiagram.NamespaceStrategy SINGLE>;

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void gotoGroup(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.GroupType,net.sourceforge.plantuml.cucadiagram.IGroup,net.sourceforge.plantuml.cucadiagram.NamespaceStrategy)>(r100, $r101, $r42, $r43, $r44, $r45);

     label36:
        r103 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r99);

        $z11 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean V1972()>();

        if $z11 == 0 goto label37;

        $r104 = r103;

        goto label38;

     label37:
        $r104 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r99);

     label38:
        $r40 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(net.sourceforge.plantuml.cucadiagram.Code)>($r104);

        $r41 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ACTIVITY>;

        r106 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreate(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType)>(r103, $r104, $r40, $r41);

        if r73 == null goto label39;

        virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: void endGroup()>();

     label39:
        return r106;

     label40:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FIRST");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        r107 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>($r37, 0);

        if r107 != null goto label41;

        $r39 = virtualinvoke r38.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getLastEntityConsulted()>();

        return $r39;

     label41:
        return null;
    }

    private static net.sourceforge.plantuml.cucadiagram.LeafType getTypeIfExistingSmart(net.sourceforge.plantuml.activitydiagram.ActivityDiagram, net.sourceforge.plantuml.cucadiagram.Ident)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Ident r1;
        net.sourceforge.plantuml.cucadiagram.ILeaf r2;
        net.sourceforge.plantuml.cucadiagram.LeafType $r3, $r4, $r5, $r6;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Ident;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r1);

        if r2 == null goto label1;

        $r4 = interfaceinvoke r2.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r5 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType BRANCH>;

        if $r4 != $r5 goto label1;

        $r6 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType BRANCH>;

        return $r6;

     label1:
        $r3 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ACTIVITY>;

        return $r3;
    }

    private static net.sourceforge.plantuml.cucadiagram.LeafType getTypeIfExisting(net.sourceforge.plantuml.activitydiagram.ActivityDiagram, net.sourceforge.plantuml.cucadiagram.Code)
    {
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Code r1;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.LeafType $r2, $r4, $r5, $r6;
        net.sourceforge.plantuml.cucadiagram.ILeaf r3;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram.ActivityDiagram;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.ActivityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeaf(net.sourceforge.plantuml.cucadiagram.Code)>(r1);

        $r4 = interfaceinvoke r3.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r5 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType BRANCH>;

        if $r4 != $r5 goto label1;

        $r6 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType BRANCH>;

        return $r6;

     label1:
        $r2 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType ACTIVITY>;

        return $r2;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.activitydiagram.ActivityDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.activitydiagram.ActivityDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram.command.CommandLinkActivity: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.activitydiagram.ActivityDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
