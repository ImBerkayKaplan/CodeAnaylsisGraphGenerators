public final class h.ST_field_t extends smetana.core.UnsupportedStarStruct implements h.SHAPE_INFO
{
    public final h.ST_pointf size;
    public final h.ST_boxf b;
    public int n_flds;
    public h.ST_textlabel_t lp;
    public smetana.core.CArrayOfStar fld;
    public smetana.core.CString id;
    public boolean LR;
    public int sides;

    public void <init>()
    {
        h.ST_field_t r0;
        h.ST_pointf $r1;
        h.ST_boxf $r2;

        r0 := @this: h.ST_field_t;

        specialinvoke r0.<smetana.core.UnsupportedStarStruct: void <init>()>();

        $r1 = new h.ST_pointf;

        specialinvoke $r1.<h.ST_pointf: void <init>()>();

        r0.<h.ST_field_t: h.ST_pointf size> = $r1;

        $r2 = new h.ST_boxf;

        specialinvoke $r2.<h.ST_boxf: void <init>()>();

        r0.<h.ST_field_t: h.ST_boxf b> = $r2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r13;
        h.ST_field_t r1;
        smetana.core.CString $r2;
        int $i0, $i1;
        h.ST_textlabel_t $r9;
        smetana.core.CArrayOfStar $r12;
        java.lang.String $r14;

        r1 := @this: h.ST_field_t;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<h.ST_field_t: smetana.core.CString id>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sides=");

        $i0 = r1.<h.ST_field_t: int sides>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" n_flds=");

        $i1 = r1.<h.ST_field_t: int n_flds>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lp=");

        $r9 = r1.<h.ST_field_t: h.ST_textlabel_t lp>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" fld=");

        $r12 = r1.<h.ST_field_t: smetana.core.CArrayOfStar fld>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    public h.ST_field_t castTo(java.lang.Class)
    {
        java.lang.Class r0;
        h.ST_field_t r1, $r3;
        smetana.core.__ptr__ $r2;

        r1 := @this: h.ST_field_t;

        r0 := @parameter0: java.lang.Class;

        if r0 != class "Lh/ST_field_t;" goto label1;

        return r1;

     label1:
        $r2 = specialinvoke r1.<smetana.core.UnsupportedStarStruct: smetana.core.__ptr__ castTo(java.lang.Class)>(r0);

        $r3 = (h.ST_field_t) $r2;

        return $r3;
    }

    public void ___(smetana.core.__struct__)
    {
        smetana.core.__struct__ r0;
        h.ST_field_t r1, r2;
        h.ST_pointf $r3, $r4;
        h.ST_boxf $r5, $r6;
        int $i0, $i1;
        h.ST_textlabel_t $r7;
        smetana.core.CArrayOfStar $r8;
        smetana.core.CString $r9;
        boolean $z0;

        r2 := @this: h.ST_field_t;

        r0 := @parameter0: smetana.core.__struct__;

        r1 = (h.ST_field_t) r0;

        $r4 = r2.<h.ST_field_t: h.ST_pointf size>;

        $r3 = r1.<h.ST_field_t: h.ST_pointf size>;

        virtualinvoke $r4.<h.ST_pointf: void ___(smetana.core.__struct__)>($r3);

        $r6 = r2.<h.ST_field_t: h.ST_boxf b>;

        $r5 = r1.<h.ST_field_t: h.ST_boxf b>;

        virtualinvoke $r6.<h.ST_boxf: void ___(smetana.core.__struct__)>($r5);

        $i0 = r1.<h.ST_field_t: int n_flds>;

        r2.<h.ST_field_t: int n_flds> = $i0;

        $r7 = r1.<h.ST_field_t: h.ST_textlabel_t lp>;

        r2.<h.ST_field_t: h.ST_textlabel_t lp> = $r7;

        $r8 = r1.<h.ST_field_t: smetana.core.CArrayOfStar fld>;

        r2.<h.ST_field_t: smetana.core.CArrayOfStar fld> = $r8;

        $r9 = r1.<h.ST_field_t: smetana.core.CString id>;

        r2.<h.ST_field_t: smetana.core.CString id> = $r9;

        $z0 = r1.<h.ST_field_t: boolean LR>;

        r2.<h.ST_field_t: boolean LR> = $z0;

        $i1 = r1.<h.ST_field_t: int sides>;

        r2.<h.ST_field_t: int sides> = $i1;

        return;
    }

    public volatile smetana.core.__ptr__ castTo(java.lang.Class)
    {
        h.ST_field_t r0, $r2;
        java.lang.Class r1;

        r0 := @this: h.ST_field_t;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<h.ST_field_t: h.ST_field_t castTo(java.lang.Class)>(r1);

        return $r2;
    }
}
