public class net.sourceforge.plantuml.project.lang.SubjectResource extends java.lang.Object implements net.sourceforge.plantuml.project.lang.Subject
{

    public void <init>()
    {
        net.sourceforge.plantuml.project.lang.SubjectResource r0;

        r0 := @this: net.sourceforge.plantuml.project.lang.SubjectResource;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.project.Failable getMe(net.sourceforge.plantuml.project.GanttDiagram, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1;
        net.sourceforge.plantuml.project.GanttDiagram r2;
        net.sourceforge.plantuml.project.core.Resource $r3;
        net.sourceforge.plantuml.project.Failable $r4;
        net.sourceforge.plantuml.project.lang.SubjectResource r5;

        r5 := @this: net.sourceforge.plantuml.project.lang.SubjectResource;

        r2 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("RESOURCE", 0);

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.project.GanttDiagram: net.sourceforge.plantuml.project.core.Resource getResource(java.lang.String)>(r1);

        $r4 = staticinvoke <net.sourceforge.plantuml.project.Failable: net.sourceforge.plantuml.project.Failable ok(java.lang.Object)>($r3);

        return $r4;
    }

    public java.util.Collection getSentences()
    {
        net.sourceforge.plantuml.project.lang.SentenceSimple[] $r0;
        net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDate $r1;
        net.sourceforge.plantuml.project.lang.SubjectResource r2;
        net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDates $r3;
        net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDayOfWeek $r4;
        net.sourceforge.plantuml.project.lang.SubjectResource$IsOnDate $r5;
        net.sourceforge.plantuml.project.lang.SubjectResource$IsOnDates $r6;
        java.util.List $r7;

        r2 := @this: net.sourceforge.plantuml.project.lang.SubjectResource;

        $r0 = newarray (net.sourceforge.plantuml.project.lang.SentenceSimple)[5];

        $r1 = new net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDate;

        specialinvoke $r1.<net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDate: void <init>(net.sourceforge.plantuml.project.lang.SubjectResource)>(r2);

        $r0[0] = $r1;

        $r3 = new net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDates;

        specialinvoke $r3.<net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDates: void <init>(net.sourceforge.plantuml.project.lang.SubjectResource)>(r2);

        $r0[1] = $r3;

        $r4 = new net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDayOfWeek;

        specialinvoke $r4.<net.sourceforge.plantuml.project.lang.SubjectResource$IsOffDayOfWeek: void <init>(net.sourceforge.plantuml.project.lang.SubjectResource)>(r2);

        $r0[2] = $r4;

        $r5 = new net.sourceforge.plantuml.project.lang.SubjectResource$IsOnDate;

        specialinvoke $r5.<net.sourceforge.plantuml.project.lang.SubjectResource$IsOnDate: void <init>(net.sourceforge.plantuml.project.lang.SubjectResource)>(r2);

        $r0[3] = $r5;

        $r6 = new net.sourceforge.plantuml.project.lang.SubjectResource$IsOnDates;

        specialinvoke $r6.<net.sourceforge.plantuml.project.lang.SubjectResource$IsOnDates: void <init>(net.sourceforge.plantuml.project.lang.SubjectResource)>(r2);

        $r0[4] = $r6;

        $r7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        return $r7;
    }

    public net.sourceforge.plantuml.command.regex.IRegex toRegex()
    {
        net.sourceforge.plantuml.command.regex.RegexConcat $r0;
        net.sourceforge.plantuml.command.regex.IRegex[] $r1;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r2;
        net.sourceforge.plantuml.project.lang.SubjectResource r3;

        r3 := @this: net.sourceforge.plantuml.project.lang.SubjectResource;

        $r0 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r1 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[1];

        $r2 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r2.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("RESOURCE", "\\{([^{}]+)\\}");

        $r1[0] = $r2;

        specialinvoke $r0.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r1);

        return $r0;
    }
}
