class net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1 extends java.lang.Object implements net.sourceforge.plantuml.sequencediagram.Event
{
    final net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile this$0;

    void <init>(net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1 r0;
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean dealWith(net.sourceforge.plantuml.sequencediagram.Participant)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1 r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        return 0;
    }

    public net.sourceforge.plantuml.Url getUrl()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1 r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1;

        return null;
    }

    public boolean hasUrl()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1 r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1;

        return 0;
    }

    public boolean isParallel()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1 r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1;

        return 0;
    }
}
