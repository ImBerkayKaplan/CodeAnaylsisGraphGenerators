public class net.sourceforge.plantuml.graphic.SymbolContext extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.color.HColor backColor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor foreColor;
    private final net.sourceforge.plantuml.ugraphic.UStroke stroke;
    private final double deltaShadow;
    private final double roundCorner;
    private final double diagonalCorner;

    private void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.UStroke, double, double, double)
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, r2;
        net.sourceforge.plantuml.ugraphic.UStroke r3;
        double d0, d1, d2;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.UStroke;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        d2 := @parameter5: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor> = r1;

        r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor> = r2;

        r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke> = r3;

        r0.<net.sourceforge.plantuml.graphic.SymbolContext: double deltaShadow> = d0;

        r0.<net.sourceforge.plantuml.graphic.SymbolContext: double roundCorner> = d1;

        r0.<net.sourceforge.plantuml.graphic.SymbolContext: double diagonalCorner> = d2;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9;
        net.sourceforge.plantuml.graphic.SymbolContext r1;
        java.lang.String $r2, $r10;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5, $r8;

        r1 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" backColor=");

        $r5 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" foreColor=");

        $r8 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public final net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, r2, r3;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic applyColors(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic applyStroke(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

        return r3;
    }

    public net.sourceforge.plantuml.ugraphic.UGraphic applyColors(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2, $r3;
        net.sourceforge.plantuml.ugraphic.UBackground $r4, $r6;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r7, r8, r9;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        r8 = interfaceinvoke r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        if $r2 != null goto label1;

        $r5 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        goto label2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r9 = interfaceinvoke r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

     label2:
        return r9;
    }

    public net.sourceforge.plantuml.ugraphic.UGraphic applyStroke(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r3;
        net.sourceforge.plantuml.graphic.SymbolContext r1;
        net.sourceforge.plantuml.ugraphic.UStroke $r2;

        r1 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        return $r3;
    }

    public net.sourceforge.plantuml.graphic.SymbolContext transparentBackColorToNull()
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0, $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r3, $r5, $r7;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.color.HColorBackground $r4;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.UStroke $r6;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.ugraphic.color.HColorBackground;

        if $z0 == 0 goto label1;

        $r2 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r3 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r4 = (net.sourceforge.plantuml.ugraphic.color.HColorBackground) $r3;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorBackground: net.sourceforge.plantuml.ugraphic.color.HColor getNull()>();

        $r7 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        $r6 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $d2 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: double deltaShadow>;

        $d1 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: double roundCorner>;

        $d0 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: double diagonalCorner>;

        specialinvoke $r2.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.UStroke,double,double,double)>($r5, $r7, $r6, $d2, $d1, $d0);

        return $r2;

     label1:
        return r0;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, r2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.UStroke,double,double,double)>(r1, r2, $r3, 0.0, 0.0, 0.0);

        return;
    }

    public net.sourceforge.plantuml.graphic.SymbolContext withShadow(double)
    {
        net.sourceforge.plantuml.graphic.SymbolContext $r0, r1;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.UStroke $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r4 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r3 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        $r2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $d2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double roundCorner>;

        $d1 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double diagonalCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.UStroke,double,double,double)>($r4, $r3, $r2, d0, $d2, $d1);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.SymbolContext withDeltaShadow(double)
    {
        net.sourceforge.plantuml.graphic.SymbolContext $r0, r1;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.UStroke $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r4 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r3 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        $r2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $d2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double roundCorner>;

        $d1 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double diagonalCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.UStroke,double,double,double)>($r4, $r3, $r2, d0, $d2, $d1);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.SymbolContext withStroke(net.sourceforge.plantuml.ugraphic.UStroke)
    {
        net.sourceforge.plantuml.graphic.SymbolContext $r0, r1;
        net.sourceforge.plantuml.ugraphic.UStroke r2;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UStroke;

        $r0 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r4 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r3 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        $d2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double deltaShadow>;

        $d1 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double roundCorner>;

        $d0 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double diagonalCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.UStroke,double,double,double)>($r4, $r3, r2, $d2, $d1, $d0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.SymbolContext withBackColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.SymbolContext $r0, r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r1, $r4;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;

        r2 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r4 = r2.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        $r3 = r2.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $d2 = r2.<net.sourceforge.plantuml.graphic.SymbolContext: double deltaShadow>;

        $d1 = r2.<net.sourceforge.plantuml.graphic.SymbolContext: double roundCorner>;

        $d0 = r2.<net.sourceforge.plantuml.graphic.SymbolContext: double diagonalCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.UStroke,double,double,double)>(r1, $r4, $r3, $d2, $d1, $d0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.SymbolContext withForeColor(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.graphic.SymbolContext $r0, r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, $r4;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.UStroke $r3;

        r1 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r4 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r3 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $d2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double deltaShadow>;

        $d1 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double roundCorner>;

        $d0 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double diagonalCorner>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.UStroke,double,double,double)>($r4, r2, $r3, $d2, $d1, $d0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.SymbolContext withCorner(double, double)
    {
        net.sourceforge.plantuml.graphic.SymbolContext $r0, r1;
        double d0, d1, $d2;
        net.sourceforge.plantuml.ugraphic.UStroke $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r4;

        r1 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.graphic.SymbolContext;

        $r4 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        $r3 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        $r2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        $d2 = r1.<net.sourceforge.plantuml.graphic.SymbolContext: double deltaShadow>;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.SymbolContext: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.UStroke,double,double,double)>($r4, $r3, $r2, $d2, d0, d1);

        return $r0;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor backColor>;

        return $r1;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getForeColor()
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor foreColor>;

        return $r1;
    }

    public net.sourceforge.plantuml.ugraphic.UStroke getStroke()
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        net.sourceforge.plantuml.ugraphic.UStroke $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $r1 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UStroke stroke>;

        return $r1;
    }

    public boolean isShadowing()
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        double $d0;
        byte $b0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $d0 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: double deltaShadow>;

        $b0 = $d0 cmpl 0.0;

        if $b0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public double getDeltaShadow()
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $d0 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: double deltaShadow>;

        return $d0;
    }

    public double getRoundCorner()
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $d0 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: double roundCorner>;

        return $d0;
    }

    public double getDiagonalCorner()
    {
        net.sourceforge.plantuml.graphic.SymbolContext r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.graphic.SymbolContext;

        $d0 = r0.<net.sourceforge.plantuml.graphic.SymbolContext: double diagonalCorner>;

        return $d0;
    }
}
