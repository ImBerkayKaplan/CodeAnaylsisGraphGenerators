public class net.sourceforge.plantuml.Url extends java.lang.Object implements net.sourceforge.plantuml.EnsureVisible
{
    private final java.lang.String url;
    private final java.lang.String tooltip;
    private final java.lang.String label;
    private boolean member;
    private final net.sourceforge.plantuml.BasicEnsureVisible visible;
    public static final java.util.Comparator SURFACE_COMPARATOR;

    public void <init>(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.Url r0;
        java.lang.String r1, r2;

        r0 := @this: net.sourceforge.plantuml.Url;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.Url: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r1, r2, null);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.Url r0;
        net.sourceforge.plantuml.BasicEnsureVisible $r1;
        java.lang.String r2, $r3, r4, r5, r6;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.Url;

        r5 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.BasicEnsureVisible;

        specialinvoke $r1.<net.sourceforge.plantuml.BasicEnsureVisible: void <init>()>();

        r0.<net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible visible> = $r1;

        r6 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String,java.lang.String)>(r5, "\"");

        r0.<net.sourceforge.plantuml.Url: java.lang.String url> = r6;

        if r2 != null goto label1;

        r0.<net.sourceforge.plantuml.Url: java.lang.String tooltip> = r6;

        goto label2;

     label1:
        $r3 = staticinvoke <net.sourceforge.plantuml.BackSlash: java.lang.String manageNewLine(java.lang.String)>(r2);

        r0.<net.sourceforge.plantuml.Url: java.lang.String tooltip> = $r3;

     label2:
        if r4 == null goto label3;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label3:
        r0.<net.sourceforge.plantuml.Url: java.lang.String label> = r6;

        goto label5;

     label4:
        r0.<net.sourceforge.plantuml.Url: java.lang.String label> = r4;

     label5:
        return;
    }

    public static boolean isLatex(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("latex://");

        return $z0;
    }

    public boolean isLatex()
    {
        net.sourceforge.plantuml.Url r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.Url;

        $r1 = r0.<net.sourceforge.plantuml.Url: java.lang.String url>;

        $z0 = staticinvoke <net.sourceforge.plantuml.Url: boolean isLatex(java.lang.String)>($r1);

        return $z0;
    }

    public final java.lang.String getUrl()
    {
        net.sourceforge.plantuml.Url r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.Url;

        $r1 = r0.<net.sourceforge.plantuml.Url: java.lang.String url>;

        return $r1;
    }

    public final java.lang.String getTooltip()
    {
        net.sourceforge.plantuml.Url r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.Url;

        $r1 = r0.<net.sourceforge.plantuml.Url: java.lang.String tooltip>;

        return $r1;
    }

    public java.lang.String getLabel()
    {
        net.sourceforge.plantuml.Url r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.Url;

        $r1 = r0.<net.sourceforge.plantuml.Url: java.lang.String label>;

        return $r1;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r10;
        net.sourceforge.plantuml.Url r1;
        java.lang.String $r2, $r5, $r9, $r11;
        net.sourceforge.plantuml.BasicEnsureVisible $r8;

        r1 := @this: net.sourceforge.plantuml.Url;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<net.sourceforge.plantuml.Url: java.lang.String url>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r1.<net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible visible>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.BasicEnsureVisible: java.lang.String getCoords(double)>(1.0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String getCoords(double)
    {
        boolean $z0, $z1;
        net.sourceforge.plantuml.Url r0;
        double d0;
        net.sourceforge.plantuml.BasicEnsureVisible $r1, $r3;
        java.lang.String $r2, $r4, $r6;
        java.lang.IllegalStateException $r5;

        r0 := @this: net.sourceforge.plantuml.Url;

        d0 := @parameter0: double;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.dot.DotMaker2: boolean isJunit()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible visible>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.BasicEnsureVisible: java.lang.String getCoords(double)>(1.0);

        $z1 = virtualinvoke $r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("0,0,0,0");

        if $z1 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.Url: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible visible>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.BasicEnsureVisible: java.lang.String getCoords(double)>(d0);

        return $r2;
    }

    public void setMember(boolean)
    {
        net.sourceforge.plantuml.Url r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.Url;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.Url: boolean member> = z0;

        return;
    }

    public final boolean isMember()
    {
        net.sourceforge.plantuml.Url r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.Url;

        $z0 = r0.<net.sourceforge.plantuml.Url: boolean member>;

        return $z0;
    }

    public void ensureVisible(double, double)
    {
        net.sourceforge.plantuml.Url r0;
        double d0, d1;
        net.sourceforge.plantuml.BasicEnsureVisible $r1;

        r0 := @this: net.sourceforge.plantuml.Url;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r1 = r0.<net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible visible>;

        virtualinvoke $r1.<net.sourceforge.plantuml.BasicEnsureVisible: void ensureVisible(double,double)>(d0, d1);

        return;
    }

    public boolean hasData()
    {
        net.sourceforge.plantuml.Url r0;
        net.sourceforge.plantuml.BasicEnsureVisible $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.Url;

        $r1 = r0.<net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible visible>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.BasicEnsureVisible: boolean hasData()>();

        return $z0;
    }

    static net.sourceforge.plantuml.BasicEnsureVisible access$000(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.Url r0;
        net.sourceforge.plantuml.BasicEnsureVisible $r1;

        r0 := @parameter0: net.sourceforge.plantuml.Url;

        $r1 = r0.<net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible visible>;

        return $r1;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.Url$1 $r0;

        $r0 = new net.sourceforge.plantuml.Url$1;

        specialinvoke $r0.<net.sourceforge.plantuml.Url$1: void <init>()>();

        <net.sourceforge.plantuml.Url: java.util.Comparator SURFACE_COMPARATOR> = $r0;

        return;
    }
}
