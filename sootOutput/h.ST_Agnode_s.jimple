public final class h.ST_Agnode_s extends h.ST_Agobj_s
{
    public final h.ST_Agobj_s base;
    public h.ST_Agraph_s root;
    public final h.ST_Agsubnode_s mainsub;
    public java.lang.String NAME;

    public void <init>()
    {
        h.ST_Agnode_s r0;
        h.ST_Agsubnode_s $r1;

        r0 := @this: h.ST_Agnode_s;

        specialinvoke r0.<h.ST_Agobj_s: void <init>()>();

        r0.<h.ST_Agnode_s: h.ST_Agobj_s base> = r0;

        $r1 = new h.ST_Agsubnode_s;

        specialinvoke $r1.<h.ST_Agsubnode_s: void <init>()>();

        r0.<h.ST_Agnode_s: h.ST_Agsubnode_s mainsub> = $r1;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6, $r7;
        h.ST_Agnode_s r1;
        java.lang.String $r2, $r8, $r11;
        int $i0, $i1;
        java.lang.Exception $r9;

        r1 := @this: h.ST_Agnode_s;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<h.ST_Agnode_s: java.lang.String NAME>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" rank=");

        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" order=");

        $i1 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        $r11 = r1.<h.ST_Agnode_s: java.lang.String NAME>;

        return $r11;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void ___(smetana.core.__struct__)
    {
        java.lang.UnsupportedOperationException $r0;
        h.ST_Agnode_s r1;
        smetana.core.__struct__ r2;

        r1 := @this: h.ST_Agnode_s;

        r2 := @parameter0: smetana.core.__struct__;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean isSameThan(smetana.core.__ptr__)
    {
        smetana.core.__ptr__ r0;
        h.ST_Agnode_s r1, r2;
        boolean $z0;

        r2 := @this: h.ST_Agnode_s;

        r0 := @parameter0: smetana.core.__ptr__;

        r1 = (h.ST_Agnode_s) r0;

        if r2 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
