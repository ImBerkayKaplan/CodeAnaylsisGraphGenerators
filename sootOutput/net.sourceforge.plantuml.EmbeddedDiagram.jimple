public class net.sourceforge.plantuml.EmbeddedDiagram extends java.lang.Object implements java.lang.CharSequence
{
    private final net.sourceforge.plantuml.cucadiagram.Display system;

    public static java.lang.String getEmbeddedType(java.lang.CharSequence)
    {
        java.lang.String $r0, r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.CharSequence r1;

        r1 := @parameter0: java.lang.CharSequence;

        if r1 != null goto label01;

        return null;

     label01:
        $r0 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>();

        r2 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r0);

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{");

        if $z0 == 0 goto label02;

        return "uml";

     label02:
        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{uml");

        if $z1 == 0 goto label03;

        return "uml";

     label03:
        $z2 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{wbs");

        if $z2 == 0 goto label04;

        return "wbs";

     label04:
        $z3 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{mindmap");

        if $z3 == 0 goto label05;

        return "mindmap";

     label05:
        $z4 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{gantt");

        if $z4 == 0 goto label06;

        return "gantt";

     label06:
        $z5 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{json");

        if $z5 == 0 goto label07;

        return "json";

     label07:
        $z6 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{yaml");

        if $z6 == 0 goto label08;

        return "yaml";

     label08:
        $z7 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{wire");

        if $z7 == 0 goto label09;

        return "wire";

     label09:
        $z8 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{creole");

        if $z8 == 0 goto label10;

        return "creole";

     label10:
        $z9 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>("{{board");

        if $z9 == 0 goto label11;

        return "board";

     label11:
        return null;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.EmbeddedDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;

        r0 := @this: net.sourceforge.plantuml.EmbeddedDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.EmbeddedDiagram: net.sourceforge.plantuml.cucadiagram.Display system> = r1;

        return;
    }

    public int length()
    {
        net.sourceforge.plantuml.EmbeddedDiagram r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.EmbeddedDiagram;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public char charAt(int)
    {
        net.sourceforge.plantuml.EmbeddedDiagram r0;
        java.lang.String $r1;
        int i0;
        char $c1;

        r0 := @this: net.sourceforge.plantuml.EmbeddedDiagram;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i0);

        return $c1;
    }

    public java.lang.CharSequence subSequence(int, int)
    {
        net.sourceforge.plantuml.EmbeddedDiagram r0;
        java.lang.String $r1;
        int i0, i1;
        java.lang.CharSequence $r2;

        r0 := @this: net.sourceforge.plantuml.EmbeddedDiagram;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        return $r2;
    }

    public net.sourceforge.plantuml.EmbeddedDiagram$Draw asDraw(net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.EmbeddedDiagram$Draw $r0;
        net.sourceforge.plantuml.EmbeddedDiagram r1;
        net.sourceforge.plantuml.ISkinSimple r2;

        r1 := @this: net.sourceforge.plantuml.EmbeddedDiagram;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.EmbeddedDiagram$Draw;

        specialinvoke $r0.<net.sourceforge.plantuml.EmbeddedDiagram$Draw: void <init>(net.sourceforge.plantuml.EmbeddedDiagram,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.EmbeddedDiagram$1)>(r1, r2, null);

        return $r0;
    }

    static net.sourceforge.plantuml.cucadiagram.Display access$100(net.sourceforge.plantuml.EmbeddedDiagram)
    {
        net.sourceforge.plantuml.EmbeddedDiagram r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @parameter0: net.sourceforge.plantuml.EmbeddedDiagram;

        $r1 = r0.<net.sourceforge.plantuml.EmbeddedDiagram: net.sourceforge.plantuml.cucadiagram.Display system>;

        return $r1;
    }
}
