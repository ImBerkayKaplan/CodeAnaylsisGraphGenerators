class net.sourceforge.plantuml.skin.VisibilityModifier$2 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final int val$size;
    final boolean val$withInvisibleRectanble;
    final net.sourceforge.plantuml.ugraphic.color.HColor val$foregroundColor;
    final net.sourceforge.plantuml.ugraphic.color.HColor val$backgoundColor;
    final net.sourceforge.plantuml.skin.VisibilityModifier this$0;

    void <init>(net.sourceforge.plantuml.skin.VisibilityModifier, int, boolean, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier$2 r0;
        net.sourceforge.plantuml.skin.VisibilityModifier r1;
        int i0;
        boolean z0;
        net.sourceforge.plantuml.ugraphic.color.HColor r2, r3;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier$2;

        r1 := @parameter0: net.sourceforge.plantuml.skin.VisibilityModifier;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: net.sourceforge.plantuml.skin.VisibilityModifier this$0> = r1;

        r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: int val$size> = i0;

        r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: boolean val$withInvisibleRectanble> = z0;

        r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: net.sourceforge.plantuml.ugraphic.color.HColor val$foregroundColor> = r2;

        r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: net.sourceforge.plantuml.ugraphic.color.HColor val$backgoundColor> = r3;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.skin.VisibilityModifier$2 r1;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.skin.VisibilityModifier$2;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $i0 = r1.<net.sourceforge.plantuml.skin.VisibilityModifier$2: int val$size>;

        $i1 = $i0 + 1;

        $d1 = (double) $i1;

        $i2 = r1.<net.sourceforge.plantuml.skin.VisibilityModifier$2: int val$size>;

        $i3 = $i2 + 1;

        $d0 = (double) $i3;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d1, $d0);

        return $r0;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier$2 r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.InnerStrategy r3;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier$2;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        return null;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.skin.VisibilityModifier$2 r0;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r6;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, $r3;
        int $i0, $i1, $i2, $i3;
        net.sourceforge.plantuml.skin.VisibilityModifier $r4;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r5;
        net.sourceforge.plantuml.ugraphic.URectangle $r7;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.skin.VisibilityModifier$2;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $z0 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: boolean val$withInvisibleRectanble>;

        if $z0 == 0 goto label1;

        $r5 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r6 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $i1 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: int val$size>;

        $i2 = $i1 * 2;

        $d1 = (double) $i2;

        $i3 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: int val$size>;

        $d0 = (double) $i3;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d1, $d0);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

     label1:
        $r4 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: net.sourceforge.plantuml.skin.VisibilityModifier this$0>;

        $i0 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: int val$size>;

        $r3 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: net.sourceforge.plantuml.ugraphic.color.HColor val$foregroundColor>;

        $r2 = r0.<net.sourceforge.plantuml.skin.VisibilityModifier$2: net.sourceforge.plantuml.ugraphic.color.HColor val$backgoundColor>;

        staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: void access$000(net.sourceforge.plantuml.skin.VisibilityModifier,net.sourceforge.plantuml.ugraphic.UGraphic,int,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,double,double)>($r4, r1, $i0, $r3, $r2, 0.0, 0.0);

        return;
    }
}
