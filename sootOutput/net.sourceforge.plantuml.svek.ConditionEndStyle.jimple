public final enum class net.sourceforge.plantuml.svek.ConditionEndStyle extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.svek.ConditionEndStyle DIAMOND;
    public static final enum net.sourceforge.plantuml.svek.ConditionEndStyle HLINE;
    private static final net.sourceforge.plantuml.svek.ConditionEndStyle[] $VALUES;

    public static net.sourceforge.plantuml.svek.ConditionEndStyle[] values()
    {
        net.sourceforge.plantuml.svek.ConditionEndStyle[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.svek.ConditionEndStyle[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.svek.ConditionEndStyle valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.svek.ConditionEndStyle $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/svek/ConditionEndStyle;", r0);

        $r2 = (net.sourceforge.plantuml.svek.ConditionEndStyle) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.svek.ConditionEndStyle r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.svek.ConditionEndStyle;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static net.sourceforge.plantuml.svek.ConditionEndStyle fromString(java.lang.String)
    {
        java.util.EnumSet $r0;
        java.util.Iterator r1;
        boolean $z0, $z1;
        java.lang.Object $r2;
        net.sourceforge.plantuml.svek.ConditionEndStyle r3;
        java.lang.String $r4, r5;

        r5 := @parameter0: java.lang.String;

        $r0 = staticinvoke <java.util.EnumSet: java.util.EnumSet allOf(java.lang.Class)>(class "Lnet/sourceforge/plantuml/svek/ConditionEndStyle;");

        r1 = virtualinvoke $r0.<java.util.EnumSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.svek.ConditionEndStyle) $r2;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.svek.ConditionEndStyle: java.lang.String toString()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r5);

        if $z1 == 0 goto label2;

        return r3;

     label2:
        goto label1;

     label3:
        return null;
    }

    private static net.sourceforge.plantuml.svek.ConditionEndStyle[] $values()
    {
        net.sourceforge.plantuml.svek.ConditionEndStyle[] $r0;
        net.sourceforge.plantuml.svek.ConditionEndStyle $r1, $r2;

        $r0 = newarray (net.sourceforge.plantuml.svek.ConditionEndStyle)[2];

        $r1 = <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle DIAMOND>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle HLINE>;

        $r0[1] = $r2;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.svek.ConditionEndStyle $r0, $r1;
        net.sourceforge.plantuml.svek.ConditionEndStyle[] $r2;

        $r0 = new net.sourceforge.plantuml.svek.ConditionEndStyle;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.ConditionEndStyle: void <init>(java.lang.String,int)>("DIAMOND", 0);

        <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle DIAMOND> = $r0;

        $r1 = new net.sourceforge.plantuml.svek.ConditionEndStyle;

        specialinvoke $r1.<net.sourceforge.plantuml.svek.ConditionEndStyle: void <init>(java.lang.String,int)>("HLINE", 1);

        <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle HLINE> = $r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle[] $values()>();

        <net.sourceforge.plantuml.svek.ConditionEndStyle: net.sourceforge.plantuml.svek.ConditionEndStyle[] $VALUES> = $r2;

        return;
    }
}
