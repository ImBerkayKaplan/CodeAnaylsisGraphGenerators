public final enum class net.sourceforge.plantuml.security.SecurityProfile extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.security.SecurityProfile SANDBOX;
    public static final enum net.sourceforge.plantuml.security.SecurityProfile ALLOWLIST;
    public static final enum net.sourceforge.plantuml.security.SecurityProfile INTERNET;
    public static final enum net.sourceforge.plantuml.security.SecurityProfile LEGACY;
    public static final enum net.sourceforge.plantuml.security.SecurityProfile UNSECURE;
    private static final net.sourceforge.plantuml.security.SecurityProfile[] $VALUES;

    public static net.sourceforge.plantuml.security.SecurityProfile[] values()
    {
        net.sourceforge.plantuml.security.SecurityProfile[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.security.SecurityProfile[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.security.SecurityProfile valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.security.SecurityProfile $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/security/SecurityProfile;", r0);

        $r2 = (net.sourceforge.plantuml.security.SecurityProfile) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.security.SecurityProfile r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.security.SecurityProfile;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static net.sourceforge.plantuml.security.SecurityProfile init()
    {
        java.lang.String r0, $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.security.SecurityProfile $r5, $r6, $r7, $r8, $r9;

        r0 = staticinvoke <net.sourceforge.plantuml.security.SecurityUtils: java.lang.String getenv(java.lang.String)>("PLANTUML_SECURITY_PROFILE");

        $r1 = "SANDBOX";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r9 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile SANDBOX>;

        return $r9;

     label1:
        $r2 = "ALLOWLIST";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 == 0 goto label2;

        $r8 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile ALLOWLIST>;

        return $r8;

     label2:
        $r3 = "INTERNET";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 == 0 goto label3;

        $r7 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile INTERNET>;

        return $r7;

     label3:
        $r4 = "UNSECURE";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z3 == 0 goto label4;

        $r6 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile UNSECURE>;

        return $r6;

     label4:
        $r5 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile LEGACY>;

        return $r5;
    }

    public java.lang.String longDescription()
    {
        net.sourceforge.plantuml.security.SecurityProfile r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.security.SecurityProfile;

        $r1 = <net.sourceforge.plantuml.security.SecurityProfile$1: int[] $SwitchMap$net$sourceforge$plantuml$security$SecurityProfile>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.security.SecurityProfile: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        return "This is completely safe: no access to local files or to distant URL.";

     label2:
        return "Some local ressource may be accessible.";

     label3:
        return "<i>Mode designed for server connected to Internet.";

     label4:
        return "<b>Warning: this mode will be removed in future version";

     label5:
        return "<b>Make sure that this server is not accessible from Internet";

     label6:
        return "<i>This is completely safe: no access on local files or on distant URL.";
    }

    public long getTimeout()
    {
        net.sourceforge.plantuml.security.SecurityProfile r0;
        int[] $r1;
        int $i0, $i1;
        java.lang.AssertionError $r2;

        r0 := @this: net.sourceforge.plantuml.security.SecurityProfile;

        $r1 = <net.sourceforge.plantuml.security.SecurityProfile$1: int[] $SwitchMap$net$sourceforge$plantuml$security$SecurityProfile>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.security.SecurityProfile: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        return 1000L;

     label2:
        return 300000L;

     label3:
        return 10000L;

     label4:
        return 60000L;

     label5:
        return 300000L;

     label6:
        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;
    }

    private static net.sourceforge.plantuml.security.SecurityProfile[] $values()
    {
        net.sourceforge.plantuml.security.SecurityProfile[] $r0;
        net.sourceforge.plantuml.security.SecurityProfile $r1, $r2, $r3, $r4, $r5;

        $r0 = newarray (net.sourceforge.plantuml.security.SecurityProfile)[5];

        $r1 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile SANDBOX>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile ALLOWLIST>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile INTERNET>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile LEGACY>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile UNSECURE>;

        $r0[4] = $r5;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.security.SecurityProfile $r0, $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.security.SecurityProfile[] $r5;

        $r0 = new net.sourceforge.plantuml.security.SecurityProfile;

        specialinvoke $r0.<net.sourceforge.plantuml.security.SecurityProfile: void <init>(java.lang.String,int)>("SANDBOX", 0);

        <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile SANDBOX> = $r0;

        $r1 = new net.sourceforge.plantuml.security.SecurityProfile;

        specialinvoke $r1.<net.sourceforge.plantuml.security.SecurityProfile: void <init>(java.lang.String,int)>("ALLOWLIST", 1);

        <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile ALLOWLIST> = $r1;

        $r2 = new net.sourceforge.plantuml.security.SecurityProfile;

        specialinvoke $r2.<net.sourceforge.plantuml.security.SecurityProfile: void <init>(java.lang.String,int)>("INTERNET", 2);

        <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile INTERNET> = $r2;

        $r3 = new net.sourceforge.plantuml.security.SecurityProfile;

        specialinvoke $r3.<net.sourceforge.plantuml.security.SecurityProfile: void <init>(java.lang.String,int)>("LEGACY", 3);

        <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile LEGACY> = $r3;

        $r4 = new net.sourceforge.plantuml.security.SecurityProfile;

        specialinvoke $r4.<net.sourceforge.plantuml.security.SecurityProfile: void <init>(java.lang.String,int)>("UNSECURE", 4);

        <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile UNSECURE> = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile[] $values()>();

        <net.sourceforge.plantuml.security.SecurityProfile: net.sourceforge.plantuml.security.SecurityProfile[] $VALUES> = $r5;

        return;
    }
}
