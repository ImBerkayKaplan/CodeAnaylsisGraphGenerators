public class net.sourceforge.plantuml.salt.element.ElementMenuEntry extends net.sourceforge.plantuml.salt.element.AbstractElement
{
    private final net.sourceforge.plantuml.graphic.TextBlock block;
    private final java.lang.String text;
    private net.sourceforge.plantuml.ugraphic.color.HColor background;
    private double xxx;

    public void <init>(java.lang.String, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r0;
        net.sourceforge.plantuml.ugraphic.UFont r1;
        net.sourceforge.plantuml.graphic.FontConfiguration r2;
        java.lang.CharSequence[] $r3;
        java.lang.String r4;
        net.sourceforge.plantuml.cucadiagram.Display $r5;
        net.sourceforge.plantuml.ISkinSimple r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        r6 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: void <init>()>();

        r2 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>(r1);

        $r3 = newarray (java.lang.CharSequence)[1];

        $r3[0] = r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r3);

        $r7 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r8 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r2, $r7, r6);

        r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.graphic.TextBlock block> = $r8;

        r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: java.lang.String text> = r4;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder, double, double)
    {
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r0;
        java.lang.String $r1;
        boolean $z0;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;
        net.sourceforge.plantuml.Dimension2DDouble $r5;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r1 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: java.lang.String text>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("-");

        if $z0 == 0 goto label1;

        $r5 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r5.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(10.0, 5.0);

        return $r5;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.graphic.TextBlock block>;

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, int, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1, $r2, $r6;
        net.sourceforge.plantuml.graphic.TextBlock $r3;
        net.sourceforge.plantuml.graphic.StringBounder $r4;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5, r10;
        net.sourceforge.plantuml.ugraphic.UBackground $r7;
        net.sourceforge.plantuml.ugraphic.UGraphic $r8, r11, r12;
        net.sourceforge.plantuml.ugraphic.URectangle $r9;
        double $d0, $d1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter1: int;

        r10 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        r12 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r1);

        $r2 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        if $r2 == null goto label1;

        $r4 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder,double,double)>($r4, 0.0, 0.0);

        $r6 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r8 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d0 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d0, $d1);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

     label1:
        $r3 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.graphic.TextBlock block>;

        interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r12);

        return;
    }

    public double getX()
    {
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        $d0 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: double xxx>;

        return $d0;
    }

    public void setX(double)
    {
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        d0 := @parameter0: double;

        r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: double xxx> = d0;

        return;
    }

    public java.lang.String getText()
    {
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        $r1 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: java.lang.String text>;

        return $r1;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackground()
    {
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        $r1 = r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.ugraphic.color.HColor background>;

        return $r1;
    }

    public void setBackground(net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.salt.element.ElementMenuEntry r0;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementMenuEntry;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r0.<net.sourceforge.plantuml.salt.element.ElementMenuEntry: net.sourceforge.plantuml.ugraphic.color.HColor background> = r1;

        return;
    }
}
