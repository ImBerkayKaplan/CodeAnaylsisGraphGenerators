public final class net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity extends java.lang.Object implements net.sourceforge.plantuml.command.note.SingleMultiFactoryCommand
{
    private final net.sourceforge.plantuml.command.regex.IRegex partialPattern;
    private final java.lang.String key;
    static final boolean $assertionsDisabled;

    public void <init>(java.lang.String, net.sourceforge.plantuml.command.regex.IRegex)
    {
        net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity r0;
        net.sourceforge.plantuml.command.regex.IRegex r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.IRegex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: net.sourceforge.plantuml.command.regex.IRegex partialPattern> = r1;

        r0.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: java.lang.String key> = r2;

        return;
    }

    private net.sourceforge.plantuml.command.regex.RegexConcat getRegexConcatMultiLine(net.sourceforge.plantuml.command.regex.IRegex, boolean)
    {
        boolean z0;
        java.lang.StringBuilder $r0, $r3, $r6, $r7, $r22, $r23, $r25, $r26, $r30, $r33, $r35, $r36, $r50, $r51, $r53, $r54;
        java.lang.Class $r1, $r31;
        java.lang.String $r2, $r5, $r8, $r24, $r27, $r32, $r34, $r37, $r52, $r55;
        net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity r4;
        net.sourceforge.plantuml.command.regex.IRegex[] $r9, $r38;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r20, $r21, $r28, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r56, $r57, $r58;
        net.sourceforge.plantuml.command.regex.IRegex r17;
        net.sourceforge.plantuml.command.regex.RegexConcat $r29, $r59;

        r4 := @this: net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity;

        r17 := @parameter0: net.sourceforge.plantuml.command.regex.IRegex;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = class "Lnet/sourceforge/plantuml/command/note/CommandFactoryTipOnEntity;";

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = r4.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: java.lang.String key>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        $r38 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[15];

        $r39 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r38[0] = $r39;

        $r40 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r40.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("note");

        $r38[1] = $r40;

        $r41 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r38[2] = $r41;

        $r42 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r42.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(right|left)");

        $r38[3] = $r42;

        $r43 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r38[4] = $r43;

        $r44 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r44.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("of");

        $r38[5] = $r44;

        $r45 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r38[6] = $r45;

        $r38[7] = r17;

        $r46 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r38[8] = $r46;

        $r47 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf exp1()>();

        $r38[9] = $r47;

        $r48 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r38[10] = $r48;

        $r49 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r52 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r53 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r49.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r55);

        $r38[11] = $r49;

        $r56 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r38[12] = $r56;

        $r57 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r57.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\{");

        $r38[13] = $r57;

        $r58 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r38[14] = $r58;

        $r59 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r37, $r38);

        return $r59;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lnet/sourceforge/plantuml/command/note/CommandFactoryTipOnEntity;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = r4.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: java.lang.String key>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[13];

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r9[0] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("note");

        $r9[1] = $r11;

        $r12 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[2] = $r12;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(right|left)");

        $r9[3] = $r13;

        $r14 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[4] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("of");

        $r9[5] = $r15;

        $r16 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[6] = $r16;

        $r9[7] = r17;

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r9[8] = $r18;

        $r19 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf exp1()>();

        $r9[9] = $r19;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r9[10] = $r20;

        $r21 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r24 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r27);

        $r9[11] = $r21;

        $r28 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r9[12] = $r28;

        $r29 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r8, $r9);

        return $r29;
    }

    public net.sourceforge.plantuml.command.Command createSingleLine()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity r1;

        r1 := @this: net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public net.sourceforge.plantuml.command.Command createMultiLine(boolean)
    {
        net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity$1 $r0;
        net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity r1;
        boolean z0;
        net.sourceforge.plantuml.command.regex.IRegex $r2;
        net.sourceforge.plantuml.command.regex.RegexConcat $r3;
        net.sourceforge.plantuml.command.MultilinesStrategy $r4;

        r1 := @this: net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity;

        z0 := @parameter0: boolean;

        $r0 = new net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity$1;

        $r2 = r1.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: net.sourceforge.plantuml.command.regex.IRegex partialPattern>;

        $r3 = specialinvoke r1.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: net.sourceforge.plantuml.command.regex.RegexConcat getRegexConcatMultiLine(net.sourceforge.plantuml.command.regex.IRegex,boolean)>($r2, z0);

        $r4 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy KEEP_STARTING_QUOTE>;

        specialinvoke $r0.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity$1: void <init>(net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity,net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy,boolean)>(r1, $r3, $r4, z0);

        return $r0;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeInternal(net.sourceforge.plantuml.command.regex.RegexResult, net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram, net.sourceforge.plantuml.Url, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, $r6, r7, $r9, $r17, $r19;
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram r3;
        net.sourceforge.plantuml.cucadiagram.Ident r4, r20;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.IEntity r8, r42;
        net.sourceforge.plantuml.command.Position $r10, r13, $r28;
        net.sourceforge.plantuml.ISkinParam $r11, $r31, $r35;
        net.sourceforge.plantuml.cucadiagram.Rankdir $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r18;
        net.sourceforge.plantuml.command.BlocLines r21;
        net.sourceforge.plantuml.cucadiagram.Code $r22, $r41;
        net.sourceforge.plantuml.cucadiagram.LeafType $r23;
        net.sourceforge.plantuml.cucadiagram.LinkType $r24, r27;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r25, $r26;
        net.sourceforge.plantuml.cucadiagram.Link $r29, $r33, r43;
        net.sourceforge.plantuml.cucadiagram.Display $r30, $r34, $r44;
        net.sourceforge.plantuml.style.StyleBuilder $r32, $r36;
        net.sourceforge.plantuml.command.CommandExecutionResult $r37, $r45;
        java.lang.AssertionError $r38;
        net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity r39;
        net.sourceforge.plantuml.Url r40;

        r39 := @this: net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 := @parameter1: net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;

        r40 := @parameter2: net.sourceforge.plantuml.Url;

        r21 := @parameter3: net.sourceforge.plantuml.command.BlocLines;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("POSITION", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENTITY", 0);

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z0 == 0 goto label1;

        $r41 = r4;

        goto label2;

     label1:
        $r41 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

     label2:
        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENTITY", 1);

        r7 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String eventuallyRemoveStartingAndEndingDoubleQuote(java.lang.String)>($r6);

        if $r41 != null goto label4;

        $z1 = <net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r38 = new java.lang.AssertionError;

        specialinvoke $r38.<java.lang.AssertionError: void <init>()>();

        throw $r38;

     label3:
        $r37 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Nothing to note to");

        return $r37;

     label4:
        r8 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r4, $r41, null, null);

        $r9 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goUpperCase(java.lang.String)>(r1);

        $r10 = staticinvoke <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position valueOf(java.lang.String)>($r9);

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.cucadiagram.Rankdir getRankdir()>();

        r13 = virtualinvoke $r10.<net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position withRankdir(net.sourceforge.plantuml.cucadiagram.Rankdir)>($r12);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("$$$");

        $r17 = virtualinvoke r13.<net.sourceforge.plantuml.command.Position: java.lang.String name()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        r20 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>($r19);

        r42 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafStrict(net.sourceforge.plantuml.cucadiagram.Ident)>(r20);

        if r42 != null goto label7;

        $r22 = virtualinvoke r20.<net.sourceforge.plantuml.cucadiagram.Ident: net.sourceforge.plantuml.cucadiagram.Code toCode(net.sourceforge.plantuml.cucadiagram.CucaDiagram)>(r3);

        $r23 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType TIPS>;

        r42 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r20, $r22, $r23, null);

        $r24 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        $r26 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        $r25 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        specialinvoke $r24.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r26, $r25);

        r27 = virtualinvoke $r24.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType getInvisible()>();

        $r28 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT>;

        if r13 != $r28 goto label5;

        $r33 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r34 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        $r35 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r36 = interfaceinvoke $r35.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r33.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>(r8, r42, r27, $r34, 1, $r36);

        r43 = $r33;

        goto label6;

     label5:
        $r29 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r30 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        $r31 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r32 = interfaceinvoke $r31.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r29.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>(r42, r8, r27, $r30, 1, $r32);

        r43 = $r29;

     label6:
        virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>(r43);

     label7:
        $r44 = virtualinvoke r21.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        interfaceinvoke r42.<net.sourceforge.plantuml.cucadiagram.IEntity: void putTip(java.lang.String,net.sourceforge.plantuml.cucadiagram.Display)>(r7, $r44);

        $r45 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r45;
    }

    static net.sourceforge.plantuml.command.CommandExecutionResult access$000(net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity, net.sourceforge.plantuml.command.regex.RegexResult, net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram, net.sourceforge.plantuml.Url, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram r2;
        net.sourceforge.plantuml.Url r3;
        net.sourceforge.plantuml.command.BlocLines r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @parameter0: net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r2 := @parameter2: net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;

        r3 := @parameter3: net.sourceforge.plantuml.Url;

        r4 := @parameter4: net.sourceforge.plantuml.command.BlocLines;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: net.sourceforge.plantuml.command.CommandExecutionResult executeInternal(net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.command.BlocLines)>(r1, r2, r3, r4);

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/command/note/CommandFactoryTipOnEntity;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.command.note.CommandFactoryTipOnEntity: boolean $assertionsDisabled> = $z1;

        return;
    }
}
