public final class net.sourceforge.plantuml.StringLocated extends java.lang.Object
{
    private final java.lang.String s;
    private final net.sourceforge.plantuml.LineLocation location;
    private final java.lang.String preprocessorError;
    private net.sourceforge.plantuml.StringLocated trimmed;
    private long fox;
    private net.sourceforge.plantuml.tim.TLineType type;

    public void <init>(java.lang.String, net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.StringLocated r0;
        java.lang.String r1;
        net.sourceforge.plantuml.LineLocation r2;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        specialinvoke r0.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>(r1, r2, null);

        return;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.StringLocated r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        $r1 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        return $r1;
    }

    public net.sourceforge.plantuml.StringLocated append(java.lang.String)
    {
        net.sourceforge.plantuml.StringLocated $r0, r2;
        java.lang.StringBuilder $r1, $r4, $r6;
        java.lang.String $r3, r5, $r7, $r8;
        net.sourceforge.plantuml.LineLocation $r9;

        r2 := @this: net.sourceforge.plantuml.StringLocated;

        r5 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.StringLocated;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = r2.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location>;

        $r8 = r2.<net.sourceforge.plantuml.StringLocated: java.lang.String preprocessorError>;

        specialinvoke $r0.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r7, $r9, $r8);

        return $r0;
    }

    public net.sourceforge.plantuml.StringLocated mergeEndBackslash(net.sourceforge.plantuml.StringLocated)
    {
        net.sourceforge.plantuml.StringLocated r0, $r2, r8;
        java.lang.String $r1, $r4, $r5, $r6, $r9, $r11, $r12;
        boolean $z0;
        java.lang.StringBuilder $r3, $r7, $r10;
        int $i0, $i1;
        net.sourceforge.plantuml.LineLocation $r13;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        r8 := @parameter0: net.sourceforge.plantuml.StringLocated;

        $r1 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $z0 = staticinvoke <net.sourceforge.plantuml.StringUtils: boolean endsWithBackslash(java.lang.String)>($r1);

        if $z0 != 0 goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r14;

     label1:
        $r2 = new net.sourceforge.plantuml.StringLocated;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $r4 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r9 = r8.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location>;

        $r12 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String preprocessorError>;

        specialinvoke $r2.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r11, $r13, $r12);

        return $r2;
    }

    public void <init>(java.lang.String, net.sourceforge.plantuml.LineLocation, java.lang.String)
    {
        net.sourceforge.plantuml.StringLocated r0;
        java.lang.String r1, $r3, r5;
        java.lang.Object $r2;
        net.sourceforge.plantuml.LineLocation r4;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r5 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.StringLocated: long fox> = -1L;

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (java.lang.String) $r2;

        r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s> = $r3;

        r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location> = r4;

        r0.<net.sourceforge.plantuml.StringLocated: java.lang.String preprocessorError> = r5;

        return;
    }

    public net.sourceforge.plantuml.StringLocated withErrorPreprocessor(java.lang.String)
    {
        net.sourceforge.plantuml.StringLocated $r0, r1;
        java.lang.String r2, $r4;
        net.sourceforge.plantuml.LineLocation $r3;

        r1 := @this: net.sourceforge.plantuml.StringLocated;

        r2 := @parameter0: java.lang.String;

        $r0 = new net.sourceforge.plantuml.StringLocated;

        $r4 = r1.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $r3 = r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location>;

        specialinvoke $r0.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r4, $r3, r2);

        return $r0;
    }

    public net.sourceforge.plantuml.StringLocated substring(int, int)
    {
        net.sourceforge.plantuml.StringLocated $r0, r1;
        java.lang.String $r2, $r3, $r5;
        int i0, i1;
        net.sourceforge.plantuml.LineLocation $r4;

        r1 := @this: net.sourceforge.plantuml.StringLocated;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new net.sourceforge.plantuml.StringLocated;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int,int)>(i0, i1);

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation getLocation()>();

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: java.lang.String getPreprocessorError()>();

        specialinvoke $r0.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r3, $r4, $r5);

        return $r0;
    }

    public net.sourceforge.plantuml.StringLocated substring(int)
    {
        net.sourceforge.plantuml.StringLocated $r0, r1;
        java.lang.String $r2, $r3, $r5;
        int i0;
        net.sourceforge.plantuml.LineLocation $r4;

        r1 := @this: net.sourceforge.plantuml.StringLocated;

        i0 := @parameter0: int;

        $r0 = new net.sourceforge.plantuml.StringLocated;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String substring(int)>(i0);

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation getLocation()>();

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.StringLocated: java.lang.String getPreprocessorError()>();

        specialinvoke $r0.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r3, $r4, $r5);

        return $r0;
    }

    public net.sourceforge.plantuml.StringLocated getTrimmed()
    {
        net.sourceforge.plantuml.StringLocated r0, $r1, $r2, $r3, $r8, $r9, $r10;
        java.lang.String $r4, $r5, $r6;
        net.sourceforge.plantuml.LineLocation $r7;
        long $l0;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        $r1 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated trimmed>;

        if $r1 != null goto label1;

        $r3 = new net.sourceforge.plantuml.StringLocated;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String trin(java.lang.String)>($r4);

        $r7 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location>;

        $r6 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String preprocessorError>;

        specialinvoke $r3.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r5, $r7, $r6);

        r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated trimmed> = $r3;

        $r8 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated trimmed>;

        $l0 = r0.<net.sourceforge.plantuml.StringLocated: long fox>;

        $r8.<net.sourceforge.plantuml.StringLocated: long fox> = $l0;

        $r10 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated trimmed>;

        $r9 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated trimmed>;

        $r10.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated trimmed> = $r9;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.StringLocated trimmed>;

        return $r2;
    }

    public net.sourceforge.plantuml.StringLocated removeInnerComment()
    {
        net.sourceforge.plantuml.StringLocated r0, $r5, $r10, $r16;
        java.lang.String $r1, r2, $r3, r4, $r6, $r7, $r8, $r11, $r12, $r13, $r14, $r17, $r18, $r19, $r20, $r21;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.LineLocation $r9, $r15, $r22;
        int $i0, $i1, i2, i3;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        $r1 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toString()>();

        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String replace(char,char)>(9, 32);

        r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/\'");

        if $z0 == 0 goto label1;

        i2 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("\'/");

        if i2 == -1 goto label1;

        $r16 = new net.sourceforge.plantuml.StringLocated;

        $r18 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $i0 = i2 + 2;

        $r17 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $i1 = virtualinvoke $r17.<java.lang.String: int length()>();

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        $r20 = specialinvoke r0.<net.sourceforge.plantuml.StringLocated: java.lang.String removeSpecialInnerComment(java.lang.String)>($r19);

        $r22 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location>;

        $r21 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String preprocessorError>;

        specialinvoke $r16.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r20, $r22, $r21);

        return $r16;

     label1:
        $z1 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("\'/");

        if $z1 == 0 goto label2;

        i3 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String)>("/\'");

        if i3 == -1 goto label2;

        $r10 = new net.sourceforge.plantuml.StringLocated;

        $r11 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        $r13 = specialinvoke r0.<net.sourceforge.plantuml.StringLocated: java.lang.String removeSpecialInnerComment(java.lang.String)>($r12);

        $r15 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location>;

        $r14 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String preprocessorError>;

        specialinvoke $r10.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r13, $r15, $r14);

        return $r10;

     label2:
        $z2 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("/\'\'\'");

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r4.<java.lang.String: boolean contains(java.lang.CharSequence)>("\'\'\'/");

        if $z3 == 0 goto label3;

        $r5 = new net.sourceforge.plantuml.StringLocated;

        $r6 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.StringLocated: java.lang.String removeSpecialInnerComment(java.lang.String)>($r6);

        $r9 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location>;

        $r8 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String preprocessorError>;

        specialinvoke $r5.<net.sourceforge.plantuml.StringLocated: void <init>(java.lang.String,net.sourceforge.plantuml.LineLocation,java.lang.String)>($r7, $r9, $r8);

        return $r5;

     label3:
        return r0;
    }

    private java.lang.String removeSpecialInnerComment(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, $z1;
        net.sourceforge.plantuml.StringLocated r2;

        r2 := @this: net.sourceforge.plantuml.StringLocated;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("/\'\'\'");

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("\'\'\'/");

        if $z1 == 0 goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("/\'\'\'[-\\w]*\'\'\'/", "");

        return $r1;

     label1:
        return r0;
    }

    public java.lang.String getString()
    {
        net.sourceforge.plantuml.StringLocated r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        $r1 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        return $r1;
    }

    public net.sourceforge.plantuml.LineLocation getLocation()
    {
        net.sourceforge.plantuml.StringLocated r0;
        net.sourceforge.plantuml.LineLocation $r1;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        $r1 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.LineLocation location>;

        return $r1;
    }

    public java.lang.String getPreprocessorError()
    {
        net.sourceforge.plantuml.StringLocated r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        $r1 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String preprocessorError>;

        return $r1;
    }

    public long getFoxSignature()
    {
        net.sourceforge.plantuml.StringLocated r0;
        long $l0, $l2, $l3;
        byte $b1;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        $l0 = r0.<net.sourceforge.plantuml.StringLocated: long fox>;

        $b1 = $l0 cmp -1L;

        if $b1 != 0 goto label1;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.StringLocated: java.lang.String getString()>();

        $l3 = staticinvoke <net.sourceforge.plantuml.command.regex.FoxSignature: long getFoxSignature(java.lang.String)>($r1);

        r0.<net.sourceforge.plantuml.StringLocated: long fox> = $l3;

     label1:
        $l2 = r0.<net.sourceforge.plantuml.StringLocated: long fox>;

        return $l2;
    }

    public net.sourceforge.plantuml.tim.TLineType getType()
    {
        net.sourceforge.plantuml.StringLocated r0;
        net.sourceforge.plantuml.tim.TLineType $r1, $r2, $r4;
        java.lang.String $r3;

        r0 := @this: net.sourceforge.plantuml.StringLocated;

        $r1 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType type>;

        if $r1 != null goto label1;

        $r3 = r0.<net.sourceforge.plantuml.StringLocated: java.lang.String s>;

        $r4 = staticinvoke <net.sourceforge.plantuml.tim.TLineType: net.sourceforge.plantuml.tim.TLineType getFromLineInternal(java.lang.String)>($r3);

        r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType type> = $r4;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.StringLocated: net.sourceforge.plantuml.tim.TLineType type>;

        return $r2;
    }
}
