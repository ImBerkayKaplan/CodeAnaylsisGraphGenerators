public class net.sourceforge.plantuml.nwdiag.next.NPlayField extends java.lang.Object
{
    private final java.util.List stages;
    private final java.util.List boxes;

    public void <init>()
    {
        net.sourceforge.plantuml.nwdiag.next.NPlayField r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NPlayField;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List stages> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List boxes> = $r2;

        return;
    }

    public net.sourceforge.plantuml.nwdiag.next.NStage getStage(int)
    {
        net.sourceforge.plantuml.nwdiag.next.NPlayField r0;
        java.util.List $r1, $r2, $r6, $r7;
        int $i0, i1, $i2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.nwdiag.next.NStage $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NPlayField;

        i1 := @parameter0: int;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List stages>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 > i1 goto label2;

        $r7 = r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List stages>;

        $r5 = new net.sourceforge.plantuml.nwdiag.next.NStage;

        $r6 = r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List stages>;

        $i2 = interfaceinvoke $r6.<java.util.List: int size()>();

        specialinvoke $r5.<net.sourceforge.plantuml.nwdiag.next.NStage: void <init>(int)>($i2);

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List stages>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        $r4 = (net.sourceforge.plantuml.nwdiag.next.NStage) $r3;

        return $r4;
    }

    public net.sourceforge.plantuml.nwdiag.next.NStage getLast()
    {
        net.sourceforge.plantuml.nwdiag.next.NPlayField r0;
        java.util.List $r1, $r2;
        int $i0, $i1, $i2;
        net.sourceforge.plantuml.nwdiag.next.NStage $r3;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NPlayField;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List stages>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List stages>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: net.sourceforge.plantuml.nwdiag.next.NStage getStage(int)>($i2);

        return $r3;
    }

    public net.sourceforge.plantuml.nwdiag.next.NStage createNewStage()
    {
        net.sourceforge.plantuml.nwdiag.next.NPlayField r0;
        java.util.List $r1;
        int $i0;
        net.sourceforge.plantuml.nwdiag.next.NStage $r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.NPlayField;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List stages>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NPlayField: net.sourceforge.plantuml.nwdiag.next.NStage getStage(int)>($i0);

        return $r2;
    }

    public void addInPlayfield(net.sourceforge.plantuml.nwdiag.next.NBar)
    {
        net.sourceforge.plantuml.nwdiag.next.NBar r0;
        net.sourceforge.plantuml.nwdiag.next.NBox $r1, $r4, $r6, $r7, $r10;
        net.sourceforge.plantuml.nwdiag.next.NPlayField r2;
        java.util.List $r3, $r5, $r9;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.nwdiag.next.NPlayField;

        r0 := @parameter0: net.sourceforge.plantuml.nwdiag.next.NBar;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NBox getParent()>();

        if $r1 != null goto label1;

        $r7 = new net.sourceforge.plantuml.nwdiag.next.NBox;

        specialinvoke $r7.<net.sourceforge.plantuml.nwdiag.next.NBox: void <init>()>();

        virtualinvoke $r7.<net.sourceforge.plantuml.nwdiag.next.NBox: void add(net.sourceforge.plantuml.nwdiag.next.NBar)>(r0);

        virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NBar: void setParent(net.sourceforge.plantuml.nwdiag.next.NBox)>($r7);

        $r9 = r2.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List boxes>;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NBox getParent()>();

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label1:
        $r3 = r2.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List boxes>;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NBox getParent()>();

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>($r4);

        if $z0 != 0 goto label2;

        $r5 = r2.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List boxes>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NBox getParent()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

     label2:
        return;
    }

    public java.util.Map doLayout()
    {
        net.sourceforge.plantuml.nwdiag.next.NTetris $r0;
        net.sourceforge.plantuml.nwdiag.next.NPlayField r2;
        java.util.List $r3;
        boolean $z0, $z1, $z2;
        java.util.HashMap $r4;
        java.util.Set $r5, $r15;
        java.util.Iterator r6, r16, r26;
        java.util.Map $r7, r14, r29;
        java.lang.Object $r8, $r10, $r12, $r17, $r19, $r21, $r25;
        java.util.Map$Entry r9, r18;
        net.sourceforge.plantuml.nwdiag.next.NBox r11, r27;
        java.lang.Integer $r13, $r22, $r23;
        int i0, $i1, $i2;
        net.sourceforge.plantuml.nwdiag.next.NBar $r20;

        r2 := @this: net.sourceforge.plantuml.nwdiag.next.NPlayField;

        $r0 = new net.sourceforge.plantuml.nwdiag.next.NTetris;

        specialinvoke $r0.<net.sourceforge.plantuml.nwdiag.next.NTetris: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List boxes>;

        r26 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r26.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r25 = interfaceinvoke r26.<java.util.Iterator: java.lang.Object next()>();

        r27 = (net.sourceforge.plantuml.nwdiag.next.NBox) $r25;

        virtualinvoke $r0.<net.sourceforge.plantuml.nwdiag.next.NTetris: void add(net.sourceforge.plantuml.nwdiag.next.Staged)>(r27);

        goto label1;

     label2:
        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r29 = virtualinvoke $r0.<net.sourceforge.plantuml.nwdiag.next.NTetris: java.util.Map getPositions()>();

        $r5 = interfaceinvoke r29.<java.util.Map: java.util.Set entrySet()>();

        r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.Map$Entry) $r8;

        $r10 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getKey()>();

        r11 = (net.sourceforge.plantuml.nwdiag.next.NBox) $r10;

        $r12 = interfaceinvoke r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.Integer) $r12;

        i0 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        r14 = virtualinvoke r11.<net.sourceforge.plantuml.nwdiag.next.NBox: java.util.Map getPositions()>();

        $r15 = interfaceinvoke r14.<java.util.Map: java.util.Set entrySet()>();

        r16 = interfaceinvoke $r15.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r17 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r18 = (java.util.Map$Entry) $r17;

        $r19 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r20 = (net.sourceforge.plantuml.nwdiag.next.NBar) $r19;

        $r21 = interfaceinvoke r18.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r22 = (java.lang.Integer) $r21;

        $i1 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        $i2 = i0 + $i1;

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r20, $r23);

        goto label4;

     label5:
        goto label3;

     label6:
        $r7 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r4);

        return $r7;
    }

    public void fixGroups(java.util.List, java.util.Collection)
    {
        java.util.List r0;
        java.util.Iterator r1, r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r6;
        net.sourceforge.plantuml.nwdiag.core.NwGroup r3;
        java.util.Collection r4;
        net.sourceforge.plantuml.nwdiag.core.NServer r7;
        net.sourceforge.plantuml.nwdiag.next.NPlayField r8;

        r8 := @this: net.sourceforge.plantuml.nwdiag.next.NPlayField;

        r0 := @parameter0: java.util.List;

        r4 := @parameter1: java.util.Collection;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.nwdiag.core.NwGroup) $r2;

        r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.nwdiag.core.NServer) $r6;

        $z2 = virtualinvoke r3.<net.sourceforge.plantuml.nwdiag.core.NwGroup: boolean contains(net.sourceforge.plantuml.nwdiag.core.NServer)>(r7);

        if $z2 == 0 goto label3;

        specialinvoke r8.<net.sourceforge.plantuml.nwdiag.next.NPlayField: void fixServerInGroup(net.sourceforge.plantuml.nwdiag.core.NServer,net.sourceforge.plantuml.nwdiag.core.NwGroup)>(r7, r3);

     label3:
        goto label2;

     label4:
        goto label1;

     label5:
        return;
    }

    private void fixServerInGroup(net.sourceforge.plantuml.nwdiag.core.NServer, net.sourceforge.plantuml.nwdiag.core.NwGroup)
    {
        net.sourceforge.plantuml.nwdiag.core.NwGroup r0;
        net.sourceforge.plantuml.nwdiag.next.NBox r1, $r4, $r8;
        net.sourceforge.plantuml.nwdiag.core.NServer r2;
        net.sourceforge.plantuml.nwdiag.next.NBar $r3, $r7, $r10, $r11;
        net.sourceforge.plantuml.nwdiag.next.NPlayField r5;
        java.util.List $r6, $r9, $r12;
        boolean $z1;

        r5 := @this: net.sourceforge.plantuml.nwdiag.next.NPlayField;

        r2 := @parameter0: net.sourceforge.plantuml.nwdiag.core.NServer;

        r0 := @parameter1: net.sourceforge.plantuml.nwdiag.core.NwGroup;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.nwdiag.core.NwGroup: net.sourceforge.plantuml.nwdiag.next.NBox getNboxInternal()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NBox getParent()>();

        if $r4 != r1 goto label1;

        return;

     label1:
        $r6 = r5.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List boxes>;

        $r7 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.nwdiag.next.NBar: net.sourceforge.plantuml.nwdiag.next.NBox getParent()>();

        interfaceinvoke $r6.<java.util.List: boolean remove(java.lang.Object)>($r8);

        $r9 = r5.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List boxes>;

        $z1 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r12 = r5.<net.sourceforge.plantuml.nwdiag.next.NPlayField: java.util.List boxes>;

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        virtualinvoke $r10.<net.sourceforge.plantuml.nwdiag.next.NBar: void setParent(net.sourceforge.plantuml.nwdiag.next.NBox)>(r1);

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.next.NBar getBar()>();

        virtualinvoke r1.<net.sourceforge.plantuml.nwdiag.next.NBox: void add(net.sourceforge.plantuml.nwdiag.next.NBar)>($r11);

        return;
    }
}
