public class net.sourceforge.plantuml.style.StyleSignature extends java.lang.Object
{
    private final java.util.Set names;
    private final boolean withDot;

    public void <init>(java.lang.String)
    {
        net.sourceforge.plantuml.style.StyleSignature r0;
        java.util.LinkedHashSet $r1;
        java.lang.String r2, $r4;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names> = $r1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("&");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("-");

        if $z2 == 0 goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        $z3 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        r0.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot> = $z3;

        $r3 = r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.style.StyleSignature: java.lang.String clean(java.lang.String)>(r2);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r4);

        return;
    }

    public static net.sourceforge.plantuml.style.StyleSignature empty()
    {
        net.sourceforge.plantuml.style.StyleSignature $r0;

        $r0 = new net.sourceforge.plantuml.style.StyleSignature;

        specialinvoke $r0.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean)>(0);

        return $r0;
    }

    private void <init>(boolean)
    {
        net.sourceforge.plantuml.style.StyleSignature r0;
        java.util.LinkedHashSet $r1;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.style.StyleSignature;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names> = $r1;

        r0.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot> = z0;

        return;
    }

    private void <init>(boolean, java.util.Collection)
    {
        net.sourceforge.plantuml.style.StyleSignature r0;
        java.util.LinkedHashSet $r1;
        java.util.Collection r2;
        java.util.Set $r3;
        boolean z1;

        r0 := @this: net.sourceforge.plantuml.style.StyleSignature;

        z1 := @parameter0: boolean;

        r2 := @parameter1: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names> = $r1;

        $r3 = r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        interfaceinvoke $r3.<java.util.Set: boolean addAll(java.util.Collection)>(r2);

        r0.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot> = z1;

        return;
    }

    public net.sourceforge.plantuml.style.StyleSignature addClickable(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.Url r0;
        java.util.LinkedHashSet $r1;
        net.sourceforge.plantuml.style.StyleSignature r2, $r7;
        java.util.Set $r3;
        net.sourceforge.plantuml.style.SName $r5;
        java.lang.String $r6;
        boolean $z1;

        r2 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r0 := @parameter0: net.sourceforge.plantuml.Url;

        if r0 != null goto label1;

        return r2;

     label1:
        $r1 = new java.util.LinkedHashSet;

        $r3 = r2.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r3);

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName clickable>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.style.SName: java.lang.String name()>();

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $r7 = new net.sourceforge.plantuml.style.StyleSignature;

        $z1 = r2.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot>;

        specialinvoke $r7.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>($z1, $r1);

        return $r7;
    }

    public net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)
    {
        java.lang.String r0, $r5;
        boolean $z0, $z1, $z2, $z4, $z5, $z6;
        java.util.LinkedHashSet $r1;
        net.sourceforge.plantuml.style.StyleSignature r2, $r6;
        java.util.Set $r3;
        java.lang.IllegalArgumentException $r7;

        r2 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return r2;

     label1:
        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("&");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("-");

        if $z2 == 0 goto label3;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label3:
        $r1 = new java.util.LinkedHashSet;

        $r3 = r2.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r3);

        $r5 = specialinvoke r2.<net.sourceforge.plantuml.style.StyleSignature: java.lang.String clean(java.lang.String)>(r0);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.style.StyleSignature;

        $z4 = r2.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot>;

        if $z4 != 0 goto label4;

        $z5 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(".");

        if $z5 == 0 goto label5;

     label4:
        $z6 = 1;

        goto label6;

     label5:
        $z6 = 0;

     label6:
        specialinvoke $r6.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>($z6, $r1);

        return $r6;
    }

    public net.sourceforge.plantuml.style.StyleSignature add(net.sourceforge.plantuml.style.SName)
    {
        net.sourceforge.plantuml.style.StyleSignature r0, $r5;
        net.sourceforge.plantuml.style.SName r1;
        java.lang.String $r2, $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r1 := @parameter0: net.sourceforge.plantuml.style.SName;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.style.SName: java.lang.String name()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "");

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>($r4);

        return $r5;
    }

    public net.sourceforge.plantuml.style.StyleSignature addStar()
    {
        java.util.LinkedHashSet $r0;
        net.sourceforge.plantuml.style.StyleSignature r1, $r4;
        java.util.Set $r2;
        boolean $z1;

        r1 := @this: net.sourceforge.plantuml.style.StyleSignature;

        $r0 = new java.util.LinkedHashSet;

        $r2 = r1.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>(java.util.Collection)>($r2);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>("*");

        $r4 = new net.sourceforge.plantuml.style.StyleSignature;

        $z1 = r1.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot>;

        specialinvoke $r4.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>($z1, $r0);

        return $r4;
    }

    public boolean isStarred()
    {
        net.sourceforge.plantuml.style.StyleSignature r0;
        java.util.Set $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.style.StyleSignature;

        $r1 = r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>("*");

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.style.StyleSignature r1, r2;
        java.util.Set $r3, $r4;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.style.StyleSignature) r0;

        $r4 = r2.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $r3 = r1.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean equals(java.lang.Object)>($r3);

        return $z0;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.style.StyleSignature r0;
        java.util.Set $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.style.StyleSignature;

        $r1 = r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r5, $r7, $r8, $r9;
        net.sourceforge.plantuml.style.StyleSignature r2;
        java.util.Set $r3;
        java.util.Iterator r4;
        boolean $z0, $z1;
        java.lang.String $r6, $r10, r12;
        java.lang.Object $r11;
        int $i0;

        r2 := @this: net.sourceforge.plantuml.style.StyleSignature;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.lang.String) $r11;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);

        goto label1;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $z1 = r2.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public boolean matchAll(net.sourceforge.plantuml.style.StyleSignature)
    {
        net.sourceforge.plantuml.style.StyleSignature r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r2, $r6, $r7;
        java.util.Iterator r3;
        java.lang.Object $r4;
        java.lang.String r5;

        r1 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r0 := @parameter0: net.sourceforge.plantuml.style.StyleSignature;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.style.StyleSignature: boolean isStarred()>();

        if $z0 == 0 goto label1;

        $r7 = r1.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $z3 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>("*");

        if $z3 != 0 goto label1;

        return 0;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label5;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("*");

        if $z1 == 0 goto label3;

        goto label2;

     label3:
        $r6 = r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $z2 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        goto label2;

     label5:
        return 1;
    }

    public final java.util.Set getNames()
    {
        net.sourceforge.plantuml.style.StyleSignature r0;
        java.util.Set $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.style.StyleSignature;

        $r1 = r0.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $r2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r1);

        return $r2;
    }

    public static transient net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.style.SName[] r2;
        int i0, i1;
        net.sourceforge.plantuml.style.StyleSignature $r4;
        net.sourceforge.plantuml.style.SName r5;
        java.lang.String $r6, $r7, $r8;

        r2 := @parameter0: net.sourceforge.plantuml.style.SName[];

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r5 = r2[i1];

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.style.SName: java.lang.String name()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = new net.sourceforge.plantuml.style.StyleSignature;

        specialinvoke $r4.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>(0, $r0);

        return $r4;
    }

    public net.sourceforge.plantuml.style.StyleSignature forStereotypeItself(net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.style.StyleSignature r1, $r9;
        java.util.Set $r2;
        net.sourceforge.plantuml.cucadiagram.Stereotype r4;
        net.sourceforge.plantuml.style.SName $r5;
        java.lang.String $r6, $r7, $r8, r13, $r14;
        java.util.List $r10;
        java.util.Iterator r11;
        boolean $z1;
        java.lang.Object $r12;

        r1 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        if r4 == null goto label2;

        $r10 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getStyleNames()>();

        r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        $r14 = specialinvoke r1.<net.sourceforge.plantuml.style.StyleSignature: java.lang.String clean(java.lang.String)>(r13);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r14);

        goto label1;

     label2:
        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName stereotype>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.style.SName: java.lang.String name()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "");

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        $r9 = new net.sourceforge.plantuml.style.StyleSignature;

        specialinvoke $r9.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>(0, $r0);

        return $r9;
    }

    public net.sourceforge.plantuml.style.StyleSignature 'with'(net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.style.StyleSignature r1, $r5;
        java.util.Set $r2;
        net.sourceforge.plantuml.cucadiagram.Stereotype r4;
        java.util.List $r6;
        java.util.Iterator r7;
        boolean $z0;
        java.lang.Object $r8;
        java.lang.String r9, $r10;

        r1 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r4 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        if r4 == null goto label2;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getStyleNames()>();

        r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = specialinvoke r1.<net.sourceforge.plantuml.style.StyleSignature: java.lang.String clean(java.lang.String)>(r9);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label2:
        $r5 = new net.sourceforge.plantuml.style.StyleSignature;

        specialinvoke $r5.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>(1, $r0);

        return $r5;
    }

    public net.sourceforge.plantuml.style.StyleSignature 'with'(net.sourceforge.plantuml.cucadiagram.Stereostyles)
    {
        net.sourceforge.plantuml.cucadiagram.Stereostyles r0;
        boolean $z0, $z1;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.style.StyleSignature r2, $r7;
        java.util.Set $r3;
        java.util.Collection $r5;
        java.util.Iterator r6;
        java.lang.Object $r8;
        java.lang.String r9, $r10;

        r2 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereostyles;

        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereostyles: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r2;

     label1:
        $r1 = new java.util.ArrayList;

        $r3 = r2.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereostyles: java.util.Collection getStyleNames()>();

        r6 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.lang.String) $r8;

        $r10 = specialinvoke r2.<net.sourceforge.plantuml.style.StyleSignature: java.lang.String clean(java.lang.String)>(r9);

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r7 = new net.sourceforge.plantuml.style.StyleSignature;

        specialinvoke $r7.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>(1, $r1);

        return $r7;
    }

    private java.lang.String clean(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3;
        net.sourceforge.plantuml.style.StyleSignature r4;

        r4 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>();

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("_", "");

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(".", "");

        return $r3;
    }

    public net.sourceforge.plantuml.style.StyleSignature mergeWith(java.util.List)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.style.StyleSignature r1, $r6, $r9;
        java.util.Set $r2, $r10;
        java.util.List r4;
        java.util.Iterator r5, r11;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7, $r12;
        net.sourceforge.plantuml.style.Style r8;
        java.lang.String r13;

        r1 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r4 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.style.Style) $r7;

        $r9 = virtualinvoke r8.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.StyleSignature getSignature()>();

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set getNames()>();

        r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r12 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.lang.String) $r12;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r13);

        goto label2;

     label3:
        goto label1;

     label4:
        $r6 = new net.sourceforge.plantuml.style.StyleSignature;

        $z1 = r1.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot>;

        specialinvoke $r6.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>($z1, $r0);

        return $r6;
    }

    public net.sourceforge.plantuml.style.StyleSignature mergeWith(net.sourceforge.plantuml.style.StyleSignature)
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.style.StyleSignature r1, r4, $r6;
        java.util.Set $r2, $r5;
        boolean $z1, $z2, $z3;

        r1 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r4 := @parameter0: net.sourceforge.plantuml.style.StyleSignature;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r5 = r4.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = new net.sourceforge.plantuml.style.StyleSignature;

        $z1 = r1.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot>;

        if $z1 != 0 goto label1;

        $z2 = r4.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot>;

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        specialinvoke $r6.<net.sourceforge.plantuml.style.StyleSignature: void <init>(boolean,java.util.Collection)>($z3, $r0);

        return $r6;
    }

    public net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.style.StyleBuilder r0;
        net.sourceforge.plantuml.style.StyleSignature r1;
        net.sourceforge.plantuml.style.Style $r2;

        r1 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r0 := @parameter0: net.sourceforge.plantuml.style.StyleBuilder;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.style.StyleBuilder: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleSignature)>(r1);

        return $r2;
    }

    public boolean match(net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        net.sourceforge.plantuml.cucadiagram.Stereotype r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0, $z1;
        java.lang.Object $r3;
        java.lang.String r4, $r7;
        net.sourceforge.plantuml.style.StyleSignature r5;
        java.util.Set $r6;

        r5 := @this: net.sourceforge.plantuml.style.StyleSignature;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Stereotype: java.util.List getMultipleLabels()>();

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r6 = r5.<net.sourceforge.plantuml.style.StyleSignature: java.util.Set names>;

        $r7 = specialinvoke r5.<net.sourceforge.plantuml.style.StyleSignature: java.lang.String clean(java.lang.String)>(r4);

        $z1 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>($r7);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public final boolean isWithDot()
    {
        net.sourceforge.plantuml.style.StyleSignature r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.style.StyleSignature;

        $z0 = r0.<net.sourceforge.plantuml.style.StyleSignature: boolean withDot>;

        return $z0;
    }

    public static net.sourceforge.plantuml.style.StyleSignature activity()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public static net.sourceforge.plantuml.style.StyleSignature activityDiamond()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.style.StyleSignature $r6;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName diamond>;

        $r0[4] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r6;
    }

    public static net.sourceforge.plantuml.style.StyleSignature activityArrow()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4, $r5;
        net.sourceforge.plantuml.style.StyleSignature $r6;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[5];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r0[4] = $r5;

        $r6 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r6;
    }
}
