public class net.sourceforge.plantuml.ugraphic.visio.VisioLine extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.visio.VisioShape
{
    private final int id;
    private final double x1;
    private final double y1;
    private final double x2;
    private final double y2;

    public static net.sourceforge.plantuml.ugraphic.visio.VisioLine createInches(int, double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioLine $r0;
        int i0;
        double d0, $d1, d2, $d3, d4, $d5, d6, $d7;

        i0 := @parameter0: int;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        d4 := @parameter3: double;

        d6 := @parameter4: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.visio.VisioLine;

        $d1 = staticinvoke <net.sourceforge.plantuml.ugraphic.visio.VisioLine: double toInches(double)>(d0);

        $d3 = staticinvoke <net.sourceforge.plantuml.ugraphic.visio.VisioLine: double toInches(double)>(d2);

        $d5 = staticinvoke <net.sourceforge.plantuml.ugraphic.visio.VisioLine: double toInches(double)>(d4);

        $d7 = staticinvoke <net.sourceforge.plantuml.ugraphic.visio.VisioLine: double toInches(double)>(d6);

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void <init>(int,double,double,double,double)>(i0, $d1, $d3, $d5, $d7);

        return $r0;
    }

    private void <init>(int, double, double, double, double)
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioLine r0;
        double d0, d1, d2, d3;
        byte $b0, $b1, $b2, $b3;
        int i4;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioLine;

        i4 := @parameter0: int;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d2 := @parameter3: double;

        d3 := @parameter4: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $b0 = d0 cmpg 0.0;

        if $b0 < 0 goto label1;

        $b1 = d1 cmpg 0.0;

        if $b1 < 0 goto label1;

        $b2 = d2 cmpg 0.0;

        if $b2 < 0 goto label1;

        $b3 = d3 cmpg 0.0;

        if $b3 >= 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label2:
        r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: int id> = i4;

        r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x1> = d0;

        r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y1> = d1;

        r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x2> = d2;

        r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y2> = d3;

        return;
    }

    public net.sourceforge.plantuml.ugraphic.visio.VisioShape yReverse(double)
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioLine $r0, r1;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6;
        int $i0;

        r1 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioLine;

        d0 := @parameter0: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.visio.VisioLine;

        $i0 = r1.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: int id>;

        $d6 = r1.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x1>;

        $d1 = r1.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y1>;

        $d5 = d0 - $d1;

        $d4 = r1.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x2>;

        $d2 = r1.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y2>;

        $d3 = d0 - $d2;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void <init>(int,double,double,double,double)>($i0, $d6, $d5, $d4, $d3);

        return $r0;
    }

    private static double toInches(double)
    {
        double d0, $d1;

        d0 := @parameter0: double;

        $d1 = d0 / 72.0;

        return $d1;
    }

    public void print(java.io.OutputStream) throws java.io.IOException
    {
        net.sourceforge.plantuml.ugraphic.visio.VisioLine r0;
        java.io.OutputStream r1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r37, $r38, $r39, $r40, $r42, $r43, $r44, $r45, $r47, $r48, $r49, $r50, $r52, $r53, $r54, $r55;
        int $i0;
        java.lang.String $r6, $r11, $r16, $r21, $r26, $r31, $r36, $r41, $r46, $r51, $r56;
        double $d0, $d1, d2, $d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, $d18, d19, $d20, $d21, $d22, $d23;

        r0 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioLine;

        r1 := @parameter0: java.io.OutputStream;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Shape ID=\'");

        $i0 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: int id>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' Type=\'Shape\' LineStyle=\'3\' FillStyle=\'3\' TextStyle=\'3\'>");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r6);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<XForm>");

        $d1 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x2>;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x1>;

        d2 = $d1 - $d0;

        $d4 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y2>;

        $d3 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y1>;

        d5 = $d4 - $d3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<PinX F=\'(BeginX+EndX)/2\'>");

        $d7 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x1>;

        $d6 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x2>;

        $d8 = $d7 + $d6;

        $d9 = $d8 / 2.0;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d9);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</PinX>");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<PinY F=\'(BeginY+EndY)/2\'>");

        $d11 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y1>;

        $d10 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y2>;

        $d12 = $d11 + $d10;

        $d13 = $d12 / 2.0;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</PinY>");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r16);

        $d15 = d2 * d2;

        $d14 = d5 * d5;

        $d16 = $d15 + $d14;

        d17 = staticinvoke <java.lang.Math: double sqrt(double)>($d16);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Width F=\'Sqrt((EndX-BeginX)^2+(EndY-BeginY)^2)\'>");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d17);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Width>");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r21);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<Height>0</Height>");

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<LocPinX F=\'Width*0.5\'>");

        $d18 = d17 / 2.0;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d18);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</LocPinX>");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r26);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<LocPinY F=\'Height*0.5\'>0</LocPinY>");

        d19 = staticinvoke <java.lang.Math: double atan2(double,double)>(d5, d2);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<Angle F=\'ATan2(EndY-BeginY,EndX-BeginX)\'>");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d19);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</Angle>");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r31);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<FlipX>0</FlipX>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<FlipY>0</FlipY>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<ResizeMode>0</ResizeMode>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "</XForm>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<XForm1D>");

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<BeginX>");

        $d20 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x1>;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d20);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</BeginX>");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r36);

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<BeginY>");

        $d21 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y1>;

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d21);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</BeginY>");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r41);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<EndX>");

        $d22 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double x2>;

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d22);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</EndX>");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r46);

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<EndY>");

        $d23 = r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: double y2>;

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d23);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</EndY>");

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r51);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "</XForm1D>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<Geom IX=\'0\'>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<NoFill>1</NoFill>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<NoLine>0</NoLine>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<NoShow>0</NoShow>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<NoSnap>0</NoSnap>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<MoveTo IX=\'1\'>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<X F=\'Width*0\'>0</X>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<Y>0</Y>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "</MoveTo>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<LineTo IX=\'2\'>");

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<X F=\'Width*1\'>");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d17);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</X>");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, $r56);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "<Y>0</Y>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "</LineTo>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "</Geom>");

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.visio.VisioLine: void out(java.io.OutputStream,java.lang.String)>(r1, "</Shape>");

        return;
    }

    private void out(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r0;
        java.lang.String r1, $r3;
        byte[] $r2, $r4;
        net.sourceforge.plantuml.ugraphic.visio.VisioLine r5;

        r5 := @this: net.sourceforge.plantuml.ugraphic.visio.VisioLine;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $r3 = "\n";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes()>();

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r4);

        return;
    }
}
