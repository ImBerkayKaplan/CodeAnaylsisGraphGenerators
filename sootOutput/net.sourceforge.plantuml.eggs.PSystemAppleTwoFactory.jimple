public class net.sourceforge.plantuml.eggs.PSystemAppleTwoFactory extends net.sourceforge.plantuml.command.PSystemSingleLineFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.eggs.PSystemAppleTwoFactory r0;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemAppleTwoFactory;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemSingleLineFactory: void <init>()>();

        return;
    }

    protected net.sourceforge.plantuml.AbstractPSystem executeLine(net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        java.lang.String r0, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.core.UmlSource r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r4, $r5, $r6;
        net.sourceforge.plantuml.eggs.PSystemAppleTwoFactory r8;
        net.sourceforge.plantuml.eggs.PSystemAppleTwo $r9;

        r8 := @this: net.sourceforge.plantuml.eggs.PSystemAppleTwoFactory;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("apple //e");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("apple ][");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("apple II");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Steve Jobs");

        if $z3 != 0 goto label1;

        $z4 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Steve Wozniak");

        if $z4 == 0 goto label4;

     label1:
        $r9 = new net.sourceforge.plantuml.eggs.PSystemAppleTwo;

        specialinvoke $r9.<net.sourceforge.plantuml.eggs.PSystemAppleTwo: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

     label2:
        return $r9;

     label3:
        $r2 := @caughtexception;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r7);

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

     label4:
        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
