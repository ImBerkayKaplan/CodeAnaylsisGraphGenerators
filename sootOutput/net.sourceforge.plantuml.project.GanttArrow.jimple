public class net.sourceforge.plantuml.project.GanttArrow extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final net.sourceforge.plantuml.project.timescale.TimeScale timeScale;
    private final net.sourceforge.plantuml.Direction atStart;
    private final net.sourceforge.plantuml.project.core.TaskInstant source;
    private final net.sourceforge.plantuml.Direction atEnd;
    private final net.sourceforge.plantuml.project.core.TaskInstant dest;
    private final net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet;
    private final net.sourceforge.plantuml.style.Style style;
    private final net.sourceforge.plantuml.project.ToTaskDraw toTaskDraw;
    private final net.sourceforge.plantuml.style.StyleBuilder styleBuilder;

    public void <init>(net.sourceforge.plantuml.ugraphic.color.HColorSet, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.project.timescale.TimeScale, net.sourceforge.plantuml.project.core.TaskInstant, net.sourceforge.plantuml.project.core.TaskInstant, net.sourceforge.plantuml.project.ToTaskDraw, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.project.GanttArrow r0;
        net.sourceforge.plantuml.style.StyleBuilder r1;
        net.sourceforge.plantuml.project.ToTaskDraw r2;
        net.sourceforge.plantuml.style.Style r3;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r4;
        net.sourceforge.plantuml.project.timescale.TimeScale r5;
        net.sourceforge.plantuml.project.core.TaskInstant r6, r7;
        net.sourceforge.plantuml.project.core.TaskAttribute $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r21, $r22, $r25, $r26, $r29, $r30;
        java.lang.IllegalArgumentException $r16;
        boolean $z0, $z1;
        net.sourceforge.plantuml.Direction $r19, $r23, $r24, $r27, $r28, $r31, $r33, $r34;

        r0 := @this: net.sourceforge.plantuml.project.GanttArrow;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        r3 := @parameter1: net.sourceforge.plantuml.style.Style;

        r5 := @parameter2: net.sourceforge.plantuml.project.timescale.TimeScale;

        r6 := @parameter3: net.sourceforge.plantuml.project.core.TaskInstant;

        r7 := @parameter4: net.sourceforge.plantuml.project.core.TaskInstant;

        r2 := @parameter5: net.sourceforge.plantuml.project.ToTaskDraw;

        r1 := @parameter6: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.style.StyleBuilder styleBuilder> = r1;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.ToTaskDraw toTaskDraw> = r2;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.style.Style style> = r3;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet> = r4;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.timescale.TimeScale timeScale> = r5;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant source> = r6;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant dest> = r7;

        $r8 = virtualinvoke r6.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r9 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        if $r8 != $r9 goto label3;

        $r29 = virtualinvoke r7.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r30 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if $r29 != $r30 goto label3;

        $z1 = virtualinvoke r6.<net.sourceforge.plantuml.project.core.TaskInstant: boolean sameRowAs(net.sourceforge.plantuml.project.core.TaskInstant)>(r7);

        if $z1 == 0 goto label1;

        $r33 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        goto label2;

     label1:
        $r33 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

     label2:
        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart> = $r33;

        $r31 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd> = $r31;

        goto label9;

     label3:
        $r10 = virtualinvoke r6.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r11 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        if $r10 != $r11 goto label4;

        $r25 = virtualinvoke r7.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r26 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        if $r25 != $r26 goto label4;

        $r27 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart> = $r27;

        $r28 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd> = $r28;

        goto label9;

     label4:
        $r12 = virtualinvoke r6.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r13 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if $r12 != $r13 goto label5;

        $r21 = virtualinvoke r7.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r22 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if $r21 != $r22 goto label5;

        $r23 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart> = $r23;

        $r24 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd> = $r24;

        goto label9;

     label5:
        $r14 = virtualinvoke r6.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r15 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute START>;

        if $r14 != $r15 goto label8;

        $r17 = virtualinvoke r7.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r18 = <net.sourceforge.plantuml.project.core.TaskAttribute: net.sourceforge.plantuml.project.core.TaskAttribute END>;

        if $r17 != $r18 goto label8;

        $z0 = virtualinvoke r6.<net.sourceforge.plantuml.project.core.TaskInstant: boolean sameRowAs(net.sourceforge.plantuml.project.core.TaskInstant)>(r7);

        if $z0 == 0 goto label6;

        $r34 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        goto label7;

     label6:
        $r34 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

     label7:
        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart> = $r34;

        $r19 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd> = $r19;

        goto label9;

     label8:
        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r16;

     label9:
        return;
    }

    private net.sourceforge.plantuml.project.draw.TaskDraw getSource()
    {
        net.sourceforge.plantuml.project.GanttArrow r0;
        net.sourceforge.plantuml.project.core.TaskInstant $r1, $r3;
        net.sourceforge.plantuml.project.core.Moment $r2, $r5;
        boolean $z0;
        net.sourceforge.plantuml.project.ToTaskDraw $r4;
        net.sourceforge.plantuml.project.core.Task $r6;
        net.sourceforge.plantuml.project.draw.TaskDraw $r7;

        r0 := @this: net.sourceforge.plantuml.project.GanttArrow;

        $r1 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant source>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment getMoment()>();

        $z0 = $r2 instanceof net.sourceforge.plantuml.project.core.Task;

        if $z0 == 0 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.ToTaskDraw toTaskDraw>;

        $r3 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant source>;

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment getMoment()>();

        $r6 = (net.sourceforge.plantuml.project.core.Task) $r5;

        $r7 = interfaceinvoke $r4.<net.sourceforge.plantuml.project.ToTaskDraw: net.sourceforge.plantuml.project.draw.TaskDraw getTaskDraw(net.sourceforge.plantuml.project.core.Task)>($r6);

        return $r7;

     label1:
        return null;
    }

    private net.sourceforge.plantuml.project.draw.TaskDraw getDestination()
    {
        net.sourceforge.plantuml.project.GanttArrow r0;
        net.sourceforge.plantuml.project.core.TaskInstant $r1, $r3;
        net.sourceforge.plantuml.project.core.Moment $r2, $r5;
        boolean $z0;
        net.sourceforge.plantuml.project.ToTaskDraw $r4;
        net.sourceforge.plantuml.project.core.Task $r6;
        net.sourceforge.plantuml.project.draw.TaskDraw $r7;

        r0 := @this: net.sourceforge.plantuml.project.GanttArrow;

        $r1 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant dest>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment getMoment()>();

        $z0 = $r2 instanceof net.sourceforge.plantuml.project.core.Task;

        if $z0 == 0 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.ToTaskDraw toTaskDraw>;

        $r3 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant dest>;

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.Moment getMoment()>();

        $r6 = (net.sourceforge.plantuml.project.core.Task) $r5;

        $r7 = interfaceinvoke $r4.<net.sourceforge.plantuml.project.ToTaskDraw: net.sourceforge.plantuml.project.draw.TaskDraw getTaskDraw(net.sourceforge.plantuml.project.core.Task)>($r6);

        return $r7;

     label1:
        return null;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.GanttArrow r0;
        net.sourceforge.plantuml.style.StyleBuilder $r1, $r56;
        net.sourceforge.plantuml.style.Style $r2, $r53;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r3, $r59;
        net.sourceforge.plantuml.SkinParam $r4, $r57;
        net.sourceforge.plantuml.api.ThemeStyle $r5, $r58;
        net.sourceforge.plantuml.project.draw.TaskDraw r6, r7;
        net.sourceforge.plantuml.project.core.TaskInstant $r8, $r13, $r38;
        net.sourceforge.plantuml.project.core.TaskAttribute $r9, $r14, $r39;
        net.sourceforge.plantuml.Direction $r10, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r30, $r31, $r33, $r34, $r36, $r37, $r40, $r41, $r45, $r46, $r49, $r50, $r65;
        net.sourceforge.plantuml.graphic.StringBounder r11;
        double d0, d1, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11, d12, d13, d14, d15, d16;
        java.lang.IllegalArgumentException $r26;
        double[] $r29, $r32, $r35, $r43, $r44;
        byte $b0, $b1, $b2;
        net.sourceforge.plantuml.real.Real $r42;
        net.sourceforge.plantuml.ugraphic.UGraphic r47, r48, $r52, r62, $r64;
        net.sourceforge.plantuml.ugraphic.UStroke $r51;
        net.sourceforge.plantuml.style.PName $r54;
        net.sourceforge.plantuml.style.Value $r55;
        net.sourceforge.plantuml.ugraphic.color.HColor $r60;
        net.sourceforge.plantuml.ugraphic.UBackground $r61;
        net.sourceforge.plantuml.ugraphic.UTranslate $r63;
        net.sourceforge.plantuml.ugraphic.UPolygon $r66;

        r0 := @this: net.sourceforge.plantuml.project.GanttArrow;

        r47 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.style.Style style>;

        $r3 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet>;

        $r1 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        $r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleBuilder: net.sourceforge.plantuml.SkinParam getSkinParam()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.SkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r48 = virtualinvoke $r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UGraphic applyStrokeAndLineColor(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.api.ThemeStyle)>(r47, $r3, $r5);

        r6 = specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.draw.TaskDraw getSource()>();

        r7 = specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.draw.TaskDraw getDestination()>();

        if r6 == null goto label01;

        if r7 != null goto label02;

     label01:
        return;

     label02:
        $r8 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant source>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r10 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart>;

        d10 = specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: double getX(net.sourceforge.plantuml.project.core.TaskAttribute,net.sourceforge.plantuml.project.draw.TaskDraw,net.sourceforge.plantuml.Direction)>($r9, r6, $r10);

        r11 = interfaceinvoke r48.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r12 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart>;

        d11 = interfaceinvoke r6.<net.sourceforge.plantuml.project.draw.TaskDraw: double getY(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.Direction)>(r11, $r12);

        $r13 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant dest>;

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r15 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd>;

        $r16 = virtualinvoke $r15.<net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction getInv()>();

        d0 = specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: double getX(net.sourceforge.plantuml.project.core.TaskAttribute,net.sourceforge.plantuml.project.draw.TaskDraw,net.sourceforge.plantuml.Direction)>($r14, r7, $r16);

        $r17 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd>;

        d1 = interfaceinvoke r7.<net.sourceforge.plantuml.project.draw.TaskDraw: double getY(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.Direction)>(r11, $r17);

        $r19 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart>;

        $r18 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

        if $r19 != $r18 goto label03;

        $b2 = d1 cmpg d11;

        if $b2 >= 0 goto label03;

        $r45 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart>;

        $r46 = virtualinvoke $r45.<net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction getInv()>();

        d11 = interfaceinvoke r6.<net.sourceforge.plantuml.project.draw.TaskDraw: double getY(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.Direction)>(r11, $r46);

     label03:
        $r49 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart>;

        $r50 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

        if $r49 != $r50 goto label06;

        $r37 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd>;

        $r36 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if $r37 != $r36 goto label06;

        $b0 = d0 cmpl d10;

        if $b0 <= 0 goto label05;

        $d9 = d0 - d10;

        $b1 = $d9 cmpg 8.0;

        if $b1 >= 0 goto label04;

        d10 = d0 - 8.0;

     label04:
        $r44 = newarray (double)[6];

        $r44[0] = d10;

        $r44[1] = d11;

        $r44[2] = d10;

        $r44[3] = d1;

        $r44[4] = d0;

        $r44[5] = d1;

        specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double[])>(r48, $r44);

        goto label10;

     label05:
        $r38 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.project.core.TaskInstant source>;

        $r39 = virtualinvoke $r38.<net.sourceforge.plantuml.project.core.TaskInstant: net.sourceforge.plantuml.project.core.TaskAttribute getAttribute()>();

        $r40 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        d12 = specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: double getX(net.sourceforge.plantuml.project.core.TaskAttribute,net.sourceforge.plantuml.project.draw.TaskDraw,net.sourceforge.plantuml.Direction)>($r39, r6, $r40);

        $r41 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        d13 = interfaceinvoke r6.<net.sourceforge.plantuml.project.draw.TaskDraw: double getY(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.Direction)>(r11, $r41);

        $r42 = interfaceinvoke r7.<net.sourceforge.plantuml.project.draw.TaskDraw: net.sourceforge.plantuml.real.Real getY(net.sourceforge.plantuml.graphic.StringBounder)>(r11);

        d14 = interfaceinvoke $r42.<net.sourceforge.plantuml.real.Real: double getCurrentValue()>();

        $r43 = newarray (double)[12];

        $r43[0] = d12;

        $r43[1] = d13;

        $d5 = d12 + 6.0;

        $r43[2] = $d5;

        $r43[3] = d13;

        $d6 = d12 + 6.0;

        $r43[4] = $d6;

        $r43[5] = d14;

        $d7 = d0 - 8.0;

        $r43[6] = $d7;

        $r43[7] = d14;

        $d8 = d0 - 8.0;

        $r43[8] = $d8;

        $r43[9] = d1;

        $r43[10] = d0;

        $r43[11] = d1;

        specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double[])>(r48, $r43);

        goto label10;

     label06:
        $r21 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart>;

        $r20 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if $r21 != $r20 goto label07;

        $r34 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd>;

        $r33 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if $r34 != $r33 goto label07;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d10, d0);

        d15 = $d4 + 8.0;

        $r35 = newarray (double)[8];

        $r35[0] = d10;

        $r35[1] = d11;

        $r35[2] = d15;

        $r35[3] = d11;

        $r35[4] = d15;

        $r35[5] = d1;

        $r35[6] = d0;

        $r35[7] = d1;

        specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double[])>(r48, $r35);

        goto label10;

     label07:
        $r23 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart>;

        $r22 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if $r23 != $r22 goto label08;

        $r31 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd>;

        $r30 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if $r31 != $r30 goto label08;

        $d3 = staticinvoke <java.lang.Math: double min(double,double)>(d10, d0);

        d16 = $d3 - 8.0;

        $r32 = newarray (double)[8];

        $r32[0] = d10;

        $r32[1] = d11;

        $r32[2] = d16;

        $r32[3] = d11;

        $r32[4] = d16;

        $r32[5] = d1;

        $r32[6] = d0;

        $r32[7] = d1;

        specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double[])>(r48, $r32);

        goto label10;

     label08:
        $r25 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atStart>;

        $r24 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

        if $r25 != $r24 goto label09;

        $r28 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd>;

        $r27 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if $r28 != $r27 goto label09;

        $r29 = newarray (double)[6];

        $r29[0] = d10;

        $r29[1] = d11;

        $r29[2] = d10;

        $r29[3] = d1;

        $r29[4] = d0;

        $r29[5] = d1;

        specialinvoke r0.<net.sourceforge.plantuml.project.GanttArrow: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double[])>(r48, $r29);

        goto label10;

     label09:
        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r26;

     label10:
        $r51 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r51.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(1.5);

        $r52 = interfaceinvoke r48.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r51);

        $r53 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.style.Style style>;

        $r54 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r55 = virtualinvoke $r53.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r54);

        $r56 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        $r57 = virtualinvoke $r56.<net.sourceforge.plantuml.style.StyleBuilder: net.sourceforge.plantuml.SkinParam getSkinParam()>();

        $r58 = virtualinvoke $r57.<net.sourceforge.plantuml.SkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r59 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.ugraphic.color.HColorSet colorSet>;

        $r60 = interfaceinvoke $r55.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r58, $r59);

        $r61 = interfaceinvoke $r60.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r62 = interfaceinvoke $r52.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r61);

        $r63 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r63.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d1);

        $r64 = interfaceinvoke r62.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r63);

        $r65 = r0.<net.sourceforge.plantuml.project.GanttArrow: net.sourceforge.plantuml.Direction atEnd>;

        $r66 = staticinvoke <net.sourceforge.plantuml.project.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asTo(net.sourceforge.plantuml.Direction)>($r65);

        interfaceinvoke $r64.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r66);

        return;
    }

    private transient void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, double[])
    {
        double[] r0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        double d0, d1, d2, d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.ugraphic.ULine $r4;
        net.sourceforge.plantuml.project.GanttArrow r5;

        r5 := @this: net.sourceforge.plantuml.project.GanttArrow;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: double[];

        i5 = 0;

     label1:
        $i0 = lengthof r0;

        $i1 = $i0 - 2;

        if i5 >= $i1 goto label2;

        d0 = r0[i5];

        $i2 = i5 + 1;

        d1 = r0[$i2];

        $i3 = i5 + 2;

        d2 = r0[$i3];

        $i4 = i5 + 3;

        d3 = r0[$i4];

        $r2 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d1);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d5 = d2 - d0;

        $d4 = d3 - d1;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d5, $d4);

        interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        i5 = i5 + 2;

        goto label1;

     label2:
        return;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignatureTask()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.project.GanttArrow r6;

        r6 := @this: net.sourceforge.plantuml.project.GanttArrow;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName ganttDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName task>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    private double getX(net.sourceforge.plantuml.project.core.TaskAttribute, net.sourceforge.plantuml.project.draw.TaskDraw, net.sourceforge.plantuml.Direction)
    {
        net.sourceforge.plantuml.Direction r0, $r1, $r2;
        net.sourceforge.plantuml.project.draw.TaskDraw r3;
        net.sourceforge.plantuml.project.core.TaskAttribute r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.project.GanttArrow r5;

        r5 := @this: net.sourceforge.plantuml.project.GanttArrow;

        r4 := @parameter0: net.sourceforge.plantuml.project.core.TaskAttribute;

        r3 := @parameter1: net.sourceforge.plantuml.project.draw.TaskDraw;

        r0 := @parameter2: net.sourceforge.plantuml.Direction;

        $r1 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        if r0 != $r1 goto label1;

        $d6 = interfaceinvoke r3.<net.sourceforge.plantuml.project.draw.TaskDraw: double getX1(net.sourceforge.plantuml.project.core.TaskAttribute)>(r4);

        $d7 = $d6 - 1.0;

        return $d7;

     label1:
        $r2 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if r0 != $r2 goto label2;

        $d4 = interfaceinvoke r3.<net.sourceforge.plantuml.project.draw.TaskDraw: double getX2(net.sourceforge.plantuml.project.core.TaskAttribute)>(r4);

        $d5 = $d4 + 1.0;

        return $d5;

     label2:
        $d0 = interfaceinvoke r3.<net.sourceforge.plantuml.project.draw.TaskDraw: double getX1(net.sourceforge.plantuml.project.core.TaskAttribute)>(r4);

        $d1 = interfaceinvoke r3.<net.sourceforge.plantuml.project.draw.TaskDraw: double getX2(net.sourceforge.plantuml.project.core.TaskAttribute)>(r4);

        $d2 = $d0 + $d1;

        $d3 = $d2 / 2.0;

        return $d3;
    }
}
