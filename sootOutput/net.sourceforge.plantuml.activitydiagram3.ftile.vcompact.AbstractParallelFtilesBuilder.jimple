public abstract class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder extends java.lang.Object
{
    protected final double barHeight;
    private final net.sourceforge.plantuml.skin.rose.Rose rose;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;
    protected final java.util.List list99;

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activity>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public final net.sourceforge.plantuml.style.StyleSignature getStyleSignatureArrow()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r6;

        r6 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName activityDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r5;
    }

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder, java.util.List)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1;
        java.util.ArrayList $r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.graphic.StringBounder r4;
        java.util.List r5, $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        r3 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r5 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: double barHeight> = 6.0;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: double barHeight> = 6.0;

        $r1 = new net.sourceforge.plantuml.skin.rose.Rose;

        specialinvoke $r1.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.skin.rose.Rose rose> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: java.util.List list99> = $r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.ISkinParam skinParam> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r4;

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: java.util.List list99>;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: java.util.List getFoo2(java.util.List)>(r5);

        interfaceinvoke $r6.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        return;
    }

    protected java.util.List getFoo2(java.util.List)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r0;
        java.util.List r1;
        double d0;
        java.util.ArrayList $r2;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r6, r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        r1 := @parameter0: java.util.List;

        d0 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: double computeMaxHeight(java.util.List)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r5;

        r7 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile computeNewFtile(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>(r6, d0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r7);

        goto label1;

     label2:
        return $r2;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile computeNewFtile(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, double)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0, r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileHeightFixedCentered $r1;
        double d2, $d3;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r2;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        d2 := @parameter1: double;

        r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.FtileUtils: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addHorizontalMargin(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>(r0, 14.0);

        $r1 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileHeightFixedCentered;

        $d3 = d2 + 40.0;

        specialinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileHeightFixedCentered: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,double)>(r3, $d3);

        return $r1;
    }

    protected final double computeMaxHeight(java.util.List)
    {
        java.util.List r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r4;
        net.sourceforge.plantuml.graphic.StringBounder $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r6;
        double $d0, d1;

        r4 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        r0 := @parameter0: java.util.List;

        d1 = 0.0;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r2;

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r6 = interfaceinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r5);

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        d1 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d0);

        goto label1;

     label2:
        return d1;
    }

    public final net.sourceforge.plantuml.activitydiagram3.ftile.Ftile build(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r1, r2, $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile doStep1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile doStep2(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r1, r2);

        return $r3;
    }

    protected abstract net.sourceforge.plantuml.activitydiagram3.ftile.Ftile doStep1(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile);

    protected abstract net.sourceforge.plantuml.activitydiagram3.ftile.Ftile doStep2(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile);

    protected net.sourceforge.plantuml.graphic.StringBounder getStringBounder()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        return $r1;
    }

    protected net.sourceforge.plantuml.skin.rose.Rose getRose()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.skin.rose.Rose rose>;

        return $r1;
    }

    protected net.sourceforge.plantuml.ISkinParam skinParam()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r0;
        net.sourceforge.plantuml.ISkinParam $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.ISkinParam skinParam>;

        return $r1;
    }

    protected final net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.cucadiagram.Display r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1, r17;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r2;
        net.sourceforge.plantuml.ISkinParam $r3, $r6, $r10, $r13, $r15;
        net.sourceforge.plantuml.FontParam $r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r5;
        net.sourceforge.plantuml.creole.CreoleMode $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8;
        net.sourceforge.plantuml.style.StyleSignature $r9;
        net.sourceforge.plantuml.style.StyleBuilder $r11;
        net.sourceforge.plantuml.style.Style r12;
        net.sourceforge.plantuml.api.ThemeStyle $r14;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r16;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label2;

        $r9 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.style.StyleSignature getStyleSignatureArrow()>();

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r12 = virtualinvoke $r9.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r11);

        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r15 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r16 = interfaceinvoke $r15.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r17 = virtualinvoke r12.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r14, $r16);

        goto label3;

     label2:
        $r1 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r4 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam ARROW>;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r3, $r4, null);

        r17 = $r1;

     label3:
        $r5 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r6 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode SIMPLE_LINE>;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create7(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.creole.CreoleMode)>(r17, $r5, $r6, $r7);

        return $r8;
    }

    protected net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(net.sourceforge.plantuml.cucadiagram.Display)>(r1);

        return $r3;
    }

    protected final double getHeightOfMiddle(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r1;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r3;
        double $d0;

        r1 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        r0 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        $r2 = virtualinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        return $d0;
    }

    protected net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneOutForStep2()
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder r0;
        java.util.List $r1, $r2;
        int $i0, $i1;
        java.lang.Object $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: java.util.List list99>;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.AbstractParallelFtilesBuilder: java.util.List list99>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r4 = (net.sourceforge.plantuml.activitydiagram3.ftile.Ftile) $r3;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r5;
    }
}
