class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow afterEndwhileColor;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile, net.sourceforge.plantuml.graphic.Rainbow)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.Rainbow r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r3 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, null);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow afterEndwhileColor> = r3;

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3;
        java.awt.geom.Point2D$Double $r4;
        java.awt.geom.Point2D $r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$200(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r2, r1);

        $r4 = new java.awt.geom.Point2D$Double;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r4);

        return $r5;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        java.awt.geom.Point2D$Double $r4;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r4 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        return $r4;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r3, $r11, $r16;
        net.sourceforge.plantuml.ISkinParam $r4, $r17;
        net.sourceforge.plantuml.graphic.Rainbow $r5, $r18;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r6, $r8, r10, r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy $r7;
        net.sourceforge.plantuml.Direction $r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r12;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r13;
        java.awt.geom.Point2D r14, r15;
        double d0, $d1, $d2, $d3, d4, $d5, $d6, $d7, d8, d9, d10;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow afterEndwhileColor>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r4, $r5);

        $r7 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy LIMITED>;

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r7);

        $r9 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction DOWN>;

        r10 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake emphasizeDirection(net.sourceforge.plantuml.Direction)>($r9);

        $r11 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r11);

        r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r14 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r15 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r14.<java.awt.geom.Point2D: double getX()>();

        $d1 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        $d2 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d3 = $d1 - $d2;

        d4 = $d3 / 2.0;

        $d5 = virtualinvoke r14.<java.awt.geom.Point2D: double getY()>();

        $d6 = virtualinvoke r13.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getInY()>();

        $d7 = $d5 + $d6;

        d8 = $d7 + d4;

        d9 = virtualinvoke r15.<java.awt.geom.Point2D: double getX()>();

        d10 = virtualinvoke r15.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d8);

        virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(12.0, d8);

        virtualinvoke r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(12.0, d10);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r10);

        $r16 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r18 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionOut: net.sourceforge.plantuml.graphic.Rainbow afterEndwhileColor>;

        r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r17, $r18);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(12.0, d10);

        virtualinvoke r19.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d9, d10);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r19);

        return;
    }
}
