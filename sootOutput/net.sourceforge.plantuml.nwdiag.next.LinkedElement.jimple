public class net.sourceforge.plantuml.nwdiag.next.LinkedElement extends java.lang.Object
{
    public static final int MAGIC;
    private final net.sourceforge.plantuml.graphic.TextBlock box;
    private final net.sourceforge.plantuml.nwdiag.core.Network network;
    private final net.sourceforge.plantuml.nwdiag.core.NServer server;
    private final java.util.Map conns;
    private final java.util.List networks;
    private final double topMargin;
    private final double marginAd;

    public void <init>(double, net.sourceforge.plantuml.nwdiag.core.NServer, net.sourceforge.plantuml.graphic.TextBlock, java.util.Map, java.util.List)
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        double d0;
        java.util.List r1;
        net.sourceforge.plantuml.graphic.TextBlock r2;
        net.sourceforge.plantuml.nwdiag.core.NServer r3;
        net.sourceforge.plantuml.nwdiag.core.Network $r4;
        java.util.Map r5;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        d0 := @parameter0: double;

        r3 := @parameter1: net.sourceforge.plantuml.nwdiag.core.NServer;

        r2 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter3: java.util.Map;

        r1 := @parameter4: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: double marginAd> = 10.0;

        r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: double marginAd> = 10.0;

        r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: double topMargin> = d0;

        r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.List networks> = r1;

        r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock box> = r2;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.nwdiag.core.NServer: net.sourceforge.plantuml.nwdiag.core.Network getMainNetworkNext()>();

        r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network> = $r4;

        r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.NServer server> = r3;

        r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.Map conns> = r5;

        return;
    }

    public boolean isLinkedTo(net.sourceforge.plantuml.nwdiag.core.Network)
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        net.sourceforge.plantuml.nwdiag.core.Network r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        r1 := @parameter0: net.sourceforge.plantuml.nwdiag.core.Network;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.Map conns>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    private int marginBoxW()
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        return 15;
    }

    private double marginBoxH()
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        $d0 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: double topMargin>;

        return $d0;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder, double, double)
    {
        double d0, d1, d2, d3, $d4, $d5, d6, $d7, $d8, d9, $d10, $d11, d12, $d13, $d14, d15, $d16, $d17, $d18, $d19;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        net.sourceforge.plantuml.ugraphic.MinMax $r4, $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        d1 = d0 / 2.0;

        d3 = d2 / 2.0;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock box>;

        r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d4 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d5 = $d4 / 2.0;

        d6 = d1 - $d5;

        $d7 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d8 = $d7 / 2.0;

        d9 = d3 - $d8;

        $d10 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d11 = $d10 / 2.0;

        d12 = d1 + $d11;

        $d13 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d14 = $d13 / 2.0;

        d15 = d3 + $d14;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax getEmpty(boolean)>(0);

        $d17 = d6 - 5.0;

        $d16 = d9 - 5.0;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax addPoint(double,double)>($d17, $d16);

        $d19 = d12 + 5.0;

        $d18 = d15 + 5.0;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.MinMax: net.sourceforge.plantuml.ugraphic.MinMax addPoint(double,double)>($d19, $d18);

        return $r6;
    }

    public void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic, double, double)
    {
        double d0, d1, d2, d3;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d2 := @parameter2: double;

        d1 = d0 / 2.0;

        d3 = d2 / 2.0;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock box>;

        specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: void drawCenter(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r1, $r2, d1, d3);

        return;
    }

    public void drawLinks(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double)
    {
        double d0, d1, d2, d3, $d4, $d5, d6, $d7, $d8, $d9, $d10, $d11, $d12, d13, d14, d15, d16, d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, $d27, $d28, $d29, $d30, $d31, $d32, $d33, $d34, $d35, $d36, $d37, $d38, $d39, $d40, $d42, $d43, $d44, d45, d46, $d47, $d48, $d49, $d50;
        net.sourceforge.plantuml.ugraphic.UTranslate $r0, $r20, $r30, $r34;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r1;
        net.sourceforge.plantuml.nwdiag.core.Network $r2, $r14, $r16, $r19, $r26, $r29, $r33, r37, $r43, $r50;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4, $r24, $r42, $r48;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5, $r25;
        java.util.TreeSet $r6;
        java.util.List $r8;
        boolean $z0, $z1, $z2, z4, $z5;
        net.sourceforge.plantuml.nwdiag.core.NServer $r9;
        java.util.Iterator r10, r41;
        java.lang.Object $r11, $r13, $r15, $r18, $r23, $r36, $r47, $r49;
        java.util.Map$Entry r12;
        net.sourceforge.plantuml.nwdiag.VerticalLine $r17, $r27, $r32;
        net.sourceforge.plantuml.ugraphic.UGraphic $r21, $r31, $r35, r39, r40;
        java.util.Map $r22, $r44, $r45;
        int $i0, $i3, $i4;
        java.util.Set $r28, $r46;
        byte $b1, $b2;
        java.lang.Double $r38;

        r1 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        r39 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d14 := @parameter2: double;

        d2 := @parameter3: double;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d0);

        r40 = interfaceinvoke r39.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        $r2 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        d1 = virtualinvoke $r2.<net.sourceforge.plantuml.nwdiag.core.Network: double getY()>();

        d3 = d2 / 2.0;

        r3 = interfaceinvoke r40.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r4 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock box>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d4 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = $d4 / 2.0;

        d6 = d3 - $d5;

        $d7 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d8 = $d7 / 2.0;

        $d10 = d3 - $d8;

        $d9 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: double topMargin>;

        $d11 = $d10 - $d9;

        $d12 = $d11 + 15.0;

        d13 = $d12 / 2.0;

        d15 = d14 / 2.0;

        d16 = d14 / 2.0;

        $r6 = new java.util.TreeSet;

        specialinvoke $r6.<java.util.TreeSet: void <init>()>();

        $r8 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.List networks>;

        r41 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r41.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r36 = interfaceinvoke r41.<java.util.Iterator: java.lang.Object next()>();

        r37 = (net.sourceforge.plantuml.nwdiag.core.Network) $r36;

        $d33 = d0 + d15;

        $d34 = virtualinvoke r37.<net.sourceforge.plantuml.nwdiag.core.Network: double getXmin()>();

        $b1 = $d33 cmpl $d34;

        if $b1 <= 0 goto label02;

        $d35 = d0 + d15;

        $d36 = virtualinvoke r37.<net.sourceforge.plantuml.nwdiag.core.Network: double getXmax()>();

        $b2 = $d35 cmpg $d36;

        if $b2 >= 0 goto label02;

        $d37 = virtualinvoke r37.<net.sourceforge.plantuml.nwdiag.core.Network: double getY()>();

        $r38 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d37);

        virtualinvoke $r6.<java.util.TreeSet: boolean add(java.lang.Object)>($r38);

     label02:
        goto label01;

     label03:
        $r9 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.NServer server>;

        $z1 = virtualinvoke $r9.<net.sourceforge.plantuml.nwdiag.core.NServer: boolean printFirstLink()>();

        if $z1 == 0 goto label05;

        $r26 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        $z2 = virtualinvoke $r26.<net.sourceforge.plantuml.nwdiag.core.Network: boolean isVisible()>();

        if $z2 == 0 goto label04;

        $r32 = new net.sourceforge.plantuml.nwdiag.VerticalLine;

        $d30 = d1 + 5.0;

        $d29 = d1 + d6;

        specialinvoke $r32.<net.sourceforge.plantuml.nwdiag.VerticalLine: void <init>(double,double,java.util.Set)>($d30, $d29, $r6);

        $r33 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        $d31 = virtualinvoke $r33.<net.sourceforge.plantuml.nwdiag.core.Network: double magicDelta()>();

        $d32 = d16 + $d31;

        $r34 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d32);

        $r35 = interfaceinvoke r40.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r34);

        virtualinvoke $r32.<net.sourceforge.plantuml.nwdiag.VerticalLine: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r35);

        goto label05;

     label04:
        $r27 = new net.sourceforge.plantuml.nwdiag.VerticalLine;

        $d26 = d1 + d6;

        $r28 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        specialinvoke $r27.<net.sourceforge.plantuml.nwdiag.VerticalLine: void <init>(double,double,java.util.Set)>(d1, $d26, $r28);

        $r29 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        $d27 = virtualinvoke $r29.<net.sourceforge.plantuml.nwdiag.core.Network: double magicDelta()>();

        $d28 = d16 + $d27;

        $r30 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d28);

        $r31 = interfaceinvoke r40.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r30);

        virtualinvoke $r27.<net.sourceforge.plantuml.nwdiag.VerticalLine: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r31);

     label05:
        $r42 = specialinvoke r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock link1()>();

        $r43 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        $d38 = virtualinvoke $r43.<net.sourceforge.plantuml.nwdiag.core.Network: double magicDelta()>();

        $d39 = d15 + $d38;

        $d40 = d1 + d13;

        specialinvoke r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: void drawCenter(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r40, $r42, $d39, $d40);

        $r44 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.Map conns>;

        $i3 = interfaceinvoke $r44.<java.util.Map: int size()>();

        $i4 = $i3 - 2;

        $d42 = (double) $i4;

        $d43 = $d42 * 9.0;

        $d44 = $d43 / 2.0;

        d45 = d16 - $d44;

        z4 = 1;

        $r45 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.Map conns>;

        $r46 = interfaceinvoke $r45.<java.util.Map: java.util.Set entrySet()>();

        r10 = interfaceinvoke $r46.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z5 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label10;

        $r11 = interfaceinvoke r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r11;

        $r13 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r14 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        if $r13 != $r14 goto label07;

        goto label06;

     label07:
        $r15 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r16 = (net.sourceforge.plantuml.nwdiag.core.Network) $r15;

        d17 = virtualinvoke $r16.<net.sourceforge.plantuml.nwdiag.core.Network: double getY()>();

        $r17 = new net.sourceforge.plantuml.nwdiag.VerticalLine;

        $d18 = d1 + d3;

        $d19 = virtualinvoke r5.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d20 = $d19 / 2.0;

        $d21 = $d18 + $d20;

        specialinvoke $r17.<net.sourceforge.plantuml.nwdiag.VerticalLine: void <init>(double,double,java.util.Set)>($d21, d17, $r6);

        $r18 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r19 = (net.sourceforge.plantuml.nwdiag.core.Network) $r18;

        $d22 = virtualinvoke $r19.<net.sourceforge.plantuml.nwdiag.core.Network: double magicDelta()>();

        $d23 = d45 - $d22;

        $r20 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d23);

        $r21 = interfaceinvoke r40.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r20);

        virtualinvoke $r17.<net.sourceforge.plantuml.nwdiag.VerticalLine: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r21);

        if z4 == 0 goto label08;

        $r22 = r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.Map conns>;

        $i0 = interfaceinvoke $r22.<java.util.Map: int size()>();

        if $i0 <= 2 goto label08;

        $r23 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r24 = (net.sourceforge.plantuml.graphic.TextBlock) $r23;

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $d24 = virtualinvoke $r25.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d25 = $d24 / 2.0;

        d46 = d45 - $d25;

        goto label09;

     label08:
        d46 = d45;

     label09:
        $r47 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r48 = (net.sourceforge.plantuml.graphic.TextBlock) $r47;

        $r49 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r50 = (net.sourceforge.plantuml.nwdiag.core.Network) $r49;

        $d47 = virtualinvoke $r50.<net.sourceforge.plantuml.nwdiag.core.Network: double magicDelta()>();

        $d48 = d46 - $d47;

        $d49 = d6 / 2.0;

        $d50 = d17 - $d49;

        specialinvoke r1.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: void drawCenter(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r40, $r48, $d48, $d50);

        d45 = d45 + 9.0;

        z4 = 0;

        goto label06;

     label10:
        return;
    }

    private net.sourceforge.plantuml.graphic.TextBlock link1()
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        net.sourceforge.plantuml.nwdiag.core.Network $r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.Map conns>;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (net.sourceforge.plantuml.graphic.TextBlock) $r3;

        return $r4;
    }

    private net.sourceforge.plantuml.graphic.TextBlock link2()
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        net.sourceforge.plantuml.nwdiag.core.Network $r1;
        java.util.List $r2, $r3, $r4;
        int i0, $i1, $i2, $i3;
        java.util.Map $r5;
        java.lang.Object $r6, $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        $r2 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.List networks>;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        i0 = interfaceinvoke $r2.<java.util.List: int indexOf(java.lang.Object)>($r1);

        $r3 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.List networks>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i0 != $i2 goto label1;

        return null;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.Map conns>;

        $r4 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: java.util.List networks>;

        $i3 = i0 + 1;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>($i3);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (net.sourceforge.plantuml.graphic.TextBlock) $r7;

        return $r8;
    }

    private void drawCenter(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.graphic.TextBlock, double, double)
    {
        net.sourceforge.plantuml.graphic.TextBlock r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r5;
        net.sourceforge.plantuml.graphic.StringBounder $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        double d0, $d1, $d2, d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r6;

        r6 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter2: double;

        d3 := @parameter3: double;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = interfaceinvoke r0.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d1 / 2.0;

        $d4 = d0 - $d2;

        $d5 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d6 = $d5 / 2.0;

        $d7 = d3 - $d6;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d4, $d7);

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke r0.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r5);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D naturalDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r2, $r5, $r7, $r8;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4, r6, $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17;
        int $i0, $i1;
        net.sourceforge.plantuml.Dimension2DDouble $r13, $r14, $r15;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock link1()>();

        if $r1 != null goto label1;

        $r13 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r11 = $r13;

        specialinvoke $r13.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(0.0, 0.0);

        goto label2;

     label1:
        $r2 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock link1()>();

        $r11 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

     label2:
        r4 = $r11;

        $r5 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock box>;

        r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock link2()>();

        if $r7 != null goto label3;

        $r14 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r12 = $r14;

        specialinvoke $r14.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(0.0, 0.0);

        goto label4;

     label3:
        $r8 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.graphic.TextBlock link2()>();

        $r12 = interfaceinvoke $r8.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

     label4:
        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 + 20.0;

        $d2 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $i0 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: int marginBoxW()>();

        $i1 = 2 * $i0;

        $d3 = (double) $i1;

        $d4 = $d2 + $d3;

        $d5 = virtualinvoke $r12.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = $d5 + 20.0;

        d7 = staticinvoke <net.sourceforge.plantuml.utils.MathUtils: double max(double,double,double)>($d1, $d4, $d6);

        $d8 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d9 = $d8 + 20.0;

        $d10 = specialinvoke r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: double marginBoxH()>();

        $d11 = 2.0 * $d10;

        $d12 = $d9 + $d11;

        $d13 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d14 = $d12 + $d13;

        $d15 = virtualinvoke $r12.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d16 = $d14 + $d15;

        d17 = $d16 + 20.0;

        $r15 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r15.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d7, d17);

        return $r15;
    }

    public final net.sourceforge.plantuml.nwdiag.core.Network getNetwork()
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        net.sourceforge.plantuml.nwdiag.core.Network $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.Network network>;

        return $r1;
    }

    public final net.sourceforge.plantuml.nwdiag.core.NServer getServer()
    {
        net.sourceforge.plantuml.nwdiag.next.LinkedElement r0;
        net.sourceforge.plantuml.nwdiag.core.NServer $r1;

        r0 := @this: net.sourceforge.plantuml.nwdiag.next.LinkedElement;

        $r1 = r0.<net.sourceforge.plantuml.nwdiag.next.LinkedElement: net.sourceforge.plantuml.nwdiag.core.NServer server>;

        return $r1;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.nwdiag.next.LinkedElement: int MAGIC> = 15;

        return;
    }
}
