public abstract class net.sourceforge.plantuml.salt.element.AbstractElement extends java.lang.Object implements net.sourceforge.plantuml.salt.element.Element
{

    public void <init>()
    {
        net.sourceforge.plantuml.salt.element.AbstractElement r0;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getBlack()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0, $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.salt.element.AbstractElement r3;

        r3 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>($r0);

        return $r2;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getColor88()
    {
        net.sourceforge.plantuml.salt.element.AbstractElement r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: net.sourceforge.plantuml.ugraphic.color.HColor buildColor(java.lang.String,java.lang.String)>("#8", "#8");

        return $r1;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getColorAA()
    {
        net.sourceforge.plantuml.salt.element.AbstractElement r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: net.sourceforge.plantuml.ugraphic.color.HColor buildColor(java.lang.String,java.lang.String)>("#A", "#6");

        return $r1;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getColorBB()
    {
        net.sourceforge.plantuml.salt.element.AbstractElement r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: net.sourceforge.plantuml.ugraphic.color.HColor buildColor(java.lang.String,java.lang.String)>("#B", "#5");

        return $r1;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getColorDD()
    {
        net.sourceforge.plantuml.salt.element.AbstractElement r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: net.sourceforge.plantuml.ugraphic.color.HColor buildColor(java.lang.String,java.lang.String)>("#D", "#3");

        return $r1;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getColorEE()
    {
        net.sourceforge.plantuml.salt.element.AbstractElement r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: net.sourceforge.plantuml.ugraphic.color.HColor buildColor(java.lang.String,java.lang.String)>("#E", "#2");

        return $r1;
    }

    protected final net.sourceforge.plantuml.ugraphic.color.HColor getWhite()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0, $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.salt.element.AbstractElement r3;

        r3 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>($r0);

        return $r2;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor buildColor(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r0, $r4;
        java.lang.String r1, r5;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2, r6, $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple r3;
        net.sourceforge.plantuml.salt.element.AbstractElement r8;

        r8 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        $r2 = virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>(null, r1);

        r3 = (net.sourceforge.plantuml.ugraphic.color.HColorSimple) $r2;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColorSet instance()>();

        r6 = virtualinvoke $r4.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>(null, r5);

        $r7 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>(r6);

        return $r7;
    }

    protected final net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)
    {
        net.sourceforge.plantuml.ugraphic.UFont r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;
        net.sourceforge.plantuml.salt.element.AbstractElement r2;

        r2 := @this: net.sourceforge.plantuml.salt.element.AbstractElement;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UFont;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>(r0);

        return $r1;
    }
}
