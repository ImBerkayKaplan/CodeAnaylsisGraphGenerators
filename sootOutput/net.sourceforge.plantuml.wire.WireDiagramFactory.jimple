public class net.sourceforge.plantuml.wire.WireDiagramFactory extends net.sourceforge.plantuml.command.PSystemCommandFactory
{

    public void <init>()
    {
        net.sourceforge.plantuml.wire.WireDiagramFactory r0;
        net.sourceforge.plantuml.core.DiagramType $r1;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagramFactory;

        $r1 = <net.sourceforge.plantuml.core.DiagramType: net.sourceforge.plantuml.core.DiagramType WIRE>;

        specialinvoke r0.<net.sourceforge.plantuml.command.PSystemCommandFactory: void <init>(net.sourceforge.plantuml.core.DiagramType)>($r1);

        return;
    }

    protected java.util.List createCommands()
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.wire.CommandComponent $r2;
        net.sourceforge.plantuml.wire.CommandSpot $r3;
        net.sourceforge.plantuml.wire.CommandGoto $r4;
        net.sourceforge.plantuml.wire.CommandMove $r5;
        net.sourceforge.plantuml.wire.CommandWLink $r6;
        net.sourceforge.plantuml.wire.CommandNewColumn $r7;
        net.sourceforge.plantuml.wire.CommandPrint $r8;
        net.sourceforge.plantuml.wire.WireDiagramFactory r9;

        r9 := @this: net.sourceforge.plantuml.wire.WireDiagramFactory;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        staticinvoke <net.sourceforge.plantuml.command.CommonCommands: void addCommonCommands1(java.util.List)>($r0);

        $r2 = new net.sourceforge.plantuml.wire.CommandComponent;

        specialinvoke $r2.<net.sourceforge.plantuml.wire.CommandComponent: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r3 = new net.sourceforge.plantuml.wire.CommandSpot;

        specialinvoke $r3.<net.sourceforge.plantuml.wire.CommandSpot: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r3);

        $r4 = new net.sourceforge.plantuml.wire.CommandGoto;

        specialinvoke $r4.<net.sourceforge.plantuml.wire.CommandGoto: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        $r5 = new net.sourceforge.plantuml.wire.CommandMove;

        specialinvoke $r5.<net.sourceforge.plantuml.wire.CommandMove: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r6 = new net.sourceforge.plantuml.wire.CommandWLink;

        specialinvoke $r6.<net.sourceforge.plantuml.wire.CommandWLink: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r7 = new net.sourceforge.plantuml.wire.CommandNewColumn;

        specialinvoke $r7.<net.sourceforge.plantuml.wire.CommandNewColumn: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = new net.sourceforge.plantuml.wire.CommandPrint;

        specialinvoke $r8.<net.sourceforge.plantuml.wire.CommandPrint: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        return $r0;
    }

    public net.sourceforge.plantuml.wire.WireDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.wire.WireDiagram $r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.wire.WireDiagramFactory r3;
        net.sourceforge.plantuml.ISkinSimple r4;

        r3 := @this: net.sourceforge.plantuml.wire.WireDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r4 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r0 = new net.sourceforge.plantuml.wire.WireDiagram;

        specialinvoke $r0.<net.sourceforge.plantuml.wire.WireDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource)>(r1, r2);

        return $r0;
    }

    public volatile net.sourceforge.plantuml.AbstractPSystem createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.wire.WireDiagramFactory r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.wire.WireDiagram $r4;

        r0 := @this: net.sourceforge.plantuml.wire.WireDiagramFactory;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.wire.WireDiagramFactory: net.sourceforge.plantuml.wire.WireDiagram createEmptyDiagram(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, r3);

        return $r4;
    }
}
