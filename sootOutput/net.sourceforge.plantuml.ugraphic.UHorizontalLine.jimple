public class net.sourceforge.plantuml.ugraphic.UHorizontalLine extends java.lang.Object implements net.sourceforge.plantuml.ugraphic.UShape
{
    private final double skipAtStart;
    private final double skipAtEnd;
    private final net.sourceforge.plantuml.graphic.TextBlock title;
    private final boolean blankTitle;
    private final char style;
    private final double defaultThickness;

    private void <init>(double, double, double, net.sourceforge.plantuml.graphic.TextBlock, boolean, char)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        double d0, d1, d2;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        boolean z0;
        char c0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        d0 := @parameter0: double;

        d2 := @parameter1: double;

        d1 := @parameter2: double;

        r1 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        z0 := @parameter4: boolean;

        c0 := @parameter5: char;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: double defaultThickness> = d0;

        r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: double skipAtEnd> = d1;

        r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: double skipAtStart> = d2;

        r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.graphic.TextBlock title> = r1;

        r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: boolean blankTitle> = z0;

        r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: char style> = c0;

        return;
    }

    public static net.sourceforge.plantuml.ugraphic.UHorizontalLine infinite(double, double, double, char)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine $r0;
        double d0, d1, d2;
        char c0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        c0 := @parameter3: char;

        $r0 = new net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void <init>(double,double,double,net.sourceforge.plantuml.graphic.TextBlock,boolean,char)>(d0, d1, d2, null, 0, c0);

        return $r0;
    }

    public static net.sourceforge.plantuml.ugraphic.UHorizontalLine infinite(double, double, double, net.sourceforge.plantuml.graphic.TextBlock, char)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine $r0;
        double d0, d1, d2;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        char c0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        r1 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        c0 := @parameter4: char;

        $r0 = new net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void <init>(double,double,double,net.sourceforge.plantuml.graphic.TextBlock,boolean,char)>(d0, d1, d2, r1, 0, c0);

        return $r0;
    }

    public boolean isDouble()
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        char $c0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        $c0 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: char style>;

        if $c0 != 61 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void drawLineInternal(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.creole.Stencil, double, net.sourceforge.plantuml.ugraphic.UStroke)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        char $c0;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4, $r5;
        net.sourceforge.plantuml.graphic.StringBounder $r6, $r9, $r10;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;
        double $d0, d1, d2, d3, $d4;
        net.sourceforge.plantuml.creole.Stencil $r8, $r11, r13, r14;
        net.sourceforge.plantuml.ugraphic.UStroke r12, $r15;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r13 := @parameter1: net.sourceforge.plantuml.creole.Stencil;

        d1 := @parameter2: double;

        r12 := @parameter3: net.sourceforge.plantuml.ugraphic.UStroke;

        r14 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.creole.Stencil addSkip(net.sourceforge.plantuml.creole.Stencil)>(r13);

        $c0 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: char style>;

        if $c0 != 0 goto label1;

        $r15 = r12;

        goto label2;

     label1:
        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

     label2:
        r3 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        $r4 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.graphic.TextBlock title>;

        if $r4 != null goto label3;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawHLine(net.sourceforge.plantuml.creole.Stencil,double,net.sourceforge.plantuml.ugraphic.UGraphic)>(r14, d1, r3);

        return;

     label3:
        $r5 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.graphic.TextBlock title>;

        $r6 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r7 = interfaceinvoke $r5.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r6);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.creole.Stencil firstHalf(net.sourceforge.plantuml.creole.Stencil,double)>(r14, $d0);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawHLine(net.sourceforge.plantuml.creole.Stencil,double,net.sourceforge.plantuml.ugraphic.UGraphic)>($r8, d1, r3);

        $r9 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d2 = interfaceinvoke r14.<net.sourceforge.plantuml.creole.Stencil: double getStartingX(net.sourceforge.plantuml.graphic.StringBounder,double)>($r9, d1);

        $r10 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d3 = interfaceinvoke r14.<net.sourceforge.plantuml.creole.Stencil: double getEndingX(net.sourceforge.plantuml.graphic.StringBounder,double)>($r10, d1);

        virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawTitleInternal(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double,boolean)>(r2, d2, d3, d1, 0);

        $d4 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.creole.Stencil secondHalf(net.sourceforge.plantuml.creole.Stencil,double)>(r14, $d4);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawHLine(net.sourceforge.plantuml.creole.Stencil,double,net.sourceforge.plantuml.ugraphic.UGraphic)>($r11, d1, r3);

        return;
    }

    private net.sourceforge.plantuml.creole.Stencil addSkip(net.sourceforge.plantuml.creole.Stencil)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine$1 $r0;
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r1;
        net.sourceforge.plantuml.creole.Stencil r2;

        r1 := @this: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r2 := @parameter0: net.sourceforge.plantuml.creole.Stencil;

        $r0 = new net.sourceforge.plantuml.ugraphic.UHorizontalLine$1;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine$1: void <init>(net.sourceforge.plantuml.ugraphic.UHorizontalLine,net.sourceforge.plantuml.creole.Stencil)>(r1, r2);

        return $r0;
    }

    private static net.sourceforge.plantuml.creole.Stencil firstHalf(net.sourceforge.plantuml.creole.Stencil, double)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine$2 $r0;
        net.sourceforge.plantuml.creole.Stencil r1;
        double d0;

        r1 := @parameter0: net.sourceforge.plantuml.creole.Stencil;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UHorizontalLine$2;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine$2: void <init>(net.sourceforge.plantuml.creole.Stencil,double)>(r1, d0);

        return $r0;
    }

    private static net.sourceforge.plantuml.creole.Stencil secondHalf(net.sourceforge.plantuml.creole.Stencil, double)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine$3 $r0;
        net.sourceforge.plantuml.creole.Stencil r1;
        double d0;

        r1 := @parameter0: net.sourceforge.plantuml.creole.Stencil;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UHorizontalLine$3;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine$3: void <init>(net.sourceforge.plantuml.creole.Stencil,double)>(r1, d0);

        return $r0;
    }

    private void drawHLine(net.sourceforge.plantuml.creole.Stencil, double, net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.creole.Stencil r1;
        double d0, $d1;
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r2;
        char $c0;

        r2 := @this: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r1 := @parameter0: net.sourceforge.plantuml.creole.Stencil;

        d0 := @parameter1: double;

        r0 := @parameter2: net.sourceforge.plantuml.ugraphic.UGraphic;

        staticinvoke <net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawSimpleHline(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.creole.Stencil,double)>(r0, r1, d0);

        $c0 = r2.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: char style>;

        if $c0 != 61 goto label1;

        $d1 = d0 + 2.0;

        staticinvoke <net.sourceforge.plantuml.ugraphic.UHorizontalLine: void drawSimpleHline(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.creole.Stencil,double)>(r0, r1, $d1);

     label1:
        return;
    }

    private static void drawSimpleHline(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.creole.Stencil, double)
    {
        net.sourceforge.plantuml.creole.Stencil r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r5;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r3;
        double d0, d1, d2, $d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;
        net.sourceforge.plantuml.ugraphic.ULine $r6;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.creole.Stencil;

        d0 := @parameter2: double;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d1 = interfaceinvoke r0.<net.sourceforge.plantuml.creole.Stencil: double getStartingX(net.sourceforge.plantuml.graphic.StringBounder,double)>($r2, d0);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d2 = interfaceinvoke r0.<net.sourceforge.plantuml.creole.Stencil: double getEndingX(net.sourceforge.plantuml.graphic.StringBounder,double)>($r3, d0);

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d1, d0);

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $d3 = d2 - d1;

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d3);

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r6);

        return;
    }

    public void drawTitleInternal(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, boolean)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r2, $r6;
        boolean $z0, z1;
        double d0, d1, d2, $d3, $d4, d5, d6, d7, $d8, $d9, $d10, d11;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;
        net.sourceforge.plantuml.ugraphic.UStroke $r7;
        net.sourceforge.plantuml.ugraphic.UGraphic $r8, r10, r11;
        net.sourceforge.plantuml.ugraphic.URectangle $r9;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r10 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d1 := @parameter1: double;

        d0 := @parameter2: double;

        d7 := @parameter3: double;

        z1 := @parameter4: boolean;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.graphic.TextBlock title>;

        if $r1 == null goto label1;

        $z0 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: boolean blankTitle>;

        if $z0 == 0 goto label2;

     label1:
        return;

     label2:
        d2 = d0 - d1;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.graphic.TextBlock title>;

        $r3 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $d3 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = d2 - $d3;

        d5 = $d4 / 2.0;

        d6 = d1 + d5;

        $d8 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d9 = $d8 / 2.0;

        $d10 = d7 - $d9;

        d11 = $d10 - 0.5;

        $r5 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d6, d11);

        r11 = interfaceinvoke r10.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        if z1 == 0 goto label3;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        $r8 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)>(r4);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

     label3:
        $r6 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: net.sourceforge.plantuml.graphic.TextBlock title>;

        interfaceinvoke $r6.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r11);

        return;
    }

    public void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r1;

        r1 := @this: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r1);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.UStroke getStroke()
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        char $c0, $c1, $c2, $c3;
        net.sourceforge.plantuml.ugraphic.UStroke $r1, $r2, $r3, $r4;
        double $d0;
        java.lang.IllegalStateException $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        $c0 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: char style>;

        if $c0 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        $c1 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: char style>;

        if $c1 != 61 goto label2;

        $r4 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        return $r4;

     label2:
        $c2 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: char style>;

        if $c2 != 46 goto label3;

        $r3 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double,double,double)>(1.0, 2.0, 1.0);

        return $r3;

     label3:
        $c3 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: char style>;

        if $c3 != 45 goto label4;

        $r2 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>()>();

        return $r2;

     label4:
        $r1 = new net.sourceforge.plantuml.ugraphic.UStroke;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: double defaultThickness>;

        specialinvoke $r1.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>($d0);

        return $r1;
    }

    static double access$000(net.sourceforge.plantuml.ugraphic.UHorizontalLine)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: double skipAtStart>;

        return $d0;
    }

    static double access$100(net.sourceforge.plantuml.ugraphic.UHorizontalLine)
    {
        net.sourceforge.plantuml.ugraphic.UHorizontalLine r0;
        double $d0;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UHorizontalLine;

        $d0 = r0.<net.sourceforge.plantuml.ugraphic.UHorizontalLine: double skipAtEnd>;

        return $d0;
    }
}
