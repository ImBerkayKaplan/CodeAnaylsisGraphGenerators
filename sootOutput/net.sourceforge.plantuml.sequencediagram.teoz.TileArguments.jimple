public class net.sourceforge.plantuml.sequencediagram.teoz.TileArguments extends java.lang.Object implements net.sourceforge.plantuml.sequencediagram.teoz.Bordered
{
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;
    private final net.sourceforge.plantuml.real.Real origin;
    private final net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces;
    private final net.sourceforge.plantuml.skin.rose.Rose skin;
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private net.sourceforge.plantuml.sequencediagram.teoz.Bordered bordered;

    public void <init>(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces, net.sourceforge.plantuml.skin.rose.Rose, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.real.Real)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.real.Real r2;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces r3;
        net.sourceforge.plantuml.skin.rose.Rose r4;
        net.sourceforge.plantuml.ISkinParam r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces;

        r4 := @parameter2: net.sourceforge.plantuml.skin.rose.Rose;

        r5 := @parameter3: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter4: net.sourceforge.plantuml.real.Real;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = r1;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.real.Real origin> = r2;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces> = r3;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.skin.rose.Rose skin> = r4;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.ISkinParam skinParam> = r5;

        return;
    }

    public net.sourceforge.plantuml.sequencediagram.teoz.TileArguments withBackColorGeneral(net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments $r0, r1;
        net.sourceforge.plantuml.SkinParamBackcolored $r2;
        net.sourceforge.plantuml.ugraphic.color.HColor r3, r4;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.graphic.StringBounder $r6;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces $r7;
        net.sourceforge.plantuml.skin.rose.Rose $r8;
        net.sourceforge.plantuml.real.Real $r9;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r6 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r7 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        $r8 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.skin.rose.Rose skin>;

        $r2 = new net.sourceforge.plantuml.SkinParamBackcolored;

        $r5 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.ISkinParam skinParam>;

        specialinvoke $r2.<net.sourceforge.plantuml.SkinParamBackcolored: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r5, r3, r4);

        $r9 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.real.Real origin>;

        specialinvoke $r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.real.Real)>($r6, $r7, $r8, $r2, $r9);

        return $r0;
    }

    public net.sourceforge.plantuml.sequencediagram.teoz.TileArguments withBackColor(net.sourceforge.plantuml.sequencediagram.Reference)
    {
        net.sourceforge.plantuml.SkinParamBackcoloredReference $r0;
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r1, $r7;
        net.sourceforge.plantuml.sequencediagram.Reference r2;
        net.sourceforge.plantuml.ISkinParam $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r5;
        net.sourceforge.plantuml.real.Real $r8;
        net.sourceforge.plantuml.skin.rose.Rose $r9;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces $r10;
        net.sourceforge.plantuml.graphic.StringBounder $r11;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        r2 := @parameter0: net.sourceforge.plantuml.sequencediagram.Reference;

        $r0 = new net.sourceforge.plantuml.SkinParamBackcoloredReference;

        $r3 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.Reference: net.sourceforge.plantuml.ugraphic.color.HColor getBackColorElement()>();

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.Reference: net.sourceforge.plantuml.ugraphic.color.HColor getBackColorGeneral()>();

        specialinvoke $r0.<net.sourceforge.plantuml.SkinParamBackcoloredReference: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor)>($r3, $r4, $r5);

        $r7 = new net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r11 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r10 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        $r9 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.skin.rose.Rose skin>;

        $r8 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.real.Real origin>;

        specialinvoke $r7.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.real.Real)>($r11, $r10, $r9, $r0, $r8);

        return $r7;
    }

    public final net.sourceforge.plantuml.graphic.StringBounder getStringBounder()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        return $r1;
    }

    public final net.sourceforge.plantuml.real.Real getOrigin()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.real.Real $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.real.Real origin>;

        return $r1;
    }

    public final net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces getLivingSpaces()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        return $r1;
    }

    public final net.sourceforge.plantuml.skin.rose.Rose getSkin()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.skin.rose.Rose $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.skin.rose.Rose skin>;

        return $r1;
    }

    public final net.sourceforge.plantuml.ISkinParam getSkinParam()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.ISkinParam $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.ISkinParam skinParam>;

        return $r1;
    }

    public net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace getLivingSpace(net.sourceforge.plantuml.sequencediagram.Participant)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces $r2;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace $r3;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace get(net.sourceforge.plantuml.sequencediagram.Participant)>(r1);

        return $r3;
    }

    public net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace getFirstLivingSpace()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;
        java.lang.Object $r4;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace $r5;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace) $r4;

        return $r5;
    }

    public net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace getLastLivingSpace()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces $r1;
        java.util.Collection $r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r4;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace r5, r6;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        r6 = null;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: java.util.Collection values()>();

        r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace) $r4;

        r6 = r5;

        goto label1;

     label2:
        return r6;
    }

    public void setBordered(net.sourceforge.plantuml.sequencediagram.teoz.Bordered)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.sequencediagram.teoz.Bordered r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.teoz.Bordered;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.Bordered bordered> = r1;

        return;
    }

    public double getBorder1()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.sequencediagram.teoz.Bordered $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.Bordered bordered>;

        $d0 = interfaceinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.Bordered: double getBorder1()>();

        return $d0;
    }

    public double getBorder2()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments r0;
        net.sourceforge.plantuml.sequencediagram.teoz.Bordered $r1;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: net.sourceforge.plantuml.sequencediagram.teoz.Bordered bordered>;

        $d0 = interfaceinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.Bordered: double getBorder2()>();

        return $d0;
    }
}
