public class net.sourceforge.plantuml.eggs.PSystemPath extends net.sourceforge.plantuml.AbstractPSystem
{
    private final net.sourceforge.plantuml.eggs.GraphicsPath path;

    public void <init>(net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.eggs.PSystemPath r0;
        net.sourceforge.plantuml.core.UmlSource r1;
        net.sourceforge.plantuml.eggs.GraphicsPath $r2;
        net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity $r3;
        java.lang.String r4;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemPath;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.AbstractPSystem: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        $r2 = new net.sourceforge.plantuml.eggs.GraphicsPath;

        $r3 = new net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.ColorMapperIdentity: void <init>()>();

        specialinvoke $r2.<net.sourceforge.plantuml.eggs.GraphicsPath: void <init>(net.sourceforge.plantuml.ugraphic.color.ColorMapper,java.lang.String)>($r3, r4);

        r0.<net.sourceforge.plantuml.eggs.PSystemPath: net.sourceforge.plantuml.eggs.GraphicsPath path> = $r2;

        return;
    }

    protected final net.sourceforge.plantuml.core.ImageData exportDiagramNow(java.io.OutputStream, int, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.eggs.PSystemPath r0;
        java.io.OutputStream r1;
        net.sourceforge.plantuml.eggs.GraphicsPath $r2;
        net.sourceforge.plantuml.core.ImageData $r3;
        int i0;
        net.sourceforge.plantuml.FileFormatOption r4;

        r0 := @this: net.sourceforge.plantuml.eggs.PSystemPath;

        r1 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        r4 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r2 = r0.<net.sourceforge.plantuml.eggs.PSystemPath: net.sourceforge.plantuml.eggs.GraphicsPath path>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.eggs.GraphicsPath: net.sourceforge.plantuml.core.ImageData writeImage(java.io.OutputStream)>(r1);

        return $r3;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.eggs.PSystemPath r1;

        r1 := @this: net.sourceforge.plantuml.eggs.PSystemPath;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Path)");

        return $r0;
    }
}
