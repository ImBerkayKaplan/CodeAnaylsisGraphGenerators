public abstract class net.sourceforge.plantuml.skin.AbstractTextualComponent extends net.sourceforge.plantuml.skin.AbstractComponent
{
    private final net.sourceforge.plantuml.cucadiagram.Display display;
    private final int marginX1;
    private final int marginX2;
    private final int marginY;
    private final net.sourceforge.plantuml.graphic.TextBlock textBlock;
    private final net.sourceforge.plantuml.ISkinSimple spriteContainer;
    private final net.sourceforge.plantuml.ugraphic.UFont font;
    private final net.sourceforge.plantuml.ugraphic.color.HColor fontColor;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment alignment;

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.LineBreakStrategy, java.lang.CharSequence, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, int, int, int, net.sourceforge.plantuml.ISkinSimple, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.LineBreakStrategy r2;
        java.lang.CharSequence r3;
        net.sourceforge.plantuml.cucadiagram.Display $r4;
        net.sourceforge.plantuml.graphic.FontConfiguration r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r6;
        int i0, i1, i2;
        net.sourceforge.plantuml.ISkinSimple r7;
        net.sourceforge.plantuml.ugraphic.UFont r8;
        net.sourceforge.plantuml.ugraphic.color.HColor r9;
        java.lang.String $r14;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r2 := @parameter1: net.sourceforge.plantuml.LineBreakStrategy;

        r3 := @parameter2: java.lang.CharSequence;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.FontConfiguration;

        r6 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r7 := @parameter8: net.sourceforge.plantuml.ISkinSimple;

        r8 := @parameter9: net.sourceforge.plantuml.ugraphic.UFont;

        r9 := @parameter10: net.sourceforge.plantuml.ugraphic.color.HColor;

        if r3 != null goto label1;

        $r14 = "";

        goto label2;

     label1:
        $r14 = interfaceinvoke r3.<java.lang.CharSequence: java.lang.String toString()>();

     label2:
        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r14);

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r1, r2, $r4, r5, r6, i0, i1, i2, r7, 0, r8, r9);

        return;
    }

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.LineBreakStrategy, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, int, int, int, net.sourceforge.plantuml.ISkinSimple, boolean, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.style.Style r1;
        net.sourceforge.plantuml.LineBreakStrategy r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.graphic.FontConfiguration r4;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5;
        int i0, i1, i2;
        net.sourceforge.plantuml.ISkinSimple r6;
        boolean z0;
        net.sourceforge.plantuml.ugraphic.UFont r7;
        net.sourceforge.plantuml.ugraphic.color.HColor r8;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r2 := @parameter1: net.sourceforge.plantuml.LineBreakStrategy;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.FontConfiguration;

        r5 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        i2 := @parameter7: int;

        r6 := @parameter8: net.sourceforge.plantuml.ISkinSimple;

        z0 := @parameter9: boolean;

        r7 := @parameter10: net.sourceforge.plantuml.ugraphic.UFont;

        r8 := @parameter11: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: void <init>(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,int,int,int,net.sourceforge.plantuml.ISkinSimple,boolean,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, r1, r2, r3, r4, r5, i0, i1, i2, r6, z0, r7, r8);

        return;
    }

    public void <init>(net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.LineBreakStrategy, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.graphic.FontConfiguration, net.sourceforge.plantuml.graphic.HorizontalAlignment, int, int, int, net.sourceforge.plantuml.ISkinSimple, boolean, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.style.Style r1, r25;
        net.sourceforge.plantuml.ISkinSimple r2;
        boolean $z0, z1;
        net.sourceforge.plantuml.ugraphic.UFont $r3, $r19, r33;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r24, r34;
        net.sourceforge.plantuml.cucadiagram.Display r5, $r6, $r9, $r12, $r14, $r30;
        int i0, i1, i2, $i3, $i4;
        net.sourceforge.plantuml.LineBreakStrategy r7;
        double $d0, $d1;
        net.sourceforge.plantuml.creole.CreoleMode $r8;
        net.sourceforge.plantuml.graphic.TextBlock $r10, $r13;
        net.sourceforge.plantuml.FontParam $r11;
        java.lang.CharSequence $r15;
        net.sourceforge.plantuml.graphic.TextBlockEmpty $r16;
        net.sourceforge.plantuml.api.ThemeStyle $r17, $r22, $r28;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r18, $r23, $r29;
        net.sourceforge.plantuml.style.PName $r20, $r26;
        net.sourceforge.plantuml.style.Value $r21, $r27;
        net.sourceforge.plantuml.graphic.FontConfiguration r31;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r32;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style;

        r25 := @parameter1: net.sourceforge.plantuml.style.Style;

        r7 := @parameter2: net.sourceforge.plantuml.LineBreakStrategy;

        r5 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r31 := @parameter4: net.sourceforge.plantuml.graphic.FontConfiguration;

        r32 := @parameter5: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        i0 := @parameter6: int;

        i1 := @parameter7: int;

        i2 := @parameter8: int;

        r2 := @parameter9: net.sourceforge.plantuml.ISkinSimple;

        z1 := @parameter10: boolean;

        r33 := @parameter11: net.sourceforge.plantuml.ugraphic.UFont;

        r34 := @parameter12: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.skin.AbstractComponent: void <init>(net.sourceforge.plantuml.style.Style)>(r1);

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ISkinSimple spriteContainer> = r2;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r17 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r31 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r17, $r18);

        $r19 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UFont getUFont()>();

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.UFont font> = $r19;

        $r20 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        $r21 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r20);

        $r22 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r23 = virtualinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r24 = interfaceinvoke $r21.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r22, $r23);

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.color.HColor fontColor> = $r24;

        r32 = virtualinvoke r1.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        r33 = virtualinvoke r25.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UFont getUFont()>();

        $r26 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName FontColor>;

        $r27 = virtualinvoke r25.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r26);

        $r28 = interfaceinvoke r2.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r29 = virtualinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r34 = interfaceinvoke $r27.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r28, $r29);

        $r30 = virtualinvoke r5.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display withoutStereotypeIfNeeded(net.sourceforge.plantuml.style.Style)>(r1);

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.cucadiagram.Display display> = $r30;

        goto label2;

     label1:
        $r3 = virtualinvoke r31.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.UFont getFont()>();

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.UFont font> = $r3;

        $r4 = virtualinvoke r31.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.ugraphic.color.HColor getColor()>();

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.color.HColor fontColor> = $r4;

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.cucadiagram.Display display> = r5;

     label2:
        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginX1> = i0;

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginX2> = i1;

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginY> = i2;

        $r6 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.cucadiagram.Display display>;

        $i3 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Display: int size()>();

        if $i3 != 1 goto label3;

        $r14 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r15 = virtualinvoke $r14.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $i4 = interfaceinvoke $r15.<java.lang.CharSequence: int length()>();

        if $i4 != 0 goto label3;

        $r16 = new net.sourceforge.plantuml.graphic.TextBlockEmpty;

        specialinvoke $r16.<net.sourceforge.plantuml.graphic.TextBlockEmpty: void <init>()>();

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.TextBlock textBlock> = $r16;

        goto label5;

     label3:
        if z1 == 0 goto label4;

        $r12 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r11 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        $r13 = staticinvoke <net.sourceforge.plantuml.cucadiagram.BodyFactory: net.sourceforge.plantuml.graphic.TextBlock create3(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.style.Style)>($r12, $r11, r2, r32, r31, r7, r1);

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.TextBlock textBlock> = $r13;

        goto label5;

     label4:
        $r9 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.cucadiagram.Display display>;

        $r8 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        $d1 = (double) i0;

        $d0 = (double) i1;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,double,double)>(r31, r32, r2, r7, $r8, r33, r34, $d1, $d0);

        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.TextBlock textBlock> = $r10;

     label5:
        r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.HorizontalAlignment alignment> = r32;

        return;
    }

    protected net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.ISkinSimple $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r3;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $r1 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ISkinSimple spriteContainer>;

        $r2 = (net.sourceforge.plantuml.ISkinParam) $r1;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        return $r3;
    }

    protected net.sourceforge.plantuml.graphic.TextBlock getTextBlock()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $r1 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.TextBlock textBlock>;

        return $r1;
    }

    protected double getPureTextWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        r3 = interfaceinvoke r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        return $d0;
    }

    public final double getTextWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        double $d0, $d1, $d2, $d3, $d4;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: double getPureTextWidth(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $i0 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginX1>;

        $d1 = (double) $i0;

        $d3 = $d0 + $d1;

        $i1 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginX2>;

        $d2 = (double) $i1;

        $d4 = $d3 + $d2;

        return $d4;
    }

    protected final double getTextHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;
        double $d0, $d1, $d2;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        r3 = interfaceinvoke r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $i0 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginY>;

        $i1 = 2 * $i0;

        $d1 = (double) $i1;

        $d2 = $d0 + $d1;

        return $d2;
    }

    protected final int getMarginX1()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $i0 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginX1>;

        return $i0;
    }

    protected final int getMarginX2()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $i0 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginX2>;

        return $i0;
    }

    protected final int getMarginY()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $i0 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: int marginY>;

        return $i0;
    }

    protected final net.sourceforge.plantuml.ugraphic.UFont getFont()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.ugraphic.UFont $r1;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $r1 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.UFont font>;

        return $r1;
    }

    protected net.sourceforge.plantuml.ugraphic.color.HColor getFontColor()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r1;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $r1 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ugraphic.color.HColor fontColor>;

        return $r1;
    }

    protected final net.sourceforge.plantuml.ISkinSimple getISkinSimple()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.ISkinSimple $r1;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $r1 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.ISkinSimple spriteContainer>;

        return $r1;
    }

    public final net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()
    {
        net.sourceforge.plantuml.skin.AbstractTextualComponent r0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r1;

        r0 := @this: net.sourceforge.plantuml.skin.AbstractTextualComponent;

        $r1 = r0.<net.sourceforge.plantuml.skin.AbstractTextualComponent: net.sourceforge.plantuml.graphic.HorizontalAlignment alignment>;

        return $r1;
    }
}
