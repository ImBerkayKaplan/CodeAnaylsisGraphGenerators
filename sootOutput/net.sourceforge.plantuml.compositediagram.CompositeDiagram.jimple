public class net.sourceforge.plantuml.compositediagram.CompositeDiagram extends net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram
{

    public void <init>(net.sourceforge.plantuml.api.ThemeStyle, net.sourceforge.plantuml.core.UmlSource, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.compositediagram.CompositeDiagram r0;
        net.sourceforge.plantuml.api.ThemeStyle r1;
        net.sourceforge.plantuml.core.UmlSource r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        net.sourceforge.plantuml.UmlDiagramType $r4;

        r0 := @this: net.sourceforge.plantuml.compositediagram.CompositeDiagram;

        r1 := @parameter0: net.sourceforge.plantuml.api.ThemeStyle;

        r2 := @parameter1: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = <net.sourceforge.plantuml.UmlDiagramType: net.sourceforge.plantuml.UmlDiagramType COMPOSITE>;

        specialinvoke r0.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void <init>(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.core.UmlSource,net.sourceforge.plantuml.UmlDiagramType,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        return;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident, net.sourceforge.plantuml.cucadiagram.Code, net.sourceforge.plantuml.cucadiagram.LeafType, net.sourceforge.plantuml.graphic.USymbol)
    {
        net.sourceforge.plantuml.cucadiagram.Ident r0;
        net.sourceforge.plantuml.cucadiagram.LeafType r2, $r7;
        net.sourceforge.plantuml.compositediagram.CompositeDiagram r3;
        net.sourceforge.plantuml.cucadiagram.Code r4;
        net.sourceforge.plantuml.graphic.USymbol r5;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r6, $r8;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.IGroup $r9;

        r3 := @this: net.sourceforge.plantuml.compositediagram.CompositeDiagram;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Ident;

        r4 := @parameter1: net.sourceforge.plantuml.cucadiagram.Code;

        r2 := @parameter2: net.sourceforge.plantuml.cucadiagram.LeafType;

        r5 := @parameter3: net.sourceforge.plantuml.graphic.USymbol;

        staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        if r2 != null goto label2;

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.compositediagram.CompositeDiagram: boolean isGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r4);

        if $z0 == 0 goto label1;

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.compositediagram.CompositeDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r4);

        return $r9;

     label1:
        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType BLOCK>;

        $r8 = virtualinvoke r3.<net.sourceforge.plantuml.compositediagram.CompositeDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r4, $r7, r5);

        return $r8;

     label2:
        $r6 = virtualinvoke r3.<net.sourceforge.plantuml.compositediagram.CompositeDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getOrCreateLeafDefault(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r0, r4, r2, r5);

        return $r6;
    }
}
