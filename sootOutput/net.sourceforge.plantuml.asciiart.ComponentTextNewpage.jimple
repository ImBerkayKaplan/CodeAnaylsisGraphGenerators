public class net.sourceforge.plantuml.asciiart.ComponentTextNewpage extends net.sourceforge.plantuml.asciiart.AbstractComponentText
{
    private final net.sourceforge.plantuml.FileFormat fileFormat;

    public void <init>(net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextNewpage r0;
        net.sourceforge.plantuml.FileFormat r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextNewpage;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<net.sourceforge.plantuml.asciiart.AbstractComponentText: void <init>()>();

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextNewpage: net.sourceforge.plantuml.FileFormat fileFormat> = r1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area, net.sourceforge.plantuml.skin.Context2D)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r3;
        net.sourceforge.plantuml.asciiart.UmlCharArea r4;
        double $d0;
        int i0;
        net.sourceforge.plantuml.asciiart.ComponentTextNewpage r5;
        net.sourceforge.plantuml.FileFormat $r6, $r7;
        net.sourceforge.plantuml.skin.Context2D r8;

        r5 := @this: net.sourceforge.plantuml.asciiart.ComponentTextNewpage;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r8 := @parameter2: net.sourceforge.plantuml.skin.Context2D;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r3 = (net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt) r2;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        i0 = (int) $d0;

        $r7 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextNewpage: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r6 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r7 != $r6 goto label1;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawHLine(char,int,int,int,char,char)>(9552, 0, 0, i0, 9474, 9578);

        goto label2;

     label1:
        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawHLine(char,int,int,int)>(61, 0, 0, i0);

     label2:
        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextNewpage r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextNewpage;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 2.0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextNewpage r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextNewpage;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 2.0;
    }
}
