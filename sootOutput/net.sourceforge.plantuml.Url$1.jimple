class net.sourceforge.plantuml.Url$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        net.sourceforge.plantuml.Url$1 r0;

        r0 := @this: net.sourceforge.plantuml.Url$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(net.sourceforge.plantuml.Url, net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.Url r0, r2;
        net.sourceforge.plantuml.BasicEnsureVisible $r1, $r3;
        double d0, d1;
        byte $b0, $b1;
        net.sourceforge.plantuml.Url$1 r4;

        r4 := @this: net.sourceforge.plantuml.Url$1;

        r0 := @parameter0: net.sourceforge.plantuml.Url;

        r2 := @parameter1: net.sourceforge.plantuml.Url;

        $r1 = staticinvoke <net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible access$000(net.sourceforge.plantuml.Url)>(r0);

        d0 = virtualinvoke $r1.<net.sourceforge.plantuml.BasicEnsureVisible: double getSurface()>();

        $r3 = staticinvoke <net.sourceforge.plantuml.Url: net.sourceforge.plantuml.BasicEnsureVisible access$000(net.sourceforge.plantuml.Url)>(r2);

        d1 = virtualinvoke $r3.<net.sourceforge.plantuml.BasicEnsureVisible: double getSurface()>();

        $b0 = d0 cmpl d1;

        if $b0 <= 0 goto label1;

        return 1;

     label1:
        $b1 = d0 cmpg d1;

        if $b1 >= 0 goto label2;

        return -1;

     label2:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        net.sourceforge.plantuml.Url$1 r0;
        java.lang.Object r1, r2;
        net.sourceforge.plantuml.Url $r3, $r4;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.Url$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (net.sourceforge.plantuml.Url) r1;

        $r3 = (net.sourceforge.plantuml.Url) r2;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.Url$1: int compare(net.sourceforge.plantuml.Url,net.sourceforge.plantuml.Url)>($r4, $r3);

        return $i0;
    }
}
