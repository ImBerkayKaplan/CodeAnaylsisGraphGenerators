class net.sourceforge.plantuml.project.lang.SubjectDaysAsDates$InColor extends net.sourceforge.plantuml.project.lang.SentenceSimple
{
    final net.sourceforge.plantuml.project.lang.SubjectDaysAsDates this$0;

    public void <init>(net.sourceforge.plantuml.project.lang.SubjectDaysAsDates)
    {
        net.sourceforge.plantuml.project.lang.SubjectDaysAsDates$InColor r0;
        net.sourceforge.plantuml.project.lang.SubjectDaysAsDates r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2;
        net.sourceforge.plantuml.project.lang.ComplementInColors2 $r3;

        r0 := @this: net.sourceforge.plantuml.project.lang.SubjectDaysAsDates$InColor;

        r1 := @parameter0: net.sourceforge.plantuml.project.lang.SubjectDaysAsDates;

        r0.<net.sourceforge.plantuml.project.lang.SubjectDaysAsDates$InColor: net.sourceforge.plantuml.project.lang.SubjectDaysAsDates this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.project.lang.Verbs: net.sourceforge.plantuml.command.regex.IRegex isOrAre()>();

        $r3 = new net.sourceforge.plantuml.project.lang.ComplementInColors2;

        specialinvoke $r3.<net.sourceforge.plantuml.project.lang.ComplementInColors2: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.project.lang.SentenceSimple: void <init>(net.sourceforge.plantuml.project.lang.Subject,net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.project.lang.Something)>(r1, $r2, $r3);

        return;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult execute(net.sourceforge.plantuml.project.GanttDiagram, java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r3, $r7;
        net.sourceforge.plantuml.project.lang.CenterBorderColor $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        net.sourceforge.plantuml.project.DaysAsDates $r4;
        java.util.Iterator r5;
        boolean $z0;
        net.sourceforge.plantuml.command.CommandExecutionResult $r6;
        net.sourceforge.plantuml.project.time.Day r8;
        net.sourceforge.plantuml.project.GanttDiagram r9;
        net.sourceforge.plantuml.project.lang.SubjectDaysAsDates$InColor r10;

        r10 := @this: net.sourceforge.plantuml.project.lang.SubjectDaysAsDates$InColor;

        r9 := @parameter0: net.sourceforge.plantuml.project.GanttDiagram;

        r3 := @parameter1: java.lang.Object;

        r0 := @parameter2: java.lang.Object;

        $r1 = (net.sourceforge.plantuml.project.lang.CenterBorderColor) r0;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.project.lang.CenterBorderColor: net.sourceforge.plantuml.ugraphic.color.HColor getCenter()>();

        $r4 = (net.sourceforge.plantuml.project.DaysAsDates) r3;

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.project.DaysAsDates: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (net.sourceforge.plantuml.project.time.Day) $r7;

        virtualinvoke r9.<net.sourceforge.plantuml.project.GanttDiagram: void colorDay(net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.ugraphic.color.HColor)>(r8, r2);

        goto label1;

     label2:
        $r6 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r6;
    }
}
