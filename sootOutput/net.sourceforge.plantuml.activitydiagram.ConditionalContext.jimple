public class net.sourceforge.plantuml.activitydiagram.ConditionalContext extends java.lang.Object
{
    private final net.sourceforge.plantuml.cucadiagram.IEntity branch;
    private final net.sourceforge.plantuml.Direction direction;
    private final net.sourceforge.plantuml.activitydiagram.ConditionalContext parent;

    public void <init>(net.sourceforge.plantuml.activitydiagram.ConditionalContext, net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.Direction)
    {
        net.sourceforge.plantuml.activitydiagram.ConditionalContext r0, r7;
        net.sourceforge.plantuml.cucadiagram.IEntity r1, $r3;
        java.lang.Object $r2;
        net.sourceforge.plantuml.cucadiagram.LeafType $r4, $r5;
        net.sourceforge.plantuml.Direction r6;
        java.lang.IllegalArgumentException $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ConditionalContext;

        r7 := @parameter0: net.sourceforge.plantuml.activitydiagram.ConditionalContext;

        r1 := @parameter1: net.sourceforge.plantuml.cucadiagram.IEntity;

        r6 := @parameter2: net.sourceforge.plantuml.Direction;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1);

        $r3 = (net.sourceforge.plantuml.cucadiagram.IEntity) $r2;

        r0.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: net.sourceforge.plantuml.cucadiagram.IEntity branch> = $r3;

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        $r5 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType BRANCH>;

        if $r4 == $r5 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label1:
        r0.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: net.sourceforge.plantuml.Direction direction> = r6;

        r0.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: net.sourceforge.plantuml.activitydiagram.ConditionalContext parent> = r7;

        return;
    }

    public net.sourceforge.plantuml.Direction getDirection()
    {
        net.sourceforge.plantuml.activitydiagram.ConditionalContext r0;
        net.sourceforge.plantuml.Direction $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ConditionalContext;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: net.sourceforge.plantuml.Direction direction>;

        return $r1;
    }

    public final net.sourceforge.plantuml.activitydiagram.ConditionalContext getParent()
    {
        net.sourceforge.plantuml.activitydiagram.ConditionalContext r0, $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ConditionalContext;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: net.sourceforge.plantuml.activitydiagram.ConditionalContext parent>;

        return $r1;
    }

    public final net.sourceforge.plantuml.cucadiagram.IEntity getBranch()
    {
        net.sourceforge.plantuml.activitydiagram.ConditionalContext r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram.ConditionalContext;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram.ConditionalContext: net.sourceforge.plantuml.cucadiagram.IEntity branch>;

        return $r1;
    }
}
