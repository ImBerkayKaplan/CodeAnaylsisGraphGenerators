public class net.sourceforge.plantuml.salt.element.ElementText extends net.sourceforge.plantuml.salt.element.AbstractElement
{
    private final net.sourceforge.plantuml.graphic.TextBlock block;
    private final boolean show;
    private final java.lang.String text;

    public void <init>(java.util.List, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.salt.element.ElementText r0;
        net.sourceforge.plantuml.ugraphic.UFont r1;
        net.sourceforge.plantuml.graphic.FontConfiguration r2;
        java.util.List r3;
        net.sourceforge.plantuml.cucadiagram.Display $r4;
        net.sourceforge.plantuml.ISkinSimple r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r6;
        net.sourceforge.plantuml.graphic.TextBlock $r7;
        java.lang.Object $r8, $r10;
        java.lang.String $r9, $r11;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementText;

        r3 := @parameter0: java.util.List;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        r5 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        specialinvoke r0.<net.sourceforge.plantuml.salt.element.AbstractElement: void <init>()>();

        r2 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>(r1);

        $r4 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.util.Collection)>(r3);

        $r6 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r7 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r2, $r6, r5);

        r0.<net.sourceforge.plantuml.salt.element.ElementText: net.sourceforge.plantuml.graphic.TextBlock block> = $r7;

        $r8 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.lang.String) $r8;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(".");

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<net.sourceforge.plantuml.salt.element.ElementText: boolean show> = $z1;

        $r10 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.String) $r10;

        r0.<net.sourceforge.plantuml.salt.element.ElementText: java.lang.String text> = $r11;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getPreferredDimension(net.sourceforge.plantuml.graphic.StringBounder, double, double)
    {
        net.sourceforge.plantuml.salt.element.ElementText r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementText;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        $r2 = r0.<net.sourceforge.plantuml.salt.element.ElementText: net.sourceforge.plantuml.graphic.TextBlock block>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, int, net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        int i0;
        net.sourceforge.plantuml.salt.element.ElementText r0;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementText;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter1: int;

        r3 := @parameter2: net.sourceforge.plantuml.awt.geom.Dimension2D;

        if i0 == 0 goto label1;

        return;

     label1:
        $z0 = r0.<net.sourceforge.plantuml.salt.element.ElementText: boolean show>;

        if $z0 == 0 goto label2;

        $r2 = r0.<net.sourceforge.plantuml.salt.element.ElementText: net.sourceforge.plantuml.graphic.TextBlock block>;

        interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

     label2:
        return;
    }

    public final java.lang.String getText()
    {
        net.sourceforge.plantuml.salt.element.ElementText r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.salt.element.ElementText;

        $r1 = r0.<net.sourceforge.plantuml.salt.element.ElementText: java.lang.String text>;

        return $r1;
    }
}
