class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow color;
    private final net.sourceforge.plantuml.graphic.TextBlock out2;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2;
        net.sourceforge.plantuml.graphic.Rainbow r3;
        net.sourceforge.plantuml.graphic.TextBlock r4;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.Rainbow;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0> = r1;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r2, null);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.Rainbow color> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.TextBlock out2> = r4;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal $r3, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4;
        double d0, $d1;
        java.awt.geom.Point2D r5;
        java.awt.geom.Point2D$Double $r6;
        net.sourceforge.plantuml.ISkinParam $r9;
        net.sourceforge.plantuml.graphic.Rainbow $r10;
        net.sourceforge.plantuml.ugraphic.UPolygon $r11;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r12, r15;
        net.sourceforge.plantuml.graphic.TextBlock $r13;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r14;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r3 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0>;

        $r4 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.graphic.StringBounder)>($r3, r1);

        d0 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        r5 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        if r5 != null goto label1;

        return;

     label1:
        $r6 = new java.awt.geom.Point2D$Double;

        $d1 = virtualinvoke r5.<java.awt.geom.Point2D: double getX()>();

        specialinvoke $r6.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d1, d0);

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0>;

        $r9 = virtualinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.Rainbow color>;

        $r11 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r9, $r10, $r11);

        $r13 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.TextBlock out2>;

        $r14 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r15 = virtualinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r13, $r14);

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r5);

        virtualinvoke r15.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>($r6);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r15);

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r6;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r3;
        boolean $z0;
        java.awt.geom.Point2D r4, $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r4 = virtualinvoke r3.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal this$0>;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal$ConnectionVerticalOut: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile1()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal: net.sourceforge.plantuml.ugraphic.UTranslate access$600(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileIfLongHorizontal,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.graphic.StringBounder)>($r5, $r6, r2);

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r4);

        return $r8;
    }
}
