abstract class net.sourceforge.plantuml.wbs.WBSTextBlock extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    protected final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.style.StyleBuilder styleBuilder;
    private final int level;

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.style.StyleBuilder, int)
    {
        net.sourceforge.plantuml.wbs.WBSTextBlock r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.style.StyleBuilder r2;
        int i0;

        r0 := @this: net.sourceforge.plantuml.wbs.WBSTextBlock;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.style.StyleBuilder;

        i0 := @parameter2: int;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        r0.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.ISkinParam skinParam> = r1;

        r0.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.style.StyleBuilder styleBuilder> = r2;

        r0.<net.sourceforge.plantuml.wbs.WBSTextBlock: int level> = i0;

        return;
    }

    protected final void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, java.awt.geom.Point2D, java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.ugraphic.ULine $r0;
        java.awt.geom.Point2D r1, r2;
        boolean $z0;
        net.sourceforge.plantuml.ColorParam $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r6, $r8, $r9, $r13, $r18;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r12;
        net.sourceforge.plantuml.wbs.WBSTextBlock r10;
        net.sourceforge.plantuml.style.Style $r11;
        net.sourceforge.plantuml.ISkinParam $r14, $r16;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r15;
        net.sourceforge.plantuml.api.ThemeStyle $r17;

        r10 := @this: net.sourceforge.plantuml.wbs.WBSTextBlock;

        r6 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: java.awt.geom.Point2D;

        r2 := @parameter2: java.awt.geom.Point2D;

        $r0 = new net.sourceforge.plantuml.ugraphic.ULine;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, r2);

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r11 = specialinvoke r10.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.style.Style getStyleUsed()>();

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r1);

        $r13 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r14 = r10.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r15 = interfaceinvoke $r14.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r16 = r10.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r18 = virtualinvoke $r11.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UGraphic applyStrokeAndLineColor(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.api.ThemeStyle)>($r13, $r15, $r17);

        interfaceinvoke $r18.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        goto label2;

     label1:
        $r4 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam activityBorder>;

        r5 = virtualinvoke $r4.<net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ugraphic.color.HColor getDefaultValue()>();

        $r7 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(java.awt.geom.Point2D)>(r1);

        $r8 = interfaceinvoke r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r5);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

     label2:
        return;
    }

    private net.sourceforge.plantuml.style.Style getStyleUsed()
    {
        net.sourceforge.plantuml.wbs.WBSTextBlock r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.style.StyleBuilder $r2;
        net.sourceforge.plantuml.style.Style $r3;

        r0 := @this: net.sourceforge.plantuml.wbs.WBSTextBlock;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionArrow()>();

        $r2 = r0.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        $r3 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r2);

        return $r3;
    }

    protected final void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, double, double, double, double)
    {
        net.sourceforge.plantuml.wbs.WBSTextBlock r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        java.awt.geom.Point2D$Double $r2, $r3;
        double d0, d1, $d2, d3, $d4, d5;

        r0 := @this: net.sourceforge.plantuml.wbs.WBSTextBlock;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        d3 := @parameter2: double;

        d1 := @parameter3: double;

        d5 := @parameter4: double;

        $r2 = new java.awt.geom.Point2D$Double;

        $d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1);

        specialinvoke $r2.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d2, d3);

        $r3 = new java.awt.geom.Point2D$Double;

        $d4 = staticinvoke <java.lang.Math: double max(double,double)>(d0, d1);

        specialinvoke $r3.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d4, d5);

        virtualinvoke r0.<net.sourceforge.plantuml.wbs.WBSTextBlock: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,java.awt.geom.Point2D,java.awt.geom.Point2D)>(r1, $r2, $r3);

        return;
    }

    public final net.sourceforge.plantuml.style.StyleSignature getDefaultStyleDefinitionArrow()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.style.StyleSignature $r5, $r8;
        net.sourceforge.plantuml.wbs.WBSTextBlock r6;
        int $i0;
        java.lang.String $r7;

        r6 := @this: net.sourceforge.plantuml.wbs.WBSTextBlock;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[4];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName wbsDiagram>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName arrow>;

        $r0[3] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        $i0 = r6.<net.sourceforge.plantuml.wbs.WBSTextBlock: int level>;

        $r7 = staticinvoke <net.sourceforge.plantuml.style.SName: java.lang.String depth(int)>($i0);

        $r8 = virtualinvoke $r5.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature add(java.lang.String)>($r7);

        return $r8;
    }

    protected final net.sourceforge.plantuml.graphic.TextBlock buildMain(net.sourceforge.plantuml.wbs.WElement)
    {
        net.sourceforge.plantuml.wbs.WElement r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.style.Style r2;
        net.sourceforge.plantuml.mindmap.IdeaShape $r3, $r4;
        net.sourceforge.plantuml.wbs.WBSTextBlock r5;
        net.sourceforge.plantuml.ISkinParam $r6, $r8, $r12, $r17, $r18;
        net.sourceforge.plantuml.api.ThemeStyle $r7;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r9;
        net.sourceforge.plantuml.graphic.FontConfiguration $r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r11;
        net.sourceforge.plantuml.LineBreakStrategy $r13;
        net.sourceforge.plantuml.creole.CreoleMode $r14;
        net.sourceforge.plantuml.graphic.TextBlock r15, $r16, $r19;

        r5 := @this: net.sourceforge.plantuml.wbs.WBSTextBlock;

        r0 := @parameter0: net.sourceforge.plantuml.wbs.WElement;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.cucadiagram.Display getLabel()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.style.Style getStyle()>();

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.mindmap.IdeaShape getShape()>();

        $r4 = <net.sourceforge.plantuml.mindmap.IdeaShape: net.sourceforge.plantuml.mindmap.IdeaShape BOX>;

        if $r3 != $r4 goto label1;

        $r17 = r5.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r18 = virtualinvoke r0.<net.sourceforge.plantuml.wbs.WElement: net.sourceforge.plantuml.ISkinParam withBackColor(net.sourceforge.plantuml.ISkinParam)>($r17);

        $r19 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vertical.FtileBoxOld: net.sourceforge.plantuml.graphic.TextBlock createWbs(net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display)>(r2, $r18, r1);

        return $r19;

     label1:
        $r6 = r5.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r7 = interfaceinvoke $r6.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r8 = r5.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r10 = virtualinvoke r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.FontConfiguration getFontConfiguration(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r7, $r9);

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r12 = r5.<net.sourceforge.plantuml.wbs.WBSTextBlock: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r13 = virtualinvoke r2.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.LineBreakStrategy wrapWidth()>();

        $r14 = <net.sourceforge.plantuml.creole.CreoleMode: net.sourceforge.plantuml.creole.CreoleMode FULL>;

        r15 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create0(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple,net.sourceforge.plantuml.LineBreakStrategy,net.sourceforge.plantuml.creole.CreoleMode,net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor)>($r10, $r11, $r12, $r13, $r14, null, null);

        $r16 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double,double,double)>(r15, 0.0, 3.0, 1.0, 1.0);

        return $r16;
    }
}
