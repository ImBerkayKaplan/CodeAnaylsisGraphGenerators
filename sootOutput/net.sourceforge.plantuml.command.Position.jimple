public final enum class net.sourceforge.plantuml.command.Position extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.command.Position RIGHT;
    public static final enum net.sourceforge.plantuml.command.Position LEFT;
    public static final enum net.sourceforge.plantuml.command.Position BOTTOM;
    public static final enum net.sourceforge.plantuml.command.Position TOP;
    private static final net.sourceforge.plantuml.command.Position[] $VALUES;

    public static net.sourceforge.plantuml.command.Position[] values()
    {
        net.sourceforge.plantuml.command.Position[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.command.Position[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.command.Position valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.command.Position $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/command/Position;", r0);

        $r2 = (net.sourceforge.plantuml.command.Position) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.command.Position r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.command.Position;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    public static net.sourceforge.plantuml.command.Position fromString(java.lang.String)
    {
        java.lang.String r0, $r1;
        net.sourceforge.plantuml.command.Position $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position valueOf(java.lang.String)>($r1);

        return $r2;
    }

    public net.sourceforge.plantuml.command.Position withRankdir(net.sourceforge.plantuml.cucadiagram.Rankdir)
    {
        net.sourceforge.plantuml.cucadiagram.Rankdir r0, $r2;
        java.lang.Object $r1;
        net.sourceforge.plantuml.command.Position r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11, $r12;
        java.lang.IllegalStateException $r8;

        r3 := @this: net.sourceforge.plantuml.command.Position;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.Rankdir;

        $r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0);

        $r2 = <net.sourceforge.plantuml.cucadiagram.Rankdir: net.sourceforge.plantuml.cucadiagram.Rankdir TOP_TO_BOTTOM>;

        if $r1 != $r2 goto label1;

        return r3;

     label1:
        $r4 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT>;

        if r3 != $r4 goto label2;

        $r12 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM>;

        return $r12;

     label2:
        $r5 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position LEFT>;

        if r3 != $r5 goto label3;

        $r11 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        return $r11;

     label3:
        $r6 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM>;

        if r3 != $r6 goto label4;

        $r10 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT>;

        return $r10;

     label4:
        $r7 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        if r3 != $r7 goto label5;

        $r9 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position LEFT>;

        return $r9;

     label5:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;
    }

    public net.sourceforge.plantuml.Direction reverseDirection()
    {
        net.sourceforge.plantuml.command.Position r0, $r1, $r2;
        java.lang.UnsupportedOperationException $r3;
        net.sourceforge.plantuml.Direction $r4, $r5;

        r0 := @this: net.sourceforge.plantuml.command.Position;

        $r1 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position LEFT>;

        if r0 != $r1 goto label1;

        $r5 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        return $r5;

     label1:
        $r2 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT>;

        if r0 != $r2 goto label2;

        $r4 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction LEFT>;

        return $r4;

     label2:
        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    private static net.sourceforge.plantuml.command.Position[] $values()
    {
        net.sourceforge.plantuml.command.Position[] $r0;
        net.sourceforge.plantuml.command.Position $r1, $r2, $r3, $r4;

        $r0 = newarray (net.sourceforge.plantuml.command.Position)[4];

        $r1 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position LEFT>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        $r0[3] = $r4;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.command.Position $r0, $r1, $r2, $r3;
        net.sourceforge.plantuml.command.Position[] $r4;

        $r0 = new net.sourceforge.plantuml.command.Position;

        specialinvoke $r0.<net.sourceforge.plantuml.command.Position: void <init>(java.lang.String,int)>("RIGHT", 0);

        <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT> = $r0;

        $r1 = new net.sourceforge.plantuml.command.Position;

        specialinvoke $r1.<net.sourceforge.plantuml.command.Position: void <init>(java.lang.String,int)>("LEFT", 1);

        <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position LEFT> = $r1;

        $r2 = new net.sourceforge.plantuml.command.Position;

        specialinvoke $r2.<net.sourceforge.plantuml.command.Position: void <init>(java.lang.String,int)>("BOTTOM", 2);

        <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM> = $r2;

        $r3 = new net.sourceforge.plantuml.command.Position;

        specialinvoke $r3.<net.sourceforge.plantuml.command.Position: void <init>(java.lang.String,int)>("TOP", 3);

        <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP> = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position[] $values()>();

        <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position[] $VALUES> = $r4;

        return;
    }
}
