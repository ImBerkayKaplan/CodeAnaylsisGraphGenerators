public class net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz extends java.lang.Object implements net.sourceforge.plantuml.sequencediagram.graphic.FileMaker
{
    private final net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram;
    private final net.sourceforge.plantuml.FileFormatOption fileFormatOption;
    private final net.sourceforge.plantuml.skin.rose.Rose skin;
    private final net.sourceforge.plantuml.AnnotatedWorker annotatedWorker;
    private final int index;
    private net.sourceforge.plantuml.sequencediagram.teoz.Dolls dolls;
    private final net.sourceforge.plantuml.graphic.StringBounder stringBounder;
    private final net.sourceforge.plantuml.graphic.TextBlock footer;
    private final net.sourceforge.plantuml.graphic.TextBlock header;
    private final net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body;
    private final net.sourceforge.plantuml.graphic.TextBlock title;
    private final net.sourceforge.plantuml.graphic.TextBlock legend;
    private final net.sourceforge.plantuml.graphic.TextBlock caption;
    private final net.sourceforge.plantuml.awt.geom.Dimension2D dimTotal;
    private final net.sourceforge.plantuml.real.Real min1;
    private final net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces;
    private final double heightEnglober1;
    private final double heightEnglober2;

    public void <init>(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, net.sourceforge.plantuml.skin.rose.Rose, net.sourceforge.plantuml.FileFormatOption, int)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces $r1;
        int i0;
        net.sourceforge.plantuml.FileFormatOption r2;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r3;
        net.sourceforge.plantuml.ISkinParam $r4, $r14;
        net.sourceforge.plantuml.graphic.StringBounder $r5, $r15, $r16, $r23, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46, $r49, $r52, $r55;
        net.sourceforge.plantuml.skin.rose.Rose r6;
        net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants $r7, $r17, $r26, $r41;
        net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpace $r8;
        net.sourceforge.plantuml.FontParam $r9, $r11;
        net.sourceforge.plantuml.graphic.TextBlock $r10, $r12, $r19, $r20, $r22, $r29, $r32, $r35, $r38, $r44, $r47, $r50, $r53, $r56;
        net.sourceforge.plantuml.AnnotatedWorker $r13, $r21, $r58;
        net.sourceforge.plantuml.real.Real $r18;
        net.sourceforge.plantuml.sequencediagram.teoz.Dolls $r24;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, $d25;
        byte $b1, $b2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48, $r51, $r54, $r57;
        boolean $z0;
        net.sourceforge.plantuml.Dimension2DDouble $r59;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r3 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r6 := @parameter1: net.sourceforge.plantuml.skin.rose.Rose;

        r2 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        i0 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces;

        specialinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: void <init>()>();

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces> = $r1;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: int index> = i0;

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.graphic.StringBounder getDefaultStringBounder(net.sourceforge.plantuml.SvgCharSizeHack)>($r4);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder> = $r5;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram> = r3;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.FileFormatOption fileFormatOption> = r2;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.skin.rose.Rose skin> = r6;

        $r7 = new net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpace createMainTile()>();

        specialinvoke $r7.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpace)>($r8);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body> = $r7;

        $r9 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam FOOTER>;

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock getFooterOrHeader(net.sourceforge.plantuml.FontParam)>($r9);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock footer> = $r10;

        $r11 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam HEADER>;

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock getFooterOrHeader(net.sourceforge.plantuml.FontParam)>($r11);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock header> = $r12;

        $r13 = new net.sourceforge.plantuml.AnnotatedWorker;

        $r14 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r15 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        specialinvoke $r13.<net.sourceforge.plantuml.AnnotatedWorker: void <init>(net.sourceforge.plantuml.Annotated,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder)>(r3, $r14, $r15);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.AnnotatedWorker annotatedWorker> = $r13;

        $r17 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body>;

        $r16 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r18 = virtualinvoke $r17.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants: net.sourceforge.plantuml.real.Real getMinX(net.sourceforge.plantuml.graphic.StringBounder)>($r16);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.real.Real min1> = $r18;

        $r19 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock getTitle()>();

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock title> = $r19;

        $r20 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock getLegend()>();

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock legend> = $r20;

        $r21 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.AnnotatedWorker annotatedWorker>;

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock getCaption()>();

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock caption> = $r22;

        $r24 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.Dolls dolls>;

        $r23 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $d0 = virtualinvoke $r24.<net.sourceforge.plantuml.sequencediagram.teoz.Dolls: double getOffsetForEnglobers(net.sourceforge.plantuml.graphic.StringBounder)>($r23);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober1> = $d0;

        $d1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober1>;

        $b1 = $d1 cmpl 0.0;

        if $b1 != 0 goto label1;

        $d25 = 0.0;

        goto label2;

     label1:
        $d25 = 10.0;

     label2:
        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober2> = $d25;

        $r26 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body>;

        $r25 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r27 = virtualinvoke $r26.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r25);

        $d2 = virtualinvoke $r27.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r29 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock title>;

        $r28 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r30 = interfaceinvoke $r29.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r28);

        $d3 = virtualinvoke $r30.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r32 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock footer>;

        $r31 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r33 = interfaceinvoke $r32.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r31);

        $d4 = virtualinvoke $r33.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r35 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock header>;

        $r34 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r36 = interfaceinvoke $r35.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r34);

        $d5 = virtualinvoke $r36.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r38 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock legend>;

        $r37 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r39 = interfaceinvoke $r38.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r37);

        $d6 = virtualinvoke $r39.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d7 = staticinvoke <net.sourceforge.plantuml.utils.MathUtils: double max(double,double,double,double,double)>($d2, $d3, $d4, $d5, $d6);

        $r41 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body>;

        $r40 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r42 = virtualinvoke $r41.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r40);

        $d8 = virtualinvoke $r42.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d9 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober1>;

        $d11 = $d8 + $d9;

        $d10 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober2>;

        $d12 = $d11 + $d10;

        $r44 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock title>;

        $r43 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r45 = interfaceinvoke $r44.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r43);

        $d13 = virtualinvoke $r45.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d14 = $d12 + $d13;

        $r47 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock header>;

        $r46 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r48 = interfaceinvoke $r47.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r46);

        $d15 = virtualinvoke $r48.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d16 = $d14 + $d15;

        $r50 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock legend>;

        $r49 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r51 = interfaceinvoke $r50.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r49);

        $d17 = virtualinvoke $r51.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d18 = $d16 + $d17;

        $r53 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock caption>;

        $r52 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r54 = interfaceinvoke $r53.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r52);

        $d19 = virtualinvoke $r54.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d20 = $d18 + $d19;

        $r56 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock footer>;

        $r55 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r57 = interfaceinvoke $r56.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r55);

        $d21 = virtualinvoke $r57.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d22 = $d20 + $d21;

        $r58 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.AnnotatedWorker annotatedWorker>;

        $z0 = virtualinvoke $r58.<net.sourceforge.plantuml.AnnotatedWorker: boolean hasMainFrame()>();

        if $z0 == 0 goto label3;

        $b2 = 10;

        goto label4;

     label3:
        $b2 = 0;

     label4:
        $d23 = (double) $b2;

        d24 = $d22 + $d23;

        $r59 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r59.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d7, d24);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.awt.geom.Dimension2D dimTotal> = $r59;

        return;
    }

    public net.sourceforge.plantuml.core.ImageData createOne(java.io.OutputStream, int, boolean) throws java.io.IOException
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        int i0, $i1;
        net.sourceforge.plantuml.FileFormatOption $r1;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r2;
        net.sourceforge.plantuml.ugraphic.ImageBuilder $r3, $r5;
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz$Foo $r4;
        java.io.OutputStream r6;
        net.sourceforge.plantuml.core.ImageData $r7;
        java.lang.IllegalStateException $r8;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r6 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: int index>;

        if $i1 == i0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>()>();

        throw $r8;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.FileFormatOption fileFormatOption>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ugraphic.ImageBuilder createImageBuilder(net.sourceforge.plantuml.FileFormatOption)>($r1);

        $r4 = new net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz$Foo;

        specialinvoke $r4.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz$Foo: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz,int)>(r0, i0);

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.ugraphic.ImageBuilder drawable(net.sourceforge.plantuml.graphic.UDrawable)>($r4);

        $r7 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.ImageBuilder: net.sourceforge.plantuml.core.ImageData write(java.io.OutputStream)>(r6);

        return $r7;
    }

    private net.sourceforge.plantuml.ugraphic.UGraphic goDownAndCenterForEnglobers(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r2, $r13;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r3;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned $r4;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r5, $r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r7, $r10;
        double $d0, $d1, $d2, d3;
        net.sourceforge.plantuml.graphic.StringBounder $r8;
        net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants $r9;
        net.sourceforge.plantuml.ugraphic.UTranslate $r11;
        net.sourceforge.plantuml.ugraphic.UGraphic $r12, r14, r15, r16;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock title>;

        r15 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r14, $r1);

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock header>;

        r16 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r15, $r2);

        $r3 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.VerticalAlignment getVerticalAlignment()>();

        $r6 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment TOP>;

        if $r5 != $r6 goto label1;

        $r13 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock legend>;

        r16 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r16, $r13);

     label1:
        $r7 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.awt.geom.Dimension2D dimTotal>;

        $d0 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r9 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body>;

        $r8 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r8);

        $d1 = virtualinvoke $r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 - $d1;

        d3 = $d2 / 2.0;

        $r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d3);

        $r12 = interfaceinvoke r16.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r11);

        return $r12;
    }

    private net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r6;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r4;
        double $d0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5;

        r2 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        $r3 = r2.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r4 = interfaceinvoke r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $d0 = virtualinvoke $r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d0);

        $r6 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        return $r6;
    }

    public void printAligned(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.graphic.HorizontalAlignment r0, $r1, $r2;
        net.sourceforge.plantuml.graphic.TextBlock r3;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, $r13;
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r6, $r8, $r9, $r11;
        double $d0, $d1, $d2, $d3, $d4, d5;
        net.sourceforge.plantuml.graphic.StringBounder $r7, $r10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r12;

        r5 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d5 = 0.0;

        $r1 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if r0 != $r1 goto label1;

        $r9 = r5.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.awt.geom.Dimension2D dimTotal>;

        $d3 = virtualinvoke $r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r10 = r5.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r11 = interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r10);

        $d4 = virtualinvoke $r11.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d5 = $d3 - $d4;

        goto label2;

     label1:
        $r2 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if r0 != $r2 goto label2;

        $r6 = r5.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.awt.geom.Dimension2D dimTotal>;

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $r7 = r5.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r8 = interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r7);

        $d1 = virtualinvoke $r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d2 = $d0 - $d1;

        d5 = $d2 / 2.0;

     label2:
        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d5);

        $r13 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke r3.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r13);

        return;
    }

    private net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpace createMainTile()
    {
        net.sourceforge.plantuml.real.RealOrigin r0;
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r1;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r2, $r5, $r13, $r20, $r24;
        java.util.Collection $r3;
        boolean $z0;
        net.sourceforge.plantuml.sequencediagram.teoz.TileArguments $r4;
        net.sourceforge.plantuml.graphic.StringBounder $r6, $r14, $r16, $r28;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces $r7, $r15, $r27;
        net.sourceforge.plantuml.skin.rose.Rose $r8, $r22;
        net.sourceforge.plantuml.ISkinParam $r9, $r23;
        net.sourceforge.plantuml.sequencediagram.teoz.Dolls $r10, $r12, $r17;
        net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpace $r11;
        java.lang.Object $r18;
        net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace $r19;
        net.sourceforge.plantuml.sequencediagram.ParticipantEnglober $r21;
        java.util.List $r25;
        net.sourceforge.plantuml.real.Real $r29, r30;
        java.util.Iterator r31;
        net.sourceforge.plantuml.sequencediagram.Participant r32;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r0 = staticinvoke <net.sourceforge.plantuml.real.RealUtils: net.sourceforge.plantuml.real.RealOrigin createOrigin()>();

        r30 = interfaceinvoke r0.<net.sourceforge.plantuml.real.RealOrigin: net.sourceforge.plantuml.real.Real addAtLeast(double)>(0.0);

        $r2 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.util.Collection participants()>();

        r31 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (net.sourceforge.plantuml.sequencediagram.Participant) $r18;

        $r19 = new net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace;

        $r20 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.sequencediagram.ParticipantEnglober getEnglober(net.sourceforge.plantuml.sequencediagram.Participant)>(r32);

        $r22 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.skin.rose.Rose skin>;

        $r23 = virtualinvoke r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r24 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r25 = virtualinvoke $r24.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: java.util.List events()>();

        specialinvoke $r19.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace: void <init>(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.ParticipantEnglober,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.real.Real,java.util.List)>(r32, $r21, $r22, $r23, r30, $r25);

        $r27 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        virtualinvoke $r27.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: void put(net.sourceforge.plantuml.sequencediagram.Participant,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace)>(r32, $r19);

        $r28 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r29 = virtualinvoke $r19.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpace: net.sourceforge.plantuml.real.Real getPosD(net.sourceforge.plantuml.graphic.StringBounder)>($r28);

        r30 = interfaceinvoke $r29.<net.sourceforge.plantuml.real.Real: net.sourceforge.plantuml.real.Real addAtLeast(double)>(0.0);

        goto label1;

     label2:
        $r4 = new net.sourceforge.plantuml.sequencediagram.teoz.TileArguments;

        $r6 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r7 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        $r8 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.skin.rose.Rose skin>;

        $r5 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r9 = virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        specialinvoke $r4.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: void <init>(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces,net.sourceforge.plantuml.skin.rose.Rose,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.real.Real)>($r6, $r7, $r8, $r9, r0);

        $r10 = new net.sourceforge.plantuml.sequencediagram.teoz.Dolls;

        specialinvoke $r10.<net.sourceforge.plantuml.sequencediagram.teoz.Dolls: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>($r4);

        r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.Dolls dolls> = $r10;

        $r11 = new net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpace;

        $r13 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r12 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.Dolls dolls>;

        specialinvoke $r11.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpace: void <init>(net.sourceforge.plantuml.sequencediagram.SequenceDiagram,net.sourceforge.plantuml.sequencediagram.teoz.Dolls,net.sourceforge.plantuml.sequencediagram.teoz.TileArguments)>($r13, $r12, $r4);

        $r15 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces livingSpaces>;

        $r14 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        virtualinvoke $r15.<net.sourceforge.plantuml.sequencediagram.teoz.LivingSpaces: void addConstraints(net.sourceforge.plantuml.graphic.StringBounder)>($r14);

        virtualinvoke $r11.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpace: void addConstraints()>();

        $r17 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.Dolls dolls>;

        $r16 = r1.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        virtualinvoke $r17.<net.sourceforge.plantuml.sequencediagram.teoz.Dolls: void addConstraints(net.sourceforge.plantuml.graphic.StringBounder)>($r16);

        interfaceinvoke r0.<net.sourceforge.plantuml.real.RealOrigin: void compileNow()>();

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.teoz.TileArguments: void setBordered(net.sourceforge.plantuml.sequencediagram.teoz.Bordered)>($r11);

        return $r11;
    }

    public net.sourceforge.plantuml.ISkinParam getSkinParam()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r1;
        net.sourceforge.plantuml.ISkinParam $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        return $r2;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTitle()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r1, $r6, $r16, $r20, $r23, $r26;
        net.sourceforge.plantuml.cucadiagram.DisplayPositionned $r2, $r7, $r21;
        boolean $z0, $z1;
        net.sourceforge.plantuml.graphic.FontConfiguration $r3;
        net.sourceforge.plantuml.ISkinParam $r4, $r9, $r17, $r24, $r27;
        net.sourceforge.plantuml.FontParam $r5;
        net.sourceforge.plantuml.cucadiagram.Display $r8, $r22;
        net.sourceforge.plantuml.graphic.TextBlock $r10, r29, r30;
        net.sourceforge.plantuml.style.SName[] $r11;
        net.sourceforge.plantuml.style.SName $r12, $r13, $r14;
        net.sourceforge.plantuml.style.StyleSignature $r15;
        net.sourceforge.plantuml.style.StyleBuilder $r18;
        net.sourceforge.plantuml.style.Style r19;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r25;
        net.sourceforge.plantuml.sequencediagram.teoz.ComponentAdapter $r28;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositionned getTitle()>();

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositionned: boolean isNull()>();

        if $z0 == 0 goto label1;

        $r28 = new net.sourceforge.plantuml.sequencediagram.teoz.ComponentAdapter;

        specialinvoke $r28.<net.sourceforge.plantuml.sequencediagram.teoz.ComponentAdapter: void <init>(net.sourceforge.plantuml.skin.Component)>(null);

        return $r28;

     label1:
        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label2;

        $r11 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r12 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r11[0] = $r12;

        $r13 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName document>;

        $r11[1] = $r13;

        $r14 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName title>;

        $r11[2] = $r14;

        $r15 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r11);

        $r16 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r17 = virtualinvoke $r16.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r19 = virtualinvoke $r15.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r18);

        $r20 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r21 = virtualinvoke $r20.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositionned getTitle()>();

        $r22 = virtualinvoke $r21.<net.sourceforge.plantuml.cucadiagram.DisplayPositionned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r23 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r24 = virtualinvoke $r23.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r25 = interfaceinvoke $r24.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r26 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r27 = virtualinvoke $r26.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r29 = virtualinvoke r19.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.TextBlock createTextBlockBordered(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.ISkinSimple)>($r22, $r25, $r27);

        return r29;

     label2:
        $r3 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r5 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam TITLE>;

        specialinvoke $r3.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r4, $r5, null);

        $r6 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositionned getTitle()>();

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.DisplayPositionned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r30 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock title(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>($r3, $r8, $r9);

        $r10 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock withMargin(net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r30, 7.0, 7.0);

        return $r10;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getLegend()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r1, $r4;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned $r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        boolean $z0;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.graphic.TextBlock $r6, $r7;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.cucadiagram.Display getDisplay()>();

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>(r3);

        if $z0 == 0 goto label1;

        $r7 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.graphic.TextBlock empty(double,double)>(0.0, 0.0);

        return $r7;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.EntityImageLegend: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.ISkinParam)>(r3, $r5);

        return $r6;
    }

    public net.sourceforge.plantuml.graphic.TextBlock getFooterOrHeader(net.sourceforge.plantuml.FontParam)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        net.sourceforge.plantuml.FontParam r1;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r2, $r4, $r19;
        net.sourceforge.plantuml.cucadiagram.DisplaySection $r3, $r5, r6;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, i3;
        net.sourceforge.plantuml.ISkinParam $r7, $r9, $r12, $r16, r20, $r22;
        net.sourceforge.plantuml.ugraphic.color.HColor r8, r11;
        net.sourceforge.plantuml.FontParam[] $r10, $r13, $r17;
        net.sourceforge.plantuml.ugraphic.UFont $r14, $r18;
        java.lang.String r15;
        net.sourceforge.plantuml.png.PngTitler $r21;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r23;
        net.sourceforge.plantuml.sequencediagram.teoz.TeozLayer $r24, $r27;
        net.sourceforge.plantuml.graphic.StringBounder $r25, $r28;
        net.sourceforge.plantuml.style.StyleBuilder $r26;
        net.sourceforge.plantuml.style.Style r29;
        net.sourceforge.plantuml.style.StyleSignature r30;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r1 := @parameter0: net.sourceforge.plantuml.FontParam;

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplaySection getFooterOrHeaderTeoz(net.sourceforge.plantuml.FontParam)>(r1);

        $z0 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.DisplaySection: boolean isNull()>();

        if $z0 == 0 goto label1;

        $r27 = new net.sourceforge.plantuml.sequencediagram.teoz.TeozLayer;

        $r28 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        specialinvoke $r27.<net.sourceforge.plantuml.sequencediagram.teoz.TeozLayer: void <init>(net.sourceforge.plantuml.png.PngTitler,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.FontParam)>(null, $r28, r1);

        return $r27;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplaySection getFooterOrHeaderTeoz(net.sourceforge.plantuml.FontParam)>(r1);

        $i0 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: int index>;

        $i1 = $i0 + 1;

        $i2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: int getNbPages()>();

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.cucadiagram.DisplaySection withPage(int,int)>($i1, $i2);

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getHyperlinkColor()>();

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r10[0] = r1;

        r11 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColor getFontHtmlColor(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.FontParam[])>(null, $r10);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r13[0] = r1;

        $r14 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>(null, 0, $r13);

        r15 = virtualinvoke $r14.<net.sourceforge.plantuml.ugraphic.UFont: java.lang.String getFamily(net.sourceforge.plantuml.ugraphic.UFontContext)>(null);

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r17 = newarray (net.sourceforge.plantuml.FontParam)[1];

        $r17[0] = r1;

        $r18 = interfaceinvoke $r16.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.UFont getFont(net.sourceforge.plantuml.cucadiagram.Stereotype,boolean,net.sourceforge.plantuml.FontParam[])>(null, 0, $r17);

        i3 = virtualinvoke $r18.<net.sourceforge.plantuml.ugraphic.UFont: int getSize()>();

        r29 = null;

        $r19 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        r20 = virtualinvoke $r19.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $z1 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z1 == 0 goto label2;

        r30 = virtualinvoke r1.<net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.style.StyleSignature getStyleDefinition(net.sourceforge.plantuml.style.SName)>(null);

        $r26 = interfaceinvoke r20.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r29 = virtualinvoke r30.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r26);

     label2:
        $r21 = new net.sourceforge.plantuml.png.PngTitler;

        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $z2 = interfaceinvoke $r22.<net.sourceforge.plantuml.ISkinParam: boolean useUnderlineForHyperlink()>();

        $r23 = interfaceinvoke r20.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        specialinvoke $r21.<net.sourceforge.plantuml.png.PngTitler: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.DisplaySection,int,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor,boolean,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.ISkinSimple)>(r11, r6, i3, r15, r8, $z2, r29, $r23, r20);

        $r24 = new net.sourceforge.plantuml.sequencediagram.teoz.TeozLayer;

        $r25 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        specialinvoke $r24.<net.sourceforge.plantuml.sequencediagram.teoz.TeozLayer: void <init>(net.sourceforge.plantuml.png.PngTitler,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.FontParam)>($r21, $r25, r1);

        return $r24;
    }

    public int getNbPages()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body>;

        $i0 = virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants: int getNbPages()>();

        return $i0;
    }

    private void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic, int)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        int i0;
        net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants $r1, $r7, $r23;
        net.sourceforge.plantuml.real.Real $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        net.sourceforge.plantuml.ugraphic.UTranslate r3, $r22, $r26, $r29;
        net.sourceforge.plantuml.sequencediagram.teoz.Dolls $r4;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, $r27, r59, r60, r61, r64, r65, r67, r68, r69;
        net.sourceforge.plantuml.graphic.StringBounder $r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r8;
        net.sourceforge.plantuml.skin.SimpleContext2D $r9;
        net.sourceforge.plantuml.FontParam $r10, $r37, $r54;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r11, $r18, $r30, $r38, $r42, $r49, $r55;
        net.sourceforge.plantuml.cucadiagram.DisplaySection $r12, $r39;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r13, $r28, $r35, $r40, $r44, $r51, r62;
        net.sourceforge.plantuml.graphic.TextBlock $r14, $r15, $r16, $r17, $r34, $r36, $r41, $r45, $r46, $r52, $r53, r66;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.DisplayPositioned $r19, $r31, $r43, $r50;
        net.sourceforge.plantuml.graphic.VerticalAlignment $r20, $r21, $r32, $r33;
        net.sourceforge.plantuml.AnnotatedWorker $r24, $r25;
        net.sourceforge.plantuml.ISkinParam $r56;
        net.sourceforge.plantuml.style.StyleBuilder $r57;
        net.sourceforge.plantuml.style.Style $r58;
        net.sourceforge.plantuml.style.StyleSignature r63;
        byte $b1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r59 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter1: int;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body>;

        virtualinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants: void setIndex(int)>(i0);

        $r2 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.real.Real min1>;

        $d0 = interfaceinvoke $r2.<net.sourceforge.plantuml.real.Real: double getCurrentValue()>();

        $d1 = neg $d0;

        r3 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d1);

        r60 = interfaceinvoke r59.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r3);

        $r4 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.Dolls dolls>;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDownAndCenterForEnglobers(net.sourceforge.plantuml.ugraphic.UGraphic)>(r60);

        $r7 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body>;

        $r6 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.StringBounder stringBounder>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r6);

        $d2 = virtualinvoke $r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d3 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober1>;

        $d6 = $d2 + $d3;

        $d4 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober2>;

        $d5 = $d4 / 2.0;

        $d7 = $d6 + $d5;

        $r9 = new net.sourceforge.plantuml.skin.SimpleContext2D;

        specialinvoke $r9.<net.sourceforge.plantuml.skin.SimpleContext2D: void <init>(boolean)>(1);

        virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.teoz.Dolls: void drawEnglobers(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.skin.Context2D)>($r5, $d7, $r9);

        $r11 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r10 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam HEADER>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplaySection getFooterOrHeaderTeoz(net.sourceforge.plantuml.FontParam)>($r10);

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r14 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock header>;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: void printAligned(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock)>(r60, $r13, $r14);

        $r15 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock header>;

        r61 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r60, $r15);

        r62 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 == 0 goto label1;

        $r54 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam TITLE>;

        r63 = virtualinvoke $r54.<net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.style.StyleSignature getStyleDefinition(net.sourceforge.plantuml.style.SName)>(null);

        $r55 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r56 = virtualinvoke $r55.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r57 = interfaceinvoke $r56.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        $r58 = virtualinvoke r63.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r57);

        r62 = virtualinvoke $r58.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

     label1:
        $r16 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock title>;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: void printAligned(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock)>(r61, r62, $r16);

        $r17 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock title>;

        r64 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r61, $r17);

        $r18 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r19 = virtualinvoke $r18.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r20 = virtualinvoke $r19.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.VerticalAlignment getVerticalAlignment()>();

        $r21 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment TOP>;

        if $r20 != $r21 goto label2;

        $r49 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r50 = virtualinvoke $r49.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r51 = virtualinvoke $r50.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r52 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock legend>;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: void printAligned(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock)>(r64, $r51, $r52);

        $r53 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock legend>;

        r64 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r64, $r53);

     label2:
        $d8 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober1>;

        $r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d8);

        r65 = interfaceinvoke r64.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        $r24 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.AnnotatedWorker annotatedWorker>;

        $r23 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.teoz.PlayingSpaceWithParticipants body>;

        r66 = virtualinvoke $r24.<net.sourceforge.plantuml.AnnotatedWorker: net.sourceforge.plantuml.graphic.TextBlock addFrame(net.sourceforge.plantuml.graphic.TextBlock)>($r23);

        $r25 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.AnnotatedWorker annotatedWorker>;

        $z1 = virtualinvoke $r25.<net.sourceforge.plantuml.AnnotatedWorker: boolean hasMainFrame()>();

        if $z1 == 0 goto label3;

        $b1 = 4;

        goto label4;

     label3:
        $b1 = 0;

     label4:
        $d9 = (double) $b1;

        $r26 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d9);

        $r27 = interfaceinvoke r65.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r26);

        $r28 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: void printAligned(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock)>($r27, $r28, r66);

        r67 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r65, r66);

        $d10 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: double heightEnglober2>;

        $r29 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d10);

        r68 = interfaceinvoke r67.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r29);

        $r30 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r31 = virtualinvoke $r30.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r32 = virtualinvoke $r31.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.VerticalAlignment getVerticalAlignment()>();

        $r33 = <net.sourceforge.plantuml.graphic.VerticalAlignment: net.sourceforge.plantuml.graphic.VerticalAlignment BOTTOM>;

        if $r32 != $r33 goto label5;

        $r42 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r43 = virtualinvoke $r42.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplayPositioned getLegend()>();

        $r44 = virtualinvoke $r43.<net.sourceforge.plantuml.cucadiagram.DisplayPositioned: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r45 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock legend>;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: void printAligned(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock)>(r68, $r44, $r45);

        $r46 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock legend>;

        r68 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r68, $r46);

     label5:
        $r35 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        $r34 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock caption>;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: void printAligned(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock)>(r68, $r35, $r34);

        $r36 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock caption>;

        r69 = specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.ugraphic.UGraphic goDown(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock)>(r68, $r36);

        $r38 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.sequencediagram.SequenceDiagram diagram>;

        $r37 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam FOOTER>;

        $r39 = virtualinvoke $r38.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.cucadiagram.DisplaySection getFooterOrHeaderTeoz(net.sourceforge.plantuml.FontParam)>($r37);

        $r40 = virtualinvoke $r39.<net.sourceforge.plantuml.cucadiagram.DisplaySection: net.sourceforge.plantuml.graphic.HorizontalAlignment getHorizontalAlignment()>();

        $r41 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: net.sourceforge.plantuml.graphic.TextBlock footer>;

        virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: void printAligned(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.graphic.TextBlock)>(r69, $r40, $r41);

        return;
    }

    static void access$000(net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz, net.sourceforge.plantuml.ugraphic.UGraphic, int)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        int i0;

        r0 := @parameter0: net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        i0 := @parameter2: int;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.SequenceDiagramFileMakerTeoz: void drawInternal(net.sourceforge.plantuml.ugraphic.UGraphic,int)>(r1, i0);

        return;
    }
}
