class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection implements net.sourceforge.plantuml.activitydiagram3.ftile.ConnectionTranslatable
{
    private final net.sourceforge.plantuml.graphic.Rainbow color;
    private final net.sourceforge.plantuml.ugraphic.UPolygon usingArrow;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks, net.sourceforge.plantuml.activitydiagram3.ftile.Ftile, net.sourceforge.plantuml.activitydiagram3.Branch)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, $r3;
        net.sourceforge.plantuml.activitydiagram3.Branch r4;
        net.sourceforge.plantuml.graphic.Rainbow $r5, $r6, $r7;
        int $i0;
        boolean $z0;
        java.lang.IllegalArgumentException $r9;
        net.sourceforge.plantuml.ugraphic.UPolygon $r10;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile;

        r4 := @parameter2: net.sourceforge.plantuml.activitydiagram3.Branch;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0> = r1;

        $r3 = r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r3, r2);

        $r5 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.graphic.Rainbow access$000(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks)>(r1);

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.Branch: net.sourceforge.plantuml.graphic.Rainbow getInColor(net.sourceforge.plantuml.graphic.Rainbow)>($r5);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.graphic.Rainbow color> = $r6;

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.graphic.Rainbow color>;

        $i0 = virtualinvoke $r7.<net.sourceforge.plantuml.graphic.Rainbow: int size()>();

        if $i0 != 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label1:
        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.Branch: boolean isEmpty()>();

        if $z0 == 0 goto label2;

        $r10 = null;

        goto label3;

     label2:
        $r10 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToDown()>();

     label3:
        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UPolygon usingArrow> = $r10;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical r2;
        java.awt.geom.Point2D r3, r4;
        double d0, d1, d2, d3;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.ugraphic.UPolygon $r7;
        net.sourceforge.plantuml.graphic.Rainbow $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r9;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        d2 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        d3 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.graphic.Rainbow color>;

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UPolygon usingArrow>;

        r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r6, $r8, $r7);

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d1);

        virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d3);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r9);

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r1, $r6, $r9, $r12;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3, $r5, $r7, $r8, $r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        java.lang.IllegalStateException $r11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r13;
        java.awt.geom.Point2D $r14, r15;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r3 = $r1.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r7 = $r6.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        if $r5 != $r7 goto label1;

        r15 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointD()>();

        goto label3;

     label1:
        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r10 = $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        if $r8 != $r10 goto label2;

        r15 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointB()>();

        goto label3;

     label2:
        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label3:
        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslateDiamond1(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $r14 = virtualinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r15);

        return $r14;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry $r4;
        java.awt.geom.Point2D $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UTranslate translate(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r4 = interfaceinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointIn()>();

        $r6 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r5);

        return $r6;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate translate(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r1, $r3, $r4, $r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r2, $r5, $r9, $r11;
        java.lang.IllegalStateException $r7;
        net.sourceforge.plantuml.graphic.StringBounder r8;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10, $r12;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r3 = $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile1>;

        if $r1 != $r3 goto label1;

        $r11 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate1(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        return $r12;

     label1:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtile2()>();

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r6 = $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile tile2>;

        if $r4 != $r6 goto label2;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r10 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate2(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        return $r10;

     label2:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;
    }

    public void drawTranslate(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical r2;
        net.sourceforge.plantuml.Direction r3, r6, $r7;
        net.sourceforge.plantuml.ugraphic.UTranslate r4, r5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, $d11, $d12;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks $r8, $r11, $r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r10;
        net.sourceforge.plantuml.ISkinParam $r12, $r20;
        net.sourceforge.plantuml.graphic.Rainbow $r13, $r21;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake r14, $r23, r25;
        java.awt.geom.Point2D r15, r16, r17, r18;
        byte $b0;
        net.sourceforge.plantuml.ugraphic.UPolygon $r22;
        net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy $r24;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r4 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r5 := @parameter2: net.sourceforge.plantuml.ugraphic.UTranslate;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r15 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r16 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        r3 = staticinvoke <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction leftOrRight(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r15, r16);

        r17 = virtualinvoke r4.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r15);

        r18 = virtualinvoke r5.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>(r16);

        r6 = staticinvoke <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction leftOrRight(java.awt.geom.Point2D,java.awt.geom.Point2D)>(r17, r18);

        if r3 == r6 goto label3;

        $r7 = <net.sourceforge.plantuml.Direction: net.sourceforge.plantuml.Direction RIGHT>;

        if r3 != $r7 goto label1;

        $b0 = -1;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        $d0 = (double) $b0;

        d10 = $d0 * 12.0;

        $r8 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r9 = $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile diamond1>;

        r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r11 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r13 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.graphic.Rainbow color>;

        r14 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow)>($r12, $r13);

        virtualinvoke r14.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r17);

        $d1 = virtualinvoke r17.<java.awt.geom.Point2D: double getX()>();

        $d2 = $d1 + d10;

        $d3 = virtualinvoke r17.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r14.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d2, $d3);

        $d4 = virtualinvoke r17.<java.awt.geom.Point2D: double getX()>();

        $d5 = $d4 + d10;

        $d6 = virtualinvoke r17.<java.awt.geom.Point2D: double getY()>();

        $d7 = virtualinvoke r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d8 = $d7 * 0.75;

        $d9 = $d6 + $d8;

        virtualinvoke r14.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d5, $d9);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r14);

        r17 = virtualinvoke r14.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: java.awt.geom.Point2D getLast()>();

     label3:
        $r19 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks this$0>;

        $r20 = virtualinvoke $r19.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r21 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.graphic.Rainbow color>;

        $r22 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.cond.FtileIfWithLinks$ConnectionHorizontalThenVertical: net.sourceforge.plantuml.ugraphic.UPolygon usingArrow>;

        $r23 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r20, $r21, $r22);

        $r24 = <net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy: net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy LIMITED>;

        r25 = virtualinvoke $r23.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withMerge(net.sourceforge.plantuml.activitydiagram3.ftile.MergeStrategy)>($r24);

        virtualinvoke r25.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r17);

        $d11 = virtualinvoke r18.<java.awt.geom.Point2D: double getX()>();

        $d12 = virtualinvoke r17.<java.awt.geom.Point2D: double getY()>();

        virtualinvoke r25.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>($d11, $d12);

        virtualinvoke r25.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(java.awt.geom.Point2D)>(r18);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r25);

        return;
    }
}
