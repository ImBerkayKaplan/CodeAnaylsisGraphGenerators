public class gen.lib.dotgen.flat__c extends java.lang.Object
{
    private static final int HLB;
    private static final int HRB;
    private static final int SLB;
    private static final int SRB;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        gen.lib.dotgen.flat__c r0;

        r0 := @this: gen.lib.dotgen.flat__c;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static h.ST_Agnode_s make_vn_slot(h.ST_Agraph_s, int, int)
    {
        h.ST_Agraph_s r0;
        smetana.core.CArray $r1, $r4, $r9, $r12, $r16;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.lang.Object $r2, $r5, $r10, $r13, $r17, $r19, $r21, $r23, $r25;
        h.ST_rank_t $r3, $r6, $r11, $r14, $r18;
        smetana.core.CArrayOfStar $r7, r8;
        h.ST_Agnode_s r15, r20, $r22, $r24, $r26;
        java.lang.Throwable $r27;

        r0 := @parameter0: h.ST_Agraph_s;

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("e0gtvsxlvztmwu8yy44wfvf97", "make_vn_slot");

     label1:
        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r3 = (h.ST_rank_t) $r2;

        $i1 = $r3.<h.ST_rank_t: int n>;

        $i2 = $i1 + 2;

        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r6 = (h.ST_rank_t) $r5;

        $r7 = $r6.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        r8 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar REALLOC(int,smetana.core.CArrayOfStar,java.lang.Class)>($i2, $r7, class "Lh/ST_Agnode_s;");

        $r9 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r10 = virtualinvoke $r9.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r11 = (h.ST_rank_t) $r10;

        $r11.<h.ST_rank_t: smetana.core.CArrayOfStar v> = r8;

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r14 = (h.ST_rank_t) $r13;

        i9 = $r14.<h.ST_rank_t: int n>;

     label2:
        if i9 <= i3 goto label3;

        $i6 = i9 - 1;

        $r21 = virtualinvoke r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>($i6);

        $r22 = (h.ST_Agnode_s) $r21;

        virtualinvoke r8.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i9, $r22);

        $r23 = virtualinvoke r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r24 = (h.ST_Agnode_s) $r23;

        $r25 = virtualinvoke r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i9);

        $r26 = (h.ST_Agnode_s) $r25;

        $i7 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r26);

        $i8 = $i7 + 1;

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>($r24, $i8);

        i9 = i9 + -1;

        goto label2;

     label3:
        r15 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agnode_s virtual_node(h.ST_Agraph_s)>(r0);

        virtualinvoke r8.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>(i3, r15);

        staticinvoke <smetana.core.Macro: void ND_order(h.ST_Agnode_s,int)>(r15, i3);

        staticinvoke <smetana.core.Macro: void ND_rank(h.ST_Agnode_s,int)>(r15, i0);

        $r16 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r17 = virtualinvoke $r16.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r18 = (h.ST_rank_t) $r17;

        $i4 = $r18.<h.ST_rank_t: int n>;

        $i5 = $i4 + 1;

        $r18.<h.ST_rank_t: int n> = $i5;

        virtualinvoke r8.<smetana.core.CArrayOfStar: void set_(int,java.lang.Object)>($i5, null);

        $r19 = virtualinvoke r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i3);

        r20 = (h.ST_Agnode_s) $r19;

     label4:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("e0gtvsxlvztmwu8yy44wfvf97", "make_vn_slot");

        return r20;

     label5:
        $r27 := @caughtexception;

     label6:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("e0gtvsxlvztmwu8yy44wfvf97", "make_vn_slot");

        throw $r27;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static void findlr(h.ST_Agnode_s, h.ST_Agnode_s, int[], int[])
    {
        h.ST_Agnode_s r0, r1;
        int[] r2, r3;
        int i0, i1, i2;
        java.lang.Throwable $r4;

        r0 := @parameter0: h.ST_Agnode_s;

        r1 := @parameter1: h.ST_Agnode_s;

        r2 := @parameter2: int[];

        r3 := @parameter3: int[];

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("d64wt9oqphauv3hp4axbg2ep3", "findlr");

     label1:
        i1 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r0);

        i2 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r1);

        if i1 <= i2 goto label2;

        i0 = i1;

        i1 = i2;

        i2 = i0;

     label2:
        r2[0] = i1;

        r3[0] = i2;

     label3:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d64wt9oqphauv3hp4axbg2ep3", "findlr");

        goto label6;

     label4:
        $r4 := @caughtexception;

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("d64wt9oqphauv3hp4axbg2ep3", "findlr");

        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void setbounds(h.ST_Agnode_s, int[], int[], int[])
    {
        int[] r0, r1, r9, r11, r13;
        h.ST_Agnode_s r2, $r10, $r12, $r18, $r23;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30;
        h.ST_elist $r3, $r4, $r14, $r19, $r24;
        smetana.core.CArrayOfStar $r5, $r15, $r20;
        java.lang.Object $r6, $r16, $r21;
        h.ST_Agedge_s $r7;
        boolean $z0, z1, z2;
        smetana.core.__ptr__ $r17, $r22;
        java.lang.AssertionError $r25;
        java.lang.Throwable $r26;

        r2 := @parameter0: h.ST_Agnode_s;

        r9 := @parameter1: int[];

        r11 := @parameter2: int[];

        r13 := @parameter3: int[];

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bwjjmaydx5a2fnpeoligkha0r", "setbounds");

     label01:
        r0 = newarray (int)[1];

        r1 = newarray (int)[1];

        $i0 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r2);

        if $i0 != 1 goto label15;

        i1 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r2);

        $r3 = staticinvoke <smetana.core.Macro: h.ST_elist ND_in(h.ST_Agnode_s)>(r2);

        $i2 = $r3.<h.ST_elist: int size>;

        if $i2 != 0 goto label09;

        $z0 = <gen.lib.dotgen.flat__c: boolean $assertionsDisabled>;

        if $z0 != 0 goto label02;

        $r24 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r2);

        $i27 = $r24.<h.ST_elist: int size>;

        if $i27 == 2 goto label02;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label02:
        $r14 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r2);

        $r15 = $r14.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r16 = virtualinvoke $r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r17 = (smetana.core.__ptr__) $r16;

        $r18 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r17);

        $r19 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r2);

        $r20 = $r19.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r21 = virtualinvoke $r20.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(1);

        $r22 = (smetana.core.__ptr__) $r21;

        $r23 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r22);

        staticinvoke <gen.lib.dotgen.flat__c: void findlr(h.ST_Agnode_s,h.ST_Agnode_s,int[],int[])>($r18, $r23, r0, r1);

        $i10 = r1[0];

        $i9 = r11[0];

        if $i10 > $i9 goto label03;

        r9[0] = i1;

        r9[2] = i1;

        goto label15;

     label03:
        $i12 = r0[0];

        $i11 = r13[0];

        if $i12 < $i11 goto label04;

        r9[1] = i1;

        r9[3] = i1;

        goto label15;

     label04:
        $i14 = r0[0];

        $i13 = r11[0];

        if $i14 >= $i13 goto label05;

        $i26 = r1[0];

        $i25 = r13[0];

        if $i26 <= $i25 goto label05;

        goto label15;

     label05:
        $i16 = r0[0];

        $i15 = r11[0];

        if $i16 < $i15 goto label06;

        $i22 = r0[0];

        $i21 = r11[0];

        if $i22 != $i21 goto label07;

        $i24 = r1[0];

        $i23 = r13[0];

        if $i24 >= $i23 goto label07;

     label06:
        r9[2] = i1;

     label07:
        $i28 = r1[0];

        $i29 = r13[0];

        if $i28 > $i29 goto label08;

        $i18 = r1[0];

        $i17 = r13[0];

        if $i18 != $i17 goto label15;

        $i20 = r0[0];

        $i19 = r11[0];

        if $i20 <= $i19 goto label15;

     label08:
        r9[3] = i1;

        goto label15;

     label09:
        z1 = 0;

        z2 = 0;

        i30 = 0;

     label10:
        $r4 = staticinvoke <smetana.core.Macro: h.ST_elist ND_out(h.ST_Agnode_s)>(r2);

        $r5 = $r4.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r6 = virtualinvoke $r5.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i30);

        $r7 = (h.ST_Agedge_s) $r6;

        if $r7 == null goto label13;

        $r10 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r7);

        $i5 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r10);

        $i6 = r11[0];

        if $i5 > $i6 goto label11;

        z2 = 1;

        goto label12;

     label11:
        $r12 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>($r7);

        $i7 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>($r12);

        $i8 = r13[0];

        if $i7 < $i8 goto label12;

        z1 = 1;

     label12:
        i30 = i30 + 1;

        goto label10;

     label13:
        if z2 == 0 goto label14;

        if z1 != 0 goto label14;

        $i4 = i1 + 1;

        r9[0] = $i4;

     label14:
        if z1 == 0 goto label15;

        if z2 != 0 goto label15;

        $i3 = i1 - 1;

        r9[1] = $i3;

     label15:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bwjjmaydx5a2fnpeoligkha0r", "setbounds");

        goto label18;

     label16:
        $r26 := @caughtexception;

     label17:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bwjjmaydx5a2fnpeoligkha0r", "setbounds");

        throw $r26;

     label18:
        return;

        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public static int flat_limits(h.ST_Agraph_s, h.ST_Agedge_s)
    {
        int[] r0, r1, r2;
        h.ST_Agedge_s r3;
        h.ST_Agnode_s $r4, $r13, $r14, $r16, $r18;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20, i21;
        h.ST_Agraph_s r5;
        smetana.core.CArray $r6, $r10;
        java.lang.Object $r7, $r11, $r15, $r17;
        h.ST_rank_t $r8, $r12;
        smetana.core.CArrayOfStar r9;
        java.lang.StringBuilder $r19, $r20, $r21;
        java.lang.String $r22;
        java.lang.Throwable $r23;

        r5 := @parameter0: h.ST_Agraph_s;

        r3 := @parameter1: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("3bc4otcsxj1dujj49ydbb19oa", "flat_limits");

     label1:
        r0 = newarray (int)[1];

        r1 = newarray (int)[1];

        r2 = newarray (int)[4];

        $r4 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r3);

        $i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r4);

        i1 = $i0 - 1;

        if i1 >= 0 goto label2;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flat_limits r=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r22);

     label2:
        $r6 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r5);

        $r7 = virtualinvoke $r6.<smetana.core.CArray: java.lang.Object get__(int)>(i1);

        $r8 = (h.ST_rank_t) $r7;

        r9 = $r8.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        i19 = 0;

        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r5);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i1);

        $r12 = (h.ST_rank_t) $r11;

        $i2 = $r12.<h.ST_rank_t: int n>;

        i20 = $i2 - 1;

        $i3 = 0 - 1;

        r2[2] = $i3;

        r2[0] = $i3;

        $i4 = i20 + 1;

        r2[3] = $i4;

        r2[1] = $i4;

        $r13 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r3);

        $r14 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r3);

        staticinvoke <gen.lib.dotgen.flat__c: void findlr(h.ST_Agnode_s,h.ST_Agnode_s,int[],int[])>($r13, $r14, r0, r1);

     label3:
        if i19 > i20 goto label5;

        $r15 = virtualinvoke r9.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i19);

        $r16 = (h.ST_Agnode_s) $r15;

        staticinvoke <gen.lib.dotgen.flat__c: void setbounds(h.ST_Agnode_s,int[],int[],int[])>($r16, r2, r0, r1);

        if i19 == i20 goto label4;

        $r17 = virtualinvoke r9.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i20);

        $r18 = (h.ST_Agnode_s) $r17;

        staticinvoke <gen.lib.dotgen.flat__c: void setbounds(h.ST_Agnode_s,int[],int[],int[])>($r18, r2, r0, r1);

     label4:
        i19 = i19 + 1;

        i20 = i20 + -1;

        $i17 = r2[1];

        $i16 = r2[0];

        $i18 = $i17 - $i16;

        if $i18 > 1 goto label3;

        goto label5;

     label5:
        $i6 = r2[0];

        $i5 = r2[1];

        if $i6 > $i5 goto label6;

        $i13 = r2[0];

        $i12 = r2[1];

        $i14 = $i13 + $i12;

        $i15 = $i14 + 1;

        i21 = $i15 / 2;

        goto label7;

     label6:
        $i8 = r2[2];

        $i7 = r2[3];

        $i9 = $i8 + $i7;

        $i10 = $i9 + 1;

        i21 = $i10 / 2;

     label7:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3bc4otcsxj1dujj49ydbb19oa", "flat_limits");

        return i21;

     label8:
        $r23 := @caughtexception;

     label9:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("3bc4otcsxj1dujj49ydbb19oa", "flat_limits");

        throw $r23;

        catch java.lang.Throwable from label1 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    public static void flat_node(h.ST_Agedge_s)
    {
        h.ST_pointf $r0, $r23, $r29, $r31, $r34, $r36, $r40, $r42, $r56;
        java.lang.StringBuilder $r2, $r3, $r6;
        h.ST_Agedge_s r4, r64, r65;
        java.lang.String $r5, $r7;
        h.ST_textlabel_t $r8, $r28, $r30;
        h.ST_Agnode_s $r9, $r11, $r17, r27, $r32, $r37, $r38, $r43, r63;
        h.ST_Agraph_s r10;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, $i9, $i11, $i12, $i13, i14;
        smetana.core.CArray $r12, $r18, $r24, $r44, $r47, $r50, $r53, $r57;
        java.lang.Object $r13, $r16, $r19, $r22, $r25, $r45, $r48, $r51, $r54, $r58;
        h.ST_rank_t $r14, $r20, $r26, $r46, $r49, $r52, $r55, $r59;
        smetana.core.CArrayOfStar $r15, $r21;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24, $d25, $d26, $d27, $d28;
        boolean $z0;
        h.ST_port $r33, $r35, $r39, $r41;
        byte $b8, $b10;
        java.lang.Throwable $r60;

        r4 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("4cw9yo9ap8ze1r873v6jat4yc", "flat_node");

     label01:
        $r0 = new h.ST_pointf;

        specialinvoke $r0.<h.ST_pointf: void <init>()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Flat node for ");

        $r5 = r4.<h.ST_Agedge_s: java.lang.String NAME>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r7);

        $r8 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r4);

        if $r8 != null goto label03;

     label02:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4cw9yo9ap8ze1r873v6jat4yc", "flat_node");

        return;

     label03:
        $r9 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r4);

        r10 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>($r9);

        $r11 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r4);

        i0 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r11);

        i1 = staticinvoke <gen.lib.dotgen.flat__c: int flat_limits(h.ST_Agraph_s,h.ST_Agedge_s)>(r10, r4);

        $r12 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r10);

        $i2 = i0 - 1;

        $r13 = virtualinvoke $r12.<smetana.core.CArray: java.lang.Object get__(int)>($i2);

        $r14 = (h.ST_rank_t) $r13;

        $r15 = $r14.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r16 = virtualinvoke $r15.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        $r17 = (h.ST_Agnode_s) $r16;

        if $r17 == null goto label04;

        $r56 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>($r17);

        $d26 = $r56.<h.ST_pointf: double y>;

        $r57 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r10);

        $i13 = i0 - 1;

        $r58 = virtualinvoke $r57.<smetana.core.CArray: java.lang.Object get__(int)>($i13);

        $r59 = (h.ST_rank_t) $r58;

        $d27 = $r59.<h.ST_rank_t: double ht1>;

        $d28 = $d26 - $d27;

        i14 = (int) $d28;

        goto label05;

     label04:
        $r18 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r10);

        $r19 = virtualinvoke $r18.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r20 = (h.ST_rank_t) $r19;

        $r21 = $r20.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r22 = virtualinvoke $r21.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(0);

        r63 = (h.ST_Agnode_s) $r22;

        $r23 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>(r63);

        $d0 = $r23.<h.ST_pointf: double y>;

        $r24 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r10);

        $r25 = virtualinvoke $r24.<smetana.core.CArray: java.lang.Object get__(int)>(i0);

        $r26 = (h.ST_rank_t) $r25;

        $d1 = $r26.<h.ST_rank_t: double ht2>;

        $d2 = $d0 + $d1;

        $i3 = staticinvoke <smetana.core.Macro: int GD_ranksep(h.ST_Agraph_s)>(r10);

        $d3 = (double) $i3;

        $d4 = $d2 + $d3;

        i14 = (int) $d4;

     label05:
        $i4 = i0 - 1;

        r27 = staticinvoke <gen.lib.dotgen.flat__c: h.ST_Agnode_s make_vn_slot(h.ST_Agraph_s,int,int)>(r10, $i4, i1);

        $r28 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r4);

        $r29 = $r28.<h.ST_textlabel_t: h.ST_pointf dimen>;

        virtualinvoke $r0.<h.ST_pointf: void ___(smetana.core.__struct__)>($r29);

        $z0 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r10);

        if $z0 == 0 goto label06;

        d24 = $r0.<h.ST_pointf: double x>;

        $d25 = $r0.<h.ST_pointf: double y>;

        $r0.<h.ST_pointf: double x> = $d25;

        $r0.<h.ST_pointf: double y> = d24;

     label06:
        $d5 = $r0.<h.ST_pointf: double y>;

        staticinvoke <smetana.core.Macro: void ND_ht(h.ST_Agnode_s,double)>(r27, $d5);

        $d6 = staticinvoke <smetana.core.Macro: double ND_ht(h.ST_Agnode_s)>(r27);

        $d7 = $d6 / 2.0;

        i5 = (int) $d7;

        $d8 = $r0.<h.ST_pointf: double x>;

        $d9 = $d8 / 2.0;

        staticinvoke <smetana.core.Macro: void ND_rw(h.ST_Agnode_s,double)>(r27, $d9);

        $d10 = $r0.<h.ST_pointf: double x>;

        $d11 = $d10 / 2.0;

        staticinvoke <smetana.core.Macro: void ND_lw(h.ST_Agnode_s,double)>(r27, $d11);

        $r30 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r4);

        staticinvoke <smetana.core.Macro: void ND_label(h.ST_Agnode_s,h.ST_textlabel_t)>(r27, $r30);

        $r31 = staticinvoke <smetana.core.Macro: h.ST_pointf ND_coord(h.ST_Agnode_s)>(r27);

        $i6 = i14 + i5;

        $d12 = (double) $i6;

        $r31.<h.ST_pointf: double y> = $d12;

        $r32 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r4);

        r64 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s virtual_edge(h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r27, $r32, r4);

        $r33 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r64);

        $r34 = $r33.<h.ST_port: h.ST_pointf p>;

        $d13 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>(r27);

        $d14 = neg $d13;

        $r34.<h.ST_pointf: double x> = $d14;

        $r35 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r64);

        $r36 = $r35.<h.ST_port: h.ST_pointf p>;

        $r37 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r4);

        $d15 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>($r37);

        $r36.<h.ST_pointf: double x> = $d15;

        staticinvoke <smetana.core.Macro: void ED_edge_type(h.ST_Agedge_s,int)>(r64, 4);

        $r38 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r4);

        r65 = staticinvoke <gen.lib.dotgen.fastgr__c: h.ST_Agedge_s virtual_edge(h.ST_Agnode_s,h.ST_Agnode_s,h.ST_Agedge_s)>(r27, $r38, r4);

        $r39 = staticinvoke <smetana.core.Macro: h.ST_port ED_tail_port(h.ST_Agedge_s)>(r65);

        $r40 = $r39.<h.ST_port: h.ST_pointf p>;

        $d16 = staticinvoke <smetana.core.Macro: double ND_rw(h.ST_Agnode_s)>(r27);

        $r40.<h.ST_pointf: double x> = $d16;

        $r41 = staticinvoke <smetana.core.Macro: h.ST_port ED_head_port(h.ST_Agedge_s)>(r65);

        $r42 = $r41.<h.ST_port: h.ST_pointf p>;

        $r43 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r4);

        $d17 = staticinvoke <smetana.core.Macro: double ND_lw(h.ST_Agnode_s)>($r43);

        $r42.<h.ST_pointf: double x> = $d17;

        staticinvoke <smetana.core.Macro: void ED_edge_type(h.ST_Agedge_s,int)>(r65, 4);

        $r44 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r10);

        $i7 = i0 - 1;

        $r45 = virtualinvoke $r44.<smetana.core.CArray: java.lang.Object get__(int)>($i7);

        $r46 = (h.ST_rank_t) $r45;

        $d19 = $r46.<h.ST_rank_t: double ht1>;

        $d18 = (double) i5;

        $b8 = $d19 cmpg $d18;

        if $b8 >= 0 goto label07;

        $r53 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r10);

        $i12 = i0 - 1;

        $r54 = virtualinvoke $r53.<smetana.core.CArray: java.lang.Object get__(int)>($i12);

        $r55 = (h.ST_rank_t) $r54;

        $d23 = (double) i5;

        $r55.<h.ST_rank_t: double ht1> = $d23;

     label07:
        $r47 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r10);

        $i9 = i0 - 1;

        $r48 = virtualinvoke $r47.<smetana.core.CArray: java.lang.Object get__(int)>($i9);

        $r49 = (h.ST_rank_t) $r48;

        $d21 = $r49.<h.ST_rank_t: double ht2>;

        $d20 = (double) i5;

        $b10 = $d21 cmpg $d20;

        if $b10 >= 0 goto label08;

        $r50 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r10);

        $i11 = i0 - 1;

        $r51 = virtualinvoke $r50.<smetana.core.CArray: java.lang.Object get__(int)>($i11);

        $r52 = (h.ST_rank_t) $r51;

        $d22 = (double) i5;

        $r52.<h.ST_rank_t: double ht2> = $d22;

     label08:
        staticinvoke <smetana.core.Macro: void ND_alg(h.ST_Agnode_s,h.ST_Agedge_s)>(r27, r4);

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4cw9yo9ap8ze1r873v6jat4yc", "flat_node");

        goto label12;

     label10:
        $r60 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("4cw9yo9ap8ze1r873v6jat4yc", "flat_node");

        throw $r60;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void abomination(h.ST_Agraph_s)
    {
        boolean $z0;
        h.ST_Agraph_s r0;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        smetana.core.CArray $r1, r2, $r3, $r4, $r7, $r10, $r14, $r17, $r21, $r24, $r27, $r30, $r33, $r36, $r39;
        java.lang.Object $r5, $r8, $r11, $r15, $r18, $r22, $r25, $r28, $r31, $r34, $r37, $r40;
        h.ST_rank_t $r6, $r9, $r12, $r16, $r19, $r23, $r26, $r29, $r32, $r35, $r38;
        smetana.core.CArrayOfStar $r13, $r20;
        smetana.core.__struct__ $r41;
        java.lang.AssertionError $r42;
        java.lang.Throwable $r43;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("1lopavodoru6ee52snd5l6swd", "abomination");

     label1:
        $z0 = <gen.lib.dotgen.flat__c: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i4 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        if $i4 == 0 goto label2;

        $r42 = new java.lang.AssertionError;

        specialinvoke $r42.<java.lang.AssertionError: void <init>()>();

        throw $r42;

     label2:
        $i0 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

        i5 = $i0 + 3;

        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        r2 = staticinvoke <smetana.core.CArray: smetana.core.CArray REALLOC__(int,smetana.core.CArray,java.lang.Class)>(i5, $r1, class "Lh/ST_rank_t;");

        $r3 = virtualinvoke r2.<smetana.core.CArray: smetana.core.CArray plus_(int)>(1);

        staticinvoke <smetana.core.Macro: void GD_rank(h.ST_Agraph_s,smetana.core.CArray)>(r0, $r3);

        i6 = staticinvoke <smetana.core.Macro: int GD_maxrank(h.ST_Agraph_s)>(r0);

     label3:
        if i6 < 0 goto label4;

        $r36 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r37 = virtualinvoke $r36.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r38 = (h.ST_rank_t) $r37;

        $r39 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $i3 = i6 - 1;

        $r40 = virtualinvoke $r39.<smetana.core.CArray: java.lang.Object get__(int)>($i3);

        $r41 = (smetana.core.__struct__) $r40;

        virtualinvoke $r38.<h.ST_rank_t: void ___(smetana.core.__struct__)>($r41);

        i6 = i6 + -1;

        goto label3;

     label4:
        $r4 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r5 = virtualinvoke $r4.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r6 = (h.ST_rank_t) $r5;

        $r6.<h.ST_rank_t: int n> = 0;

        $r7 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r8 = virtualinvoke $r7.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r9 = (h.ST_rank_t) $r8;

        $r9.<h.ST_rank_t: int an> = 0;

        $r10 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r11 = virtualinvoke $r10.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r12 = (h.ST_rank_t) $r11;

        $r13 = staticinvoke <smetana.core.CArrayOfStar: smetana.core.CArrayOfStar ALLOC(int,java.lang.Class)>(2, class "Lh/ST_Agnode_s;");

        $r12.<h.ST_rank_t: smetana.core.CArrayOfStar v> = $r13;

        $r14 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r15 = virtualinvoke $r14.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r16 = (h.ST_rank_t) $r15;

        $r17 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r18 = virtualinvoke $r17.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r19 = (h.ST_rank_t) $r18;

        $r20 = $r19.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r16.<h.ST_rank_t: smetana.core.CArrayOfStar av> = $r20;

        $r21 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r22 = virtualinvoke $r21.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r23 = (h.ST_rank_t) $r22;

        $r23.<h.ST_rank_t: h.ST_adjmatrix_t flat> = null;

        $r24 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r25 = virtualinvoke $r24.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r26 = (h.ST_rank_t) $r25;

        $r26.<h.ST_rank_t: double ht1> = 1.0;

        $r27 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r28 = virtualinvoke $r27.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r29 = (h.ST_rank_t) $r28;

        $r29.<h.ST_rank_t: double ht2> = 1.0;

        $r30 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r31 = virtualinvoke $r30.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r32 = (h.ST_rank_t) $r31;

        $r32.<h.ST_rank_t: double pht1> = 1.0;

        $r33 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r34 = virtualinvoke $r33.<smetana.core.CArray: java.lang.Object get__(int)>(i6);

        $r35 = (h.ST_rank_t) $r34;

        $r35.<h.ST_rank_t: double pht2> = 1.0;

        $i1 = staticinvoke <smetana.core.Macro: int GD_minrank(h.ST_Agraph_s)>(r0);

        $i2 = $i1 - 1;

        staticinvoke <smetana.core.Macro: void GD_minrank(h.ST_Agraph_s,int)>(r0, $i2);

     label5:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1lopavodoru6ee52snd5l6swd", "abomination");

        goto label7;

     label6:
        $r43 := @caughtexception;

        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("1lopavodoru6ee52snd5l6swd", "abomination");

        throw $r43;

     label7:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
    }

    public static void checkFlatAdjacent(h.ST_Agedge_s)
    {
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String $r2, $r4;
        h.ST_Agnode_s r5, r6, r14;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7;
        h.ST_Agraph_s $r7;
        smetana.core.CArray $r8, r9;
        java.lang.Object $r10, $r13;
        h.ST_rank_t $r11;
        smetana.core.CArrayOfStar $r12;
        h.ST_textlabel_t $r15;
        java.lang.Throwable $r16;
        h.ST_Agedge_s r18;

        r18 := @parameter0: h.ST_Agedge_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("ctujx6e8k3rzv08h6gswdcaqs", "checkFlatAdjacent");

     label01:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("checkFlatAdjacent ");

        $r2 = r18.<h.ST_Agedge_s: java.lang.String NAME>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r4);

        r5 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r18);

        r6 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r18);

        $i0 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r5);

        $i1 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r6);

        if $i0 >= $i1 goto label02;

        i5 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r5);

        i6 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r6);

        goto label03;

     label02:
        i5 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r6);

        i6 = staticinvoke <smetana.core.Macro: int ND_order(h.ST_Agnode_s)>(r5);

     label03:
        $r7 = staticinvoke <gen.lib.dotgen.dotinit__c: h.ST_Agraph_s dot_root(h.ST_Agobj_s)>(r5);

        $r8 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>($r7);

        $i2 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>(r5);

        r9 = virtualinvoke $r8.<smetana.core.CArray: smetana.core.CArray plus_(int)>($i2);

        i7 = i5 + 1;

     label04:
        if i7 >= i6 goto label07;

        $r10 = virtualinvoke r9.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r11 = (h.ST_rank_t) $r10;

        $r12 = $r11.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r13 = virtualinvoke $r12.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i7);

        r14 = (h.ST_Agnode_s) $r13;

        $i3 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r14);

        if $i3 != 1 goto label05;

        $r15 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ND_label(h.ST_Agnode_s)>(r14);

        if $r15 != null goto label07;

     label05:
        $i4 = staticinvoke <smetana.core.Macro: int ND_node_type(h.ST_Agnode_s)>(r14);

        if $i4 != 0 goto label06;

        goto label07;

     label06:
        i7 = i7 + 1;

        goto label04;

     label07:
        if i7 != i6 goto label09;

     label08:
        staticinvoke <smetana.core.Macro: void ED_adjacent(h.ST_Agedge_s,int)>(r18, 1);

        r18 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r18);

        if r18 != null goto label08;

     label09:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ctujx6e8k3rzv08h6gswdcaqs", "checkFlatAdjacent");

        goto label12;

     label10:
        $r16 := @caughtexception;

     label11:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("ctujx6e8k3rzv08h6gswdcaqs", "checkFlatAdjacent");

        throw $r16;

     label12:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static boolean flat_edges(h.ST_Agraph_s)
    {
        h.ST_Agraph_s r0;
        smetana.core.CArray $r1, $r81;
        java.lang.Object $r2, $r9, $r14, $r61, $r68, $r73, $r82, $r85;
        h.ST_rank_t $r3, $r83;
        h.ST_adjmatrix_t $r4;
        h.ST_elist $r5, $r7, $r11, $r12, $r59, $r64, $r66, $r71, $r79;
        smetana.core.CArrayOfStar $r6, $r8, $r13, $r60, $r65, $r67, $r72, $r84;
        h.ST_Agedge_s $r10, $r24, $r62, $r74, r80, r91, r92;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, $i14, i15, i16, i17, i18;
        java.lang.StringBuilder $r15, $r16, $r18, $r26, $r27, $r29, $r30, $r31, $r33, $r34, $r36, $r38, $r39, $r41, $r48, $r49, $r51, $r52, $r53;
        java.lang.String $r17, $r19, $r28, $r32, $r35, $r37, $r40, $r42, $r50, $r54;
        h.ST_Agnode_s $r20, $r21, $r22, $r23, $r69, $r70, r77, $r86, r89;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        h.ST_textlabel_t $r25, $r43, $r45, $r47, $r55, $r57, $r63;
        h.ST_pointf $r44, $r46, $r56, $r58;
        double $d0, $d1, $d2, $d3, d4;
        java.lang.Throwable $r75;

        r0 := @parameter0: h.ST_Agraph_s;

        staticinvoke <smetana.core.debug.SmetanaDebug: void ENTERING(java.lang.String,java.lang.String)>("bjwwj6ftkm0gv04cf1edqeaw6", "flat_edges");

     label01:
        z4 = 0;

        z5 = 0;

        r77 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label02:
        if r77 == null goto label08;

        $r64 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r77);

        $r65 = $r64.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r65 == null goto label04;

        i12 = 0;

     label03:
        $r71 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r77);

        $r72 = $r71.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r73 = virtualinvoke $r72.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i12);

        $r74 = (h.ST_Agedge_s) $r73;

        if $r74 == null goto label04;

        staticinvoke <gen.lib.dotgen.flat__c: void checkFlatAdjacent(h.ST_Agedge_s)>($r74);

        i12 = i12 + 1;

        goto label03;

     label04:
        i13 = 0;

     label05:
        $r79 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r77);

        $i14 = $r79.<h.ST_elist: int size>;

        if i13 >= $i14 goto label07;

        $r66 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r77);

        $r67 = $r66.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r68 = virtualinvoke $r67.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i13);

        r80 = (h.ST_Agedge_s) $r68;

        $r69 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r80);

        $i10 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r69);

        $r70 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r80);

        $i11 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r70);

        if $i10 != $i11 goto label06;

        staticinvoke <gen.lib.dotgen.flat__c: void checkFlatAdjacent(h.ST_Agedge_s)>(r80);

     label06:
        i13 = i13 + 1;

        goto label05;

     label07:
        r77 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r77);

        goto label02;

     label08:
        $r1 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r2 = virtualinvoke $r1.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r3 = (h.ST_rank_t) $r2;

        $r4 = $r3.<h.ST_rank_t: h.ST_adjmatrix_t flat>;

        if $r4 != null goto label09;

        $i9 = staticinvoke <smetana.core.Macro: int GD_n_cluster(h.ST_Agraph_s)>(r0);

        if $i9 <= 0 goto label15;

     label09:
        i15 = 0;

     label10:
        $r81 = staticinvoke <smetana.core.Macro: smetana.core.CArray GD_rank(h.ST_Agraph_s)>(r0);

        $r82 = virtualinvoke $r81.<smetana.core.CArray: java.lang.Object get__(int)>(0);

        $r83 = (h.ST_rank_t) $r82;

        $r84 = $r83.<h.ST_rank_t: smetana.core.CArrayOfStar v>;

        $r85 = virtualinvoke $r84.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i15);

        $r86 = (h.ST_Agnode_s) $r85;

        if $r86 == null goto label15;

        i16 = 0;

     label11:
        $r59 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_in(h.ST_Agnode_s)>($r86);

        $r60 = $r59.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r61 = virtualinvoke $r60.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i16);

        $r62 = (h.ST_Agedge_s) $r61;

        if $r62 == null goto label13;

        $r63 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>($r62);

        if $r63 == null goto label12;

        $i8 = staticinvoke <smetana.core.Macro: int ED_adjacent(h.ST_Agedge_s)>($r62);

        $z3 = staticinvoke <smetana.core.Macro: boolean N(int)>($i8);

        if $z3 == 0 goto label12;

        staticinvoke <gen.lib.dotgen.flat__c: void abomination(h.ST_Agraph_s)>(r0);

        z5 = 1;

        goto label13;

     label12:
        i16 = i16 + 1;

        goto label11;

     label13:
        if z5 == 0 goto label14;

        goto label15;

     label14:
        i15 = i15 + 1;

        goto label10;

     label15:
        staticinvoke <gen.lib.dotgen.mincross__c: void rec_save_vlists(h.ST_Agraph_s)>(r0);

        r89 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s GD_nlist(h.ST_Agraph_s)>(r0);

     label16:
        if r89 == null goto label32;

        $r5 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r89);

        $r6 = $r5.<h.ST_elist: smetana.core.CArrayOfStar list>;

        if $r6 == null goto label31;

        i17 = 0;

     label17:
        $r7 = staticinvoke <smetana.core.Macro: h.ST_elist ND_flat_out(h.ST_Agnode_s)>(r89);

        $r8 = $r7.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r9 = virtualinvoke $r8.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i17);

        $r10 = (h.ST_Agedge_s) $r9;

        if $r10 == null goto label21;

        $r47 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>($r10);

        if $r47 == null goto label20;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Aie1 for ");

        $r50 = $r10.<h.ST_Agedge_s: java.lang.String NAME>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i6 = staticinvoke <smetana.core.Macro: int ED_adjacent(h.ST_Agedge_s)>($r10);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r54);

        $i7 = staticinvoke <smetana.core.Macro: int ED_adjacent(h.ST_Agedge_s)>($r10);

        if $i7 == 0 goto label19;

        $z2 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r0);

        if $z2 == 0 goto label18;

        $r57 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>($r10);

        $r58 = $r57.<h.ST_textlabel_t: h.ST_pointf dimen>;

        $d3 = $r58.<h.ST_pointf: double y>;

        staticinvoke <smetana.core.Macro: void ED_dist(h.ST_Agedge_s,double)>($r10, $d3);

        goto label20;

     label18:
        $r55 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>($r10);

        $r56 = $r55.<h.ST_textlabel_t: h.ST_pointf dimen>;

        $d2 = $r56.<h.ST_pointf: double x>;

        staticinvoke <smetana.core.Macro: void ED_dist(h.ST_Agedge_s,double)>($r10, $d2);

        goto label20;

     label19:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>("reset1 true");

        z4 = 1;

        staticinvoke <gen.lib.dotgen.flat__c: void flat_node(h.ST_Agedge_s)>($r10);

     label20:
        i17 = i17 + 1;

        goto label17;

     label21:
        i18 = 0;

     label22:
        $r11 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r89);

        $i0 = $r11.<h.ST_elist: int size>;

        if i18 >= $i0 goto label31;

        $r12 = staticinvoke <smetana.core.Macro: h.ST_elist ND_other(h.ST_Agnode_s)>(r89);

        $r13 = $r12.<h.ST_elist: smetana.core.CArrayOfStar list>;

        $r14 = virtualinvoke $r13.<smetana.core.CArrayOfStar: java.lang.Object get_(int)>(i18);

        r91 = (h.ST_Agedge_s) $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("e=");

        $r17 = r91.<h.ST_Agedge_s: java.lang.String NAME>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r19);

        $r20 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r91);

        $i1 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r20);

        $r21 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r91);

        $i2 = staticinvoke <smetana.core.Macro: int ND_rank(h.ST_Agnode_s)>($r21);

        if $i1 == $i2 goto label23;

        goto label30;

     label23:
        $r22 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s agtail(h.ST_Agedge_s)>(r91);

        $r23 = staticinvoke <gen.lib.cgraph.edge__c: h.ST_Agnode_s aghead(smetana.core.__ptr__)>(r91);

        $z0 = staticinvoke <smetana.core.JUtils: boolean EQ(java.lang.Object,java.lang.Object)>($r22, $r23);

        if $z0 == 0 goto label24;

        goto label30;

     label24:
        r92 = r91;

     label25:
        $r24 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r92);

        if $r24 == null goto label26;

        r92 = staticinvoke <smetana.core.Macro: h.ST_Agedge_s ED_to_virt(h.ST_Agedge_s)>(r92);

        goto label25;

     label26:
        $i3 = staticinvoke <smetana.core.Macro: int ED_adjacent(h.ST_Agedge_s)>(r92);

        staticinvoke <smetana.core.Macro: void ED_adjacent(h.ST_Agedge_s,int)>(r91, $i3);

        $r25 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r91);

        if $r25 == null goto label30;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Aie2 for ");

        $r28 = r91.<h.ST_Agedge_s: java.lang.String NAME>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i4 = staticinvoke <smetana.core.Macro: int ED_adjacent(h.ST_Agedge_s)>(r91);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("e2=");

        $r35 = r92.<h.ST_Agedge_s: java.lang.String NAME>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("le2=");

        $r40 = r92.<h.ST_Agedge_s: java.lang.String NAME>;

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>($r42);

        $i5 = staticinvoke <smetana.core.Macro: int ED_adjacent(h.ST_Agedge_s)>(r91);

        if $i5 == 0 goto label29;

        $z1 = staticinvoke <smetana.core.Macro: boolean GD_flip(h.ST_Agraph_s)>(r0);

        if $z1 == 0 goto label27;

        $r45 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r91);

        $r46 = $r45.<h.ST_textlabel_t: h.ST_pointf dimen>;

        d4 = $r46.<h.ST_pointf: double y>;

        goto label28;

     label27:
        $r43 = staticinvoke <smetana.core.Macro: h.ST_textlabel_t ED_label(h.ST_Agedge_s)>(r91);

        $r44 = $r43.<h.ST_textlabel_t: h.ST_pointf dimen>;

        d4 = $r44.<h.ST_pointf: double x>;

     label28:
        $d0 = staticinvoke <smetana.core.Macro: double ED_dist(h.ST_Agedge_s)>(r92);

        $d1 = staticinvoke <smetana.core.Macro: double MAX(double,double)>(d4, $d0);

        staticinvoke <smetana.core.Macro: void ED_dist(h.ST_Agedge_s,double)>(r92, $d1);

        goto label30;

     label29:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LOG(java.lang.String)>("reset2 true");

        z4 = 1;

        staticinvoke <gen.lib.dotgen.flat__c: void flat_node(h.ST_Agedge_s)>(r91);

     label30:
        i18 = i18 + 1;

        goto label22;

     label31:
        r89 = staticinvoke <smetana.core.Macro: h.ST_Agnode_s ND_next(h.ST_Agnode_s)>(r89);

        goto label16;

     label32:
        if z4 == 0 goto label33;

        staticinvoke <gen.lib.dotgen.mincross__c: void rec_reset_vlists(h.ST_Agraph_s)>(r0);

     label33:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bjwwj6ftkm0gv04cf1edqeaw6", "flat_edges");

        return z4;

     label34:
        $r75 := @caughtexception;

     label35:
        staticinvoke <smetana.core.debug.SmetanaDebug: void LEAVING(java.lang.String,java.lang.String)>("bjwwj6ftkm0gv04cf1edqeaw6", "flat_edges");

        throw $r75;

        catch java.lang.Throwable from label01 to label33 with label34;
        catch java.lang.Throwable from label34 to label35 with label34;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <gen.lib.dotgen.flat__c: int SRB> = 3;

        <gen.lib.dotgen.flat__c: int SLB> = 2;

        <gen.lib.dotgen.flat__c: int HRB> = 1;

        <gen.lib.dotgen.flat__c: int HLB> = 0;

        $r0 = class "Lgen/lib/dotgen/flat__c;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <gen.lib.dotgen.flat__c: boolean $assertionsDisabled> = $z1;

        return;
    }
}
