final enum class net.sourceforge.plantuml.jasic.Jasic$TokenizeState extends java.lang.Enum
{
    public static final enum net.sourceforge.plantuml.jasic.Jasic$TokenizeState DEFAULT;
    public static final enum net.sourceforge.plantuml.jasic.Jasic$TokenizeState WORD;
    public static final enum net.sourceforge.plantuml.jasic.Jasic$TokenizeState NUMBER;
    public static final enum net.sourceforge.plantuml.jasic.Jasic$TokenizeState STRING;
    public static final enum net.sourceforge.plantuml.jasic.Jasic$TokenizeState COMMENT;
    private static final net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] $VALUES;

    public static net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] values()
    {
        net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (net.sourceforge.plantuml.jasic.Jasic$TokenizeState[]) $r1;

        return $r2;
    }

    public static net.sourceforge.plantuml.jasic.Jasic$TokenizeState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        net.sourceforge.plantuml.jasic.Jasic$TokenizeState $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lnet/sourceforge/plantuml/jasic/Jasic$TokenizeState;", r0);

        $r2 = (net.sourceforge.plantuml.jasic.Jasic$TokenizeState) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        net.sourceforge.plantuml.jasic.Jasic$TokenizeState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: net.sourceforge.plantuml.jasic.Jasic$TokenizeState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    private static net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] $values()
    {
        net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] $r0;
        net.sourceforge.plantuml.jasic.Jasic$TokenizeState $r1, $r2, $r3, $r4, $r5;

        $r0 = newarray (net.sourceforge.plantuml.jasic.Jasic$TokenizeState)[5];

        $r1 = <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState DEFAULT>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState WORD>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState NUMBER>;

        $r0[2] = $r3;

        $r4 = <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState STRING>;

        $r0[3] = $r4;

        $r5 = <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState COMMENT>;

        $r0[4] = $r5;

        return $r0;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.jasic.Jasic$TokenizeState $r0, $r1, $r2, $r3, $r4;
        net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] $r5;

        $r0 = new net.sourceforge.plantuml.jasic.Jasic$TokenizeState;

        specialinvoke $r0.<net.sourceforge.plantuml.jasic.Jasic$TokenizeState: void <init>(java.lang.String,int)>("DEFAULT", 0);

        <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState DEFAULT> = $r0;

        $r1 = new net.sourceforge.plantuml.jasic.Jasic$TokenizeState;

        specialinvoke $r1.<net.sourceforge.plantuml.jasic.Jasic$TokenizeState: void <init>(java.lang.String,int)>("WORD", 1);

        <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState WORD> = $r1;

        $r2 = new net.sourceforge.plantuml.jasic.Jasic$TokenizeState;

        specialinvoke $r2.<net.sourceforge.plantuml.jasic.Jasic$TokenizeState: void <init>(java.lang.String,int)>("NUMBER", 2);

        <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState NUMBER> = $r2;

        $r3 = new net.sourceforge.plantuml.jasic.Jasic$TokenizeState;

        specialinvoke $r3.<net.sourceforge.plantuml.jasic.Jasic$TokenizeState: void <init>(java.lang.String,int)>("STRING", 3);

        <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState STRING> = $r3;

        $r4 = new net.sourceforge.plantuml.jasic.Jasic$TokenizeState;

        specialinvoke $r4.<net.sourceforge.plantuml.jasic.Jasic$TokenizeState: void <init>(java.lang.String,int)>("COMMENT", 4);

        <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState COMMENT> = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] $values()>();

        <net.sourceforge.plantuml.jasic.Jasic$TokenizeState: net.sourceforge.plantuml.jasic.Jasic$TokenizeState[] $VALUES> = $r5;

        return;
    }
}
