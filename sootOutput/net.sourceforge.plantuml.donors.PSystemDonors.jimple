public class net.sourceforge.plantuml.donors.PSystemDonors extends net.sourceforge.plantuml.PlainDiagram
{
    private static final int COLS;
    private static final int FREE_LINES;
    public static final java.lang.String DONORS;

    public void <init>(net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.donors.PSystemDonors r0;
        net.sourceforge.plantuml.core.UmlSource r1;

        r0 := @this: net.sourceforge.plantuml.donors.PSystemDonors;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        specialinvoke r0.<net.sourceforge.plantuml.PlainDiagram: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        return;
    }

    protected net.sourceforge.plantuml.graphic.UDrawable getRootDrawable(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.donors.PSystemDonors r0;
        java.util.List $r1, r2;
        net.sourceforge.plantuml.donors.PSystemDonors$1 $r3;
        net.sourceforge.plantuml.FileFormatOption r4;

        r0 := @this: net.sourceforge.plantuml.donors.PSystemDonors;

        r4 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.donors.PSystemDonors: java.util.List getDonors()>();

        r2 = staticinvoke <net.sourceforge.plantuml.donors.PSystemDonors: java.util.List getCols(java.util.List,int,int)>($r1, 6, 6);

        $r3 = new net.sourceforge.plantuml.donors.PSystemDonors$1;

        specialinvoke $r3.<net.sourceforge.plantuml.donors.PSystemDonors$1: void <init>(net.sourceforge.plantuml.donors.PSystemDonors,java.util.List)>(r0, r2);

        return $r3;
    }

    public static java.util.List getCols(java.util.List, int, int) throws java.io.IOException
    {
        java.util.ArrayList $r0;
        java.util.List r2, r3;
        int $i0, i1, $i2, i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, i11;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r4;

        r2 := @parameter0: java.util.List;

        i1 := @parameter1: int;

        i3 := @parameter2: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $i2 = i1 - 1;

        $i4 = $i0 + $i2;

        $i5 = $i4 + i3;

        i6 = $i5 / i1;

        i11 = 0;

     label1:
        $i7 = interfaceinvoke r2.<java.util.List: int size()>();

        if i11 >= $i7 goto label2;

        $i8 = interfaceinvoke r2.<java.util.List: int size()>();

        $i9 = i11 + i6;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i9);

        r3 = interfaceinvoke r2.<java.util.List: java.util.List subList(int,int)>(i11, $i10);

        $r4 = staticinvoke <net.sourceforge.plantuml.graphic.GraphicStrings: net.sourceforge.plantuml.svek.TextBlockBackcolored createBlackOnWhite(java.util.List)>(r3);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r4);

        i11 = i11 + i6;

        goto label1;

     label2:
        return $r0;
    }

    private java.util.List getDonors() throws java.io.IOException
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.code.AsciiEncoder $r2;
        net.sourceforge.plantuml.code.StringCompressorNone $r3;
        net.sourceforge.plantuml.code.CompressionBrotli $r4;
        net.sourceforge.plantuml.code.Transcoder r5;
        java.lang.String $r6, $r9, r12;
        java.util.StringTokenizer $r7;
        boolean $z0;
        net.sourceforge.plantuml.code.NoPlantumlCompressionException $r10;
        net.sourceforge.plantuml.donors.PSystemDonors r11;

        r11 := @this: net.sourceforge.plantuml.donors.PSystemDonors;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = new net.sourceforge.plantuml.code.AsciiEncoder;

        specialinvoke $r2.<net.sourceforge.plantuml.code.AsciiEncoder: void <init>()>();

        $r3 = new net.sourceforge.plantuml.code.StringCompressorNone;

        specialinvoke $r3.<net.sourceforge.plantuml.code.StringCompressorNone: void <init>()>();

        $r4 = new net.sourceforge.plantuml.code.CompressionBrotli;

        specialinvoke $r4.<net.sourceforge.plantuml.code.CompressionBrotli: void <init>()>();

        r5 = staticinvoke <net.sourceforge.plantuml.code.TranscoderImpl: net.sourceforge.plantuml.code.Transcoder utf8(net.sourceforge.plantuml.code.URLEncoder,net.sourceforge.plantuml.code.StringCompressor,net.sourceforge.plantuml.code.Compression)>($r2, $r3, $r4);

     label1:
        $r6 = interfaceinvoke r5.<net.sourceforge.plantuml.code.Transcoder: java.lang.String decode(java.lang.String)>("6t4E03mSS7Dt1Og5J5Uh3hcJits4ZufNcNRmsK-DFu8Mfx004WGrllMtt9JI0K46z1ewUipjEptkDz9VH5UwzqqpHgtN9kKCeleWw07lRWljG-b_VH3cB7aHt9aIN40AYEBeOlcHRkGuVL9bI2baDAVOxcLYNg-GIYa-V-KZz1F8fg3pd6aKYPeNE3rg-odslkRdrrnTGomKo_C49L3IPKAwwSFSckbxFssauoVm-wH15OkYBTsMh94s7MFUrxK07TEkrN8c7qrgLiMugaYnZauQLf5CQCl5v7FaHPyq_gWtuIFgaI4PTGLqbjNHzNDlNzyJyoyNVSJ957n3KGCZO3soDj7YFFIWOUA0eMKNnTYgmf4dwP38WnRouH-5AOoKd5q6Dmsp1a1OlGCLH79GcnhETXm6L9bYYxuGRhhKtrWwxyjAgK9N6fv9RCnCr0Ah58aDkg4xSzs-cger0XoHdXAriFKed-FOIp-iw9jUIWJhQ-kqBC5VKSekfQRZzftgTvyIm17IyfqFOufGJg0fWocKyMi56LUXkzQ2BJgkSh2G1b4VjxZfm-R6GoiY79Cf5MeTlupjL2lyeSiMR4p2as1nlwTzARM0Gqssgj82-4AhaXuxNq0o5BmSzFYEl-yThgcK96z8j17EaFJRysn7CnO2T6mPiw6RAR0OTrdLMsn1X7gKZWxGMaW6uMnkbxtP1-aZFm7m5XAYsstYQ0T_VcdAr96BD97GJMci05QVLjHDm-8H36er5TsCAS7qDivnfLjZ7okELSkYJPwt6eo9twZJ51lBPIeotR1I3sykVCUsbtOfxfCnU7MxJ_Qw2cWfzvvouzulCX3dQZ9GAJBTyUvllcMPGLZCuf_h5PIUDNjoyz2TmNOMYvOnivMfXwm01eUILEiZqLX2ZFIsGxR0hute4K1-ZICbU9YH1wyVIwwfvfY6oIQBwDaYHBQrUSNUsPNpW3qlVv8ZeqJAnLUFGa9-nyOYebNMHcd3vdnNu1btYgAyd7VFgYVuLmrJ5r2TAWg2qeArIaBxwlK06RftrhFKaZZZ5ISMbBqk1uO4fLUYQEl13O0fD3D4yC304s4WAsMNDZ4YyDqVTvldBdMenzy-xM8S8jqb2L05X5DUK4qqM4U48-ij_l-vTuET-FD_hMcJKxkzzps4q1D8242u5neoBW0XdW9V7pRC0Pp2aX2T95ovQkrv88h1JiPW5tNxCgDoutUMcv6Rrbu_LEMfAKM5atuW-qKmQAzpIPNkGz2fx77V-KQuoC7O_YMgp4fnxogZxPMHy4aeulYEqyi1pLWOe0Phe8u2_-x-h2pKDDP-HL9vE03vPaDIgPckHTMMriP6OAESsDzRirFEpC_Am3wxrONpgXxQ9Ybkf1XH-DOfBiy84pE9f8a8Ta_9YGSZVED1lgWMIs9fMxkTCLWX_sC_XZSI3jaX3JJgCQKytO0SjadtiLMWFuZt41x8mcATxYmMIoKyaY8fdAjO9ZAaJxGPv_O6CIWAn__t5fGhJ3G_eTcbTdQIkNHhDoaWyg7-pf9Qv6ojoC2-g-QopSjp-zOc4-pO_y2Fdsz_LDry4m4uegiIl6utyk765jKLR45viuJxk2pMpUINSIdQ9Qg1pVlEHWsm6Iga98A81w12U8txDVq9Myu5yktrbxamKiFpU3NqpAUx0ol8DXfU9GsgNcHnR7s_vIRl7CYSU6nmOPMnqyES7YqprBQRDbl8e9AuSyLOps1sZv8gdygOLChGL8qDDKjYwxAp7Ps1yItaYlMzVMjZXfJw1VEPu1H3JKal3MG20Lb4Ke21v2hPhrfnXepCj4gynSfMqZ3LJMfej1iiYZjBMs7pORCrtdviIo40");

        r12 = virtualinvoke $r6.<java.lang.String: java.lang.String replace(char,char)>(42, 46);

        $r7 = new java.util.StringTokenizer;

        specialinvoke $r7.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r12, "\n");

     label2:
        $z0 = virtualinvoke $r7.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r9 = virtualinvoke $r7.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label2;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        virtualinvoke $r10.<net.sourceforge.plantuml.code.NoPlantumlCompressionException: void printStackTrace()>();

     label5:
        return $r0;

        catch net.sourceforge.plantuml.code.NoPlantumlCompressionException from label1 to label3 with label4;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.donors.PSystemDonors r1;

        r1 := @this: net.sourceforge.plantuml.donors.PSystemDonors;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Donors)");

        return $r0;
    }

    public static net.sourceforge.plantuml.donors.PSystemDonors create(net.sourceforge.plantuml.core.UmlSource)
    {
        net.sourceforge.plantuml.donors.PSystemDonors $r0;
        net.sourceforge.plantuml.core.UmlSource r1;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        $r0 = new net.sourceforge.plantuml.donors.PSystemDonors;

        specialinvoke $r0.<net.sourceforge.plantuml.donors.PSystemDonors: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        return $r0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.donors.PSystemDonors: java.lang.String DONORS> = "6t4E03mSS7Dt1Og5J5Uh3hcJits4ZufNcNRmsK-DFu8Mfx004WGrllMtt9JI0K46z1ewUipjEptkDz9VH5UwzqqpHgtN9kKCeleWw07lRWljG-b_VH3cB7aHt9aIN40AYEBeOlcHRkGuVL9bI2baDAVOxcLYNg-GIYa-V-KZz1F8fg3pd6aKYPeNE3rg-odslkRdrrnTGomKo_C49L3IPKAwwSFSckbxFssauoVm-wH15OkYBTsMh94s7MFUrxK07TEkrN8c7qrgLiMugaYnZauQLf5CQCl5v7FaHPyq_gWtuIFgaI4PTGLqbjNHzNDlNzyJyoyNVSJ957n3KGCZO3soDj7YFFIWOUA0eMKNnTYgmf4dwP38WnRouH-5AOoKd5q6Dmsp1a1OlGCLH79GcnhETXm6L9bYYxuGRhhKtrWwxyjAgK9N6fv9RCnCr0Ah58aDkg4xSzs-cger0XoHdXAriFKed-FOIp-iw9jUIWJhQ-kqBC5VKSekfQRZzftgTvyIm17IyfqFOufGJg0fWocKyMi56LUXkzQ2BJgkSh2G1b4VjxZfm-R6GoiY79Cf5MeTlupjL2lyeSiMR4p2as1nlwTzARM0Gqssgj82-4AhaXuxNq0o5BmSzFYEl-yThgcK96z8j17EaFJRysn7CnO2T6mPiw6RAR0OTrdLMsn1X7gKZWxGMaW6uMnkbxtP1-aZFm7m5XAYsstYQ0T_VcdAr96BD97GJMci05QVLjHDm-8H36er5TsCAS7qDivnfLjZ7okELSkYJPwt6eo9twZJ51lBPIeotR1I3sykVCUsbtOfxfCnU7MxJ_Qw2cWfzvvouzulCX3dQZ9GAJBTyUvllcMPGLZCuf_h5PIUDNjoyz2TmNOMYvOnivMfXwm01eUILEiZqLX2ZFIsGxR0hute4K1-ZICbU9YH1wyVIwwfvfY6oIQBwDaYHBQrUSNUsPNpW3qlVv8ZeqJAnLUFGa9-nyOYebNMHcd3vdnNu1btYgAyd7VFgYVuLmrJ5r2TAWg2qeArIaBxwlK06RftrhFKaZZZ5ISMbBqk1uO4fLUYQEl13O0fD3D4yC304s4WAsMNDZ4YyDqVTvldBdMenzy-xM8S8jqb2L05X5DUK4qqM4U48-ij_l-vTuET-FD_hMcJKxkzzps4q1D8242u5neoBW0XdW9V7pRC0Pp2aX2T95ovQkrv88h1JiPW5tNxCgDoutUMcv6Rrbu_LEMfAKM5atuW-qKmQAzpIPNkGz2fx77V-KQuoC7O_YMgp4fnxogZxPMHy4aeulYEqyi1pLWOe0Phe8u2_-x-h2pKDDP-HL9vE03vPaDIgPckHTMMriP6OAESsDzRirFEpC_Am3wxrONpgXxQ9Ybkf1XH-DOfBiy84pE9f8a8Ta_9YGSZVED1lgWMIs9fMxkTCLWX_sC_XZSI3jaX3JJgCQKytO0SjadtiLMWFuZt41x8mcATxYmMIoKyaY8fdAjO9ZAaJxGPv_O6CIWAn__t5fGhJ3G_eTcbTdQIkNHhDoaWyg7-pf9Qv6ojoC2-g-QopSjp-zOc4-pO_y2Fdsz_LDry4m4uegiIl6utyk765jKLR45viuJxk2pMpUINSIdQ9Qg1pVlEHWsm6Iga98A81w12U8txDVq9Myu5yktrbxamKiFpU3NqpAUx0ol8DXfU9GsgNcHnR7s_vIRl7CYSU6nmOPMnqyES7YqprBQRDbl8e9AuSyLOps1sZv8gdygOLChGL8qDDKjYwxAp7Ps1yItaYlMzVMjZXfJw1VEPu1H3JKal3MG20Lb4Ke21v2hPhrfnXepCj4gynSfMqZ3LJMfej1iiYZjBMs7pORCrtdviIo40";

        <net.sourceforge.plantuml.donors.PSystemDonors: int FREE_LINES> = 6;

        <net.sourceforge.plantuml.donors.PSystemDonors: int COLS> = 6;

        return;
    }
}
