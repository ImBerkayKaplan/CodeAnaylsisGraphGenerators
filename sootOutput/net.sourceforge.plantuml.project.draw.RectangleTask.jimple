public class net.sourceforge.plantuml.project.draw.RectangleTask extends java.lang.Object
{
    private final java.util.List segments;
    private final double round;
    private final int completion;
    static final boolean $assertionsDisabled;

    public void <init>(double, double, double, int, java.util.Collection)
    {
        net.sourceforge.plantuml.project.draw.RectangleTask r0;
        double d0, d1, d2, $d3;
        int i0;
        byte $b1;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment $r1, $r4;
        java.util.List $r2;
        java.util.ArrayList $r3;
        java.util.Collection r5, $r6;

        r0 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        d1 := @parameter0: double;

        d2 := @parameter1: double;

        d0 := @parameter2: double;

        i0 := @parameter3: int;

        r5 := @parameter4: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round> = d0;

        r0.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion> = i0;

        $b1 = d1 cmpg d2;

        if $b1 >= 0 goto label1;

        $r3 = new java.util.ArrayList;

        $r4 = new net.sourceforge.plantuml.sequencediagram.graphic.Segment;

        specialinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: void <init>(double,double)>(d1, d2);

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: java.util.Collection cutSegmentIfNeed(java.util.Collection)>(r5);

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r6);

        r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments> = $r3;

        goto label2;

     label1:
        $r1 = new net.sourceforge.plantuml.sequencediagram.graphic.Segment;

        $d3 = d1 + 1.0;

        specialinvoke $r1.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: void <init>(double,double)>(d1, $d3);

        $r2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r1);

        r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments> = $r2;

     label2:
        return;
    }

    private void draw2hlines(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.ugraphic.ULine)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r3;
        net.sourceforge.plantuml.ugraphic.ULine r1;
        double d0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.project.draw.RectangleTask r4;

        r4 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.ugraphic.ULine;

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r1);

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d0);

        $r3 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r1);

        return;
    }

    private void drawRect(double, net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.color.HColor, double, double)
    {
        double d0, d1, d2, $d3;
        byte $b0, $b1, $b2;
        net.sourceforge.plantuml.ugraphic.URectangle $r0, $r3, $r4;
        net.sourceforge.plantuml.ugraphic.color.HColor r1;
        net.sourceforge.plantuml.ugraphic.UBackground $r2, $r6;
        net.sourceforge.plantuml.ugraphic.UGraphic $r7, $r9, r11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        net.sourceforge.plantuml.project.draw.RectangleTask r10;

        r10 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        d0 := @parameter0: double;

        r11 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        d1 := @parameter3: double;

        d2 := @parameter4: double;

        $b0 = d0 cmpl -1.0;

        if $b0 == 0 goto label1;

        $b2 = d0 cmpl 0.0;

        if $b2 != 0 goto label3;

     label1:
        $b1 = d0 cmpl 0.0;

        if $b1 != 0 goto label2;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r11 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

     label2:
        $r0 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d1, d2);

        interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        goto label4;

     label3:
        $r3 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d0, d2);

        interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r3);

        $r4 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d3 = d1 - d0;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d3, d2);

        $r6 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r7 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d0);

        $r9 = interfaceinvoke $r7.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

     label4:
        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.ugraphic.color.HColor, boolean, boolean)
    {
        net.sourceforge.plantuml.project.draw.RectangleTask r0;
        double $d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        byte $b0, $b8;
        java.util.List $r1, $r2, $r35;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        boolean $z0, $z1, z2, z3;
        java.lang.Object $r3;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment r4;
        net.sourceforge.plantuml.ugraphic.URectangle $r5, r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r7, $r9, $r12, $r19, $r26, $r32;
        net.sourceforge.plantuml.ugraphic.UGraphic $r8, $r10, $r13, $r18, $r20, $r23, $r25, $r27, $r31, $r33, r37;
        net.sourceforge.plantuml.ugraphic.UPath $r11, $r14, $r21, $r28;
        net.sourceforge.plantuml.ugraphic.color.HColor r15;
        net.sourceforge.plantuml.ugraphic.UBackground $r16, $r22, $r30;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r17, $r24, $r29;
        java.lang.AssertionError $r34, $r36;

        r0 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        r37 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d2 := @parameter1: double;

        r15 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        $d0 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label01;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.RectangleTask: void drawWithoutRound(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.ugraphic.color.HColor,boolean,boolean)>(r37, d2, r15, z2, z3);

        return;

     label01:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 == 1 goto label02;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.RectangleTask: void drawWithRound(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r37, d2, r15);

        return;

     label02:
        $z0 = <net.sourceforge.plantuml.project.draw.RectangleTask: boolean $assertionsDisabled>;

        if $z0 != 0 goto label03;

        $r35 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i9 = interfaceinvoke $r35.<java.util.List: int size()>();

        if $i9 == 1 goto label03;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label03:
        $z1 = <net.sourceforge.plantuml.project.draw.RectangleTask: boolean $assertionsDisabled>;

        if $z1 != 0 goto label04;

        $d21 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        $b8 = $d21 cmpl 0.0;

        if $b8 > 0 goto label04;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label04:
        $r2 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (net.sourceforge.plantuml.sequencediagram.graphic.Segment) $r3;

        d1 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        $r5 = new net.sourceforge.plantuml.ugraphic.URectangle;

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>(d1, d2);

        $d3 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle rounded(double)>($d3);

        $i2 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion>;

        if $i2 == 100 goto label05;

        $i4 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion>;

        if $i4 != 0 goto label09;

     label05:
        $i3 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion>;

        if $i3 != 0 goto label06;

        $r16 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        r37 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r16);

     label06:
        if z2 == 0 goto label07;

        if z3 != 0 goto label07;

        $d7 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d7);

        $r13 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $d8 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        $r14 = staticinvoke <net.sourceforge.plantuml.project.draw.PathUtils: net.sourceforge.plantuml.ugraphic.UPath UtoRight(double,double,double)>(d1, d2, $d8);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r14);

        goto label10;

     label07:
        if z2 != 0 goto label08;

        if z3 == 0 goto label08;

        $d5 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d5);

        $r10 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $d6 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        $r11 = staticinvoke <net.sourceforge.plantuml.project.draw.PathUtils: net.sourceforge.plantuml.ugraphic.UPath UtoLeft(double,double,double)>(d1, d2, $d6);

        interfaceinvoke $r10.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r11);

        goto label10;

     label08:
        $d4 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r7 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d4);

        $r8 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r6);

        goto label10;

     label09:
        $i5 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion>;

        $d9 = (double) $i5;

        $d10 = d1 * $d9;

        d11 = $d10 / 100.0;

        $r17 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r18 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        $d12 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d12);

        $r20 = interfaceinvoke $r18.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        $d13 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        $r21 = staticinvoke <net.sourceforge.plantuml.project.draw.PathUtils: net.sourceforge.plantuml.ugraphic.UPath UtoLeft(double,double,double)>(d11, d2, $d13);

        interfaceinvoke $r20.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r21);

        $r22 = interfaceinvoke r15.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r23 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        $r24 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r24.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r25 = interfaceinvoke $r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r24);

        $d14 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $d15 = $d14 + d11;

        $r26 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d15);

        $r27 = interfaceinvoke $r25.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r26);

        $i6 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion>;

        $i7 = 100 - $i6;

        $d16 = (double) $i7;

        $d17 = d1 * $d16;

        $d19 = $d17 / 100.0;

        $d18 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        $r28 = staticinvoke <net.sourceforge.plantuml.project.draw.PathUtils: net.sourceforge.plantuml.ugraphic.UPath UtoRight(double,double,double)>($d19, d2, $d18);

        interfaceinvoke $r27.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r28);

        $r29 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r29.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r30 = virtualinvoke $r29.<net.sourceforge.plantuml.ugraphic.color.HColorNone: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r31 = interfaceinvoke r37.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r30);

        $d20 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r32 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d20);

        $r33 = interfaceinvoke $r31.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r32);

        interfaceinvoke $r33.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r6);

     label10:
        return;
    }

    private void drawWithRound(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.project.draw.RectangleTask r0;
        java.util.List $r1, $r8, $r9, $r10, $r15;
        java.lang.Object $r2, $r11, $r16;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment r3, r17, r19;
        net.sourceforge.plantuml.ugraphic.UGraphic r4, $r6, $r13;
        double $d0, $d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r5, $r12;
        net.sourceforge.plantuml.ugraphic.UPath $r7, $r14;
        int $i0, $i1, $i2, $i3, $i4, i5;
        net.sourceforge.plantuml.ugraphic.color.HColor r18;

        r0 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        r4 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d2 := @parameter1: double;

        r18 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r1 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (net.sourceforge.plantuml.sequencediagram.graphic.Segment) $r2;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r5 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        $r6 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $d1 = virtualinvoke r3.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        $d3 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        $r7 = staticinvoke <net.sourceforge.plantuml.project.draw.PathUtils: net.sourceforge.plantuml.ugraphic.UPath UtoLeft(double,double,double)>($d1, d2, $d3);

        interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r7);

        i5 = 1;

     label1:
        $r8 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i0 = interfaceinvoke $r8.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        if i5 >= $i1 goto label2;

        $r15 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i5);

        r17 = (net.sourceforge.plantuml.sequencediagram.graphic.Segment) $r16;

        $d7 = virtualinvoke r17.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        $i4 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion>;

        $d8 = (double) $i4;

        $d9 = $d7 * $d8;

        $d10 = $d9 / 100.0;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.RectangleTask: void drawPartly(double,net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.sequencediagram.graphic.Segment,double,net.sourceforge.plantuml.ugraphic.color.HColor,int)>($d10, r4, r17, d2, r18, i5);

        i5 = i5 + 1;

        goto label1;

     label2:
        $r10 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $r9 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i3);

        r19 = (net.sourceforge.plantuml.sequencediagram.graphic.Segment) $r11;

        $d4 = virtualinvoke r19.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r12 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d4);

        $r13 = interfaceinvoke r4.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $d5 = virtualinvoke r19.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        $d6 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: double round>;

        $r14 = staticinvoke <net.sourceforge.plantuml.project.draw.PathUtils: net.sourceforge.plantuml.ugraphic.UPath UtoRight(double,double,double)>($d5, d2, $d6);

        interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r14);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.RectangleTask: void drawIntermediateDotted(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r4, d2);

        return;
    }

    private void drawWithoutRound(net.sourceforge.plantuml.ugraphic.UGraphic, double, net.sourceforge.plantuml.ugraphic.color.HColor, boolean, boolean)
    {
        double d0, d1, $d2, $d3, d4, $d5, d6, $d7, $d8, $d9, d10, d11;
        net.sourceforge.plantuml.ugraphic.ULine r0;
        net.sourceforge.plantuml.project.draw.RectangleTask r1;
        int $i0, $i1, $i4, $i5, i8, $i9;
        net.sourceforge.plantuml.ugraphic.UGraphic r2, $r9, $r11;
        java.util.List $r3, $r7, $r13;
        java.lang.Object $r4;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment r5;
        byte $b2, $b3, $b6, $b7;
        boolean $z0, z1, z2;
        net.sourceforge.plantuml.ugraphic.color.HColor r6;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8, $r10;
        java.lang.AssertionError $r12;

        r1 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        r6 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine vline(double)>(d0);

        d1 = specialinvoke r1.<net.sourceforge.plantuml.project.draw.RectangleTask: double getFullSegmentsLength()>();

        $i0 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion>;

        if $i0 != 100 goto label01;

        $d9 = d1;

        goto label02;

     label01:
        $i1 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: int completion>;

        $d2 = (double) $i1;

        $d3 = d1 * $d2;

        $d9 = $d3 / 100.0;

     label02:
        d4 = $d9;

        d10 = 0.0;

        i8 = 0;

     label03:
        $r13 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i9 = interfaceinvoke $r13.<java.util.List: int size()>();

        if i8 >= $i9 goto label11;

        $r3 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i8);

        r5 = (net.sourceforge.plantuml.sequencediagram.graphic.Segment) $r4;

        $d5 = virtualinvoke r5.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        d6 = d10 + $d5;

        $b2 = d4 cmpl d6;

        if $b2 < 0 goto label04;

        d11 = -1.0;

        goto label08;

     label04:
        $b3 = d10 cmpl d4;

        if $b3 < 0 goto label05;

        d11 = 0.0;

        goto label08;

     label05:
        $z0 = <net.sourceforge.plantuml.project.draw.RectangleTask: boolean $assertionsDisabled>;

        if $z0 != 0 goto label07;

        $b6 = d10 cmpg d4;

        if $b6 >= 0 goto label06;

        $b7 = d4 cmpg d6;

        if $b7 < 0 goto label07;

     label06:
        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label07:
        d11 = d4 - d10;

     label08:
        specialinvoke r1.<net.sourceforge.plantuml.project.draw.RectangleTask: void drawPartly(double,net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.sequencediagram.graphic.Segment,double,net.sourceforge.plantuml.ugraphic.color.HColor,int)>(d11, r2, r5, d0, r6, i8);

        if z1 != 0 goto label09;

        if i8 != 0 goto label09;

        $d8 = virtualinvoke r5.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d8);

        $r11 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

     label09:
        if z2 != 0 goto label10;

        $r7 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i5 = $i4 - 1;

        if i8 != $i5 goto label10;

        $d7 = virtualinvoke r5.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos2()>();

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d7);

        $r9 = interfaceinvoke r2.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r0);

     label10:
        d10 = d6;

        i8 = i8 + 1;

        goto label03;

     label11:
        specialinvoke r1.<net.sourceforge.plantuml.project.draw.RectangleTask: void drawIntermediateDotted(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r2, d0);

        return;
    }

    private double getFullSegmentsLength()
    {
        net.sourceforge.plantuml.project.draw.RectangleTask r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment r4;
        double $d0, d1;

        r0 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.sequencediagram.graphic.Segment) $r3;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        d1 = d1 + $d0;

        goto label1;

     label2:
        return d1;
    }

    private void drawIntermediateDotted(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.ugraphic.UStroke $r0;
        net.sourceforge.plantuml.project.draw.RectangleTask r1;
        java.util.List $r2, $r3, $r6;
        int $i0, $i1, $i2, i4;
        java.lang.Object $r4, $r7;
        net.sourceforge.plantuml.sequencediagram.graphic.Segment $r5, $r8;
        double $d0, d1, $d2, d3, d4, $d5;
        byte $b3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r9;
        net.sourceforge.plantuml.ugraphic.UGraphic $r10, r12, r13;
        net.sourceforge.plantuml.ugraphic.ULine $r11;

        r1 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d4 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double,double,double)>(2.0, 3.0, 1.0);

        r13 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r0);

        i4 = 0;

     label1:
        $r2 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        if i4 >= $i1 goto label3;

        $r3 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i4);

        $r5 = (net.sourceforge.plantuml.sequencediagram.graphic.Segment) $r4;

        $d0 = virtualinvoke $r5.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos2()>();

        d1 = $d0 + 3.0;

        $r6 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i2 = i4 + 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i2);

        $r8 = (net.sourceforge.plantuml.sequencediagram.graphic.Segment) $r7;

        $d2 = virtualinvoke $r8.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        d3 = $d2 - 3.0;

        $b3 = d3 cmpl d1;

        if $b3 <= 0 goto label2;

        $r9 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d1);

        $r10 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r9);

        $d5 = d3 - d1;

        $r11 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>($d5);

        specialinvoke r1.<net.sourceforge.plantuml.project.draw.RectangleTask: void draw2hlines(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.ugraphic.ULine)>($r10, d4, $r11);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    private void drawPartly(double, net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.sequencediagram.graphic.Segment, double, net.sourceforge.plantuml.ugraphic.color.HColor, int)
    {
        net.sourceforge.plantuml.sequencediagram.graphic.Segment r0;
        int i0, $i1, $i2, $i4;
        net.sourceforge.plantuml.project.draw.RectangleTask r1;
        java.util.List $r2, $r7;
        byte $b3, $b5;
        net.sourceforge.plantuml.ugraphic.UGraphic r3, $r5, $r9, $r11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r10;
        double d0, d1, $d2, d3, d4, d5;
        net.sourceforge.plantuml.ugraphic.ULine $r6;
        net.sourceforge.plantuml.ugraphic.color.HColorNone $r8;
        net.sourceforge.plantuml.ugraphic.color.HColor r12;

        r1 := @this: net.sourceforge.plantuml.project.draw.RectangleTask;

        d1 := @parameter0: double;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter2: net.sourceforge.plantuml.sequencediagram.graphic.Segment;

        d0 := @parameter3: double;

        r12 := @parameter4: net.sourceforge.plantuml.ugraphic.color.HColor;

        i0 := @parameter5: int;

        d3 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        $r2 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        if i0 == $i2 goto label1;

        d3 = d3 + 1.0;

     label1:
        $b3 = d3 cmpl 0.0;

        if $b3 <= 0 goto label2;

        $r8 = new net.sourceforge.plantuml.ugraphic.color.HColorNone;

        specialinvoke $r8.<net.sourceforge.plantuml.ugraphic.color.HColorNone: void <init>()>();

        $r9 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d2);

        $r11 = interfaceinvoke $r9.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r10);

        specialinvoke r1.<net.sourceforge.plantuml.project.draw.RectangleTask: void drawRect(double,net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.color.HColor,double,double)>(d1, $r11, r12, d3, d0);

     label2:
        d4 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getPos1()>();

        d5 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.graphic.Segment: double getLength()>();

        if i0 != 0 goto label3;

        $r7 = r1.<net.sourceforge.plantuml.project.draw.RectangleTask: java.util.List segments>;

        $i4 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i4 <= 1 goto label4;

        d5 = d5 - 1.0;

        goto label4;

     label3:
        d4 = d4 + 1.0;

        d5 = d5 - 1.0;

     label4:
        $b5 = d5 cmpl 0.0;

        if $b5 <= 0 goto label5;

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d4);

        $r5 = interfaceinvoke r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        $r6 = staticinvoke <net.sourceforge.plantuml.ugraphic.ULine: net.sourceforge.plantuml.ugraphic.ULine hline(double)>(d5);

        specialinvoke r1.<net.sourceforge.plantuml.project.draw.RectangleTask: void draw2hlines(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.ugraphic.ULine)>($r5, d0, $r6);

     label5:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/project/draw/RectangleTask;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.project.draw.RectangleTask: boolean $assertionsDisabled> = $z1;

        return;
    }
}
