public class net.sourceforge.plantuml.asciiart.TextSkin extends net.sourceforge.plantuml.skin.rose.Rose
{
    private final net.sourceforge.plantuml.FileFormat fileFormat;

    public void <init>(net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.asciiart.TextSkin r0;
        net.sourceforge.plantuml.FileFormat r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.TextSkin;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<net.sourceforge.plantuml.skin.rose.Rose: void <init>()>();

        r0.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat> = r1;

        return;
    }

    public net.sourceforge.plantuml.skin.ArrowComponent createComponentArrow(net.sourceforge.plantuml.style.Style[], net.sourceforge.plantuml.skin.ArrowConfiguration, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.skin.ArrowConfiguration r0;
        net.sourceforge.plantuml.skin.ArrowDirection $r1, $r2, $r6, $r7, $r8, $r9;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.asciiart.TextSkin r4;
        net.sourceforge.plantuml.ISkinParam r5;
        boolean $z0;
        java.lang.UnsupportedOperationException $r10;
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow $r11;
        net.sourceforge.plantuml.FileFormat $r12, $r17;
        net.sourceforge.plantuml.skin.ComponentType $r13, $r16;
        net.sourceforge.plantuml.style.Style[] r14;
        net.sourceforge.plantuml.asciiart.ComponentTextArrow $r15;
        int $i0;

        r4 := @this: net.sourceforge.plantuml.asciiart.TextSkin;

        r14 := @parameter0: net.sourceforge.plantuml.style.Style[];

        r0 := @parameter1: net.sourceforge.plantuml.skin.ArrowConfiguration;

        r5 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        $r2 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        if $r1 == $r2 goto label1;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        $r7 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        if $r6 == $r7 goto label1;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        $r9 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection BOTH_DIRECTION>;

        if $r8 != $r9 goto label2;

     label1:
        $r15 = new net.sourceforge.plantuml.asciiart.ComponentTextArrow;

        $r16 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ARROW>;

        $r17 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        $i0 = interfaceinvoke r5.<net.sourceforge.plantuml.ISkinParam: int maxAsciiMessageLength()>();

        specialinvoke $r15.<net.sourceforge.plantuml.asciiart.ComponentTextArrow: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat,int)>($r16, r0, r3, $r17, $i0);

        return $r15;

     label2:
        $z0 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isSelfArrow()>();

        if $z0 == 0 goto label3;

        $r11 = new net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        $r13 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ARROW>;

        $r12 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r11.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>($r13, r0, r3, $r12);

        return $r11;

     label3:
        $r10 = new java.lang.UnsupportedOperationException;

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r10;
    }

    public net.sourceforge.plantuml.skin.Component createComponentNote(net.sourceforge.plantuml.style.Style[], net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition)
    {
        net.sourceforge.plantuml.skin.ComponentType r0, $r1, $r6;
        net.sourceforge.plantuml.asciiart.ComponentTextNote $r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.asciiart.TextSkin r4;
        net.sourceforge.plantuml.FileFormat $r5;
        java.lang.UnsupportedOperationException $r7;
        java.lang.String $r8;
        net.sourceforge.plantuml.style.Style[] r9;
        net.sourceforge.plantuml.ISkinParam r10;
        net.sourceforge.plantuml.sequencediagram.NotePosition r11;

        r4 := @this: net.sourceforge.plantuml.asciiart.TextSkin;

        r9 := @parameter0: net.sourceforge.plantuml.style.Style[];

        r0 := @parameter1: net.sourceforge.plantuml.skin.ComponentType;

        r10 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        r11 := @parameter4: net.sourceforge.plantuml.sequencediagram.NotePosition;

        $r1 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE>;

        if r0 == $r1 goto label1;

        $r6 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType NOTE_BOX>;

        if r0 != $r6 goto label2;

     label1:
        $r2 = new net.sourceforge.plantuml.asciiart.ComponentTextNote;

        $r5 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r2.<net.sourceforge.plantuml.asciiart.ComponentTextNote: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>(r0, r3, $r5);

        return $r2;

     label2:
        $r7 = new java.lang.UnsupportedOperationException;

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ComponentType: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r8);

        throw $r7;
    }

    public net.sourceforge.plantuml.skin.Component createComponentNote(net.sourceforge.plantuml.style.Style[], net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.asciiart.TextSkin r0;
        net.sourceforge.plantuml.style.Style[] r1;
        net.sourceforge.plantuml.skin.ComponentType r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        net.sourceforge.plantuml.skin.Component $r5;

        r0 := @this: net.sourceforge.plantuml.asciiart.TextSkin;

        r1 := @parameter0: net.sourceforge.plantuml.style.Style[];

        r2 := @parameter1: net.sourceforge.plantuml.skin.ComponentType;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinParam;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.skin.Component createComponentNote(net.sourceforge.plantuml.style.Style[],net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition)>(r1, r2, r3, r4, null);

        return $r5;
    }

    public net.sourceforge.plantuml.skin.Component createComponent(net.sourceforge.plantuml.style.Style[], net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.skin.ArrowConfiguration, net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.skin.ComponentType r0, $r1, $r10, $r11, $r14, $r15, $r18, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35;
        net.sourceforge.plantuml.asciiart.ComponentTextActor $r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.asciiart.TextSkin r4;
        net.sourceforge.plantuml.FileFormat $r5, $r6, $r7, $r21, $r40, $r42, $r45, $r47, $r49, $r51, $r53, $r55, $r57, $r59, $r61, $r64, $r75;
        net.sourceforge.plantuml.asciiart.ComponentTextShape $r12, $r16;
        net.sourceforge.plantuml.asciiart.AsciiShape $r13, $r17, $r73;
        java.lang.String $r19, $r22, $r37;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.asciiart.ComponentTextParticipant $r20;
        java.lang.UnsupportedOperationException $r36;
        net.sourceforge.plantuml.asciiart.ComponentTextDestroy $r38;
        net.sourceforge.plantuml.asciiart.ComponentTextDelay $r39;
        net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse $r41;
        net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingSpace $r43;
        net.sourceforge.plantuml.asciiart.ComponentTextGroupingHeader $r44;
        net.sourceforge.plantuml.asciiart.ComponentTextDivider $r46;
        net.sourceforge.plantuml.asciiart.ComponentTextActiveLine $r48, $r50, $r52, $r54;
        net.sourceforge.plantuml.asciiart.ComponentTextLine $r56, $r58, $r60;
        net.sourceforge.plantuml.skin.ArrowConfiguration r62;
        net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow $r63;
        net.sourceforge.plantuml.skin.ArrowDirection $r65, $r66, $r68, $r69, $r70, $r71;
        net.sourceforge.plantuml.ISkinParam r67;
        net.sourceforge.plantuml.style.Style[] r72;
        net.sourceforge.plantuml.asciiart.ComponentTextArrow $r74;
        int $i0;

        r4 := @this: net.sourceforge.plantuml.asciiart.TextSkin;

        r72 := @parameter0: net.sourceforge.plantuml.style.Style[];

        r0 := @parameter1: net.sourceforge.plantuml.skin.ComponentType;

        r62 := @parameter2: net.sourceforge.plantuml.skin.ArrowConfiguration;

        r67 := @parameter3: net.sourceforge.plantuml.ISkinParam;

        r3 := @parameter4: net.sourceforge.plantuml.cucadiagram.Display;

        $r1 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_HEAD>;

        if r0 == $r1 goto label01;

        $r10 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ACTOR_TAIL>;

        if r0 != $r10 goto label04;

     label01:
        $r2 = new net.sourceforge.plantuml.asciiart.ComponentTextActor;

        $r7 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r6 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r5 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r6 != $r5 goto label02;

        $r73 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape STICKMAN_UNICODE>;

        goto label03;

     label02:
        $r73 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape STICKMAN>;

     label03:
        specialinvoke $r2.<net.sourceforge.plantuml.asciiart.ComponentTextActor: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat,net.sourceforge.plantuml.asciiart.AsciiShape)>(r0, r3, $r7, $r73);

        return $r2;

     label04:
        $r11 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType BOUNDARY_HEAD>;

        if r0 == $r11 goto label05;

        $r14 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType BOUNDARY_TAIL>;

        if r0 != $r14 goto label06;

     label05:
        $r12 = new net.sourceforge.plantuml.asciiart.ComponentTextShape;

        $r13 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape BOUNDARY>;

        specialinvoke $r12.<net.sourceforge.plantuml.asciiart.ComponentTextShape: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.asciiart.AsciiShape)>(r0, r3, $r13);

        return $r12;

     label06:
        $r15 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DATABASE_HEAD>;

        if r0 == $r15 goto label07;

        $r18 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DATABASE_TAIL>;

        if r0 != $r18 goto label08;

     label07:
        $r16 = new net.sourceforge.plantuml.asciiart.ComponentTextShape;

        $r17 = <net.sourceforge.plantuml.asciiart.AsciiShape: net.sourceforge.plantuml.asciiart.AsciiShape DATABASE>;

        specialinvoke $r16.<net.sourceforge.plantuml.asciiart.ComponentTextShape: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.asciiart.AsciiShape)>(r0, r3, $r17);

        return $r16;

     label08:
        $r19 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ComponentType: java.lang.String name()>();

        $z0 = virtualinvoke $r19.<java.lang.String: boolean endsWith(java.lang.String)>("_HEAD");

        if $z0 != 0 goto label09;

        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ComponentType: java.lang.String name()>();

        $z1 = virtualinvoke $r22.<java.lang.String: boolean endsWith(java.lang.String)>("_TAIL");

        if $z1 == 0 goto label10;

     label09:
        $r20 = new net.sourceforge.plantuml.asciiart.ComponentTextParticipant;

        $r21 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r20.<net.sourceforge.plantuml.asciiart.ComponentTextParticipant: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>(r0, r3, $r21);

        return $r20;

     label10:
        $z2 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ComponentType: boolean isArrow()>();

        if $z2 == 0 goto label12;

        $r65 = virtualinvoke r62.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        $r66 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection LEFT_TO_RIGHT_NORMAL>;

        if $r65 == $r66 goto label11;

        $r68 = virtualinvoke r62.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        $r69 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection RIGHT_TO_LEFT_REVERSE>;

        if $r68 == $r69 goto label11;

        $r70 = virtualinvoke r62.<net.sourceforge.plantuml.skin.ArrowConfiguration: net.sourceforge.plantuml.skin.ArrowDirection getArrowDirection()>();

        $r71 = <net.sourceforge.plantuml.skin.ArrowDirection: net.sourceforge.plantuml.skin.ArrowDirection BOTH_DIRECTION>;

        if $r70 != $r71 goto label12;

     label11:
        $r74 = new net.sourceforge.plantuml.asciiart.ComponentTextArrow;

        $r75 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        $i0 = interfaceinvoke r67.<net.sourceforge.plantuml.ISkinParam: int maxAsciiMessageLength()>();

        specialinvoke $r74.<net.sourceforge.plantuml.asciiart.ComponentTextArrow: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat,int)>(r0, r62, r3, $r75, $i0);

        return $r74;

     label12:
        $z3 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ComponentType: boolean isArrow()>();

        if $z3 == 0 goto label13;

        $z4 = virtualinvoke r62.<net.sourceforge.plantuml.skin.ArrowConfiguration: boolean isSelfArrow()>();

        if $z4 == 0 goto label13;

        $r63 = new net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow;

        $r64 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r63.<net.sourceforge.plantuml.asciiart.ComponentTextSelfArrow: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.skin.ArrowConfiguration,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>(r0, r62, r3, $r64);

        return $r63;

     label13:
        $r23 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType PARTICIPANT_LINE>;

        if r0 != $r23 goto label14;

        $r60 = new net.sourceforge.plantuml.asciiart.ComponentTextLine;

        $r61 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r60.<net.sourceforge.plantuml.asciiart.ComponentTextLine: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.FileFormat)>(r0, $r61);

        return $r60;

     label14:
        $r24 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType CONTINUE_LINE>;

        if r0 != $r24 goto label15;

        $r58 = new net.sourceforge.plantuml.asciiart.ComponentTextLine;

        $r59 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r58.<net.sourceforge.plantuml.asciiart.ComponentTextLine: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.FileFormat)>(r0, $r59);

        return $r58;

     label15:
        $r25 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_LINE>;

        if r0 != $r25 goto label16;

        $r56 = new net.sourceforge.plantuml.asciiart.ComponentTextLine;

        $r57 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r56.<net.sourceforge.plantuml.asciiart.ComponentTextLine: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.FileFormat)>(r0, $r57);

        return $r56;

     label16:
        $r26 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_CLOSE>;

        if r0 != $r26 goto label17;

        $r54 = new net.sourceforge.plantuml.asciiart.ComponentTextActiveLine;

        $r55 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r54.<net.sourceforge.plantuml.asciiart.ComponentTextActiveLine: void <init>(net.sourceforge.plantuml.FileFormat)>($r55);

        return $r54;

     label17:
        $r27 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_CLOSE_OPEN>;

        if r0 != $r27 goto label18;

        $r52 = new net.sourceforge.plantuml.asciiart.ComponentTextActiveLine;

        $r53 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r52.<net.sourceforge.plantuml.asciiart.ComponentTextActiveLine: void <init>(net.sourceforge.plantuml.FileFormat)>($r53);

        return $r52;

     label18:
        $r28 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_CLOSE>;

        if r0 != $r28 goto label19;

        $r50 = new net.sourceforge.plantuml.asciiart.ComponentTextActiveLine;

        $r51 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r50.<net.sourceforge.plantuml.asciiart.ComponentTextActiveLine: void <init>(net.sourceforge.plantuml.FileFormat)>($r51);

        return $r50;

     label19:
        $r29 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType ALIVE_BOX_OPEN_OPEN>;

        if r0 != $r29 goto label20;

        $r48 = new net.sourceforge.plantuml.asciiart.ComponentTextActiveLine;

        $r49 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r48.<net.sourceforge.plantuml.asciiart.ComponentTextActiveLine: void <init>(net.sourceforge.plantuml.FileFormat)>($r49);

        return $r48;

     label20:
        $r30 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DIVIDER>;

        if r0 != $r30 goto label21;

        $r46 = new net.sourceforge.plantuml.asciiart.ComponentTextDivider;

        $r47 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r46.<net.sourceforge.plantuml.asciiart.ComponentTextDivider: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>(r0, r3, $r47);

        return $r46;

     label21:
        $r31 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_HEADER>;

        if r0 != $r31 goto label22;

        $r44 = new net.sourceforge.plantuml.asciiart.ComponentTextGroupingHeader;

        $r45 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r44.<net.sourceforge.plantuml.asciiart.ComponentTextGroupingHeader: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>(r0, r3, $r45);

        return $r44;

     label22:
        $r32 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_SPACE>;

        if r0 != $r32 goto label23;

        $r43 = new net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingSpace;

        specialinvoke $r43.<net.sourceforge.plantuml.skin.rose.ComponentRoseGroupingSpace: void <init>(double)>(1.0);

        return $r43;

     label23:
        $r33 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType GROUPING_ELSE>;

        if r0 != $r33 goto label24;

        $r41 = new net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse;

        $r42 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r41.<net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>(r0, r3, $r42);

        return $r41;

     label24:
        $r34 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_TEXT>;

        if r0 != $r34 goto label25;

        $r39 = new net.sourceforge.plantuml.asciiart.ComponentTextDelay;

        $r40 = r4.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r39.<net.sourceforge.plantuml.asciiart.ComponentTextDelay: void <init>(net.sourceforge.plantuml.skin.ComponentType,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.FileFormat)>(r0, r3, $r40);

        return $r39;

     label25:
        $r35 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DESTROY>;

        if r0 != $r35 goto label26;

        $r38 = new net.sourceforge.plantuml.asciiart.ComponentTextDestroy;

        specialinvoke $r38.<net.sourceforge.plantuml.asciiart.ComponentTextDestroy: void <init>()>();

        return $r38;

     label26:
        $r36 = new java.lang.UnsupportedOperationException;

        $r37 = virtualinvoke r0.<net.sourceforge.plantuml.skin.ComponentType: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r37);

        throw $r36;
    }

    public net.sourceforge.plantuml.skin.Component createComponentNewPage(net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextNewpage $r0;
        net.sourceforge.plantuml.asciiart.TextSkin r1;
        net.sourceforge.plantuml.FileFormat $r2;
        net.sourceforge.plantuml.ISkinParam r3;

        r1 := @this: net.sourceforge.plantuml.asciiart.TextSkin;

        r3 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        $r0 = new net.sourceforge.plantuml.asciiart.ComponentTextNewpage;

        $r2 = r1.<net.sourceforge.plantuml.asciiart.TextSkin: net.sourceforge.plantuml.FileFormat fileFormat>;

        specialinvoke $r0.<net.sourceforge.plantuml.asciiart.ComponentTextNewpage: void <init>(net.sourceforge.plantuml.FileFormat)>($r2);

        return $r0;
    }
}
