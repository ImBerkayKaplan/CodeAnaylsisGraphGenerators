public class net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final double width;
    private final double height;
    private final net.sourceforge.plantuml.graphic.SymbolContext context;
    private final double delta;

    private void <init>(double, double, net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape r0;
        double d0, d1;
        net.sourceforge.plantuml.graphic.SymbolContext r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.graphic.SymbolContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double delta> = 12.0;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double delta> = 12.0;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double width> = d0;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double height> = d1;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: net.sourceforge.plantuml.graphic.SymbolContext context> = r1;

        return;
    }

    public static net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape create(double, double, net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape $r0;
        double d0, d1;
        net.sourceforge.plantuml.graphic.SymbolContext r1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: net.sourceforge.plantuml.graphic.SymbolContext;

        $r0 = new net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape;

        specialinvoke $r0.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: void <init>(double,double,net.sourceforge.plantuml.graphic.SymbolContext)>(d0, d1, r1);

        return $r0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UPolygon $r0;
        net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        net.sourceforge.plantuml.graphic.SymbolContext $r3, $r4, $r6, $r11;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic r7, $r8, $r12;
        net.sourceforge.plantuml.ugraphic.UPath $r9;

        r2 := @this: net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape;

        r7 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r0 = new net.sourceforge.plantuml.ugraphic.UPolygon;

        specialinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void <init>()>();

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, 0.0);

        $d0 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double width>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d0, 0.0);

        $d2 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double width>;

        $d1 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double height>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>($d2, $d1);

        $d3 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double height>;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(12.0, $d3);

        $d4 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double height>;

        $d5 = $d4 / 2.0;

        virtualinvoke $r0.<net.sourceforge.plantuml.ugraphic.UPolygon: void addPoint(double,double)>(0.0, $d5);

        $r4 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: net.sourceforge.plantuml.graphic.SymbolContext context>;

        $r3 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: net.sourceforge.plantuml.graphic.SymbolContext context>;

        $r5 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()>();

        $r6 = virtualinvoke $r4.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.graphic.SymbolContext withForeColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r5);

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r7);

        interfaceinvoke $r8.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r0);

        $r9 = new net.sourceforge.plantuml.ugraphic.UPath;

        specialinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void <init>()>();

        $d6 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double width>;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void moveTo(double,double)>($d6, 0.0);

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(12.0, 0.0);

        $d7 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double height>;

        $d8 = $d7 / 2.0;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(0.0, $d8);

        $d9 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double height>;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>(12.0, $d9);

        $d11 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double width>;

        $d10 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: double height>;

        virtualinvoke $r9.<net.sourceforge.plantuml.ugraphic.UPath: void lineTo(double,double)>($d11, $d10);

        $r11 = r2.<net.sourceforge.plantuml.timingdiagram.graphic.PentaBShape: net.sourceforge.plantuml.graphic.SymbolContext context>;

        $r12 = virtualinvoke $r11.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r7);

        interfaceinvoke $r12.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r9);

        return;
    }
}
