public class net.sourceforge.plantuml.graphic.TextBlockVertical2 extends net.sourceforge.plantuml.graphic.AbstractTextBlock implements net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.svek.WithPorts
{
    private final java.util.List blocks;
    private final net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment;

    void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlockVertical2 r0;
        java.util.ArrayList $r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, r4;
        java.util.List $r3, $r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r6;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockVertical2;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks> = $r1;

        $r3 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r5 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment> = r6;

        return;
    }

    void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.UImage, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlockVertical2 r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ugraphic.UImage r2;
        net.sourceforge.plantuml.graphic.AbstractTextBlock $r3;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockVertical2;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UImage;

        r4 := @parameter2: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r3 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockVertical2: net.sourceforge.plantuml.graphic.AbstractTextBlock convertImage(net.sourceforge.plantuml.ugraphic.UImage)>(r2);

        specialinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: void <init>(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r1, $r3, r4);

        return;
    }

    private static net.sourceforge.plantuml.graphic.AbstractTextBlock convertImage(net.sourceforge.plantuml.ugraphic.UImage)
    {
        net.sourceforge.plantuml.graphic.TextBlockVertical2$1 $r0;
        net.sourceforge.plantuml.ugraphic.UImage r1;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UImage;

        $r0 = new net.sourceforge.plantuml.graphic.TextBlockVertical2$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2$1: void <init>(net.sourceforge.plantuml.ugraphic.UImage)>(r1);

        return $r0;
    }

    public void <init>(java.util.List, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.TextBlockVertical2 r0;
        java.util.ArrayList $r1;
        java.util.List r2, $r3;
        int $i0;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockVertical2;

        r2 := @parameter0: java.util.List;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks> = $r1;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 >= 2 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>(r2);

        r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment> = r4;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.graphic.TextBlockVertical2 r0;
        java.util.List $r1, $r5, $r6;
        java.lang.Object $r2, $r7;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4, $r8;
        int $i0, i1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r9, r10;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockVertical2;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (net.sourceforge.plantuml.graphic.TextBlock) $r2;

        r10 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        i1 = 1;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r6 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i1);

        $r8 = (net.sourceforge.plantuml.graphic.TextBlock) $r7;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        r10 = staticinvoke <net.sourceforge.plantuml.Dimension2DDouble: net.sourceforge.plantuml.awt.geom.Dimension2D mergeTB(net.sourceforge.plantuml.awt.geom.Dimension2D,net.sourceforge.plantuml.awt.geom.Dimension2D)>(r10, $r9);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r10;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.TextBlockVertical2 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r16, $r18, $r20, $r23, $r24, $r26;
        net.sourceforge.plantuml.graphic.StringBounder $r2, $r8;
        net.sourceforge.plantuml.awt.geom.Dimension2D r3, r9;
        java.util.List $r4;
        java.util.Iterator r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        net.sourceforge.plantuml.graphic.TextBlock r7;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r10, $r11, $r12, $r13, $r29, $r30;
        java.lang.UnsupportedOperationException $r14;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, d7, d8, d9, $d10;
        net.sourceforge.plantuml.ugraphic.UTranslate $r15, $r17, $r19, $r22;
        net.sourceforge.plantuml.svek.TextBlockBackcolored $r21;
        net.sourceforge.plantuml.ugraphic.UBackground $r25;
        net.sourceforge.plantuml.ugraphic.URectangle $r27;
        net.sourceforge.plantuml.ugraphic.color.HColor r28;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockVertical2;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d7 = 0.0;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r2);

        $r4 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        $r6 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (net.sourceforge.plantuml.graphic.TextBlock) $r6;

        $r8 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r9 = interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r8);

        $z1 = r7 instanceof net.sourceforge.plantuml.svek.TextBlockBackcolored;

        if $z1 == 0 goto label2;

        $r21 = (net.sourceforge.plantuml.svek.TextBlockBackcolored) r7;

        r28 = interfaceinvoke $r21.<net.sourceforge.plantuml.svek.TextBlockBackcolored: net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()>();

        if r28 == null goto label2;

        $r22 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d7);

        $r23 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r22);

        $r24 = interfaceinvoke $r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r28);

        $r25 = interfaceinvoke r28.<net.sourceforge.plantuml.ugraphic.color.HColor: net.sourceforge.plantuml.ugraphic.UBackground bg()>();

        $r26 = interfaceinvoke $r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r25);

        $r27 = new net.sourceforge.plantuml.ugraphic.URectangle;

        $d5 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        specialinvoke $r27.<net.sourceforge.plantuml.ugraphic.URectangle: void <init>(double,double)>($d5, $d6);

        interfaceinvoke $r26.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r27);

     label2:
        $r29 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r30 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        if $r29 != $r30 goto label3;

        $r19 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d7);

        $r20 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r19);

        interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r20);

        goto label6;

     label3:
        $r11 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r10 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment CENTER>;

        if $r11 != $r10 goto label4;

        $d2 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d3 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = $d2 - $d3;

        d8 = $d4 / 2.0;

        $r17 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r17.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d8, d7);

        $r18 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r17);

        interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r18);

        goto label6;

     label4:
        $r13 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: net.sourceforge.plantuml.graphic.HorizontalAlignment horizontalAlignment>;

        $r12 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if $r13 != $r12 goto label5;

        $d0 = virtualinvoke r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d9 = $d0 - $d1;

        $r15 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d9, d7);

        $r16 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r15);

        interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r16);

        goto label6;

     label5:
        $r14 = new java.lang.UnsupportedOperationException;

        specialinvoke $r14.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r14;

     label6:
        $d10 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d7 = d7 + $d10;

        goto label1;

     label7:
        return;
    }

    public net.sourceforge.plantuml.svek.Ports getPorts(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.svek.Ports $r0, $r10, r11;
        net.sourceforge.plantuml.graphic.TextBlockVertical2 r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.graphic.TextBlock r6;
        net.sourceforge.plantuml.graphic.StringBounder r7;
        net.sourceforge.plantuml.awt.geom.Dimension2D r8;
        net.sourceforge.plantuml.svek.WithPorts $r9;
        double $d0, d1;

        r2 := @this: net.sourceforge.plantuml.graphic.TextBlockVertical2;

        r7 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        d1 = 0.0;

        $r0 = new net.sourceforge.plantuml.svek.Ports;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.Ports: void <init>()>();

        $r3 = r2.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.graphic.TextBlock) $r5;

        r8 = interfaceinvoke r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        $r9 = (net.sourceforge.plantuml.svek.WithPorts) r6;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.svek.WithPorts: net.sourceforge.plantuml.svek.Ports getPorts(net.sourceforge.plantuml.graphic.StringBounder)>(r7);

        r11 = virtualinvoke $r10.<net.sourceforge.plantuml.svek.Ports: net.sourceforge.plantuml.svek.Ports translateY(double)>(d1);

        virtualinvoke $r0.<net.sourceforge.plantuml.svek.Ports: void addThis(net.sourceforge.plantuml.svek.Ports)>(r11);

        $d0 = virtualinvoke r8.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d1 = d1 + $d0;

        goto label1;

     label2:
        return $r0;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.graphic.TextBlockVertical2 r0;
        java.util.List $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.graphic.TextBlock r4;
        net.sourceforge.plantuml.graphic.StringBounder r5;
        net.sourceforge.plantuml.awt.geom.Dimension2D r6;
        java.lang.String r7;
        net.sourceforge.plantuml.graphic.InnerStrategy r8;
        java.awt.geom.Rectangle2D r9, $r11;
        double $d0, d1;
        net.sourceforge.plantuml.ugraphic.UTranslate $r10;

        r0 := @this: net.sourceforge.plantuml.graphic.TextBlockVertical2;

        r7 := @parameter0: java.lang.String;

        r5 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r8 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        d1 = 0.0;

        $r1 = r0.<net.sourceforge.plantuml.graphic.TextBlockVertical2: java.util.List blocks>;

        r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.graphic.TextBlock) $r3;

        r6 = interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r5);

        r9 = interfaceinvoke r4.<net.sourceforge.plantuml.graphic.TextBlock: java.awt.geom.Rectangle2D getInnerPosition(java.lang.String,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.InnerStrategy)>(r7, r5, r8);

        if r9 == null goto label2;

        $r10 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(d1);

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Rectangle2D apply(java.awt.geom.Rectangle2D)>(r9);

        return $r11;

     label2:
        $d0 = virtualinvoke r6.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d1 = d1 + $d0;

        goto label1;

     label3:
        return null;
    }
}
