public class net.sourceforge.plantuml.golem.Position extends java.lang.Object
{
    private final int xmin;
    private final int ymin;
    private final int xmax;
    private final int ymax;

    public void <init>(int, int, int, int)
    {
        net.sourceforge.plantuml.golem.Position r0;
        int i0, i1, i2, i3;

        r0 := @this: net.sourceforge.plantuml.golem.Position;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.golem.Position: int xmin> = i0;

        r0.<net.sourceforge.plantuml.golem.Position: int ymin> = i1;

        r0.<net.sourceforge.plantuml.golem.Position: int xmax> = i2;

        r0.<net.sourceforge.plantuml.golem.Position: int ymax> = i3;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        net.sourceforge.plantuml.golem.Position r1, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r2 := @this: net.sourceforge.plantuml.golem.Position;

        r0 := @parameter0: java.lang.Object;

        r1 = (net.sourceforge.plantuml.golem.Position) r0;

        $i1 = r2.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $i0 = r1.<net.sourceforge.plantuml.golem.Position: int xmin>;

        if $i1 != $i0 goto label1;

        $i3 = r2.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $i2 = r1.<net.sourceforge.plantuml.golem.Position: int xmax>;

        if $i3 != $i2 goto label1;

        $i5 = r2.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $i4 = r1.<net.sourceforge.plantuml.golem.Position: int ymin>;

        if $i5 != $i4 goto label1;

        $i7 = r2.<net.sourceforge.plantuml.golem.Position: int ymax>;

        $i6 = r1.<net.sourceforge.plantuml.golem.Position: int ymax>;

        if $i7 != $i6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int hashCode()
    {
        net.sourceforge.plantuml.golem.Position r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: net.sourceforge.plantuml.golem.Position;

        $i1 = r0.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $i0 = r0.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $i4 = $i1 + $i0;

        $i2 = r0.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $i3 = 8 + $i2;

        $i7 = $i4 << $i3;

        $i5 = r0.<net.sourceforge.plantuml.golem.Position: int ymax>;

        $i6 = 16 + $i5;

        $i8 = $i7 << $i6;

        $i9 = $i8 << 24;

        return $i9;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        net.sourceforge.plantuml.golem.Position r2;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r11;

        r2 := @this: net.sourceforge.plantuml.golem.Position;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = r2.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = r2.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")-(");

        $i2 = r2.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i3 = r2.<net.sourceforge.plantuml.golem.Position: int ymax>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public net.sourceforge.plantuml.golem.Position move(net.sourceforge.plantuml.golem.TileGeometry, int)
    {
        net.sourceforge.plantuml.golem.TileGeometry r0, $r2;
        java.lang.IllegalArgumentException $r1;
        int[] $r3;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        net.sourceforge.plantuml.golem.Position $r4, r5, $r6, $r7, $r8;
        java.lang.IllegalStateException $r9;

        r5 := @this: net.sourceforge.plantuml.golem.Position;

        r0 := @parameter0: net.sourceforge.plantuml.golem.TileGeometry;

        i2 := @parameter1: int;

        if r0 == null goto label1;

        $r2 = <net.sourceforge.plantuml.golem.TileGeometry: net.sourceforge.plantuml.golem.TileGeometry CENTER>;

        if r0 != $r2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label2:
        $r3 = <net.sourceforge.plantuml.golem.Position$1: int[] $SwitchMap$net$sourceforge$plantuml$golem$TileGeometry>;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.golem.TileGeometry: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            default: goto label7;
        };

     label3:
        $r8 = new net.sourceforge.plantuml.golem.Position;

        $i26 = r5.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $i21 = r5.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $i25 = $i21 - i2;

        $i24 = r5.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $i22 = r5.<net.sourceforge.plantuml.golem.Position: int ymax>;

        $i23 = $i22 - i2;

        specialinvoke $r8.<net.sourceforge.plantuml.golem.Position: void <init>(int,int,int,int)>($i26, $i25, $i24, $i23);

        return $r8;

     label4:
        $r7 = new net.sourceforge.plantuml.golem.Position;

        $i20 = r5.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $i15 = r5.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $i19 = $i15 + i2;

        $i18 = r5.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $i16 = r5.<net.sourceforge.plantuml.golem.Position: int ymax>;

        $i17 = $i16 + i2;

        specialinvoke $r7.<net.sourceforge.plantuml.golem.Position: void <init>(int,int,int,int)>($i20, $i19, $i18, $i17);

        return $r7;

     label5:
        $r6 = new net.sourceforge.plantuml.golem.Position;

        $i9 = r5.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $i14 = $i9 - i2;

        $i13 = r5.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $i10 = r5.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $i12 = $i10 - i2;

        $i11 = r5.<net.sourceforge.plantuml.golem.Position: int ymax>;

        specialinvoke $r6.<net.sourceforge.plantuml.golem.Position: void <init>(int,int,int,int)>($i14, $i13, $i12, $i11);

        return $r6;

     label6:
        $r4 = new net.sourceforge.plantuml.golem.Position;

        $i3 = r5.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $i8 = $i3 + i2;

        $i7 = r5.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $i4 = r5.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $i6 = $i4 + i2;

        $i5 = r5.<net.sourceforge.plantuml.golem.Position: int ymax>;

        specialinvoke $r4.<net.sourceforge.plantuml.golem.Position: void <init>(int,int,int,int)>($i8, $i7, $i6, $i5);

        return $r4;

     label7:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>()>();

        throw $r9;
    }

    public int getXmin()
    {
        net.sourceforge.plantuml.golem.Position r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.golem.Position;

        $i0 = r0.<net.sourceforge.plantuml.golem.Position: int xmin>;

        return $i0;
    }

    public int getXmax()
    {
        net.sourceforge.plantuml.golem.Position r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.golem.Position;

        $i0 = r0.<net.sourceforge.plantuml.golem.Position: int xmax>;

        return $i0;
    }

    public int getYmin()
    {
        net.sourceforge.plantuml.golem.Position r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.golem.Position;

        $i0 = r0.<net.sourceforge.plantuml.golem.Position: int ymin>;

        return $i0;
    }

    public int getYmax()
    {
        net.sourceforge.plantuml.golem.Position r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.golem.Position;

        $i0 = r0.<net.sourceforge.plantuml.golem.Position: int ymax>;

        return $i0;
    }

    public int getCenterX()
    {
        net.sourceforge.plantuml.golem.Position r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.IllegalStateException $r1;

        r0 := @this: net.sourceforge.plantuml.golem.Position;

        $i1 = r0.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $i0 = r0.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $i2 = $i1 + $i0;

        $i3 = $i2 + 1;

        $i4 = $i3 % 2;

        if $i4 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $i6 = r0.<net.sourceforge.plantuml.golem.Position: int xmin>;

        $i5 = r0.<net.sourceforge.plantuml.golem.Position: int xmax>;

        $i7 = $i6 + $i5;

        $i8 = $i7 + 1;

        $i9 = $i8 / 2;

        return $i9;
    }

    public int getCenterY()
    {
        net.sourceforge.plantuml.golem.Position r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.IllegalStateException $r1;

        r0 := @this: net.sourceforge.plantuml.golem.Position;

        $i1 = r0.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $i0 = r0.<net.sourceforge.plantuml.golem.Position: int ymax>;

        $i2 = $i1 + $i0;

        $i3 = $i2 + 1;

        $i4 = $i3 % 2;

        if $i4 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $i6 = r0.<net.sourceforge.plantuml.golem.Position: int ymin>;

        $i5 = r0.<net.sourceforge.plantuml.golem.Position: int ymax>;

        $i7 = $i6 + $i5;

        $i8 = $i7 + 1;

        $i9 = $i8 / 2;

        return $i9;
    }
}
