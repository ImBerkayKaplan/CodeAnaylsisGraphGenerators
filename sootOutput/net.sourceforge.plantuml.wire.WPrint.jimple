public class net.sourceforge.plantuml.wire.WPrint extends java.lang.Object
{
    private final net.sourceforge.plantuml.ugraphic.UTranslate position;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private final net.sourceforge.plantuml.ISkinParam skinParam;

    public void <init>(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.ugraphic.UTranslate, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display)
    {
        net.sourceforge.plantuml.wire.WPrint r0;
        net.sourceforge.plantuml.ugraphic.UTranslate r1;
        net.sourceforge.plantuml.ISkinParam r2;
        net.sourceforge.plantuml.cucadiagram.Display r3;
        net.sourceforge.plantuml.ugraphic.color.HColor r4, $r6;

        r0 := @this: net.sourceforge.plantuml.wire.WPrint;

        r2 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UTranslate;

        r4 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        r3 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.ugraphic.UTranslate position> = r1;

        r0.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.ISkinParam skinParam> = r2;

        r0.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.cucadiagram.Display label> = r3;

        if r4 != null goto label1;

        $r6 = specialinvoke r0.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.ugraphic.color.HColor getBlack()>();

        goto label2;

     label1:
        $r6 = r4;

     label2:
        r0.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.ugraphic.color.HColor color> = $r6;

        return;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getBlack()
    {
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r0, $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        net.sourceforge.plantuml.wire.WPrint r3;

        r3 := @this: net.sourceforge.plantuml.wire.WPrint;

        $r1 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r0 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.color.HColorSimple: net.sourceforge.plantuml.ugraphic.color.HColor withDark(net.sourceforge.plantuml.ugraphic.color.HColor)>($r0);

        return $r2;
    }

    private net.sourceforge.plantuml.graphic.TextBlock getTextBlock()
    {
        net.sourceforge.plantuml.ugraphic.UFont $r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1, r4;
        net.sourceforge.plantuml.wire.WPrint r2;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3;
        net.sourceforge.plantuml.ISkinParam $r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r6;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.graphic.TextBlock $r8;

        r2 := @this: net.sourceforge.plantuml.wire.WPrint;

        $r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(10);

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>($r0);

        $r3 = r2.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration changeColor(net.sourceforge.plantuml.ugraphic.color.HColor)>($r3);

        $r7 = r2.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.cucadiagram.Display label>;

        $r6 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r5 = r2.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r8 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>(r4, $r6, $r5);

        return $r8;
    }

    public net.sourceforge.plantuml.ugraphic.UChange getPosition()
    {
        net.sourceforge.plantuml.wire.WPrint r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1;

        r0 := @this: net.sourceforge.plantuml.wire.WPrint;

        $r1 = r0.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.ugraphic.UTranslate position>;

        return $r1;
    }

    public void drawMe(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.wire.WPrint r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;

        r0 := @this: net.sourceforge.plantuml.wire.WPrint;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r2);

        return;
    }

    public double getHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.wire.WPrint r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.wire.WPrint;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.wire.WPrint: net.sourceforge.plantuml.graphic.TextBlock getTextBlock()>();

        $r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r2);

        $d0 = virtualinvoke $r3.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        return $d0;
    }
}
