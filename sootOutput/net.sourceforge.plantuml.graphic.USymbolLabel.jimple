class net.sourceforge.plantuml.graphic.USymbolLabel extends net.sourceforge.plantuml.graphic.USymbol
{
    private final net.sourceforge.plantuml.graphic.SkinParameter skinParameter;

    public void <init>(net.sourceforge.plantuml.graphic.SkinParameter)
    {
        net.sourceforge.plantuml.graphic.USymbolLabel r0;
        net.sourceforge.plantuml.graphic.SkinParameter r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolLabel;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.SkinParameter;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbol: void <init>()>();

        r0.<net.sourceforge.plantuml.graphic.USymbolLabel: net.sourceforge.plantuml.graphic.SkinParameter skinParameter> = r1;

        return;
    }

    public net.sourceforge.plantuml.style.SName getSName()
    {
        net.sourceforge.plantuml.style.SName $r0;
        net.sourceforge.plantuml.graphic.USymbolLabel r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolLabel;

        $r0 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName label>;

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.SkinParameter getSkinParameter()
    {
        net.sourceforge.plantuml.graphic.USymbolLabel r0;
        net.sourceforge.plantuml.graphic.SkinParameter $r1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolLabel;

        $r1 = r0.<net.sourceforge.plantuml.graphic.USymbolLabel: net.sourceforge.plantuml.graphic.SkinParameter skinParameter>;

        return $r1;
    }

    private net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()
    {
        net.sourceforge.plantuml.graphic.USymbol$Margin $r0;
        net.sourceforge.plantuml.graphic.USymbolLabel r1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolLabel;

        $r0 = new net.sourceforge.plantuml.graphic.USymbol$Margin;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbol$Margin: void <init>(double,double,double,double)>(10.0, 10.0, 10.0, 10.0);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asSmall(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolLabel$1 $r0;
        net.sourceforge.plantuml.graphic.USymbolLabel r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r4, r6;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r5;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolLabel;

        r6 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter3: net.sourceforge.plantuml.graphic.SymbolContext;

        r5 := @parameter4: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolLabel$1;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolLabel$1: void <init>(net.sourceforge.plantuml.graphic.USymbolLabel,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>(r1, r2, r3, r4, r5);

        return $r0;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asBig(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, net.sourceforge.plantuml.graphic.TextBlock, double, double, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.HorizontalAlignment)
    {
        net.sourceforge.plantuml.graphic.USymbolLabel$2 $r0;
        net.sourceforge.plantuml.graphic.USymbolLabel r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4, r6;
        double d0, d1;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolLabel;

        r5 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r6 := @parameter1: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        d0 := @parameter3: double;

        d1 := @parameter4: double;

        r2 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r4 := @parameter6: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        $r0 = new net.sourceforge.plantuml.graphic.USymbolLabel$2;

        specialinvoke $r0.<net.sourceforge.plantuml.graphic.USymbolLabel$2: void <init>(net.sourceforge.plantuml.graphic.USymbolLabel,net.sourceforge.plantuml.graphic.SymbolContext,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,double,net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment,double)>(r1, r2, r3, r4, d0, r5, r6, d1);

        return $r0;
    }

    static net.sourceforge.plantuml.graphic.USymbol$Margin access$000(net.sourceforge.plantuml.graphic.USymbolLabel)
    {
        net.sourceforge.plantuml.graphic.USymbolLabel r0;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r1;

        r0 := @parameter0: net.sourceforge.plantuml.graphic.USymbolLabel;

        $r1 = specialinvoke r0.<net.sourceforge.plantuml.graphic.USymbolLabel: net.sourceforge.plantuml.graphic.USymbol$Margin getMargin()>();

        return $r1;
    }
}
