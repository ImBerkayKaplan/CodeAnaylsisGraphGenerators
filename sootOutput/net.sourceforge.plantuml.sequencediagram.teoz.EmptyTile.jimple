public class net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile extends net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile implements net.sourceforge.plantuml.sequencediagram.teoz.Tile
{
    private final double height;
    private final net.sourceforge.plantuml.sequencediagram.teoz.Tile position;

    public void <init>(double, net.sourceforge.plantuml.sequencediagram.teoz.Tile)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile r0;
        net.sourceforge.plantuml.sequencediagram.teoz.Tile r1;
        net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile $r2;
        net.sourceforge.plantuml.graphic.StringBounder $r3;
        double d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        d0 := @parameter0: double;

        r1 := @parameter1: net.sourceforge.plantuml.sequencediagram.teoz.Tile;

        $r2 = (net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile) r1;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.teoz.AbstractTile: void <init>(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile: double height> = d0;

        r0.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile: net.sourceforge.plantuml.sequencediagram.teoz.Tile position> = r1;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        return;
    }

    public double getPreferredHeight()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        $d0 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile: double height>;

        return $d0;
    }

    public void addConstraints()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile r0;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        return;
    }

    public net.sourceforge.plantuml.real.Real getMinX()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile r0;
        net.sourceforge.plantuml.sequencediagram.teoz.Tile $r1;
        net.sourceforge.plantuml.real.Real $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile: net.sourceforge.plantuml.sequencediagram.teoz.Tile position>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.Tile: net.sourceforge.plantuml.real.Real getMinX()>();

        return $r2;
    }

    public net.sourceforge.plantuml.real.Real getMaxX()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile r0;
        net.sourceforge.plantuml.sequencediagram.teoz.Tile $r1;
        net.sourceforge.plantuml.real.Real $r2;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile: net.sourceforge.plantuml.sequencediagram.teoz.Tile position>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.sequencediagram.teoz.Tile: net.sourceforge.plantuml.real.Real getMaxX()>();

        return $r2;
    }

    public net.sourceforge.plantuml.sequencediagram.Event getEvent()
    {
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1 $r0;
        net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile r1;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile;

        $r0 = new net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1;

        specialinvoke $r0.<net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile$1: void <init>(net.sourceforge.plantuml.sequencediagram.teoz.EmptyTile)>(r1);

        return $r0;
    }
}
