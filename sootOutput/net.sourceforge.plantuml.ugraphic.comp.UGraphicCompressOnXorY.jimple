public class net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY extends net.sourceforge.plantuml.graphic.UGraphicDelegator
{
    private final net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode;
    private final net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform compressionTransform;
    private final net.sourceforge.plantuml.ugraphic.UTranslate translate;
    static final boolean $assertionsDisabled;

    public net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)
    {
        net.sourceforge.plantuml.ugraphic.UChange r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r1, $r3, $r10;
        java.lang.UnsupportedOperationException $r2;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r4, $r11;
        net.sourceforge.plantuml.ugraphic.UGraphic $r5, $r12, $r13;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r7, $r9, $r15;
        net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform $r8, $r14;

        r1 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UChange;

        $z0 = r0 instanceof net.sourceforge.plantuml.ugraphic.UTranslate;

        if $z0 == 0 goto label1;

        $r3 = new net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        $r4 = r1.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r8 = r1.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform compressionTransform>;

        $r7 = r1.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UTranslate translate>;

        $r6 = (net.sourceforge.plantuml.ugraphic.UTranslate) r0;

        $r9 = virtualinvoke $r7.<net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate compose(net.sourceforge.plantuml.ugraphic.UTranslate)>($r6);

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: void <init>(net.sourceforge.plantuml.ugraphic.comp.CompressionMode,net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform,net.sourceforge.plantuml.ugraphic.UTranslate)>($r4, $r5, $r8, $r9);

        return $r3;

     label1:
        $z1 = r0 instanceof net.sourceforge.plantuml.ugraphic.UStroke;

        if $z1 != 0 goto label2;

        $z2 = r0 instanceof net.sourceforge.plantuml.ugraphic.UBackground;

        if $z2 != 0 goto label2;

        $z3 = r0 instanceof net.sourceforge.plantuml.ugraphic.color.HColor;

        if $z3 == 0 goto label3;

     label2:
        $r10 = new net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        $r11 = r1.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r12 = virtualinvoke r1.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>(r0);

        $r14 = r1.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform compressionTransform>;

        $r15 = r1.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UTranslate translate>;

        specialinvoke $r10.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: void <init>(net.sourceforge.plantuml.ugraphic.comp.CompressionMode,net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform,net.sourceforge.plantuml.ugraphic.UTranslate)>($r11, $r13, $r14, $r15);

        return $r10;

     label3:
        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r2;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r3;
        java.lang.String $r5;

        r2 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UGraphicCompressOnXorY ");

        $r3 = r2.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public void <init>(net.sourceforge.plantuml.ugraphic.comp.CompressionMode, net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform)
    {
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.comp.CompressionMode;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform;

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>()>();

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: void <init>(net.sourceforge.plantuml.ugraphic.comp.CompressionMode,net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform,net.sourceforge.plantuml.ugraphic.UTranslate)>(r1, r2, r3, $r4);

        return;
    }

    private void <init>(net.sourceforge.plantuml.ugraphic.comp.CompressionMode, net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform, net.sourceforge.plantuml.ugraphic.UTranslate)
    {
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode r2;
        net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform r3;
        net.sourceforge.plantuml.ugraphic.UTranslate r4;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.comp.CompressionMode;

        r1 := @parameter1: net.sourceforge.plantuml.ugraphic.UGraphic;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform;

        r4 := @parameter3: net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.UGraphicDelegator: void <init>(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode> = r2;

        r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform compressionTransform> = r3;

        r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UTranslate translate> = r4;

        return;
    }

    public void draw(net.sourceforge.plantuml.ugraphic.UShape)
    {
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r1, $r2, $r4, $r12, $r14;
        double d0, d1, d2, d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, d17, d18, d19;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.ugraphic.UGraphic $r3, $r5, $r11, $r13, $r15;
        net.sourceforge.plantuml.ugraphic.ULine $r6;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r7, $r8, $r16, $r17;
        net.sourceforge.plantuml.graphic.StringBounder $r9;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r10;
        net.sourceforge.plantuml.ugraphic.UShape r18;
        net.sourceforge.plantuml.ugraphic.URectangle r19;
        net.sourceforge.plantuml.activitydiagram3.ftile.CenteredText r20;
        net.sourceforge.plantuml.graphic.TextBlock r21;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        r18 := @parameter0: net.sourceforge.plantuml.ugraphic.UShape;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UTranslate translate>;

        d0 = virtualinvoke $r1.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDx()>();

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UTranslate translate>;

        d1 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $z0 = r18 instanceof net.sourceforge.plantuml.ugraphic.URectangle;

        if $z0 == 0 goto label2;

        r19 = (net.sourceforge.plantuml.ugraphic.URectangle) r18;

        $r17 = r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r16 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r17 != $r16 goto label1;

        $d13 = virtualinvoke r19.<net.sourceforge.plantuml.ugraphic.URectangle: double getWidth()>();

        $d14 = d0 + $d13;

        d17 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>($d14);

        $d15 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>(d0);

        $d16 = d17 - $d15;

        r18 = virtualinvoke r19.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle withWidth(double)>($d16);

        goto label2;

     label1:
        $d9 = virtualinvoke r19.<net.sourceforge.plantuml.ugraphic.URectangle: double getHeight()>();

        $d10 = d1 + $d9;

        d18 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>($d10);

        $d11 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>(d1);

        $d12 = d18 - $d11;

        r18 = virtualinvoke r19.<net.sourceforge.plantuml.ugraphic.URectangle: net.sourceforge.plantuml.ugraphic.URectangle withHeight(double)>($d12);

     label2:
        $z2 = r18 instanceof net.sourceforge.plantuml.activitydiagram3.ftile.CenteredText;

        if $z2 == 0 goto label5;

        r20 = (net.sourceforge.plantuml.activitydiagram3.ftile.CenteredText) r18;

        r21 = virtualinvoke r20.<net.sourceforge.plantuml.activitydiagram3.ftile.CenteredText: net.sourceforge.plantuml.graphic.TextBlock getText()>();

        d2 = virtualinvoke r20.<net.sourceforge.plantuml.activitydiagram3.ftile.CenteredText: double getTotalWidth()>();

        $r8 = r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r7 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r8 != $r7 goto label3;

        $d6 = d0 + d2;

        $d7 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>($d6);

        $d8 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>(d0);

        d19 = $d7 - $d8;

        goto label4;

     label3:
        d19 = d2;

     label4:
        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r10 = interfaceinvoke r21.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r9);

        d3 = virtualinvoke $r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d4 = d19 - d3;

        d5 = $d4 / 2.0;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r12 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(double,double)>(d0, d1);

        $r13 = interfaceinvoke $r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        $r14 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d5);

        $r15 = interfaceinvoke $r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        interfaceinvoke r21.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r15);

        return;

     label5:
        $z1 = r18 instanceof net.sourceforge.plantuml.ugraphic.ULine;

        if $z1 == 0 goto label6;

        $r6 = (net.sourceforge.plantuml.ugraphic.ULine) r18;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: void drawLine(double,double,net.sourceforge.plantuml.ugraphic.ULine)>(d0, d1, $r6);

        goto label7;

     label6:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r4 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(double,double)>(d0, d1);

        $r5 = interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke $r5.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r18);

     label7:
        return;
    }

    private net.sourceforge.plantuml.ugraphic.UTranslate getTranslate(double, double)
    {
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r1, $r2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r3, $r4;
        double d0, d1, $d2, $d3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r1 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r2 != $r1 goto label1;

        $r4 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d3 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>(d0);

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>($d3, d1);

        return $r4;

     label1:
        $r3 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d2 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>(d1);

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, $d2);

        return $r3;
    }

    private void drawLine(double, double, net.sourceforge.plantuml.ugraphic.ULine)
    {
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r0;
        net.sourceforge.plantuml.ugraphic.comp.CompressionMode $r1, $r2;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        net.sourceforge.plantuml.ugraphic.ULine r3;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.ULine;

        $r2 = r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.CompressionMode mode>;

        $r1 = <net.sourceforge.plantuml.ugraphic.comp.CompressionMode: net.sourceforge.plantuml.ugraphic.comp.CompressionMode ON_X>;

        if $r2 != $r1 goto label1;

        $d8 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>(d0);

        $d9 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.ULine: double getDX()>();

        $d10 = d0 + $d9;

        $d11 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>($d10);

        $d12 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.ULine: double getDY()>();

        $d13 = d1 + $d12;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: void drawLine(double,double,double,double)>($d8, d1, $d11, $d13);

        goto label2;

     label1:
        $d2 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>(d1);

        $d3 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.ULine: double getDX()>();

        $d4 = d0 + $d3;

        $d5 = virtualinvoke r3.<net.sourceforge.plantuml.ugraphic.ULine: double getDY()>();

        $d6 = d1 + $d5;

        $d7 = specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: double ct(double)>($d6);

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: void drawLine(double,double,double,double)>(d0, $d2, $d4, $d7);

     label2:
        return;
    }

    private double ct(double)
    {
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r0;
        double d0, $d1;
        net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform $r1;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        d0 := @parameter0: double;

        $r1 = r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform compressionTransform>;

        $d1 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.comp.PiecewiseAffineTransform: double transform(double)>(d0);

        return $d1;
    }

    private void drawLine(double, double, double, double)
    {
        double d0, d1, d2, d3, $d4, $d5;
        byte $b0, $b1;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY r0;
        net.sourceforge.plantuml.ugraphic.UGraphic $r1, $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.ugraphic.ULine $r4;
        java.lang.AssertionError $r5;

        r0 := @this: net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY;

        d2 := @parameter0: double;

        d0 := @parameter1: double;

        d3 := @parameter2: double;

        d1 := @parameter3: double;

        $b0 = d0 cmpl d1;

        if $b0 <= 0 goto label1;

        specialinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: void drawLine(double,double,double,double)>(d3, d1, d2, d0);

        return;

     label1:
        $z0 = <net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $b1 = d0 cmpg d1;

        if $b1 <= 0 goto label2;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label2:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: net.sourceforge.plantuml.ugraphic.UGraphic getUg()>();

        $r2 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d2, d0);

        $r3 = interfaceinvoke $r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d5 = d3 - d2;

        $d4 = d1 - d0;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d5, $d4);

        interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lnet/sourceforge/plantuml/ugraphic/comp/UGraphicCompressOnXorY;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <net.sourceforge.plantuml.ugraphic.comp.UGraphicCompressOnXorY: boolean $assertionsDisabled> = $z1;

        return;
    }
}
