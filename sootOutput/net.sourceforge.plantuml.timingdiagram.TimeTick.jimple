public class net.sourceforge.plantuml.timingdiagram.TimeTick extends java.lang.Object implements java.lang.Comparable
{
    private final java.math.BigDecimal time;
    private final net.sourceforge.plantuml.timingdiagram.TimingFormat format;

    public void <init>(java.math.BigDecimal, net.sourceforge.plantuml.timingdiagram.TimingFormat)
    {
        net.sourceforge.plantuml.timingdiagram.TimeTick r0;
        java.math.BigDecimal r1;
        net.sourceforge.plantuml.timingdiagram.TimingFormat r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r1 := @parameter0: java.math.BigDecimal;

        r2 := @parameter1: net.sourceforge.plantuml.timingdiagram.TimingFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.TimeTick: java.math.BigDecimal time> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.TimeTick: net.sourceforge.plantuml.timingdiagram.TimingFormat format> = r2;

        return;
    }

    public final java.math.BigDecimal getTime()
    {
        net.sourceforge.plantuml.timingdiagram.TimeTick r0;
        java.math.BigDecimal $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimeTick: java.math.BigDecimal time>;

        return $r1;
    }

    public int compareTo(net.sourceforge.plantuml.timingdiagram.TimeTick)
    {
        net.sourceforge.plantuml.timingdiagram.TimeTick r0, r1;
        java.math.BigDecimal $r2, $r3;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r1 := @parameter0: net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r3 = r0.<net.sourceforge.plantuml.timingdiagram.TimeTick: java.math.BigDecimal time>;

        $r2 = r1.<net.sourceforge.plantuml.timingdiagram.TimeTick: java.math.BigDecimal time>;

        $i0 = virtualinvoke $r3.<java.math.BigDecimal: int compareTo(java.math.BigDecimal)>($r2);

        return $i0;
    }

    public final net.sourceforge.plantuml.timingdiagram.TimingFormat getFormat()
    {
        net.sourceforge.plantuml.timingdiagram.TimeTick r0;
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r1;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimeTick: net.sourceforge.plantuml.timingdiagram.TimingFormat format>;

        return $r1;
    }

    public java.lang.String toString()
    {
        net.sourceforge.plantuml.timingdiagram.TimeTick r0;
        java.math.BigDecimal $r1;
        net.sourceforge.plantuml.timingdiagram.TimingFormat $r2;
        java.lang.String $r3;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeTick;

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.TimeTick: net.sourceforge.plantuml.timingdiagram.TimingFormat format>;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.TimeTick: java.math.BigDecimal time>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.timingdiagram.TimingFormat: java.lang.String formatTime(java.math.BigDecimal)>($r1);

        return $r3;
    }

    public volatile int compareTo(java.lang.Object)
    {
        net.sourceforge.plantuml.timingdiagram.TimeTick r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.TimeTick;

        r1 := @parameter0: java.lang.Object;

        $r2 = (net.sourceforge.plantuml.timingdiagram.TimeTick) r1;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.timingdiagram.TimeTick: int compareTo(net.sourceforge.plantuml.timingdiagram.TimeTick)>($r2);

        return $i0;
    }
}
