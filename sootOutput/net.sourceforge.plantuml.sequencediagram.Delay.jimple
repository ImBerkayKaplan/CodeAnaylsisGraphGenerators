public class net.sourceforge.plantuml.sequencediagram.Delay extends net.sourceforge.plantuml.sequencediagram.AbstractEvent implements net.sourceforge.plantuml.sequencediagram.Event, net.sourceforge.plantuml.style.WithStyle
{
    private final net.sourceforge.plantuml.cucadiagram.Display text;
    private final net.sourceforge.plantuml.style.Style style;

    public net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.skin.ComponentType $r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.sequencediagram.Delay r2;

        r2 := @this: net.sourceforge.plantuml.sequencediagram.Delay;

        $r0 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_TEXT>;

        $r1 = virtualinvoke $r0.<net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        return $r1;
    }

    public net.sourceforge.plantuml.style.Style[] getUsedStyles()
    {
        net.sourceforge.plantuml.style.Style[] $r0;
        net.sourceforge.plantuml.sequencediagram.Delay r1;
        net.sourceforge.plantuml.style.Style $r2;

        r1 := @this: net.sourceforge.plantuml.sequencediagram.Delay;

        $r0 = newarray (net.sourceforge.plantuml.style.Style)[1];

        $r2 = r1.<net.sourceforge.plantuml.sequencediagram.Delay: net.sourceforge.plantuml.style.Style style>;

        $r0[0] = $r2;

        return $r0;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.sequencediagram.Delay r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.style.StyleSignature $r2;
        net.sourceforge.plantuml.style.StyleBuilder r3;
        net.sourceforge.plantuml.style.Style $r4;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Delay;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter1: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.AbstractEvent: void <init>()>();

        r0.<net.sourceforge.plantuml.sequencediagram.Delay: net.sourceforge.plantuml.cucadiagram.Display text> = r1;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.sequencediagram.Delay: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>(r3);

        r0.<net.sourceforge.plantuml.sequencediagram.Delay: net.sourceforge.plantuml.style.Style style> = $r4;

        return;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getText()
    {
        net.sourceforge.plantuml.sequencediagram.Delay r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Delay;

        $r1 = r0.<net.sourceforge.plantuml.sequencediagram.Delay: net.sourceforge.plantuml.cucadiagram.Display text>;

        return $r1;
    }

    public boolean dealWith(net.sourceforge.plantuml.sequencediagram.Participant)
    {
        net.sourceforge.plantuml.sequencediagram.Delay r0;
        net.sourceforge.plantuml.sequencediagram.Participant r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.Delay;

        r1 := @parameter0: net.sourceforge.plantuml.sequencediagram.Participant;

        return 0;
    }
}
