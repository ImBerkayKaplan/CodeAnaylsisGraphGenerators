public class net.sourceforge.plantuml.PSystemUtils extends java.lang.Object
{

    public void <init>()
    {
        net.sourceforge.plantuml.PSystemUtils r0;

        r0 := @this: net.sourceforge.plantuml.PSystemUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List exportDiagrams(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.SuggestedFile, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.core.Diagram r0;
        net.sourceforge.plantuml.SuggestedFile r1;
        net.sourceforge.plantuml.FileFormatOption r2;
        java.util.List $r3;

        r0 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r1 := @parameter1: net.sourceforge.plantuml.SuggestedFile;

        r2 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r3 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: java.util.List exportDiagrams(net.sourceforge.plantuml.core.Diagram,net.sourceforge.plantuml.SuggestedFile,net.sourceforge.plantuml.FileFormatOption,boolean)>(r0, r1, r2, 0);

        return $r3;
    }

    public static java.util.List exportDiagrams(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.SuggestedFile, net.sourceforge.plantuml.FileFormatOption, boolean) throws java.io.IOException
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        net.sourceforge.plantuml.security.SFile r1;
        boolean z0, $z1, $z2, $z3, $z4, z5, $z6;
        net.sourceforge.plantuml.core.Diagram r2;
        net.sourceforge.plantuml.FileFormatOption r3;
        java.util.List $r4, $r8, $r10, $r12, $r24;
        net.sourceforge.plantuml.FileFormat $r5, $r6, $r13, $r14;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram $r7;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram $r9;
        net.sourceforge.plantuml.NewpagedDiagram $r11;
        int $i0;
        java.lang.String $r15, $r18, $r21;
        java.lang.StringBuilder $r16, $r17, $r19, $r20;
        net.sourceforge.plantuml.FileImageData[] $r22;
        net.sourceforge.plantuml.FileImageData $r23;

        r2 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r0 := @parameter1: net.sourceforge.plantuml.SuggestedFile;

        r3 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        z0 := @parameter3: boolean;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile getFile(int)>(0);

        if z0 == 0 goto label1;

        $r13 = virtualinvoke r3.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat getFileFormat()>();

        $z3 = virtualinvoke $r13.<net.sourceforge.plantuml.FileFormat: boolean doesSupportMetadata()>();

        if $z3 == 0 goto label1;

        $z4 = virtualinvoke r1.<net.sourceforge.plantuml.security.SFile: boolean exists()>();

        if $z4 == 0 goto label1;

        $i0 = interfaceinvoke r2.<net.sourceforge.plantuml.core.Diagram: int getNbImages()>();

        if $i0 != 1 goto label1;

        $r14 = virtualinvoke r3.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat getFileFormat()>();

        $r15 = interfaceinvoke r2.<net.sourceforge.plantuml.core.Diagram: java.lang.String getMetadata()>();

        z5 = virtualinvoke $r14.<net.sourceforge.plantuml.FileFormat: boolean equalsMetadata(java.lang.String,net.sourceforge.plantuml.security.SFile)>($r15, r1);

        if z5 == 0 goto label1;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipping ");

        $r18 = virtualinvoke r1.<net.sourceforge.plantuml.security.SFile: java.lang.String getPrintablePath()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because metadata has not changed.");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r21);

        $r22 = newarray (net.sourceforge.plantuml.FileImageData)[1];

        $r23 = new net.sourceforge.plantuml.FileImageData;

        specialinvoke $r23.<net.sourceforge.plantuml.FileImageData: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.core.ImageData)>(r1, null);

        $r22[0] = $r23;

        $r24 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r22);

        return $r24;

     label1:
        $z6 = r2 instanceof net.sourceforge.plantuml.NewpagedDiagram;

        if $z6 == 0 goto label2;

        $r11 = (net.sourceforge.plantuml.NewpagedDiagram) r2;

        $r12 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: java.util.List exportDiagramsNewpaged(net.sourceforge.plantuml.NewpagedDiagram,net.sourceforge.plantuml.SuggestedFile,net.sourceforge.plantuml.FileFormatOption)>($r11, r0, r3);

        return $r12;

     label2:
        $z1 = r2 instanceof net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        if $z1 == 0 goto label3;

        $r9 = (net.sourceforge.plantuml.sequencediagram.SequenceDiagram) r2;

        $r10 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: java.util.List exportDiagramsSequence(net.sourceforge.plantuml.sequencediagram.SequenceDiagram,net.sourceforge.plantuml.SuggestedFile,net.sourceforge.plantuml.FileFormatOption)>($r9, r0, r3);

        return $r10;

     label3:
        $z2 = r2 instanceof net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        if $z2 == 0 goto label4;

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat getFileFormat()>();

        $r6 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat HTML>;

        if $r5 != $r6 goto label4;

        $r7 = (net.sourceforge.plantuml.cucadiagram.CucaDiagram) r2;

        $r8 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: java.util.List createFilesHtml(net.sourceforge.plantuml.cucadiagram.CucaDiagram,net.sourceforge.plantuml.SuggestedFile)>($r7, r0);

        return $r8;

     label4:
        $r4 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: java.util.List exportDiagramsDefault(net.sourceforge.plantuml.core.Diagram,net.sourceforge.plantuml.SuggestedFile,net.sourceforge.plantuml.FileFormatOption)>(r2, r0, r3);

        return $r4;
    }

    private static java.util.List exportDiagramsNewpaged(net.sourceforge.plantuml.NewpagedDiagram, net.sourceforge.plantuml.SuggestedFile, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.NewpagedDiagram r2;
        int i0, i2;
        net.sourceforge.plantuml.SuggestedFile r3;
        net.sourceforge.plantuml.security.SFile r4;
        boolean $z0;
        java.io.BufferedOutputStream r5;
        net.sourceforge.plantuml.FileFormatOption r6;
        java.lang.StringBuilder $r7, $r8, $r9;
        long $l1;
        java.lang.String $r10;
        net.sourceforge.plantuml.FileImageData $r11;
        java.lang.Throwable $r12;

        r2 := @parameter0: net.sourceforge.plantuml.NewpagedDiagram;

        r3 := @parameter1: net.sourceforge.plantuml.SuggestedFile;

        r6 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i0 = virtualinvoke r2.<net.sourceforge.plantuml.NewpagedDiagram: int getNbImages()>();

        i2 = 0;

     label1:
        if i2 >= i0 goto label8;

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile getFile(int)>(i2);

        $z0 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: boolean canFileBeWritten(net.sourceforge.plantuml.security.SFile)>(r4);

        if $z0 != 0 goto label2;

        return $r0;

     label2:
        r5 = virtualinvoke r4.<net.sourceforge.plantuml.security.SFile: java.io.BufferedOutputStream createBufferedOutputStream()>();

     label3:
        virtualinvoke r2.<net.sourceforge.plantuml.NewpagedDiagram: net.sourceforge.plantuml.core.ImageData exportDiagram(java.io.OutputStream,int,net.sourceforge.plantuml.FileFormatOption)>(r5, i2, r6);

     label4:
        virtualinvoke r5.<java.io.OutputStream: void close()>();

        goto label7;

     label5:
        $r12 := @caughtexception;

     label6:
        virtualinvoke r5.<java.io.OutputStream: void close()>();

        throw $r12;

     label7:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File size : ");

        $l1 = virtualinvoke r4.<net.sourceforge.plantuml.security.SFile: long length()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r10);

        $r11 = new net.sourceforge.plantuml.FileImageData;

        specialinvoke $r11.<net.sourceforge.plantuml.FileImageData: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.core.ImageData)>(r4, null);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r11);

        i2 = i2 + 1;

        goto label1;

     label8:
        return $r0;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static boolean canFileBeWritten(net.sourceforge.plantuml.security.SFile)
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r7, $r8, $r10, $r12, $r13, $r14;
        net.sourceforge.plantuml.security.SFile r2;
        java.lang.String $r3, $r5, $r9, $r11, $r15;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.OptionFlags $r6;

        r2 := @parameter0: net.sourceforge.plantuml.security.SFile;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating file: ");

        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.security.SFile: java.lang.String getAbsolutePath()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r5);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.security.SFile: boolean exists()>();

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r2.<net.sourceforge.plantuml.security.SFile: boolean canWrite()>();

        if $z1 != 0 goto label2;

        $r6 = staticinvoke <net.sourceforge.plantuml.OptionFlags: net.sourceforge.plantuml.OptionFlags getInstance()>();

        $z2 = virtualinvoke $r6.<net.sourceforge.plantuml.OptionFlags: boolean isOverwrite()>();

        if $z2 == 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Overwrite ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r15);

        virtualinvoke r2.<net.sourceforge.plantuml.security.SFile: void setWritable(boolean)>(1);

        virtualinvoke r2.<net.sourceforge.plantuml.security.SFile: void delete()>();

        return 1;

     label1:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot write to file ");

        $r9 = virtualinvoke r2.<net.sourceforge.plantuml.security.SFile: java.lang.String getAbsolutePath()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r11);

        return 0;

     label2:
        return 1;
    }

    private static java.util.List exportDiagramsSequence(net.sourceforge.plantuml.sequencediagram.SequenceDiagram, net.sourceforge.plantuml.SuggestedFile, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        java.util.ArrayList $r0;
        net.sourceforge.plantuml.sequencediagram.SequenceDiagram r2;
        int i0, i1;
        net.sourceforge.plantuml.SuggestedFile r3;
        net.sourceforge.plantuml.security.SFile r4, $r5;
        boolean $z0, $z1;
        java.io.BufferedOutputStream r6;
        net.sourceforge.plantuml.FileFormatOption r7;
        java.lang.Throwable $r8;
        net.sourceforge.plantuml.core.ImageData r10;
        java.lang.StringBuilder $r11, $r12, $r13;
        long $l2;
        java.lang.String $r14;
        net.sourceforge.plantuml.FileImageData $r15;

        r2 := @parameter0: net.sourceforge.plantuml.sequencediagram.SequenceDiagram;

        r3 := @parameter1: net.sourceforge.plantuml.SuggestedFile;

        r7 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i0 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: int getNbImages()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label9;

        r4 = virtualinvoke r3.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile getFile(int)>(i1);

        $r5 = virtualinvoke r3.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile getFile(int)>(i1);

        $z0 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: boolean canFileBeWritten(net.sourceforge.plantuml.security.SFile)>($r5);

        if $z0 != 0 goto label2;

        return $r0;

     label2:
        r6 = virtualinvoke r4.<net.sourceforge.plantuml.security.SFile: java.io.BufferedOutputStream createBufferedOutputStream()>();

     label3:
        r10 = virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: net.sourceforge.plantuml.core.ImageData exportDiagram(java.io.OutputStream,int,net.sourceforge.plantuml.FileFormatOption)>(r6, i1, r7);

     label4:
        virtualinvoke r6.<java.io.OutputStream: void close()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

     label6:
        virtualinvoke r6.<java.io.OutputStream: void close()>();

        throw $r8;

     label7:
        if r10 == null goto label8;

        $z1 = interfaceinvoke r10.<net.sourceforge.plantuml.core.ImageData: boolean containsCMapData()>();

        if $z1 == 0 goto label8;

        virtualinvoke r2.<net.sourceforge.plantuml.sequencediagram.SequenceDiagram: void exportCmap(net.sourceforge.plantuml.SuggestedFile,int,net.sourceforge.plantuml.core.ImageData)>(r3, i1, r10);

     label8:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File size : ");

        $l2 = virtualinvoke r4.<net.sourceforge.plantuml.security.SFile: long length()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void info(java.lang.String)>($r14);

        $r15 = new net.sourceforge.plantuml.FileImageData;

        specialinvoke $r15.<net.sourceforge.plantuml.FileImageData: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.core.ImageData)>(r4, r10);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r15);

        i1 = i1 + 1;

        goto label1;

     label9:
        return $r0;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static java.util.List createFilesHtml(net.sourceforge.plantuml.cucadiagram.CucaDiagram, net.sourceforge.plantuml.SuggestedFile) throws java.io.IOException
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        java.lang.String r1, $r3;
        int i0;
        net.sourceforge.plantuml.security.SFile $r2, r4;
        net.sourceforge.plantuml.html.CucaDiagramHtmlMaker $r5;
        net.sourceforge.plantuml.cucadiagram.CucaDiagram r6;
        java.util.List $r8;

        r6 := @parameter0: net.sourceforge.plantuml.cucadiagram.CucaDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.SuggestedFile;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.SuggestedFile: java.lang.String getName()>();

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile getParentFile()>();

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        r4 = virtualinvoke $r2.<net.sourceforge.plantuml.security.SFile: net.sourceforge.plantuml.security.SFile file(java.lang.String)>($r3);

        $r5 = new net.sourceforge.plantuml.html.CucaDiagramHtmlMaker;

        specialinvoke $r5.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: void <init>(net.sourceforge.plantuml.cucadiagram.CucaDiagram,net.sourceforge.plantuml.security.SFile)>(r6, r4);

        $r8 = virtualinvoke $r5.<net.sourceforge.plantuml.html.CucaDiagramHtmlMaker: java.util.List create()>();

        return $r8;
    }

    private static java.util.List splitPng(net.sourceforge.plantuml.TitledDiagram, net.sourceforge.plantuml.SuggestedFile, net.sourceforge.plantuml.core.ImageData, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        net.sourceforge.plantuml.TitledDiagram r1;
        net.sourceforge.plantuml.FileFormatOption r2;
        boolean $z0, $z1, $z3;
        net.sourceforge.plantuml.ISkinParam $r3, $r4;
        java.util.List r5;
        java.util.Iterator r7;
        java.lang.Object $r8;
        net.sourceforge.plantuml.security.SFile r9;
        net.sourceforge.plantuml.FileImageData $r10;
        net.sourceforge.plantuml.core.ImageData r11;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r12;
        java.lang.String $r13, $r17;
        net.sourceforge.plantuml.png.PngSplitter $r14;
        int $i0, $i1, $i2;
        net.sourceforge.plantuml.SplitParam $r18;
        java.util.ArrayList $r19;

        r1 := @parameter0: net.sourceforge.plantuml.TitledDiagram;

        r0 := @parameter1: net.sourceforge.plantuml.SuggestedFile;

        r11 := @parameter2: net.sourceforge.plantuml.core.ImageData;

        r2 := @parameter3: net.sourceforge.plantuml.FileFormatOption;

        $r14 = new net.sourceforge.plantuml.png.PngSplitter;

        $i0 = virtualinvoke r1.<net.sourceforge.plantuml.TitledDiagram: int getSplitPagesHorizontal()>();

        $i1 = virtualinvoke r1.<net.sourceforge.plantuml.TitledDiagram: int getSplitPagesVertical()>();

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.FileFormatOption: boolean isWithMetadata()>();

        if $z0 == 0 goto label1;

        $r13 = virtualinvoke r1.<net.sourceforge.plantuml.TitledDiagram: java.lang.String getMetadata()>();

        $r17 = $r13;

        goto label2;

     label1:
        $r17 = null;

     label2:
        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.TitledDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $i2 = interfaceinvoke $r3.<net.sourceforge.plantuml.ISkinParam: int getDpi()>();

        $z1 = r1 instanceof net.sourceforge.plantuml.project.GanttDiagram;

        if $z1 == 0 goto label3;

        $r18 = new net.sourceforge.plantuml.SplitParam;

        $r12 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        specialinvoke $r18.<net.sourceforge.plantuml.SplitParam: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,int)>($r12, null, 5);

        goto label4;

     label3:
        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.TitledDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r18 = interfaceinvoke $r4.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.SplitParam getSplitParam()>();

     label4:
        specialinvoke $r14.<net.sourceforge.plantuml.png.PngSplitter: void <init>(net.sourceforge.plantuml.SuggestedFile,int,int,java.lang.String,int,net.sourceforge.plantuml.SplitParam)>(r0, $i0, $i1, $r17, $i2, $r18);

        r5 = virtualinvoke $r14.<net.sourceforge.plantuml.png.PngSplitter: java.util.List getFiles()>();

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        r7 = interfaceinvoke r5.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r8 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (net.sourceforge.plantuml.security.SFile) $r8;

        $r10 = new net.sourceforge.plantuml.FileImageData;

        specialinvoke $r10.<net.sourceforge.plantuml.FileImageData: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.core.ImageData)>(r9, r11);

        interfaceinvoke $r19.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label5;

     label6:
        return $r19;
    }

    private static java.util.List exportDiagramsDefault(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.SuggestedFile, net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.SuggestedFile r0;
        net.sourceforge.plantuml.security.SFile r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.io.BufferedOutputStream r2;
        net.sourceforge.plantuml.core.Diagram r3;
        net.sourceforge.plantuml.FileFormatOption r4;
        net.sourceforge.plantuml.core.ImageData r5;
        net.sourceforge.plantuml.FileImageData $r6;
        java.util.List $r7, $r11, $r13, $r14;
        net.sourceforge.plantuml.FileFormat $r8, $r9;
        net.sourceforge.plantuml.TitledDiagram $r10;
        net.sourceforge.plantuml.UmlDiagram $r12;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16, $r17, $r18;
        java.lang.String $r19;
        java.lang.Throwable $r20, $r23;

        r3 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r0 := @parameter1: net.sourceforge.plantuml.SuggestedFile;

        r4 := @parameter2: net.sourceforge.plantuml.FileFormatOption;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.SuggestedFile: net.sourceforge.plantuml.security.SFile getFile(int)>(0);

        $z0 = virtualinvoke r1.<net.sourceforge.plantuml.security.SFile: boolean isDirectory()>();

        if $z0 == 0 goto label01;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("File is a directory ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label01:
        $z1 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: boolean canFileBeWritten(net.sourceforge.plantuml.security.SFile)>(r1);

        if $z1 != 0 goto label02;

        $r14 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r14;

     label02:
        r2 = virtualinvoke r1.<net.sourceforge.plantuml.security.SFile: java.io.BufferedOutputStream createBufferedOutputStream()>();

     label03:
        r5 = interfaceinvoke r3.<net.sourceforge.plantuml.core.Diagram: net.sourceforge.plantuml.core.ImageData exportDiagram(java.io.OutputStream,int,net.sourceforge.plantuml.FileFormatOption)>(r2, 0, r4);

     label04:
        if r2 == null goto label10;

        virtualinvoke r2.<java.io.OutputStream: void close()>();

        goto label10;

     label05:
        $r23 := @caughtexception;

        if r2 == null goto label09;

     label06:
        virtualinvoke r2.<java.io.OutputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r20 := @caughtexception;

        virtualinvoke $r23.<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>($r20);

     label09:
        throw $r23;

     label10:
        if r5 != null goto label11;

        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r13;

     label11:
        $z2 = interfaceinvoke r5.<net.sourceforge.plantuml.core.ImageData: boolean containsCMapData()>();

        if $z2 == 0 goto label12;

        $z3 = r3 instanceof net.sourceforge.plantuml.UmlDiagram;

        if $z3 == 0 goto label12;

        $r12 = (net.sourceforge.plantuml.UmlDiagram) r3;

        virtualinvoke $r12.<net.sourceforge.plantuml.UmlDiagram: void exportCmap(net.sourceforge.plantuml.SuggestedFile,int,net.sourceforge.plantuml.core.ImageData)>(r0, 0, r5);

     label12:
        $z4 = r3 instanceof net.sourceforge.plantuml.TitledDiagram;

        if $z4 == 0 goto label13;

        $r8 = virtualinvoke r4.<net.sourceforge.plantuml.FileFormatOption: net.sourceforge.plantuml.FileFormat getFileFormat()>();

        $r9 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat PNG>;

        if $r8 != $r9 goto label13;

        $r10 = (net.sourceforge.plantuml.TitledDiagram) r3;

        $r11 = staticinvoke <net.sourceforge.plantuml.PSystemUtils: java.util.List splitPng(net.sourceforge.plantuml.TitledDiagram,net.sourceforge.plantuml.SuggestedFile,net.sourceforge.plantuml.core.ImageData,net.sourceforge.plantuml.FileFormatOption)>($r10, r0, r5, r4);

        return $r11;

     label13:
        $r6 = new net.sourceforge.plantuml.FileImageData;

        specialinvoke $r6.<net.sourceforge.plantuml.FileImageData: void <init>(net.sourceforge.plantuml.security.SFile,net.sourceforge.plantuml.core.ImageData)>(r1, r5);

        $r7 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r6);

        return $r7;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label06 to label07 with label08;
    }
}
