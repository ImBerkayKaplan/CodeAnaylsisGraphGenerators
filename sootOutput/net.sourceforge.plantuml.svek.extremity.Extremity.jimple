public abstract class net.sourceforge.plantuml.svek.extremity.Extremity extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{

    public void <init>()
    {
        net.sourceforge.plantuml.svek.extremity.Extremity r0;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.Extremity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected double manageround(double)
    {
        double d0, $d1, d2;
        net.sourceforge.plantuml.svek.extremity.Extremity r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.Extremity;

        d0 := @parameter0: double;

        $d1 = d0 * 180.0;

        d2 = $d1 / 3.141592653589793;

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: boolean isCloseTo(double,double)>(0.0, d2);

        if $z0 == 0 goto label1;

        return 0.0;

     label1:
        $z1 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: boolean isCloseTo(double,double)>(90.0, d2);

        if $z1 == 0 goto label2;

        return 1.5707963267948966;

     label2:
        $z2 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: boolean isCloseTo(double,double)>(180.0, d2);

        if $z2 == 0 goto label3;

        return 3.141592653589793;

     label3:
        $z3 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: boolean isCloseTo(double,double)>(270.0, d2);

        if $z3 == 0 goto label4;

        return 4.71238898038469;

     label4:
        $z4 = specialinvoke r0.<net.sourceforge.plantuml.svek.extremity.Extremity: boolean isCloseTo(double,double)>(360.0, d2);

        if $z4 == 0 goto label5;

        return 0.0;

     label5:
        return d0;
    }

    private boolean isCloseTo(double, double)
    {
        double d0, d1, $d2, $d3;
        byte $b0;
        net.sourceforge.plantuml.svek.extremity.Extremity r0;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.Extremity;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $d2 = d0 - d1;

        $d3 = staticinvoke <java.lang.Math: double abs(double)>($d2);

        $b0 = $d3 cmpg 0.05;

        if $b0 >= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public abstract java.awt.geom.Point2D somePoint();

    public java.awt.geom.Point2D isTooSmallSoGiveThePointCloserToThisOne(java.awt.geom.Point2D)
    {
        net.sourceforge.plantuml.svek.extremity.Extremity r0;
        java.awt.geom.Point2D r1;

        r0 := @this: net.sourceforge.plantuml.svek.extremity.Extremity;

        r1 := @parameter0: java.awt.geom.Point2D;

        return null;
    }
}
