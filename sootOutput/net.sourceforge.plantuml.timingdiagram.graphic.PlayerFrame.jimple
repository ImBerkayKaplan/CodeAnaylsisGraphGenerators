public class net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame extends java.lang.Object
{
    private final net.sourceforge.plantuml.ISkinParam skinParam;
    private final net.sourceforge.plantuml.graphic.TextBlock title;

    public void <init>(net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ISkinParam)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame r0;
        net.sourceforge.plantuml.graphic.TextBlock r1;
        net.sourceforge.plantuml.ISkinParam r2;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.TextBlock;

        r2 := @parameter1: net.sourceforge.plantuml.ISkinParam;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.graphic.TextBlock title> = r1;

        r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.ISkinParam skinParam> = r2;

        return;
    }

    private net.sourceforge.plantuml.style.StyleSignature getStyleSignature()
    {
        net.sourceforge.plantuml.style.SName[] $r0;
        net.sourceforge.plantuml.style.SName $r1, $r2, $r3;
        net.sourceforge.plantuml.style.StyleSignature $r4;
        net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame r5;

        r5 := @this: net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame;

        $r0 = newarray (net.sourceforge.plantuml.style.SName)[3];

        $r1 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName root>;

        $r0[0] = $r1;

        $r2 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName element>;

        $r0[1] = $r2;

        $r3 = <net.sourceforge.plantuml.style.SName: net.sourceforge.plantuml.style.SName timingDiagram>;

        $r0[2] = $r3;

        $r4 = staticinvoke <net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.StyleSignature of(net.sourceforge.plantuml.style.SName[])>($r0);

        return $r4;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getLineColor()
    {
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2, $r7, $r9;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style r4;
        net.sourceforge.plantuml.style.PName $r5;
        net.sourceforge.plantuml.style.Value $r6;
        net.sourceforge.plantuml.api.ThemeStyle $r8;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r10;
        net.sourceforge.plantuml.ugraphic.color.HColor $r11;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r12;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r12 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        return $r12;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        $r5 = <net.sourceforge.plantuml.style.PName: net.sourceforge.plantuml.style.PName LineColor>;

        $r6 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.style.Value value(net.sourceforge.plantuml.style.PName)>($r5);

        $r7 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r8 = interfaceinvoke $r7.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r9 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r11 = interfaceinvoke $r6.<net.sourceforge.plantuml.style.Value: net.sourceforge.plantuml.ugraphic.color.HColor asColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r8, $r10);

        return $r11;
    }

    private net.sourceforge.plantuml.ugraphic.UStroke getUStroke()
    {
        boolean $z0;
        net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame r0;
        net.sourceforge.plantuml.style.StyleSignature $r1;
        net.sourceforge.plantuml.ISkinParam $r2;
        net.sourceforge.plantuml.style.StyleBuilder $r3;
        net.sourceforge.plantuml.style.Style r4;
        net.sourceforge.plantuml.ugraphic.UStroke $r5, $r6;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame;

        $z0 = staticinvoke <net.sourceforge.plantuml.UseStyle: boolean useBetaStyle()>();

        if $z0 != 0 goto label1;

        $r6 = new net.sourceforge.plantuml.ugraphic.UStroke;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UStroke: void <init>(double)>(2.0);

        return $r6;

     label1:
        $r1 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.style.StyleSignature getStyleSignature()>();

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.ISkinParam skinParam>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        r4 = virtualinvoke $r1.<net.sourceforge.plantuml.style.StyleSignature: net.sourceforge.plantuml.style.Style getMergedStyle(net.sourceforge.plantuml.style.StyleBuilder)>($r3);

        $r5 = virtualinvoke r4.<net.sourceforge.plantuml.style.Style: net.sourceforge.plantuml.ugraphic.UStroke getStroke()>();

        return $r5;
    }

    public void drawFrameTitle(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame r0;
        net.sourceforge.plantuml.graphic.TextBlock $r1, $r2, $r8;
        net.sourceforge.plantuml.graphic.StringBounder $r3, $r9;
        net.sourceforge.plantuml.awt.geom.Dimension2D r4, $r10;
        net.sourceforge.plantuml.ugraphic.color.HColor $r5;
        net.sourceforge.plantuml.ugraphic.UGraphic $r6, r12, r13;
        net.sourceforge.plantuml.ugraphic.UStroke $r7;
        double $d0, d1, $d2, d3, $d4;
        double[] $r11;

        r0 := @this: net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.graphic.TextBlock title>;

        interfaceinvoke $r1.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r12);

        $r2 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.graphic.TextBlock title>;

        $r3 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r3);

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.ugraphic.color.HColor getLineColor()>();

        $r6 = interfaceinvoke r12.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r5);

        $r7 = specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.ugraphic.UStroke getUStroke()>();

        r13 = interfaceinvoke $r6.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r7);

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        d1 = $d0 + 1.0;

        $r8 = r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: net.sourceforge.plantuml.graphic.TextBlock title>;

        $r9 = interfaceinvoke r13.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r10 = interfaceinvoke $r8.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r9);

        $d2 = virtualinvoke $r10.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d3 = $d2 + 1.0;

        $r11 = newarray (double)[6];

        $r11[0] = -5.0;

        $r11[1] = d3;

        $r11[2] = d1;

        $r11[3] = d3;

        $d4 = d1 + 10.0;

        $r11[4] = $d4;

        $r11[5] = 0.0;

        specialinvoke r0.<net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame: void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic,double[])>(r13, $r11);

        return;
    }

    private transient void drawLine(net.sourceforge.plantuml.ugraphic.UGraphic, double[])
    {
        double[] r0;
        int $i0, $i1, $i2, $i3, $i4, i5;
        double d0, d1, d2, d3, $d4, $d5;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2;
        net.sourceforge.plantuml.ugraphic.ULine $r4;
        net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame r5;

        r5 := @this: net.sourceforge.plantuml.timingdiagram.graphic.PlayerFrame;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: double[];

        i5 = 0;

     label1:
        $i0 = lengthof r0;

        $i1 = $i0 - 2;

        if i5 >= $i1 goto label2;

        d0 = r0[i5];

        $i2 = i5 + 1;

        d1 = r0[$i2];

        $i3 = i5 + 2;

        d2 = r0[$i3];

        $i4 = i5 + 3;

        d3 = r0[$i4];

        $r2 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d1);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        $r4 = new net.sourceforge.plantuml.ugraphic.ULine;

        $d5 = d2 - d0;

        $d4 = d3 - d1;

        specialinvoke $r4.<net.sourceforge.plantuml.ugraphic.ULine: void <init>(double,double)>($d5, $d4);

        interfaceinvoke $r3.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r4);

        i5 = i5 + 2;

        goto label1;

     label2:
        return;
    }
}
