public class net.sourceforge.plantuml.asciiart.ComponentTextLine extends net.sourceforge.plantuml.asciiart.AbstractComponentText
{
    private static final int MAGIC_NUMBER;
    private char using;

    public void <init>(net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextLine r0;
        net.sourceforge.plantuml.FileFormat r1, $r2;
        net.sourceforge.plantuml.skin.ComponentType r3, $r4;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextLine;

        r3 := @parameter0: net.sourceforge.plantuml.skin.ComponentType;

        r1 := @parameter1: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<net.sourceforge.plantuml.asciiart.AbstractComponentText: void <init>()>();

        $r2 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if r1 != $r2 goto label1;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextLine: char using> = 9474;

        goto label2;

     label1:
        r0.<net.sourceforge.plantuml.asciiart.ComponentTextLine: char using> = 124;

     label2:
        $r4 = <net.sourceforge.plantuml.skin.ComponentType: net.sourceforge.plantuml.skin.ComponentType DELAY_LINE>;

        if r3 != $r4 goto label3;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextLine: char using> = 46;

     label3:
        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area, net.sourceforge.plantuml.skin.Context2D)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r3;
        net.sourceforge.plantuml.asciiart.UmlCharArea r4;
        double $d0, $d1;
        int i0, i1, $i2, $i3;
        net.sourceforge.plantuml.asciiart.ComponentTextLine r5;
        char $c4;
        net.sourceforge.plantuml.skin.Context2D r6;

        r5 := @this: net.sourceforge.plantuml.asciiart.ComponentTextLine;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r6 := @parameter2: net.sourceforge.plantuml.skin.Context2D;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r3 = (net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt) r2;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        i0 = (int) $d0;

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        i1 = (int) $d1;

        $c4 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextLine: char using>;

        $i2 = i0 - 1;

        $i3 = $i2 / 2;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawVLine(char,int,int,int)>($c4, $i3, -3, i1);

        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextLine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextLine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 0.0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextLine r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextLine;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 3.0;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.asciiart.ComponentTextLine: int MAGIC_NUMBER> = -3;

        return;
    }
}
