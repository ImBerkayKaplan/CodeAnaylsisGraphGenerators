class net.sourceforge.plantuml.sprite.SpriteSvg$1 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.ugraphic.UImageSvg val$img;
    final double val$scale;
    final net.sourceforge.plantuml.sprite.SpriteSvg this$0;

    void <init>(net.sourceforge.plantuml.sprite.SpriteSvg, net.sourceforge.plantuml.ugraphic.UImageSvg, double)
    {
        net.sourceforge.plantuml.sprite.SpriteSvg$1 r0;
        net.sourceforge.plantuml.sprite.SpriteSvg r1;
        net.sourceforge.plantuml.ugraphic.UImageSvg r2;
        double d0;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteSvg$1;

        r1 := @parameter0: net.sourceforge.plantuml.sprite.SpriteSvg;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UImageSvg;

        d0 := @parameter2: double;

        r0.<net.sourceforge.plantuml.sprite.SpriteSvg$1: net.sourceforge.plantuml.sprite.SpriteSvg this$0> = r1;

        r0.<net.sourceforge.plantuml.sprite.SpriteSvg$1: net.sourceforge.plantuml.ugraphic.UImageSvg val$img> = r2;

        r0.<net.sourceforge.plantuml.sprite.SpriteSvg$1: double val$scale> = d0;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0;
        net.sourceforge.plantuml.sprite.SpriteSvg$1 r1;
        net.sourceforge.plantuml.ugraphic.UImageSvg $r2;

        r1 := @this: net.sourceforge.plantuml.sprite.SpriteSvg$1;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = r1.<net.sourceforge.plantuml.sprite.SpriteSvg$1: net.sourceforge.plantuml.ugraphic.UImageSvg val$img>;

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r2);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.sprite.SpriteSvg$1 r1;
        net.sourceforge.plantuml.ugraphic.UImageSvg $r2, $r3;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        net.sourceforge.plantuml.graphic.StringBounder r4;

        r1 := @this: net.sourceforge.plantuml.sprite.SpriteSvg$1;

        r4 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $r2 = r1.<net.sourceforge.plantuml.sprite.SpriteSvg$1: net.sourceforge.plantuml.ugraphic.UImageSvg val$img>;

        $i0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.UImageSvg: int getWidth()>();

        $d1 = (double) $i0;

        $d0 = r1.<net.sourceforge.plantuml.sprite.SpriteSvg$1: double val$scale>;

        $d2 = $d1 * $d0;

        $r3 = r1.<net.sourceforge.plantuml.sprite.SpriteSvg$1: net.sourceforge.plantuml.ugraphic.UImageSvg val$img>;

        $i1 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.UImageSvg: int getHeight()>();

        $d4 = (double) $i1;

        $d3 = r1.<net.sourceforge.plantuml.sprite.SpriteSvg$1: double val$scale>;

        $d5 = $d4 * $d3;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d2, $d5);

        return $r0;
    }
}
