public class jcckit.data.DataPlot extends jcckit.data.DataContainer
{
    public static final java.lang.String CURVES_KEY;
    public static final java.lang.String DATA_KEY;

    public void <init>()
    {
        jcckit.data.DataPlot r0;

        r0 := @this: jcckit.data.DataPlot;

        specialinvoke r0.<jcckit.data.DataContainer: void <init>()>();

        return;
    }

    public void <init>(jcckit.util.ConfigParameters)
    {
        jcckit.data.DataPlot r0;
        java.util.StringTokenizer $r1;
        jcckit.util.ConfigParameters r2, $r7;
        java.lang.String $r3, $r6;
        boolean $z0;
        jcckit.data.DataCurve $r5;

        r0 := @this: jcckit.data.DataPlot;

        r2 := @parameter0: jcckit.util.ConfigParameters;

        specialinvoke r0.<jcckit.data.DataContainer: void <init>()>();

        $r1 = new java.util.StringTokenizer;

        $r3 = virtualinvoke r2.<jcckit.util.ConfigParameters: java.lang.String get(java.lang.String)>("curves");

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String)>($r3);

     label1:
        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label2;

        $r5 = new jcckit.data.DataCurve;

        $r6 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r7 = virtualinvoke r2.<jcckit.util.ConfigParameters: jcckit.util.ConfigParameters getNode(java.lang.String)>($r6);

        specialinvoke $r5.<jcckit.data.DataCurve: void <init>(jcckit.util.ConfigParameters)>($r7);

        virtualinvoke r0.<jcckit.data.DataPlot: void addElement(jcckit.data.DataElement)>($r5);

        goto label1;

     label2:
        return;
    }

    public static jcckit.data.DataPlot create(jcckit.util.ConfigParameters)
    {
        jcckit.data.DataPlot $r0;
        jcckit.util.ConfigParameters r1, $r2;

        r1 := @parameter0: jcckit.util.ConfigParameters;

        $r0 = new jcckit.data.DataPlot;

        $r2 = virtualinvoke r1.<jcckit.util.ConfigParameters: jcckit.util.ConfigParameters getNode(java.lang.String)>("data");

        specialinvoke $r0.<jcckit.data.DataPlot: void <init>(jcckit.util.ConfigParameters)>($r2);

        return $r0;
    }

    protected boolean isValid(jcckit.data.DataElement)
    {
        jcckit.data.DataElement r0;
        boolean $z0;
        jcckit.data.DataPlot r1;

        r1 := @this: jcckit.data.DataPlot;

        r0 := @parameter0: jcckit.data.DataElement;

        $z0 = r0 instanceof jcckit.data.DataCurve;

        return $z0;
    }

    public static void <clinit>()
    {
        <jcckit.data.DataPlot: java.lang.String DATA_KEY> = "data";

        <jcckit.data.DataPlot: java.lang.String CURVES_KEY> = "curves";

        return;
    }
}
