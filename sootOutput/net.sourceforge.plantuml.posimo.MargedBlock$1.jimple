class net.sourceforge.plantuml.posimo.MargedBlock$1 extends java.lang.Object implements net.sourceforge.plantuml.posimo.Positionable
{
    final net.sourceforge.plantuml.posimo.MargedBlock this$0;

    void <init>(net.sourceforge.plantuml.posimo.MargedBlock)
    {
        net.sourceforge.plantuml.posimo.MargedBlock$1 r0;
        net.sourceforge.plantuml.posimo.MargedBlock r1;

        r0 := @this: net.sourceforge.plantuml.posimo.MargedBlock$1;

        r1 := @parameter0: net.sourceforge.plantuml.posimo.MargedBlock;

        r0.<net.sourceforge.plantuml.posimo.MargedBlock$1: net.sourceforge.plantuml.posimo.MargedBlock this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D getSize()
    {
        net.sourceforge.plantuml.posimo.MargedBlock$1 r0;
        net.sourceforge.plantuml.posimo.MargedBlock $r1;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r2;

        r0 := @this: net.sourceforge.plantuml.posimo.MargedBlock$1;

        $r1 = r0.<net.sourceforge.plantuml.posimo.MargedBlock$1: net.sourceforge.plantuml.posimo.MargedBlock this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.posimo.MargedBlock: net.sourceforge.plantuml.awt.geom.Dimension2D access$000(net.sourceforge.plantuml.posimo.MargedBlock)>($r1);

        return $r2;
    }

    public java.awt.geom.Point2D getPosition()
    {
        net.sourceforge.plantuml.posimo.MargedBlock$1 r0;
        net.sourceforge.plantuml.posimo.MargedBlock $r1, $r5, $r6;
        net.sourceforge.plantuml.posimo.Block $r2;
        java.awt.geom.Point2D r3;
        java.awt.geom.Point2D$Double $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: net.sourceforge.plantuml.posimo.MargedBlock$1;

        $r1 = r0.<net.sourceforge.plantuml.posimo.MargedBlock$1: net.sourceforge.plantuml.posimo.MargedBlock this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.posimo.MargedBlock: net.sourceforge.plantuml.posimo.Block access$100(net.sourceforge.plantuml.posimo.MargedBlock)>($r1);

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.posimo.Block: java.awt.geom.Point2D getPosition()>();

        $r4 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        $r5 = r0.<net.sourceforge.plantuml.posimo.MargedBlock$1: net.sourceforge.plantuml.posimo.MargedBlock this$0>;

        $d1 = staticinvoke <net.sourceforge.plantuml.posimo.MargedBlock: double access$200(net.sourceforge.plantuml.posimo.MargedBlock)>($r5);

        $d2 = $d0 + $d1;

        $d3 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        $r6 = r0.<net.sourceforge.plantuml.posimo.MargedBlock$1: net.sourceforge.plantuml.posimo.MargedBlock this$0>;

        $d4 = staticinvoke <net.sourceforge.plantuml.posimo.MargedBlock: double access$200(net.sourceforge.plantuml.posimo.MargedBlock)>($r6);

        $d5 = $d3 + $d4;

        specialinvoke $r4.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d2, $d5);

        return $r4;
    }

    public void moveSvek(double, double)
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.posimo.MargedBlock$1 r1;
        double d0, d1;

        r1 := @this: net.sourceforge.plantuml.posimo.MargedBlock$1;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }
}
