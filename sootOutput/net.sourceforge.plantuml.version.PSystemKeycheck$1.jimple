class net.sourceforge.plantuml.version.PSystemKeycheck$1 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final net.sourceforge.plantuml.version.PSystemKeycheck this$0;

    void <init>(net.sourceforge.plantuml.version.PSystemKeycheck)
    {
        net.sourceforge.plantuml.version.PSystemKeycheck$1 r0;
        net.sourceforge.plantuml.version.PSystemKeycheck r1;

        r0 := @this: net.sourceforge.plantuml.version.PSystemKeycheck$1;

        r1 := @parameter0: net.sourceforge.plantuml.version.PSystemKeycheck;

        r0.<net.sourceforge.plantuml.version.PSystemKeycheck$1: net.sourceforge.plantuml.version.PSystemKeycheck this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.version.PSystemKeycheck$1 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.version.PSystemKeycheck $r2;
        java.lang.Exception $r3;

        r0 := @this: net.sourceforge.plantuml.version.PSystemKeycheck$1;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.version.PSystemKeycheck$1: net.sourceforge.plantuml.version.PSystemKeycheck this$0>;

        staticinvoke <net.sourceforge.plantuml.version.PSystemKeycheck: void access$000(net.sourceforge.plantuml.version.PSystemKeycheck,net.sourceforge.plantuml.ugraphic.UGraphic)>($r2, r1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        virtualinvoke $r3.<java.lang.Exception: void printStackTrace()>();

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
