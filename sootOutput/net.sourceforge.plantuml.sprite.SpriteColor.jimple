public class net.sourceforge.plantuml.sprite.SpriteColor extends java.lang.Object implements net.sourceforge.plantuml.sprite.Sprite
{
    private final int width;
    private final int height;
    private final int[][] gray;
    private final int[][] color;

    public void <init>(int, int)
    {
        net.sourceforge.plantuml.sprite.SpriteColor r0;
        int i0, i1;
        int[][] $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteColor;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.sprite.SpriteColor: int width> = i0;

        r0.<net.sourceforge.plantuml.sprite.SpriteColor: int height> = i1;

        $r1 = newmultiarray (int)[i1][i0];

        r0.<net.sourceforge.plantuml.sprite.SpriteColor: int[][] gray> = $r1;

        $r2 = newmultiarray (int)[i1][i0];

        r0.<net.sourceforge.plantuml.sprite.SpriteColor: int[][] color> = $r2;

        return;
    }

    public void setGray(int, int, int)
    {
        int i0, $i1, i2, $i3, i4;
        net.sourceforge.plantuml.sprite.SpriteColor r0;
        java.lang.IllegalArgumentException $r1;
        int[][] $r2, $r4;
        int[] $r3, $r5;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteColor;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        if i0 < 0 goto label1;

        $i1 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int width>;

        if i0 < $i1 goto label2;

     label1:
        return;

     label2:
        if i2 < 0 goto label3;

        $i3 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int height>;

        if i2 < $i3 goto label4;

     label3:
        return;

     label4:
        if i4 < 0 goto label5;

        if i4 < 16 goto label6;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label6:
        $r2 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int[][] gray>;

        $r3 = $r2[i2];

        $r3[i0] = i4;

        $r4 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int[][] color>;

        $r5 = $r4[i2];

        $r5[i0] = -1;

        return;
    }

    public void setColor(int, int, int)
    {
        int i0, $i1, i2, $i3, i4;
        net.sourceforge.plantuml.sprite.SpriteColor r0;
        int[][] $r1, $r3;
        int[] $r2, $r4;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteColor;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        i4 := @parameter2: int;

        if i0 < 0 goto label1;

        $i1 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int width>;

        if i0 < $i1 goto label2;

     label1:
        return;

     label2:
        if i2 < 0 goto label3;

        $i3 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int height>;

        if i2 < $i3 goto label4;

     label3:
        return;

     label4:
        $r1 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int[][] gray>;

        $r2 = $r1[i2];

        $r2[i0] = -1;

        $r3 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int[][] color>;

        $r4 = $r3[i2];

        $r4[i0] = i4;

        return;
    }

    public int getHeight()
    {
        net.sourceforge.plantuml.sprite.SpriteColor r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteColor;

        $i0 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int height>;

        return $i0;
    }

    public int getWidth()
    {
        net.sourceforge.plantuml.sprite.SpriteColor r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.sprite.SpriteColor;

        $i0 = r0.<net.sourceforge.plantuml.sprite.SpriteColor: int width>;

        return $i0;
    }

    public net.sourceforge.plantuml.ugraphic.UImage toUImage(net.sourceforge.plantuml.ugraphic.color.ColorMapper, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        java.awt.image.BufferedImage $r0;
        net.sourceforge.plantuml.sprite.SpriteColor r1;
        int $i0, $i1, $i2, i3, $i4, $i5, i6, $i7, i8;
        net.sourceforge.plantuml.ugraphic.color.HColorGradient $r3;
        net.sourceforge.plantuml.ugraphic.UImage $r5;
        net.sourceforge.plantuml.ugraphic.PixelImage $r6;
        net.sourceforge.plantuml.ugraphic.AffineTransformType $r7;
        int[][] $r8, $r10;
        int[] $r9, $r11;
        double $d0, $d1, d2;
        net.sourceforge.plantuml.ugraphic.color.ColorMapper r12;
        java.awt.Color r13;
        net.sourceforge.plantuml.ugraphic.color.HColor r14, r15;

        r1 := @this: net.sourceforge.plantuml.sprite.SpriteColor;

        r12 := @parameter0: net.sourceforge.plantuml.ugraphic.color.ColorMapper;

        r14 := @parameter1: net.sourceforge.plantuml.ugraphic.color.HColor;

        r15 := @parameter2: net.sourceforge.plantuml.ugraphic.color.HColor;

        $r0 = new java.awt.image.BufferedImage;

        $i1 = r1.<net.sourceforge.plantuml.sprite.SpriteColor: int width>;

        $i0 = r1.<net.sourceforge.plantuml.sprite.SpriteColor: int height>;

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i1, $i0, 1);

        if r14 != null goto label1;

        r14 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple WHITE>;

     label1:
        if r15 != null goto label2;

        r15 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

     label2:
        $r3 = new net.sourceforge.plantuml.ugraphic.color.HColorGradient;

        specialinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: void <init>(net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,char)>(r14, r15, 0);

        i6 = 0;

     label3:
        $i7 = r1.<net.sourceforge.plantuml.sprite.SpriteColor: int width>;

        if i6 >= $i7 goto label8;

        i8 = 0;

     label4:
        $i2 = r1.<net.sourceforge.plantuml.sprite.SpriteColor: int height>;

        if i8 >= $i2 goto label7;

        $r8 = r1.<net.sourceforge.plantuml.sprite.SpriteColor: int[][] color>;

        $r9 = $r8[i8];

        i3 = $r9[i6];

        if i3 != -1 goto label5;

        $r10 = r1.<net.sourceforge.plantuml.sprite.SpriteColor: int[][] gray>;

        $r11 = $r10[i8];

        $i4 = $r11[i6];

        $d0 = (double) $i4;

        $d1 = 1.0 * $d0;

        d2 = $d1 / 15.0;

        r13 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.color.HColorGradient: java.awt.Color getColor(net.sourceforge.plantuml.ugraphic.color.ColorMapper,double)>(r12, d2);

        $i5 = virtualinvoke r13.<java.awt.Color: int getRGB()>();

        virtualinvoke $r0.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i6, i8, $i5);

        goto label6;

     label5:
        virtualinvoke $r0.<java.awt.image.BufferedImage: void setRGB(int,int,int)>(i6, i8, i3);

     label6:
        i8 = i8 + 1;

        goto label4;

     label7:
        i6 = i6 + 1;

        goto label3;

     label8:
        $r5 = new net.sourceforge.plantuml.ugraphic.UImage;

        $r6 = new net.sourceforge.plantuml.ugraphic.PixelImage;

        $r7 = <net.sourceforge.plantuml.ugraphic.AffineTransformType: net.sourceforge.plantuml.ugraphic.AffineTransformType TYPE_BILINEAR>;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.PixelImage: void <init>(java.awt.image.BufferedImage,net.sourceforge.plantuml.ugraphic.AffineTransformType)>($r0, $r7);

        specialinvoke $r5.<net.sourceforge.plantuml.ugraphic.UImage: void <init>(net.sourceforge.plantuml.ugraphic.MutableImage)>($r6);

        return $r5;
    }

    public net.sourceforge.plantuml.graphic.TextBlock asTextBlock(net.sourceforge.plantuml.ugraphic.color.HColor, double)
    {
        net.sourceforge.plantuml.sprite.SpriteColor$1 $r0;
        net.sourceforge.plantuml.sprite.SpriteColor r1;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;
        double d0;

        r1 := @this: net.sourceforge.plantuml.sprite.SpriteColor;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.color.HColor;

        d0 := @parameter1: double;

        $r0 = new net.sourceforge.plantuml.sprite.SpriteColor$1;

        specialinvoke $r0.<net.sourceforge.plantuml.sprite.SpriteColor$1: void <init>(net.sourceforge.plantuml.sprite.SpriteColor,net.sourceforge.plantuml.ugraphic.color.HColor,double)>(r1, r2, d0);

        return $r0;
    }
}
