class net.sourceforge.plantuml.argon2.Validation extends java.lang.Object
{

    void <init>()
    {
        net.sourceforge.plantuml.argon2.Validation r0;

        r0 := @this: net.sourceforge.plantuml.argon2.Validation;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void validateInput(net.sourceforge.plantuml.argon2.Argon2)
    {
        net.sourceforge.plantuml.argon2.Argon2 r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        net.sourceforge.plantuml.argon2.exception.Argon2InvalidParameterException $r1;
        java.lang.String r2;

        r0 := @parameter0: net.sourceforge.plantuml.argon2.Argon2;

        r2 = null;

        $i0 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getLanes()>();

        if $i0 >= 1 goto label01;

        r2 = "degree of parallelism cannot be smaller than one";

        goto label11;

     label01:
        $i1 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getLanes()>();

        if $i1 <= 16777216 goto label02;

        r2 = "parallelism cannot be greater than 16777216";

        goto label11;

     label02:
        $i2 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getMemory()>();

        $i3 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getLanes()>();

        $i4 = 2 * $i3;

        if $i2 >= $i4 goto label03;

        r2 = "memory too small";

        goto label11;

     label03:
        $i5 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getIterations()>();

        if $i5 >= 1 goto label04;

        r2 = "number of iterations cannot be less than one";

        goto label11;

     label04:
        $i6 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getIterations()>();

        if $i6 <= 2147483647 goto label05;

        r2 = "number of iterations too high";

        goto label11;

     label05:
        $i7 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getPasswordLength()>();

        if $i7 >= 0 goto label06;

        r2 = "password too short";

        goto label11;

     label06:
        $i8 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getPasswordLength()>();

        if $i8 <= 2147483647 goto label07;

        r2 = "password too long";

        goto label11;

     label07:
        $i9 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getSaltLength()>();

        if $i9 >= 0 goto label08;

        r2 = "salt too short";

        goto label11;

     label08:
        $i10 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getSaltLength()>();

        if $i10 <= 2147483647 goto label09;

        r2 = "salt too long";

        goto label11;

     label09:
        $i11 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getSecretLength()>();

        if $i11 <= 2147483647 goto label10;

        r2 = "secret too long";

        goto label11;

     label10:
        $i12 = virtualinvoke r0.<net.sourceforge.plantuml.argon2.Argon2: int getAdditionalLength()>();

        if $i12 <= 2147483647 goto label11;

        r2 = "additional data too long";

     label11:
        if r2 == null goto label12;

        $r1 = new net.sourceforge.plantuml.argon2.exception.Argon2InvalidParameterException;

        specialinvoke $r1.<net.sourceforge.plantuml.argon2.exception.Argon2InvalidParameterException: void <init>(java.lang.String)>(r2);

        throw $r1;

     label12:
        return;
    }
}
