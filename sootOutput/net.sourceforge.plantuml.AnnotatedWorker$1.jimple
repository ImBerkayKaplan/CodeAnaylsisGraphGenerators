class net.sourceforge.plantuml.AnnotatedWorker$1 extends java.lang.Object implements net.sourceforge.plantuml.svek.TextBlockBackcolored
{
    final net.sourceforge.plantuml.graphic.TextBlock val$frame;
    final net.sourceforge.plantuml.ugraphic.MinMax val$originalMinMax;
    final net.sourceforge.plantuml.graphic.TextBlock val$original;
    final net.sourceforge.plantuml.awt.geom.Dimension2D val$dimTitle;
    final net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext;
    final net.sourceforge.plantuml.AnnotatedWorker this$0;

    void <init>(net.sourceforge.plantuml.AnnotatedWorker, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.ugraphic.MinMax, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.awt.geom.Dimension2D, net.sourceforge.plantuml.graphic.SymbolContext)
    {
        net.sourceforge.plantuml.AnnotatedWorker$1 r0;
        net.sourceforge.plantuml.AnnotatedWorker r1;
        net.sourceforge.plantuml.graphic.TextBlock r2, r4;
        net.sourceforge.plantuml.ugraphic.MinMax r3;
        net.sourceforge.plantuml.awt.geom.Dimension2D r5;
        net.sourceforge.plantuml.graphic.SymbolContext r6;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker$1;

        r1 := @parameter0: net.sourceforge.plantuml.AnnotatedWorker;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.TextBlock;

        r3 := @parameter2: net.sourceforge.plantuml.ugraphic.MinMax;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.TextBlock;

        r5 := @parameter4: net.sourceforge.plantuml.awt.geom.Dimension2D;

        r6 := @parameter5: net.sourceforge.plantuml.graphic.SymbolContext;

        r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.AnnotatedWorker this$0> = r1;

        r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.graphic.TextBlock val$frame> = r2;

        r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.ugraphic.MinMax val$originalMinMax> = r3;

        r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.graphic.TextBlock val$original> = r4;

        r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$dimTitle> = r5;

        r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext> = r6;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.AnnotatedWorker$1 r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r5, $r9;
        net.sourceforge.plantuml.ugraphic.MinMax $r2;
        net.sourceforge.plantuml.graphic.TextBlock $r3, $r8;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.ugraphic.UTranslate $r4, $r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r7;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker$1;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r3 = r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.graphic.TextBlock val$frame>;

        $r2 = r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.ugraphic.MinMax val$originalMinMax>;

        $d0 = virtualinvoke $r2.<net.sourceforge.plantuml.ugraphic.MinMax: double getMinX()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>($d0);

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        interfaceinvoke $r3.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r5);

        $r8 = r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.graphic.TextBlock val$original>;

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $r7 = r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$dimTitle>;

        $d1 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = 10.0 + $d1;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(5.0, $d2);

        $r9 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        interfaceinvoke $r8.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

        return;
    }

    public net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.AnnotatedWorker$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.MinMax $r2;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = staticinvoke <net.sourceforge.plantuml.graphic.TextBlockUtils: net.sourceforge.plantuml.ugraphic.MinMax getMinMax(net.sourceforge.plantuml.graphic.UDrawable,net.sourceforge.plantuml.graphic.StringBounder,boolean)>(r0, r1, 0);

        return $r2;
    }

    public java.awt.geom.Rectangle2D getInnerPosition(java.lang.String, net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.graphic.InnerStrategy)
    {
        net.sourceforge.plantuml.AnnotatedWorker$1 r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.graphic.InnerStrategy r3;
        net.sourceforge.plantuml.graphic.TextBlock $r4;
        java.awt.geom.Rectangle2D r5;
        java.awt.geom.Rectangle2D$Double $r6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r7;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.InnerStrategy;

        $r4 = r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.graphic.TextBlock val$original>;

        r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.graphic.TextBlock: java.awt.geom.Rectangle2D getInnerPosition(java.lang.String,net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.graphic.InnerStrategy)>(r1, r2, r3);

        $r6 = new java.awt.geom.Rectangle2D$Double;

        $d0 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getX()>();

        $d1 = $d0 + 5.0;

        $d2 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getY()>();

        $d3 = $d2 + 10.0;

        $r7 = r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.awt.geom.Dimension2D val$dimTitle>;

        $d4 = virtualinvoke $r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d5 = $d3 + $d4;

        $d6 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d7 = virtualinvoke r5.<java.awt.geom.Rectangle2D: double getHeight()>();

        specialinvoke $r6.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d1, $d5, $d6, $d7);

        return $r6;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.AnnotatedWorker$1 r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.graphic.TextBlock $r2;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r3;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker$1;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r2 = r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.graphic.TextBlock val$original>;

        $r3 = interfaceinvoke $r2.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        return $r3;
    }

    public net.sourceforge.plantuml.ugraphic.color.HColor getBackcolor()
    {
        net.sourceforge.plantuml.AnnotatedWorker$1 r0;
        net.sourceforge.plantuml.graphic.SymbolContext $r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;

        r0 := @this: net.sourceforge.plantuml.AnnotatedWorker$1;

        $r1 = r0.<net.sourceforge.plantuml.AnnotatedWorker$1: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.color.HColor getBackColor()>();

        return $r2;
    }
}
