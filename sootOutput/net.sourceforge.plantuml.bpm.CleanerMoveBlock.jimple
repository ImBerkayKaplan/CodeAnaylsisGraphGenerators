public class net.sourceforge.plantuml.bpm.CleanerMoveBlock extends java.lang.Object implements net.sourceforge.plantuml.bpm.GridCleaner
{

    public void <init>()
    {
        net.sourceforge.plantuml.bpm.CleanerMoveBlock r0;

        r0 := @this: net.sourceforge.plantuml.bpm.CleanerMoveBlock;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean clean(net.sourceforge.plantuml.bpm.Grid)
    {
        net.sourceforge.plantuml.bpm.Grid r0;
        net.sourceforge.plantuml.bpm.Chain $r1;
        java.util.List $r2;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r4;
        net.sourceforge.plantuml.bpm.Line r5;
        net.sourceforge.plantuml.bpm.CleanerMoveBlock r6;

        r6 := @this: net.sourceforge.plantuml.bpm.CleanerMoveBlock;

        r0 := @parameter0: net.sourceforge.plantuml.bpm.Grid;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Chain lines()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.bpm.Chain: java.util.List toList()>();

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.bpm.Line) $r4;

        specialinvoke r6.<net.sourceforge.plantuml.bpm.CleanerMoveBlock: void tryGrid(net.sourceforge.plantuml.bpm.Grid,net.sourceforge.plantuml.bpm.Line)>(r0, r5);

        goto label1;

     label2:
        return 0;
    }

    private void tryGrid(net.sourceforge.plantuml.bpm.Grid, net.sourceforge.plantuml.bpm.Line)
    {
        net.sourceforge.plantuml.bpm.Grid r0;
        net.sourceforge.plantuml.bpm.Chain $r1, $r10;
        java.util.List $r2;
        java.util.Iterator r3;
        java.lang.Object $r4, $r17;
        net.sourceforge.plantuml.bpm.Col r5, r12;
        net.sourceforge.plantuml.bpm.Line r6;
        net.sourceforge.plantuml.bpm.Cell $r7, $r13;
        net.sourceforge.plantuml.bpm.Placeable r8, r14;
        boolean $z0, $z1, $z2, $z3, $z4;
        net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty r9, r15;
        net.sourceforge.plantuml.bpm.Navigator r11;
        net.sourceforge.plantuml.bpm.CleanerMoveBlock r16;
        int i0;

        r16 := @this: net.sourceforge.plantuml.bpm.CleanerMoveBlock;

        r0 := @parameter0: net.sourceforge.plantuml.bpm.Grid;

        r6 := @parameter1: net.sourceforge.plantuml.bpm.Line;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Chain cols()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.bpm.Chain: java.util.List toList()>();

        r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z4 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (net.sourceforge.plantuml.bpm.Col) $r4;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Line,net.sourceforge.plantuml.bpm.Col)>(r6, r5);

        r8 = virtualinvoke $r7.<net.sourceforge.plantuml.bpm.Cell: net.sourceforge.plantuml.bpm.Placeable getData()>();

        $z0 = r8 instanceof net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        if $z0 != 0 goto label02;

        goto label01;

     label02:
        r9 = (net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty) r8;

        $z1 = virtualinvoke r9.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: boolean checkDirections(java.lang.String)>("NS");

        if $z1 != 0 goto label03;

        goto label01;

     label03:
        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Chain cols()>();

        r11 = interfaceinvoke $r10.<net.sourceforge.plantuml.bpm.Chain: net.sourceforge.plantuml.bpm.Navigator navigator(java.lang.Object)>(r5);

        i0 = 0;

     label04:
        $r17 = interfaceinvoke r11.<net.sourceforge.plantuml.bpm.Navigator: java.lang.Object next()>();

        r12 = (net.sourceforge.plantuml.bpm.Col) $r17;

        i0 = i0 + 1;

        if r12 != null goto label05;

        goto label10;

     label05:
        if r5 != r12 goto label06;

        goto label04;

     label06:
        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.Grid: net.sourceforge.plantuml.bpm.Cell getCell(net.sourceforge.plantuml.bpm.Line,net.sourceforge.plantuml.bpm.Col)>(r6, r12);

        r14 = virtualinvoke $r13.<net.sourceforge.plantuml.bpm.Cell: net.sourceforge.plantuml.bpm.Placeable getData()>();

        if r14 != null goto label07;

        goto label04;

     label07:
        $z2 = r14 instanceof net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty;

        if $z2 != 0 goto label08;

        goto label10;

     label08:
        r15 = (net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty) r14;

        $z3 = virtualinvoke r15.<net.sourceforge.plantuml.bpm.ConnectorPuzzleEmpty: boolean checkDirections(java.lang.String)>("NS");

        if $z3 != 0 goto label09;

        goto label04;

     label09:
        if i0 <= 1 goto label10;

        specialinvoke r16.<net.sourceforge.plantuml.bpm.CleanerMoveBlock: void tryBridge(net.sourceforge.plantuml.bpm.Line,net.sourceforge.plantuml.bpm.Col,net.sourceforge.plantuml.bpm.Col)>(r6, r5, r12);

        goto label10;

     label10:
        goto label01;

     label11:
        return;
    }

    private void tryBridge(net.sourceforge.plantuml.bpm.Line, net.sourceforge.plantuml.bpm.Col, net.sourceforge.plantuml.bpm.Col)
    {
        net.sourceforge.plantuml.bpm.CleanerMoveBlock r0;
        net.sourceforge.plantuml.bpm.Line r1;
        net.sourceforge.plantuml.bpm.Col r2, r3;

        r0 := @this: net.sourceforge.plantuml.bpm.CleanerMoveBlock;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.Line;

        r2 := @parameter1: net.sourceforge.plantuml.bpm.Col;

        r3 := @parameter2: net.sourceforge.plantuml.bpm.Col;

        return;
    }
}
