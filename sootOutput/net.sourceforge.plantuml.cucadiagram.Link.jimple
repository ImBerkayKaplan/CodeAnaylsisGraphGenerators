public class net.sourceforge.plantuml.cucadiagram.Link extends net.sourceforge.plantuml.cucadiagram.WithLinkType implements net.sourceforge.plantuml.Hideable, net.sourceforge.plantuml.Removeable
{
    private final net.sourceforge.plantuml.cucadiagram.IEntity cl1;
    private final net.sourceforge.plantuml.cucadiagram.IEntity cl2;
    private java.lang.String port1;
    private java.lang.String port2;
    private final net.sourceforge.plantuml.cucadiagram.Display label;
    private int length;
    private final java.lang.String qualifier1;
    private final java.lang.String qualifier2;
    private final java.lang.String uid;
    private net.sourceforge.plantuml.cucadiagram.Display note;
    private net.sourceforge.plantuml.command.Position notePosition;
    private net.sourceforge.plantuml.graphic.color.Colors noteColors;
    private net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy noteLinkStrategy;
    private boolean invis;
    private double weight;
    private final java.lang.String labeldistance;
    private final java.lang.String labelangle;
    private boolean constraint;
    private boolean inverted;
    private net.sourceforge.plantuml.cucadiagram.LinkArrow linkArrow;
    private boolean opale;
    private boolean horizontalSolitary;
    private java.lang.String sametail;
    private net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier;
    private final net.sourceforge.plantuml.style.StyleBuilder styleBuilder;
    private net.sourceforge.plantuml.cucadiagram.Stereotype stereotype;
    private net.sourceforge.plantuml.Url url;
    private net.sourceforge.plantuml.UmlDiagramType umlType;
    private net.sourceforge.plantuml.cucadiagram.LinkConstraint linkConstraint;
    private net.sourceforge.plantuml.LineLocation codeLine;

    public final net.sourceforge.plantuml.style.StyleBuilder getStyleBuilder()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.style.StyleBuilder $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        return $r1;
    }

    public java.lang.String idCommentForSvg()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1, $r2;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r6, $r7, $r10, $r12, $r15, $r16, $r19, $r21, $r24, $r25, $r28;
        net.sourceforge.plantuml.cucadiagram.IEntity $r4, $r8, $r13, $r17, $r22, $r26;
        java.lang.String $r5, $r9, $r11, $r14, $r18, $r20, $r23, $r27, $r29;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: boolean looksLikeRevertedForSvg()>();

        if $z0 == 0 goto label1;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r23 = interfaceinvoke $r22.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-backto-");

        $r26 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r27 = interfaceinvoke $r26.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r29;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        $z1 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.LinkType: boolean looksLikeNoDecorAtAllSvg()>();

        if $z1 == 0 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r17 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r18 = interfaceinvoke $r17.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;

     label2:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-to-");

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public net.sourceforge.plantuml.ugraphic.UComment commentForSvg()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UComment $r2, $r13;
        java.lang.StringBuilder $r3, $r4, $r7, $r8, $r11, $r14, $r15, $r18, $r19, $r22;
        net.sourceforge.plantuml.cucadiagram.IEntity $r5, $r9, $r16, $r20;
        java.lang.String $r6, $r10, $r12, $r17, $r21, $r23;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: boolean looksLikeRevertedForSvg()>();

        if $z0 == 0 goto label1;

        $r13 = new net.sourceforge.plantuml.ugraphic.UComment;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reverse link ");

        $r16 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r17 = interfaceinvoke $r16.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r20 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r21 = interfaceinvoke $r20.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UComment: void <init>(java.lang.String)>($r23);

        return $r13;

     label1:
        $r2 = new net.sourceforge.plantuml.ugraphic.UComment;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("link ");

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r6 = interfaceinvoke $r5.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.cucadiagram.IEntity: java.lang.String getCodeGetName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<net.sourceforge.plantuml.ugraphic.UComment: void <init>(java.lang.String)>($r12);

        return $r2;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.cucadiagram.LinkType, net.sourceforge.plantuml.cucadiagram.Display, int, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity r1, r2;
        net.sourceforge.plantuml.cucadiagram.LinkType r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        int i0;
        net.sourceforge.plantuml.style.StyleBuilder r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.IEntity;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.LinkType;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        i0 := @parameter4: int;

        r5 := @parameter5: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.style.StyleBuilder)>(r1, r2, r3, r4, i0, null, null, null, null, null, r5);

        return;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.cucadiagram.LinkType, net.sourceforge.plantuml.cucadiagram.Display, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity r1, r2;
        net.sourceforge.plantuml.cucadiagram.LinkType r3;
        net.sourceforge.plantuml.cucadiagram.Display r4;
        int i0;
        java.lang.String r5, r6, r7, r8;
        net.sourceforge.plantuml.style.StyleBuilder r9;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.IEntity;

        r3 := @parameter2: net.sourceforge.plantuml.cucadiagram.LinkType;

        r4 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        i0 := @parameter4: int;

        r5 := @parameter5: java.lang.String;

        r6 := @parameter6: java.lang.String;

        r7 := @parameter7: java.lang.String;

        r8 := @parameter8: java.lang.String;

        r9 := @parameter9: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.style.StyleBuilder)>(r1, r2, r3, r4, i0, r5, r6, r7, r8, null, r9);

        return;
    }

    public void <init>(net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.cucadiagram.LinkType, net.sourceforge.plantuml.cucadiagram.Display, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.style.StyleBuilder)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        int $i0, i1;
        java.lang.String $r4, r17, r18, r19, r20;
        net.sourceforge.plantuml.cucadiagram.LinkArrow $r5;
        net.sourceforge.plantuml.style.StyleBuilder r6;
        net.sourceforge.plantuml.cucadiagram.IEntity r7, $r9, r10, $r12;
        java.lang.Object $r8, $r11;
        net.sourceforge.plantuml.cucadiagram.LinkType r13;
        net.sourceforge.plantuml.cucadiagram.Display r14, $r15, $r26;
        boolean $z0, $z1;
        java.lang.CharSequence $r16, $r24;
        net.sourceforge.plantuml.ugraphic.color.HColor r21;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r22, $r23;
        net.sourceforge.plantuml.skin.VisibilityModifier $r25;
        java.lang.IllegalArgumentException $r27;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r7 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        r10 := @parameter1: net.sourceforge.plantuml.cucadiagram.IEntity;

        r13 := @parameter2: net.sourceforge.plantuml.cucadiagram.LinkType;

        r14 := @parameter3: net.sourceforge.plantuml.cucadiagram.Display;

        i1 := @parameter4: int;

        r17 := @parameter5: java.lang.String;

        r18 := @parameter6: java.lang.String;

        r19 := @parameter7: java.lang.String;

        r20 := @parameter8: java.lang.String;

        r21 := @parameter9: net.sourceforge.plantuml.ugraphic.color.HColor;

        r6 := @parameter10: net.sourceforge.plantuml.style.StyleBuilder;

        specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.WithLinkType: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LNK");

        $i0 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: int getValue()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String uid> = $r4;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean invis> = 0;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: double weight> = 1.0;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean constraint> = 1;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean inverted> = 0;

        $r5 = <net.sourceforge.plantuml.cucadiagram.LinkArrow: net.sourceforge.plantuml.cucadiagram.LinkArrow NONE_OR_SEVERAL>;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkArrow linkArrow> = $r5;

        if i1 >= 1 goto label1;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r27;

     label1:
        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.style.StyleBuilder styleBuilder> = r6;

        $r8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r7);

        $r9 = (net.sourceforge.plantuml.cucadiagram.IEntity) $r8;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1> = $r9;

        $r11 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r10);

        $r12 = (net.sourceforge.plantuml.cucadiagram.IEntity) $r11;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2> = $r12;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType type> = r13;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>(r14);

        if $z0 == 0 goto label2;

        $r26 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display label> = $r26;

        goto label3;

     label2:
        $r15 = virtualinvoke r14.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display manageGuillemet()>();

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display label> = $r15;

        $r16 = virtualinvoke r14.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $z1 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: boolean isVisibilityCharacter(java.lang.CharSequence)>($r16);

        if $z1 == 0 goto label3;

        $r24 = virtualinvoke r14.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $r25 = staticinvoke <net.sourceforge.plantuml.skin.VisibilityModifier: net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier(java.lang.CharSequence,boolean)>($r24, 0);

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier> = $r25;

     label3:
        r0.<net.sourceforge.plantuml.cucadiagram.Link: int length> = i1;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String qualifier1> = r17;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String qualifier2> = r18;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String labeldistance> = r19;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String labelangle> = r20;

        virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: void setSpecificColor(net.sourceforge.plantuml.ugraphic.color.HColor)>(r21);

        if r17 == null goto label4;

        $r23 = (net.sourceforge.plantuml.cucadiagram.ILeaf) r7;

        interfaceinvoke $r23.<net.sourceforge.plantuml.cucadiagram.ILeaf: void setNearDecoration(boolean)>(1);

     label4:
        if r18 == null goto label5;

        $r22 = (net.sourceforge.plantuml.cucadiagram.ILeaf) r10;

        interfaceinvoke $r22.<net.sourceforge.plantuml.cucadiagram.ILeaf: void setNearDecoration(boolean)>(1);

     label5:
        return;
    }

    public net.sourceforge.plantuml.cucadiagram.Link getInv()
    {
        net.sourceforge.plantuml.cucadiagram.Link $r0, r1;
        net.sourceforge.plantuml.cucadiagram.IEntity $r2, $r3;
        net.sourceforge.plantuml.cucadiagram.LinkType $r4, $r5;
        net.sourceforge.plantuml.cucadiagram.Display $r6;
        int $i0;
        java.lang.String $r7, $r8, $r9, $r10, $r14, $r15;
        net.sourceforge.plantuml.ugraphic.color.HColor $r11;
        net.sourceforge.plantuml.style.StyleBuilder $r12;
        boolean $z0, $z1;
        net.sourceforge.plantuml.Url $r16;
        net.sourceforge.plantuml.cucadiagram.LinkConstraint $r17;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r18;
        net.sourceforge.plantuml.skin.VisibilityModifier $r19;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r0 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r4 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        $r5 = virtualinvoke $r4.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType getInversed()>();

        $r6 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display label>;

        $i0 = r1.<net.sourceforge.plantuml.cucadiagram.Link: int length>;

        $r7 = r1.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String qualifier2>;

        $r8 = r1.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String qualifier1>;

        $r9 = r1.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String labeldistance>;

        $r10 = r1.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String labelangle>;

        $r11 = virtualinvoke r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.ugraphic.color.HColor getSpecificColor()>();

        $r12 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.style.StyleBuilder styleBuilder>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.style.StyleBuilder)>($r2, $r3, $r5, $r6, $i0, $r7, $r8, $r9, $r10, $r11, $r12);

        $z0 = r1.<net.sourceforge.plantuml.cucadiagram.Link: boolean inverted>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        $r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean inverted> = $z1;

        $r14 = r1.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String port2>;

        $r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String port1> = $r14;

        $r15 = r1.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String port1>;

        $r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String port2> = $r15;

        $r16 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.Url url>;

        $r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.Url url> = $r16;

        $r17 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkConstraint linkConstraint>;

        $r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkConstraint linkConstraint> = $r17;

        $r18 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        $r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype> = $r18;

        $r19 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        $r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier> = $r19;

        return $r0;
    }

    public void goNorank()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: void setConstraint(boolean)>(0);

        return;
    }

    public java.lang.String getLabeldistance()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String labeldistance>;

        return $r1;
    }

    public java.lang.String getLabelangle()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String labelangle>;

        return $r1;
    }

    public java.lang.String getUid()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String uid>;

        return $r1;
    }

    public final boolean isInvis()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.LinkType $r1;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.cucadiagram.LinkType: boolean isInvisible()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean invis>;

        return $z1;
    }

    public final void setInvis(boolean)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean invis> = z0;

        return;
    }

    public boolean isBetween(net.sourceforge.plantuml.cucadiagram.IEntity, net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.IEntity r0, $r2, $r3, r4, $r5, $r6;
        net.sourceforge.plantuml.cucadiagram.Link r1;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        r4 := @parameter1: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r6 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $z3 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label1;

        return 1;

     label1:
        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r5 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3, $r4, $r5, $r6, $r8, $r9, $r11;
        net.sourceforge.plantuml.cucadiagram.Link r1;
        java.lang.String $r2, $r12;
        int $i0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r7, $r10;

        r1 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $i0 = r1.<net.sourceforge.plantuml.cucadiagram.Link: int length>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("} ");

        $r7 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-->");

        $r10 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        return $r1;
    }

    public net.sourceforge.plantuml.cucadiagram.EntityPort getEntityPort1(net.sourceforge.plantuml.svek.Bibliotekon)
    {
        net.sourceforge.plantuml.cucadiagram.EntityPort $r0;
        net.sourceforge.plantuml.svek.Bibliotekon r1;
        net.sourceforge.plantuml.cucadiagram.Link r2;
        net.sourceforge.plantuml.cucadiagram.IEntity $r3;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r4;
        java.lang.String $r5, $r6;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.svek.Bibliotekon;

        $r0 = new net.sourceforge.plantuml.cucadiagram.EntityPort;

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.svek.Bibliotekon: java.lang.String getNodeUid(net.sourceforge.plantuml.cucadiagram.ILeaf)>($r4);

        $r6 = r2.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String port1>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.EntityPort: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.EntityPort getEntityPort2(net.sourceforge.plantuml.svek.Bibliotekon)
    {
        net.sourceforge.plantuml.cucadiagram.EntityPort $r0;
        net.sourceforge.plantuml.svek.Bibliotekon r1;
        net.sourceforge.plantuml.cucadiagram.Link r2;
        net.sourceforge.plantuml.cucadiagram.IEntity $r3;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r4;
        java.lang.String $r5, $r6;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.svek.Bibliotekon;

        $r0 = new net.sourceforge.plantuml.cucadiagram.EntityPort;

        $r3 = r2.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        $r5 = virtualinvoke r1.<net.sourceforge.plantuml.svek.Bibliotekon: java.lang.String getNodeUid(net.sourceforge.plantuml.cucadiagram.ILeaf)>($r4);

        $r6 = r2.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String port2>;

        specialinvoke $r0.<net.sourceforge.plantuml.cucadiagram.EntityPort: void <init>(java.lang.String,java.lang.String)>($r5, $r6);

        return $r0;
    }

    public net.sourceforge.plantuml.cucadiagram.LinkType getType()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean $z0;
        java.lang.String $r1;
        net.sourceforge.plantuml.cucadiagram.LinkType r2, $r3, $r6;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r4, $r5, $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean opale>;

        if $z0 == 0 goto label1;

        $r6 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        $r8 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        $r7 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        specialinvoke $r6.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r8, $r7);

        return $r6;

     label1:
        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String getSametail()>();

        if $r1 == null goto label2;

        $r3 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        $r5 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        $r4 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        specialinvoke $r3.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r5, $r4);

        return $r3;

     label2:
        r2 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        return r2;
    }

    private boolean isReallyGroup(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.IEntity r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.IGroup r1;
        java.util.Collection $r2, $r3;
        int $i0, $i1, $i2;
        net.sourceforge.plantuml.cucadiagram.Link r4;

        r4 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $z0 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isGroup()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (net.sourceforge.plantuml.cucadiagram.IGroup) r0;

        $r2 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: java.util.Collection getChildren()>();

        $i0 = interfaceinvoke $r2.<java.util.Collection: int size()>();

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.cucadiagram.IGroup: java.util.Collection getLeafsDirect()>();

        $i1 = interfaceinvoke $r3.<java.util.Collection: int size()>();

        $i2 = $i0 + $i1;

        if $i2 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public net.sourceforge.plantuml.cucadiagram.LinkType getTypePatchCluster()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, $r2;
        boolean $z0, $z1;
        net.sourceforge.plantuml.cucadiagram.LinkType r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $z0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean isReallyGroup(net.sourceforge.plantuml.cucadiagram.IEntity)>($r1);

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withoutDecors2()>();

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $z1 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean isReallyGroup(net.sourceforge.plantuml.cucadiagram.IEntity)>($r2);

        if $z1 == 0 goto label2;

        r3 = virtualinvoke r3.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType withoutDecors1()>();

     label2:
        return r3;
    }

    private net.sourceforge.plantuml.cucadiagram.LinkType getTypeSpecialForPrinting()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.LinkType r1, $r2;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean opale>;

        if $z0 == 0 goto label1;

        $r2 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        $r4 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        $r3 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        specialinvoke $r2.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r4, $r3);

        return $r2;

     label1:
        r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType type>;

        return r1;
    }

    private boolean isLollipopInterfaceEye(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.IEntity r0;
        net.sourceforge.plantuml.graphic.USymbol $r1;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.Link r2;

        r2 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r0 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r1 = interfaceinvoke r0.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.graphic.USymbol getUSymbol()>();

        $z0 = $r1 instanceof net.sourceforge.plantuml.graphic.USymbolInterface;

        return $z0;
    }

    public net.sourceforge.plantuml.cucadiagram.Display getLabel()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display label>;

        return $r1;
    }

    public int getLength()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $i0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: int length>;

        return $i0;
    }

    public final void setLength(int)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        int i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        i0 := @parameter0: int;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: int length> = i0;

        return;
    }

    public java.lang.String getQualifier1()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String qualifier1>;

        return $r1;
    }

    public java.lang.String getQualifier2()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String qualifier2>;

        return $r1;
    }

    public final double getWeight()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        double $d0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $d0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: double weight>;

        return $d0;
    }

    public final void setWeight(double)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        double d0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        d0 := @parameter0: double;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: double weight> = d0;

        return;
    }

    public final net.sourceforge.plantuml.cucadiagram.Display getNote()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display note>;

        return $r1;
    }

    public final net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy getNoteLinkStrategy()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy noteLinkStrategy>;

        return $r1;
    }

    public final net.sourceforge.plantuml.graphic.color.Colors getNoteColors()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.graphic.color.Colors $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors noteColors>;

        return $r1;
    }

    public final net.sourceforge.plantuml.command.Position getNotePosition()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.command.Position $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.command.Position notePosition>;

        return $r1;
    }

    public final void addNote(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.command.Position, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.command.Position r2;
        net.sourceforge.plantuml.graphic.color.Colors r3;
        net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy $r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter1: net.sourceforge.plantuml.command.Position;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.color.Colors;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display note> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.command.Position notePosition> = r2;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors noteColors> = r3;

        $r4 = <net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy: net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy NORMAL>;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy noteLinkStrategy> = $r4;

        return;
    }

    public final void addNoteFrom(net.sourceforge.plantuml.cucadiagram.Link, net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0, r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;
        net.sourceforge.plantuml.command.Position $r3;
        net.sourceforge.plantuml.graphic.color.Colors $r4;
        net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Link;

        r5 := @parameter1: net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display note>;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display note> = $r2;

        $r3 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.command.Position notePosition>;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.command.Position notePosition> = $r3;

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors noteColors>;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.graphic.color.Colors noteColors> = $r4;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.NoteLinkStrategy noteLinkStrategy> = r5;

        return;
    }

    public boolean isAutoLinkOfAGroup()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $z0 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isGroup()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isGroup()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        if $r3 != $r4 goto label3;

        return 1;

     label3:
        return 0;
    }

    public boolean containsType(net.sourceforge.plantuml.cucadiagram.LeafType)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, $r4;
        net.sourceforge.plantuml.cucadiagram.LeafType $r2, r3, $r5;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r3 := @parameter0: net.sourceforge.plantuml.cucadiagram.LeafType;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        if $r2 == r3 goto label1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.LeafType getLeafType()>();

        if $r5 != r3 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public boolean contains(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, r2, $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        if $r1 == r2 goto label1;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        if $r3 != r2 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public net.sourceforge.plantuml.cucadiagram.IEntity getOther(net.sourceforge.plantuml.cucadiagram.IEntity)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, r2, $r3, $r5, $r6;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.IEntity;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        if $r1 != r2 goto label1;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        return $r6;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        if $r3 != r2 goto label2;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        return $r5;

     label2:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    public double getMarginDecors1(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UFont r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        java.lang.String $r4;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.cucadiagram.LinkType $r5;
        net.sourceforge.plantuml.cucadiagram.LinkDecor r6;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String qualifier1>;

        d0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: double getQualifierMargin(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ugraphic.UFont,java.lang.String,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecor1()>();

        $i0 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.LinkDecor: int getMargin()>();

        $d1 = (double) $i0;

        $d2 = $d1 + d0;

        return $d2;
    }

    public double getMarginDecors2(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ugraphic.UFont, net.sourceforge.plantuml.ISkinSimple)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.ugraphic.UFont r2;
        net.sourceforge.plantuml.ISkinSimple r3;
        java.lang.String $r4;
        double d0, $d1, $d2;
        net.sourceforge.plantuml.cucadiagram.LinkType $r5;
        net.sourceforge.plantuml.cucadiagram.LinkDecor r6;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r2 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        r3 := @parameter2: net.sourceforge.plantuml.ISkinSimple;

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String qualifier2>;

        d0 = specialinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: double getQualifierMargin(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ugraphic.UFont,java.lang.String,net.sourceforge.plantuml.ISkinSimple)>(r1, r2, $r4, r3);

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkType getType()>();

        r6 = virtualinvoke $r5.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkDecor getDecor2()>();

        $i0 = virtualinvoke r6.<net.sourceforge.plantuml.cucadiagram.LinkDecor: int getMargin()>();

        $d1 = (double) $i0;

        $d2 = $d1 + d0;

        return $d2;
    }

    private double getQualifierMargin(net.sourceforge.plantuml.graphic.StringBounder, net.sourceforge.plantuml.ugraphic.UFont, java.lang.String, net.sourceforge.plantuml.ISkinSimple)
    {
        java.lang.String r0;
        java.lang.CharSequence[] $r1;
        net.sourceforge.plantuml.cucadiagram.Display $r2;
        net.sourceforge.plantuml.ugraphic.UFont r3;
        net.sourceforge.plantuml.graphic.FontConfiguration $r4;
        net.sourceforge.plantuml.ISkinSimple r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r6;
        net.sourceforge.plantuml.graphic.TextBlock r7;
        net.sourceforge.plantuml.graphic.StringBounder r8;
        net.sourceforge.plantuml.awt.geom.Dimension2D r9;
        double $d0, $d1, $d2;
        net.sourceforge.plantuml.cucadiagram.Link r10;

        r10 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r8 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        r3 := @parameter1: net.sourceforge.plantuml.ugraphic.UFont;

        r0 := @parameter2: java.lang.String;

        r5 := @parameter3: net.sourceforge.plantuml.ISkinSimple;

        if r0 == null goto label1;

        $r1 = newarray (java.lang.CharSequence)[1];

        $r1[0] = r0;

        $r2 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display create(java.lang.CharSequence[])>($r1);

        $r4 = staticinvoke <net.sourceforge.plantuml.graphic.FontConfiguration: net.sourceforge.plantuml.graphic.FontConfiguration blackBlueTrue(net.sourceforge.plantuml.ugraphic.UFont)>(r3);

        $r6 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        r7 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r4, $r6, r5);

        r9 = interfaceinvoke r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r8);

        $d0 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d2 = staticinvoke <java.lang.Math: double max(double,double)>($d0, $d1);

        return $d2;

     label1:
        return 0.0;
    }

    public final boolean isConstraint()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean constraint>;

        return $z0;
    }

    public final void setConstraint(boolean)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean constraint> = z0;

        return;
    }

    public void setOpale(boolean)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean opale> = z0;

        return;
    }

    public final void setHorizontalSolitary(boolean)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        z0 := @parameter0: boolean;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean horizontalSolitary> = z0;

        return;
    }

    public final boolean isHorizontalSolitary()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean horizontalSolitary>;

        return $z0;
    }

    public final net.sourceforge.plantuml.cucadiagram.LinkArrow getLinkArrow()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean $z0;
        net.sourceforge.plantuml.cucadiagram.LinkArrow $r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean inverted>;

        if $z0 == 0 goto label1;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkArrow linkArrow>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.cucadiagram.LinkArrow: net.sourceforge.plantuml.cucadiagram.LinkArrow reverse()>();

        return $r3;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkArrow linkArrow>;

        return $r1;
    }

    public final void setLinkArrow(net.sourceforge.plantuml.cucadiagram.LinkArrow)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.LinkArrow r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.LinkArrow;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkArrow linkArrow> = r1;

        return;
    }

    public final boolean isInverted()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean inverted>;

        return $z0;
    }

    public boolean hasEntryPoint()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, $r2, $r3, $r7;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r4, $r8;
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r5, $r6, $r9, $r10;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $z0 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isGroup()>();

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r8 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r7;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.EntityPosition getEntityPosition()>();

        $r10 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        if $r9 != $r10 goto label2;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isGroup()>();

        if $z1 != 0 goto label3;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.EntityPosition getEntityPosition()>();

        $r6 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        if $r5 == $r6 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public boolean hasTwoEntryPointsSameContainer()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, $r2, $r3, $r7, $r11, $r13;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r4, $r8;
        net.sourceforge.plantuml.cucadiagram.EntityPosition $r5, $r6, $r9, $r10;
        net.sourceforge.plantuml.cucadiagram.IGroup $r12, $r14;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $z0 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isGroup()>();

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isGroup()>();

        if $z1 != 0 goto label1;

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.EntityPosition getEntityPosition()>();

        $r6 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        if $r5 == $r6 goto label1;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r8 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r7;

        $r9 = interfaceinvoke $r8.<net.sourceforge.plantuml.cucadiagram.ILeaf: net.sourceforge.plantuml.cucadiagram.EntityPosition getEntityPosition()>();

        $r10 = <net.sourceforge.plantuml.cucadiagram.EntityPosition: net.sourceforge.plantuml.cucadiagram.EntityPosition NORMAL>;

        if $r9 == $r10 goto label1;

        $r11 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity1()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        $r13 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity getEntity2()>();

        $r14 = interfaceinvoke $r13.<net.sourceforge.plantuml.cucadiagram.IEntity: net.sourceforge.plantuml.cucadiagram.IGroup getParentContainer()>();

        if $r12 != $r14 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public net.sourceforge.plantuml.Url getUrl()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.Url $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.Url url>;

        return $r1;
    }

    public void setUrl(net.sourceforge.plantuml.Url)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.Url r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.Url;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.Url url> = r1;

        return;
    }

    public boolean isHidden()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $z0 = r0.<net.sourceforge.plantuml.cucadiagram.Link: boolean hidden>;

        if $z0 != 0 goto label1;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $z1 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isHidden()>();

        if $z1 != 0 goto label1;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $z2 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isHidden()>();

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean sameConnections(net.sourceforge.plantuml.cucadiagram.Link)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0, r1;
        net.sourceforge.plantuml.cucadiagram.IEntity $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Link;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        if $r3 != $r2 goto label1;

        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $r8 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        if $r9 != $r8 goto label1;

        return 1;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        if $r5 != $r4 goto label2;

        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $r6 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        if $r7 != $r6 goto label2;

        return 1;

     label2:
        return 0;
    }

    public boolean doesTouch(net.sourceforge.plantuml.cucadiagram.Link)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0, r1;
        net.sourceforge.plantuml.cucadiagram.IEntity $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Link;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r2 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        if $r3 != $r2 goto label1;

        return 1;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r4 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        if $r5 != $r4 goto label2;

        return 1;

     label2:
        $r7 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $r6 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        if $r7 != $r6 goto label3;

        return 1;

     label3:
        $r9 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $r8 = r1.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        if $r9 != $r8 goto label4;

        return 1;

     label4:
        return 0;
    }

    public boolean isAutolink()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isRemoved()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.IEntity $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $z0 = interfaceinvoke $r1.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isRemoved()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $z1 = interfaceinvoke $r2.<net.sourceforge.plantuml.cucadiagram.IEntity: boolean isRemoved()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean hasUrl()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r3;
        boolean $z0, $z1, $z2;
        net.sourceforge.plantuml.Url $r2;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display label>;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Display label>;

        $z1 = virtualinvoke $r3.<net.sourceforge.plantuml.cucadiagram.Display: boolean hasUrl()>();

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.Url getUrl()>();

        if $r2 == null goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public java.lang.String getSametail()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.String $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String sametail>;

        return $r1;
    }

    public void setSametail(java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.String r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: java.lang.String;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String sametail> = r1;

        return;
    }

    public void setPortMembers(java.lang.String, java.lang.String)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        java.lang.String r1, r2;
        net.sourceforge.plantuml.cucadiagram.IEntity $r3, $r5;
        net.sourceforge.plantuml.cucadiagram.ILeaf $r4, $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String port1> = r1;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: java.lang.String port2> = r2;

        if r1 == null goto label1;

        $r5 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl1>;

        $r6 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r5;

        interfaceinvoke $r6.<net.sourceforge.plantuml.cucadiagram.ILeaf: void addPortShortName(java.lang.String)>(r1);

     label1:
        if r2 == null goto label2;

        $r3 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.IEntity cl2>;

        $r4 = (net.sourceforge.plantuml.cucadiagram.ILeaf) $r3;

        interfaceinvoke $r4.<net.sourceforge.plantuml.cucadiagram.ILeaf: void addPortShortName(java.lang.String)>(r2);

     label2:
        return;
    }

    public final net.sourceforge.plantuml.skin.VisibilityModifier getVisibilityModifier()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.skin.VisibilityModifier $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.skin.VisibilityModifier visibilityModifier>;

        return $r1;
    }

    public void setUmlDiagramType(net.sourceforge.plantuml.UmlDiagramType)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.UmlDiagramType r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.UmlDiagramType;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.UmlDiagramType umlType> = r1;

        return;
    }

    public net.sourceforge.plantuml.UmlDiagramType getUmlDiagramType()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.UmlDiagramType $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.UmlDiagramType umlType>;

        return $r1;
    }

    public void setLinkConstraint(net.sourceforge.plantuml.cucadiagram.LinkConstraint)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.LinkConstraint r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.LinkConstraint;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkConstraint linkConstraint> = r1;

        return;
    }

    public final net.sourceforge.plantuml.cucadiagram.LinkConstraint getLinkConstraint()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.LinkConstraint $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.LinkConstraint linkConstraint>;

        return $r1;
    }

    public java.lang.String getCodeLine()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.LineLocation $r1, $r4;
        java.lang.StringBuilder $r2, $r3, $r5;
        int $i0;
        java.lang.String $r6;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.LineLocation codeLine>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r4 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.LineLocation codeLine>;

        $i0 = interfaceinvoke $r4.<net.sourceforge.plantuml.LineLocation: int getPosition()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public void setCodeLine(net.sourceforge.plantuml.LineLocation)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.LineLocation r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.LineLocation;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.LineLocation codeLine> = r1;

        return;
    }

    public void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.Stereotype r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Stereotype;

        r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype> = r1;

        return;
    }

    public final net.sourceforge.plantuml.cucadiagram.Stereotype getStereotype()
    {
        net.sourceforge.plantuml.cucadiagram.Link r0;
        net.sourceforge.plantuml.cucadiagram.Stereotype $r1;

        r0 := @this: net.sourceforge.plantuml.cucadiagram.Link;

        $r1 = r0.<net.sourceforge.plantuml.cucadiagram.Link: net.sourceforge.plantuml.cucadiagram.Stereotype stereotype>;

        return $r1;
    }
}
