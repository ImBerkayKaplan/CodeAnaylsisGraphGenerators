public class net.sourceforge.plantuml.classdiagram.command.CommandUrl extends net.sourceforge.plantuml.command.SingleLineCommand2
{

    public void <init>()
    {
        net.sourceforge.plantuml.classdiagram.command.CommandUrl r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandUrl;

        $r1 = staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandUrl: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.command.SingleLineCommand2: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r17, $r20;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r12, $r13, $r14, $r21;
        net.sourceforge.plantuml.command.regex.RegexOptional $r6, $r11;
        java.lang.StringBuilder $r15, $r16, $r18, $r19;
        net.sourceforge.plantuml.command.regex.RegexConcat $r22;

        $r0 = class "Lnet/sourceforge/plantuml/classdiagram/command/CommandUrl;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[11];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("url");

        $r2[1] = $r4;

        $r5 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("of|for");

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r7);

        $r2[3] = $r6;

        $r8 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[4] = $r8;

        $r9 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("CODE", "([%pLN_.]+|[%g][^%g]+[%g])");

        $r2[5] = $r9;

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r2[6] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("is");

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r12);

        $r2[7] = $r11;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r17 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r20);

        $r2[9] = $r14;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[10] = $r21;

        $r22 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r22;
    }

    protected net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r5, $r9, $r13;
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram r2;
        net.sourceforge.plantuml.cucadiagram.Ident r3;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7;
        net.sourceforge.plantuml.cucadiagram.Code r4, $r20;
        java.lang.StringBuilder $r6, $r7, $r8;
        net.sourceforge.plantuml.command.CommandExecutionResult $r10, $r17;
        net.sourceforge.plantuml.UrlBuilder $r11;
        net.sourceforge.plantuml.ISkinParam $r12;
        net.sourceforge.plantuml.UrlBuilder$ModeUrl $r14;
        net.sourceforge.plantuml.Url r16;
        net.sourceforge.plantuml.classdiagram.command.CommandUrl r18;
        net.sourceforge.plantuml.LineLocation r19;
        net.sourceforge.plantuml.cucadiagram.IEntity r21;
        net.sourceforge.plantuml.cucadiagram.IGroup $r22;

        r18 := @this: net.sourceforge.plantuml.classdiagram.command.CommandUrl;

        r2 := @parameter0: net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;

        r19 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r0 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("CODE", 0);

        r3 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r1);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z0 == 0 goto label01;

        $r20 = r3;

        goto label02;

     label01:
        $r20 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r1);

     label02:
        r4 = $r20;

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("URL", 0);

        $z1 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z1 == 0 goto label03;

        $z7 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

        goto label04;

     label03:
        $z7 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean leafExist(net.sourceforge.plantuml.cucadiagram.Code)>($r20);

     label04:
        if $z7 == 0 goto label05;

        r21 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r3, r4, null, null);

        goto label11;

     label05:
        $z3 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z3 == 0 goto label06;

        $z6 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean isGroupStrict(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

        if $z6 == 0 goto label10;

        goto label07;

     label06:
        $z4 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean isGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r4);

        if $z4 == 0 goto label10;

     label07:
        $z5 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z5 == 0 goto label08;

        $r22 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupStrict(net.sourceforge.plantuml.cucadiagram.Ident)>(r3);

        goto label09;

     label08:
        $r22 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>(r4);

     label09:
        r21 = $r22;

        goto label11;

     label10:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not exist");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>($r9);

        return $r10;

     label11:
        $r11 = new net.sourceforge.plantuml.UrlBuilder;

        $r12 = virtualinvoke r2.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r13 = interfaceinvoke $r12.<net.sourceforge.plantuml.ISkinParam: java.lang.String getValue(java.lang.String)>("topurl");

        $r14 = <net.sourceforge.plantuml.UrlBuilder$ModeUrl: net.sourceforge.plantuml.UrlBuilder$ModeUrl STRICT>;

        specialinvoke $r11.<net.sourceforge.plantuml.UrlBuilder: void <init>(java.lang.String,net.sourceforge.plantuml.UrlBuilder$ModeUrl)>($r13, $r14);

        r16 = virtualinvoke $r11.<net.sourceforge.plantuml.UrlBuilder: net.sourceforge.plantuml.Url getUrl(java.lang.String)>(r5);

        interfaceinvoke r21.<net.sourceforge.plantuml.cucadiagram.IEntity: void addUrl(net.sourceforge.plantuml.Url)>(r16);

        $r17 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r17;
    }

    protected volatile net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.core.Diagram, net.sourceforge.plantuml.LineLocation, net.sourceforge.plantuml.command.regex.RegexResult) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.classdiagram.command.CommandUrl r0;
        net.sourceforge.plantuml.core.Diagram r1;
        net.sourceforge.plantuml.LineLocation r2;
        net.sourceforge.plantuml.command.regex.RegexResult r3;
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram $r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @this: net.sourceforge.plantuml.classdiagram.command.CommandUrl;

        r1 := @parameter0: net.sourceforge.plantuml.core.Diagram;

        r2 := @parameter1: net.sourceforge.plantuml.LineLocation;

        r3 := @parameter2: net.sourceforge.plantuml.command.regex.RegexResult;

        $r4 = (net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram) r1;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.classdiagram.command.CommandUrl: net.sourceforge.plantuml.command.CommandExecutionResult executeArg(net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram,net.sourceforge.plantuml.LineLocation,net.sourceforge.plantuml.command.regex.RegexResult)>($r4, r2, r3);

        return $r5;
    }
}
