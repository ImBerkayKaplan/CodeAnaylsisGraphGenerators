class net.sourceforge.plantuml.DirWatcher2$1 extends java.lang.Object implements java.util.concurrent.Callable
{
    final net.sourceforge.plantuml.SourceFileReader val$sourceFileReader;
    final java.io.File val$f;
    final net.sourceforge.plantuml.DirWatcher2 this$0;

    void <init>(net.sourceforge.plantuml.DirWatcher2, net.sourceforge.plantuml.SourceFileReader, java.io.File)
    {
        net.sourceforge.plantuml.DirWatcher2$1 r0;
        net.sourceforge.plantuml.DirWatcher2 r1;
        net.sourceforge.plantuml.SourceFileReader r2;
        java.io.File r3;

        r0 := @this: net.sourceforge.plantuml.DirWatcher2$1;

        r1 := @parameter0: net.sourceforge.plantuml.DirWatcher2;

        r2 := @parameter1: net.sourceforge.plantuml.SourceFileReader;

        r3 := @parameter2: java.io.File;

        r0.<net.sourceforge.plantuml.DirWatcher2$1: net.sourceforge.plantuml.DirWatcher2 this$0> = r1;

        r0.<net.sourceforge.plantuml.DirWatcher2$1: net.sourceforge.plantuml.SourceFileReader val$sourceFileReader> = r2;

        r0.<net.sourceforge.plantuml.DirWatcher2$1: java.io.File val$f> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.util.List call() throws java.lang.Exception
    {
        net.sourceforge.plantuml.DirWatcher2$1 r0;
        net.sourceforge.plantuml.SourceFileReader $r1, $r2;
        java.util.Set $r3, r4;
        java.io.File $r5, $r9;
        net.sourceforge.plantuml.DirWatcher2 $r6;
        java.util.Map $r7;
        net.sourceforge.plantuml.FileWatcher $r8;
        java.util.List $r11, $r13, r14;
        java.lang.Exception $r12;

        r0 := @this: net.sourceforge.plantuml.DirWatcher2$1;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.DirWatcher2$1: net.sourceforge.plantuml.SourceFileReader val$sourceFileReader>;

        r14 = virtualinvoke $r1.<net.sourceforge.plantuml.SourceFileReader: java.util.List getGeneratedImages()>();

        $r2 = r0.<net.sourceforge.plantuml.DirWatcher2$1: net.sourceforge.plantuml.SourceFileReader val$sourceFileReader>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.SourceFileReader: java.util.Set getIncludedFiles()>();

        r4 = staticinvoke <net.sourceforge.plantuml.preproc.FileWithSuffix: java.util.Set convert(java.util.Set)>($r3);

        $r5 = r0.<net.sourceforge.plantuml.DirWatcher2$1: java.io.File val$f>;

        interfaceinvoke r4.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<net.sourceforge.plantuml.DirWatcher2$1: net.sourceforge.plantuml.DirWatcher2 this$0>;

        $r7 = staticinvoke <net.sourceforge.plantuml.DirWatcher2: java.util.Map access$000(net.sourceforge.plantuml.DirWatcher2)>($r6);

        $r9 = r0.<net.sourceforge.plantuml.DirWatcher2$1: java.io.File val$f>;

        $r8 = new net.sourceforge.plantuml.FileWatcher;

        specialinvoke $r8.<net.sourceforge.plantuml.FileWatcher: void <init>(java.util.Set)>(r4);

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r8);

        $r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r14);

     label2:
        return $r11;

     label3:
        $r12 := @caughtexception;

        virtualinvoke $r12.<java.lang.Exception: void printStackTrace()>();

        $r13 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r13;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        net.sourceforge.plantuml.DirWatcher2$1 r0;
        java.util.List $r1;

        r0 := @this: net.sourceforge.plantuml.DirWatcher2$1;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.DirWatcher2$1: java.util.List call()>();

        return $r1;
    }
}
