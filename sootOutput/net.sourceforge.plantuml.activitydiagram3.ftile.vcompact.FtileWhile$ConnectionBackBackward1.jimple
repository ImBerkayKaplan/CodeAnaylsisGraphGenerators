class net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1 extends net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection
{
    private final net.sourceforge.plantuml.graphic.Rainbow endInlinkColor;
    private final net.sourceforge.plantuml.graphic.TextBlock back;
    final net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0;

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile, net.sourceforge.plantuml.graphic.Rainbow, net.sourceforge.plantuml.graphic.TextBlock)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1 r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2, $r3;
        net.sourceforge.plantuml.graphic.Rainbow r4;
        net.sourceforge.plantuml.graphic.TextBlock r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile;

        r4 := @parameter1: net.sourceforge.plantuml.graphic.Rainbow;

        r5 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0> = r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>(r1);

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.ftile.AbstractConnection: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>($r2, $r3);

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.graphic.TextBlock back> = r5;

        return;
    }

    private java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1 r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r1, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        java.awt.geom.Point2D $r7, $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r1);

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $z0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: boolean hasPointOut()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r3);

        $r7 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: java.awt.geom.Point2D getPointOut()>();

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }

    private double getBottom(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1 r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r1, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$100(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r1);

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$300(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r3);

        $d0 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: double getDy()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getHeight()>();

        $d2 = $d0 + $d1;

        return $d2;
    }

    private java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1 r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r1, $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile $r2;
        net.sourceforge.plantuml.graphic.StringBounder r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry r4;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6;
        java.awt.geom.Point2D$Double $r7;
        double $d0, $d1;
        java.awt.geom.Point2D $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile access$400(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile)>($r1);

        r4 = interfaceinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.ftile.Ftile: net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r3);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r6 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ugraphic.UTranslate access$500(net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile,net.sourceforge.plantuml.graphic.StringBounder)>($r5, r3);

        $r7 = new java.awt.geom.Point2D$Double;

        $d0 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getLeft()>();

        $d1 = virtualinvoke r4.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileGeometry: double getOutY()>();

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>($d0, $d1);

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: java.awt.geom.Point2D getTranslated(java.awt.geom.Point2D)>($r7);

        return $r8;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r14;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1 r2;
        java.awt.geom.Point2D r3, r4;
        double d0, d1, d2, d3, $d4, $d5, d6;
        net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile $r5;
        net.sourceforge.plantuml.ISkinParam $r6;
        net.sourceforge.plantuml.graphic.Rainbow $r7;
        net.sourceforge.plantuml.ugraphic.UPolygon $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Snake $r9, r12;
        net.sourceforge.plantuml.graphic.TextBlock $r10;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r11;
        net.sourceforge.plantuml.ugraphic.UTranslate $r13;
        net.sourceforge.plantuml.ugraphic.UEmpty $r15;

        r2 := @this: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r3 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: java.awt.geom.Point2D getP1(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        if r3 != null goto label1;

        return;

     label1:
        r4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: java.awt.geom.Point2D getP2(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        d0 = virtualinvoke r3.<java.awt.geom.Point2D: double getX()>();

        d1 = virtualinvoke r3.<java.awt.geom.Point2D: double getY()>();

        d2 = virtualinvoke r4.<java.awt.geom.Point2D: double getX()>();

        d3 = virtualinvoke r4.<java.awt.geom.Point2D: double getY()>();

        $r5 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile this$0>;

        $r6 = virtualinvoke $r5.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile: net.sourceforge.plantuml.ISkinParam skinParam()>();

        $r7 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.graphic.Rainbow endInlinkColor>;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Arrows: net.sourceforge.plantuml.ugraphic.UPolygon asToUp()>();

        $r9 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake create(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.Rainbow,net.sourceforge.plantuml.ugraphic.UPolygon)>($r6, $r7, $r8);

        $r10 = r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.graphic.TextBlock back>;

        $r11 = virtualinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: net.sourceforge.plantuml.graphic.HorizontalAlignment arrowHorizontalAlignment()>();

        r12 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: net.sourceforge.plantuml.activitydiagram3.ftile.Snake withLabel(net.sourceforge.plantuml.graphic.TextBlock,net.sourceforge.plantuml.graphic.HorizontalAlignment)>($r10, $r11);

        virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d1);

        $d4 = specialinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.vcompact.FtileWhile$ConnectionBackBackward1: double getBottom(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $d5 = staticinvoke <java.lang.Math: double max(double,double)>(d1, $d4);

        d6 = $d5 + 12.0;

        virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d0, d6);

        virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d6);

        virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.ftile.Snake: void addPoint(double,double)>(d2, d3);

        interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>(r12);

        $r13 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r13.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, d6);

        $r14 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r13);

        $r15 = new net.sourceforge.plantuml.ugraphic.UEmpty;

        specialinvoke $r15.<net.sourceforge.plantuml.ugraphic.UEmpty: void <init>(double,double)>(5.0, 12.0);

        interfaceinvoke $r14.<net.sourceforge.plantuml.ugraphic.UGraphic: void draw(net.sourceforge.plantuml.ugraphic.UShape)>($r15);

        return;
    }
}
