class net.sourceforge.plantuml.svek.PointListIteratorImpl extends java.lang.Object implements net.sourceforge.plantuml.svek.PointListIterator
{
    private final net.sourceforge.plantuml.svek.SvgResult svg;
    private int pos;

    static net.sourceforge.plantuml.svek.PointListIterator create(net.sourceforge.plantuml.svek.SvgResult, int)
    {
        net.sourceforge.plantuml.svek.PointListIteratorImpl $r0;
        net.sourceforge.plantuml.svek.SvgResult r1;
        int i0, i1;

        r1 := @parameter0: net.sourceforge.plantuml.svek.SvgResult;

        i0 := @parameter1: int;

        $r0 = new net.sourceforge.plantuml.svek.PointListIteratorImpl;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: void <init>(net.sourceforge.plantuml.svek.SvgResult)>(r1);

        i1 = virtualinvoke r1.<net.sourceforge.plantuml.svek.SvgResult: int getIndexFromColor(int)>(i0);

        if i1 != -1 goto label1;

        $r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: int pos> = -1;

     label1:
        return $r0;
    }

    public net.sourceforge.plantuml.svek.PointListIterator cloneMe()
    {
        net.sourceforge.plantuml.svek.PointListIteratorImpl $r0, r1;
        net.sourceforge.plantuml.svek.SvgResult $r2;
        int $i0;

        r1 := @this: net.sourceforge.plantuml.svek.PointListIteratorImpl;

        $r0 = new net.sourceforge.plantuml.svek.PointListIteratorImpl;

        $r2 = r1.<net.sourceforge.plantuml.svek.PointListIteratorImpl: net.sourceforge.plantuml.svek.SvgResult svg>;

        specialinvoke $r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: void <init>(net.sourceforge.plantuml.svek.SvgResult)>($r2);

        $i0 = r1.<net.sourceforge.plantuml.svek.PointListIteratorImpl: int pos>;

        $r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: int pos> = $i0;

        return $r0;
    }

    private void <init>(net.sourceforge.plantuml.svek.SvgResult)
    {
        net.sourceforge.plantuml.svek.PointListIteratorImpl r0;
        net.sourceforge.plantuml.svek.SvgResult r1;

        r0 := @this: net.sourceforge.plantuml.svek.PointListIteratorImpl;

        r1 := @parameter0: net.sourceforge.plantuml.svek.SvgResult;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: int pos> = 0;

        r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: net.sourceforge.plantuml.svek.SvgResult svg> = r1;

        return;
    }

    public boolean hasNext()
    {
        net.sourceforge.plantuml.svek.PointListIteratorImpl r0;

        r0 := @this: net.sourceforge.plantuml.svek.PointListIteratorImpl;

        return 1;
    }

    public java.util.List next()
    {
        net.sourceforge.plantuml.svek.PointListIteratorImpl r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        net.sourceforge.plantuml.svek.SvgResult $r1, $r2, $r3;
        java.lang.String $r4, $r10;
        java.util.List $r5, $r11, r12;
        java.lang.StringIndexOutOfBoundsException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: net.sourceforge.plantuml.svek.PointListIteratorImpl;

        $i0 = r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: int pos>;

        if $i0 != -1 goto label1;

        $r5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r5;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: net.sourceforge.plantuml.svek.SvgResult svg>;

        $i1 = r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: int pos>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.svek.SvgResult: net.sourceforge.plantuml.svek.SvgResult substring(int)>($i1);

        r12 = virtualinvoke $r2.<net.sourceforge.plantuml.svek.SvgResult: java.util.List extractList(java.lang.String)>("points=\"");

        $r3 = r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: net.sourceforge.plantuml.svek.SvgResult svg>;

        $i2 = r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: int pos>;

        $i3 = virtualinvoke $r3.<net.sourceforge.plantuml.svek.SvgResult: int indexOf(java.lang.String,int)>("points=\"", $i2);

        $r4 = "points=\"";

        $i4 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        $i6 = $i5 + 1;

        r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: int pos> = $i6;

     label2:
        return r12;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <net.sourceforge.plantuml.Log: void error(java.lang.String)>($r10);

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r11;

        catch java.lang.StringIndexOutOfBoundsException from label1 to label2 with label3;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.svek.PointListIteratorImpl r1;

        r1 := @this: net.sourceforge.plantuml.svek.PointListIteratorImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        net.sourceforge.plantuml.svek.PointListIteratorImpl r0;
        java.util.List $r1;

        r0 := @this: net.sourceforge.plantuml.svek.PointListIteratorImpl;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.svek.PointListIteratorImpl: java.util.List next()>();

        return $r1;
    }
}
