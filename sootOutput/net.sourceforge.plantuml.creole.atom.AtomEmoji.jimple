public class net.sourceforge.plantuml.creole.atom.AtomEmoji extends net.sourceforge.plantuml.creole.atom.AbstractAtom implements net.sourceforge.plantuml.creole.atom.Atom
{
    private static final double MAGIC;
    private final net.sourceforge.plantuml.emoji.Emoji emoji;
    private final double factor;
    private final net.sourceforge.plantuml.ugraphic.color.HColor color;

    public void <init>(net.sourceforge.plantuml.emoji.Emoji, double, double, net.sourceforge.plantuml.ugraphic.color.HColor)
    {
        net.sourceforge.plantuml.creole.atom.AtomEmoji r0;
        net.sourceforge.plantuml.emoji.Emoji r1;
        double d0, d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.color.HColor r2;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomEmoji;

        r1 := @parameter0: net.sourceforge.plantuml.emoji.Emoji;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        r2 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        specialinvoke r0.<net.sourceforge.plantuml.creole.atom.AbstractAtom: void <init>()>();

        r0.<net.sourceforge.plantuml.creole.atom.AtomEmoji: net.sourceforge.plantuml.emoji.Emoji emoji> = r1;

        $d2 = d0 * d1;

        $d3 = $d2 / 24.0;

        r0.<net.sourceforge.plantuml.creole.atom.AtomEmoji: double factor> = $d3;

        r0.<net.sourceforge.plantuml.creole.atom.AtomEmoji: net.sourceforge.plantuml.ugraphic.color.HColor color> = r2;

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.atom.AtomEmoji r0;
        double $d0, d1;
        net.sourceforge.plantuml.Dimension2DDouble $r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomEmoji;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = r0.<net.sourceforge.plantuml.creole.atom.AtomEmoji: double factor>;

        d1 = 36.0 * $d0;

        $r1 = new net.sourceforge.plantuml.Dimension2DDouble;

        specialinvoke $r1.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>(d1, d1);

        return $r1;
    }

    public double getStartingAltitude(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.creole.atom.AtomEmoji r0;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomEmoji;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $d0 = r0.<net.sourceforge.plantuml.creole.atom.AtomEmoji: double factor>;

        $d1 = -3.0 * $d0;

        return $d1;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.creole.atom.AtomEmoji r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1;
        net.sourceforge.plantuml.ugraphic.color.HColor $r2;
        double $d0;
        net.sourceforge.plantuml.emoji.Emoji $r3;

        r0 := @this: net.sourceforge.plantuml.creole.atom.AtomEmoji;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r3 = r0.<net.sourceforge.plantuml.creole.atom.AtomEmoji: net.sourceforge.plantuml.emoji.Emoji emoji>;

        $d0 = r0.<net.sourceforge.plantuml.creole.atom.AtomEmoji: double factor>;

        $r2 = r0.<net.sourceforge.plantuml.creole.atom.AtomEmoji: net.sourceforge.plantuml.ugraphic.color.HColor color>;

        virtualinvoke $r3.<net.sourceforge.plantuml.emoji.Emoji: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r1, $d0, $r2);

        return;
    }

    public static void <clinit>()
    {
        <net.sourceforge.plantuml.creole.atom.AtomEmoji: double MAGIC> = 24.0;

        return;
    }
}
