public class net.sourceforge.plantuml.definition.PSystemDefinition extends net.sourceforge.plantuml.PlainDiagram implements net.sourceforge.plantuml.graphic.UDrawable
{
    private final java.util.List lines;
    private final java.lang.String startLine;

    public void <init>(net.sourceforge.plantuml.core.UmlSource, java.lang.String)
    {
        net.sourceforge.plantuml.definition.PSystemDefinition r0;
        net.sourceforge.plantuml.core.UmlSource r1;
        java.util.ArrayList $r2;
        java.lang.String r3;

        r0 := @this: net.sourceforge.plantuml.definition.PSystemDefinition;

        r1 := @parameter0: net.sourceforge.plantuml.core.UmlSource;

        r3 := @parameter1: java.lang.String;

        specialinvoke r0.<net.sourceforge.plantuml.PlainDiagram: void <init>(net.sourceforge.plantuml.core.UmlSource)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.definition.PSystemDefinition: java.util.List lines> = $r2;

        r0.<net.sourceforge.plantuml.definition.PSystemDefinition: java.lang.String startLine> = r3;

        return;
    }

    public net.sourceforge.plantuml.core.DiagramDescription getDescription()
    {
        net.sourceforge.plantuml.core.DiagramDescription $r0;
        net.sourceforge.plantuml.definition.PSystemDefinition r1;

        r1 := @this: net.sourceforge.plantuml.definition.PSystemDefinition;

        $r0 = new net.sourceforge.plantuml.core.DiagramDescription;

        specialinvoke $r0.<net.sourceforge.plantuml.core.DiagramDescription: void <init>(java.lang.String)>("(Definition)");

        return $r0;
    }

    protected net.sourceforge.plantuml.graphic.UDrawable getRootDrawable(net.sourceforge.plantuml.FileFormatOption) throws java.io.IOException
    {
        net.sourceforge.plantuml.definition.PSystemDefinition r0;
        net.sourceforge.plantuml.FileFormatOption r1;

        r0 := @this: net.sourceforge.plantuml.definition.PSystemDefinition;

        r1 := @parameter0: net.sourceforge.plantuml.FileFormatOption;

        return r0;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UFont r0;
        net.sourceforge.plantuml.graphic.FontConfiguration $r1;
        net.sourceforge.plantuml.ugraphic.color.HColorSimple $r2, $r3;
        net.sourceforge.plantuml.definition.PSystemDefinition r5;
        java.lang.String $r6;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.SpriteContainerEmpty $r8;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r9;
        net.sourceforge.plantuml.graphic.TextBlock $r10;
        net.sourceforge.plantuml.ugraphic.UGraphic r11;

        r5 := @this: net.sourceforge.plantuml.definition.PSystemDefinition;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 = staticinvoke <net.sourceforge.plantuml.ugraphic.UFont: net.sourceforge.plantuml.ugraphic.UFont sansSerif(int)>(14);

        $r1 = new net.sourceforge.plantuml.graphic.FontConfiguration;

        $r3 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        $r2 = <net.sourceforge.plantuml.ugraphic.color.HColorUtils: net.sourceforge.plantuml.ugraphic.color.HColorSimple BLACK>;

        specialinvoke $r1.<net.sourceforge.plantuml.graphic.FontConfiguration: void <init>(net.sourceforge.plantuml.ugraphic.UFont,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.ugraphic.color.HColor,boolean)>(r0, $r3, $r2, 0);

        $r6 = r5.<net.sourceforge.plantuml.definition.PSystemDefinition: java.lang.String startLine>;

        $r7 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display getWithNewlines(java.lang.String)>($r6);

        $r9 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment LEFT>;

        $r8 = new net.sourceforge.plantuml.SpriteContainerEmpty;

        specialinvoke $r8.<net.sourceforge.plantuml.SpriteContainerEmpty: void <init>()>();

        $r10 = virtualinvoke $r7.<net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.graphic.TextBlock create(net.sourceforge.plantuml.graphic.FontConfiguration,net.sourceforge.plantuml.graphic.HorizontalAlignment,net.sourceforge.plantuml.ISkinSimple)>($r1, $r9, $r8);

        interfaceinvoke $r10.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>(r11);

        return;
    }

    public void doCommandLine(java.lang.String)
    {
        net.sourceforge.plantuml.definition.PSystemDefinition r0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @this: net.sourceforge.plantuml.definition.PSystemDefinition;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.definition.PSystemDefinition: java.util.List lines>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }
}
