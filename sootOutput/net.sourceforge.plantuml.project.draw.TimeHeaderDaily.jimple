public class net.sourceforge.plantuml.project.draw.TimeHeaderDaily extends net.sourceforge.plantuml.project.draw.TimeHeaderCalendar
{
    private final java.util.Map nameDays;

    public double getTimeHeaderHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        double $d0, $d1;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double Y_POS_ROW28()>();

        $d1 = $d0 + 13.0;

        return $d1;
    }

    public double getTimeFooterHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        return 38.0;
    }

    public void <init>(java.util.Locale, net.sourceforge.plantuml.style.Style, net.sourceforge.plantuml.style.Style, double, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.LoadPlanable, java.util.Map, java.util.Map, java.util.Map, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.project.time.Day, net.sourceforge.plantuml.ugraphic.color.HColorSet, net.sourceforge.plantuml.api.ThemeStyle)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        java.util.Locale r1;
        net.sourceforge.plantuml.style.Style r2, r3;
        net.sourceforge.plantuml.project.time.Day r4, r5, r6, r11, r15;
        net.sourceforge.plantuml.project.LoadPlanable r7;
        java.util.Map r8, r9, r14;
        net.sourceforge.plantuml.project.timescale.TimeScaleDaily $r10;
        double d0;
        net.sourceforge.plantuml.ugraphic.color.HColorSet r12;
        net.sourceforge.plantuml.api.ThemeStyle r13;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r1 := @parameter0: java.util.Locale;

        r2 := @parameter1: net.sourceforge.plantuml.style.Style;

        r3 := @parameter2: net.sourceforge.plantuml.style.Style;

        d0 := @parameter3: double;

        r4 := @parameter4: net.sourceforge.plantuml.project.time.Day;

        r5 := @parameter5: net.sourceforge.plantuml.project.time.Day;

        r6 := @parameter6: net.sourceforge.plantuml.project.time.Day;

        r7 := @parameter7: net.sourceforge.plantuml.project.LoadPlanable;

        r8 := @parameter8: java.util.Map;

        r9 := @parameter9: java.util.Map;

        r14 := @parameter10: java.util.Map;

        r11 := @parameter11: net.sourceforge.plantuml.project.time.Day;

        r15 := @parameter12: net.sourceforge.plantuml.project.time.Day;

        r12 := @parameter13: net.sourceforge.plantuml.ugraphic.color.HColorSet;

        r13 := @parameter14: net.sourceforge.plantuml.api.ThemeStyle;

        $r10 = new net.sourceforge.plantuml.project.timescale.TimeScaleDaily;

        specialinvoke $r10.<net.sourceforge.plantuml.project.timescale.TimeScaleDaily: void <init>(double,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.time.Day)>(d0, r4, r11);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderCalendar: void <init>(java.util.Locale,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.style.Style,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.time.Day,net.sourceforge.plantuml.project.LoadPlanable,java.util.Map,java.util.Map,net.sourceforge.plantuml.project.timescale.TimeScale,net.sourceforge.plantuml.ugraphic.color.HColorSet,net.sourceforge.plantuml.api.ThemeStyle)>(r1, r2, r3, r4, r5, r6, r7, r8, r9, $r10, r12, r13);

        r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: java.util.Map nameDays> = r14;

        return;
    }

    public void drawTimeHeader(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3, $r5;
        double d0, $d1, $d2, $d3;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r4;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawTextsBackground(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r1, d0);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double Y_POS_ROW16()>();

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d1);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawTextsDayOfWeek(net.sourceforge.plantuml.ugraphic.UGraphic)>($r3);

        $d2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double Y_POS_ROW28()>();

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>($d2);

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawTextDayOfMonth(net.sourceforge.plantuml.ugraphic.UGraphic)>($r5);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawMonths(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void printSmallVbars(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r1, d0);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void printNamedDays(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        $d3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double getFullHeaderHeight()>();

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r1, $d3);

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawHline(net.sourceforge.plantuml.ugraphic.UGraphic,double)>(r1, d0);

        return;
    }

    private void printSmallVbars(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.project.time.Day $r1, $r4, r6;
        int $i0;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.project.timescale.TimeScale $r3, $r5;
        double $d0, $d1, d2, $d3, $d4;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d2 := @parameter1: double;

        r6 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day max>;

        $i0 = virtualinvoke r6.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r1);

        if $i0 > 0 goto label2;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $d3 = interfaceinvoke $r5.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r6);

        $d4 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double getFullHeaderHeight()>();

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawVbar(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r2, $d3, $d4, d2);

        r6 = virtualinvoke r6.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label2:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day max>;

        $d0 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>($r4);

        $d1 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double getFullHeaderHeight()>();

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawVbar(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r2, $d0, $d1, d2);

        return;
    }

    private void drawVBars(net.sourceforge.plantuml.ugraphic.UGraphic, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.project.time.Day $r1, r6;
        int $i0;
        double d0, $d1, d2, d3;
        net.sourceforge.plantuml.project.time.MonthYear $r2, r5;
        boolean $z0;
        net.sourceforge.plantuml.ugraphic.UGraphic r3;
        net.sourceforge.plantuml.project.timescale.TimeScale $r4;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r3 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        d0 := @parameter1: double;

        r5 = null;

        r6 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day max>;

        $i0 = virtualinvoke r6.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r1);

        if $i0 > 0 goto label3;

        d2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double getFullHeaderHeight()>();

        d3 = d0;

        $r2 = virtualinvoke r6.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.MonthYear monthYear()>();

        $z0 = virtualinvoke $r2.<net.sourceforge.plantuml.project.time.MonthYear: boolean equals(java.lang.Object)>(r5);

        if $z0 != 0 goto label2;

        d2 = 0.0;

        r5 = virtualinvoke r6.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.MonthYear monthYear()>();

        d3 = d0 + 37.0;

     label2:
        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $d1 = interfaceinvoke $r4.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r6);

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawVbar(net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>(r3, $d1, d2, d3);

        r6 = virtualinvoke r6.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label3:
        return;
    }

    public void drawTimeFooter(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.ugraphic.UGraphic r1, $r3, $r5;
        net.sourceforge.plantuml.ugraphic.UTranslate $r2, $r4;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r1 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r2 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(12.0);

        $r3 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r2);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawTextDayOfMonth(net.sourceforge.plantuml.ugraphic.UGraphic)>($r3);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawTextsDayOfWeek(net.sourceforge.plantuml.ugraphic.UGraphic)>(r1);

        $r4 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dy(double)>(24.0);

        $r5 = interfaceinvoke r1.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r4);

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void drawMonths(net.sourceforge.plantuml.ugraphic.UGraphic)>($r5);

        return;
    }

    private void drawTextsDayOfWeek(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.project.time.Day $r1, r10;
        int $i0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r2, $r3;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.HColor r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;
        net.sourceforge.plantuml.project.time.DayOfWeek $r6;
        java.util.Locale $r7;
        java.lang.String $r8;
        net.sourceforge.plantuml.graphic.TextBlock $r9;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r10 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day max>;

        $i0 = virtualinvoke r10.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r1);

        if $i0 > 0 goto label2;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d0 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r10);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d1 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>(r10);

        r4 = specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.ugraphic.color.HColor getTextBackColor(net.sourceforge.plantuml.project.time.Day)>(r10);

        $r6 = virtualinvoke r10.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.DayOfWeek getDayOfWeek()>();

        $r7 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: java.util.Locale locale>;

        $r8 = virtualinvoke $r6.<net.sourceforge.plantuml.project.time.DayOfWeek: java.lang.String shortName(java.util.Locale)>($r7);

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>($r8, 10, 0, r4);

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void printCentered(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r5, $r9, d0, d1);

        r10 = virtualinvoke r10.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label2:
        return;
    }

    private void drawTextDayOfMonth(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.project.time.Day $r1, r11;
        int $i0, $i1;
        net.sourceforge.plantuml.project.timescale.TimeScale $r2, $r3;
        double d0, d1;
        net.sourceforge.plantuml.ugraphic.color.HColor r4;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;
        net.sourceforge.plantuml.graphic.TextBlock $r10;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r11 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day max>;

        $i0 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r1);

        if $i0 > 0 goto label2;

        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d0 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r11);

        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d1 = interfaceinvoke $r3.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>(r11);

        r4 = specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.ugraphic.color.HColor getTextBackColor(net.sourceforge.plantuml.project.time.Day)>(r11);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i1 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: int getDayOfMonth()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>($r9, 10, 0, r4);

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void printCentered(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.graphic.TextBlock,double,double)>(r5, $r10, d0, d1);

        r11 = virtualinvoke r11.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label2:
        return;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getTextBackColor(net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.project.time.Day r1;
        net.sourceforge.plantuml.project.LoadPlanable $r2;
        int $i0;
        net.sourceforge.plantuml.ugraphic.color.HColor $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r1 := @parameter0: net.sourceforge.plantuml.project.time.Day;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.LoadPlanable defaultPlan>;

        $i0 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.LoadPlanable: int getLoadAt(net.sourceforge.plantuml.project.time.Day)>(r1);

        if $i0 > 0 goto label1;

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.ugraphic.color.HColor closedFontColor()>();

        return $r4;

     label1:
        $r3 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()>();

        return $r3;
    }

    private void drawMonths(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.project.time.Day $r1, $r3, $r4, r9;
        int $i0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r2, $r6;
        byte $b1;
        net.sourceforge.plantuml.ugraphic.UGraphic r5;
        double d0, d1, d2;
        net.sourceforge.plantuml.project.time.MonthYear $r7, r8;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r5 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r8 = null;

        d1 = -1.0;

        r9 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day max>;

        $i0 = virtualinvoke r9.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r1);

        if $i0 > 0 goto label4;

        $r6 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d0 = interfaceinvoke $r6.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r9);

        $r7 = virtualinvoke r9.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.MonthYear monthYear()>();

        $z0 = virtualinvoke $r7.<net.sourceforge.plantuml.project.time.MonthYear: boolean equals(java.lang.Object)>(r8);

        if $z0 != 0 goto label3;

        if r8 == null goto label2;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void printMonth(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.time.MonthYear,double,double)>(r5, r8, d1, d0);

     label2:
        d1 = d0;

        r8 = virtualinvoke r9.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.MonthYear monthYear()>();

     label3:
        r9 = virtualinvoke r9.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label4:
        $r2 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        $r3 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day max>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        d2 = interfaceinvoke $r2.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>($r4);

        $b1 = d2 cmpl d1;

        if $b1 <= 0 goto label5;

        specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void printMonth(net.sourceforge.plantuml.ugraphic.UGraphic,net.sourceforge.plantuml.project.time.MonthYear,double,double)>(r5, r8, d1, d2);

     label5:
        return;
    }

    private void printMonth(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.project.time.MonthYear, double, double)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        net.sourceforge.plantuml.project.time.MonthYear r1;
        java.util.Locale $r2, $r6, $r10;
        java.lang.String $r3, $r7, $r11;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4, $r8, $r12;
        net.sourceforge.plantuml.graphic.TextBlock r5, r9, r13;
        net.sourceforge.plantuml.ugraphic.UGraphic r14;
        double d0, d1;
        net.sourceforge.plantuml.graphic.TextBlock[] $r15;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r14 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 := @parameter1: net.sourceforge.plantuml.project.time.MonthYear;

        d0 := @parameter2: double;

        d1 := @parameter3: double;

        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: java.util.Locale locale>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.project.time.MonthYear: java.lang.String shortName(java.util.Locale)>($r2);

        $r4 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()>();

        r5 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>($r3, 12, 1, $r4);

        $r6 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: java.util.Locale locale>;

        $r7 = virtualinvoke r1.<net.sourceforge.plantuml.project.time.MonthYear: java.lang.String longName(java.util.Locale)>($r6);

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()>();

        r9 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>($r7, 12, 1, $r8);

        $r10 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: java.util.Locale locale>;

        $r11 = virtualinvoke r1.<net.sourceforge.plantuml.project.time.MonthYear: java.lang.String longNameYYYY(java.util.Locale)>($r10);

        $r12 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()>();

        r13 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>($r11, 12, 1, $r12);

        $r15 = newarray (net.sourceforge.plantuml.graphic.TextBlock)[3];

        $r15[0] = r5;

        $r15[1] = r9;

        $r15[2] = r13;

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: void printCentered(net.sourceforge.plantuml.ugraphic.UGraphic,boolean,double,double,net.sourceforge.plantuml.graphic.TextBlock[])>(r14, 0, d0, d1, $r15);

        return;
    }

    private void printNamedDays(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        java.util.Map $r1, $r4;
        int $i0, $i1;
        net.sourceforge.plantuml.project.time.Day $r2, $r3, r17;
        java.lang.Object $r5;
        java.lang.String r6, r16;
        boolean $z0;
        net.sourceforge.plantuml.project.timescale.TimeScale $r7, $r8;
        double d0, $d5, $d6;
        net.sourceforge.plantuml.ugraphic.color.HColor $r9;
        net.sourceforge.plantuml.graphic.TextBlock r10;
        net.sourceforge.plantuml.ugraphic.UGraphic r11, $r15;
        net.sourceforge.plantuml.graphic.StringBounder $r12;
        net.sourceforge.plantuml.awt.geom.Dimension2D $r13;
        net.sourceforge.plantuml.ugraphic.UTranslate $r14;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        r11 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: java.util.Map nameDays>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 <= 0 goto label3;

        r16 = null;

        r17 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day min>;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.time.Day max>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        $i1 = virtualinvoke r17.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r3);

        if $i1 > 0 goto label3;

        $r4 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: java.util.Map nameDays>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r17);

        r6 = (java.lang.String) $r5;

        if r6 == null goto label2;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>(r16);

        if $z0 != 0 goto label2;

        $r7 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        d0 = interfaceinvoke $r7.<net.sourceforge.plantuml.project.timescale.TimeScale: double getStartingPosition(net.sourceforge.plantuml.project.time.Day)>(r17);

        $r8 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.project.timescale.TimeScale getTimeScale()>();

        interfaceinvoke $r8.<net.sourceforge.plantuml.project.timescale.TimeScale: double getEndingPosition(net.sourceforge.plantuml.project.time.Day)>(r17);

        $r9 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.ugraphic.color.HColor openFontColor()>();

        r10 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: net.sourceforge.plantuml.graphic.TextBlock getTextBlock(java.lang.String,int,boolean,net.sourceforge.plantuml.ugraphic.color.HColor)>(r6, 12, 0, $r9);

        $r12 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        $r13 = interfaceinvoke r10.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r12);

        virtualinvoke $r13.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double getTimeHeaderHeight()>();

        virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double getFullHeaderHeight()>();

        $r14 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d5 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double Y_POS_ROW28()>();

        $d6 = $d5 + 11.0;

        specialinvoke $r14.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d0, $d6);

        $r15 = interfaceinvoke r11.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r14);

        interfaceinvoke r10.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r15);

     label2:
        r16 = r6;

        r17 = virtualinvoke r17.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        goto label1;

     label3:
        return;
    }

    public double getFullHeaderHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        double $d0, $d1, $d2;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        $d0 = virtualinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double getTimeHeaderHeight()>();

        $d1 = specialinvoke r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: double getHeaderNameDayHeight()>();

        $d2 = $d0 + $d1;

        return $d2;
    }

    private double getHeaderNameDayHeight()
    {
        net.sourceforge.plantuml.project.draw.TimeHeaderDaily r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.project.draw.TimeHeaderDaily;

        $r1 = r0.<net.sourceforge.plantuml.project.draw.TimeHeaderDaily: java.util.Map nameDays>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        if $i0 <= 0 goto label1;

        return 16.0;

     label1:
        return 0.0;
    }
}
