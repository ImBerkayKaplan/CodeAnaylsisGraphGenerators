class net.sourceforge.plantuml.graphic.USymbolNode$2 extends net.sourceforge.plantuml.graphic.AbstractTextBlock
{
    final net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext;
    final net.sourceforge.plantuml.graphic.TextBlock val$stereotype;
    final net.sourceforge.plantuml.graphic.HorizontalAlignment val$stereoAlignment;
    final double val$width;
    final net.sourceforge.plantuml.graphic.TextBlock val$title;
    final double val$height;
    final net.sourceforge.plantuml.graphic.USymbolNode this$0;

    void <init>(net.sourceforge.plantuml.graphic.USymbolNode, net.sourceforge.plantuml.graphic.SymbolContext, net.sourceforge.plantuml.graphic.TextBlock, net.sourceforge.plantuml.graphic.HorizontalAlignment, double, net.sourceforge.plantuml.graphic.TextBlock, double)
    {
        net.sourceforge.plantuml.graphic.USymbolNode$2 r0;
        net.sourceforge.plantuml.graphic.USymbolNode r1;
        net.sourceforge.plantuml.graphic.SymbolContext r2;
        net.sourceforge.plantuml.graphic.TextBlock r3, r5;
        net.sourceforge.plantuml.graphic.HorizontalAlignment r4;
        double d0, d1;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolNode$2;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.USymbolNode;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.SymbolContext;

        r3 := @parameter2: net.sourceforge.plantuml.graphic.TextBlock;

        r4 := @parameter3: net.sourceforge.plantuml.graphic.HorizontalAlignment;

        d0 := @parameter4: double;

        r5 := @parameter5: net.sourceforge.plantuml.graphic.TextBlock;

        d1 := @parameter6: double;

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.USymbolNode this$0> = r1;

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext> = r2;

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.TextBlock val$stereotype> = r3;

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.HorizontalAlignment val$stereoAlignment> = r4;

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: double val$width> = d0;

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.TextBlock val$title> = r5;

        r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: double val$height> = d1;

        specialinvoke r0.<net.sourceforge.plantuml.graphic.AbstractTextBlock: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.graphic.USymbolNode$2 r0;
        net.sourceforge.plantuml.graphic.StringBounder $r1, $r8, $r16;
        net.sourceforge.plantuml.awt.geom.Dimension2D r2, r9, r17;
        net.sourceforge.plantuml.graphic.SymbolContext $r3, $r5;
        net.sourceforge.plantuml.graphic.USymbolNode $r4, $r21;
        double $d0, $d1, $d2, $d4, $d5, $d6, $d7, $d8, $d9, d10, $d11, $d12, $d13, $d14, $d15, $d16, d17;
        net.sourceforge.plantuml.ugraphic.UTranslate $r6, $r12, $r18;
        net.sourceforge.plantuml.graphic.TextBlock $r7, $r13, $r15, $r19;
        net.sourceforge.plantuml.graphic.HorizontalAlignment $r10, $r11;
        net.sourceforge.plantuml.ugraphic.UGraphic $r14, $r20, r23, r24, r25;
        net.sourceforge.plantuml.graphic.USymbol$Margin $r22;

        r0 := @this: net.sourceforge.plantuml.graphic.USymbolNode$2;

        r23 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        $r1 = interfaceinvoke r23.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r1);

        $r3 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext>;

        r24 = virtualinvoke $r3.<net.sourceforge.plantuml.graphic.SymbolContext: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UGraphic)>(r23);

        $r4 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.USymbolNode this$0>;

        $d0 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = virtualinvoke r2.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $r5 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.SymbolContext val$symbolContext>;

        $d2 = virtualinvoke $r5.<net.sourceforge.plantuml.graphic.SymbolContext: double getDeltaShadow()>();

        staticinvoke <net.sourceforge.plantuml.graphic.USymbolNode: void access$000(net.sourceforge.plantuml.graphic.USymbolNode,net.sourceforge.plantuml.ugraphic.UGraphic,double,double,double)>($r4, r24, $d0, $d1, $d2);

        $r6 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r6.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(-4.0, 11.0);

        r25 = interfaceinvoke r24.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r6);

        $r7 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        $r8 = interfaceinvoke r25.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r9 = interfaceinvoke $r7.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r8);

        $r11 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.HorizontalAlignment val$stereoAlignment>;

        $r10 = <net.sourceforge.plantuml.graphic.HorizontalAlignment: net.sourceforge.plantuml.graphic.HorizontalAlignment RIGHT>;

        if $r11 != $r10 goto label1;

        $d13 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: double val$width>;

        $d14 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d15 = $d13 - $d14;

        $r21 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.USymbolNode this$0>;

        $r22 = staticinvoke <net.sourceforge.plantuml.graphic.USymbolNode: net.sourceforge.plantuml.graphic.USymbol$Margin access$100(net.sourceforge.plantuml.graphic.USymbolNode)>($r21);

        $d16 = virtualinvoke $r22.<net.sourceforge.plantuml.graphic.USymbol$Margin: double getX1()>();

        d17 = $d15 - $d16;

        goto label2;

     label1:
        $d4 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: double val$width>;

        $d5 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d6 = $d4 - $d5;

        d17 = $d6 / 2.0;

     label2:
        $r13 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.TextBlock val$stereotype>;

        $r12 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        specialinvoke $r12.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d17, 2.0);

        $r14 = interfaceinvoke r25.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r12);

        interfaceinvoke $r13.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r14);

        $r15 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.TextBlock val$title>;

        $r16 = interfaceinvoke r25.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        r17 = interfaceinvoke $r15.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>($r16);

        $d7 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: double val$width>;

        $d8 = virtualinvoke r17.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d9 = $d7 - $d8;

        d10 = $d9 / 2.0;

        $r19 = r0.<net.sourceforge.plantuml.graphic.USymbolNode$2: net.sourceforge.plantuml.graphic.TextBlock val$title>;

        $r18 = new net.sourceforge.plantuml.ugraphic.UTranslate;

        $d11 = virtualinvoke r9.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $d12 = 2.0 + $d11;

        specialinvoke $r18.<net.sourceforge.plantuml.ugraphic.UTranslate: void <init>(double,double)>(d10, $d12);

        $r20 = interfaceinvoke r25.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r18);

        interfaceinvoke $r19.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r20);

        return;
    }

    public net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.Dimension2DDouble $r0;
        net.sourceforge.plantuml.graphic.USymbolNode$2 r1;
        double $d0, $d1;
        net.sourceforge.plantuml.graphic.StringBounder r2;

        r1 := @this: net.sourceforge.plantuml.graphic.USymbolNode$2;

        r2 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        $r0 = new net.sourceforge.plantuml.Dimension2DDouble;

        $d1 = r1.<net.sourceforge.plantuml.graphic.USymbolNode$2: double val$width>;

        $d0 = r1.<net.sourceforge.plantuml.graphic.USymbolNode$2: double val$height>;

        specialinvoke $r0.<net.sourceforge.plantuml.Dimension2DDouble: void <init>(double,double)>($d1, $d0);

        return $r0;
    }
}
