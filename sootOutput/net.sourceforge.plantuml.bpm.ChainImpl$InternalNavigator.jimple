class net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator extends java.lang.Object implements net.sourceforge.plantuml.bpm.Navigator
{
    private int position;
    private int version;
    final net.sourceforge.plantuml.bpm.ChainImpl this$0;

    private void <init>(net.sourceforge.plantuml.bpm.ChainImpl, int, int)
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        net.sourceforge.plantuml.bpm.ChainImpl r1;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.ChainImpl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: net.sourceforge.plantuml.bpm.ChainImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position> = 0;

        r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position> = i0;

        r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int version> = i1;

        return;
    }

    private void checkConsistency()
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        net.sourceforge.plantuml.bpm.ChainImpl $r1;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        $i0 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int version>;

        $r1 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: net.sourceforge.plantuml.bpm.ChainImpl this$0>;

        $i1 = staticinvoke <net.sourceforge.plantuml.bpm.ChainImpl: int access$100(net.sourceforge.plantuml.bpm.ChainImpl)>($r1);

        if $i0 == $i1 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public java.lang.Object next()
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: void checkConsistency()>();

        $i0 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position>;

        $i1 = $i0 + 1;

        r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position> = $i1;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: java.lang.Object get()>();

        return $r1;
    }

    public java.lang.Object previous()
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        int $i0, $i1;
        java.lang.Object $r1;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: void checkConsistency()>();

        $i0 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position>;

        $i1 = $i0 - 1;

        r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position> = $i1;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: java.lang.Object get()>();

        return $r1;
    }

    public java.lang.Object get()
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        int $i0;
        net.sourceforge.plantuml.bpm.ChainImpl $r1;
        java.lang.Object $r2;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: void checkConsistency()>();

        $r1 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: net.sourceforge.plantuml.bpm.ChainImpl this$0>;

        $i0 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position>;

        $r2 = staticinvoke <net.sourceforge.plantuml.bpm.ChainImpl: java.lang.Object access$200(net.sourceforge.plantuml.bpm.ChainImpl,int)>($r1, $i0);

        return $r2;
    }

    public void set(java.lang.Object)
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        java.lang.Object r1;
        int $i0;
        net.sourceforge.plantuml.bpm.ChainImpl $r2;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: void checkConsistency()>();

        $r2 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: net.sourceforge.plantuml.bpm.ChainImpl this$0>;

        $i0 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position>;

        staticinvoke <net.sourceforge.plantuml.bpm.ChainImpl: void access$300(net.sourceforge.plantuml.bpm.ChainImpl,int,java.lang.Object)>($r2, $i0, r1);

        return;
    }

    public void insertBefore(java.lang.Object)
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        net.sourceforge.plantuml.bpm.ChainImpl $r1, $r3;
        int $i0, $i1;
        java.lang.Object r2;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: net.sourceforge.plantuml.bpm.ChainImpl this$0>;

        $i0 = staticinvoke <net.sourceforge.plantuml.bpm.ChainImpl: int access$400(net.sourceforge.plantuml.bpm.ChainImpl)>($r1);

        r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int version> = $i0;

        $r3 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: net.sourceforge.plantuml.bpm.ChainImpl this$0>;

        $i1 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position>;

        staticinvoke <net.sourceforge.plantuml.bpm.ChainImpl: void access$500(net.sourceforge.plantuml.bpm.ChainImpl,int,java.lang.Object)>($r3, $i1, r2);

        return;
    }

    public void insertAfter(java.lang.Object)
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        net.sourceforge.plantuml.bpm.ChainImpl $r1, $r3;
        int $i0, $i1, $i2;
        java.lang.Object r2;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: net.sourceforge.plantuml.bpm.ChainImpl this$0>;

        $i0 = staticinvoke <net.sourceforge.plantuml.bpm.ChainImpl: int access$400(net.sourceforge.plantuml.bpm.ChainImpl)>($r1);

        r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int version> = $i0;

        $r3 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: net.sourceforge.plantuml.bpm.ChainImpl this$0>;

        $i1 = r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: int position>;

        $i2 = $i1 + 1;

        staticinvoke <net.sourceforge.plantuml.bpm.ChainImpl: void access$500(net.sourceforge.plantuml.bpm.ChainImpl,int,java.lang.Object)>($r3, $i2, r2);

        return;
    }

    void <init>(net.sourceforge.plantuml.bpm.ChainImpl, int, int, net.sourceforge.plantuml.bpm.ChainImpl$1)
    {
        net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator r0;
        net.sourceforge.plantuml.bpm.ChainImpl r1;
        int i0, i1;
        net.sourceforge.plantuml.bpm.ChainImpl$1 r2;

        r0 := @this: net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator;

        r1 := @parameter0: net.sourceforge.plantuml.bpm.ChainImpl;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: net.sourceforge.plantuml.bpm.ChainImpl$1;

        specialinvoke r0.<net.sourceforge.plantuml.bpm.ChainImpl$InternalNavigator: void <init>(net.sourceforge.plantuml.bpm.ChainImpl,int,int)>(r1, i0, i1);

        return;
    }
}
