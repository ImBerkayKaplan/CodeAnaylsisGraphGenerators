public class net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft extends net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny
{

    public void <init>()
    {
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft r0;
        net.sourceforge.plantuml.command.regex.IRegex $r1;

        r0 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft;

        $r1 = staticinvoke <net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft: net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()>();

        specialinvoke r0.<net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowAny: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r1);

        return;
    }

    static net.sourceforge.plantuml.command.regex.IRegex getRegexConcat()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r14, $r22, $r35, $r38;
        net.sourceforge.plantuml.command.regex.IRegex[] $r2, $r8, $r10, $r18, $r42;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r3, $r4, $r5, $r6, $r11, $r12, $r13, $r15, $r16, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r39, $r43, $r44, $r45, $r46;
        net.sourceforge.plantuml.command.regex.RegexOr $r7;
        net.sourceforge.plantuml.command.regex.RegexConcat $r9, $r17, $r41, $r47;
        java.lang.StringBuilder $r33, $r34, $r36, $r37;
        net.sourceforge.plantuml.command.regex.RegexOptional $r40;

        $r0 = class "Lnet/sourceforge/plantuml/sequencediagram/command/CommandExoArrowLeft;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[17];

        $r3 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r2[0] = $r3;

        $r4 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r4.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("PARALLEL", "(&[%s]*)?");

        $r2[1] = $r4;

        $r5 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r5.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ANCHOR", "(\\{([%pLN_]+)\\}[%s]+)?");

        $r2[2] = $r5;

        $r6 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r6.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_SUPPCIRCLE2", "([?\\[\\]][ox]?)?");

        $r2[3] = $r6;

        $r7 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r8 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r9 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r10 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[5];

        $r11 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BOTHDRESSING", "(<<?|//?|\\\\\\\\?)?");

        $r10[0] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODYA1", "(-+)");

        $r10[1] = $r12;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r14 = staticinvoke <net.sourceforge.plantuml.sequencediagram.command.CommandArrow: java.lang.String getColorOrStylePattern()>();

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE1", $r14);

        $r10[2] = $r13;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODYB1", "(-*)");

        $r10[3] = $r15;

        $r16 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_DRESSING1", "(>>?|//?|\\\\\\\\?)");

        $r10[4] = $r16;

        specialinvoke $r9.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r10);

        $r8[0] = $r9;

        $r17 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r18 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r19 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r19.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_DRESSING2", "(<<?|//?|\\\\\\\\?)");

        $r18[0] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODYB2", "(-*)");

        $r18[1] = $r20;

        $r21 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r22 = staticinvoke <net.sourceforge.plantuml.sequencediagram.command.CommandArrow: java.lang.String getColorOrStylePattern()>();

        specialinvoke $r21.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_STYLE2", $r22);

        $r18[2] = $r21;

        $r23 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_BODYA2", "(-+)");

        $r18[3] = $r23;

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r18);

        $r8[1] = $r17;

        specialinvoke $r7.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r8);

        $r2[4] = $r7;

        $r24 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r24.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ARROW_SUPPCIRCLE1", "([ox][%s]+)?");

        $r2[5] = $r24;

        $r25 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[6] = $r25;

        $r26 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r26.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("PARTICIPANT", "([%pLN_.@]+|[%g][^%g]+[%g])");

        $r2[7] = $r26;

        $r27 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[8] = $r27;

        $r28 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r28.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("ACTIVATION", "(?:([+*!-]+)?)");

        $r2[9] = $r28;

        $r29 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[10] = $r29;

        $r30 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r30.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LIFECOLOR", "(?:(#\\w+)?)");

        $r2[11] = $r30;

        $r31 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[12] = $r31;

        $r32 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r35 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r38);

        $r2[13] = $r32;

        $r39 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r2[14] = $r39;

        $r40 = new net.sourceforge.plantuml.command.regex.RegexOptional;

        $r41 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r42 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[3];

        $r43 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r43.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(":");

        $r42[0] = $r43;

        $r44 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r42[1] = $r44;

        $r45 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r45.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("LABEL", "(.*)");

        $r42[2] = $r45;

        specialinvoke $r41.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r42);

        specialinvoke $r40.<net.sourceforge.plantuml.command.regex.RegexOptional: void <init>(net.sourceforge.plantuml.command.regex.IRegex)>($r41);

        $r2[15] = $r40;

        $r46 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r2[16] = $r46;

        $r47 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r1, $r2);

        return $r47;
    }

    net.sourceforge.plantuml.sequencediagram.MessageExoType getMessageExoType(net.sourceforge.plantuml.command.regex.RegexResult)
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, r3;
        java.lang.IllegalArgumentException $r4, $r7;
        net.sourceforge.plantuml.sequencediagram.MessageExoType $r5, $r6, $r8, $r9;
        boolean $z0;
        net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft r10;

        r10 := @this: net.sourceforge.plantuml.sequencediagram.command.CommandExoArrowLeft;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_SUPPCIRCLE2", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_DRESSING1", 0);

        r3 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ARROW_DRESSING2", 0);

        if r1 == null goto label3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("]");

        if $z0 == 0 goto label3;

        if r2 == null goto label1;

        $r9 = <net.sourceforge.plantuml.sequencediagram.MessageExoType: net.sourceforge.plantuml.sequencediagram.MessageExoType FROM_RIGHT>;

        return $r9;

     label1:
        if r3 == null goto label2;

        $r8 = <net.sourceforge.plantuml.sequencediagram.MessageExoType: net.sourceforge.plantuml.sequencediagram.MessageExoType TO_RIGHT>;

        return $r8;

     label2:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r7;

     label3:
        if r2 == null goto label4;

        $r6 = <net.sourceforge.plantuml.sequencediagram.MessageExoType: net.sourceforge.plantuml.sequencediagram.MessageExoType FROM_LEFT>;

        return $r6;

     label4:
        if r3 == null goto label5;

        $r5 = <net.sourceforge.plantuml.sequencediagram.MessageExoType: net.sourceforge.plantuml.sequencediagram.MessageExoType TO_LEFT>;

        return $r5;

     label5:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }
}
