class net.sourceforge.plantuml.donors.PSystemSkinparameterList$1 extends java.lang.Object implements net.sourceforge.plantuml.graphic.UDrawable
{
    final java.util.List val$cols;
    final net.sourceforge.plantuml.donors.PSystemSkinparameterList this$0;

    void <init>(net.sourceforge.plantuml.donors.PSystemSkinparameterList, java.util.List)
    {
        net.sourceforge.plantuml.donors.PSystemSkinparameterList$1 r0;
        net.sourceforge.plantuml.donors.PSystemSkinparameterList r1;
        java.util.List r2;

        r0 := @this: net.sourceforge.plantuml.donors.PSystemSkinparameterList$1;

        r1 := @parameter0: net.sourceforge.plantuml.donors.PSystemSkinparameterList;

        r2 := @parameter1: java.util.List;

        r0.<net.sourceforge.plantuml.donors.PSystemSkinparameterList$1: net.sourceforge.plantuml.donors.PSystemSkinparameterList this$0> = r1;

        r0.<net.sourceforge.plantuml.donors.PSystemSkinparameterList$1: java.util.List val$cols> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)
    {
        net.sourceforge.plantuml.ugraphic.UGraphic r0, $r9;
        net.sourceforge.plantuml.graphic.StringBounder r1;
        net.sourceforge.plantuml.donors.PSystemSkinparameterList$1 r2;
        java.util.List $r3;
        java.util.Iterator r4;
        boolean $z0;
        java.lang.Object $r5;
        net.sourceforge.plantuml.graphic.TextBlock r6;
        net.sourceforge.plantuml.awt.geom.Dimension2D r7;
        net.sourceforge.plantuml.ugraphic.UTranslate $r8;
        double $d0, $d1, $d2, d3, d4;

        r2 := @this: net.sourceforge.plantuml.donors.PSystemSkinparameterList$1;

        r0 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r1 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.graphic.StringBounder getStringBounder()>();

        d3 = 0.0;

        d4 = 0.0;

        $r3 = r2.<net.sourceforge.plantuml.donors.PSystemSkinparameterList$1: java.util.List val$cols>;

        r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (net.sourceforge.plantuml.graphic.TextBlock) $r5;

        r7 = interfaceinvoke r6.<net.sourceforge.plantuml.graphic.TextBlock: net.sourceforge.plantuml.awt.geom.Dimension2D calculateDimension(net.sourceforge.plantuml.graphic.StringBounder)>(r1);

        $r8 = staticinvoke <net.sourceforge.plantuml.ugraphic.UTranslate: net.sourceforge.plantuml.ugraphic.UTranslate dx(double)>(d3);

        $r9 = interfaceinvoke r0.<net.sourceforge.plantuml.ugraphic.UGraphic: net.sourceforge.plantuml.ugraphic.UGraphic apply(net.sourceforge.plantuml.ugraphic.UChange)>($r8);

        interfaceinvoke r6.<net.sourceforge.plantuml.graphic.TextBlock: void drawU(net.sourceforge.plantuml.ugraphic.UGraphic)>($r9);

        $d0 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $d1 = $d0 + 10.0;

        d3 = d3 + $d1;

        $d2 = virtualinvoke r7.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        d4 = staticinvoke <java.lang.Math: double max(double,double)>(d4, $d2);

        goto label1;

     label2:
        return;
    }
}
