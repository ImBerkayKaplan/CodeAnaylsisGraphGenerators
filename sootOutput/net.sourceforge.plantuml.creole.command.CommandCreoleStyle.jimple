public class net.sourceforge.plantuml.creole.command.CommandCreoleStyle extends net.sourceforge.plantuml.creole.command.CommandCreoleCache implements net.sourceforge.plantuml.creole.command.Command
{
    private final net.sourceforge.plantuml.graphic.FontStyle style;
    private final boolean tryExtendedColor;

    public java.lang.String startingChars()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleStyle r0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleStyle;

        return "</*_~-";
    }

    public static net.sourceforge.plantuml.creole.command.Command createCreole(net.sourceforge.plantuml.graphic.FontStyle)
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleStyle $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        net.sourceforge.plantuml.graphic.FontStyle r3;
        java.lang.String $r4, $r7, $r10;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.FontStyle;

        $r0 = new net.sourceforge.plantuml.creole.command.CommandCreoleStyle;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^(");

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontStyle: java.lang.String getCreoleSyntax()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(.+?)");

        $r7 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontStyle: java.lang.String getCreoleSyntax()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontStyle,boolean)>($r10, r3, 0);

        return $r0;
    }

    public static net.sourceforge.plantuml.creole.command.Command createLegacy(net.sourceforge.plantuml.graphic.FontStyle)
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleStyle $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r9;
        net.sourceforge.plantuml.graphic.FontStyle r3;
        java.lang.String $r4, $r7, $r10;
        boolean $z0;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.FontStyle;

        $r0 = new net.sourceforge.plantuml.creole.command.CommandCreoleStyle;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^((");

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontStyle: java.lang.String getActivationPattern()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")(.+?)");

        $r7 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontStyle: java.lang.String getDeactivationPattern()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontStyle: boolean canHaveExtendedColor()>();

        specialinvoke $r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontStyle,boolean)>($r10, r3, $z0);

        return $r0;
    }

    public static net.sourceforge.plantuml.creole.command.Command createLegacyEol(net.sourceforge.plantuml.graphic.FontStyle)
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleStyle $r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6;
        net.sourceforge.plantuml.graphic.FontStyle r3;
        java.lang.String $r4, $r7;
        boolean $z0;

        r3 := @parameter0: net.sourceforge.plantuml.graphic.FontStyle;

        $r0 = new net.sourceforge.plantuml.creole.command.CommandCreoleStyle;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^((");

        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontStyle: java.lang.String getActivationPattern()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")(.+))$");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.graphic.FontStyle: boolean canHaveExtendedColor()>();

        specialinvoke $r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: void <init>(java.lang.String,net.sourceforge.plantuml.graphic.FontStyle,boolean)>($r7, r3, $z0);

        return $r0;
    }

    private void <init>(java.lang.String, net.sourceforge.plantuml.graphic.FontStyle, boolean)
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleStyle r0;
        java.lang.String r1;
        net.sourceforge.plantuml.graphic.FontStyle r2;
        boolean z0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleStyle;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.FontStyle;

        z0 := @parameter2: boolean;

        specialinvoke r0.<net.sourceforge.plantuml.creole.command.CommandCreoleCache: void <init>(java.lang.String)>(r1);

        r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.graphic.FontStyle style> = r2;

        r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: boolean tryExtendedColor> = z0;

        return;
    }

    private net.sourceforge.plantuml.ugraphic.color.HColor getExtendedColor(net.sourceforge.plantuml.command.regex.Matcher2)
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleStyle r0;
        boolean $z0;
        net.sourceforge.plantuml.command.regex.Matcher2 r1;
        net.sourceforge.plantuml.graphic.FontStyle $r2;
        java.lang.String $r3;
        net.sourceforge.plantuml.ugraphic.color.HColor $r4;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleStyle;

        r1 := @parameter0: net.sourceforge.plantuml.command.regex.Matcher2;

        $z0 = r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: boolean tryExtendedColor>;

        if $z0 == 0 goto label1;

        $r2 = r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.graphic.FontStyle style>;

        $r3 = virtualinvoke r1.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        $r4 = virtualinvoke $r2.<net.sourceforge.plantuml.graphic.FontStyle: net.sourceforge.plantuml.ugraphic.color.HColor getExtendedColor(java.lang.String)>($r3);

        return $r4;

     label1:
        return null;
    }

    public java.lang.String executeAndGetRemaining(java.lang.String, net.sourceforge.plantuml.creole.legacy.StripeSimple)
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleStyle r0;
        java.lang.String r1, $r10, $r11, $r12;
        net.sourceforge.plantuml.command.regex.Pattern2 $r2;
        net.sourceforge.plantuml.command.regex.Matcher2 r3;
        boolean $z0;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r4;
        net.sourceforge.plantuml.graphic.FontConfiguration r5, r9;
        net.sourceforge.plantuml.graphic.AddStyle $r6;
        net.sourceforge.plantuml.graphic.FontStyle $r7;
        net.sourceforge.plantuml.ugraphic.color.HColor $r8;
        int i0, $i1;
        java.lang.IllegalStateException $r13;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleStyle;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r2 = r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.command.regex.Pattern2 mypattern>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>()>();

        throw $r13;

     label1:
        r5 = virtualinvoke r4.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.graphic.FontConfiguration getActualFontConfiguration()>();

        $r6 = new net.sourceforge.plantuml.graphic.AddStyle;

        $r7 = r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.graphic.FontStyle style>;

        $r8 = specialinvoke r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.ugraphic.color.HColor getExtendedColor(net.sourceforge.plantuml.command.regex.Matcher2)>(r3);

        specialinvoke $r6.<net.sourceforge.plantuml.graphic.AddStyle: void <init>(net.sourceforge.plantuml.graphic.FontStyle,net.sourceforge.plantuml.ugraphic.color.HColor)>($r7, $r8);

        r9 = virtualinvoke $r6.<net.sourceforge.plantuml.graphic.AddStyle: net.sourceforge.plantuml.graphic.FontConfiguration apply(net.sourceforge.plantuml.graphic.FontConfiguration)>(r5);

        virtualinvoke r4.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void setActualFontConfiguration(net.sourceforge.plantuml.graphic.FontConfiguration)>(r9);

        i0 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.Matcher2: int groupCount()>();

        $r10 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(i0);

        virtualinvoke r4.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void analyzeAndAdd(java.lang.String)>($r10);

        virtualinvoke r4.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void setActualFontConfiguration(net.sourceforge.plantuml.graphic.FontConfiguration)>(r5);

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i1 = virtualinvoke $r11.<java.lang.String: int length()>();

        $r12 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r12;
    }

    public int matchingSize(java.lang.String)
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleStyle r0;
        java.lang.String r1, $r4;
        net.sourceforge.plantuml.command.regex.Pattern2 $r2;
        net.sourceforge.plantuml.command.regex.Matcher2 r3;
        boolean $z0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleStyle;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<net.sourceforge.plantuml.creole.command.CommandCreoleStyle: net.sourceforge.plantuml.command.regex.Pattern2 mypattern>;

        r3 = virtualinvoke $r2.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        return $i0;
    }
}
