public class net.sourceforge.plantuml.dedication.TurningBytes extends java.lang.Object
{
    private final byte[] key;
    private int idx;

    public void <init>(byte[])
    {
        net.sourceforge.plantuml.dedication.TurningBytes r0;
        byte[] r1;

        r0 := @this: net.sourceforge.plantuml.dedication.TurningBytes;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.dedication.TurningBytes: byte[] key> = r1;

        return;
    }

    public byte nextByte()
    {
        net.sourceforge.plantuml.dedication.TurningBytes r0;
        byte[] $r1, $r2, $r3;
        int $i0, $i1, $i3, $i4, $i5, $i6;
        byte b2;

        r0 := @this: net.sourceforge.plantuml.dedication.TurningBytes;

        $r1 = r0.<net.sourceforge.plantuml.dedication.TurningBytes: byte[] key>;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<net.sourceforge.plantuml.dedication.TurningBytes: byte[] key>;

        $i1 = r0.<net.sourceforge.plantuml.dedication.TurningBytes: int idx>;

        b2 = $r2[$i1];

        $i3 = r0.<net.sourceforge.plantuml.dedication.TurningBytes: int idx>;

        $i4 = $i3 + 1;

        r0.<net.sourceforge.plantuml.dedication.TurningBytes: int idx> = $i4;

        $i6 = r0.<net.sourceforge.plantuml.dedication.TurningBytes: int idx>;

        $r3 = r0.<net.sourceforge.plantuml.dedication.TurningBytes: byte[] key>;

        $i5 = lengthof $r3;

        if $i6 < $i5 goto label2;

        r0.<net.sourceforge.plantuml.dedication.TurningBytes: int idx> = 0;

     label2:
        return b2;
    }
}
