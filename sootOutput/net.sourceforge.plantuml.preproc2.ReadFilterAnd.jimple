public class net.sourceforge.plantuml.preproc2.ReadFilterAnd extends java.lang.Object implements net.sourceforge.plantuml.preproc2.ReadFilter
{
    private final java.util.Collection all;

    public void <init>()
    {
        net.sourceforge.plantuml.preproc2.ReadFilterAnd r0;
        java.util.ArrayList $r1;

        r0 := @this: net.sourceforge.plantuml.preproc2.ReadFilterAnd;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.preproc2.ReadFilterAnd: java.util.Collection all> = $r1;

        return;
    }

    public void add(net.sourceforge.plantuml.preproc2.ReadFilter)
    {
        net.sourceforge.plantuml.preproc2.ReadFilterAnd r0;
        net.sourceforge.plantuml.preproc2.ReadFilter r1;
        java.util.Collection $r2;

        r0 := @this: net.sourceforge.plantuml.preproc2.ReadFilterAnd;

        r1 := @parameter0: net.sourceforge.plantuml.preproc2.ReadFilter;

        $r2 = r0.<net.sourceforge.plantuml.preproc2.ReadFilterAnd: java.util.Collection all>;

        interfaceinvoke $r2.<java.util.Collection: boolean add(java.lang.Object)>(r1);

        return;
    }

    public net.sourceforge.plantuml.preproc.ReadLine applyFilter(net.sourceforge.plantuml.preproc.ReadLine)
    {
        net.sourceforge.plantuml.preproc2.ReadFilterAnd r0;
        java.util.Collection $r1;
        java.util.Iterator r2;
        boolean $z0;
        java.lang.Object $r3;
        net.sourceforge.plantuml.preproc2.ReadFilter r4;
        net.sourceforge.plantuml.preproc.ReadLine r5;

        r0 := @this: net.sourceforge.plantuml.preproc2.ReadFilterAnd;

        r5 := @parameter0: net.sourceforge.plantuml.preproc.ReadLine;

        $r1 = r0.<net.sourceforge.plantuml.preproc2.ReadFilterAnd: java.util.Collection all>;

        r2 = interfaceinvoke $r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (net.sourceforge.plantuml.preproc2.ReadFilter) $r3;

        r5 = interfaceinvoke r4.<net.sourceforge.plantuml.preproc2.ReadFilter: net.sourceforge.plantuml.preproc.ReadLine applyFilter(net.sourceforge.plantuml.preproc.ReadLine)>(r5);

        goto label1;

     label2:
        return r5;
    }
}
