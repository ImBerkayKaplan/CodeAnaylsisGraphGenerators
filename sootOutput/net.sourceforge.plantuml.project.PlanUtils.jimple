public class net.sourceforge.plantuml.project.PlanUtils extends java.lang.Object
{

    private void <init>()
    {
        net.sourceforge.plantuml.project.PlanUtils r0;

        r0 := @this: net.sourceforge.plantuml.project.PlanUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.project.LoadPlanable minOf(net.sourceforge.plantuml.project.LoadPlanable, net.sourceforge.plantuml.project.LoadPlanable)
    {
        net.sourceforge.plantuml.project.PlanUtils$1 $r0;
        net.sourceforge.plantuml.project.LoadPlanable r1, r2;

        r1 := @parameter0: net.sourceforge.plantuml.project.LoadPlanable;

        r2 := @parameter1: net.sourceforge.plantuml.project.LoadPlanable;

        $r0 = new net.sourceforge.plantuml.project.PlanUtils$1;

        specialinvoke $r0.<net.sourceforge.plantuml.project.PlanUtils$1: void <init>(net.sourceforge.plantuml.project.LoadPlanable,net.sourceforge.plantuml.project.LoadPlanable)>(r1, r2);

        return $r0;
    }

    public static net.sourceforge.plantuml.project.LoadPlanable multiply(net.sourceforge.plantuml.project.LoadPlanable, net.sourceforge.plantuml.project.LoadPlanable)
    {
        net.sourceforge.plantuml.project.PlanUtils$2 $r0;
        net.sourceforge.plantuml.project.LoadPlanable r1, r2;

        r1 := @parameter0: net.sourceforge.plantuml.project.LoadPlanable;

        r2 := @parameter1: net.sourceforge.plantuml.project.LoadPlanable;

        $r0 = new net.sourceforge.plantuml.project.PlanUtils$2;

        specialinvoke $r0.<net.sourceforge.plantuml.project.PlanUtils$2: void <init>(net.sourceforge.plantuml.project.LoadPlanable,net.sourceforge.plantuml.project.LoadPlanable)>(r1, r2);

        return $r0;
    }
}
