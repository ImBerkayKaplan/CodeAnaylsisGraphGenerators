public final class net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity extends java.lang.Object implements net.sourceforge.plantuml.command.note.SingleMultiFactoryCommand
{
    private final net.sourceforge.plantuml.command.regex.IRegex partialPattern;
    private final java.lang.String key;

    public void <init>(java.lang.String, net.sourceforge.plantuml.command.regex.IRegex)
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity r0;
        net.sourceforge.plantuml.command.regex.IRegex r1;
        java.lang.String r2;

        r0 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.IRegex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.regex.IRegex partialPattern> = r1;

        r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: java.lang.String key> = r2;

        return;
    }

    private net.sourceforge.plantuml.command.regex.IRegex getRegexConcatSingleLine(net.sourceforge.plantuml.command.regex.IRegex)
    {
        java.lang.StringBuilder $r0, $r3, $r6, $r7, $r27, $r29, $r30, $r37, $r38, $r40, $r41;
        java.lang.Class $r1;
        java.lang.String $r2, $r5, $r8, $r28, $r31, $r39, $r42;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity r4;
        net.sourceforge.plantuml.command.regex.IRegex[] $r9, $r15, $r17;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r10, $r11, $r12, $r13, $r18, $r19, $r20, $r22, $r23, $r24, $r25, $r26, $r32, $r34, $r35, $r36, $r43, $r44, $r45, $r46, $r47;
        net.sourceforge.plantuml.command.regex.RegexOr $r14;
        net.sourceforge.plantuml.command.regex.RegexConcat $r16, $r48;
        net.sourceforge.plantuml.command.regex.IRegex r21;
        net.sourceforge.plantuml.graphic.color.ColorParser $r33;

        r4 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        r21 := @parameter0: net.sourceforge.plantuml.command.regex.IRegex;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lnet/sourceforge/plantuml/command/note/CommandFactoryNoteOnEntity;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = r4.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: java.lang.String key>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("single");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[18];

        $r10 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r9[0] = $r10;

        $r11 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r11.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("note");

        $r9[1] = $r11;

        $r12 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r9[2] = $r12;

        $r13 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r13.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(right|left|top|bottom)");

        $r9[3] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r15 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r16 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r17 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r18 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r17[0] = $r18;

        $r19 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r19.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("of");

        $r17[1] = $r19;

        $r20 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r17[2] = $r20;

        $r17[3] = r21;

        specialinvoke $r16.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r17);

        $r15[0] = $r16;

        $r22 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r22.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("");

        $r15[1] = $r22;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r15);

        $r9[4] = $r14;

        $r23 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r9[5] = $r23;

        $r24 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r24.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREO", "(\\<{2}.*\\>{2})?");

        $r9[6] = $r24;

        $r25 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r9[7] = $r25;

        $r26 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotag: java.lang.String pattern()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TAGS", $r31);

        $r9[8] = $r26;

        $r32 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r9[9] = $r32;

        $r33 = staticinvoke <net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r34 = virtualinvoke $r33.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r9[10] = $r34;

        $r35 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r9[11] = $r35;

        $r36 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r39 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r42);

        $r9[12] = $r36;

        $r43 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r9[13] = $r43;

        $r44 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r44.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>(":");

        $r9[14] = $r44;

        $r45 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r9[15] = $r45;

        $r46 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r46.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("NOTE", "(.*)");

        $r9[16] = $r46;

        $r47 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r9[17] = $r47;

        $r48 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r8, $r9);

        return $r48;
    }

    private static net.sourceforge.plantuml.graphic.color.ColorParser color()
    {
        net.sourceforge.plantuml.graphic.color.ColorType $r0;
        net.sourceforge.plantuml.graphic.color.ColorParser $r1;

        $r0 = <net.sourceforge.plantuml.graphic.color.ColorType: net.sourceforge.plantuml.graphic.color.ColorType BACK>;

        $r1 = staticinvoke <net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.ColorParser simpleColor(net.sourceforge.plantuml.graphic.color.ColorType)>($r0);

        return $r1;
    }

    private net.sourceforge.plantuml.command.regex.IRegex getRegexConcatMultiLine(net.sourceforge.plantuml.command.regex.IRegex, boolean)
    {
        boolean z0;
        java.lang.StringBuilder $r0, $r3, $r6, $r7, $r8, $r28, $r30, $r31, $r38, $r39, $r41, $r42, $r46, $r49, $r51, $r52, $r53, $r72, $r74, $r75, $r82, $r83, $r85, $r86;
        java.lang.Class $r1, $r47;
        java.lang.String $r2, $r5, $r9, $r29, $r32, $r40, $r43, $r48, $r50, $r54, $r73, $r76, $r84, $r87;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity r4;
        net.sourceforge.plantuml.command.regex.IRegex[] $r10, $r16, $r18, $r55, $r61, $r63;
        net.sourceforge.plantuml.command.regex.RegexLeaf $r11, $r12, $r13, $r14, $r19, $r20, $r21, $r23, $r24, $r25, $r26, $r27, $r33, $r35, $r36, $r37, $r44, $r56, $r57, $r58, $r59, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r77, $r79, $r80, $r81, $r88, $r89, $r90;
        net.sourceforge.plantuml.command.regex.RegexOr $r15, $r60;
        net.sourceforge.plantuml.command.regex.RegexConcat $r17, $r45, $r62, $r91;
        net.sourceforge.plantuml.command.regex.IRegex r22;
        net.sourceforge.plantuml.graphic.color.ColorParser $r34, $r78;

        r4 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        r22 := @parameter0: net.sourceforge.plantuml.command.regex.IRegex;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = class "Lnet/sourceforge/plantuml/command/note/CommandFactoryNoteOnEntity;";

        $r48 = virtualinvoke $r47.<java.lang.Class: java.lang.String getName()>();

        $r49 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = r4.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: java.lang.String key>;

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multi");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        $r55 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[16];

        $r56 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r55[0] = $r56;

        $r57 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r57.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("note");

        $r55[1] = $r57;

        $r58 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r55[2] = $r58;

        $r59 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r59.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(right|left|top|bottom)");

        $r55[3] = $r59;

        $r60 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r61 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r62 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r63 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r64 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r63[0] = $r64;

        $r65 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r65.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("of");

        $r63[1] = $r65;

        $r66 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r63[2] = $r66;

        $r63[3] = r22;

        specialinvoke $r62.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r63);

        $r61[0] = $r62;

        $r67 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r67.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("");

        $r61[1] = $r67;

        specialinvoke $r60.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r61);

        $r55[4] = $r60;

        $r68 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r55[5] = $r68;

        $r69 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r69.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREO", "(\\<{2}.*\\>{2})?");

        $r55[6] = $r69;

        $r70 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r55[7] = $r70;

        $r71 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r73 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotag: java.lang.String pattern()>();

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r71.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TAGS", $r76);

        $r55[8] = $r71;

        $r77 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r55[9] = $r77;

        $r78 = staticinvoke <net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r79 = virtualinvoke $r78.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r55[10] = $r79;

        $r80 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r55[11] = $r80;

        $r81 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r82 = new java.lang.StringBuilder;

        specialinvoke $r82.<java.lang.StringBuilder: void <init>()>();

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r84 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r81.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r87);

        $r55[12] = $r81;

        $r88 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r55[13] = $r88;

        $r89 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r89.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("\\{");

        $r55[14] = $r89;

        $r90 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r55[15] = $r90;

        $r91 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r54, $r55);

        return $r91;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = class "Lnet/sourceforge/plantuml/command/note/CommandFactoryNoteOnEntity;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = r4.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: java.lang.String key>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("multi");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[14];

        $r11 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf start()>();

        $r10[0] = $r11;

        $r12 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r12.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("note");

        $r10[1] = $r12;

        $r13 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r10[2] = $r13;

        $r14 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r14.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("POSITION", "(right|left|top|bottom)");

        $r10[3] = $r14;

        $r15 = new net.sourceforge.plantuml.command.regex.RegexOr;

        $r16 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[2];

        $r17 = new net.sourceforge.plantuml.command.regex.RegexConcat;

        $r18 = newarray (net.sourceforge.plantuml.command.regex.IRegex)[4];

        $r19 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r18[0] = $r19;

        $r20 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r20.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("of");

        $r18[1] = $r20;

        $r21 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceOneOrMore()>();

        $r18[2] = $r21;

        $r18[3] = r22;

        specialinvoke $r17.<net.sourceforge.plantuml.command.regex.RegexConcat: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r18);

        $r16[0] = $r17;

        $r23 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r23.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String)>("");

        $r16[1] = $r23;

        specialinvoke $r15.<net.sourceforge.plantuml.command.regex.RegexOr: void <init>(net.sourceforge.plantuml.command.regex.IRegex[])>($r16);

        $r10[4] = $r15;

        $r24 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r10[5] = $r24;

        $r25 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        specialinvoke $r25.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("STEREO", "(\\<{2}.*\\>{2})?");

        $r10[6] = $r25;

        $r26 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r10[7] = $r26;

        $r27 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotag: java.lang.String pattern()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("TAGS", $r32);

        $r10[8] = $r27;

        $r33 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r10[9] = $r33;

        $r34 = staticinvoke <net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r35 = virtualinvoke $r34.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.command.regex.RegexLeaf getRegex()>();

        $r10[10] = $r35;

        $r36 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf spaceZeroOrMore()>();

        $r10[11] = $r36;

        $r37 = new net.sourceforge.plantuml.command.regex.RegexLeaf;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r40 = staticinvoke <net.sourceforge.plantuml.UrlBuilder: java.lang.String getRegexp()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")?");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<net.sourceforge.plantuml.command.regex.RegexLeaf: void <init>(java.lang.String,java.lang.String)>("URL", $r43);

        $r10[12] = $r37;

        $r44 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexLeaf: net.sourceforge.plantuml.command.regex.RegexLeaf end()>();

        $r10[13] = $r44;

        $r45 = staticinvoke <net.sourceforge.plantuml.command.regex.RegexConcat: net.sourceforge.plantuml.command.regex.RegexConcat build(java.lang.String,net.sourceforge.plantuml.command.regex.IRegex[])>($r9, $r10);

        return $r45;
    }

    public net.sourceforge.plantuml.command.Command createSingleLine()
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity$1 $r0;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity r1;
        net.sourceforge.plantuml.command.regex.IRegex $r2, $r3;

        r1 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        $r0 = new net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity$1;

        $r2 = r1.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.regex.IRegex partialPattern>;

        $r3 = specialinvoke r1.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.regex.IRegex getRegexConcatSingleLine(net.sourceforge.plantuml.command.regex.IRegex)>($r2);

        specialinvoke $r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity$1: void <init>(net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity,net.sourceforge.plantuml.command.regex.IRegex)>(r1, $r3);

        return $r0;
    }

    public net.sourceforge.plantuml.command.Command createMultiLine(boolean)
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity$2 $r0;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity r1;
        boolean z0;
        net.sourceforge.plantuml.command.regex.IRegex $r2, $r3;
        net.sourceforge.plantuml.command.MultilinesStrategy $r4;

        r1 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        z0 := @parameter0: boolean;

        $r0 = new net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity$2;

        $r2 = r1.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.regex.IRegex partialPattern>;

        $r3 = specialinvoke r1.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.regex.IRegex getRegexConcatMultiLine(net.sourceforge.plantuml.command.regex.IRegex,boolean)>($r2, z0);

        $r4 = <net.sourceforge.plantuml.command.MultilinesStrategy: net.sourceforge.plantuml.command.MultilinesStrategy KEEP_STARTING_QUOTE>;

        specialinvoke $r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity$2: void <init>(net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity,net.sourceforge.plantuml.command.regex.IRegex,net.sourceforge.plantuml.command.MultilinesStrategy,boolean)>(r1, $r3, $r4, z0);

        return $r0;
    }

    private net.sourceforge.plantuml.command.CommandExecutionResult executeInternal(net.sourceforge.plantuml.command.regex.RegexResult, net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram, net.sourceforge.plantuml.Url, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.regex.RegexResult r0;
        java.lang.String r1, r2, r13, $r15, $r16, r61;
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        net.sourceforge.plantuml.cucadiagram.Code $r4, $r58, r59;
        net.sourceforge.plantuml.command.BlocLines r5;
        net.sourceforge.plantuml.cucadiagram.Display $r6, $r30, $r34, $r38, $r42, $r50;
        net.sourceforge.plantuml.cucadiagram.LeafType $r7, $r51;
        net.sourceforge.plantuml.graphic.color.ColorParser $r8;
        net.sourceforge.plantuml.ISkinParam $r9, $r11, $r18, $r31, $r35, $r39, $r43, $r45;
        net.sourceforge.plantuml.api.ThemeStyle $r10;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r12;
        net.sourceforge.plantuml.Url r14;
        net.sourceforge.plantuml.command.Position $r17, $r24, $r25, $r26, $r27, r66;
        net.sourceforge.plantuml.cucadiagram.Rankdir $r19;
        net.sourceforge.plantuml.cucadiagram.LinkType $r20, r23;
        net.sourceforge.plantuml.cucadiagram.LinkDecor $r21, $r22;
        java.lang.IllegalArgumentException $r28;
        net.sourceforge.plantuml.cucadiagram.Link $r29, $r33, $r37, $r41, r67;
        net.sourceforge.plantuml.style.StyleBuilder $r32, $r36, $r40, $r44;
        net.sourceforge.plantuml.ColorParam[] $r46;
        net.sourceforge.plantuml.ColorParam $r47, $r48;
        net.sourceforge.plantuml.FontParam $r49;
        net.sourceforge.plantuml.cucadiagram.Ident $r52, $r53, r57, r62;
        net.sourceforge.plantuml.command.CommandExecutionResult $r54, $r68;
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity r55;
        net.sourceforge.plantuml.cucadiagram.IEntity r56;
        net.sourceforge.plantuml.cucadiagram.IGroup $r60;
        net.sourceforge.plantuml.cucadiagram.ILeaf r63;
        net.sourceforge.plantuml.graphic.color.Colors r64;
        net.sourceforge.plantuml.cucadiagram.Stereotype r65;

        r55 := @this: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        r0 := @parameter0: net.sourceforge.plantuml.command.regex.RegexResult;

        r3 := @parameter1: net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;

        r14 := @parameter2: net.sourceforge.plantuml.Url;

        r5 := @parameter3: net.sourceforge.plantuml.command.BlocLines;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("POSITION", 0);

        r2 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("ENTITY", 0);

        if r2 != null goto label01;

        r56 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLastEntity()>();

        if r56 != null goto label08;

        $r54 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult error(java.lang.String)>("Nothing to note to");

        return $r54;

     label01:
        r57 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r2);

        $z0 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z0 == 0 goto label02;

        $r58 = r57;

        goto label03;

     label02:
        $r58 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r2);

     label03:
        r59 = $r58;

        $z1 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean isGroup(net.sourceforge.plantuml.cucadiagram.Code)>($r58);

        if $z1 == 0 goto label06;

        $z4 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z4 == 0 goto label04;

        $r60 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroupStrict(net.sourceforge.plantuml.cucadiagram.Ident)>(r57);

        goto label05;

     label04:
        $r60 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.IGroup getGroup(net.sourceforge.plantuml.cucadiagram.Code)>($r58);

     label05:
        r56 = $r60;

        goto label08;

     label06:
        $z2 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z2 == 0 goto label07;

        $r52 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Ident cleanIdent(net.sourceforge.plantuml.cucadiagram.Ident)>(r57);

        $z3 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean leafExistSmart(net.sourceforge.plantuml.cucadiagram.Ident)>($r52);

        if $z3 == 0 goto label07;

        $r53 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Ident cleanIdent(net.sourceforge.plantuml.cucadiagram.Ident)>(r57);

        r56 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf getLeafSmart(net.sourceforge.plantuml.cucadiagram.Ident)>($r53);

        goto label08;

     label07:
        r56 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.IEntity getOrCreateLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r57, r59, null, null);

     label08:
        r61 = staticinvoke <net.sourceforge.plantuml.utils.UniqueSequence: java.lang.String getString(java.lang.String)>("GMN");

        r62 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Ident buildLeafIdent(java.lang.String)>(r61);

        $z5 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: boolean V1972()>();

        if $z5 == 0 goto label09;

        $r50 = virtualinvoke r5.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        $r51 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        r63 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r62, r62, $r50, $r51, null);

        goto label10;

     label09:
        $r4 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.Code buildCode(java.lang.String)>(r61);

        $r6 = virtualinvoke r5.<net.sourceforge.plantuml.command.BlocLines: net.sourceforge.plantuml.cucadiagram.Display toDisplay()>();

        $r7 = <net.sourceforge.plantuml.cucadiagram.LeafType: net.sourceforge.plantuml.cucadiagram.LeafType NOTE>;

        r63 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.cucadiagram.ILeaf createLeaf(net.sourceforge.plantuml.cucadiagram.Ident,net.sourceforge.plantuml.cucadiagram.Code,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.LeafType,net.sourceforge.plantuml.graphic.USymbol)>(r62, $r4, $r6, $r7, null);

     label10:
        $r8 = staticinvoke <net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.graphic.color.ColorParser color()>();

        $r9 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r10 = interfaceinvoke $r9.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        $r11 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r12 = interfaceinvoke $r11.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        r64 = virtualinvoke $r8.<net.sourceforge.plantuml.graphic.color.ColorParser: net.sourceforge.plantuml.graphic.color.Colors getColor(net.sourceforge.plantuml.api.ThemeStyle,net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.ugraphic.color.HColorSet)>($r10, r0, $r12);

        r13 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("STEREO", 0);

        if r13 == null goto label11;

        r65 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Stereotype: net.sourceforge.plantuml.cucadiagram.Stereotype build(java.lang.String)>(r13);

        $r45 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r49 = <net.sourceforge.plantuml.FontParam: net.sourceforge.plantuml.FontParam NOTE>;

        $r46 = newarray (net.sourceforge.plantuml.ColorParam)[2];

        $r47 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBackground>;

        $r46[0] = $r47;

        $r48 = <net.sourceforge.plantuml.ColorParam: net.sourceforge.plantuml.ColorParam noteBorder>;

        $r46[1] = $r48;

        r64 = virtualinvoke r64.<net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors applyStereotypeForNote(net.sourceforge.plantuml.cucadiagram.Stereotype,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.FontParam,net.sourceforge.plantuml.ColorParam[])>(r65, $r45, $r49, $r46);

        interfaceinvoke r63.<net.sourceforge.plantuml.cucadiagram.IEntity: void setStereotype(net.sourceforge.plantuml.cucadiagram.Stereotype)>(r65);

     label11:
        interfaceinvoke r63.<net.sourceforge.plantuml.cucadiagram.IEntity: void setColors(net.sourceforge.plantuml.graphic.color.Colors)>(r64);

        if r14 == null goto label12;

        interfaceinvoke r63.<net.sourceforge.plantuml.cucadiagram.IEntity: void addUrl(net.sourceforge.plantuml.Url)>(r14);

     label12:
        $r15 = virtualinvoke r0.<net.sourceforge.plantuml.command.regex.RegexResult: java.lang.String get(java.lang.String,int)>("TAGS", 0);

        staticinvoke <net.sourceforge.plantuml.classdiagram.command.CommandCreateClassMultilines: void addTags(net.sourceforge.plantuml.cucadiagram.IEntity,java.lang.String)>(r63, $r15);

        $r16 = staticinvoke <net.sourceforge.plantuml.StringUtils: java.lang.String goUpperCase(java.lang.String)>(r1);

        $r17 = staticinvoke <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position valueOf(java.lang.String)>($r16);

        $r18 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r19 = interfaceinvoke $r18.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.cucadiagram.Rankdir getRankdir()>();

        r66 = virtualinvoke $r17.<net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position withRankdir(net.sourceforge.plantuml.cucadiagram.Rankdir)>($r19);

        $r20 = new net.sourceforge.plantuml.cucadiagram.LinkType;

        $r22 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        $r21 = <net.sourceforge.plantuml.cucadiagram.LinkDecor: net.sourceforge.plantuml.cucadiagram.LinkDecor NONE>;

        specialinvoke $r20.<net.sourceforge.plantuml.cucadiagram.LinkType: void <init>(net.sourceforge.plantuml.cucadiagram.LinkDecor,net.sourceforge.plantuml.cucadiagram.LinkDecor)>($r22, $r21);

        r23 = virtualinvoke $r20.<net.sourceforge.plantuml.cucadiagram.LinkType: net.sourceforge.plantuml.cucadiagram.LinkType goDashed()>();

        $r24 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position RIGHT>;

        if r66 != $r24 goto label13;

        $r41 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r42 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        $r43 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r44 = interfaceinvoke $r43.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r41.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>(r56, r63, r23, $r42, 1, $r44);

        r67 = $r41;

        virtualinvoke $r41.<net.sourceforge.plantuml.cucadiagram.Link: void setHorizontalSolitary(boolean)>(1);

        goto label17;

     label13:
        $r25 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position LEFT>;

        if r66 != $r25 goto label14;

        $r37 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r38 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        $r39 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r40 = interfaceinvoke $r39.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r37.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>(r63, r56, r23, $r38, 1, $r40);

        r67 = $r37;

        virtualinvoke $r37.<net.sourceforge.plantuml.cucadiagram.Link: void setHorizontalSolitary(boolean)>(1);

        goto label17;

     label14:
        $r26 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position BOTTOM>;

        if r66 != $r26 goto label15;

        $r33 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r34 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        $r35 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r36 = interfaceinvoke $r35.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r33.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>(r56, r63, r23, $r34, 2, $r36);

        r67 = $r33;

        goto label17;

     label15:
        $r27 = <net.sourceforge.plantuml.command.Position: net.sourceforge.plantuml.command.Position TOP>;

        if r66 != $r27 goto label16;

        $r29 = new net.sourceforge.plantuml.cucadiagram.Link;

        $r30 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        $r31 = virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: net.sourceforge.plantuml.ISkinParam getSkinParam()>();

        $r32 = interfaceinvoke $r31.<net.sourceforge.plantuml.ISkinParam: net.sourceforge.plantuml.style.StyleBuilder getCurrentStyleBuilder()>();

        specialinvoke $r29.<net.sourceforge.plantuml.cucadiagram.Link: void <init>(net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.IEntity,net.sourceforge.plantuml.cucadiagram.LinkType,net.sourceforge.plantuml.cucadiagram.Display,int,net.sourceforge.plantuml.style.StyleBuilder)>(r63, r56, r23, $r30, 2, $r32);

        r67 = $r29;

        goto label17;

     label16:
        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r28;

     label17:
        virtualinvoke r3.<net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram: void addLink(net.sourceforge.plantuml.cucadiagram.Link)>(r67);

        $r68 = staticinvoke <net.sourceforge.plantuml.command.CommandExecutionResult: net.sourceforge.plantuml.command.CommandExecutionResult ok()>();

        return $r68;
    }

    static net.sourceforge.plantuml.command.CommandExecutionResult access$000(net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity, net.sourceforge.plantuml.command.regex.RegexResult, net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram, net.sourceforge.plantuml.Url, net.sourceforge.plantuml.command.BlocLines) throws net.sourceforge.plantuml.ugraphic.color.NoSuchColorException
    {
        net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity r0;
        net.sourceforge.plantuml.command.regex.RegexResult r1;
        net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram r2;
        net.sourceforge.plantuml.Url r3;
        net.sourceforge.plantuml.command.BlocLines r4;
        net.sourceforge.plantuml.command.CommandExecutionResult $r5;

        r0 := @parameter0: net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity;

        r1 := @parameter1: net.sourceforge.plantuml.command.regex.RegexResult;

        r2 := @parameter2: net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram;

        r3 := @parameter3: net.sourceforge.plantuml.Url;

        r4 := @parameter4: net.sourceforge.plantuml.command.BlocLines;

        $r5 = specialinvoke r0.<net.sourceforge.plantuml.command.note.CommandFactoryNoteOnEntity: net.sourceforge.plantuml.command.CommandExecutionResult executeInternal(net.sourceforge.plantuml.command.regex.RegexResult,net.sourceforge.plantuml.classdiagram.AbstractEntityDiagram,net.sourceforge.plantuml.Url,net.sourceforge.plantuml.command.BlocLines)>(r1, r2, r3, r4);

        return $r5;
    }
}
