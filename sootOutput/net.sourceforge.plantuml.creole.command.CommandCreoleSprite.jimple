public class net.sourceforge.plantuml.creole.command.CommandCreoleSprite extends java.lang.Object implements net.sourceforge.plantuml.creole.command.Command
{
    private static final net.sourceforge.plantuml.command.regex.Pattern2 pattern;

    public java.lang.String startingChars()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleSprite r0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleSprite;

        return "<";
    }

    private void <init>()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleSprite r0;

        r0 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleSprite;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static net.sourceforge.plantuml.creole.command.Command create()
    {
        net.sourceforge.plantuml.creole.command.CommandCreoleSprite $r0;

        $r0 = new net.sourceforge.plantuml.creole.command.CommandCreoleSprite;

        specialinvoke $r0.<net.sourceforge.plantuml.creole.command.CommandCreoleSprite: void <init>()>();

        return $r0;
    }

    public int matchingSize(java.lang.String)
    {
        java.lang.String r0, $r3;
        net.sourceforge.plantuml.command.regex.Pattern2 $r1;
        net.sourceforge.plantuml.command.regex.Matcher2 r2;
        boolean $z0;
        int $i0;
        net.sourceforge.plantuml.creole.command.CommandCreoleSprite r4;

        r4 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleSprite;

        r0 := @parameter0: java.lang.String;

        $r1 = <net.sourceforge.plantuml.creole.command.CommandCreoleSprite: net.sourceforge.plantuml.command.regex.Pattern2 pattern>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        return $i0;
    }

    public java.lang.String executeAndGetRemaining(java.lang.String, net.sourceforge.plantuml.creole.legacy.StripeSimple)
    {
        java.lang.String r0, r3, $r4, $r5, r6, $r8, $r9;
        net.sourceforge.plantuml.command.regex.Pattern2 $r1;
        net.sourceforge.plantuml.command.regex.Matcher2 r2;
        boolean $z0;
        double d0;
        net.sourceforge.plantuml.creole.legacy.StripeSimple r7;
        int $i0;
        net.sourceforge.plantuml.ISkinSimple r10;
        net.sourceforge.plantuml.ugraphic.color.HColorSet $r11;
        net.sourceforge.plantuml.api.ThemeStyle $r12;
        java.lang.IllegalStateException $r13;
        net.sourceforge.plantuml.creole.command.CommandCreoleSprite r14;
        net.sourceforge.plantuml.ugraphic.color.HColor r15;

        r14 := @this: net.sourceforge.plantuml.creole.command.CommandCreoleSprite;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: net.sourceforge.plantuml.creole.legacy.StripeSimple;

        $r1 = <net.sourceforge.plantuml.creole.command.CommandCreoleSprite: net.sourceforge.plantuml.command.regex.Pattern2 pattern>;

        r2 = virtualinvoke $r1.<net.sourceforge.plantuml.command.regex.Pattern2: net.sourceforge.plantuml.command.regex.Matcher2 matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: boolean find()>();

        if $z0 != 0 goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>()>();

        throw $r13;

     label1:
        r3 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(2);

        $r4 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(3);

        d0 = staticinvoke <net.sourceforge.plantuml.creole.Parser: double getScale(java.lang.String,double)>($r4, 1.0);

        $r5 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(3);

        r6 = staticinvoke <net.sourceforge.plantuml.creole.Parser: java.lang.String getColor(java.lang.String)>($r5);

        r15 = null;

        if r6 == null goto label2;

        r10 = virtualinvoke r7.<net.sourceforge.plantuml.creole.legacy.StripeSimple: net.sourceforge.plantuml.ISkinSimple getSkinParam()>();

        $r11 = interfaceinvoke r10.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.ugraphic.color.HColorSet getIHtmlColorSet()>();

        $r12 = interfaceinvoke r10.<net.sourceforge.plantuml.ISkinSimple: net.sourceforge.plantuml.api.ThemeStyle getThemeStyle()>();

        r15 = virtualinvoke $r11.<net.sourceforge.plantuml.ugraphic.color.HColorSet: net.sourceforge.plantuml.ugraphic.color.HColor getColorOrWhite(net.sourceforge.plantuml.api.ThemeStyle,java.lang.String)>($r12, r6);

     label2:
        virtualinvoke r7.<net.sourceforge.plantuml.creole.legacy.StripeSimple: void addSprite(java.lang.String,double,net.sourceforge.plantuml.ugraphic.color.HColor)>(r3, d0, r15);

        $r8 = virtualinvoke r2.<net.sourceforge.plantuml.command.regex.Matcher2: java.lang.String group(int)>(1);

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        return $r9;
    }

    static void <clinit>()
    {
        net.sourceforge.plantuml.command.regex.Pattern2 $r0;

        $r0 = staticinvoke <net.sourceforge.plantuml.command.regex.MyPattern: net.sourceforge.plantuml.command.regex.Pattern2 cmpile(java.lang.String)>("^(\\<\\$([-\\p{L}0-9_/]+)([\\{,]?(?:(?:scale=|\\*)[0-9.]+)?(?:,color[= :](?:#[0-9a-fA-F]{6}|\\w+))?\\}?)?\\>)");

        <net.sourceforge.plantuml.creole.command.CommandCreoleSprite: net.sourceforge.plantuml.command.regex.Pattern2 pattern> = $r0;

        return;
    }
}
