public abstract class net.sourceforge.plantuml.api.ImageDataAbstract extends java.lang.Object implements net.sourceforge.plantuml.core.ImageData
{
    private final int width;
    private final int height;
    private int status;

    public void <init>(int, int)
    {
        net.sourceforge.plantuml.api.ImageDataAbstract r0;
        int i0, i1;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataAbstract;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.api.ImageDataAbstract: int width> = i0;

        r0.<net.sourceforge.plantuml.api.ImageDataAbstract: int height> = i1;

        return;
    }

    public void <init>(net.sourceforge.plantuml.awt.geom.Dimension2D)
    {
        net.sourceforge.plantuml.api.ImageDataAbstract r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        double $d0, $d1;
        int $i0, $i1;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataAbstract;

        r1 := @parameter0: net.sourceforge.plantuml.awt.geom.Dimension2D;

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        $i0 = (int) $d0;

        $d1 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getHeight()>();

        $i1 = (int) $d1;

        specialinvoke r0.<net.sourceforge.plantuml.api.ImageDataAbstract: void <init>(int,int)>($i0, $i1);

        return;
    }

    public final int getWidth()
    {
        net.sourceforge.plantuml.api.ImageDataAbstract r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataAbstract;

        $i0 = r0.<net.sourceforge.plantuml.api.ImageDataAbstract: int width>;

        return $i0;
    }

    public final int getHeight()
    {
        net.sourceforge.plantuml.api.ImageDataAbstract r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataAbstract;

        $i0 = r0.<net.sourceforge.plantuml.api.ImageDataAbstract: int height>;

        return $i0;
    }

    public final int getStatus()
    {
        net.sourceforge.plantuml.api.ImageDataAbstract r0;
        int $i0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataAbstract;

        $i0 = r0.<net.sourceforge.plantuml.api.ImageDataAbstract: int status>;

        return $i0;
    }

    public final void setStatus(int)
    {
        net.sourceforge.plantuml.api.ImageDataAbstract r0;
        int i0;

        r0 := @this: net.sourceforge.plantuml.api.ImageDataAbstract;

        i0 := @parameter0: int;

        r0.<net.sourceforge.plantuml.api.ImageDataAbstract: int status> = i0;

        return;
    }
}
