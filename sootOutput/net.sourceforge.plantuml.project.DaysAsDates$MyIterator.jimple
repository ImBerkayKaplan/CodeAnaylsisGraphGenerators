class net.sourceforge.plantuml.project.DaysAsDates$MyIterator extends java.lang.Object implements java.util.Iterator
{
    private net.sourceforge.plantuml.project.time.Day current;
    final net.sourceforge.plantuml.project.DaysAsDates this$0;

    public void <init>(net.sourceforge.plantuml.project.DaysAsDates, net.sourceforge.plantuml.project.time.Day)
    {
        net.sourceforge.plantuml.project.DaysAsDates$MyIterator r0;
        net.sourceforge.plantuml.project.DaysAsDates r1;
        net.sourceforge.plantuml.project.time.Day r2;

        r0 := @this: net.sourceforge.plantuml.project.DaysAsDates$MyIterator;

        r1 := @parameter0: net.sourceforge.plantuml.project.DaysAsDates;

        r2 := @parameter1: net.sourceforge.plantuml.project.time.Day;

        r0.<net.sourceforge.plantuml.project.DaysAsDates$MyIterator: net.sourceforge.plantuml.project.DaysAsDates this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.project.DaysAsDates$MyIterator: net.sourceforge.plantuml.project.time.Day current> = r2;

        return;
    }

    public boolean hasNext()
    {
        net.sourceforge.plantuml.project.DaysAsDates$MyIterator r0;
        net.sourceforge.plantuml.project.DaysAsDates $r1;
        net.sourceforge.plantuml.project.time.Day $r2, $r3;
        int $i0;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.project.DaysAsDates$MyIterator;

        $r2 = r0.<net.sourceforge.plantuml.project.DaysAsDates$MyIterator: net.sourceforge.plantuml.project.time.Day current>;

        $r1 = r0.<net.sourceforge.plantuml.project.DaysAsDates$MyIterator: net.sourceforge.plantuml.project.DaysAsDates this$0>;

        $r3 = staticinvoke <net.sourceforge.plantuml.project.DaysAsDates: net.sourceforge.plantuml.project.time.Day access$000(net.sourceforge.plantuml.project.DaysAsDates)>($r1);

        $i0 = virtualinvoke $r2.<net.sourceforge.plantuml.project.time.Day: int compareTo(net.sourceforge.plantuml.project.time.Day)>($r3);

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.project.time.Day next()
    {
        net.sourceforge.plantuml.project.DaysAsDates$MyIterator r0;
        net.sourceforge.plantuml.project.time.Day r1, $r2, $r3;

        r0 := @this: net.sourceforge.plantuml.project.DaysAsDates$MyIterator;

        r1 = r0.<net.sourceforge.plantuml.project.DaysAsDates$MyIterator: net.sourceforge.plantuml.project.time.Day current>;

        $r2 = r0.<net.sourceforge.plantuml.project.DaysAsDates$MyIterator: net.sourceforge.plantuml.project.time.Day current>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.project.time.Day: net.sourceforge.plantuml.project.time.Day increment()>();

        r0.<net.sourceforge.plantuml.project.DaysAsDates$MyIterator: net.sourceforge.plantuml.project.time.Day current> = $r3;

        return r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        net.sourceforge.plantuml.project.DaysAsDates$MyIterator r1;

        r1 := @this: net.sourceforge.plantuml.project.DaysAsDates$MyIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        net.sourceforge.plantuml.project.DaysAsDates$MyIterator r0;
        net.sourceforge.plantuml.project.time.Day $r1;

        r0 := @this: net.sourceforge.plantuml.project.DaysAsDates$MyIterator;

        $r1 = virtualinvoke r0.<net.sourceforge.plantuml.project.DaysAsDates$MyIterator: net.sourceforge.plantuml.project.time.Day next()>();

        return $r1;
    }
}
