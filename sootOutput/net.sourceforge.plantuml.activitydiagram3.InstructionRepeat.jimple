public class net.sourceforge.plantuml.activitydiagram3.InstructionRepeat extends net.sourceforge.plantuml.activitydiagram3.AbstractInstruction implements net.sourceforge.plantuml.activitydiagram3.Instruction
{
    private final net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList;
    private final net.sourceforge.plantuml.activitydiagram3.Instruction parent;
    private final net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swimlanes;
    private net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneOut;
    private net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneBackward;
    private net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyle;
    private boolean killed;
    private final net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyleIn;
    private net.sourceforge.plantuml.cucadiagram.Display backward;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2;
    private java.util.List backwardNotes;
    private net.sourceforge.plantuml.cucadiagram.Display test;
    private net.sourceforge.plantuml.cucadiagram.Display yes;
    private net.sourceforge.plantuml.cucadiagram.Display out;
    private final net.sourceforge.plantuml.cucadiagram.Display startLabel;
    private boolean testCalled;
    private net.sourceforge.plantuml.activitydiagram3.LinkRendering endRepeatLinkRendering;
    private final net.sourceforge.plantuml.graphic.color.Colors colors;

    public boolean containsBreak()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $z0 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean containsBreak()>();

        return $z0;
    }

    public void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes, net.sourceforge.plantuml.activitydiagram3.Instruction, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.ugraphic.color.HColor, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle, net.sourceforge.plantuml.graphic.color.Colors)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r5, $r6, $r7, r14;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r2, $r3, $r8, r16, $r18;
        java.util.ArrayList $r4;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r10, $r12;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r11;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle r13;
        net.sourceforge.plantuml.activitydiagram3.Instruction r15;
        java.lang.Object $r17;
        net.sourceforge.plantuml.graphic.color.Colors r19;
        net.sourceforge.plantuml.ugraphic.color.HColor r20;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r9 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes;

        r15 := @parameter1: net.sourceforge.plantuml.activitydiagram3.Instruction;

        r16 := @parameter2: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r20 := @parameter3: net.sourceforge.plantuml.ugraphic.color.HColor;

        r14 := @parameter4: net.sourceforge.plantuml.cucadiagram.Display;

        r13 := @parameter5: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;

        r19 := @parameter6: net.sourceforge.plantuml.graphic.color.Colors;

        specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.AbstractInstruction: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: boolean killed> = 0;

        $r1 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display backward> = $r1;

        $r2 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1> = $r2;

        $r3 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: java.util.List backwardNotes> = $r4;

        $r5 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display test> = $r5;

        $r6 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display yes> = $r6;

        $r7 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display out> = $r7;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: boolean testCalled> = 0;

        $r8 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.LinkRendering: net.sourceforge.plantuml.activitydiagram3.LinkRendering none()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering endRepeatLinkRendering> = $r8;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swimlanes> = r9;

        $r10 = virtualinvoke r9.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getCurrentSwimlane()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane> = $r10;

        $r11 = new net.sourceforge.plantuml.activitydiagram3.InstructionList;

        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        specialinvoke $r11.<net.sourceforge.plantuml.activitydiagram3.InstructionList: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>($r12);

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList> = $r11;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyleIn> = r13;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display startLabel> = r14;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.Instruction parent> = r15;

        $r17 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r16);

        $r18 = (net.sourceforge.plantuml.activitydiagram3.LinkRendering) $r17;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer> = $r18;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.graphic.color.Colors colors> = r19;

        return;
    }

    private boolean isLastOfTheParent()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1, $r2, $r4;
        boolean $z0, $z1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        $z0 = $r1 instanceof net.sourceforge.plantuml.activitydiagram3.InstructionList;

        if $z0 == 0 goto label3;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        $r3 = (net.sourceforge.plantuml.activitydiagram3.InstructionList) $r2;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.Instruction getLast()>();

        if $r4 != r0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        return 0;
    }

    public void setBackward(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane, net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.cucadiagram.Display r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle r3;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r4, r5;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r1 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r2 := @parameter1: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r3 := @parameter2: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle;

        r4 := @parameter3: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r5 := @parameter4: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display backward> = r1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneBackward> = r2;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyle> = r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1> = r4;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2> = r5;

        return;
    }

    public boolean hasBackward()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r2;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display backward>;

        $r1 = <net.sourceforge.plantuml.cucadiagram.Display: net.sourceforge.plantuml.cucadiagram.Display NULL>;

        if $r2 == $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction r1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r2;
        net.sourceforge.plantuml.command.CommandExecutionResult $r3;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.Instruction;

        $r2 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $r3 = virtualinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.command.CommandExecutionResult add(net.sourceforge.plantuml.activitydiagram3.Instruction)>(r1);

        return $r3;
    }

    public net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createGtile(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.ISkinParam r1;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r3;
        net.sourceforge.plantuml.activitydiagram3.gtile.Gtile r4, r5;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileRepeat $r6;
        net.sourceforge.plantuml.cucadiagram.Display $r7;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r8;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r1 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile createGtile(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        r5 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.gtile.Gtile getGtileBackward(net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.graphic.StringBounder)>(r1, r2);

        $r6 = new net.sourceforge.plantuml.activitydiagram3.gtile.GtileRepeat;

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display test>;

        specialinvoke $r6.<net.sourceforge.plantuml.activitydiagram3.gtile.GtileRepeat: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.gtile.Gtile,net.sourceforge.plantuml.ugraphic.color.HColor,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.gtile.Gtile)>($r8, r4, null, $r7, r5);

        return $r6;
    }

    private net.sourceforge.plantuml.activitydiagram3.gtile.Gtile getGtileBackward(net.sourceforge.plantuml.ISkinParam, net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r4;
        boolean $z0;
        net.sourceforge.plantuml.graphic.StringBounder r2;
        net.sourceforge.plantuml.ISkinParam r3;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r5;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle $r6;
        net.sourceforge.plantuml.activitydiagram3.gtile.GtileBox r7;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r3 := @parameter0: net.sourceforge.plantuml.ISkinParam;

        r2 := @parameter1: net.sourceforge.plantuml.graphic.StringBounder;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display backward>;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display backward>;

        $r5 = virtualinvoke r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()>();

        $r6 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyle>;

        r7 = staticinvoke <net.sourceforge.plantuml.activitydiagram3.gtile.GtileBox: net.sourceforge.plantuml.activitydiagram3.gtile.GtileBox create(net.sourceforge.plantuml.graphic.StringBounder,net.sourceforge.plantuml.ISkinParam,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.cucadiagram.Stereotype)>(r2, r3, $r4, $r5, $r6, null);

        return r7;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r2, $r4, r6, r7;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r3;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r5, $r9, $r11, $r20, $r21;
        boolean $z0, $z1, $z2, $z3;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled $r8;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes $r10;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle $r12;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r13, $r14;
        net.sourceforge.plantuml.cucadiagram.Display $r15, $r16, $r17, $r18;
        net.sourceforge.plantuml.graphic.color.Colors $r19;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r1 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        r2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtileBackward(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)>(r1);

        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $r4 = virtualinvoke $r3.<net.sourceforge.plantuml.activitydiagram3.InstructionList: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile createFtile(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)>(r1);

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering endRepeatLinkRendering>;

        r6 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile decorateOut(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r4, $r5);

        $z0 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: boolean testCalled>;

        if $z0 != 0 goto label1;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1>;

        $z1 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: boolean isNone()>();

        if $z1 == 0 goto label1;

        $r10 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes swimlanes>;

        $r11 = virtualinvoke $r10.<net.sourceforge.plantuml.activitydiagram3.ftile.Swimlanes: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer()>();

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1> = $r11;

     label1:
        $r12 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyleIn>;

        $r13 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlane>;

        $r14 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneOut>;

        $r15 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display startLabel>;

        $r16 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display test>;

        $r17 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display yes>;

        $r18 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display out>;

        $r19 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.graphic.color.Colors colors>;

        $z2 = specialinvoke r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: boolean isLastOfTheParent()>();

        $r20 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1>;

        $r21 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming2>;

        r7 = interfaceinvoke r1.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile repeat(net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,boolean,net.sourceforge.plantuml.activitydiagram3.LinkRendering,net.sourceforge.plantuml.activitydiagram3.LinkRendering)>($r12, $r13, $r14, $r15, r6, $r16, $r17, $r18, $r19, r2, $z2, $r20, $r21);

        $z3 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: boolean killed>;

        if $z3 == 0 goto label2;

        $r8 = new net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled;

        specialinvoke $r8.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileKilled: void <init>(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile)>(r7);

        return $r8;

     label2:
        return r7;
    }

    private net.sourceforge.plantuml.activitydiagram3.ftile.Ftile getFtileBackward(net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, $r3;
        boolean $z0;
        net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory r2;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r4, $r9;
        net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle $r5;
        net.sourceforge.plantuml.graphic.color.Colors $r6;
        java.util.List $r7, $r8;
        int $i0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Ftile r10;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r2 := @parameter0: net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display backward>;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display backward>;

        $r4 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneBackward>;

        $r5 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle boxStyle>;

        $r6 = staticinvoke <net.sourceforge.plantuml.graphic.color.Colors: net.sourceforge.plantuml.graphic.color.Colors empty()>();

        r10 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile activity(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,net.sourceforge.plantuml.activitydiagram3.ftile.BoxStyle,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.cucadiagram.Stereotype)>($r3, $r4, $r5, $r6, null);

        $r7 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: java.util.List backwardNotes>;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        if $i0 <= 0 goto label2;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneBackward>;

        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: java.util.List backwardNotes>;

        r10 = interfaceinvoke r2.<net.sourceforge.plantuml.activitydiagram3.ftile.FtileFactory: net.sourceforge.plantuml.activitydiagram3.ftile.Ftile addNote(net.sourceforge.plantuml.activitydiagram3.ftile.Ftile,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane,java.util.Collection)>(r10, $r9, $r8);

     label2:
        return r10;
    }

    public net.sourceforge.plantuml.activitydiagram3.Instruction getParent()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        return $r1;
    }

    public void setTest(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.LinkRendering, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r1;
        net.sourceforge.plantuml.cucadiagram.Display r2, $r4, r5, $r7, r8, $r10;
        java.lang.Object $r3, $r6, $r9;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering r11, r12;
        boolean $z0;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r2 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r5 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r8 := @parameter2: net.sourceforge.plantuml.cucadiagram.Display;

        r11 := @parameter3: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r12 := @parameter4: net.sourceforge.plantuml.activitydiagram3.LinkRendering;

        r1 := @parameter5: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane swimlaneOut> = r1;

        $r3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r2);

        $r4 = (net.sourceforge.plantuml.cucadiagram.Display) $r3;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display test> = $r4;

        $r6 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r5);

        $r7 = (net.sourceforge.plantuml.cucadiagram.Display) $r6;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display yes> = $r7;

        $r9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r8);

        $r10 = (net.sourceforge.plantuml.cucadiagram.Display) $r9;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display out> = $r10;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering endRepeatLinkRendering> = r11;

        $z0 = virtualinvoke r12.<net.sourceforge.plantuml.activitydiagram3.LinkRendering: boolean isNone()>();

        if $z0 != 0 goto label1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering incoming1> = r12;

     label1:
        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: boolean testCalled> = 1;

        return;
    }

    public final boolean kill()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        boolean $z0, $z1;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $z0 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: boolean testCalled>;

        if $z0 == 0 goto label1;

        r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: boolean killed> = 1;

        return 1;

     label1:
        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $z1 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean kill()>();

        return $z1;
    }

    public net.sourceforge.plantuml.activitydiagram3.LinkRendering getInLinkRendering()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.LinkRendering $r1;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.LinkRendering nextLinkRenderer>;

        return $r1;
    }

    public boolean addNote(net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.sequencediagram.NotePosition, net.sourceforge.plantuml.sequencediagram.NoteType, net.sourceforge.plantuml.graphic.color.Colors, net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.cucadiagram.Display $r1, r3;
        boolean $z0, $z2;
        net.sourceforge.plantuml.activitydiagram3.PositionedNote $r2;
        net.sourceforge.plantuml.sequencediagram.NotePosition r4;
        net.sourceforge.plantuml.sequencediagram.NoteType r5;
        net.sourceforge.plantuml.graphic.color.Colors r6;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane r7;
        java.util.List $r8;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r9;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        r3 := @parameter0: net.sourceforge.plantuml.cucadiagram.Display;

        r4 := @parameter1: net.sourceforge.plantuml.sequencediagram.NotePosition;

        r5 := @parameter2: net.sourceforge.plantuml.sequencediagram.NoteType;

        r6 := @parameter3: net.sourceforge.plantuml.graphic.color.Colors;

        r7 := @parameter4: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.cucadiagram.Display backward>;

        $z0 = staticinvoke <net.sourceforge.plantuml.cucadiagram.Display: boolean isNull(net.sourceforge.plantuml.cucadiagram.Display)>($r1);

        if $z0 == 0 goto label1;

        $r9 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $z2 = virtualinvoke $r9.<net.sourceforge.plantuml.activitydiagram3.InstructionList: boolean addNote(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r3, r4, r5, r6, r7);

        return $z2;

     label1:
        $r8 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: java.util.List backwardNotes>;

        $r2 = new net.sourceforge.plantuml.activitydiagram3.PositionedNote;

        specialinvoke $r2.<net.sourceforge.plantuml.activitydiagram3.PositionedNote: void <init>(net.sourceforge.plantuml.cucadiagram.Display,net.sourceforge.plantuml.sequencediagram.NotePosition,net.sourceforge.plantuml.sequencediagram.NoteType,net.sourceforge.plantuml.graphic.color.Colors,net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane)>(r3, r4, r5, r6, r7);

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r2);

        return 1;
    }

    public java.util.Set getSwimlanes()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.InstructionList $r1;
        java.util.Set $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.InstructionList repeatList>;

        $r2 = virtualinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.InstructionList: java.util.Set getSwimlanes()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneIn()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }

    public net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()
    {
        net.sourceforge.plantuml.activitydiagram3.InstructionRepeat r0;
        net.sourceforge.plantuml.activitydiagram3.Instruction $r1;
        net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane $r2;

        r0 := @this: net.sourceforge.plantuml.activitydiagram3.InstructionRepeat;

        $r1 = r0.<net.sourceforge.plantuml.activitydiagram3.InstructionRepeat: net.sourceforge.plantuml.activitydiagram3.Instruction parent>;

        $r2 = interfaceinvoke $r1.<net.sourceforge.plantuml.activitydiagram3.Instruction: net.sourceforge.plantuml.activitydiagram3.ftile.Swimlane getSwimlaneOut()>();

        return $r2;
    }
}
