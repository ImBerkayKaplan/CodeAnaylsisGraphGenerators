public class net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse extends net.sourceforge.plantuml.asciiart.AbstractComponentText
{
    private final net.sourceforge.plantuml.skin.ComponentType type;
    private final net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay;
    private final net.sourceforge.plantuml.FileFormat fileFormat;

    public void <init>(net.sourceforge.plantuml.skin.ComponentType, net.sourceforge.plantuml.cucadiagram.Display, net.sourceforge.plantuml.FileFormat)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse r0;
        net.sourceforge.plantuml.skin.ComponentType r1;
        net.sourceforge.plantuml.cucadiagram.Display r2;
        net.sourceforge.plantuml.FileFormat r3;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse;

        r1 := @parameter0: net.sourceforge.plantuml.skin.ComponentType;

        r2 := @parameter1: net.sourceforge.plantuml.cucadiagram.Display;

        r3 := @parameter2: net.sourceforge.plantuml.FileFormat;

        specialinvoke r0.<net.sourceforge.plantuml.asciiart.AbstractComponentText: void <init>()>();

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse: net.sourceforge.plantuml.skin.ComponentType type> = r1;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay> = r2;

        r0.<net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse: net.sourceforge.plantuml.FileFormat fileFormat> = r3;

        return;
    }

    public void drawU(net.sourceforge.plantuml.ugraphic.UGraphic, net.sourceforge.plantuml.skin.Area, net.sourceforge.plantuml.skin.Context2D)
    {
        net.sourceforge.plantuml.skin.Area r0;
        net.sourceforge.plantuml.awt.geom.Dimension2D r1;
        net.sourceforge.plantuml.ugraphic.UGraphic r2;
        net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt $r3;
        net.sourceforge.plantuml.asciiart.UmlCharArea r4;
        double $d0;
        int i0, $i1, $i2, $i3;
        net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse r5;
        net.sourceforge.plantuml.cucadiagram.Display $r6, $r12;
        java.lang.CharSequence $r7, $r13;
        net.sourceforge.plantuml.FileFormat $r8, $r9;
        java.lang.StringBuilder $r10, $r11, $r14, $r15;
        java.lang.String $r16;
        net.sourceforge.plantuml.skin.Context2D r17;

        r5 := @this: net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse;

        r2 := @parameter0: net.sourceforge.plantuml.ugraphic.UGraphic;

        r0 := @parameter1: net.sourceforge.plantuml.skin.Area;

        r17 := @parameter2: net.sourceforge.plantuml.skin.Context2D;

        r1 = virtualinvoke r0.<net.sourceforge.plantuml.skin.Area: net.sourceforge.plantuml.awt.geom.Dimension2D getDimensionToUse()>();

        $r3 = (net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt) r2;

        r4 = virtualinvoke $r3.<net.sourceforge.plantuml.ugraphic.txt.UGraphicTxt: net.sourceforge.plantuml.asciiart.UmlCharArea getCharArea()>();

        $d0 = virtualinvoke r1.<net.sourceforge.plantuml.awt.geom.Dimension2D: double getWidth()>();

        i0 = (int) $d0;

        $r6 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r7 = virtualinvoke $r6.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        if $r7 == null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r12 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse: net.sourceforge.plantuml.cucadiagram.Display stringsToDisplay>;

        $r13 = virtualinvoke $r12.<net.sourceforge.plantuml.cucadiagram.Display: java.lang.CharSequence get(int)>(0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawStringLR(java.lang.String,int,int)>($r16, 2, 0);

     label1:
        $r9 = r5.<net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse: net.sourceforge.plantuml.FileFormat fileFormat>;

        $r8 = <net.sourceforge.plantuml.FileFormat: net.sourceforge.plantuml.FileFormat UTXT>;

        if $r9 != $r8 goto label2;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawChar(char,int,int)>(9568, 0, -1);

        $i2 = i0 - 1;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawChar(char,int,int)>(9571, $i2, -1);

        $i3 = i0 - 1;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawHLine(char,int,int,int,char,char)>(9552, -1, 1, $i3, 9474, 9578);

        goto label3;

     label2:
        $i1 = i0 - 1;

        interfaceinvoke r4.<net.sourceforge.plantuml.asciiart.UmlCharArea: void drawHLine(char,int,int,int)>(126, -1, 1, $i1);

     label3:
        return;
    }

    public double getPreferredHeight(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 1.0;
    }

    public double getPreferredWidth(net.sourceforge.plantuml.graphic.StringBounder)
    {
        net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse r0;
        net.sourceforge.plantuml.graphic.StringBounder r1;

        r0 := @this: net.sourceforge.plantuml.asciiart.ComponentTextGroupingElse;

        r1 := @parameter0: net.sourceforge.plantuml.graphic.StringBounder;

        return 1.0;
    }
}
