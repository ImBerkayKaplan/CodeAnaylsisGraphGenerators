public class net.sourceforge.plantuml.dedication.RBlock extends java.lang.Object
{
    private final byte[] buffer;

    private void <init>(byte[])
    {
        net.sourceforge.plantuml.dedication.RBlock r0;
        byte[] r1, $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: net.sourceforge.plantuml.dedication.RBlock;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = lengthof r1;

        $i1 = $i0 + 1;

        $r2 = newarray (byte)[$i1];

        r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer> = $r2;

        $r3 = r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer>;

        $i2 = lengthof r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, $r3, 1, $i2);

        return;
    }

    public void <init>(byte[], int, int)
    {
        net.sourceforge.plantuml.dedication.RBlock r0;
        int i0, $i1, i2, $i3, $i4, $i5, $i6;
        byte[] $r1, r2, $r3, $r4;

        r0 := @this: net.sourceforge.plantuml.dedication.RBlock;

        r2 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = i0 + 1;

        $r1 = newarray (byte)[$i1];

        r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer> = $r1;

        $i4 = i2 + i0;

        $i3 = lengthof r2;

        if $i4 >= $i3 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i2, $r4, 1, i0);

        goto label2;

     label1:
        $r3 = r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer>;

        $i5 = lengthof r2;

        $i6 = $i5 - i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i2, $r3, 1, $i6);

     label2:
        return;
    }

    public net.sourceforge.plantuml.dedication.RBlock change(java.math.BigInteger, java.math.BigInteger)
    {
        java.math.BigInteger $r0, r4, r5, r6;
        net.sourceforge.plantuml.dedication.RBlock r1, $r7;
        byte[] $r2, $r8;

        r1 := @this: net.sourceforge.plantuml.dedication.RBlock;

        r4 := @parameter0: java.math.BigInteger;

        r5 := @parameter1: java.math.BigInteger;

        $r0 = new java.math.BigInteger;

        $r2 = r1.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer>;

        specialinvoke $r0.<java.math.BigInteger: void <init>(byte[])>($r2);

        r6 = virtualinvoke $r0.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>(r4, r5);

        $r7 = new net.sourceforge.plantuml.dedication.RBlock;

        $r8 = virtualinvoke r6.<java.math.BigInteger: byte[] toByteArray()>();

        specialinvoke $r7.<net.sourceforge.plantuml.dedication.RBlock: void <init>(byte[])>($r8);

        return $r7;
    }

    public byte[] getData(int)
    {
        net.sourceforge.plantuml.dedication.RBlock r0;
        byte[] $r1, r2, $r3, $r4, $r5;
        int i0, $i1, $i2, $i3;

        r0 := @this: net.sourceforge.plantuml.dedication.RBlock;

        i0 := @parameter0: int;

        $r1 = r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer>;

        $i1 = lengthof $r1;

        if $i1 != i0 goto label1;

        $r5 = r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer>;

        return $r5;

     label1:
        r2 = newarray (byte)[i0];

        $r4 = r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer>;

        $r3 = r0.<net.sourceforge.plantuml.dedication.RBlock: byte[] buffer>;

        $i2 = lengthof $r3;

        $i3 = $i2 - i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i3, r2, 0, i0);

        return r2;
    }
}
