public class net.sourceforge.plantuml.jasic.Jasic$IfThenStatement extends java.lang.Object implements net.sourceforge.plantuml.jasic.Jasic$Statement
{
    private final net.sourceforge.plantuml.jasic.Jasic$Expression condition;
    private final java.lang.String label;
    final net.sourceforge.plantuml.jasic.Jasic this$0;

    public void <init>(net.sourceforge.plantuml.jasic.Jasic, net.sourceforge.plantuml.jasic.Jasic$Expression, java.lang.String)
    {
        net.sourceforge.plantuml.jasic.Jasic$IfThenStatement r0;
        net.sourceforge.plantuml.jasic.Jasic r1;
        net.sourceforge.plantuml.jasic.Jasic$Expression r2;
        java.lang.String r3;

        r0 := @this: net.sourceforge.plantuml.jasic.Jasic$IfThenStatement;

        r1 := @parameter0: net.sourceforge.plantuml.jasic.Jasic;

        r2 := @parameter1: net.sourceforge.plantuml.jasic.Jasic$Expression;

        r3 := @parameter2: java.lang.String;

        r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: net.sourceforge.plantuml.jasic.Jasic this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: net.sourceforge.plantuml.jasic.Jasic$Expression condition> = r2;

        r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: java.lang.String label> = r3;

        return;
    }

    public void execute()
    {
        net.sourceforge.plantuml.jasic.Jasic$IfThenStatement r0;
        net.sourceforge.plantuml.jasic.Jasic $r1, $r6, $r7;
        java.util.Map $r2, $r8;
        java.lang.String $r3, $r9;
        boolean $z0;
        net.sourceforge.plantuml.jasic.Jasic$Expression $r4;
        net.sourceforge.plantuml.jasic.Jasic$Value $r5;
        double d0;
        byte $b0;
        java.lang.Object $r10;
        java.lang.Integer $r11;
        int $i1;

        r0 := @this: net.sourceforge.plantuml.jasic.Jasic$IfThenStatement;

        $r1 = r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: net.sourceforge.plantuml.jasic.Jasic this$0>;

        $r2 = staticinvoke <net.sourceforge.plantuml.jasic.Jasic: java.util.Map access$200(net.sourceforge.plantuml.jasic.Jasic)>($r1);

        $r3 = r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: java.lang.String label>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        $r4 = r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: net.sourceforge.plantuml.jasic.Jasic$Expression condition>;

        $r5 = interfaceinvoke $r4.<net.sourceforge.plantuml.jasic.Jasic$Expression: net.sourceforge.plantuml.jasic.Jasic$Value evaluate()>();

        d0 = interfaceinvoke $r5.<net.sourceforge.plantuml.jasic.Jasic$Value: double toNumber()>();

        $b0 = d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $r7 = r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: net.sourceforge.plantuml.jasic.Jasic this$0>;

        $r6 = r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: net.sourceforge.plantuml.jasic.Jasic this$0>;

        $r8 = staticinvoke <net.sourceforge.plantuml.jasic.Jasic: java.util.Map access$200(net.sourceforge.plantuml.jasic.Jasic)>($r6);

        $r9 = r0.<net.sourceforge.plantuml.jasic.Jasic$IfThenStatement: java.lang.String label>;

        $r10 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        $r11 = (java.lang.Integer) $r10;

        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        staticinvoke <net.sourceforge.plantuml.jasic.Jasic: int access$302(net.sourceforge.plantuml.jasic.Jasic,int)>($r7, $i1);

     label1:
        return;
    }
}
